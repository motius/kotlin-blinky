
zephyr.elf:     file format elf32-littlearm


Disassembly of section text:

08000000 <_vector_table>:
 8000000:	20000d18 	.word	0x20000d18
 8000004:	08018775 	.word	0x08018775
 8000008:	080187c5 	.word	0x080187c5
 800000c:	08018625 	.word	0x08018625
 8000010:	08018625 	.word	0x08018625
 8000014:	08018625 	.word	0x08018625
 8000018:	08018625 	.word	0x08018625
 800001c:	08018625 	.word	0x08018625
 8000020:	08018625 	.word	0x08018625
 8000024:	08018625 	.word	0x08018625
 8000028:	08018625 	.word	0x08018625
 800002c:	08018279 	.word	0x08018279
 8000030:	08018625 	.word	0x08018625
 8000034:	08018625 	.word	0x08018625
 8000038:	08018235 	.word	0x08018235
 800003c:	080198a5 	.word	0x080198a5

08000040 <_irq_vector_table>:
 8000040:	08018751 08018751 08018751 08018751     Q...Q...Q...Q...
 8000050:	08018751 08018751 08018751 08018751     Q...Q...Q...Q...
 8000060:	08018751 08018751 08018751 08018751     Q...Q...Q...Q...
 8000070:	08018751 08018751 08018751 08018751     Q...Q...Q...Q...
 8000080:	08018751 08018751 08018751 08018751     Q...Q...Q...Q...
 8000090:	08018751 08018751 08018751 08018751     Q...Q...Q...Q...
 80000a0:	08018751 08018751 08018751 08018751     Q...Q...Q...Q...
 80000b0:	08018751 08018751 08018751 08018751     Q...Q...Q...Q...
 80000c0:	08018751 08018751 08018751 08018751     Q...Q...Q...Q...
 80000d0:	08018751 08018751 08018751 08018751     Q...Q...Q...Q...
 80000e0:	08018751 08018751 08018751 08018751     Q...Q...Q...Q...
 80000f0:	08018751 08018751 08018751 08018751     Q...Q...Q...Q...
 8000100:	08018751 08018751 08018751 08018751     Q...Q...Q...Q...
 8000110:	08018751 08018751 08018751 08018751     Q...Q...Q...Q...
 8000120:	08018751 08018751 08018751 08018751     Q...Q...Q...Q...
 8000130:	08018751 08018751 08018751 08018751     Q...Q...Q...Q...
 8000140:	08018751 08018751 08018751 08018751     Q...Q...Q...Q...
 8000150:	08018751 08018751 08018751 08018751     Q...Q...Q...Q...
 8000160:	08018751 08018751 08018751 08018751     Q...Q...Q...Q...
 8000170:	08018751 08018751 08018751 08018751     Q...Q...Q...Q...
 8000180:	08018751 08018751                       Q...Q...

08000188 <_sw_isr_table>:
 8000188:	00000000 080185b9 20003d8c 080191c7     .........=. ....
 8000198:	20003d8c 080191e5 20003d8c 080191ef     .=. .....=. ....
 80001a8:	00000000 080185b9 00000000 080185b9     ................
 80001b8:	20003d8c 08019181 20003d8c 0801918b     .=. .....=. ....
 80001c8:	20003d8c 08019195 20003d8c 0801919f     .=. .....=. ....
 80001d8:	20003d8c 080191a9 00000000 080185b9     .=. ............
 80001e8:	00000000 080185b9 00000000 080185b9     ................
 80001f8:	00000000 080185b9 00000000 080185b9     ................
 8000208:	00000000 080185b9 00000000 080185b9     ................
 8000218:	00000000 080185b9 00000000 080185b9     ................
 8000228:	00000000 080185b9 00000000 080185b9     ................
 8000238:	00000000 080185b9 20003d8c 080191b3     .........=. ....
 8000248:	00000000 080185b9 00000000 080185b9     ................
 8000258:	00000000 080185b9 00000000 080185b9     ................
 8000268:	00000000 080185b9 00000000 080185b9     ................
 8000278:	00000000 080185b9 00000000 080185b9     ................
 8000288:	00000000 080185b9 00000000 080185b9     ................
 8000298:	00000000 080185b9 00000000 080185b9     ................
 80002a8:	00000000 080185b9 00000000 080185b9     ................
 80002b8:	00000000 080185b9 00000000 080185b9     ................
 80002c8:	20003d8c 080191bd 20003d8c 080191d1     .=. .....=. ....
 80002d8:	20003d8c 080191db 00000000 080185b9     .=. ............
 80002e8:	00000000 080185b9 00000000 080185b9     ................
 80002f8:	00000000 080185b9 00000000 080185b9     ................
 8000308:	00000000 080185b9 00000000 080185b9     ................
 8000318:	00000000 080185b9 00000000 080185b9     ................
 8000328:	00000000 080185b9 00000000 080185b9     ................
 8000338:	00000000 080185b9 00000000 080185b9     ................
 8000348:	00000000 080185b9 00000000 080185b9     ................
 8000358:	00000000 080185b9 00000000 080185b9     ................
 8000368:	00000000 080185b9 00000000 080185b9     ................
 8000378:	00000000 080185b9 00000000 080185b9     ................
 8000388:	00000000 080185b9 00000000 080185b9     ................
 8000398:	00000000 080185b9 00000000 080185b9     ................
 80003a8:	00000000 080185b9 00000000 080185b9     ................
 80003b8:	00000000 080185b9 00000000 080185b9     ................
 80003c8:	00000000 080185b9 00000000 080185b9     ................
 80003d8:	00000000 080185b9 00000000 080185b9     ................
 80003e8:	00000000 080185b9 00000000 080185b9     ................
 80003f8:	00000000 080185b9 00000000 080185b9     ................
 8000408:	00000000 080185b9 00000000 080185b9     ................

08000418 <__aeabi_drsub>:
 8000418:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 800041c:	e002      	b.n	8000424 <__adddf3>
 800041e:	bf00      	nop

08000420 <__aeabi_dsub>:
 8000420:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08000424 <__adddf3>:
 8000424:	b530      	push	{r4, r5, lr}
 8000426:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800042a:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800042e:	ea94 0f05 	teq	r4, r5
 8000432:	bf08      	it	eq
 8000434:	ea90 0f02 	teqeq	r0, r2
 8000438:	bf1f      	itttt	ne
 800043a:	ea54 0c00 	orrsne.w	ip, r4, r0
 800043e:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000442:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000446:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800044a:	f000 80e2 	beq.w	8000612 <__adddf3+0x1ee>
 800044e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000452:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000456:	bfb8      	it	lt
 8000458:	426d      	neglt	r5, r5
 800045a:	dd0c      	ble.n	8000476 <__adddf3+0x52>
 800045c:	442c      	add	r4, r5
 800045e:	ea80 0202 	eor.w	r2, r0, r2
 8000462:	ea81 0303 	eor.w	r3, r1, r3
 8000466:	ea82 0000 	eor.w	r0, r2, r0
 800046a:	ea83 0101 	eor.w	r1, r3, r1
 800046e:	ea80 0202 	eor.w	r2, r0, r2
 8000472:	ea81 0303 	eor.w	r3, r1, r3
 8000476:	2d36      	cmp	r5, #54	; 0x36
 8000478:	bf88      	it	hi
 800047a:	bd30      	pophi	{r4, r5, pc}
 800047c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000480:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000484:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000488:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800048c:	d002      	beq.n	8000494 <__adddf3+0x70>
 800048e:	4240      	negs	r0, r0
 8000490:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000494:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000498:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800049c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80004a0:	d002      	beq.n	80004a8 <__adddf3+0x84>
 80004a2:	4252      	negs	r2, r2
 80004a4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80004a8:	ea94 0f05 	teq	r4, r5
 80004ac:	f000 80a7 	beq.w	80005fe <__adddf3+0x1da>
 80004b0:	f1a4 0401 	sub.w	r4, r4, #1
 80004b4:	f1d5 0e20 	rsbs	lr, r5, #32
 80004b8:	db0d      	blt.n	80004d6 <__adddf3+0xb2>
 80004ba:	fa02 fc0e 	lsl.w	ip, r2, lr
 80004be:	fa22 f205 	lsr.w	r2, r2, r5
 80004c2:	1880      	adds	r0, r0, r2
 80004c4:	f141 0100 	adc.w	r1, r1, #0
 80004c8:	fa03 f20e 	lsl.w	r2, r3, lr
 80004cc:	1880      	adds	r0, r0, r2
 80004ce:	fa43 f305 	asr.w	r3, r3, r5
 80004d2:	4159      	adcs	r1, r3
 80004d4:	e00e      	b.n	80004f4 <__adddf3+0xd0>
 80004d6:	f1a5 0520 	sub.w	r5, r5, #32
 80004da:	f10e 0e20 	add.w	lr, lr, #32
 80004de:	2a01      	cmp	r2, #1
 80004e0:	fa03 fc0e 	lsl.w	ip, r3, lr
 80004e4:	bf28      	it	cs
 80004e6:	f04c 0c02 	orrcs.w	ip, ip, #2
 80004ea:	fa43 f305 	asr.w	r3, r3, r5
 80004ee:	18c0      	adds	r0, r0, r3
 80004f0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80004f4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004f8:	d507      	bpl.n	800050a <__adddf3+0xe6>
 80004fa:	f04f 0e00 	mov.w	lr, #0
 80004fe:	f1dc 0c00 	rsbs	ip, ip, #0
 8000502:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000506:	eb6e 0101 	sbc.w	r1, lr, r1
 800050a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800050e:	d31b      	bcc.n	8000548 <__adddf3+0x124>
 8000510:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8000514:	d30c      	bcc.n	8000530 <__adddf3+0x10c>
 8000516:	0849      	lsrs	r1, r1, #1
 8000518:	ea5f 0030 	movs.w	r0, r0, rrx
 800051c:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000520:	f104 0401 	add.w	r4, r4, #1
 8000524:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000528:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 800052c:	f080 809a 	bcs.w	8000664 <__adddf3+0x240>
 8000530:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000534:	bf08      	it	eq
 8000536:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800053a:	f150 0000 	adcs.w	r0, r0, #0
 800053e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000542:	ea41 0105 	orr.w	r1, r1, r5
 8000546:	bd30      	pop	{r4, r5, pc}
 8000548:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800054c:	4140      	adcs	r0, r0
 800054e:	eb41 0101 	adc.w	r1, r1, r1
 8000552:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000556:	f1a4 0401 	sub.w	r4, r4, #1
 800055a:	d1e9      	bne.n	8000530 <__adddf3+0x10c>
 800055c:	f091 0f00 	teq	r1, #0
 8000560:	bf04      	itt	eq
 8000562:	4601      	moveq	r1, r0
 8000564:	2000      	moveq	r0, #0
 8000566:	fab1 f381 	clz	r3, r1
 800056a:	bf08      	it	eq
 800056c:	3320      	addeq	r3, #32
 800056e:	f1a3 030b 	sub.w	r3, r3, #11
 8000572:	f1b3 0220 	subs.w	r2, r3, #32
 8000576:	da0c      	bge.n	8000592 <__adddf3+0x16e>
 8000578:	320c      	adds	r2, #12
 800057a:	dd08      	ble.n	800058e <__adddf3+0x16a>
 800057c:	f102 0c14 	add.w	ip, r2, #20
 8000580:	f1c2 020c 	rsb	r2, r2, #12
 8000584:	fa01 f00c 	lsl.w	r0, r1, ip
 8000588:	fa21 f102 	lsr.w	r1, r1, r2
 800058c:	e00c      	b.n	80005a8 <__adddf3+0x184>
 800058e:	f102 0214 	add.w	r2, r2, #20
 8000592:	bfd8      	it	le
 8000594:	f1c2 0c20 	rsble	ip, r2, #32
 8000598:	fa01 f102 	lsl.w	r1, r1, r2
 800059c:	fa20 fc0c 	lsr.w	ip, r0, ip
 80005a0:	bfdc      	itt	le
 80005a2:	ea41 010c 	orrle.w	r1, r1, ip
 80005a6:	4090      	lslle	r0, r2
 80005a8:	1ae4      	subs	r4, r4, r3
 80005aa:	bfa2      	ittt	ge
 80005ac:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80005b0:	4329      	orrge	r1, r5
 80005b2:	bd30      	popge	{r4, r5, pc}
 80005b4:	ea6f 0404 	mvn.w	r4, r4
 80005b8:	3c1f      	subs	r4, #31
 80005ba:	da1c      	bge.n	80005f6 <__adddf3+0x1d2>
 80005bc:	340c      	adds	r4, #12
 80005be:	dc0e      	bgt.n	80005de <__adddf3+0x1ba>
 80005c0:	f104 0414 	add.w	r4, r4, #20
 80005c4:	f1c4 0220 	rsb	r2, r4, #32
 80005c8:	fa20 f004 	lsr.w	r0, r0, r4
 80005cc:	fa01 f302 	lsl.w	r3, r1, r2
 80005d0:	ea40 0003 	orr.w	r0, r0, r3
 80005d4:	fa21 f304 	lsr.w	r3, r1, r4
 80005d8:	ea45 0103 	orr.w	r1, r5, r3
 80005dc:	bd30      	pop	{r4, r5, pc}
 80005de:	f1c4 040c 	rsb	r4, r4, #12
 80005e2:	f1c4 0220 	rsb	r2, r4, #32
 80005e6:	fa20 f002 	lsr.w	r0, r0, r2
 80005ea:	fa01 f304 	lsl.w	r3, r1, r4
 80005ee:	ea40 0003 	orr.w	r0, r0, r3
 80005f2:	4629      	mov	r1, r5
 80005f4:	bd30      	pop	{r4, r5, pc}
 80005f6:	fa21 f004 	lsr.w	r0, r1, r4
 80005fa:	4629      	mov	r1, r5
 80005fc:	bd30      	pop	{r4, r5, pc}
 80005fe:	f094 0f00 	teq	r4, #0
 8000602:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8000606:	bf06      	itte	eq
 8000608:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 800060c:	3401      	addeq	r4, #1
 800060e:	3d01      	subne	r5, #1
 8000610:	e74e      	b.n	80004b0 <__adddf3+0x8c>
 8000612:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000616:	bf18      	it	ne
 8000618:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800061c:	d029      	beq.n	8000672 <__adddf3+0x24e>
 800061e:	ea94 0f05 	teq	r4, r5
 8000622:	bf08      	it	eq
 8000624:	ea90 0f02 	teqeq	r0, r2
 8000628:	d005      	beq.n	8000636 <__adddf3+0x212>
 800062a:	ea54 0c00 	orrs.w	ip, r4, r0
 800062e:	bf04      	itt	eq
 8000630:	4619      	moveq	r1, r3
 8000632:	4610      	moveq	r0, r2
 8000634:	bd30      	pop	{r4, r5, pc}
 8000636:	ea91 0f03 	teq	r1, r3
 800063a:	bf1e      	ittt	ne
 800063c:	2100      	movne	r1, #0
 800063e:	2000      	movne	r0, #0
 8000640:	bd30      	popne	{r4, r5, pc}
 8000642:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000646:	d105      	bne.n	8000654 <__adddf3+0x230>
 8000648:	0040      	lsls	r0, r0, #1
 800064a:	4149      	adcs	r1, r1
 800064c:	bf28      	it	cs
 800064e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8000652:	bd30      	pop	{r4, r5, pc}
 8000654:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000658:	bf3c      	itt	cc
 800065a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800065e:	bd30      	popcc	{r4, r5, pc}
 8000660:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000664:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000668:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800066c:	f04f 0000 	mov.w	r0, #0
 8000670:	bd30      	pop	{r4, r5, pc}
 8000672:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000676:	bf1a      	itte	ne
 8000678:	4619      	movne	r1, r3
 800067a:	4610      	movne	r0, r2
 800067c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000680:	bf1c      	itt	ne
 8000682:	460b      	movne	r3, r1
 8000684:	4602      	movne	r2, r0
 8000686:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800068a:	bf06      	itte	eq
 800068c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000690:	ea91 0f03 	teqeq	r1, r3
 8000694:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000698:	bd30      	pop	{r4, r5, pc}
 800069a:	bf00      	nop

0800069c <__aeabi_ui2d>:
 800069c:	f090 0f00 	teq	r0, #0
 80006a0:	bf04      	itt	eq
 80006a2:	2100      	moveq	r1, #0
 80006a4:	4770      	bxeq	lr
 80006a6:	b530      	push	{r4, r5, lr}
 80006a8:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80006ac:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80006b0:	f04f 0500 	mov.w	r5, #0
 80006b4:	f04f 0100 	mov.w	r1, #0
 80006b8:	e750      	b.n	800055c <__adddf3+0x138>
 80006ba:	bf00      	nop

080006bc <__aeabi_i2d>:
 80006bc:	f090 0f00 	teq	r0, #0
 80006c0:	bf04      	itt	eq
 80006c2:	2100      	moveq	r1, #0
 80006c4:	4770      	bxeq	lr
 80006c6:	b530      	push	{r4, r5, lr}
 80006c8:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80006cc:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80006d0:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80006d4:	bf48      	it	mi
 80006d6:	4240      	negmi	r0, r0
 80006d8:	f04f 0100 	mov.w	r1, #0
 80006dc:	e73e      	b.n	800055c <__adddf3+0x138>
 80006de:	bf00      	nop

080006e0 <__aeabi_f2d>:
 80006e0:	0042      	lsls	r2, r0, #1
 80006e2:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80006e6:	ea4f 0131 	mov.w	r1, r1, rrx
 80006ea:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80006ee:	bf1f      	itttt	ne
 80006f0:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80006f4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80006f8:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80006fc:	4770      	bxne	lr
 80006fe:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 8000702:	bf08      	it	eq
 8000704:	4770      	bxeq	lr
 8000706:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 800070a:	bf04      	itt	eq
 800070c:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000710:	4770      	bxeq	lr
 8000712:	b530      	push	{r4, r5, lr}
 8000714:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000718:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800071c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000720:	e71c      	b.n	800055c <__adddf3+0x138>
 8000722:	bf00      	nop

08000724 <__aeabi_ul2d>:
 8000724:	ea50 0201 	orrs.w	r2, r0, r1
 8000728:	bf08      	it	eq
 800072a:	4770      	bxeq	lr
 800072c:	b530      	push	{r4, r5, lr}
 800072e:	f04f 0500 	mov.w	r5, #0
 8000732:	e00a      	b.n	800074a <__aeabi_l2d+0x16>

08000734 <__aeabi_l2d>:
 8000734:	ea50 0201 	orrs.w	r2, r0, r1
 8000738:	bf08      	it	eq
 800073a:	4770      	bxeq	lr
 800073c:	b530      	push	{r4, r5, lr}
 800073e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8000742:	d502      	bpl.n	800074a <__aeabi_l2d+0x16>
 8000744:	4240      	negs	r0, r0
 8000746:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800074a:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800074e:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000752:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000756:	f43f aed8 	beq.w	800050a <__adddf3+0xe6>
 800075a:	f04f 0203 	mov.w	r2, #3
 800075e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000762:	bf18      	it	ne
 8000764:	3203      	addne	r2, #3
 8000766:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800076a:	bf18      	it	ne
 800076c:	3203      	addne	r2, #3
 800076e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000772:	f1c2 0320 	rsb	r3, r2, #32
 8000776:	fa00 fc03 	lsl.w	ip, r0, r3
 800077a:	fa20 f002 	lsr.w	r0, r0, r2
 800077e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000782:	ea40 000e 	orr.w	r0, r0, lr
 8000786:	fa21 f102 	lsr.w	r1, r1, r2
 800078a:	4414      	add	r4, r2
 800078c:	e6bd      	b.n	800050a <__adddf3+0xe6>
 800078e:	bf00      	nop

08000790 <__aeabi_dmul>:
 8000790:	b570      	push	{r4, r5, r6, lr}
 8000792:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000796:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800079a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800079e:	bf1d      	ittte	ne
 80007a0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80007a4:	ea94 0f0c 	teqne	r4, ip
 80007a8:	ea95 0f0c 	teqne	r5, ip
 80007ac:	f000 f8de 	bleq	800096c <__aeabi_dmul+0x1dc>
 80007b0:	442c      	add	r4, r5
 80007b2:	ea81 0603 	eor.w	r6, r1, r3
 80007b6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80007ba:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80007be:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80007c2:	bf18      	it	ne
 80007c4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80007c8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80007cc:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80007d0:	d038      	beq.n	8000844 <__aeabi_dmul+0xb4>
 80007d2:	fba0 ce02 	umull	ip, lr, r0, r2
 80007d6:	f04f 0500 	mov.w	r5, #0
 80007da:	fbe1 e502 	umlal	lr, r5, r1, r2
 80007de:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80007e2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80007e6:	f04f 0600 	mov.w	r6, #0
 80007ea:	fbe1 5603 	umlal	r5, r6, r1, r3
 80007ee:	f09c 0f00 	teq	ip, #0
 80007f2:	bf18      	it	ne
 80007f4:	f04e 0e01 	orrne.w	lr, lr, #1
 80007f8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80007fc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000800:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000804:	d204      	bcs.n	8000810 <__aeabi_dmul+0x80>
 8000806:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 800080a:	416d      	adcs	r5, r5
 800080c:	eb46 0606 	adc.w	r6, r6, r6
 8000810:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000814:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000818:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800081c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000820:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000824:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000828:	bf88      	it	hi
 800082a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800082e:	d81e      	bhi.n	800086e <__aeabi_dmul+0xde>
 8000830:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8000834:	bf08      	it	eq
 8000836:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800083a:	f150 0000 	adcs.w	r0, r0, #0
 800083e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000842:	bd70      	pop	{r4, r5, r6, pc}
 8000844:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000848:	ea46 0101 	orr.w	r1, r6, r1
 800084c:	ea40 0002 	orr.w	r0, r0, r2
 8000850:	ea81 0103 	eor.w	r1, r1, r3
 8000854:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000858:	bfc2      	ittt	gt
 800085a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800085e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000862:	bd70      	popgt	{r4, r5, r6, pc}
 8000864:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000868:	f04f 0e00 	mov.w	lr, #0
 800086c:	3c01      	subs	r4, #1
 800086e:	f300 80ab 	bgt.w	80009c8 <__aeabi_dmul+0x238>
 8000872:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000876:	bfde      	ittt	le
 8000878:	2000      	movle	r0, #0
 800087a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800087e:	bd70      	pople	{r4, r5, r6, pc}
 8000880:	f1c4 0400 	rsb	r4, r4, #0
 8000884:	3c20      	subs	r4, #32
 8000886:	da35      	bge.n	80008f4 <__aeabi_dmul+0x164>
 8000888:	340c      	adds	r4, #12
 800088a:	dc1b      	bgt.n	80008c4 <__aeabi_dmul+0x134>
 800088c:	f104 0414 	add.w	r4, r4, #20
 8000890:	f1c4 0520 	rsb	r5, r4, #32
 8000894:	fa00 f305 	lsl.w	r3, r0, r5
 8000898:	fa20 f004 	lsr.w	r0, r0, r4
 800089c:	fa01 f205 	lsl.w	r2, r1, r5
 80008a0:	ea40 0002 	orr.w	r0, r0, r2
 80008a4:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80008a8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80008ac:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80008b0:	fa21 f604 	lsr.w	r6, r1, r4
 80008b4:	eb42 0106 	adc.w	r1, r2, r6
 80008b8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80008bc:	bf08      	it	eq
 80008be:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80008c2:	bd70      	pop	{r4, r5, r6, pc}
 80008c4:	f1c4 040c 	rsb	r4, r4, #12
 80008c8:	f1c4 0520 	rsb	r5, r4, #32
 80008cc:	fa00 f304 	lsl.w	r3, r0, r4
 80008d0:	fa20 f005 	lsr.w	r0, r0, r5
 80008d4:	fa01 f204 	lsl.w	r2, r1, r4
 80008d8:	ea40 0002 	orr.w	r0, r0, r2
 80008dc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80008e0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80008e4:	f141 0100 	adc.w	r1, r1, #0
 80008e8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80008ec:	bf08      	it	eq
 80008ee:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80008f2:	bd70      	pop	{r4, r5, r6, pc}
 80008f4:	f1c4 0520 	rsb	r5, r4, #32
 80008f8:	fa00 f205 	lsl.w	r2, r0, r5
 80008fc:	ea4e 0e02 	orr.w	lr, lr, r2
 8000900:	fa20 f304 	lsr.w	r3, r0, r4
 8000904:	fa01 f205 	lsl.w	r2, r1, r5
 8000908:	ea43 0302 	orr.w	r3, r3, r2
 800090c:	fa21 f004 	lsr.w	r0, r1, r4
 8000910:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000914:	fa21 f204 	lsr.w	r2, r1, r4
 8000918:	ea20 0002 	bic.w	r0, r0, r2
 800091c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000920:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000924:	bf08      	it	eq
 8000926:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800092a:	bd70      	pop	{r4, r5, r6, pc}
 800092c:	f094 0f00 	teq	r4, #0
 8000930:	d10f      	bne.n	8000952 <__aeabi_dmul+0x1c2>
 8000932:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8000936:	0040      	lsls	r0, r0, #1
 8000938:	eb41 0101 	adc.w	r1, r1, r1
 800093c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000940:	bf08      	it	eq
 8000942:	3c01      	subeq	r4, #1
 8000944:	d0f7      	beq.n	8000936 <__aeabi_dmul+0x1a6>
 8000946:	ea41 0106 	orr.w	r1, r1, r6
 800094a:	f095 0f00 	teq	r5, #0
 800094e:	bf18      	it	ne
 8000950:	4770      	bxne	lr
 8000952:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000956:	0052      	lsls	r2, r2, #1
 8000958:	eb43 0303 	adc.w	r3, r3, r3
 800095c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000960:	bf08      	it	eq
 8000962:	3d01      	subeq	r5, #1
 8000964:	d0f7      	beq.n	8000956 <__aeabi_dmul+0x1c6>
 8000966:	ea43 0306 	orr.w	r3, r3, r6
 800096a:	4770      	bx	lr
 800096c:	ea94 0f0c 	teq	r4, ip
 8000970:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000974:	bf18      	it	ne
 8000976:	ea95 0f0c 	teqne	r5, ip
 800097a:	d00c      	beq.n	8000996 <__aeabi_dmul+0x206>
 800097c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000980:	bf18      	it	ne
 8000982:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000986:	d1d1      	bne.n	800092c <__aeabi_dmul+0x19c>
 8000988:	ea81 0103 	eor.w	r1, r1, r3
 800098c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000990:	f04f 0000 	mov.w	r0, #0
 8000994:	bd70      	pop	{r4, r5, r6, pc}
 8000996:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800099a:	bf06      	itte	eq
 800099c:	4610      	moveq	r0, r2
 800099e:	4619      	moveq	r1, r3
 80009a0:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80009a4:	d019      	beq.n	80009da <__aeabi_dmul+0x24a>
 80009a6:	ea94 0f0c 	teq	r4, ip
 80009aa:	d102      	bne.n	80009b2 <__aeabi_dmul+0x222>
 80009ac:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80009b0:	d113      	bne.n	80009da <__aeabi_dmul+0x24a>
 80009b2:	ea95 0f0c 	teq	r5, ip
 80009b6:	d105      	bne.n	80009c4 <__aeabi_dmul+0x234>
 80009b8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80009bc:	bf1c      	itt	ne
 80009be:	4610      	movne	r0, r2
 80009c0:	4619      	movne	r1, r3
 80009c2:	d10a      	bne.n	80009da <__aeabi_dmul+0x24a>
 80009c4:	ea81 0103 	eor.w	r1, r1, r3
 80009c8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80009cc:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80009d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80009d4:	f04f 0000 	mov.w	r0, #0
 80009d8:	bd70      	pop	{r4, r5, r6, pc}
 80009da:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80009de:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80009e2:	bd70      	pop	{r4, r5, r6, pc}

080009e4 <__aeabi_ddiv>:
 80009e4:	b570      	push	{r4, r5, r6, lr}
 80009e6:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80009ea:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80009ee:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80009f2:	bf1d      	ittte	ne
 80009f4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80009f8:	ea94 0f0c 	teqne	r4, ip
 80009fc:	ea95 0f0c 	teqne	r5, ip
 8000a00:	f000 f8a7 	bleq	8000b52 <__aeabi_ddiv+0x16e>
 8000a04:	eba4 0405 	sub.w	r4, r4, r5
 8000a08:	ea81 0e03 	eor.w	lr, r1, r3
 8000a0c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a10:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000a14:	f000 8088 	beq.w	8000b28 <__aeabi_ddiv+0x144>
 8000a18:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000a1c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000a20:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000a24:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000a28:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000a2c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000a30:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000a34:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000a38:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000a3c:	429d      	cmp	r5, r3
 8000a3e:	bf08      	it	eq
 8000a40:	4296      	cmpeq	r6, r2
 8000a42:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8000a46:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000a4a:	d202      	bcs.n	8000a52 <__aeabi_ddiv+0x6e>
 8000a4c:	085b      	lsrs	r3, r3, #1
 8000a4e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000a52:	1ab6      	subs	r6, r6, r2
 8000a54:	eb65 0503 	sbc.w	r5, r5, r3
 8000a58:	085b      	lsrs	r3, r3, #1
 8000a5a:	ea4f 0232 	mov.w	r2, r2, rrx
 8000a5e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8000a62:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000a66:	ebb6 0e02 	subs.w	lr, r6, r2
 8000a6a:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000a6e:	bf22      	ittt	cs
 8000a70:	1ab6      	subcs	r6, r6, r2
 8000a72:	4675      	movcs	r5, lr
 8000a74:	ea40 000c 	orrcs.w	r0, r0, ip
 8000a78:	085b      	lsrs	r3, r3, #1
 8000a7a:	ea4f 0232 	mov.w	r2, r2, rrx
 8000a7e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000a82:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000a86:	bf22      	ittt	cs
 8000a88:	1ab6      	subcs	r6, r6, r2
 8000a8a:	4675      	movcs	r5, lr
 8000a8c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000a90:	085b      	lsrs	r3, r3, #1
 8000a92:	ea4f 0232 	mov.w	r2, r2, rrx
 8000a96:	ebb6 0e02 	subs.w	lr, r6, r2
 8000a9a:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000a9e:	bf22      	ittt	cs
 8000aa0:	1ab6      	subcs	r6, r6, r2
 8000aa2:	4675      	movcs	r5, lr
 8000aa4:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000aa8:	085b      	lsrs	r3, r3, #1
 8000aaa:	ea4f 0232 	mov.w	r2, r2, rrx
 8000aae:	ebb6 0e02 	subs.w	lr, r6, r2
 8000ab2:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000ab6:	bf22      	ittt	cs
 8000ab8:	1ab6      	subcs	r6, r6, r2
 8000aba:	4675      	movcs	r5, lr
 8000abc:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000ac0:	ea55 0e06 	orrs.w	lr, r5, r6
 8000ac4:	d018      	beq.n	8000af8 <__aeabi_ddiv+0x114>
 8000ac6:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000aca:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000ace:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000ad2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000ad6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000ada:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000ade:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000ae2:	d1c0      	bne.n	8000a66 <__aeabi_ddiv+0x82>
 8000ae4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000ae8:	d10b      	bne.n	8000b02 <__aeabi_ddiv+0x11e>
 8000aea:	ea41 0100 	orr.w	r1, r1, r0
 8000aee:	f04f 0000 	mov.w	r0, #0
 8000af2:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000af6:	e7b6      	b.n	8000a66 <__aeabi_ddiv+0x82>
 8000af8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000afc:	bf04      	itt	eq
 8000afe:	4301      	orreq	r1, r0
 8000b00:	2000      	moveq	r0, #0
 8000b02:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000b06:	bf88      	it	hi
 8000b08:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000b0c:	f63f aeaf 	bhi.w	800086e <__aeabi_dmul+0xde>
 8000b10:	ebb5 0c03 	subs.w	ip, r5, r3
 8000b14:	bf04      	itt	eq
 8000b16:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000b1a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000b1e:	f150 0000 	adcs.w	r0, r0, #0
 8000b22:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000b26:	bd70      	pop	{r4, r5, r6, pc}
 8000b28:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000b2c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000b30:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000b34:	bfc2      	ittt	gt
 8000b36:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000b3a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000b3e:	bd70      	popgt	{r4, r5, r6, pc}
 8000b40:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b44:	f04f 0e00 	mov.w	lr, #0
 8000b48:	3c01      	subs	r4, #1
 8000b4a:	e690      	b.n	800086e <__aeabi_dmul+0xde>
 8000b4c:	ea45 0e06 	orr.w	lr, r5, r6
 8000b50:	e68d      	b.n	800086e <__aeabi_dmul+0xde>
 8000b52:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000b56:	ea94 0f0c 	teq	r4, ip
 8000b5a:	bf08      	it	eq
 8000b5c:	ea95 0f0c 	teqeq	r5, ip
 8000b60:	f43f af3b 	beq.w	80009da <__aeabi_dmul+0x24a>
 8000b64:	ea94 0f0c 	teq	r4, ip
 8000b68:	d10a      	bne.n	8000b80 <__aeabi_ddiv+0x19c>
 8000b6a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000b6e:	f47f af34 	bne.w	80009da <__aeabi_dmul+0x24a>
 8000b72:	ea95 0f0c 	teq	r5, ip
 8000b76:	f47f af25 	bne.w	80009c4 <__aeabi_dmul+0x234>
 8000b7a:	4610      	mov	r0, r2
 8000b7c:	4619      	mov	r1, r3
 8000b7e:	e72c      	b.n	80009da <__aeabi_dmul+0x24a>
 8000b80:	ea95 0f0c 	teq	r5, ip
 8000b84:	d106      	bne.n	8000b94 <__aeabi_ddiv+0x1b0>
 8000b86:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000b8a:	f43f aefd 	beq.w	8000988 <__aeabi_dmul+0x1f8>
 8000b8e:	4610      	mov	r0, r2
 8000b90:	4619      	mov	r1, r3
 8000b92:	e722      	b.n	80009da <__aeabi_dmul+0x24a>
 8000b94:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000b98:	bf18      	it	ne
 8000b9a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000b9e:	f47f aec5 	bne.w	800092c <__aeabi_dmul+0x19c>
 8000ba2:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000ba6:	f47f af0d 	bne.w	80009c4 <__aeabi_dmul+0x234>
 8000baa:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000bae:	f47f aeeb 	bne.w	8000988 <__aeabi_dmul+0x1f8>
 8000bb2:	e712      	b.n	80009da <__aeabi_dmul+0x24a>

08000bb4 <__gedf2>:
 8000bb4:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8000bb8:	e006      	b.n	8000bc8 <__cmpdf2+0x4>
 8000bba:	bf00      	nop

08000bbc <__ledf2>:
 8000bbc:	f04f 0c01 	mov.w	ip, #1
 8000bc0:	e002      	b.n	8000bc8 <__cmpdf2+0x4>
 8000bc2:	bf00      	nop

08000bc4 <__cmpdf2>:
 8000bc4:	f04f 0c01 	mov.w	ip, #1
 8000bc8:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000bcc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000bd0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000bd4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000bd8:	bf18      	it	ne
 8000bda:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000bde:	d01b      	beq.n	8000c18 <__cmpdf2+0x54>
 8000be0:	b001      	add	sp, #4
 8000be2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000be6:	bf0c      	ite	eq
 8000be8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000bec:	ea91 0f03 	teqne	r1, r3
 8000bf0:	bf02      	ittt	eq
 8000bf2:	ea90 0f02 	teqeq	r0, r2
 8000bf6:	2000      	moveq	r0, #0
 8000bf8:	4770      	bxeq	lr
 8000bfa:	f110 0f00 	cmn.w	r0, #0
 8000bfe:	ea91 0f03 	teq	r1, r3
 8000c02:	bf58      	it	pl
 8000c04:	4299      	cmppl	r1, r3
 8000c06:	bf08      	it	eq
 8000c08:	4290      	cmpeq	r0, r2
 8000c0a:	bf2c      	ite	cs
 8000c0c:	17d8      	asrcs	r0, r3, #31
 8000c0e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000c12:	f040 0001 	orr.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000c1c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000c20:	d102      	bne.n	8000c28 <__cmpdf2+0x64>
 8000c22:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000c26:	d107      	bne.n	8000c38 <__cmpdf2+0x74>
 8000c28:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000c2c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000c30:	d1d6      	bne.n	8000be0 <__cmpdf2+0x1c>
 8000c32:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000c36:	d0d3      	beq.n	8000be0 <__cmpdf2+0x1c>
 8000c38:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000c3c:	4770      	bx	lr
 8000c3e:	bf00      	nop

08000c40 <__aeabi_cdrcmple>:
 8000c40:	4684      	mov	ip, r0
 8000c42:	4610      	mov	r0, r2
 8000c44:	4662      	mov	r2, ip
 8000c46:	468c      	mov	ip, r1
 8000c48:	4619      	mov	r1, r3
 8000c4a:	4663      	mov	r3, ip
 8000c4c:	e000      	b.n	8000c50 <__aeabi_cdcmpeq>
 8000c4e:	bf00      	nop

08000c50 <__aeabi_cdcmpeq>:
 8000c50:	b501      	push	{r0, lr}
 8000c52:	f7ff ffb7 	bl	8000bc4 <__cmpdf2>
 8000c56:	2800      	cmp	r0, #0
 8000c58:	bf48      	it	mi
 8000c5a:	f110 0f00 	cmnmi.w	r0, #0
 8000c5e:	bd01      	pop	{r0, pc}

08000c60 <__aeabi_dcmpeq>:
 8000c60:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000c64:	f7ff fff4 	bl	8000c50 <__aeabi_cdcmpeq>
 8000c68:	bf0c      	ite	eq
 8000c6a:	2001      	moveq	r0, #1
 8000c6c:	2000      	movne	r0, #0
 8000c6e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000c72:	bf00      	nop

08000c74 <__aeabi_dcmplt>:
 8000c74:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000c78:	f7ff ffea 	bl	8000c50 <__aeabi_cdcmpeq>
 8000c7c:	bf34      	ite	cc
 8000c7e:	2001      	movcc	r0, #1
 8000c80:	2000      	movcs	r0, #0
 8000c82:	f85d fb08 	ldr.w	pc, [sp], #8
 8000c86:	bf00      	nop

08000c88 <__aeabi_dcmple>:
 8000c88:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000c8c:	f7ff ffe0 	bl	8000c50 <__aeabi_cdcmpeq>
 8000c90:	bf94      	ite	ls
 8000c92:	2001      	movls	r0, #1
 8000c94:	2000      	movhi	r0, #0
 8000c96:	f85d fb08 	ldr.w	pc, [sp], #8
 8000c9a:	bf00      	nop

08000c9c <__aeabi_dcmpge>:
 8000c9c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ca0:	f7ff ffce 	bl	8000c40 <__aeabi_cdrcmple>
 8000ca4:	bf94      	ite	ls
 8000ca6:	2001      	movls	r0, #1
 8000ca8:	2000      	movhi	r0, #0
 8000caa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000cae:	bf00      	nop

08000cb0 <__aeabi_dcmpgt>:
 8000cb0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000cb4:	f7ff ffc4 	bl	8000c40 <__aeabi_cdrcmple>
 8000cb8:	bf34      	ite	cc
 8000cba:	2001      	movcc	r0, #1
 8000cbc:	2000      	movcs	r0, #0
 8000cbe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000cc2:	bf00      	nop

08000cc4 <__aeabi_dcmpun>:
 8000cc4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000cc8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ccc:	d102      	bne.n	8000cd4 <__aeabi_dcmpun+0x10>
 8000cce:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000cd2:	d10a      	bne.n	8000cea <__aeabi_dcmpun+0x26>
 8000cd4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000cd8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000cdc:	d102      	bne.n	8000ce4 <__aeabi_dcmpun+0x20>
 8000cde:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ce2:	d102      	bne.n	8000cea <__aeabi_dcmpun+0x26>
 8000ce4:	f04f 0000 	mov.w	r0, #0
 8000ce8:	4770      	bx	lr
 8000cea:	f04f 0001 	mov.w	r0, #1
 8000cee:	4770      	bx	lr

08000cf0 <__aeabi_ldivmod>:
 8000cf0:	b97b      	cbnz	r3, 8000d12 <__aeabi_ldivmod+0x22>
 8000cf2:	b972      	cbnz	r2, 8000d12 <__aeabi_ldivmod+0x22>
 8000cf4:	2900      	cmp	r1, #0
 8000cf6:	bfbe      	ittt	lt
 8000cf8:	2000      	movlt	r0, #0
 8000cfa:	f04f 4100 	movlt.w	r1, #2147483648	; 0x80000000
 8000cfe:	e006      	blt.n	8000d0e <__aeabi_ldivmod+0x1e>
 8000d00:	bf08      	it	eq
 8000d02:	2800      	cmpeq	r0, #0
 8000d04:	bf1c      	itt	ne
 8000d06:	f06f 4100 	mvnne.w	r1, #2147483648	; 0x80000000
 8000d0a:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8000d0e:	f000 bab5 	b.w	800127c <__aeabi_idiv0>
 8000d12:	f1ad 0c08 	sub.w	ip, sp, #8
 8000d16:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000d1a:	2900      	cmp	r1, #0
 8000d1c:	db09      	blt.n	8000d32 <__aeabi_ldivmod+0x42>
 8000d1e:	2b00      	cmp	r3, #0
 8000d20:	db1a      	blt.n	8000d58 <__aeabi_ldivmod+0x68>
 8000d22:	f000 f86f 	bl	8000e04 <__udivmoddi4>
 8000d26:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000d2a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000d2e:	b004      	add	sp, #16
 8000d30:	4770      	bx	lr
 8000d32:	4240      	negs	r0, r0
 8000d34:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d38:	2b00      	cmp	r3, #0
 8000d3a:	db1b      	blt.n	8000d74 <__aeabi_ldivmod+0x84>
 8000d3c:	f000 f862 	bl	8000e04 <__udivmoddi4>
 8000d40:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000d44:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000d48:	b004      	add	sp, #16
 8000d4a:	4240      	negs	r0, r0
 8000d4c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d50:	4252      	negs	r2, r2
 8000d52:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000d56:	4770      	bx	lr
 8000d58:	4252      	negs	r2, r2
 8000d5a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000d5e:	f000 f851 	bl	8000e04 <__udivmoddi4>
 8000d62:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000d66:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000d6a:	b004      	add	sp, #16
 8000d6c:	4240      	negs	r0, r0
 8000d6e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d72:	4770      	bx	lr
 8000d74:	4252      	negs	r2, r2
 8000d76:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000d7a:	f000 f843 	bl	8000e04 <__udivmoddi4>
 8000d7e:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000d82:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000d86:	b004      	add	sp, #16
 8000d88:	4252      	negs	r2, r2
 8000d8a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000d8e:	4770      	bx	lr

08000d90 <__aeabi_uldivmod>:
 8000d90:	b953      	cbnz	r3, 8000da8 <__aeabi_uldivmod+0x18>
 8000d92:	b94a      	cbnz	r2, 8000da8 <__aeabi_uldivmod+0x18>
 8000d94:	2900      	cmp	r1, #0
 8000d96:	bf08      	it	eq
 8000d98:	2800      	cmpeq	r0, #0
 8000d9a:	bf1c      	itt	ne
 8000d9c:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8000da0:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8000da4:	f000 ba6a 	b.w	800127c <__aeabi_idiv0>
 8000da8:	f1ad 0c08 	sub.w	ip, sp, #8
 8000dac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000db0:	f000 f828 	bl	8000e04 <__udivmoddi4>
 8000db4:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000db8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000dbc:	b004      	add	sp, #16
 8000dbe:	4770      	bx	lr

08000dc0 <__aeabi_d2ulz>:
 8000dc0:	b5d0      	push	{r4, r6, r7, lr}
 8000dc2:	2200      	movs	r2, #0
 8000dc4:	4b0d      	ldr	r3, [pc, #52]	; (8000dfc <__aeabi_d2ulz+0x3c>)
 8000dc6:	4606      	mov	r6, r0
 8000dc8:	460f      	mov	r7, r1
 8000dca:	f7ff fce1 	bl	8000790 <__aeabi_dmul>
 8000dce:	f000 fa57 	bl	8001280 <__aeabi_d2uiz>
 8000dd2:	4604      	mov	r4, r0
 8000dd4:	f7ff fc62 	bl	800069c <__aeabi_ui2d>
 8000dd8:	2200      	movs	r2, #0
 8000dda:	4b09      	ldr	r3, [pc, #36]	; (8000e00 <__aeabi_d2ulz+0x40>)
 8000ddc:	f7ff fcd8 	bl	8000790 <__aeabi_dmul>
 8000de0:	4602      	mov	r2, r0
 8000de2:	460b      	mov	r3, r1
 8000de4:	4630      	mov	r0, r6
 8000de6:	4639      	mov	r1, r7
 8000de8:	f7ff fb1a 	bl	8000420 <__aeabi_dsub>
 8000dec:	f000 fa48 	bl	8001280 <__aeabi_d2uiz>
 8000df0:	2200      	movs	r2, #0
 8000df2:	4623      	mov	r3, r4
 8000df4:	4310      	orrs	r0, r2
 8000df6:	4619      	mov	r1, r3
 8000df8:	bdd0      	pop	{r4, r6, r7, pc}
 8000dfa:	bf00      	nop
 8000dfc:	3df00000 	.word	0x3df00000
 8000e00:	41f00000 	.word	0x41f00000

08000e04 <__udivmoddi4>:
 8000e04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000e08:	9e08      	ldr	r6, [sp, #32]
 8000e0a:	4604      	mov	r4, r0
 8000e0c:	4688      	mov	r8, r1
 8000e0e:	2b00      	cmp	r3, #0
 8000e10:	d14b      	bne.n	8000eaa <__udivmoddi4+0xa6>
 8000e12:	428a      	cmp	r2, r1
 8000e14:	4615      	mov	r5, r2
 8000e16:	d967      	bls.n	8000ee8 <__udivmoddi4+0xe4>
 8000e18:	fab2 f282 	clz	r2, r2
 8000e1c:	b14a      	cbz	r2, 8000e32 <__udivmoddi4+0x2e>
 8000e1e:	f1c2 0720 	rsb	r7, r2, #32
 8000e22:	fa01 f302 	lsl.w	r3, r1, r2
 8000e26:	fa20 f707 	lsr.w	r7, r0, r7
 8000e2a:	4095      	lsls	r5, r2
 8000e2c:	ea47 0803 	orr.w	r8, r7, r3
 8000e30:	4094      	lsls	r4, r2
 8000e32:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000e36:	0c23      	lsrs	r3, r4, #16
 8000e38:	fbb8 f7fe 	udiv	r7, r8, lr
 8000e3c:	fa1f fc85 	uxth.w	ip, r5
 8000e40:	fb0e 8817 	mls	r8, lr, r7, r8
 8000e44:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000e48:	fb07 f10c 	mul.w	r1, r7, ip
 8000e4c:	4299      	cmp	r1, r3
 8000e4e:	d909      	bls.n	8000e64 <__udivmoddi4+0x60>
 8000e50:	18eb      	adds	r3, r5, r3
 8000e52:	f107 30ff 	add.w	r0, r7, #4294967295	; 0xffffffff
 8000e56:	f080 811b 	bcs.w	8001090 <__udivmoddi4+0x28c>
 8000e5a:	4299      	cmp	r1, r3
 8000e5c:	f240 8118 	bls.w	8001090 <__udivmoddi4+0x28c>
 8000e60:	3f02      	subs	r7, #2
 8000e62:	442b      	add	r3, r5
 8000e64:	1a5b      	subs	r3, r3, r1
 8000e66:	b2a4      	uxth	r4, r4
 8000e68:	fbb3 f0fe 	udiv	r0, r3, lr
 8000e6c:	fb0e 3310 	mls	r3, lr, r0, r3
 8000e70:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000e74:	fb00 fc0c 	mul.w	ip, r0, ip
 8000e78:	45a4      	cmp	ip, r4
 8000e7a:	d909      	bls.n	8000e90 <__udivmoddi4+0x8c>
 8000e7c:	192c      	adds	r4, r5, r4
 8000e7e:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8000e82:	f080 8107 	bcs.w	8001094 <__udivmoddi4+0x290>
 8000e86:	45a4      	cmp	ip, r4
 8000e88:	f240 8104 	bls.w	8001094 <__udivmoddi4+0x290>
 8000e8c:	3802      	subs	r0, #2
 8000e8e:	442c      	add	r4, r5
 8000e90:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000e94:	eba4 040c 	sub.w	r4, r4, ip
 8000e98:	2700      	movs	r7, #0
 8000e9a:	b11e      	cbz	r6, 8000ea4 <__udivmoddi4+0xa0>
 8000e9c:	40d4      	lsrs	r4, r2
 8000e9e:	2300      	movs	r3, #0
 8000ea0:	e9c6 4300 	strd	r4, r3, [r6]
 8000ea4:	4639      	mov	r1, r7
 8000ea6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000eaa:	428b      	cmp	r3, r1
 8000eac:	d909      	bls.n	8000ec2 <__udivmoddi4+0xbe>
 8000eae:	2e00      	cmp	r6, #0
 8000eb0:	f000 80eb 	beq.w	800108a <__udivmoddi4+0x286>
 8000eb4:	2700      	movs	r7, #0
 8000eb6:	e9c6 0100 	strd	r0, r1, [r6]
 8000eba:	4638      	mov	r0, r7
 8000ebc:	4639      	mov	r1, r7
 8000ebe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ec2:	fab3 f783 	clz	r7, r3
 8000ec6:	2f00      	cmp	r7, #0
 8000ec8:	d147      	bne.n	8000f5a <__udivmoddi4+0x156>
 8000eca:	428b      	cmp	r3, r1
 8000ecc:	d302      	bcc.n	8000ed4 <__udivmoddi4+0xd0>
 8000ece:	4282      	cmp	r2, r0
 8000ed0:	f200 80fa 	bhi.w	80010c8 <__udivmoddi4+0x2c4>
 8000ed4:	1a84      	subs	r4, r0, r2
 8000ed6:	eb61 0303 	sbc.w	r3, r1, r3
 8000eda:	2001      	movs	r0, #1
 8000edc:	4698      	mov	r8, r3
 8000ede:	2e00      	cmp	r6, #0
 8000ee0:	d0e0      	beq.n	8000ea4 <__udivmoddi4+0xa0>
 8000ee2:	e9c6 4800 	strd	r4, r8, [r6]
 8000ee6:	e7dd      	b.n	8000ea4 <__udivmoddi4+0xa0>
 8000ee8:	b902      	cbnz	r2, 8000eec <__udivmoddi4+0xe8>
 8000eea:	deff      	udf	#255	; 0xff
 8000eec:	fab2 f282 	clz	r2, r2
 8000ef0:	2a00      	cmp	r2, #0
 8000ef2:	f040 808f 	bne.w	8001014 <__udivmoddi4+0x210>
 8000ef6:	1b49      	subs	r1, r1, r5
 8000ef8:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000efc:	fa1f f885 	uxth.w	r8, r5
 8000f00:	2701      	movs	r7, #1
 8000f02:	fbb1 fcfe 	udiv	ip, r1, lr
 8000f06:	0c23      	lsrs	r3, r4, #16
 8000f08:	fb0e 111c 	mls	r1, lr, ip, r1
 8000f0c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000f10:	fb08 f10c 	mul.w	r1, r8, ip
 8000f14:	4299      	cmp	r1, r3
 8000f16:	d907      	bls.n	8000f28 <__udivmoddi4+0x124>
 8000f18:	18eb      	adds	r3, r5, r3
 8000f1a:	f10c 30ff 	add.w	r0, ip, #4294967295	; 0xffffffff
 8000f1e:	d202      	bcs.n	8000f26 <__udivmoddi4+0x122>
 8000f20:	4299      	cmp	r1, r3
 8000f22:	f200 80cd 	bhi.w	80010c0 <__udivmoddi4+0x2bc>
 8000f26:	4684      	mov	ip, r0
 8000f28:	1a59      	subs	r1, r3, r1
 8000f2a:	b2a3      	uxth	r3, r4
 8000f2c:	fbb1 f0fe 	udiv	r0, r1, lr
 8000f30:	fb0e 1410 	mls	r4, lr, r0, r1
 8000f34:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8000f38:	fb08 f800 	mul.w	r8, r8, r0
 8000f3c:	45a0      	cmp	r8, r4
 8000f3e:	d907      	bls.n	8000f50 <__udivmoddi4+0x14c>
 8000f40:	192c      	adds	r4, r5, r4
 8000f42:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8000f46:	d202      	bcs.n	8000f4e <__udivmoddi4+0x14a>
 8000f48:	45a0      	cmp	r8, r4
 8000f4a:	f200 80b6 	bhi.w	80010ba <__udivmoddi4+0x2b6>
 8000f4e:	4618      	mov	r0, r3
 8000f50:	eba4 0408 	sub.w	r4, r4, r8
 8000f54:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000f58:	e79f      	b.n	8000e9a <__udivmoddi4+0x96>
 8000f5a:	f1c7 0c20 	rsb	ip, r7, #32
 8000f5e:	40bb      	lsls	r3, r7
 8000f60:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000f64:	ea4e 0e03 	orr.w	lr, lr, r3
 8000f68:	fa01 f407 	lsl.w	r4, r1, r7
 8000f6c:	fa20 f50c 	lsr.w	r5, r0, ip
 8000f70:	fa21 f30c 	lsr.w	r3, r1, ip
 8000f74:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8000f78:	4325      	orrs	r5, r4
 8000f7a:	fbb3 f9f8 	udiv	r9, r3, r8
 8000f7e:	0c2c      	lsrs	r4, r5, #16
 8000f80:	fb08 3319 	mls	r3, r8, r9, r3
 8000f84:	fa1f fa8e 	uxth.w	sl, lr
 8000f88:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000f8c:	fb09 f40a 	mul.w	r4, r9, sl
 8000f90:	429c      	cmp	r4, r3
 8000f92:	fa02 f207 	lsl.w	r2, r2, r7
 8000f96:	fa00 f107 	lsl.w	r1, r0, r7
 8000f9a:	d90b      	bls.n	8000fb4 <__udivmoddi4+0x1b0>
 8000f9c:	eb1e 0303 	adds.w	r3, lr, r3
 8000fa0:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
 8000fa4:	f080 8087 	bcs.w	80010b6 <__udivmoddi4+0x2b2>
 8000fa8:	429c      	cmp	r4, r3
 8000faa:	f240 8084 	bls.w	80010b6 <__udivmoddi4+0x2b2>
 8000fae:	f1a9 0902 	sub.w	r9, r9, #2
 8000fb2:	4473      	add	r3, lr
 8000fb4:	1b1b      	subs	r3, r3, r4
 8000fb6:	b2ad      	uxth	r5, r5
 8000fb8:	fbb3 f0f8 	udiv	r0, r3, r8
 8000fbc:	fb08 3310 	mls	r3, r8, r0, r3
 8000fc0:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 8000fc4:	fb00 fa0a 	mul.w	sl, r0, sl
 8000fc8:	45a2      	cmp	sl, r4
 8000fca:	d908      	bls.n	8000fde <__udivmoddi4+0x1da>
 8000fcc:	eb1e 0404 	adds.w	r4, lr, r4
 8000fd0:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8000fd4:	d26b      	bcs.n	80010ae <__udivmoddi4+0x2aa>
 8000fd6:	45a2      	cmp	sl, r4
 8000fd8:	d969      	bls.n	80010ae <__udivmoddi4+0x2aa>
 8000fda:	3802      	subs	r0, #2
 8000fdc:	4474      	add	r4, lr
 8000fde:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000fe2:	fba0 8902 	umull	r8, r9, r0, r2
 8000fe6:	eba4 040a 	sub.w	r4, r4, sl
 8000fea:	454c      	cmp	r4, r9
 8000fec:	46c2      	mov	sl, r8
 8000fee:	464b      	mov	r3, r9
 8000ff0:	d354      	bcc.n	800109c <__udivmoddi4+0x298>
 8000ff2:	d051      	beq.n	8001098 <__udivmoddi4+0x294>
 8000ff4:	2e00      	cmp	r6, #0
 8000ff6:	d069      	beq.n	80010cc <__udivmoddi4+0x2c8>
 8000ff8:	ebb1 050a 	subs.w	r5, r1, sl
 8000ffc:	eb64 0403 	sbc.w	r4, r4, r3
 8001000:	fa04 fc0c 	lsl.w	ip, r4, ip
 8001004:	40fd      	lsrs	r5, r7
 8001006:	40fc      	lsrs	r4, r7
 8001008:	ea4c 0505 	orr.w	r5, ip, r5
 800100c:	e9c6 5400 	strd	r5, r4, [r6]
 8001010:	2700      	movs	r7, #0
 8001012:	e747      	b.n	8000ea4 <__udivmoddi4+0xa0>
 8001014:	f1c2 0320 	rsb	r3, r2, #32
 8001018:	fa20 f703 	lsr.w	r7, r0, r3
 800101c:	4095      	lsls	r5, r2
 800101e:	fa01 f002 	lsl.w	r0, r1, r2
 8001022:	fa21 f303 	lsr.w	r3, r1, r3
 8001026:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 800102a:	4338      	orrs	r0, r7
 800102c:	0c01      	lsrs	r1, r0, #16
 800102e:	fbb3 f7fe 	udiv	r7, r3, lr
 8001032:	fa1f f885 	uxth.w	r8, r5
 8001036:	fb0e 3317 	mls	r3, lr, r7, r3
 800103a:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800103e:	fb07 f308 	mul.w	r3, r7, r8
 8001042:	428b      	cmp	r3, r1
 8001044:	fa04 f402 	lsl.w	r4, r4, r2
 8001048:	d907      	bls.n	800105a <__udivmoddi4+0x256>
 800104a:	1869      	adds	r1, r5, r1
 800104c:	f107 3cff 	add.w	ip, r7, #4294967295	; 0xffffffff
 8001050:	d22f      	bcs.n	80010b2 <__udivmoddi4+0x2ae>
 8001052:	428b      	cmp	r3, r1
 8001054:	d92d      	bls.n	80010b2 <__udivmoddi4+0x2ae>
 8001056:	3f02      	subs	r7, #2
 8001058:	4429      	add	r1, r5
 800105a:	1acb      	subs	r3, r1, r3
 800105c:	b281      	uxth	r1, r0
 800105e:	fbb3 f0fe 	udiv	r0, r3, lr
 8001062:	fb0e 3310 	mls	r3, lr, r0, r3
 8001066:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800106a:	fb00 f308 	mul.w	r3, r0, r8
 800106e:	428b      	cmp	r3, r1
 8001070:	d907      	bls.n	8001082 <__udivmoddi4+0x27e>
 8001072:	1869      	adds	r1, r5, r1
 8001074:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 8001078:	d217      	bcs.n	80010aa <__udivmoddi4+0x2a6>
 800107a:	428b      	cmp	r3, r1
 800107c:	d915      	bls.n	80010aa <__udivmoddi4+0x2a6>
 800107e:	3802      	subs	r0, #2
 8001080:	4429      	add	r1, r5
 8001082:	1ac9      	subs	r1, r1, r3
 8001084:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8001088:	e73b      	b.n	8000f02 <__udivmoddi4+0xfe>
 800108a:	4637      	mov	r7, r6
 800108c:	4630      	mov	r0, r6
 800108e:	e709      	b.n	8000ea4 <__udivmoddi4+0xa0>
 8001090:	4607      	mov	r7, r0
 8001092:	e6e7      	b.n	8000e64 <__udivmoddi4+0x60>
 8001094:	4618      	mov	r0, r3
 8001096:	e6fb      	b.n	8000e90 <__udivmoddi4+0x8c>
 8001098:	4541      	cmp	r1, r8
 800109a:	d2ab      	bcs.n	8000ff4 <__udivmoddi4+0x1f0>
 800109c:	ebb8 0a02 	subs.w	sl, r8, r2
 80010a0:	eb69 020e 	sbc.w	r2, r9, lr
 80010a4:	3801      	subs	r0, #1
 80010a6:	4613      	mov	r3, r2
 80010a8:	e7a4      	b.n	8000ff4 <__udivmoddi4+0x1f0>
 80010aa:	4660      	mov	r0, ip
 80010ac:	e7e9      	b.n	8001082 <__udivmoddi4+0x27e>
 80010ae:	4618      	mov	r0, r3
 80010b0:	e795      	b.n	8000fde <__udivmoddi4+0x1da>
 80010b2:	4667      	mov	r7, ip
 80010b4:	e7d1      	b.n	800105a <__udivmoddi4+0x256>
 80010b6:	4681      	mov	r9, r0
 80010b8:	e77c      	b.n	8000fb4 <__udivmoddi4+0x1b0>
 80010ba:	3802      	subs	r0, #2
 80010bc:	442c      	add	r4, r5
 80010be:	e747      	b.n	8000f50 <__udivmoddi4+0x14c>
 80010c0:	f1ac 0c02 	sub.w	ip, ip, #2
 80010c4:	442b      	add	r3, r5
 80010c6:	e72f      	b.n	8000f28 <__udivmoddi4+0x124>
 80010c8:	4638      	mov	r0, r7
 80010ca:	e708      	b.n	8000ede <__udivmoddi4+0xda>
 80010cc:	4637      	mov	r7, r6
 80010ce:	e6e9      	b.n	8000ea4 <__udivmoddi4+0xa0>

080010d0 <__restore_core_regs>:
 80010d0:	f100 0134 	add.w	r1, r0, #52	; 0x34
 80010d4:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
 80010d8:	469c      	mov	ip, r3
 80010da:	46a6      	mov	lr, r4
 80010dc:	f84c 5d04 	str.w	r5, [ip, #-4]!
 80010e0:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 80010e4:	46e5      	mov	sp, ip
 80010e6:	bd00      	pop	{pc}

080010e8 <__gnu_Unwind_Restore_VFP>:
 80010e8:	ec90 0b21 	fldmiax	r0, {d0-d15}	;@ Deprecated
 80010ec:	4770      	bx	lr
 80010ee:	bf00      	nop

080010f0 <__gnu_Unwind_Save_VFP>:
 80010f0:	ec80 0b21 	fstmiax	r0, {d0-d15}	;@ Deprecated
 80010f4:	4770      	bx	lr
 80010f6:	bf00      	nop

080010f8 <__gnu_Unwind_Restore_VFP_D>:
 80010f8:	ec90 0b20 	vldmia	r0, {d0-d15}
 80010fc:	4770      	bx	lr
 80010fe:	bf00      	nop

08001100 <__gnu_Unwind_Save_VFP_D>:
 8001100:	ec80 0b20 	vstmia	r0, {d0-d15}
 8001104:	4770      	bx	lr
 8001106:	bf00      	nop

08001108 <__gnu_Unwind_Restore_VFP_D_16_to_31>:
 8001108:	ecd0 0b20 	vldmia	r0, {d16-d31}
 800110c:	4770      	bx	lr
 800110e:	bf00      	nop

08001110 <__gnu_Unwind_Save_VFP_D_16_to_31>:
 8001110:	ecc0 0b20 	vstmia	r0, {d16-d31}
 8001114:	4770      	bx	lr
 8001116:	bf00      	nop

08001118 <__gnu_Unwind_Restore_WMMXD>:
 8001118:	ecf0 0102 	ldfe	f0, [r0], #8
 800111c:	ecf0 1102 	ldfe	f1, [r0], #8
 8001120:	ecf0 2102 	ldfe	f2, [r0], #8
 8001124:	ecf0 3102 	ldfe	f3, [r0], #8
 8001128:	ecf0 4102 	ldfe	f4, [r0], #8
 800112c:	ecf0 5102 	ldfe	f5, [r0], #8
 8001130:	ecf0 6102 	ldfe	f6, [r0], #8
 8001134:	ecf0 7102 	ldfe	f7, [r0], #8
 8001138:	ecf0 8102 	ldfp	f0, [r0], #8
 800113c:	ecf0 9102 	ldfp	f1, [r0], #8
 8001140:	ecf0 a102 	ldfp	f2, [r0], #8
 8001144:	ecf0 b102 	ldfp	f3, [r0], #8
 8001148:	ecf0 c102 	ldfp	f4, [r0], #8
 800114c:	ecf0 d102 	ldfp	f5, [r0], #8
 8001150:	ecf0 e102 	ldfp	f6, [r0], #8
 8001154:	ecf0 f102 	ldfp	f7, [r0], #8
 8001158:	4770      	bx	lr
 800115a:	bf00      	nop

0800115c <__gnu_Unwind_Save_WMMXD>:
 800115c:	ece0 0102 	stfe	f0, [r0], #8
 8001160:	ece0 1102 	stfe	f1, [r0], #8
 8001164:	ece0 2102 	stfe	f2, [r0], #8
 8001168:	ece0 3102 	stfe	f3, [r0], #8
 800116c:	ece0 4102 	stfe	f4, [r0], #8
 8001170:	ece0 5102 	stfe	f5, [r0], #8
 8001174:	ece0 6102 	stfe	f6, [r0], #8
 8001178:	ece0 7102 	stfe	f7, [r0], #8
 800117c:	ece0 8102 	stfp	f0, [r0], #8
 8001180:	ece0 9102 	stfp	f1, [r0], #8
 8001184:	ece0 a102 	stfp	f2, [r0], #8
 8001188:	ece0 b102 	stfp	f3, [r0], #8
 800118c:	ece0 c102 	stfp	f4, [r0], #8
 8001190:	ece0 d102 	stfp	f5, [r0], #8
 8001194:	ece0 e102 	stfp	f6, [r0], #8
 8001198:	ece0 f102 	stfp	f7, [r0], #8
 800119c:	4770      	bx	lr
 800119e:	bf00      	nop

080011a0 <__gnu_Unwind_Restore_WMMXC>:
 80011a0:	fcb0 8101 	ldc2	1, cr8, [r0], #4
 80011a4:	fcb0 9101 	ldc2	1, cr9, [r0], #4
 80011a8:	fcb0 a101 	ldc2	1, cr10, [r0], #4
 80011ac:	fcb0 b101 	ldc2	1, cr11, [r0], #4
 80011b0:	4770      	bx	lr
 80011b2:	bf00      	nop

080011b4 <__gnu_Unwind_Save_WMMXC>:
 80011b4:	fca0 8101 	stc2	1, cr8, [r0], #4
 80011b8:	fca0 9101 	stc2	1, cr9, [r0], #4
 80011bc:	fca0 a101 	stc2	1, cr10, [r0], #4
 80011c0:	fca0 b101 	stc2	1, cr11, [r0], #4
 80011c4:	4770      	bx	lr
 80011c6:	bf00      	nop

080011c8 <_Unwind_RaiseException>:
 80011c8:	46ec      	mov	ip, sp
 80011ca:	b500      	push	{lr}
 80011cc:	e92d 5000 	stmdb	sp!, {ip, lr}
 80011d0:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 80011d4:	f04f 0300 	mov.w	r3, #0
 80011d8:	e92d 000c 	stmdb	sp!, {r2, r3}
 80011dc:	a901      	add	r1, sp, #4
 80011de:	f000 f9cb 	bl	8001578 <__gnu_Unwind_RaiseException>
 80011e2:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 80011e6:	b012      	add	sp, #72	; 0x48
 80011e8:	4770      	bx	lr
 80011ea:	bf00      	nop

080011ec <_Unwind_Resume>:
 80011ec:	46ec      	mov	ip, sp
 80011ee:	b500      	push	{lr}
 80011f0:	e92d 5000 	stmdb	sp!, {ip, lr}
 80011f4:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 80011f8:	f04f 0300 	mov.w	r3, #0
 80011fc:	e92d 000c 	stmdb	sp!, {r2, r3}
 8001200:	a901      	add	r1, sp, #4
 8001202:	f000 f9f3 	bl	80015ec <__gnu_Unwind_Resume>
 8001206:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 800120a:	b012      	add	sp, #72	; 0x48
 800120c:	4770      	bx	lr
 800120e:	bf00      	nop

08001210 <_Unwind_Resume_or_Rethrow>:
 8001210:	46ec      	mov	ip, sp
 8001212:	b500      	push	{lr}
 8001214:	e92d 5000 	stmdb	sp!, {ip, lr}
 8001218:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 800121c:	f04f 0300 	mov.w	r3, #0
 8001220:	e92d 000c 	stmdb	sp!, {r2, r3}
 8001224:	a901      	add	r1, sp, #4
 8001226:	f000 fa03 	bl	8001630 <__gnu_Unwind_Resume_or_Rethrow>
 800122a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 800122e:	b012      	add	sp, #72	; 0x48
 8001230:	4770      	bx	lr
 8001232:	bf00      	nop

08001234 <_Unwind_ForcedUnwind>:
 8001234:	46ec      	mov	ip, sp
 8001236:	b500      	push	{lr}
 8001238:	e92d 5000 	stmdb	sp!, {ip, lr}
 800123c:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8001240:	f04f 0300 	mov.w	r3, #0
 8001244:	e92d 000c 	stmdb	sp!, {r2, r3}
 8001248:	ab01      	add	r3, sp, #4
 800124a:	f000 f9c5 	bl	80015d8 <__gnu_Unwind_ForcedUnwind>
 800124e:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8001252:	b012      	add	sp, #72	; 0x48
 8001254:	4770      	bx	lr
 8001256:	bf00      	nop

08001258 <_Unwind_Backtrace>:
 8001258:	46ec      	mov	ip, sp
 800125a:	b500      	push	{lr}
 800125c:	e92d 5000 	stmdb	sp!, {ip, lr}
 8001260:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8001264:	f04f 0300 	mov.w	r3, #0
 8001268:	e92d 000c 	stmdb	sp!, {r2, r3}
 800126c:	aa01      	add	r2, sp, #4
 800126e:	f000 fa35 	bl	80016dc <__gnu_Unwind_Backtrace>
 8001272:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8001276:	b012      	add	sp, #72	; 0x48
 8001278:	4770      	bx	lr
 800127a:	bf00      	nop

0800127c <__aeabi_idiv0>:
 800127c:	4770      	bx	lr
 800127e:	bf00      	nop

08001280 <__aeabi_d2uiz>:
 8001280:	004a      	lsls	r2, r1, #1
 8001282:	d211      	bcs.n	80012a8 <__aeabi_d2uiz+0x28>
 8001284:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8001288:	d211      	bcs.n	80012ae <__aeabi_d2uiz+0x2e>
 800128a:	d50d      	bpl.n	80012a8 <__aeabi_d2uiz+0x28>
 800128c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8001290:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8001294:	d40e      	bmi.n	80012b4 <__aeabi_d2uiz+0x34>
 8001296:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 800129a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 800129e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 80012a2:	fa23 f002 	lsr.w	r0, r3, r2
 80012a6:	4770      	bx	lr
 80012a8:	f04f 0000 	mov.w	r0, #0
 80012ac:	4770      	bx	lr
 80012ae:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 80012b2:	d102      	bne.n	80012ba <__aeabi_d2uiz+0x3a>
 80012b4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80012b8:	4770      	bx	lr
 80012ba:	f04f 0000 	mov.w	r0, #0
 80012be:	4770      	bx	lr

080012c0 <selfrel_offset31>:
 80012c0:	6803      	ldr	r3, [r0, #0]
 80012c2:	005a      	lsls	r2, r3, #1
 80012c4:	bf4c      	ite	mi
 80012c6:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
 80012ca:	f023 4300 	bicpl.w	r3, r3, #2147483648	; 0x80000000
 80012ce:	4418      	add	r0, r3
 80012d0:	4770      	bx	lr
 80012d2:	bf00      	nop

080012d4 <search_EIT_table>:
 80012d4:	b361      	cbz	r1, 8001330 <search_EIT_table+0x5c>
 80012d6:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80012da:	f101 3aff 	add.w	sl, r1, #4294967295	; 0xffffffff
 80012de:	4690      	mov	r8, r2
 80012e0:	4606      	mov	r6, r0
 80012e2:	46d1      	mov	r9, sl
 80012e4:	2700      	movs	r7, #0
 80012e6:	eb07 0409 	add.w	r4, r7, r9
 80012ea:	eb04 74d4 	add.w	r4, r4, r4, lsr #31
 80012ee:	1064      	asrs	r4, r4, #1
 80012f0:	00e5      	lsls	r5, r4, #3
 80012f2:	1971      	adds	r1, r6, r5
 80012f4:	4608      	mov	r0, r1
 80012f6:	f7ff ffe3 	bl	80012c0 <selfrel_offset31>
 80012fa:	45a2      	cmp	sl, r4
 80012fc:	4683      	mov	fp, r0
 80012fe:	f105 0008 	add.w	r0, r5, #8
 8001302:	4430      	add	r0, r6
 8001304:	d009      	beq.n	800131a <search_EIT_table+0x46>
 8001306:	f7ff ffdb 	bl	80012c0 <selfrel_offset31>
 800130a:	45c3      	cmp	fp, r8
 800130c:	f100 30ff 	add.w	r0, r0, #4294967295	; 0xffffffff
 8001310:	d805      	bhi.n	800131e <search_EIT_table+0x4a>
 8001312:	4540      	cmp	r0, r8
 8001314:	d209      	bcs.n	800132a <search_EIT_table+0x56>
 8001316:	1c67      	adds	r7, r4, #1
 8001318:	e7e5      	b.n	80012e6 <search_EIT_table+0x12>
 800131a:	45c3      	cmp	fp, r8
 800131c:	d905      	bls.n	800132a <search_EIT_table+0x56>
 800131e:	42a7      	cmp	r7, r4
 8001320:	d002      	beq.n	8001328 <search_EIT_table+0x54>
 8001322:	f104 39ff 	add.w	r9, r4, #4294967295	; 0xffffffff
 8001326:	e7de      	b.n	80012e6 <search_EIT_table+0x12>
 8001328:	2100      	movs	r1, #0
 800132a:	4608      	mov	r0, r1
 800132c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001330:	4608      	mov	r0, r1
 8001332:	4770      	bx	lr

08001334 <__gnu_unwind_get_pr_addr>:
 8001334:	2801      	cmp	r0, #1
 8001336:	d007      	beq.n	8001348 <__gnu_unwind_get_pr_addr+0x14>
 8001338:	2802      	cmp	r0, #2
 800133a:	d007      	beq.n	800134c <__gnu_unwind_get_pr_addr+0x18>
 800133c:	4b04      	ldr	r3, [pc, #16]	; (8001350 <__gnu_unwind_get_pr_addr+0x1c>)
 800133e:	2800      	cmp	r0, #0
 8001340:	bf0c      	ite	eq
 8001342:	4618      	moveq	r0, r3
 8001344:	2000      	movne	r0, #0
 8001346:	4770      	bx	lr
 8001348:	4802      	ldr	r0, [pc, #8]	; (8001354 <__gnu_unwind_get_pr_addr+0x20>)
 800134a:	4770      	bx	lr
 800134c:	4802      	ldr	r0, [pc, #8]	; (8001358 <__gnu_unwind_get_pr_addr+0x24>)
 800134e:	4770      	bx	lr
 8001350:	08001a21 	.word	0x08001a21
 8001354:	08001a25 	.word	0x08001a25
 8001358:	08001a29 	.word	0x08001a29

0800135c <get_eit_entry>:
 800135c:	b530      	push	{r4, r5, lr}
 800135e:	4b25      	ldr	r3, [pc, #148]	; (80013f4 <get_eit_entry+0x98>)
 8001360:	b083      	sub	sp, #12
 8001362:	4604      	mov	r4, r0
 8001364:	1e8d      	subs	r5, r1, #2
 8001366:	b34b      	cbz	r3, 80013bc <get_eit_entry+0x60>
 8001368:	a901      	add	r1, sp, #4
 800136a:	4628      	mov	r0, r5
 800136c:	f3af 8000 	nop.w
 8001370:	b1f0      	cbz	r0, 80013b0 <get_eit_entry+0x54>
 8001372:	9901      	ldr	r1, [sp, #4]
 8001374:	462a      	mov	r2, r5
 8001376:	f7ff ffad 	bl	80012d4 <search_EIT_table>
 800137a:	4601      	mov	r1, r0
 800137c:	b1c0      	cbz	r0, 80013b0 <get_eit_entry+0x54>
 800137e:	f7ff ff9f 	bl	80012c0 <selfrel_offset31>
 8001382:	684b      	ldr	r3, [r1, #4]
 8001384:	64a0      	str	r0, [r4, #72]	; 0x48
 8001386:	2b01      	cmp	r3, #1
 8001388:	d02e      	beq.n	80013e8 <get_eit_entry+0x8c>
 800138a:	2b00      	cmp	r3, #0
 800138c:	f101 0004 	add.w	r0, r1, #4
 8001390:	db26      	blt.n	80013e0 <get_eit_entry+0x84>
 8001392:	f7ff ff95 	bl	80012c0 <selfrel_offset31>
 8001396:	2300      	movs	r3, #0
 8001398:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
 800139c:	6803      	ldr	r3, [r0, #0]
 800139e:	2b00      	cmp	r3, #0
 80013a0:	db12      	blt.n	80013c8 <get_eit_entry+0x6c>
 80013a2:	f7ff ff8d 	bl	80012c0 <selfrel_offset31>
 80013a6:	2300      	movs	r3, #0
 80013a8:	6120      	str	r0, [r4, #16]
 80013aa:	4618      	mov	r0, r3
 80013ac:	b003      	add	sp, #12
 80013ae:	bd30      	pop	{r4, r5, pc}
 80013b0:	2300      	movs	r3, #0
 80013b2:	6123      	str	r3, [r4, #16]
 80013b4:	2309      	movs	r3, #9
 80013b6:	4618      	mov	r0, r3
 80013b8:	b003      	add	sp, #12
 80013ba:	bd30      	pop	{r4, r5, pc}
 80013bc:	490e      	ldr	r1, [pc, #56]	; (80013f8 <get_eit_entry+0x9c>)
 80013be:	480f      	ldr	r0, [pc, #60]	; (80013fc <get_eit_entry+0xa0>)
 80013c0:	1a09      	subs	r1, r1, r0
 80013c2:	10c9      	asrs	r1, r1, #3
 80013c4:	9101      	str	r1, [sp, #4]
 80013c6:	e7d5      	b.n	8001374 <get_eit_entry+0x18>
 80013c8:	f3c3 6003 	ubfx	r0, r3, #24, #4
 80013cc:	f7ff ffb2 	bl	8001334 <__gnu_unwind_get_pr_addr>
 80013d0:	2800      	cmp	r0, #0
 80013d2:	bf14      	ite	ne
 80013d4:	2300      	movne	r3, #0
 80013d6:	2309      	moveq	r3, #9
 80013d8:	6120      	str	r0, [r4, #16]
 80013da:	4618      	mov	r0, r3
 80013dc:	b003      	add	sp, #12
 80013de:	bd30      	pop	{r4, r5, pc}
 80013e0:	2301      	movs	r3, #1
 80013e2:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
 80013e6:	e7d9      	b.n	800139c <get_eit_entry+0x40>
 80013e8:	2300      	movs	r3, #0
 80013ea:	6123      	str	r3, [r4, #16]
 80013ec:	2305      	movs	r3, #5
 80013ee:	4618      	mov	r0, r3
 80013f0:	b003      	add	sp, #12
 80013f2:	bd30      	pop	{r4, r5, pc}
 80013f4:	00000000 	.word	0x00000000
 80013f8:	08020138 	.word	0x08020138
 80013fc:	0801fc58 	.word	0x0801fc58

08001400 <restore_non_core_regs>:
 8001400:	6803      	ldr	r3, [r0, #0]
 8001402:	07da      	lsls	r2, r3, #31
 8001404:	b510      	push	{r4, lr}
 8001406:	4604      	mov	r4, r0
 8001408:	d406      	bmi.n	8001418 <restore_non_core_regs+0x18>
 800140a:	079b      	lsls	r3, r3, #30
 800140c:	f100 0048 	add.w	r0, r0, #72	; 0x48
 8001410:	d509      	bpl.n	8001426 <restore_non_core_regs+0x26>
 8001412:	f7ff fe71 	bl	80010f8 <__gnu_Unwind_Restore_VFP_D>
 8001416:	6823      	ldr	r3, [r4, #0]
 8001418:	0759      	lsls	r1, r3, #29
 800141a:	d509      	bpl.n	8001430 <restore_non_core_regs+0x30>
 800141c:	071a      	lsls	r2, r3, #28
 800141e:	d50e      	bpl.n	800143e <restore_non_core_regs+0x3e>
 8001420:	06db      	lsls	r3, r3, #27
 8001422:	d513      	bpl.n	800144c <restore_non_core_regs+0x4c>
 8001424:	bd10      	pop	{r4, pc}
 8001426:	f7ff fe5f 	bl	80010e8 <__gnu_Unwind_Restore_VFP>
 800142a:	6823      	ldr	r3, [r4, #0]
 800142c:	0759      	lsls	r1, r3, #29
 800142e:	d4f5      	bmi.n	800141c <restore_non_core_regs+0x1c>
 8001430:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8001434:	f7ff fe68 	bl	8001108 <__gnu_Unwind_Restore_VFP_D_16_to_31>
 8001438:	6823      	ldr	r3, [r4, #0]
 800143a:	071a      	lsls	r2, r3, #28
 800143c:	d4f0      	bmi.n	8001420 <restore_non_core_regs+0x20>
 800143e:	f504 70a8 	add.w	r0, r4, #336	; 0x150
 8001442:	f7ff fe69 	bl	8001118 <__gnu_Unwind_Restore_WMMXD>
 8001446:	6823      	ldr	r3, [r4, #0]
 8001448:	06db      	lsls	r3, r3, #27
 800144a:	d4eb      	bmi.n	8001424 <restore_non_core_regs+0x24>
 800144c:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
 8001450:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001454:	f7ff bea4 	b.w	80011a0 <__gnu_Unwind_Restore_WMMXC>

08001458 <_Unwind_decode_typeinfo_ptr.isra.0>:
 8001458:	6803      	ldr	r3, [r0, #0]
 800145a:	b103      	cbz	r3, 800145e <_Unwind_decode_typeinfo_ptr.isra.0+0x6>
 800145c:	4403      	add	r3, r0
 800145e:	4618      	mov	r0, r3
 8001460:	4770      	bx	lr
 8001462:	bf00      	nop

08001464 <__gnu_unwind_24bit.isra.1>:
 8001464:	2009      	movs	r0, #9
 8001466:	4770      	bx	lr

08001468 <_Unwind_DebugHook>:
 8001468:	4770      	bx	lr
 800146a:	bf00      	nop

0800146c <unwind_phase2>:
 800146c:	b570      	push	{r4, r5, r6, lr}
 800146e:	4604      	mov	r4, r0
 8001470:	460d      	mov	r5, r1
 8001472:	e008      	b.n	8001486 <unwind_phase2+0x1a>
 8001474:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001476:	6163      	str	r3, [r4, #20]
 8001478:	462a      	mov	r2, r5
 800147a:	6923      	ldr	r3, [r4, #16]
 800147c:	4621      	mov	r1, r4
 800147e:	2001      	movs	r0, #1
 8001480:	4798      	blx	r3
 8001482:	2808      	cmp	r0, #8
 8001484:	d108      	bne.n	8001498 <unwind_phase2+0x2c>
 8001486:	6c29      	ldr	r1, [r5, #64]	; 0x40
 8001488:	4620      	mov	r0, r4
 800148a:	f7ff ff67 	bl	800135c <get_eit_entry>
 800148e:	4606      	mov	r6, r0
 8001490:	2800      	cmp	r0, #0
 8001492:	d0ef      	beq.n	8001474 <unwind_phase2+0x8>
 8001494:	f01a f828 	bl	801b4e8 <abort>
 8001498:	2807      	cmp	r0, #7
 800149a:	d1fb      	bne.n	8001494 <unwind_phase2+0x28>
 800149c:	4630      	mov	r0, r6
 800149e:	6c29      	ldr	r1, [r5, #64]	; 0x40
 80014a0:	f7ff ffe2 	bl	8001468 <_Unwind_DebugHook>
 80014a4:	1d28      	adds	r0, r5, #4
 80014a6:	f7ff fe13 	bl	80010d0 <__restore_core_regs>
 80014aa:	bf00      	nop

080014ac <unwind_phase2_forced>:
 80014ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80014b0:	1d0c      	adds	r4, r1, #4
 80014b2:	4605      	mov	r5, r0
 80014b4:	4617      	mov	r7, r2
 80014b6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80014b8:	f5ad 7d72 	sub.w	sp, sp, #968	; 0x3c8
 80014bc:	ae03      	add	r6, sp, #12
 80014be:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80014c0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80014c2:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80014c4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80014c6:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80014c8:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 80014cc:	ac02      	add	r4, sp, #8
 80014ce:	f8d5 800c 	ldr.w	r8, [r5, #12]
 80014d2:	f8d5 9018 	ldr.w	r9, [r5, #24]
 80014d6:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 80014da:	2300      	movs	r3, #0
 80014dc:	6023      	str	r3, [r4, #0]
 80014de:	e021      	b.n	8001524 <unwind_phase2_forced+0x78>
 80014e0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80014e2:	616b      	str	r3, [r5, #20]
 80014e4:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80014e8:	4621      	mov	r1, r4
 80014ea:	a87a      	add	r0, sp, #488	; 0x1e8
 80014ec:	f007 fee0 	bl	80092b0 <memcpy>
 80014f0:	692b      	ldr	r3, [r5, #16]
 80014f2:	aa7a      	add	r2, sp, #488	; 0x1e8
 80014f4:	4629      	mov	r1, r5
 80014f6:	4630      	mov	r0, r6
 80014f8:	4798      	blx	r3
 80014fa:	9b88      	ldr	r3, [sp, #544]	; 0x220
 80014fc:	e9cd 4900 	strd	r4, r9, [sp]
 8001500:	4682      	mov	sl, r0
 8001502:	6463      	str	r3, [r4, #68]	; 0x44
 8001504:	4631      	mov	r1, r6
 8001506:	462b      	mov	r3, r5
 8001508:	462a      	mov	r2, r5
 800150a:	2001      	movs	r0, #1
 800150c:	47c0      	blx	r8
 800150e:	4607      	mov	r7, r0
 8001510:	b9f8      	cbnz	r0, 8001552 <unwind_phase2_forced+0xa6>
 8001512:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8001516:	a97a      	add	r1, sp, #488	; 0x1e8
 8001518:	4620      	mov	r0, r4
 800151a:	f007 fec9 	bl	80092b0 <memcpy>
 800151e:	f1ba 0f08 	cmp.w	sl, #8
 8001522:	d11c      	bne.n	800155e <unwind_phase2_forced+0xb2>
 8001524:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8001526:	4628      	mov	r0, r5
 8001528:	f7ff ff18 	bl	800135c <get_eit_entry>
 800152c:	2f00      	cmp	r7, #0
 800152e:	bf08      	it	eq
 8001530:	2609      	moveq	r6, #9
 8001532:	4607      	mov	r7, r0
 8001534:	bf18      	it	ne
 8001536:	260a      	movne	r6, #10
 8001538:	2800      	cmp	r0, #0
 800153a:	d0d1      	beq.n	80014e0 <unwind_phase2_forced+0x34>
 800153c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800153e:	f046 0110 	orr.w	r1, r6, #16
 8001542:	e9cd 4900 	strd	r4, r9, [sp]
 8001546:	462a      	mov	r2, r5
 8001548:	6463      	str	r3, [r4, #68]	; 0x44
 800154a:	2001      	movs	r0, #1
 800154c:	462b      	mov	r3, r5
 800154e:	47c0      	blx	r8
 8001550:	b100      	cbz	r0, 8001554 <unwind_phase2_forced+0xa8>
 8001552:	2709      	movs	r7, #9
 8001554:	4638      	mov	r0, r7
 8001556:	f50d 7d72 	add.w	sp, sp, #968	; 0x3c8
 800155a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800155e:	f1ba 0f07 	cmp.w	sl, #7
 8001562:	d1f6      	bne.n	8001552 <unwind_phase2_forced+0xa6>
 8001564:	4638      	mov	r0, r7
 8001566:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8001568:	f7ff ff7e 	bl	8001468 <_Unwind_DebugHook>
 800156c:	a803      	add	r0, sp, #12
 800156e:	f7ff fdaf 	bl	80010d0 <__restore_core_regs>
 8001572:	bf00      	nop

08001574 <_Unwind_GetCFA>:
 8001574:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8001576:	4770      	bx	lr

08001578 <__gnu_Unwind_RaiseException>:
 8001578:	b5f0      	push	{r4, r5, r6, r7, lr}
 800157a:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 800157c:	640b      	str	r3, [r1, #64]	; 0x40
 800157e:	1d0d      	adds	r5, r1, #4
 8001580:	460f      	mov	r7, r1
 8001582:	4606      	mov	r6, r0
 8001584:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001586:	b0f9      	sub	sp, #484	; 0x1e4
 8001588:	ac01      	add	r4, sp, #4
 800158a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800158c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800158e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001590:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001592:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001594:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8001598:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 800159c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80015a0:	9500      	str	r5, [sp, #0]
 80015a2:	e006      	b.n	80015b2 <__gnu_Unwind_RaiseException+0x3a>
 80015a4:	6933      	ldr	r3, [r6, #16]
 80015a6:	466a      	mov	r2, sp
 80015a8:	4631      	mov	r1, r6
 80015aa:	4798      	blx	r3
 80015ac:	2808      	cmp	r0, #8
 80015ae:	4604      	mov	r4, r0
 80015b0:	d108      	bne.n	80015c4 <__gnu_Unwind_RaiseException+0x4c>
 80015b2:	9910      	ldr	r1, [sp, #64]	; 0x40
 80015b4:	4630      	mov	r0, r6
 80015b6:	f7ff fed1 	bl	800135c <get_eit_entry>
 80015ba:	2800      	cmp	r0, #0
 80015bc:	d0f2      	beq.n	80015a4 <__gnu_Unwind_RaiseException+0x2c>
 80015be:	2009      	movs	r0, #9
 80015c0:	b079      	add	sp, #484	; 0x1e4
 80015c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80015c4:	4668      	mov	r0, sp
 80015c6:	f7ff ff1b 	bl	8001400 <restore_non_core_regs>
 80015ca:	2c06      	cmp	r4, #6
 80015cc:	d1f7      	bne.n	80015be <__gnu_Unwind_RaiseException+0x46>
 80015ce:	4639      	mov	r1, r7
 80015d0:	4630      	mov	r0, r6
 80015d2:	f7ff ff4b 	bl	800146c <unwind_phase2>
 80015d6:	bf00      	nop

080015d8 <__gnu_Unwind_ForcedUnwind>:
 80015d8:	b430      	push	{r4, r5}
 80015da:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 80015dc:	60c1      	str	r1, [r0, #12]
 80015de:	6182      	str	r2, [r0, #24]
 80015e0:	4619      	mov	r1, r3
 80015e2:	641d      	str	r5, [r3, #64]	; 0x40
 80015e4:	2200      	movs	r2, #0
 80015e6:	bc30      	pop	{r4, r5}
 80015e8:	e760      	b.n	80014ac <unwind_phase2_forced>
 80015ea:	bf00      	nop

080015ec <__gnu_Unwind_Resume>:
 80015ec:	b570      	push	{r4, r5, r6, lr}
 80015ee:	68c6      	ldr	r6, [r0, #12]
 80015f0:	6943      	ldr	r3, [r0, #20]
 80015f2:	640b      	str	r3, [r1, #64]	; 0x40
 80015f4:	b9be      	cbnz	r6, 8001626 <__gnu_Unwind_Resume+0x3a>
 80015f6:	6903      	ldr	r3, [r0, #16]
 80015f8:	460a      	mov	r2, r1
 80015fa:	4604      	mov	r4, r0
 80015fc:	460d      	mov	r5, r1
 80015fe:	4601      	mov	r1, r0
 8001600:	2002      	movs	r0, #2
 8001602:	4798      	blx	r3
 8001604:	2807      	cmp	r0, #7
 8001606:	d007      	beq.n	8001618 <__gnu_Unwind_Resume+0x2c>
 8001608:	2808      	cmp	r0, #8
 800160a:	d103      	bne.n	8001614 <__gnu_Unwind_Resume+0x28>
 800160c:	4629      	mov	r1, r5
 800160e:	4620      	mov	r0, r4
 8001610:	f7ff ff2c 	bl	800146c <unwind_phase2>
 8001614:	f019 ff68 	bl	801b4e8 <abort>
 8001618:	4630      	mov	r0, r6
 800161a:	6c29      	ldr	r1, [r5, #64]	; 0x40
 800161c:	f7ff ff24 	bl	8001468 <_Unwind_DebugHook>
 8001620:	1d28      	adds	r0, r5, #4
 8001622:	f7ff fd55 	bl	80010d0 <__restore_core_regs>
 8001626:	2201      	movs	r2, #1
 8001628:	f7ff ff40 	bl	80014ac <unwind_phase2_forced>
 800162c:	f019 ff5c 	bl	801b4e8 <abort>

08001630 <__gnu_Unwind_Resume_or_Rethrow>:
 8001630:	68c2      	ldr	r2, [r0, #12]
 8001632:	b11a      	cbz	r2, 800163c <__gnu_Unwind_Resume_or_Rethrow+0xc>
 8001634:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 8001636:	640a      	str	r2, [r1, #64]	; 0x40
 8001638:	2200      	movs	r2, #0
 800163a:	e737      	b.n	80014ac <unwind_phase2_forced>
 800163c:	e79c      	b.n	8001578 <__gnu_Unwind_RaiseException>
 800163e:	bf00      	nop

08001640 <_Unwind_Complete>:
 8001640:	4770      	bx	lr
 8001642:	bf00      	nop

08001644 <_Unwind_DeleteException>:
 8001644:	6883      	ldr	r3, [r0, #8]
 8001646:	b113      	cbz	r3, 800164e <_Unwind_DeleteException+0xa>
 8001648:	4601      	mov	r1, r0
 800164a:	2001      	movs	r0, #1
 800164c:	4718      	bx	r3
 800164e:	4770      	bx	lr

08001650 <_Unwind_VRS_Get>:
 8001650:	2904      	cmp	r1, #4
 8001652:	d807      	bhi.n	8001664 <_Unwind_VRS_Get+0x14>
 8001654:	e8df f001 	tbb	[pc, r1]
 8001658:	08060803 	.word	0x08060803
 800165c:	08          	.byte	0x08
 800165d:	00          	.byte	0x00
 800165e:	b90b      	cbnz	r3, 8001664 <_Unwind_VRS_Get+0x14>
 8001660:	2a0f      	cmp	r2, #15
 8001662:	d903      	bls.n	800166c <_Unwind_VRS_Get+0x1c>
 8001664:	2002      	movs	r0, #2
 8001666:	4770      	bx	lr
 8001668:	2001      	movs	r0, #1
 800166a:	4770      	bx	lr
 800166c:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8001670:	4618      	mov	r0, r3
 8001672:	6853      	ldr	r3, [r2, #4]
 8001674:	9a00      	ldr	r2, [sp, #0]
 8001676:	6013      	str	r3, [r2, #0]
 8001678:	4770      	bx	lr
 800167a:	bf00      	nop

0800167c <_Unwind_GetGR>:
 800167c:	b510      	push	{r4, lr}
 800167e:	b084      	sub	sp, #16
 8001680:	2300      	movs	r3, #0
 8001682:	ac03      	add	r4, sp, #12
 8001684:	460a      	mov	r2, r1
 8001686:	9400      	str	r4, [sp, #0]
 8001688:	4619      	mov	r1, r3
 800168a:	f7ff ffe1 	bl	8001650 <_Unwind_VRS_Get>
 800168e:	9803      	ldr	r0, [sp, #12]
 8001690:	b004      	add	sp, #16
 8001692:	bd10      	pop	{r4, pc}

08001694 <_Unwind_VRS_Set>:
 8001694:	2904      	cmp	r1, #4
 8001696:	d807      	bhi.n	80016a8 <_Unwind_VRS_Set+0x14>
 8001698:	e8df f001 	tbb	[pc, r1]
 800169c:	08060803 	.word	0x08060803
 80016a0:	08          	.byte	0x08
 80016a1:	00          	.byte	0x00
 80016a2:	b90b      	cbnz	r3, 80016a8 <_Unwind_VRS_Set+0x14>
 80016a4:	2a0f      	cmp	r2, #15
 80016a6:	d903      	bls.n	80016b0 <_Unwind_VRS_Set+0x1c>
 80016a8:	2002      	movs	r0, #2
 80016aa:	4770      	bx	lr
 80016ac:	2001      	movs	r0, #1
 80016ae:	4770      	bx	lr
 80016b0:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 80016b4:	9a00      	ldr	r2, [sp, #0]
 80016b6:	6812      	ldr	r2, [r2, #0]
 80016b8:	6042      	str	r2, [r0, #4]
 80016ba:	4618      	mov	r0, r3
 80016bc:	4770      	bx	lr
 80016be:	bf00      	nop

080016c0 <_Unwind_SetGR>:
 80016c0:	b510      	push	{r4, lr}
 80016c2:	b084      	sub	sp, #16
 80016c4:	ac04      	add	r4, sp, #16
 80016c6:	2300      	movs	r3, #0
 80016c8:	f844 2d04 	str.w	r2, [r4, #-4]!
 80016cc:	460a      	mov	r2, r1
 80016ce:	9400      	str	r4, [sp, #0]
 80016d0:	4619      	mov	r1, r3
 80016d2:	f7ff ffdf 	bl	8001694 <_Unwind_VRS_Set>
 80016d6:	b004      	add	sp, #16
 80016d8:	bd10      	pop	{r4, pc}
 80016da:	bf00      	nop

080016dc <__gnu_Unwind_Backtrace>:
 80016dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80016de:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 80016e0:	6413      	str	r3, [r2, #64]	; 0x40
 80016e2:	1d15      	adds	r5, r2, #4
 80016e4:	4607      	mov	r7, r0
 80016e6:	460e      	mov	r6, r1
 80016e8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80016ea:	f5ad 7d0f 	sub.w	sp, sp, #572	; 0x23c
 80016ee:	ac17      	add	r4, sp, #92	; 0x5c
 80016f0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80016f2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80016f4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80016f6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80016f8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80016fa:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 80016fe:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8001702:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8001706:	9516      	str	r5, [sp, #88]	; 0x58
 8001708:	e010      	b.n	800172c <__gnu_Unwind_Backtrace+0x50>
 800170a:	a816      	add	r0, sp, #88	; 0x58
 800170c:	f7ff ffd8 	bl	80016c0 <_Unwind_SetGR>
 8001710:	4631      	mov	r1, r6
 8001712:	a816      	add	r0, sp, #88	; 0x58
 8001714:	47b8      	blx	r7
 8001716:	aa16      	add	r2, sp, #88	; 0x58
 8001718:	4669      	mov	r1, sp
 800171a:	b978      	cbnz	r0, 800173c <__gnu_Unwind_Backtrace+0x60>
 800171c:	9b04      	ldr	r3, [sp, #16]
 800171e:	2008      	movs	r0, #8
 8001720:	4798      	blx	r3
 8001722:	2805      	cmp	r0, #5
 8001724:	4604      	mov	r4, r0
 8001726:	d00a      	beq.n	800173e <__gnu_Unwind_Backtrace+0x62>
 8001728:	2809      	cmp	r0, #9
 800172a:	d007      	beq.n	800173c <__gnu_Unwind_Backtrace+0x60>
 800172c:	9926      	ldr	r1, [sp, #152]	; 0x98
 800172e:	4668      	mov	r0, sp
 8001730:	f7ff fe14 	bl	800135c <get_eit_entry>
 8001734:	466a      	mov	r2, sp
 8001736:	210c      	movs	r1, #12
 8001738:	2800      	cmp	r0, #0
 800173a:	d0e6      	beq.n	800170a <__gnu_Unwind_Backtrace+0x2e>
 800173c:	2409      	movs	r4, #9
 800173e:	a816      	add	r0, sp, #88	; 0x58
 8001740:	f7ff fe5e 	bl	8001400 <restore_non_core_regs>
 8001744:	4620      	mov	r0, r4
 8001746:	f50d 7d0f 	add.w	sp, sp, #572	; 0x23c
 800174a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800174c <__gnu_unwind_pr_common>:
 800174c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001750:	460d      	mov	r5, r1
 8001752:	6cc9      	ldr	r1, [r1, #76]	; 0x4c
 8001754:	b089      	sub	sp, #36	; 0x24
 8001756:	1d0c      	adds	r4, r1, #4
 8001758:	4616      	mov	r6, r2
 800175a:	f000 0b03 	and.w	fp, r0, #3
 800175e:	680a      	ldr	r2, [r1, #0]
 8001760:	9406      	str	r4, [sp, #24]
 8001762:	461f      	mov	r7, r3
 8001764:	2b00      	cmp	r3, #0
 8001766:	d068      	beq.n	800183a <__gnu_unwind_pr_common+0xee>
 8001768:	0c13      	lsrs	r3, r2, #16
 800176a:	b2d9      	uxtb	r1, r3
 800176c:	0412      	lsls	r2, r2, #16
 800176e:	f88d 301d 	strb.w	r3, [sp, #29]
 8001772:	2302      	movs	r3, #2
 8001774:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8001778:	9205      	str	r2, [sp, #20]
 800177a:	f88d 301c 	strb.w	r3, [sp, #28]
 800177e:	6d2b      	ldr	r3, [r5, #80]	; 0x50
 8001780:	f1bb 0f02 	cmp.w	fp, #2
 8001784:	bf08      	it	eq
 8001786:	6bac      	ldreq	r4, [r5, #56]	; 0x38
 8001788:	f013 0301 	ands.w	r3, r3, #1
 800178c:	d146      	bne.n	800181c <__gnu_unwind_pr_common+0xd0>
 800178e:	9301      	str	r3, [sp, #4]
 8001790:	f000 0308 	and.w	r3, r0, #8
 8001794:	9300      	str	r3, [sp, #0]
 8001796:	f8d4 9000 	ldr.w	r9, [r4]
 800179a:	f1b9 0f00 	cmp.w	r9, #0
 800179e:	f000 80f3 	beq.w	8001988 <__gnu_unwind_pr_common+0x23c>
 80017a2:	2f02      	cmp	r7, #2
 80017a4:	d045      	beq.n	8001832 <__gnu_unwind_pr_common+0xe6>
 80017a6:	f8b4 9000 	ldrh.w	r9, [r4]
 80017aa:	f8b4 8002 	ldrh.w	r8, [r4, #2]
 80017ae:	3404      	adds	r4, #4
 80017b0:	6cab      	ldr	r3, [r5, #72]	; 0x48
 80017b2:	f028 0a01 	bic.w	sl, r8, #1
 80017b6:	210f      	movs	r1, #15
 80017b8:	4630      	mov	r0, r6
 80017ba:	449a      	add	sl, r3
 80017bc:	f7ff ff5e 	bl	800167c <_Unwind_GetGR>
 80017c0:	4582      	cmp	sl, r0
 80017c2:	d834      	bhi.n	800182e <__gnu_unwind_pr_common+0xe2>
 80017c4:	f029 0301 	bic.w	r3, r9, #1
 80017c8:	4453      	add	r3, sl
 80017ca:	4283      	cmp	r3, r0
 80017cc:	bf94      	ite	ls
 80017ce:	2000      	movls	r0, #0
 80017d0:	2001      	movhi	r0, #1
 80017d2:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80017d6:	f008 0802 	and.w	r8, r8, #2
 80017da:	f009 0901 	and.w	r9, r9, #1
 80017de:	ea48 0809 	orr.w	r8, r8, r9
 80017e2:	f1b8 0f01 	cmp.w	r8, #1
 80017e6:	d03a      	beq.n	800185e <__gnu_unwind_pr_common+0x112>
 80017e8:	d331      	bcc.n	800184e <__gnu_unwind_pr_common+0x102>
 80017ea:	f1b8 0f02 	cmp.w	r8, #2
 80017ee:	d11a      	bne.n	8001826 <__gnu_unwind_pr_common+0xda>
 80017f0:	6823      	ldr	r3, [r4, #0]
 80017f2:	f023 4a00 	bic.w	sl, r3, #2147483648	; 0x80000000
 80017f6:	f1bb 0f00 	cmp.w	fp, #0
 80017fa:	d166      	bne.n	80018ca <__gnu_unwind_pr_common+0x17e>
 80017fc:	b130      	cbz	r0, 800180c <__gnu_unwind_pr_common+0xc0>
 80017fe:	9a00      	ldr	r2, [sp, #0]
 8001800:	2a00      	cmp	r2, #0
 8001802:	d06c      	beq.n	80018de <__gnu_unwind_pr_common+0x192>
 8001804:	f1ba 0f00 	cmp.w	sl, #0
 8001808:	f000 8090 	beq.w	800192c <__gnu_unwind_pr_common+0x1e0>
 800180c:	2b00      	cmp	r3, #0
 800180e:	da00      	bge.n	8001812 <__gnu_unwind_pr_common+0xc6>
 8001810:	3404      	adds	r4, #4
 8001812:	f10a 0301 	add.w	r3, sl, #1
 8001816:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 800181a:	e7bc      	b.n	8001796 <__gnu_unwind_pr_common+0x4a>
 800181c:	4630      	mov	r0, r6
 800181e:	a905      	add	r1, sp, #20
 8001820:	f000 fa70 	bl	8001d04 <__gnu_unwind_execute>
 8001824:	b178      	cbz	r0, 8001846 <__gnu_unwind_pr_common+0xfa>
 8001826:	2009      	movs	r0, #9
 8001828:	b009      	add	sp, #36	; 0x24
 800182a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800182e:	2000      	movs	r0, #0
 8001830:	e7cf      	b.n	80017d2 <__gnu_unwind_pr_common+0x86>
 8001832:	f8d4 8004 	ldr.w	r8, [r4, #4]
 8001836:	3408      	adds	r4, #8
 8001838:	e7ba      	b.n	80017b0 <__gnu_unwind_pr_common+0x64>
 800183a:	0212      	lsls	r2, r2, #8
 800183c:	2303      	movs	r3, #3
 800183e:	9205      	str	r2, [sp, #20]
 8001840:	f8ad 301c 	strh.w	r3, [sp, #28]
 8001844:	e79b      	b.n	800177e <__gnu_unwind_pr_common+0x32>
 8001846:	2008      	movs	r0, #8
 8001848:	b009      	add	sp, #36	; 0x24
 800184a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800184e:	f1bb 0f00 	cmp.w	fp, #0
 8001852:	d002      	beq.n	800185a <__gnu_unwind_pr_common+0x10e>
 8001854:	2800      	cmp	r0, #0
 8001856:	f040 80b4 	bne.w	80019c2 <__gnu_unwind_pr_common+0x276>
 800185a:	3404      	adds	r4, #4
 800185c:	e79b      	b.n	8001796 <__gnu_unwind_pr_common+0x4a>
 800185e:	f1bb 0f00 	cmp.w	fp, #0
 8001862:	d118      	bne.n	8001896 <__gnu_unwind_pr_common+0x14a>
 8001864:	b1a8      	cbz	r0, 8001892 <__gnu_unwind_pr_common+0x146>
 8001866:	e9d4 2300 	ldrd	r2, r3, [r4]
 800186a:	1c99      	adds	r1, r3, #2
 800186c:	ea4f 72d2 	mov.w	r2, r2, lsr #31
 8001870:	d0d9      	beq.n	8001826 <__gnu_unwind_pr_common+0xda>
 8001872:	f105 0158 	add.w	r1, r5, #88	; 0x58
 8001876:	3301      	adds	r3, #1
 8001878:	9104      	str	r1, [sp, #16]
 800187a:	f000 80b5 	beq.w	80019e8 <__gnu_unwind_pr_common+0x29c>
 800187e:	1d20      	adds	r0, r4, #4
 8001880:	f7ff fdea 	bl	8001458 <_Unwind_decode_typeinfo_ptr.isra.0>
 8001884:	ab04      	add	r3, sp, #16
 8001886:	4601      	mov	r1, r0
 8001888:	4628      	mov	r0, r5
 800188a:	f019 f967 	bl	801ab5c <__cxa_type_match>
 800188e:	2800      	cmp	r0, #0
 8001890:	d167      	bne.n	8001962 <__gnu_unwind_pr_common+0x216>
 8001892:	3408      	adds	r4, #8
 8001894:	e77f      	b.n	8001796 <__gnu_unwind_pr_common+0x4a>
 8001896:	210d      	movs	r1, #13
 8001898:	4630      	mov	r0, r6
 800189a:	f8d5 8020 	ldr.w	r8, [r5, #32]
 800189e:	f7ff feed 	bl	800167c <_Unwind_GetGR>
 80018a2:	4580      	cmp	r8, r0
 80018a4:	d1f5      	bne.n	8001892 <__gnu_unwind_pr_common+0x146>
 80018a6:	6aab      	ldr	r3, [r5, #40]	; 0x28
 80018a8:	429c      	cmp	r4, r3
 80018aa:	d1f2      	bne.n	8001892 <__gnu_unwind_pr_common+0x146>
 80018ac:	4620      	mov	r0, r4
 80018ae:	f7ff fd07 	bl	80012c0 <selfrel_offset31>
 80018b2:	210f      	movs	r1, #15
 80018b4:	4602      	mov	r2, r0
 80018b6:	4630      	mov	r0, r6
 80018b8:	f7ff ff02 	bl	80016c0 <_Unwind_SetGR>
 80018bc:	4630      	mov	r0, r6
 80018be:	462a      	mov	r2, r5
 80018c0:	2100      	movs	r1, #0
 80018c2:	f7ff fefd 	bl	80016c0 <_Unwind_SetGR>
 80018c6:	2007      	movs	r0, #7
 80018c8:	e7ae      	b.n	8001828 <__gnu_unwind_pr_common+0xdc>
 80018ca:	210d      	movs	r1, #13
 80018cc:	4630      	mov	r0, r6
 80018ce:	f8d5 8020 	ldr.w	r8, [r5, #32]
 80018d2:	f7ff fed3 	bl	800167c <_Unwind_GetGR>
 80018d6:	4580      	cmp	r8, r0
 80018d8:	d032      	beq.n	8001940 <__gnu_unwind_pr_common+0x1f4>
 80018da:	6823      	ldr	r3, [r4, #0]
 80018dc:	e796      	b.n	800180c <__gnu_unwind_pr_common+0xc0>
 80018de:	f1ba 0f00 	cmp.w	sl, #0
 80018e2:	d023      	beq.n	800192c <__gnu_unwind_pr_common+0x1e0>
 80018e4:	f105 0358 	add.w	r3, r5, #88	; 0x58
 80018e8:	f104 0804 	add.w	r8, r4, #4
 80018ec:	f8cd b008 	str.w	fp, [sp, #8]
 80018f0:	f8dd 9000 	ldr.w	r9, [sp]
 80018f4:	9703      	str	r7, [sp, #12]
 80018f6:	46a3      	mov	fp, r4
 80018f8:	461c      	mov	r4, r3
 80018fa:	e002      	b.n	8001902 <__gnu_unwind_pr_common+0x1b6>
 80018fc:	4557      	cmp	r7, sl
 80018fe:	46b9      	mov	r9, r7
 8001900:	d040      	beq.n	8001984 <__gnu_unwind_pr_common+0x238>
 8001902:	4640      	mov	r0, r8
 8001904:	9404      	str	r4, [sp, #16]
 8001906:	f7ff fda7 	bl	8001458 <_Unwind_decode_typeinfo_ptr.isra.0>
 800190a:	ab04      	add	r3, sp, #16
 800190c:	4601      	mov	r1, r0
 800190e:	2200      	movs	r2, #0
 8001910:	4628      	mov	r0, r5
 8001912:	f019 f923 	bl	801ab5c <__cxa_type_match>
 8001916:	f109 0701 	add.w	r7, r9, #1
 800191a:	f108 0804 	add.w	r8, r8, #4
 800191e:	2800      	cmp	r0, #0
 8001920:	d0ec      	beq.n	80018fc <__gnu_unwind_pr_common+0x1b0>
 8001922:	45d1      	cmp	r9, sl
 8001924:	465c      	mov	r4, fp
 8001926:	e9dd b702 	ldrd	fp, r7, [sp, #8]
 800192a:	d1d6      	bne.n	80018da <__gnu_unwind_pr_common+0x18e>
 800192c:	4630      	mov	r0, r6
 800192e:	210d      	movs	r1, #13
 8001930:	f7ff fea4 	bl	800167c <_Unwind_GetGR>
 8001934:	9b04      	ldr	r3, [sp, #16]
 8001936:	6228      	str	r0, [r5, #32]
 8001938:	e9c5 3409 	strd	r3, r4, [r5, #36]	; 0x24
 800193c:	2006      	movs	r0, #6
 800193e:	e773      	b.n	8001828 <__gnu_unwind_pr_common+0xdc>
 8001940:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8001942:	429c      	cmp	r4, r3
 8001944:	d1c9      	bne.n	80018da <__gnu_unwind_pr_common+0x18e>
 8001946:	2204      	movs	r2, #4
 8001948:	f04f 0800 	mov.w	r8, #0
 800194c:	18a3      	adds	r3, r4, r2
 800194e:	e9c5 a80a 	strd	sl, r8, [r5, #40]	; 0x28
 8001952:	e9c5 230c 	strd	r2, r3, [r5, #48]	; 0x30
 8001956:	6823      	ldr	r3, [r4, #0]
 8001958:	4543      	cmp	r3, r8
 800195a:	db4d      	blt.n	80019f8 <__gnu_unwind_pr_common+0x2ac>
 800195c:	2301      	movs	r3, #1
 800195e:	9301      	str	r3, [sp, #4]
 8001960:	e757      	b.n	8001812 <__gnu_unwind_pr_common+0xc6>
 8001962:	4680      	mov	r8, r0
 8001964:	210d      	movs	r1, #13
 8001966:	4630      	mov	r0, r6
 8001968:	f7ff fe88 	bl	800167c <_Unwind_GetGR>
 800196c:	f1b8 0f02 	cmp.w	r8, #2
 8001970:	6228      	str	r0, [r5, #32]
 8001972:	d13e      	bne.n	80019f2 <__gnu_unwind_pr_common+0x2a6>
 8001974:	462b      	mov	r3, r5
 8001976:	9a04      	ldr	r2, [sp, #16]
 8001978:	f843 2f2c 	str.w	r2, [r3, #44]!
 800197c:	626b      	str	r3, [r5, #36]	; 0x24
 800197e:	62ac      	str	r4, [r5, #40]	; 0x28
 8001980:	2006      	movs	r0, #6
 8001982:	e751      	b.n	8001828 <__gnu_unwind_pr_common+0xdc>
 8001984:	465c      	mov	r4, fp
 8001986:	e7d1      	b.n	800192c <__gnu_unwind_pr_common+0x1e0>
 8001988:	a905      	add	r1, sp, #20
 800198a:	4630      	mov	r0, r6
 800198c:	f000 f9ba 	bl	8001d04 <__gnu_unwind_execute>
 8001990:	2800      	cmp	r0, #0
 8001992:	f47f af48 	bne.w	8001826 <__gnu_unwind_pr_common+0xda>
 8001996:	9b01      	ldr	r3, [sp, #4]
 8001998:	2b00      	cmp	r3, #0
 800199a:	f43f af54 	beq.w	8001846 <__gnu_unwind_pr_common+0xfa>
 800199e:	210f      	movs	r1, #15
 80019a0:	4630      	mov	r0, r6
 80019a2:	f7ff fe6b 	bl	800167c <_Unwind_GetGR>
 80019a6:	210e      	movs	r1, #14
 80019a8:	4602      	mov	r2, r0
 80019aa:	4630      	mov	r0, r6
 80019ac:	f7ff fe88 	bl	80016c0 <_Unwind_SetGR>
 80019b0:	4630      	mov	r0, r6
 80019b2:	4a1a      	ldr	r2, [pc, #104]	; (8001a1c <__gnu_unwind_pr_common+0x2d0>)
 80019b4:	210f      	movs	r1, #15
 80019b6:	f7ff fe83 	bl	80016c0 <_Unwind_SetGR>
 80019ba:	2007      	movs	r0, #7
 80019bc:	b009      	add	sp, #36	; 0x24
 80019be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80019c2:	4620      	mov	r0, r4
 80019c4:	f7ff fc7c 	bl	80012c0 <selfrel_offset31>
 80019c8:	3404      	adds	r4, #4
 80019ca:	4607      	mov	r7, r0
 80019cc:	63ac      	str	r4, [r5, #56]	; 0x38
 80019ce:	4628      	mov	r0, r5
 80019d0:	f019 f92a 	bl	801ac28 <__cxa_begin_cleanup>
 80019d4:	2800      	cmp	r0, #0
 80019d6:	f43f af26 	beq.w	8001826 <__gnu_unwind_pr_common+0xda>
 80019da:	4630      	mov	r0, r6
 80019dc:	463a      	mov	r2, r7
 80019de:	210f      	movs	r1, #15
 80019e0:	f7ff fe6e 	bl	80016c0 <_Unwind_SetGR>
 80019e4:	2007      	movs	r0, #7
 80019e6:	e71f      	b.n	8001828 <__gnu_unwind_pr_common+0xdc>
 80019e8:	4630      	mov	r0, r6
 80019ea:	210d      	movs	r1, #13
 80019ec:	f7ff fe46 	bl	800167c <_Unwind_GetGR>
 80019f0:	6228      	str	r0, [r5, #32]
 80019f2:	9b04      	ldr	r3, [sp, #16]
 80019f4:	626b      	str	r3, [r5, #36]	; 0x24
 80019f6:	e7c2      	b.n	800197e <__gnu_unwind_pr_common+0x232>
 80019f8:	f10a 0001 	add.w	r0, sl, #1
 80019fc:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 8001a00:	f7ff fc5e 	bl	80012c0 <selfrel_offset31>
 8001a04:	210f      	movs	r1, #15
 8001a06:	4602      	mov	r2, r0
 8001a08:	4630      	mov	r0, r6
 8001a0a:	f7ff fe59 	bl	80016c0 <_Unwind_SetGR>
 8001a0e:	4630      	mov	r0, r6
 8001a10:	462a      	mov	r2, r5
 8001a12:	4641      	mov	r1, r8
 8001a14:	f7ff fe54 	bl	80016c0 <_Unwind_SetGR>
 8001a18:	2007      	movs	r0, #7
 8001a1a:	e705      	b.n	8001828 <__gnu_unwind_pr_common+0xdc>
 8001a1c:	0801ad5d 	.word	0x0801ad5d

08001a20 <__aeabi_unwind_cpp_pr0>:
 8001a20:	2300      	movs	r3, #0
 8001a22:	e693      	b.n	800174c <__gnu_unwind_pr_common>

08001a24 <__aeabi_unwind_cpp_pr1>:
 8001a24:	2301      	movs	r3, #1
 8001a26:	e691      	b.n	800174c <__gnu_unwind_pr_common>

08001a28 <__aeabi_unwind_cpp_pr2>:
 8001a28:	2302      	movs	r3, #2
 8001a2a:	e68f      	b.n	800174c <__gnu_unwind_pr_common>

08001a2c <_Unwind_VRS_Pop>:
 8001a2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001a30:	4605      	mov	r5, r0
 8001a32:	b0c4      	sub	sp, #272	; 0x110
 8001a34:	2904      	cmp	r1, #4
 8001a36:	d806      	bhi.n	8001a46 <_Unwind_VRS_Pop+0x1a>
 8001a38:	e8df f001 	tbb	[pc, r1]
 8001a3c:	03052b4d 	.word	0x03052b4d
 8001a40:	09          	.byte	0x09
 8001a41:	00          	.byte	0x00
 8001a42:	2b03      	cmp	r3, #3
 8001a44:	d05f      	beq.n	8001b06 <_Unwind_VRS_Pop+0xda>
 8001a46:	2002      	movs	r0, #2
 8001a48:	b044      	add	sp, #272	; 0x110
 8001a4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001a4e:	2b00      	cmp	r3, #0
 8001a50:	d1f9      	bne.n	8001a46 <_Unwind_VRS_Pop+0x1a>
 8001a52:	2a10      	cmp	r2, #16
 8001a54:	d8f7      	bhi.n	8001a46 <_Unwind_VRS_Pop+0x1a>
 8001a56:	682b      	ldr	r3, [r5, #0]
 8001a58:	06dc      	lsls	r4, r3, #27
 8001a5a:	f100 80f4 	bmi.w	8001c46 <_Unwind_VRS_Pop+0x21a>
 8001a5e:	ac22      	add	r4, sp, #136	; 0x88
 8001a60:	4620      	mov	r0, r4
 8001a62:	9201      	str	r2, [sp, #4]
 8001a64:	f7ff fba6 	bl	80011b4 <__gnu_Unwind_Save_WMMXC>
 8001a68:	6ba8      	ldr	r0, [r5, #56]	; 0x38
 8001a6a:	9a01      	ldr	r2, [sp, #4]
 8001a6c:	2300      	movs	r3, #0
 8001a6e:	2601      	movs	r6, #1
 8001a70:	fa06 f103 	lsl.w	r1, r6, r3
 8001a74:	4211      	tst	r1, r2
 8001a76:	d003      	beq.n	8001a80 <_Unwind_VRS_Pop+0x54>
 8001a78:	6801      	ldr	r1, [r0, #0]
 8001a7a:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
 8001a7e:	3004      	adds	r0, #4
 8001a80:	3301      	adds	r3, #1
 8001a82:	2b04      	cmp	r3, #4
 8001a84:	d1f4      	bne.n	8001a70 <_Unwind_VRS_Pop+0x44>
 8001a86:	63a8      	str	r0, [r5, #56]	; 0x38
 8001a88:	4620      	mov	r0, r4
 8001a8a:	f7ff fb89 	bl	80011a0 <__gnu_Unwind_Restore_WMMXC>
 8001a8e:	2000      	movs	r0, #0
 8001a90:	e7da      	b.n	8001a48 <_Unwind_VRS_Pop+0x1c>
 8001a92:	2b01      	cmp	r3, #1
 8001a94:	ea4f 4612 	mov.w	r6, r2, lsr #16
 8001a98:	b297      	uxth	r7, r2
 8001a9a:	d052      	beq.n	8001b42 <_Unwind_VRS_Pop+0x116>
 8001a9c:	2b05      	cmp	r3, #5
 8001a9e:	d1d2      	bne.n	8001a46 <_Unwind_VRS_Pop+0x1a>
 8001aa0:	eb06 0807 	add.w	r8, r6, r7
 8001aa4:	f1b8 0f20 	cmp.w	r8, #32
 8001aa8:	d8cd      	bhi.n	8001a46 <_Unwind_VRS_Pop+0x1a>
 8001aaa:	2e0f      	cmp	r6, #15
 8001aac:	f240 8099 	bls.w	8001be2 <_Unwind_VRS_Pop+0x1b6>
 8001ab0:	46b8      	mov	r8, r7
 8001ab2:	2f00      	cmp	r7, #0
 8001ab4:	f040 80db 	bne.w	8001c6e <_Unwind_VRS_Pop+0x242>
 8001ab8:	6baa      	ldr	r2, [r5, #56]	; 0x38
 8001aba:	63aa      	str	r2, [r5, #56]	; 0x38
 8001abc:	2e0f      	cmp	r6, #15
 8001abe:	f240 80be 	bls.w	8001c3e <_Unwind_VRS_Pop+0x212>
 8001ac2:	f1b8 0f00 	cmp.w	r8, #0
 8001ac6:	d002      	beq.n	8001ace <_Unwind_VRS_Pop+0xa2>
 8001ac8:	a802      	add	r0, sp, #8
 8001aca:	f7ff fb1d 	bl	8001108 <__gnu_Unwind_Restore_VFP_D_16_to_31>
 8001ace:	2000      	movs	r0, #0
 8001ad0:	b044      	add	sp, #272	; 0x110
 8001ad2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001ad6:	2b00      	cmp	r3, #0
 8001ad8:	d1b5      	bne.n	8001a46 <_Unwind_VRS_Pop+0x1a>
 8001ada:	6bac      	ldr	r4, [r5, #56]	; 0x38
 8001adc:	b297      	uxth	r7, r2
 8001ade:	1d28      	adds	r0, r5, #4
 8001ae0:	2601      	movs	r6, #1
 8001ae2:	fa06 f103 	lsl.w	r1, r6, r3
 8001ae6:	4239      	tst	r1, r7
 8001ae8:	f103 0301 	add.w	r3, r3, #1
 8001aec:	d002      	beq.n	8001af4 <_Unwind_VRS_Pop+0xc8>
 8001aee:	6821      	ldr	r1, [r4, #0]
 8001af0:	6001      	str	r1, [r0, #0]
 8001af2:	3404      	adds	r4, #4
 8001af4:	2b10      	cmp	r3, #16
 8001af6:	f100 0004 	add.w	r0, r0, #4
 8001afa:	d1f2      	bne.n	8001ae2 <_Unwind_VRS_Pop+0xb6>
 8001afc:	f412 5000 	ands.w	r0, r2, #8192	; 0x2000
 8001b00:	d1e5      	bne.n	8001ace <_Unwind_VRS_Pop+0xa2>
 8001b02:	63ac      	str	r4, [r5, #56]	; 0x38
 8001b04:	e7a0      	b.n	8001a48 <_Unwind_VRS_Pop+0x1c>
 8001b06:	0c16      	lsrs	r6, r2, #16
 8001b08:	b297      	uxth	r7, r2
 8001b0a:	19f3      	adds	r3, r6, r7
 8001b0c:	2b10      	cmp	r3, #16
 8001b0e:	d89a      	bhi.n	8001a46 <_Unwind_VRS_Pop+0x1a>
 8001b10:	682b      	ldr	r3, [r5, #0]
 8001b12:	071a      	lsls	r2, r3, #28
 8001b14:	d45d      	bmi.n	8001bd2 <_Unwind_VRS_Pop+0x1a6>
 8001b16:	ac22      	add	r4, sp, #136	; 0x88
 8001b18:	4620      	mov	r0, r4
 8001b1a:	f7ff fb1f 	bl	800115c <__gnu_Unwind_Save_WMMXD>
 8001b1e:	eb04 01c6 	add.w	r1, r4, r6, lsl #3
 8001b22:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8001b24:	b13f      	cbz	r7, 8001b36 <_Unwind_VRS_Pop+0x10a>
 8001b26:	eb03 02c7 	add.w	r2, r3, r7, lsl #3
 8001b2a:	6818      	ldr	r0, [r3, #0]
 8001b2c:	f841 0b04 	str.w	r0, [r1], #4
 8001b30:	3304      	adds	r3, #4
 8001b32:	4293      	cmp	r3, r2
 8001b34:	d1f9      	bne.n	8001b2a <_Unwind_VRS_Pop+0xfe>
 8001b36:	4620      	mov	r0, r4
 8001b38:	63ab      	str	r3, [r5, #56]	; 0x38
 8001b3a:	f7ff faed 	bl	8001118 <__gnu_Unwind_Restore_WMMXD>
 8001b3e:	2000      	movs	r0, #0
 8001b40:	e782      	b.n	8001a48 <_Unwind_VRS_Pop+0x1c>
 8001b42:	19f2      	adds	r2, r6, r7
 8001b44:	2a10      	cmp	r2, #16
 8001b46:	f63f af7e 	bhi.w	8001a46 <_Unwind_VRS_Pop+0x1a>
 8001b4a:	2e0f      	cmp	r6, #15
 8001b4c:	f63f af7b 	bhi.w	8001a46 <_Unwind_VRS_Pop+0x1a>
 8001b50:	682a      	ldr	r2, [r5, #0]
 8001b52:	07d1      	lsls	r1, r2, #31
 8001b54:	d508      	bpl.n	8001b68 <_Unwind_VRS_Pop+0x13c>
 8001b56:	4628      	mov	r0, r5
 8001b58:	f022 0203 	bic.w	r2, r2, #3
 8001b5c:	f840 2b48 	str.w	r2, [r0], #72
 8001b60:	9301      	str	r3, [sp, #4]
 8001b62:	f7ff fac5 	bl	80010f0 <__gnu_Unwind_Save_VFP>
 8001b66:	9b01      	ldr	r3, [sp, #4]
 8001b68:	9301      	str	r3, [sp, #4]
 8001b6a:	ac22      	add	r4, sp, #136	; 0x88
 8001b6c:	4620      	mov	r0, r4
 8001b6e:	f7ff fabf 	bl	80010f0 <__gnu_Unwind_Save_VFP>
 8001b72:	6ba9      	ldr	r1, [r5, #56]	; 0x38
 8001b74:	9b01      	ldr	r3, [sp, #4]
 8001b76:	2f00      	cmp	r7, #0
 8001b78:	f000 8095 	beq.w	8001ca6 <_Unwind_VRS_Pop+0x27a>
 8001b7c:	007f      	lsls	r7, r7, #1
 8001b7e:	eb04 04c6 	add.w	r4, r4, r6, lsl #3
 8001b82:	f04f 0800 	mov.w	r8, #0
 8001b86:	3c04      	subs	r4, #4
 8001b88:	eb01 0287 	add.w	r2, r1, r7, lsl #2
 8001b8c:	f851 0b04 	ldr.w	r0, [r1], #4
 8001b90:	f844 0f04 	str.w	r0, [r4, #4]!
 8001b94:	4291      	cmp	r1, r2
 8001b96:	d1f9      	bne.n	8001b8c <_Unwind_VRS_Pop+0x160>
 8001b98:	f1b8 0f00 	cmp.w	r8, #0
 8001b9c:	d00f      	beq.n	8001bbe <_Unwind_VRS_Pop+0x192>
 8001b9e:	ac02      	add	r4, sp, #8
 8001ba0:	2e10      	cmp	r6, #16
 8001ba2:	4631      	mov	r1, r6
 8001ba4:	bf38      	it	cc
 8001ba6:	2110      	movcc	r1, #16
 8001ba8:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 8001bac:	3984      	subs	r1, #132	; 0x84
 8001bae:	eb02 04c8 	add.w	r4, r2, r8, lsl #3
 8001bb2:	f852 0b04 	ldr.w	r0, [r2], #4
 8001bb6:	f841 0f04 	str.w	r0, [r1, #4]!
 8001bba:	4294      	cmp	r4, r2
 8001bbc:	d1f9      	bne.n	8001bb2 <_Unwind_VRS_Pop+0x186>
 8001bbe:	2b01      	cmp	r3, #1
 8001bc0:	f47f af7b 	bne.w	8001aba <_Unwind_VRS_Pop+0x8e>
 8001bc4:	ac22      	add	r4, sp, #136	; 0x88
 8001bc6:	3204      	adds	r2, #4
 8001bc8:	63aa      	str	r2, [r5, #56]	; 0x38
 8001bca:	4620      	mov	r0, r4
 8001bcc:	f7ff fa8c 	bl	80010e8 <__gnu_Unwind_Restore_VFP>
 8001bd0:	e77d      	b.n	8001ace <_Unwind_VRS_Pop+0xa2>
 8001bd2:	f023 0308 	bic.w	r3, r3, #8
 8001bd6:	602b      	str	r3, [r5, #0]
 8001bd8:	f505 70a8 	add.w	r0, r5, #336	; 0x150
 8001bdc:	f7ff fabe 	bl	800115c <__gnu_Unwind_Save_WMMXD>
 8001be0:	e799      	b.n	8001b16 <_Unwind_VRS_Pop+0xea>
 8001be2:	f1b8 0f10 	cmp.w	r8, #16
 8001be6:	682a      	ldr	r2, [r5, #0]
 8001be8:	d943      	bls.n	8001c72 <_Unwind_VRS_Pop+0x246>
 8001bea:	07d0      	lsls	r0, r2, #31
 8001bec:	f1a8 0810 	sub.w	r8, r8, #16
 8001bf0:	d50b      	bpl.n	8001c0a <_Unwind_VRS_Pop+0x1de>
 8001bf2:	4628      	mov	r0, r5
 8001bf4:	f022 0201 	bic.w	r2, r2, #1
 8001bf8:	f042 0202 	orr.w	r2, r2, #2
 8001bfc:	f840 2b48 	str.w	r2, [r0], #72
 8001c00:	9301      	str	r3, [sp, #4]
 8001c02:	f7ff fa7d 	bl	8001100 <__gnu_Unwind_Save_VFP_D>
 8001c06:	682a      	ldr	r2, [r5, #0]
 8001c08:	9b01      	ldr	r3, [sp, #4]
 8001c0a:	0751      	lsls	r1, r2, #29
 8001c0c:	d425      	bmi.n	8001c5a <_Unwind_VRS_Pop+0x22e>
 8001c0e:	2e0f      	cmp	r6, #15
 8001c10:	d804      	bhi.n	8001c1c <_Unwind_VRS_Pop+0x1f0>
 8001c12:	a822      	add	r0, sp, #136	; 0x88
 8001c14:	9301      	str	r3, [sp, #4]
 8001c16:	f7ff fa73 	bl	8001100 <__gnu_Unwind_Save_VFP_D>
 8001c1a:	9b01      	ldr	r3, [sp, #4]
 8001c1c:	9301      	str	r3, [sp, #4]
 8001c1e:	ac02      	add	r4, sp, #8
 8001c20:	4620      	mov	r0, r4
 8001c22:	f7ff fa75 	bl	8001110 <__gnu_Unwind_Save_VFP_D_16_to_31>
 8001c26:	f1c6 0110 	rsb	r1, r6, #16
 8001c2a:	2900      	cmp	r1, #0
 8001c2c:	6baa      	ldr	r2, [r5, #56]	; 0x38
 8001c2e:	9b01      	ldr	r3, [sp, #4]
 8001c30:	ddb6      	ble.n	8001ba0 <_Unwind_VRS_Pop+0x174>
 8001c32:	ac22      	add	r4, sp, #136	; 0x88
 8001c34:	004f      	lsls	r7, r1, #1
 8001c36:	eb04 04c6 	add.w	r4, r4, r6, lsl #3
 8001c3a:	4611      	mov	r1, r2
 8001c3c:	e7a3      	b.n	8001b86 <_Unwind_VRS_Pop+0x15a>
 8001c3e:	a822      	add	r0, sp, #136	; 0x88
 8001c40:	f7ff fa5a 	bl	80010f8 <__gnu_Unwind_Restore_VFP_D>
 8001c44:	e73d      	b.n	8001ac2 <_Unwind_VRS_Pop+0x96>
 8001c46:	f023 0310 	bic.w	r3, r3, #16
 8001c4a:	602b      	str	r3, [r5, #0]
 8001c4c:	f505 70e8 	add.w	r0, r5, #464	; 0x1d0
 8001c50:	9201      	str	r2, [sp, #4]
 8001c52:	f7ff faaf 	bl	80011b4 <__gnu_Unwind_Save_WMMXC>
 8001c56:	9a01      	ldr	r2, [sp, #4]
 8001c58:	e701      	b.n	8001a5e <_Unwind_VRS_Pop+0x32>
 8001c5a:	4628      	mov	r0, r5
 8001c5c:	f022 0204 	bic.w	r2, r2, #4
 8001c60:	f840 2bd0 	str.w	r2, [r0], #208
 8001c64:	9301      	str	r3, [sp, #4]
 8001c66:	f7ff fa53 	bl	8001110 <__gnu_Unwind_Save_VFP_D_16_to_31>
 8001c6a:	9b01      	ldr	r3, [sp, #4]
 8001c6c:	e7cf      	b.n	8001c0e <_Unwind_VRS_Pop+0x1e2>
 8001c6e:	682a      	ldr	r2, [r5, #0]
 8001c70:	e7cb      	b.n	8001c0a <_Unwind_VRS_Pop+0x1de>
 8001c72:	07d0      	lsls	r0, r2, #31
 8001c74:	d50a      	bpl.n	8001c8c <_Unwind_VRS_Pop+0x260>
 8001c76:	4628      	mov	r0, r5
 8001c78:	f022 0201 	bic.w	r2, r2, #1
 8001c7c:	f042 0202 	orr.w	r2, r2, #2
 8001c80:	f840 2b48 	str.w	r2, [r0], #72
 8001c84:	9301      	str	r3, [sp, #4]
 8001c86:	f7ff fa3b 	bl	8001100 <__gnu_Unwind_Save_VFP_D>
 8001c8a:	9b01      	ldr	r3, [sp, #4]
 8001c8c:	9301      	str	r3, [sp, #4]
 8001c8e:	ac22      	add	r4, sp, #136	; 0x88
 8001c90:	4620      	mov	r0, r4
 8001c92:	f7ff fa35 	bl	8001100 <__gnu_Unwind_Save_VFP_D>
 8001c96:	46b8      	mov	r8, r7
 8001c98:	6ba9      	ldr	r1, [r5, #56]	; 0x38
 8001c9a:	9b01      	ldr	r3, [sp, #4]
 8001c9c:	2f00      	cmp	r7, #0
 8001c9e:	f47f af6d 	bne.w	8001b7c <_Unwind_VRS_Pop+0x150>
 8001ca2:	460a      	mov	r2, r1
 8001ca4:	e709      	b.n	8001aba <_Unwind_VRS_Pop+0x8e>
 8001ca6:	460a      	mov	r2, r1
 8001ca8:	e78d      	b.n	8001bc6 <_Unwind_VRS_Pop+0x19a>
 8001caa:	bf00      	nop

08001cac <next_unwind_byte>:
 8001cac:	7a02      	ldrb	r2, [r0, #8]
 8001cae:	b97a      	cbnz	r2, 8001cd0 <next_unwind_byte+0x24>
 8001cb0:	7a43      	ldrb	r3, [r0, #9]
 8001cb2:	b1a3      	cbz	r3, 8001cde <next_unwind_byte+0x32>
 8001cb4:	6842      	ldr	r2, [r0, #4]
 8001cb6:	3b01      	subs	r3, #1
 8001cb8:	b410      	push	{r4}
 8001cba:	7243      	strb	r3, [r0, #9]
 8001cbc:	6813      	ldr	r3, [r2, #0]
 8001cbe:	2103      	movs	r1, #3
 8001cc0:	1d14      	adds	r4, r2, #4
 8001cc2:	7201      	strb	r1, [r0, #8]
 8001cc4:	021a      	lsls	r2, r3, #8
 8001cc6:	6044      	str	r4, [r0, #4]
 8001cc8:	6002      	str	r2, [r0, #0]
 8001cca:	bc10      	pop	{r4}
 8001ccc:	0e18      	lsrs	r0, r3, #24
 8001cce:	4770      	bx	lr
 8001cd0:	6803      	ldr	r3, [r0, #0]
 8001cd2:	3a01      	subs	r2, #1
 8001cd4:	7202      	strb	r2, [r0, #8]
 8001cd6:	021a      	lsls	r2, r3, #8
 8001cd8:	6002      	str	r2, [r0, #0]
 8001cda:	0e18      	lsrs	r0, r3, #24
 8001cdc:	4770      	bx	lr
 8001cde:	20b0      	movs	r0, #176	; 0xb0
 8001ce0:	4770      	bx	lr
 8001ce2:	bf00      	nop

08001ce4 <_Unwind_GetGR.constprop.0>:
 8001ce4:	b500      	push	{lr}
 8001ce6:	b085      	sub	sp, #20
 8001ce8:	aa03      	add	r2, sp, #12
 8001cea:	2300      	movs	r3, #0
 8001cec:	9200      	str	r2, [sp, #0]
 8001cee:	4619      	mov	r1, r3
 8001cf0:	220c      	movs	r2, #12
 8001cf2:	f7ff fcad 	bl	8001650 <_Unwind_VRS_Get>
 8001cf6:	9803      	ldr	r0, [sp, #12]
 8001cf8:	b005      	add	sp, #20
 8001cfa:	f85d fb04 	ldr.w	pc, [sp], #4
 8001cfe:	bf00      	nop

08001d00 <unwind_UCB_from_context>:
 8001d00:	e7f0      	b.n	8001ce4 <_Unwind_GetGR.constprop.0>
 8001d02:	bf00      	nop

08001d04 <__gnu_unwind_execute>:
 8001d04:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001d08:	4605      	mov	r5, r0
 8001d0a:	b085      	sub	sp, #20
 8001d0c:	460e      	mov	r6, r1
 8001d0e:	f04f 0800 	mov.w	r8, #0
 8001d12:	4630      	mov	r0, r6
 8001d14:	f7ff ffca 	bl	8001cac <next_unwind_byte>
 8001d18:	28b0      	cmp	r0, #176	; 0xb0
 8001d1a:	4604      	mov	r4, r0
 8001d1c:	f000 80b1 	beq.w	8001e82 <__gnu_unwind_execute+0x17e>
 8001d20:	0607      	lsls	r7, r0, #24
 8001d22:	d520      	bpl.n	8001d66 <__gnu_unwind_execute+0x62>
 8001d24:	f000 03f0 	and.w	r3, r0, #240	; 0xf0
 8001d28:	2b80      	cmp	r3, #128	; 0x80
 8001d2a:	d065      	beq.n	8001df8 <__gnu_unwind_execute+0xf4>
 8001d2c:	2b90      	cmp	r3, #144	; 0x90
 8001d2e:	d036      	beq.n	8001d9e <__gnu_unwind_execute+0x9a>
 8001d30:	2ba0      	cmp	r3, #160	; 0xa0
 8001d32:	d078      	beq.n	8001e26 <__gnu_unwind_execute+0x122>
 8001d34:	2bb0      	cmp	r3, #176	; 0xb0
 8001d36:	d047      	beq.n	8001dc8 <__gnu_unwind_execute+0xc4>
 8001d38:	2bc0      	cmp	r3, #192	; 0xc0
 8001d3a:	f000 808a 	beq.w	8001e52 <__gnu_unwind_execute+0x14e>
 8001d3e:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
 8001d42:	2bd0      	cmp	r3, #208	; 0xd0
 8001d44:	d10b      	bne.n	8001d5e <__gnu_unwind_execute+0x5a>
 8001d46:	f000 0207 	and.w	r2, r0, #7
 8001d4a:	3201      	adds	r2, #1
 8001d4c:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8001d50:	2305      	movs	r3, #5
 8001d52:	2101      	movs	r1, #1
 8001d54:	4628      	mov	r0, r5
 8001d56:	f7ff fe69 	bl	8001a2c <_Unwind_VRS_Pop>
 8001d5a:	2800      	cmp	r0, #0
 8001d5c:	d0d9      	beq.n	8001d12 <__gnu_unwind_execute+0xe>
 8001d5e:	2009      	movs	r0, #9
 8001d60:	b005      	add	sp, #20
 8001d62:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001d66:	f10d 090c 	add.w	r9, sp, #12
 8001d6a:	2300      	movs	r3, #0
 8001d6c:	4619      	mov	r1, r3
 8001d6e:	0087      	lsls	r7, r0, #2
 8001d70:	f8cd 9000 	str.w	r9, [sp]
 8001d74:	220d      	movs	r2, #13
 8001d76:	4628      	mov	r0, r5
 8001d78:	f7ff fc6a 	bl	8001650 <_Unwind_VRS_Get>
 8001d7c:	b2ff      	uxtb	r7, r7
 8001d7e:	9b03      	ldr	r3, [sp, #12]
 8001d80:	f8cd 9000 	str.w	r9, [sp]
 8001d84:	3704      	adds	r7, #4
 8001d86:	0660      	lsls	r0, r4, #25
 8001d88:	bf4c      	ite	mi
 8001d8a:	1bdf      	submi	r7, r3, r7
 8001d8c:	18ff      	addpl	r7, r7, r3
 8001d8e:	2300      	movs	r3, #0
 8001d90:	4619      	mov	r1, r3
 8001d92:	220d      	movs	r2, #13
 8001d94:	4628      	mov	r0, r5
 8001d96:	9703      	str	r7, [sp, #12]
 8001d98:	f7ff fc7c 	bl	8001694 <_Unwind_VRS_Set>
 8001d9c:	e7b9      	b.n	8001d12 <__gnu_unwind_execute+0xe>
 8001d9e:	f000 030d 	and.w	r3, r0, #13
 8001da2:	2b0d      	cmp	r3, #13
 8001da4:	d0db      	beq.n	8001d5e <__gnu_unwind_execute+0x5a>
 8001da6:	af03      	add	r7, sp, #12
 8001da8:	2300      	movs	r3, #0
 8001daa:	f000 020f 	and.w	r2, r0, #15
 8001dae:	4619      	mov	r1, r3
 8001db0:	9700      	str	r7, [sp, #0]
 8001db2:	4628      	mov	r0, r5
 8001db4:	f7ff fc4c 	bl	8001650 <_Unwind_VRS_Get>
 8001db8:	2300      	movs	r3, #0
 8001dba:	9700      	str	r7, [sp, #0]
 8001dbc:	4619      	mov	r1, r3
 8001dbe:	220d      	movs	r2, #13
 8001dc0:	4628      	mov	r0, r5
 8001dc2:	f7ff fc67 	bl	8001694 <_Unwind_VRS_Set>
 8001dc6:	e7a4      	b.n	8001d12 <__gnu_unwind_execute+0xe>
 8001dc8:	28b1      	cmp	r0, #177	; 0xb1
 8001dca:	d05f      	beq.n	8001e8c <__gnu_unwind_execute+0x188>
 8001dcc:	28b2      	cmp	r0, #178	; 0xb2
 8001dce:	f000 80cc 	beq.w	8001f6a <__gnu_unwind_execute+0x266>
 8001dd2:	28b3      	cmp	r0, #179	; 0xb3
 8001dd4:	d07e      	beq.n	8001ed4 <__gnu_unwind_execute+0x1d0>
 8001dd6:	f000 03fc 	and.w	r3, r0, #252	; 0xfc
 8001dda:	2bb4      	cmp	r3, #180	; 0xb4
 8001ddc:	d0bf      	beq.n	8001d5e <__gnu_unwind_execute+0x5a>
 8001dde:	f000 0207 	and.w	r2, r0, #7
 8001de2:	3201      	adds	r2, #1
 8001de4:	2301      	movs	r3, #1
 8001de6:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8001dea:	4619      	mov	r1, r3
 8001dec:	4628      	mov	r0, r5
 8001dee:	f7ff fe1d 	bl	8001a2c <_Unwind_VRS_Pop>
 8001df2:	2800      	cmp	r0, #0
 8001df4:	d08d      	beq.n	8001d12 <__gnu_unwind_execute+0xe>
 8001df6:	e7b2      	b.n	8001d5e <__gnu_unwind_execute+0x5a>
 8001df8:	4630      	mov	r0, r6
 8001dfa:	f7ff ff57 	bl	8001cac <next_unwind_byte>
 8001dfe:	0224      	lsls	r4, r4, #8
 8001e00:	4304      	orrs	r4, r0
 8001e02:	f5b4 4f00 	cmp.w	r4, #32768	; 0x8000
 8001e06:	d0aa      	beq.n	8001d5e <__gnu_unwind_execute+0x5a>
 8001e08:	0124      	lsls	r4, r4, #4
 8001e0a:	2300      	movs	r3, #0
 8001e0c:	b2a2      	uxth	r2, r4
 8001e0e:	4619      	mov	r1, r3
 8001e10:	4628      	mov	r0, r5
 8001e12:	f7ff fe0b 	bl	8001a2c <_Unwind_VRS_Pop>
 8001e16:	2800      	cmp	r0, #0
 8001e18:	d1a1      	bne.n	8001d5e <__gnu_unwind_execute+0x5a>
 8001e1a:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8001e1e:	bf18      	it	ne
 8001e20:	f04f 0801 	movne.w	r8, #1
 8001e24:	e775      	b.n	8001d12 <__gnu_unwind_execute+0xe>
 8001e26:	43c2      	mvns	r2, r0
 8001e28:	f002 0307 	and.w	r3, r2, #7
 8001e2c:	f44f 627f 	mov.w	r2, #4080	; 0xff0
 8001e30:	411a      	asrs	r2, r3
 8001e32:	0701      	lsls	r1, r0, #28
 8001e34:	f402 627f 	and.w	r2, r2, #4080	; 0xff0
 8001e38:	f04f 0300 	mov.w	r3, #0
 8001e3c:	bf48      	it	mi
 8001e3e:	f442 4280 	orrmi.w	r2, r2, #16384	; 0x4000
 8001e42:	4619      	mov	r1, r3
 8001e44:	4628      	mov	r0, r5
 8001e46:	f7ff fdf1 	bl	8001a2c <_Unwind_VRS_Pop>
 8001e4a:	2800      	cmp	r0, #0
 8001e4c:	f43f af61 	beq.w	8001d12 <__gnu_unwind_execute+0xe>
 8001e50:	e785      	b.n	8001d5e <__gnu_unwind_execute+0x5a>
 8001e52:	28c6      	cmp	r0, #198	; 0xc6
 8001e54:	d051      	beq.n	8001efa <__gnu_unwind_execute+0x1f6>
 8001e56:	28c7      	cmp	r0, #199	; 0xc7
 8001e58:	d05a      	beq.n	8001f10 <__gnu_unwind_execute+0x20c>
 8001e5a:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
 8001e5e:	2bc0      	cmp	r3, #192	; 0xc0
 8001e60:	d069      	beq.n	8001f36 <__gnu_unwind_execute+0x232>
 8001e62:	28c8      	cmp	r0, #200	; 0xc8
 8001e64:	d075      	beq.n	8001f52 <__gnu_unwind_execute+0x24e>
 8001e66:	28c9      	cmp	r0, #201	; 0xc9
 8001e68:	f47f af79 	bne.w	8001d5e <__gnu_unwind_execute+0x5a>
 8001e6c:	4630      	mov	r0, r6
 8001e6e:	f7ff ff1d 	bl	8001cac <next_unwind_byte>
 8001e72:	0302      	lsls	r2, r0, #12
 8001e74:	f000 000f 	and.w	r0, r0, #15
 8001e78:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
 8001e7c:	3001      	adds	r0, #1
 8001e7e:	4302      	orrs	r2, r0
 8001e80:	e766      	b.n	8001d50 <__gnu_unwind_execute+0x4c>
 8001e82:	f1b8 0f00 	cmp.w	r8, #0
 8001e86:	d014      	beq.n	8001eb2 <__gnu_unwind_execute+0x1ae>
 8001e88:	2000      	movs	r0, #0
 8001e8a:	e769      	b.n	8001d60 <__gnu_unwind_execute+0x5c>
 8001e8c:	4630      	mov	r0, r6
 8001e8e:	f7ff ff0d 	bl	8001cac <next_unwind_byte>
 8001e92:	2800      	cmp	r0, #0
 8001e94:	f43f af63 	beq.w	8001d5e <__gnu_unwind_execute+0x5a>
 8001e98:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
 8001e9c:	f47f af5f 	bne.w	8001d5e <__gnu_unwind_execute+0x5a>
 8001ea0:	4602      	mov	r2, r0
 8001ea2:	4619      	mov	r1, r3
 8001ea4:	4628      	mov	r0, r5
 8001ea6:	f7ff fdc1 	bl	8001a2c <_Unwind_VRS_Pop>
 8001eaa:	2800      	cmp	r0, #0
 8001eac:	f43f af31 	beq.w	8001d12 <__gnu_unwind_execute+0xe>
 8001eb0:	e755      	b.n	8001d5e <__gnu_unwind_execute+0x5a>
 8001eb2:	ac03      	add	r4, sp, #12
 8001eb4:	4643      	mov	r3, r8
 8001eb6:	220e      	movs	r2, #14
 8001eb8:	4641      	mov	r1, r8
 8001eba:	9400      	str	r4, [sp, #0]
 8001ebc:	4628      	mov	r0, r5
 8001ebe:	f7ff fbc7 	bl	8001650 <_Unwind_VRS_Get>
 8001ec2:	9400      	str	r4, [sp, #0]
 8001ec4:	4628      	mov	r0, r5
 8001ec6:	4643      	mov	r3, r8
 8001ec8:	220f      	movs	r2, #15
 8001eca:	4641      	mov	r1, r8
 8001ecc:	f7ff fbe2 	bl	8001694 <_Unwind_VRS_Set>
 8001ed0:	4640      	mov	r0, r8
 8001ed2:	e745      	b.n	8001d60 <__gnu_unwind_execute+0x5c>
 8001ed4:	4630      	mov	r0, r6
 8001ed6:	f7ff fee9 	bl	8001cac <next_unwind_byte>
 8001eda:	0301      	lsls	r1, r0, #12
 8001edc:	f000 000f 	and.w	r0, r0, #15
 8001ee0:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
 8001ee4:	1c42      	adds	r2, r0, #1
 8001ee6:	2301      	movs	r3, #1
 8001ee8:	430a      	orrs	r2, r1
 8001eea:	4628      	mov	r0, r5
 8001eec:	4619      	mov	r1, r3
 8001eee:	f7ff fd9d 	bl	8001a2c <_Unwind_VRS_Pop>
 8001ef2:	2800      	cmp	r0, #0
 8001ef4:	f43f af0d 	beq.w	8001d12 <__gnu_unwind_execute+0xe>
 8001ef8:	e731      	b.n	8001d5e <__gnu_unwind_execute+0x5a>
 8001efa:	4630      	mov	r0, r6
 8001efc:	f7ff fed6 	bl	8001cac <next_unwind_byte>
 8001f00:	0301      	lsls	r1, r0, #12
 8001f02:	f000 000f 	and.w	r0, r0, #15
 8001f06:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
 8001f0a:	1c42      	adds	r2, r0, #1
 8001f0c:	2303      	movs	r3, #3
 8001f0e:	e7eb      	b.n	8001ee8 <__gnu_unwind_execute+0x1e4>
 8001f10:	4630      	mov	r0, r6
 8001f12:	f7ff fecb 	bl	8001cac <next_unwind_byte>
 8001f16:	4602      	mov	r2, r0
 8001f18:	2800      	cmp	r0, #0
 8001f1a:	f43f af20 	beq.w	8001d5e <__gnu_unwind_execute+0x5a>
 8001f1e:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
 8001f22:	f47f af1c 	bne.w	8001d5e <__gnu_unwind_execute+0x5a>
 8001f26:	2104      	movs	r1, #4
 8001f28:	4628      	mov	r0, r5
 8001f2a:	f7ff fd7f 	bl	8001a2c <_Unwind_VRS_Pop>
 8001f2e:	2800      	cmp	r0, #0
 8001f30:	f43f aeef 	beq.w	8001d12 <__gnu_unwind_execute+0xe>
 8001f34:	e713      	b.n	8001d5e <__gnu_unwind_execute+0x5a>
 8001f36:	f000 020f 	and.w	r2, r0, #15
 8001f3a:	3201      	adds	r2, #1
 8001f3c:	2303      	movs	r3, #3
 8001f3e:	f442 2220 	orr.w	r2, r2, #655360	; 0xa0000
 8001f42:	4619      	mov	r1, r3
 8001f44:	4628      	mov	r0, r5
 8001f46:	f7ff fd71 	bl	8001a2c <_Unwind_VRS_Pop>
 8001f4a:	2800      	cmp	r0, #0
 8001f4c:	f43f aee1 	beq.w	8001d12 <__gnu_unwind_execute+0xe>
 8001f50:	e705      	b.n	8001d5e <__gnu_unwind_execute+0x5a>
 8001f52:	4630      	mov	r0, r6
 8001f54:	f7ff feaa 	bl	8001cac <next_unwind_byte>
 8001f58:	f000 02f0 	and.w	r2, r0, #240	; 0xf0
 8001f5c:	f000 030f 	and.w	r3, r0, #15
 8001f60:	3210      	adds	r2, #16
 8001f62:	3301      	adds	r3, #1
 8001f64:	ea43 3202 	orr.w	r2, r3, r2, lsl #12
 8001f68:	e6f2      	b.n	8001d50 <__gnu_unwind_execute+0x4c>
 8001f6a:	2300      	movs	r3, #0
 8001f6c:	f10d 090c 	add.w	r9, sp, #12
 8001f70:	220d      	movs	r2, #13
 8001f72:	4619      	mov	r1, r3
 8001f74:	f8cd 9000 	str.w	r9, [sp]
 8001f78:	4628      	mov	r0, r5
 8001f7a:	f7ff fb69 	bl	8001650 <_Unwind_VRS_Get>
 8001f7e:	4630      	mov	r0, r6
 8001f80:	f7ff fe94 	bl	8001cac <next_unwind_byte>
 8001f84:	0602      	lsls	r2, r0, #24
 8001f86:	f04f 0702 	mov.w	r7, #2
 8001f8a:	d50c      	bpl.n	8001fa6 <__gnu_unwind_execute+0x2a2>
 8001f8c:	9b03      	ldr	r3, [sp, #12]
 8001f8e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8001f92:	40b8      	lsls	r0, r7
 8001f94:	4403      	add	r3, r0
 8001f96:	4630      	mov	r0, r6
 8001f98:	9303      	str	r3, [sp, #12]
 8001f9a:	f7ff fe87 	bl	8001cac <next_unwind_byte>
 8001f9e:	0603      	lsls	r3, r0, #24
 8001fa0:	f107 0707 	add.w	r7, r7, #7
 8001fa4:	d4f2      	bmi.n	8001f8c <__gnu_unwind_execute+0x288>
 8001fa6:	9b03      	ldr	r3, [sp, #12]
 8001fa8:	f8cd 9000 	str.w	r9, [sp]
 8001fac:	f000 047f 	and.w	r4, r0, #127	; 0x7f
 8001fb0:	f503 7201 	add.w	r2, r3, #516	; 0x204
 8001fb4:	40bc      	lsls	r4, r7
 8001fb6:	2300      	movs	r3, #0
 8001fb8:	4414      	add	r4, r2
 8001fba:	4619      	mov	r1, r3
 8001fbc:	220d      	movs	r2, #13
 8001fbe:	4628      	mov	r0, r5
 8001fc0:	9403      	str	r4, [sp, #12]
 8001fc2:	f7ff fb67 	bl	8001694 <_Unwind_VRS_Set>
 8001fc6:	e6a4      	b.n	8001d12 <__gnu_unwind_execute+0xe>

08001fc8 <__gnu_unwind_frame>:
 8001fc8:	b510      	push	{r4, lr}
 8001fca:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8001fcc:	b084      	sub	sp, #16
 8001fce:	685a      	ldr	r2, [r3, #4]
 8001fd0:	2003      	movs	r0, #3
 8001fd2:	f88d 000c 	strb.w	r0, [sp, #12]
 8001fd6:	79dc      	ldrb	r4, [r3, #7]
 8001fd8:	f88d 400d 	strb.w	r4, [sp, #13]
 8001fdc:	0212      	lsls	r2, r2, #8
 8001fde:	3308      	adds	r3, #8
 8001fe0:	4608      	mov	r0, r1
 8001fe2:	a901      	add	r1, sp, #4
 8001fe4:	9201      	str	r2, [sp, #4]
 8001fe6:	9302      	str	r3, [sp, #8]
 8001fe8:	f7ff fe8c 	bl	8001d04 <__gnu_unwind_execute>
 8001fec:	b004      	add	sp, #16
 8001fee:	bd10      	pop	{r4, pc}

08001ff0 <_Unwind_GetRegionStart>:
 8001ff0:	b508      	push	{r3, lr}
 8001ff2:	f7ff fe85 	bl	8001d00 <unwind_UCB_from_context>
 8001ff6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8001ff8:	bd08      	pop	{r3, pc}
 8001ffa:	bf00      	nop

08001ffc <_Unwind_GetLanguageSpecificData>:
 8001ffc:	b508      	push	{r3, lr}
 8001ffe:	f7ff fe7f 	bl	8001d00 <unwind_UCB_from_context>
 8002002:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8002004:	79c3      	ldrb	r3, [r0, #7]
 8002006:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800200a:	3008      	adds	r0, #8
 800200c:	bd08      	pop	{r3, pc}
 800200e:	bf00      	nop

08002010 <_Unwind_GetDataRelBase>:
 8002010:	b508      	push	{r3, lr}
 8002012:	f019 fa69 	bl	801b4e8 <abort>
 8002016:	bf00      	nop

08002018 <_Unwind_GetTextRelBase>:
 8002018:	b508      	push	{r3, lr}
 800201a:	f7ff fff9 	bl	8002010 <_Unwind_GetDataRelBase>
 800201e:	bf00      	nop

08002020 <d_make_comp>:
 8002020:	b570      	push	{r4, r5, r6, lr}
 8002022:	0005      	movs	r5, r0
 8002024:	294f      	cmp	r1, #79	; 0x4f
 8002026:	d81b      	bhi.n	8002060 <d_make_comp+0x40>
 8002028:	4c0e      	ldr	r4, [pc, #56]	; (8002064 <d_make_comp+0x44>)
 800202a:	0088      	lsls	r0, r1, #2
 800202c:	5820      	ldr	r0, [r4, r0]
 800202e:	4687      	mov	pc, r0
 8002030:	2a00      	cmp	r2, #0
 8002032:	d015      	beq.n	8002060 <d_make_comp+0x40>
 8002034:	696c      	ldr	r4, [r5, #20]
 8002036:	69a8      	ldr	r0, [r5, #24]
 8002038:	4284      	cmp	r4, r0
 800203a:	da11      	bge.n	8002060 <d_make_comp+0x40>
 800203c:	692e      	ldr	r6, [r5, #16]
 800203e:	46b4      	mov	ip, r6
 8002040:	2600      	movs	r6, #0
 8002042:	0120      	lsls	r0, r4, #4
 8002044:	4460      	add	r0, ip
 8002046:	3401      	adds	r4, #1
 8002048:	6046      	str	r6, [r0, #4]
 800204a:	616c      	str	r4, [r5, #20]
 800204c:	7001      	strb	r1, [r0, #0]
 800204e:	6082      	str	r2, [r0, #8]
 8002050:	60c3      	str	r3, [r0, #12]
 8002052:	bc70      	pop	{r4, r5, r6}
 8002054:	bc02      	pop	{r1}
 8002056:	4708      	bx	r1
 8002058:	2a00      	cmp	r2, #0
 800205a:	d001      	beq.n	8002060 <d_make_comp+0x40>
 800205c:	2b00      	cmp	r3, #0
 800205e:	d1e9      	bne.n	8002034 <d_make_comp+0x14>
 8002060:	2000      	movs	r0, #0
 8002062:	e7f6      	b.n	8002052 <d_make_comp+0x32>
 8002064:	08020218 	.word	0x08020218

08002068 <d_ref_qualifier>:
 8002068:	b570      	push	{r4, r5, r6, lr}
 800206a:	68c3      	ldr	r3, [r0, #12]
 800206c:	781c      	ldrb	r4, [r3, #0]
 800206e:	000a      	movs	r2, r1
 8002070:	2c52      	cmp	r4, #82	; 0x52
 8002072:	d006      	beq.n	8002082 <d_ref_qualifier+0x1a>
 8002074:	000d      	movs	r5, r1
 8002076:	2c4f      	cmp	r4, #79	; 0x4f
 8002078:	d003      	beq.n	8002082 <d_ref_qualifier+0x1a>
 800207a:	0028      	movs	r0, r5
 800207c:	bc70      	pop	{r4, r5, r6}
 800207e:	bc02      	pop	{r1}
 8002080:	4708      	bx	r1
 8002082:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8002084:	2c52      	cmp	r4, #82	; 0x52
 8002086:	d009      	beq.n	800209c <d_ref_qualifier+0x34>
 8002088:	3103      	adds	r1, #3
 800208a:	6301      	str	r1, [r0, #48]	; 0x30
 800208c:	2120      	movs	r1, #32
 800208e:	3301      	adds	r3, #1
 8002090:	60c3      	str	r3, [r0, #12]
 8002092:	2300      	movs	r3, #0
 8002094:	f7ff ffc4 	bl	8002020 <d_make_comp>
 8002098:	0005      	movs	r5, r0
 800209a:	e7ee      	b.n	800207a <d_ref_qualifier+0x12>
 800209c:	3102      	adds	r1, #2
 800209e:	6301      	str	r1, [r0, #48]	; 0x30
 80020a0:	211f      	movs	r1, #31
 80020a2:	e7f4      	b.n	800208e <d_ref_qualifier+0x26>

080020a4 <d_count_templates_scopes>:
 80020a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80020a6:	0006      	movs	r6, r0
 80020a8:	000f      	movs	r7, r1
 80020aa:	1e14      	subs	r4, r2, #0
 80020ac:	d009      	beq.n	80020c2 <d_count_templates_scopes+0x1e>
 80020ae:	4d11      	ldr	r5, [pc, #68]	; (80020f4 <d_count_templates_scopes+0x50>)
 80020b0:	7823      	ldrb	r3, [r4, #0]
 80020b2:	2b4f      	cmp	r3, #79	; 0x4f
 80020b4:	d805      	bhi.n	80020c2 <d_count_templates_scopes+0x1e>
 80020b6:	009b      	lsls	r3, r3, #2
 80020b8:	58eb      	ldr	r3, [r5, r3]
 80020ba:	469f      	mov	pc, r3
 80020bc:	68e4      	ldr	r4, [r4, #12]
 80020be:	2c00      	cmp	r4, #0
 80020c0:	d1f6      	bne.n	80020b0 <d_count_templates_scopes+0xc>
 80020c2:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80020c4:	bc01      	pop	{r0}
 80020c6:	4700      	bx	r0
 80020c8:	68a4      	ldr	r4, [r4, #8]
 80020ca:	e7f8      	b.n	80020be <d_count_templates_scopes+0x1a>
 80020cc:	68a2      	ldr	r2, [r4, #8]
 80020ce:	7813      	ldrb	r3, [r2, #0]
 80020d0:	2b05      	cmp	r3, #5
 80020d2:	d103      	bne.n	80020dc <d_count_templates_scopes+0x38>
 80020d4:	683b      	ldr	r3, [r7, #0]
 80020d6:	3301      	adds	r3, #1
 80020d8:	603b      	str	r3, [r7, #0]
 80020da:	68a2      	ldr	r2, [r4, #8]
 80020dc:	0039      	movs	r1, r7
 80020de:	0030      	movs	r0, r6
 80020e0:	f7ff ffe0 	bl	80020a4 <d_count_templates_scopes>
 80020e4:	68e4      	ldr	r4, [r4, #12]
 80020e6:	e7ea      	b.n	80020be <d_count_templates_scopes+0x1a>
 80020e8:	6833      	ldr	r3, [r6, #0]
 80020ea:	3301      	adds	r3, #1
 80020ec:	6033      	str	r3, [r6, #0]
 80020ee:	68a2      	ldr	r2, [r4, #8]
 80020f0:	e7f4      	b.n	80020dc <d_count_templates_scopes+0x38>
 80020f2:	46c0      	nop			; (mov r8, r8)
 80020f4:	08020358 	.word	0x08020358

080020f8 <d_append_buffer>:
 80020f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80020fa:	46d6      	mov	lr, sl
 80020fc:	464f      	mov	r7, r9
 80020fe:	4646      	mov	r6, r8
 8002100:	0004      	movs	r4, r0
 8002102:	b5c0      	push	{r6, r7, lr}
 8002104:	2a00      	cmp	r2, #0
 8002106:	d02c      	beq.n	8002162 <d_append_buffer+0x6a>
 8002108:	188f      	adds	r7, r1, r2
 800210a:	2200      	movs	r2, #0
 800210c:	2380      	movs	r3, #128	; 0x80
 800210e:	4692      	mov	sl, r2
 8002110:	320d      	adds	r2, #13
 8002112:	32ff      	adds	r2, #255	; 0xff
 8002114:	005b      	lsls	r3, r3, #1
 8002116:	4691      	mov	r9, r2
 8002118:	3a04      	subs	r2, #4
 800211a:	58c3      	ldr	r3, [r0, r3]
 800211c:	000d      	movs	r5, r1
 800211e:	4690      	mov	r8, r2
 8002120:	e019      	b.n	8002156 <d_append_buffer+0x5e>
 8002122:	4652      	mov	r2, sl
 8002124:	54e2      	strb	r2, [r4, r3]
 8002126:	464b      	mov	r3, r9
 8002128:	58e2      	ldr	r2, [r4, r3]
 800212a:	4643      	mov	r3, r8
 800212c:	21ff      	movs	r1, #255	; 0xff
 800212e:	58e3      	ldr	r3, [r4, r3]
 8002130:	0020      	movs	r0, r4
 8002132:	f007 f865 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8002136:	2292      	movs	r2, #146	; 0x92
 8002138:	0052      	lsls	r2, r2, #1
 800213a:	58a3      	ldr	r3, [r4, r2]
 800213c:	3301      	adds	r3, #1
 800213e:	50a3      	str	r3, [r4, r2]
 8002140:	2100      	movs	r1, #0
 8002142:	2301      	movs	r3, #1
 8002144:	2280      	movs	r2, #128	; 0x80
 8002146:	0052      	lsls	r2, r2, #1
 8002148:	50a3      	str	r3, [r4, r2]
 800214a:	3501      	adds	r5, #1
 800214c:	3204      	adds	r2, #4
 800214e:	5466      	strb	r6, [r4, r1]
 8002150:	54a6      	strb	r6, [r4, r2]
 8002152:	42bd      	cmp	r5, r7
 8002154:	d005      	beq.n	8002162 <d_append_buffer+0x6a>
 8002156:	782e      	ldrb	r6, [r5, #0]
 8002158:	2bff      	cmp	r3, #255	; 0xff
 800215a:	d0e2      	beq.n	8002122 <d_append_buffer+0x2a>
 800215c:	0019      	movs	r1, r3
 800215e:	3301      	adds	r3, #1
 8002160:	e7f0      	b.n	8002144 <d_append_buffer+0x4c>
 8002162:	bc1c      	pop	{r2, r3, r4}
 8002164:	4690      	mov	r8, r2
 8002166:	4699      	mov	r9, r3
 8002168:	46a2      	mov	sl, r4
 800216a:	bcf0      	pop	{r4, r5, r6, r7}
 800216c:	bc01      	pop	{r0}
 800216e:	4700      	bx	r0

08002170 <is_fnqual_component_type>:
 8002170:	0003      	movs	r3, r0
 8002172:	3b1c      	subs	r3, #28
 8002174:	061b      	lsls	r3, r3, #24
 8002176:	0002      	movs	r2, r0
 8002178:	0e1b      	lsrs	r3, r3, #24
 800217a:	2001      	movs	r0, #1
 800217c:	2b04      	cmp	r3, #4
 800217e:	d90a      	bls.n	8002196 <is_fnqual_component_type+0x26>
 8002180:	0013      	movs	r3, r2
 8002182:	2100      	movs	r1, #0
 8002184:	3b4e      	subs	r3, #78	; 0x4e
 8002186:	061b      	lsls	r3, r3, #24
 8002188:	0e1b      	lsrs	r3, r3, #24
 800218a:	3a4c      	subs	r2, #76	; 0x4c
 800218c:	4298      	cmp	r0, r3
 800218e:	4149      	adcs	r1, r1
 8002190:	4250      	negs	r0, r2
 8002192:	4150      	adcs	r0, r2
 8002194:	4308      	orrs	r0, r1
 8002196:	4770      	bx	lr

08002198 <d_number.isra.1>:
 8002198:	b570      	push	{r4, r5, r6, lr}
 800219a:	6801      	ldr	r1, [r0, #0]
 800219c:	780c      	ldrb	r4, [r1, #0]
 800219e:	0005      	movs	r5, r0
 80021a0:	2c6e      	cmp	r4, #110	; 0x6e
 80021a2:	d01e      	beq.n	80021e2 <d_number.isra.1+0x4a>
 80021a4:	0023      	movs	r3, r4
 80021a6:	3b30      	subs	r3, #48	; 0x30
 80021a8:	061b      	lsls	r3, r3, #24
 80021aa:	0e1b      	lsrs	r3, r3, #24
 80021ac:	2b09      	cmp	r3, #9
 80021ae:	d824      	bhi.n	80021fa <d_number.isra.1+0x62>
 80021b0:	2600      	movs	r6, #0
 80021b2:	2000      	movs	r0, #0
 80021b4:	3101      	adds	r1, #1
 80021b6:	0083      	lsls	r3, r0, #2
 80021b8:	181b      	adds	r3, r3, r0
 80021ba:	6029      	str	r1, [r5, #0]
 80021bc:	005b      	lsls	r3, r3, #1
 80021be:	191b      	adds	r3, r3, r4
 80021c0:	780c      	ldrb	r4, [r1, #0]
 80021c2:	0022      	movs	r2, r4
 80021c4:	0018      	movs	r0, r3
 80021c6:	3a30      	subs	r2, #48	; 0x30
 80021c8:	0612      	lsls	r2, r2, #24
 80021ca:	3830      	subs	r0, #48	; 0x30
 80021cc:	3101      	adds	r1, #1
 80021ce:	0e12      	lsrs	r2, r2, #24
 80021d0:	2a09      	cmp	r2, #9
 80021d2:	d9f0      	bls.n	80021b6 <d_number.isra.1+0x1e>
 80021d4:	2e00      	cmp	r6, #0
 80021d6:	d001      	beq.n	80021dc <d_number.isra.1+0x44>
 80021d8:	2030      	movs	r0, #48	; 0x30
 80021da:	1ac0      	subs	r0, r0, r3
 80021dc:	bc70      	pop	{r4, r5, r6}
 80021de:	bc02      	pop	{r1}
 80021e0:	4708      	bx	r1
 80021e2:	1c4a      	adds	r2, r1, #1
 80021e4:	6002      	str	r2, [r0, #0]
 80021e6:	784c      	ldrb	r4, [r1, #1]
 80021e8:	0023      	movs	r3, r4
 80021ea:	3b30      	subs	r3, #48	; 0x30
 80021ec:	061b      	lsls	r3, r3, #24
 80021ee:	0e1b      	lsrs	r3, r3, #24
 80021f0:	2b09      	cmp	r3, #9
 80021f2:	d802      	bhi.n	80021fa <d_number.isra.1+0x62>
 80021f4:	0011      	movs	r1, r2
 80021f6:	2601      	movs	r6, #1
 80021f8:	e7db      	b.n	80021b2 <d_number.isra.1+0x1a>
 80021fa:	2000      	movs	r0, #0
 80021fc:	e7ee      	b.n	80021dc <d_number.isra.1+0x44>
 80021fe:	46c0      	nop			; (mov r8, r8)

08002200 <d_number_component>:
 8002200:	6943      	ldr	r3, [r0, #20]
 8002202:	6982      	ldr	r2, [r0, #24]
 8002204:	b510      	push	{r4, lr}
 8002206:	4293      	cmp	r3, r2
 8002208:	da11      	bge.n	800222e <d_number_component+0x2e>
 800220a:	6902      	ldr	r2, [r0, #16]
 800220c:	4694      	mov	ip, r2
 800220e:	2200      	movs	r2, #0
 8002210:	011c      	lsls	r4, r3, #4
 8002212:	4464      	add	r4, ip
 8002214:	3301      	adds	r3, #1
 8002216:	6062      	str	r2, [r4, #4]
 8002218:	6143      	str	r3, [r0, #20]
 800221a:	2341      	movs	r3, #65	; 0x41
 800221c:	300c      	adds	r0, #12
 800221e:	7023      	strb	r3, [r4, #0]
 8002220:	f7ff ffba 	bl	8002198 <d_number.isra.1>
 8002224:	60a0      	str	r0, [r4, #8]
 8002226:	0020      	movs	r0, r4
 8002228:	bc10      	pop	{r4}
 800222a:	bc02      	pop	{r1}
 800222c:	4708      	bx	r1
 800222e:	2400      	movs	r4, #0
 8002230:	e7f9      	b.n	8002226 <d_number_component+0x26>
 8002232:	46c0      	nop			; (mov r8, r8)

08002234 <d_compact_number>:
 8002234:	b510      	push	{r4, lr}
 8002236:	68c3      	ldr	r3, [r0, #12]
 8002238:	781a      	ldrb	r2, [r3, #0]
 800223a:	0004      	movs	r4, r0
 800223c:	2a5f      	cmp	r2, #95	; 0x5f
 800223e:	d00f      	beq.n	8002260 <d_compact_number+0x2c>
 8002240:	2a6e      	cmp	r2, #110	; 0x6e
 8002242:	d00f      	beq.n	8002264 <d_compact_number+0x30>
 8002244:	300c      	adds	r0, #12
 8002246:	f7ff ffa7 	bl	8002198 <d_number.isra.1>
 800224a:	3001      	adds	r0, #1
 800224c:	d40a      	bmi.n	8002264 <d_compact_number+0x30>
 800224e:	68e3      	ldr	r3, [r4, #12]
 8002250:	781a      	ldrb	r2, [r3, #0]
 8002252:	2a5f      	cmp	r2, #95	; 0x5f
 8002254:	d106      	bne.n	8002264 <d_compact_number+0x30>
 8002256:	3301      	adds	r3, #1
 8002258:	60e3      	str	r3, [r4, #12]
 800225a:	bc10      	pop	{r4}
 800225c:	bc02      	pop	{r1}
 800225e:	4708      	bx	r1
 8002260:	2000      	movs	r0, #0
 8002262:	e7f8      	b.n	8002256 <d_compact_number+0x22>
 8002264:	2001      	movs	r0, #1
 8002266:	4240      	negs	r0, r0
 8002268:	e7f7      	b.n	800225a <d_compact_number+0x26>
 800226a:	46c0      	nop			; (mov r8, r8)

0800226c <d_template_param>:
 800226c:	b510      	push	{r4, lr}
 800226e:	68c3      	ldr	r3, [r0, #12]
 8002270:	781a      	ldrb	r2, [r3, #0]
 8002272:	0004      	movs	r4, r0
 8002274:	2a54      	cmp	r2, #84	; 0x54
 8002276:	d11a      	bne.n	80022ae <d_template_param+0x42>
 8002278:	3301      	adds	r3, #1
 800227a:	60c3      	str	r3, [r0, #12]
 800227c:	f7ff ffda 	bl	8002234 <d_compact_number>
 8002280:	1e02      	subs	r2, r0, #0
 8002282:	db14      	blt.n	80022ae <d_template_param+0x42>
 8002284:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8002286:	3301      	adds	r3, #1
 8002288:	62a3      	str	r3, [r4, #40]	; 0x28
 800228a:	69a1      	ldr	r1, [r4, #24]
 800228c:	6963      	ldr	r3, [r4, #20]
 800228e:	428b      	cmp	r3, r1
 8002290:	da0d      	bge.n	80022ae <d_template_param+0x42>
 8002292:	6921      	ldr	r1, [r4, #16]
 8002294:	468c      	mov	ip, r1
 8002296:	2100      	movs	r1, #0
 8002298:	0118      	lsls	r0, r3, #4
 800229a:	4460      	add	r0, ip
 800229c:	3301      	adds	r3, #1
 800229e:	6041      	str	r1, [r0, #4]
 80022a0:	6163      	str	r3, [r4, #20]
 80022a2:	2305      	movs	r3, #5
 80022a4:	6082      	str	r2, [r0, #8]
 80022a6:	7003      	strb	r3, [r0, #0]
 80022a8:	bc10      	pop	{r4}
 80022aa:	bc02      	pop	{r1}
 80022ac:	4708      	bx	r1
 80022ae:	2000      	movs	r0, #0
 80022b0:	e7fa      	b.n	80022a8 <d_template_param+0x3c>
 80022b2:	46c0      	nop			; (mov r8, r8)

080022b4 <d_source_name>:
 80022b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80022b6:	46c6      	mov	lr, r8
 80022b8:	0004      	movs	r4, r0
 80022ba:	b500      	push	{lr}
 80022bc:	300c      	adds	r0, #12
 80022be:	f7ff ff6b 	bl	8002198 <d_number.isra.1>
 80022c2:	1e05      	subs	r5, r0, #0
 80022c4:	dd48      	ble.n	8002358 <d_source_name+0xa4>
 80022c6:	68e6      	ldr	r6, [r4, #12]
 80022c8:	6863      	ldr	r3, [r4, #4]
 80022ca:	1b9b      	subs	r3, r3, r6
 80022cc:	4298      	cmp	r0, r3
 80022ce:	dc39      	bgt.n	8002344 <d_source_name+0x90>
 80022d0:	68a2      	ldr	r2, [r4, #8]
 80022d2:	1833      	adds	r3, r6, r0
 80022d4:	60e3      	str	r3, [r4, #12]
 80022d6:	0752      	lsls	r2, r2, #29
 80022d8:	d502      	bpl.n	80022e0 <d_source_name+0x2c>
 80022da:	781a      	ldrb	r2, [r3, #0]
 80022dc:	2a24      	cmp	r2, #36	; 0x24
 80022de:	d033      	beq.n	8002348 <d_source_name+0x94>
 80022e0:	69a3      	ldr	r3, [r4, #24]
 80022e2:	6967      	ldr	r7, [r4, #20]
 80022e4:	4698      	mov	r8, r3
 80022e6:	2d09      	cmp	r5, #9
 80022e8:	dd16      	ble.n	8002318 <d_source_name+0x64>
 80022ea:	2208      	movs	r2, #8
 80022ec:	4925      	ldr	r1, [pc, #148]	; (8002384 <d_source_name+0xd0>)
 80022ee:	0030      	movs	r0, r6
 80022f0:	f019 fe60 	bl	801bfb4 <memcmp>
 80022f4:	2800      	cmp	r0, #0
 80022f6:	d10f      	bne.n	8002318 <d_source_name+0x64>
 80022f8:	7a31      	ldrb	r1, [r6, #8]
 80022fa:	000b      	movs	r3, r1
 80022fc:	3b2e      	subs	r3, #46	; 0x2e
 80022fe:	425a      	negs	r2, r3
 8002300:	4153      	adcs	r3, r2
 8002302:	000a      	movs	r2, r1
 8002304:	3a5f      	subs	r2, #95	; 0x5f
 8002306:	4250      	negs	r0, r2
 8002308:	4142      	adcs	r2, r0
 800230a:	4313      	orrs	r3, r2
 800230c:	d101      	bne.n	8002312 <d_source_name+0x5e>
 800230e:	2924      	cmp	r1, #36	; 0x24
 8002310:	d102      	bne.n	8002318 <d_source_name+0x64>
 8002312:	7a73      	ldrb	r3, [r6, #9]
 8002314:	2b4e      	cmp	r3, #78	; 0x4e
 8002316:	d021      	beq.n	800235c <d_source_name+0xa8>
 8002318:	45b8      	cmp	r8, r7
 800231a:	dd13      	ble.n	8002344 <d_source_name+0x90>
 800231c:	6923      	ldr	r3, [r4, #16]
 800231e:	469c      	mov	ip, r3
 8002320:	2300      	movs	r3, #0
 8002322:	0138      	lsls	r0, r7, #4
 8002324:	4460      	add	r0, ip
 8002326:	3701      	adds	r7, #1
 8002328:	6043      	str	r3, [r0, #4]
 800232a:	6167      	str	r7, [r4, #20]
 800232c:	2e00      	cmp	r6, #0
 800232e:	d009      	beq.n	8002344 <d_source_name+0x90>
 8002330:	6043      	str	r3, [r0, #4]
 8002332:	7003      	strb	r3, [r0, #0]
 8002334:	6086      	str	r6, [r0, #8]
 8002336:	60c5      	str	r5, [r0, #12]
 8002338:	62e0      	str	r0, [r4, #44]	; 0x2c
 800233a:	bc04      	pop	{r2}
 800233c:	4690      	mov	r8, r2
 800233e:	bcf0      	pop	{r4, r5, r6, r7}
 8002340:	bc02      	pop	{r1}
 8002342:	4708      	bx	r1
 8002344:	2000      	movs	r0, #0
 8002346:	e7f7      	b.n	8002338 <d_source_name+0x84>
 8002348:	3301      	adds	r3, #1
 800234a:	60e3      	str	r3, [r4, #12]
 800234c:	69a3      	ldr	r3, [r4, #24]
 800234e:	6967      	ldr	r7, [r4, #20]
 8002350:	4698      	mov	r8, r3
 8002352:	2d09      	cmp	r5, #9
 8002354:	dde0      	ble.n	8002318 <d_source_name+0x64>
 8002356:	e7c8      	b.n	80022ea <d_source_name+0x36>
 8002358:	2000      	movs	r0, #0
 800235a:	e7ee      	b.n	800233a <d_source_name+0x86>
 800235c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800235e:	3316      	adds	r3, #22
 8002360:	1b5d      	subs	r5, r3, r5
 8002362:	6325      	str	r5, [r4, #48]	; 0x30
 8002364:	45b8      	cmp	r8, r7
 8002366:	dded      	ble.n	8002344 <d_source_name+0x90>
 8002368:	6923      	ldr	r3, [r4, #16]
 800236a:	469c      	mov	ip, r3
 800236c:	2300      	movs	r3, #0
 800236e:	0138      	lsls	r0, r7, #4
 8002370:	4460      	add	r0, ip
 8002372:	3701      	adds	r7, #1
 8002374:	6167      	str	r7, [r4, #20]
 8002376:	6043      	str	r3, [r0, #4]
 8002378:	7003      	strb	r3, [r0, #0]
 800237a:	4b03      	ldr	r3, [pc, #12]	; (8002388 <d_source_name+0xd4>)
 800237c:	6083      	str	r3, [r0, #8]
 800237e:	2315      	movs	r3, #21
 8002380:	60c3      	str	r3, [r0, #12]
 8002382:	e7d9      	b.n	8002338 <d_source_name+0x84>
 8002384:	08026d70 	.word	0x08026d70
 8002388:	08026d7c 	.word	0x08026d7c

0800238c <d_abi_tags>:
 800238c:	b570      	push	{r4, r5, r6, lr}
 800238e:	68c3      	ldr	r3, [r0, #12]
 8002390:	781a      	ldrb	r2, [r3, #0]
 8002392:	0004      	movs	r4, r0
 8002394:	000d      	movs	r5, r1
 8002396:	6ac6      	ldr	r6, [r0, #44]	; 0x2c
 8002398:	2a42      	cmp	r2, #66	; 0x42
 800239a:	d10f      	bne.n	80023bc <d_abi_tags+0x30>
 800239c:	3301      	adds	r3, #1
 800239e:	60e3      	str	r3, [r4, #12]
 80023a0:	0020      	movs	r0, r4
 80023a2:	f7ff ff87 	bl	80022b4 <d_source_name>
 80023a6:	002a      	movs	r2, r5
 80023a8:	0003      	movs	r3, r0
 80023aa:	214b      	movs	r1, #75	; 0x4b
 80023ac:	0020      	movs	r0, r4
 80023ae:	f7ff fe37 	bl	8002020 <d_make_comp>
 80023b2:	68e3      	ldr	r3, [r4, #12]
 80023b4:	781a      	ldrb	r2, [r3, #0]
 80023b6:	0005      	movs	r5, r0
 80023b8:	2a42      	cmp	r2, #66	; 0x42
 80023ba:	d0ef      	beq.n	800239c <d_abi_tags+0x10>
 80023bc:	0028      	movs	r0, r5
 80023be:	62e6      	str	r6, [r4, #44]	; 0x2c
 80023c0:	bc70      	pop	{r4, r5, r6}
 80023c2:	bc02      	pop	{r1}
 80023c4:	4708      	bx	r1
 80023c6:	46c0      	nop			; (mov r8, r8)

080023c8 <d_substitution>:
 80023c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80023ca:	46c6      	mov	lr, r8
 80023cc:	b500      	push	{lr}
 80023ce:	68c3      	ldr	r3, [r0, #12]
 80023d0:	781a      	ldrb	r2, [r3, #0]
 80023d2:	0004      	movs	r4, r0
 80023d4:	2a53      	cmp	r2, #83	; 0x53
 80023d6:	d11d      	bne.n	8002414 <d_substitution+0x4c>
 80023d8:	1c5a      	adds	r2, r3, #1
 80023da:	60c2      	str	r2, [r0, #12]
 80023dc:	785a      	ldrb	r2, [r3, #1]
 80023de:	2a00      	cmp	r2, #0
 80023e0:	d01e      	beq.n	8002420 <d_substitution+0x58>
 80023e2:	1c9a      	adds	r2, r3, #2
 80023e4:	60c2      	str	r2, [r0, #12]
 80023e6:	7858      	ldrb	r0, [r3, #1]
 80023e8:	0002      	movs	r2, r0
 80023ea:	3a30      	subs	r2, #48	; 0x30
 80023ec:	0613      	lsls	r3, r2, #24
 80023ee:	0e1b      	lsrs	r3, r3, #24
 80023f0:	2b09      	cmp	r3, #9
 80023f2:	d902      	bls.n	80023fa <d_substitution+0x32>
 80023f4:	285f      	cmp	r0, #95	; 0x5f
 80023f6:	d000      	beq.n	80023fa <d_substitution+0x32>
 80023f8:	e0a2      	b.n	8002540 <d_substitution+0x178>
 80023fa:	285f      	cmp	r0, #95	; 0x5f
 80023fc:	d161      	bne.n	80024c2 <d_substitution+0xfa>
 80023fe:	2300      	movs	r3, #0
 8002400:	6a22      	ldr	r2, [r4, #32]
 8002402:	429a      	cmp	r2, r3
 8002404:	d906      	bls.n	8002414 <d_substitution+0x4c>
 8002406:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8002408:	3201      	adds	r2, #1
 800240a:	62a2      	str	r2, [r4, #40]	; 0x28
 800240c:	69e2      	ldr	r2, [r4, #28]
 800240e:	009b      	lsls	r3, r3, #2
 8002410:	5898      	ldr	r0, [r3, r2]
 8002412:	e000      	b.n	8002416 <d_substitution+0x4e>
 8002414:	2000      	movs	r0, #0
 8002416:	bc04      	pop	{r2}
 8002418:	4690      	mov	r8, r2
 800241a:	bcf0      	pop	{r4, r5, r6, r7}
 800241c:	bc02      	pop	{r1}
 800241e:	4708      	bx	r1
 8002420:	2000      	movs	r0, #0
 8002422:	2308      	movs	r3, #8
 8002424:	68a2      	ldr	r2, [r4, #8]
 8002426:	4013      	ands	r3, r2
 8002428:	001d      	movs	r5, r3
 800242a:	1e6a      	subs	r2, r5, #1
 800242c:	4195      	sbcs	r5, r2
 800242e:	2b00      	cmp	r3, #0
 8002430:	d108      	bne.n	8002444 <d_substitution+0x7c>
 8002432:	07cb      	lsls	r3, r1, #31
 8002434:	d506      	bpl.n	8002444 <d_substitution+0x7c>
 8002436:	68e3      	ldr	r3, [r4, #12]
 8002438:	781b      	ldrb	r3, [r3, #0]
 800243a:	3b43      	subs	r3, #67	; 0x43
 800243c:	061b      	lsls	r3, r3, #24
 800243e:	0e1b      	lsrs	r3, r3, #24
 8002440:	2b01      	cmp	r3, #1
 8002442:	d968      	bls.n	8002516 <d_substitution+0x14e>
 8002444:	4b41      	ldr	r3, [pc, #260]	; (800254c <d_substitution+0x184>)
 8002446:	2274      	movs	r2, #116	; 0x74
 8002448:	0019      	movs	r1, r3
 800244a:	31c4      	adds	r1, #196	; 0xc4
 800244c:	4290      	cmp	r0, r2
 800244e:	d005      	beq.n	800245c <d_substitution+0x94>
 8002450:	331c      	adds	r3, #28
 8002452:	428b      	cmp	r3, r1
 8002454:	d2de      	bcs.n	8002414 <d_substitution+0x4c>
 8002456:	781a      	ldrb	r2, [r3, #0]
 8002458:	4290      	cmp	r0, r2
 800245a:	d1f9      	bne.n	8002450 <d_substitution+0x88>
 800245c:	6958      	ldr	r0, [r3, #20]
 800245e:	6962      	ldr	r2, [r4, #20]
 8002460:	69a6      	ldr	r6, [r4, #24]
 8002462:	2800      	cmp	r0, #0
 8002464:	d003      	beq.n	800246e <d_substitution+0xa6>
 8002466:	2100      	movs	r1, #0
 8002468:	42b2      	cmp	r2, r6
 800246a:	db59      	blt.n	8002520 <d_substitution+0x158>
 800246c:	62e1      	str	r1, [r4, #44]	; 0x2c
 800246e:	2d00      	cmp	r5, #0
 8002470:	d153      	bne.n	800251a <d_substitution+0x152>
 8002472:	685f      	ldr	r7, [r3, #4]
 8002474:	689d      	ldr	r5, [r3, #8]
 8002476:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002478:	195b      	adds	r3, r3, r5
 800247a:	6323      	str	r3, [r4, #48]	; 0x30
 800247c:	2000      	movs	r0, #0
 800247e:	4296      	cmp	r6, r2
 8002480:	dd0b      	ble.n	800249a <d_substitution+0xd2>
 8002482:	6923      	ldr	r3, [r4, #16]
 8002484:	469c      	mov	ip, r3
 8002486:	2300      	movs	r3, #0
 8002488:	0110      	lsls	r0, r2, #4
 800248a:	4460      	add	r0, ip
 800248c:	6043      	str	r3, [r0, #4]
 800248e:	3201      	adds	r2, #1
 8002490:	3318      	adds	r3, #24
 8002492:	6162      	str	r2, [r4, #20]
 8002494:	7003      	strb	r3, [r0, #0]
 8002496:	6087      	str	r7, [r0, #8]
 8002498:	60c5      	str	r5, [r0, #12]
 800249a:	68e3      	ldr	r3, [r4, #12]
 800249c:	781b      	ldrb	r3, [r3, #0]
 800249e:	2b42      	cmp	r3, #66	; 0x42
 80024a0:	d1b9      	bne.n	8002416 <d_substitution+0x4e>
 80024a2:	0001      	movs	r1, r0
 80024a4:	0020      	movs	r0, r4
 80024a6:	f7ff ff71 	bl	800238c <d_abi_tags>
 80024aa:	2800      	cmp	r0, #0
 80024ac:	d0b2      	beq.n	8002414 <d_substitution+0x4c>
 80024ae:	6a23      	ldr	r3, [r4, #32]
 80024b0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80024b2:	4293      	cmp	r3, r2
 80024b4:	daaf      	bge.n	8002416 <d_substitution+0x4e>
 80024b6:	69e1      	ldr	r1, [r4, #28]
 80024b8:	009a      	lsls	r2, r3, #2
 80024ba:	3301      	adds	r3, #1
 80024bc:	5050      	str	r0, [r2, r1]
 80024be:	6223      	str	r3, [r4, #32]
 80024c0:	e7a9      	b.n	8002416 <d_substitution+0x4e>
 80024c2:	2100      	movs	r1, #0
 80024c4:	e012      	b.n	80024ec <d_substitution+0x124>
 80024c6:	00cb      	lsls	r3, r1, #3
 80024c8:	185b      	adds	r3, r3, r1
 80024ca:	009b      	lsls	r3, r3, #2
 80024cc:	181b      	adds	r3, r3, r0
 80024ce:	3b30      	subs	r3, #48	; 0x30
 80024d0:	4299      	cmp	r1, r3
 80024d2:	d89f      	bhi.n	8002414 <d_substitution+0x4c>
 80024d4:	68e2      	ldr	r2, [r4, #12]
 80024d6:	7811      	ldrb	r1, [r2, #0]
 80024d8:	2900      	cmp	r1, #0
 80024da:	d018      	beq.n	800250e <d_substitution+0x146>
 80024dc:	1c51      	adds	r1, r2, #1
 80024de:	60e1      	str	r1, [r4, #12]
 80024e0:	7810      	ldrb	r0, [r2, #0]
 80024e2:	285f      	cmp	r0, #95	; 0x5f
 80024e4:	d015      	beq.n	8002512 <d_substitution+0x14a>
 80024e6:	0002      	movs	r2, r0
 80024e8:	0019      	movs	r1, r3
 80024ea:	3a30      	subs	r2, #48	; 0x30
 80024ec:	0612      	lsls	r2, r2, #24
 80024ee:	0e12      	lsrs	r2, r2, #24
 80024f0:	2a09      	cmp	r2, #9
 80024f2:	d9e8      	bls.n	80024c6 <d_substitution+0xfe>
 80024f4:	0003      	movs	r3, r0
 80024f6:	3b41      	subs	r3, #65	; 0x41
 80024f8:	061b      	lsls	r3, r3, #24
 80024fa:	0e1b      	lsrs	r3, r3, #24
 80024fc:	2b19      	cmp	r3, #25
 80024fe:	d900      	bls.n	8002502 <d_substitution+0x13a>
 8002500:	e788      	b.n	8002414 <d_substitution+0x4c>
 8002502:	00cb      	lsls	r3, r1, #3
 8002504:	185b      	adds	r3, r3, r1
 8002506:	009b      	lsls	r3, r3, #2
 8002508:	181b      	adds	r3, r3, r0
 800250a:	3b37      	subs	r3, #55	; 0x37
 800250c:	e7e0      	b.n	80024d0 <d_substitution+0x108>
 800250e:	2000      	movs	r0, #0
 8002510:	e7e9      	b.n	80024e6 <d_substitution+0x11e>
 8002512:	3301      	adds	r3, #1
 8002514:	e774      	b.n	8002400 <d_substitution+0x38>
 8002516:	2501      	movs	r5, #1
 8002518:	e794      	b.n	8002444 <d_substitution+0x7c>
 800251a:	68df      	ldr	r7, [r3, #12]
 800251c:	691d      	ldr	r5, [r3, #16]
 800251e:	e7aa      	b.n	8002476 <d_substitution+0xae>
 8002520:	6927      	ldr	r7, [r4, #16]
 8002522:	6999      	ldr	r1, [r3, #24]
 8002524:	46bc      	mov	ip, r7
 8002526:	4688      	mov	r8, r1
 8002528:	2700      	movs	r7, #0
 800252a:	0111      	lsls	r1, r2, #4
 800252c:	4461      	add	r1, ip
 800252e:	3201      	adds	r2, #1
 8002530:	604f      	str	r7, [r1, #4]
 8002532:	6162      	str	r2, [r4, #20]
 8002534:	6088      	str	r0, [r1, #8]
 8002536:	4640      	mov	r0, r8
 8002538:	3718      	adds	r7, #24
 800253a:	700f      	strb	r7, [r1, #0]
 800253c:	60c8      	str	r0, [r1, #12]
 800253e:	e795      	b.n	800246c <d_substitution+0xa4>
 8002540:	0003      	movs	r3, r0
 8002542:	3b41      	subs	r3, #65	; 0x41
 8002544:	2b19      	cmp	r3, #25
 8002546:	d900      	bls.n	800254a <d_substitution+0x182>
 8002548:	e76b      	b.n	8002422 <d_substitution+0x5a>
 800254a:	e756      	b.n	80023fa <d_substitution+0x32>
 800254c:	08020c18 	.word	0x08020c18

08002550 <d_discriminator>:
 8002550:	b510      	push	{r4, lr}
 8002552:	68c3      	ldr	r3, [r0, #12]
 8002554:	781a      	ldrb	r2, [r3, #0]
 8002556:	0004      	movs	r4, r0
 8002558:	2a5f      	cmp	r2, #95	; 0x5f
 800255a:	d003      	beq.n	8002564 <d_discriminator+0x14>
 800255c:	2001      	movs	r0, #1
 800255e:	bc10      	pop	{r4}
 8002560:	bc02      	pop	{r1}
 8002562:	4708      	bx	r1
 8002564:	1c5a      	adds	r2, r3, #1
 8002566:	60c2      	str	r2, [r0, #12]
 8002568:	785a      	ldrb	r2, [r3, #1]
 800256a:	2a5f      	cmp	r2, #95	; 0x5f
 800256c:	d007      	beq.n	800257e <d_discriminator+0x2e>
 800256e:	300c      	adds	r0, #12
 8002570:	f7ff fe12 	bl	8002198 <d_number.isra.1>
 8002574:	0003      	movs	r3, r0
 8002576:	2000      	movs	r0, #0
 8002578:	2b00      	cmp	r3, #0
 800257a:	dbf0      	blt.n	800255e <d_discriminator+0xe>
 800257c:	e7ee      	b.n	800255c <d_discriminator+0xc>
 800257e:	3302      	adds	r3, #2
 8002580:	60c3      	str	r3, [r0, #12]
 8002582:	300c      	adds	r0, #12
 8002584:	f7ff fe08 	bl	8002198 <d_number.isra.1>
 8002588:	0003      	movs	r3, r0
 800258a:	2000      	movs	r0, #0
 800258c:	2b00      	cmp	r3, #0
 800258e:	dbe6      	blt.n	800255e <d_discriminator+0xe>
 8002590:	2b09      	cmp	r3, #9
 8002592:	dde3      	ble.n	800255c <d_discriminator+0xc>
 8002594:	68e3      	ldr	r3, [r4, #12]
 8002596:	781a      	ldrb	r2, [r3, #0]
 8002598:	2a5f      	cmp	r2, #95	; 0x5f
 800259a:	d1e0      	bne.n	800255e <d_discriminator+0xe>
 800259c:	3301      	adds	r3, #1
 800259e:	60e3      	str	r3, [r4, #12]
 80025a0:	3001      	adds	r0, #1
 80025a2:	e7dc      	b.n	800255e <d_discriminator+0xe>

080025a4 <next_is_type_qual.isra.3>:
 80025a4:	b510      	push	{r4, lr}
 80025a6:	7802      	ldrb	r2, [r0, #0]
 80025a8:	0013      	movs	r3, r2
 80025aa:	3b72      	subs	r3, #114	; 0x72
 80025ac:	4259      	negs	r1, r3
 80025ae:	414b      	adcs	r3, r1
 80025b0:	0011      	movs	r1, r2
 80025b2:	3956      	subs	r1, #86	; 0x56
 80025b4:	0004      	movs	r4, r0
 80025b6:	4248      	negs	r0, r1
 80025b8:	4141      	adcs	r1, r0
 80025ba:	430b      	orrs	r3, r1
 80025bc:	d113      	bne.n	80025e6 <next_is_type_qual.isra.3+0x42>
 80025be:	2a4b      	cmp	r2, #75	; 0x4b
 80025c0:	d011      	beq.n	80025e6 <next_is_type_qual.isra.3+0x42>
 80025c2:	2000      	movs	r0, #0
 80025c4:	2a44      	cmp	r2, #68	; 0x44
 80025c6:	d10f      	bne.n	80025e8 <next_is_type_qual.isra.3+0x44>
 80025c8:	7863      	ldrb	r3, [r4, #1]
 80025ca:	001a      	movs	r2, r3
 80025cc:	2101      	movs	r1, #1
 80025ce:	3a77      	subs	r2, #119	; 0x77
 80025d0:	0612      	lsls	r2, r2, #24
 80025d2:	0e12      	lsrs	r2, r2, #24
 80025d4:	4291      	cmp	r1, r2
 80025d6:	4140      	adcs	r0, r0
 80025d8:	2220      	movs	r2, #32
 80025da:	4393      	bics	r3, r2
 80025dc:	3b4f      	subs	r3, #79	; 0x4f
 80025de:	425a      	negs	r2, r3
 80025e0:	4153      	adcs	r3, r2
 80025e2:	4318      	orrs	r0, r3
 80025e4:	e000      	b.n	80025e8 <next_is_type_qual.isra.3+0x44>
 80025e6:	2001      	movs	r0, #1
 80025e8:	bc10      	pop	{r4}
 80025ea:	bc02      	pop	{r1}
 80025ec:	4708      	bx	r1
 80025ee:	46c0      	nop			; (mov r8, r8)

080025f0 <d_index_template_argument.part.9>:
 80025f0:	1e03      	subs	r3, r0, #0
 80025f2:	d00e      	beq.n	8002612 <d_index_template_argument.part.9+0x22>
 80025f4:	7802      	ldrb	r2, [r0, #0]
 80025f6:	2a2f      	cmp	r2, #47	; 0x2f
 80025f8:	d10b      	bne.n	8002612 <d_index_template_argument.part.9+0x22>
 80025fa:	2900      	cmp	r1, #0
 80025fc:	dc05      	bgt.n	800260a <d_index_template_argument.part.9+0x1a>
 80025fe:	e00a      	b.n	8002616 <d_index_template_argument.part.9+0x26>
 8002600:	781a      	ldrb	r2, [r3, #0]
 8002602:	2a2f      	cmp	r2, #47	; 0x2f
 8002604:	d105      	bne.n	8002612 <d_index_template_argument.part.9+0x22>
 8002606:	2900      	cmp	r1, #0
 8002608:	d008      	beq.n	800261c <d_index_template_argument.part.9+0x2c>
 800260a:	68db      	ldr	r3, [r3, #12]
 800260c:	3901      	subs	r1, #1
 800260e:	2b00      	cmp	r3, #0
 8002610:	d1f6      	bne.n	8002600 <d_index_template_argument.part.9+0x10>
 8002612:	2000      	movs	r0, #0
 8002614:	4770      	bx	lr
 8002616:	2000      	movs	r0, #0
 8002618:	2900      	cmp	r1, #0
 800261a:	d1fb      	bne.n	8002614 <d_index_template_argument.part.9+0x24>
 800261c:	6898      	ldr	r0, [r3, #8]
 800261e:	e7f9      	b.n	8002614 <d_index_template_argument.part.9+0x24>

08002620 <d_lookup_template_argument.isra.10>:
 8002620:	2388      	movs	r3, #136	; 0x88
 8002622:	005b      	lsls	r3, r3, #1
 8002624:	58c3      	ldr	r3, [r0, r3]
 8002626:	b510      	push	{r4, lr}
 8002628:	2b00      	cmp	r3, #0
 800262a:	d009      	beq.n	8002640 <d_lookup_template_argument.isra.10+0x20>
 800262c:	685b      	ldr	r3, [r3, #4]
 800262e:	6809      	ldr	r1, [r1, #0]
 8002630:	68d8      	ldr	r0, [r3, #12]
 8002632:	2900      	cmp	r1, #0
 8002634:	db01      	blt.n	800263a <d_lookup_template_argument.isra.10+0x1a>
 8002636:	f7ff ffdb 	bl	80025f0 <d_index_template_argument.part.9>
 800263a:	bc10      	pop	{r4}
 800263c:	bc02      	pop	{r1}
 800263e:	4708      	bx	r1
 8002640:	2201      	movs	r2, #1
 8002642:	3319      	adds	r3, #25
 8002644:	33ff      	adds	r3, #255	; 0xff
 8002646:	50c2      	str	r2, [r0, r3]
 8002648:	2000      	movs	r0, #0
 800264a:	e7f6      	b.n	800263a <d_lookup_template_argument.isra.10+0x1a>

0800264c <d_find_pack>:
 800264c:	b570      	push	{r4, r5, r6, lr}
 800264e:	0006      	movs	r6, r0
 8002650:	1e0c      	subs	r4, r1, #0
 8002652:	d00f      	beq.n	8002674 <d_find_pack+0x28>
 8002654:	4d0f      	ldr	r5, [pc, #60]	; (8002694 <d_find_pack+0x48>)
 8002656:	7823      	ldrb	r3, [r4, #0]
 8002658:	2b4b      	cmp	r3, #75	; 0x4b
 800265a:	d802      	bhi.n	8002662 <d_find_pack+0x16>
 800265c:	009b      	lsls	r3, r3, #2
 800265e:	58eb      	ldr	r3, [r5, r3]
 8002660:	469f      	mov	pc, r3
 8002662:	68a1      	ldr	r1, [r4, #8]
 8002664:	0030      	movs	r0, r6
 8002666:	f7ff fff1 	bl	800264c <d_find_pack>
 800266a:	2800      	cmp	r0, #0
 800266c:	d103      	bne.n	8002676 <d_find_pack+0x2a>
 800266e:	68e4      	ldr	r4, [r4, #12]
 8002670:	2c00      	cmp	r4, #0
 8002672:	d1f0      	bne.n	8002656 <d_find_pack+0xa>
 8002674:	2000      	movs	r0, #0
 8002676:	bc70      	pop	{r4, r5, r6}
 8002678:	bc02      	pop	{r1}
 800267a:	4708      	bx	r1
 800267c:	0021      	movs	r1, r4
 800267e:	0030      	movs	r0, r6
 8002680:	3108      	adds	r1, #8
 8002682:	f7ff ffcd 	bl	8002620 <d_lookup_template_argument.isra.10>
 8002686:	2800      	cmp	r0, #0
 8002688:	d0f4      	beq.n	8002674 <d_find_pack+0x28>
 800268a:	7803      	ldrb	r3, [r0, #0]
 800268c:	2b2f      	cmp	r3, #47	; 0x2f
 800268e:	d0f2      	beq.n	8002676 <d_find_pack+0x2a>
 8002690:	e7f0      	b.n	8002674 <d_find_pack+0x28>
 8002692:	46c0      	nop			; (mov r8, r8)
 8002694:	08020498 	.word	0x08020498

08002698 <d_growable_string_callback_adapter>:
 8002698:	b5f0      	push	{r4, r5, r6, r7, lr}
 800269a:	0014      	movs	r4, r2
 800269c:	6852      	ldr	r2, [r2, #4]
 800269e:	4694      	mov	ip, r2
 80026a0:	46c6      	mov	lr, r8
 80026a2:	1c4b      	adds	r3, r1, #1
 80026a4:	68a5      	ldr	r5, [r4, #8]
 80026a6:	4463      	add	r3, ip
 80026a8:	b500      	push	{lr}
 80026aa:	4680      	mov	r8, r0
 80026ac:	000e      	movs	r6, r1
 80026ae:	68e7      	ldr	r7, [r4, #12]
 80026b0:	42ab      	cmp	r3, r5
 80026b2:	d818      	bhi.n	80026e6 <d_growable_string_callback_adapter+0x4e>
 80026b4:	2f00      	cmp	r7, #0
 80026b6:	d004      	beq.n	80026c2 <d_growable_string_callback_adapter+0x2a>
 80026b8:	bc04      	pop	{r2}
 80026ba:	4690      	mov	r8, r2
 80026bc:	bcf0      	pop	{r4, r5, r6, r7}
 80026be:	bc01      	pop	{r0}
 80026c0:	4700      	bx	r0
 80026c2:	6862      	ldr	r2, [r4, #4]
 80026c4:	4694      	mov	ip, r2
 80026c6:	6823      	ldr	r3, [r4, #0]
 80026c8:	4463      	add	r3, ip
 80026ca:	0032      	movs	r2, r6
 80026cc:	0018      	movs	r0, r3
 80026ce:	4641      	mov	r1, r8
 80026d0:	f006 fdee 	bl	80092b0 <memcpy>
 80026d4:	6823      	ldr	r3, [r4, #0]
 80026d6:	6862      	ldr	r2, [r4, #4]
 80026d8:	199b      	adds	r3, r3, r6
 80026da:	549f      	strb	r7, [r3, r2]
 80026dc:	6863      	ldr	r3, [r4, #4]
 80026de:	469c      	mov	ip, r3
 80026e0:	4466      	add	r6, ip
 80026e2:	6066      	str	r6, [r4, #4]
 80026e4:	e7e8      	b.n	80026b8 <d_growable_string_callback_adapter+0x20>
 80026e6:	2f00      	cmp	r7, #0
 80026e8:	d1e6      	bne.n	80026b8 <d_growable_string_callback_adapter+0x20>
 80026ea:	2d00      	cmp	r5, #0
 80026ec:	d102      	bne.n	80026f4 <d_growable_string_callback_adapter+0x5c>
 80026ee:	2b02      	cmp	r3, #2
 80026f0:	d916      	bls.n	8002720 <d_growable_string_callback_adapter+0x88>
 80026f2:	3502      	adds	r5, #2
 80026f4:	006d      	lsls	r5, r5, #1
 80026f6:	42ab      	cmp	r3, r5
 80026f8:	d8fc      	bhi.n	80026f4 <d_growable_string_callback_adapter+0x5c>
 80026fa:	0029      	movs	r1, r5
 80026fc:	6820      	ldr	r0, [r4, #0]
 80026fe:	f019 fd7d 	bl	801c1fc <realloc>
 8002702:	1e07      	subs	r7, r0, #0
 8002704:	d003      	beq.n	800270e <d_growable_string_callback_adapter+0x76>
 8002706:	6020      	str	r0, [r4, #0]
 8002708:	60a5      	str	r5, [r4, #8]
 800270a:	68e7      	ldr	r7, [r4, #12]
 800270c:	e7d2      	b.n	80026b4 <d_growable_string_callback_adapter+0x1c>
 800270e:	6820      	ldr	r0, [r4, #0]
 8002710:	f019 f9a4 	bl	801ba5c <free>
 8002714:	2301      	movs	r3, #1
 8002716:	6027      	str	r7, [r4, #0]
 8002718:	6067      	str	r7, [r4, #4]
 800271a:	60a7      	str	r7, [r4, #8]
 800271c:	60e3      	str	r3, [r4, #12]
 800271e:	e7cb      	b.n	80026b8 <d_growable_string_callback_adapter+0x20>
 8002720:	2502      	movs	r5, #2
 8002722:	e7ea      	b.n	80026fa <d_growable_string_callback_adapter+0x62>

08002724 <d_call_offset>:
 8002724:	b570      	push	{r4, r5, r6, lr}
 8002726:	0004      	movs	r4, r0
 8002728:	2900      	cmp	r1, #0
 800272a:	d10a      	bne.n	8002742 <d_call_offset+0x1e>
 800272c:	68c3      	ldr	r3, [r0, #12]
 800272e:	781a      	ldrb	r2, [r3, #0]
 8002730:	2a00      	cmp	r2, #0
 8002732:	d103      	bne.n	800273c <d_call_offset+0x18>
 8002734:	2000      	movs	r0, #0
 8002736:	bc70      	pop	{r4, r5, r6}
 8002738:	bc02      	pop	{r1}
 800273a:	4708      	bx	r1
 800273c:	1c5a      	adds	r2, r3, #1
 800273e:	60c2      	str	r2, [r0, #12]
 8002740:	7819      	ldrb	r1, [r3, #0]
 8002742:	2968      	cmp	r1, #104	; 0x68
 8002744:	d010      	beq.n	8002768 <d_call_offset+0x44>
 8002746:	2976      	cmp	r1, #118	; 0x76
 8002748:	d1f4      	bne.n	8002734 <d_call_offset+0x10>
 800274a:	0025      	movs	r5, r4
 800274c:	350c      	adds	r5, #12
 800274e:	0028      	movs	r0, r5
 8002750:	f7ff fd22 	bl	8002198 <d_number.isra.1>
 8002754:	68e3      	ldr	r3, [r4, #12]
 8002756:	781a      	ldrb	r2, [r3, #0]
 8002758:	2a5f      	cmp	r2, #95	; 0x5f
 800275a:	d1eb      	bne.n	8002734 <d_call_offset+0x10>
 800275c:	3301      	adds	r3, #1
 800275e:	60e3      	str	r3, [r4, #12]
 8002760:	0028      	movs	r0, r5
 8002762:	f7ff fd19 	bl	8002198 <d_number.isra.1>
 8002766:	e003      	b.n	8002770 <d_call_offset+0x4c>
 8002768:	0020      	movs	r0, r4
 800276a:	300c      	adds	r0, #12
 800276c:	f7ff fd14 	bl	8002198 <d_number.isra.1>
 8002770:	68e3      	ldr	r3, [r4, #12]
 8002772:	781a      	ldrb	r2, [r3, #0]
 8002774:	2a5f      	cmp	r2, #95	; 0x5f
 8002776:	d1dd      	bne.n	8002734 <d_call_offset+0x10>
 8002778:	3301      	adds	r3, #1
 800277a:	60e3      	str	r3, [r4, #12]
 800277c:	2001      	movs	r0, #1
 800277e:	e7da      	b.n	8002736 <d_call_offset+0x12>

08002780 <d_append_num>:
 8002780:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002782:	46de      	mov	lr, fp
 8002784:	4657      	mov	r7, sl
 8002786:	4645      	mov	r5, r8
 8002788:	464e      	mov	r6, r9
 800278a:	b5e0      	push	{r5, r6, r7, lr}
 800278c:	b089      	sub	sp, #36	; 0x24
 800278e:	af01      	add	r7, sp, #4
 8002790:	000a      	movs	r2, r1
 8002792:	0004      	movs	r4, r0
 8002794:	491f      	ldr	r1, [pc, #124]	; (8002814 <d_append_num+0x94>)
 8002796:	0038      	movs	r0, r7
 8002798:	f019 ff42 	bl	801c620 <sprintf>
 800279c:	0038      	movs	r0, r7
 800279e:	f006 ffaf 	bl	8009700 <strlen>
 80027a2:	4680      	mov	r8, r0
 80027a4:	2800      	cmp	r0, #0
 80027a6:	d02b      	beq.n	8002800 <d_append_num+0x80>
 80027a8:	2200      	movs	r2, #0
 80027aa:	2380      	movs	r3, #128	; 0x80
 80027ac:	4693      	mov	fp, r2
 80027ae:	320d      	adds	r2, #13
 80027b0:	32ff      	adds	r2, #255	; 0xff
 80027b2:	005b      	lsls	r3, r3, #1
 80027b4:	4692      	mov	sl, r2
 80027b6:	3a04      	subs	r2, #4
 80027b8:	58e3      	ldr	r3, [r4, r3]
 80027ba:	2500      	movs	r5, #0
 80027bc:	4691      	mov	r9, r2
 80027be:	e019      	b.n	80027f4 <d_append_num+0x74>
 80027c0:	465a      	mov	r2, fp
 80027c2:	54e2      	strb	r2, [r4, r3]
 80027c4:	4653      	mov	r3, sl
 80027c6:	58e2      	ldr	r2, [r4, r3]
 80027c8:	464b      	mov	r3, r9
 80027ca:	21ff      	movs	r1, #255	; 0xff
 80027cc:	58e3      	ldr	r3, [r4, r3]
 80027ce:	0020      	movs	r0, r4
 80027d0:	f006 fd16 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 80027d4:	2292      	movs	r2, #146	; 0x92
 80027d6:	0052      	lsls	r2, r2, #1
 80027d8:	58a3      	ldr	r3, [r4, r2]
 80027da:	3301      	adds	r3, #1
 80027dc:	50a3      	str	r3, [r4, r2]
 80027de:	2100      	movs	r1, #0
 80027e0:	2301      	movs	r3, #1
 80027e2:	2280      	movs	r2, #128	; 0x80
 80027e4:	0052      	lsls	r2, r2, #1
 80027e6:	50a3      	str	r3, [r4, r2]
 80027e8:	3501      	adds	r5, #1
 80027ea:	3204      	adds	r2, #4
 80027ec:	5466      	strb	r6, [r4, r1]
 80027ee:	54a6      	strb	r6, [r4, r2]
 80027f0:	45a8      	cmp	r8, r5
 80027f2:	d005      	beq.n	8002800 <d_append_num+0x80>
 80027f4:	5d7e      	ldrb	r6, [r7, r5]
 80027f6:	2bff      	cmp	r3, #255	; 0xff
 80027f8:	d0e2      	beq.n	80027c0 <d_append_num+0x40>
 80027fa:	0019      	movs	r1, r3
 80027fc:	3301      	adds	r3, #1
 80027fe:	e7f0      	b.n	80027e2 <d_append_num+0x62>
 8002800:	b009      	add	sp, #36	; 0x24
 8002802:	bc3c      	pop	{r2, r3, r4, r5}
 8002804:	4690      	mov	r8, r2
 8002806:	4699      	mov	r9, r3
 8002808:	46a2      	mov	sl, r4
 800280a:	46ab      	mov	fp, r5
 800280c:	bcf0      	pop	{r4, r5, r6, r7}
 800280e:	bc01      	pop	{r0}
 8002810:	4700      	bx	r0
 8002812:	46c0      	nop			; (mov r8, r8)
 8002814:	08026d94 	.word	0x08026d94

08002818 <d_exprlist>:
 8002818:	b5f0      	push	{r4, r5, r6, r7, lr}
 800281a:	464e      	mov	r6, r9
 800281c:	46de      	mov	lr, fp
 800281e:	4657      	mov	r7, sl
 8002820:	4645      	mov	r5, r8
 8002822:	2300      	movs	r3, #0
 8002824:	b5e0      	push	{r5, r6, r7, lr}
 8002826:	b083      	sub	sp, #12
 8002828:	9301      	str	r3, [sp, #4]
 800282a:	68c3      	ldr	r3, [r0, #12]
 800282c:	781a      	ldrb	r2, [r3, #0]
 800282e:	0004      	movs	r4, r0
 8002830:	ae01      	add	r6, sp, #4
 8002832:	428a      	cmp	r2, r1
 8002834:	d100      	bne.n	8002838 <d_exprlist+0x20>
 8002836:	e173      	b.n	8002b20 <d_exprlist+0x308>
 8002838:	4ac3      	ldr	r2, [pc, #780]	; (8002b48 <d_exprlist+0x330>)
 800283a:	000f      	movs	r7, r1
 800283c:	4693      	mov	fp, r2
 800283e:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8002840:	4690      	mov	r8, r2
 8002842:	2201      	movs	r2, #1
 8002844:	6362      	str	r2, [r4, #52]	; 0x34
 8002846:	781a      	ldrb	r2, [r3, #0]
 8002848:	2a4c      	cmp	r2, #76	; 0x4c
 800284a:	d063      	beq.n	8002914 <d_exprlist+0xfc>
 800284c:	2a54      	cmp	r2, #84	; 0x54
 800284e:	d06b      	beq.n	8002928 <d_exprlist+0x110>
 8002850:	2a73      	cmp	r2, #115	; 0x73
 8002852:	d04c      	beq.n	80028ee <d_exprlist+0xd6>
 8002854:	2a66      	cmp	r2, #102	; 0x66
 8002856:	d11a      	bne.n	800288e <d_exprlist+0x76>
 8002858:	785a      	ldrb	r2, [r3, #1]
 800285a:	2a70      	cmp	r2, #112	; 0x70
 800285c:	d100      	bne.n	8002860 <d_exprlist+0x48>
 800285e:	e071      	b.n	8002944 <d_exprlist+0x12c>
 8002860:	0020      	movs	r0, r4
 8002862:	f001 f9d1 	bl	8003c08 <d_operator_name>
 8002866:	1e05      	subs	r5, r0, #0
 8002868:	d100      	bne.n	800286c <d_exprlist+0x54>
 800286a:	e162      	b.n	8002b32 <d_exprlist+0x31a>
 800286c:	7803      	ldrb	r3, [r0, #0]
 800286e:	2b31      	cmp	r3, #49	; 0x31
 8002870:	d100      	bne.n	8002874 <d_exprlist+0x5c>
 8002872:	e080      	b.n	8002976 <d_exprlist+0x15e>
 8002874:	2b32      	cmp	r3, #50	; 0x32
 8002876:	d05c      	beq.n	8002932 <d_exprlist+0x11a>
 8002878:	2b33      	cmp	r3, #51	; 0x33
 800287a:	d15f      	bne.n	800293c <d_exprlist+0x124>
 800287c:	68e3      	ldr	r3, [r4, #12]
 800287e:	781a      	ldrb	r2, [r3, #0]
 8002880:	2a5f      	cmp	r2, #95	; 0x5f
 8002882:	d100      	bne.n	8002886 <d_exprlist+0x6e>
 8002884:	e166      	b.n	8002b54 <d_exprlist+0x33c>
 8002886:	0020      	movs	r0, r4
 8002888:	f000 fa2e 	bl	8002ce8 <d_expression_1>
 800288c:	e0ef      	b.n	8002a6e <d_exprlist+0x256>
 800288e:	0011      	movs	r1, r2
 8002890:	3930      	subs	r1, #48	; 0x30
 8002892:	0609      	lsls	r1, r1, #24
 8002894:	0e09      	lsrs	r1, r1, #24
 8002896:	2909      	cmp	r1, #9
 8002898:	d900      	bls.n	800289c <d_exprlist+0x84>
 800289a:	e1f1      	b.n	8002c80 <d_exprlist+0x468>
 800289c:	0020      	movs	r0, r4
 800289e:	f001 fb89 	bl	8003fb4 <d_unqualified_name>
 80028a2:	1e05      	subs	r5, r0, #0
 80028a4:	d100      	bne.n	80028a8 <d_exprlist+0x90>
 80028a6:	e144      	b.n	8002b32 <d_exprlist+0x31a>
 80028a8:	68e3      	ldr	r3, [r4, #12]
 80028aa:	781a      	ldrb	r2, [r3, #0]
 80028ac:	2a49      	cmp	r2, #73	; 0x49
 80028ae:	d100      	bne.n	80028b2 <d_exprlist+0x9a>
 80028b0:	e0e5      	b.n	8002a7e <d_exprlist+0x266>
 80028b2:	4643      	mov	r3, r8
 80028b4:	6363      	str	r3, [r4, #52]	; 0x34
 80028b6:	2300      	movs	r3, #0
 80028b8:	002a      	movs	r2, r5
 80028ba:	212e      	movs	r1, #46	; 0x2e
 80028bc:	0020      	movs	r0, r4
 80028be:	f7ff fbaf 	bl	8002020 <d_make_comp>
 80028c2:	6030      	str	r0, [r6, #0]
 80028c4:	2800      	cmp	r0, #0
 80028c6:	d02d      	beq.n	8002924 <d_exprlist+0x10c>
 80028c8:	68e3      	ldr	r3, [r4, #12]
 80028ca:	781a      	ldrb	r2, [r3, #0]
 80028cc:	300c      	adds	r0, #12
 80028ce:	0006      	movs	r6, r0
 80028d0:	42ba      	cmp	r2, r7
 80028d2:	d1b4      	bne.n	800283e <d_exprlist+0x26>
 80028d4:	3301      	adds	r3, #1
 80028d6:	60e3      	str	r3, [r4, #12]
 80028d8:	9d01      	ldr	r5, [sp, #4]
 80028da:	0028      	movs	r0, r5
 80028dc:	b003      	add	sp, #12
 80028de:	bc3c      	pop	{r2, r3, r4, r5}
 80028e0:	4690      	mov	r8, r2
 80028e2:	4699      	mov	r9, r3
 80028e4:	46a2      	mov	sl, r4
 80028e6:	46ab      	mov	fp, r5
 80028e8:	bcf0      	pop	{r4, r5, r6, r7}
 80028ea:	bc02      	pop	{r1}
 80028ec:	4708      	bx	r1
 80028ee:	785a      	ldrb	r2, [r3, #1]
 80028f0:	2a72      	cmp	r2, #114	; 0x72
 80028f2:	d100      	bne.n	80028f6 <d_exprlist+0xde>
 80028f4:	e0d0      	b.n	8002a98 <d_exprlist+0x280>
 80028f6:	2a70      	cmp	r2, #112	; 0x70
 80028f8:	d1b2      	bne.n	8002860 <d_exprlist+0x48>
 80028fa:	3302      	adds	r3, #2
 80028fc:	60e3      	str	r3, [r4, #12]
 80028fe:	0020      	movs	r0, r4
 8002900:	f000 f9f2 	bl	8002ce8 <d_expression_1>
 8002904:	2300      	movs	r3, #0
 8002906:	0002      	movs	r2, r0
 8002908:	214a      	movs	r1, #74	; 0x4a
 800290a:	0020      	movs	r0, r4
 800290c:	f7ff fb88 	bl	8002020 <d_make_comp>
 8002910:	0005      	movs	r5, r0
 8002912:	e003      	b.n	800291c <d_exprlist+0x104>
 8002914:	0020      	movs	r0, r4
 8002916:	f001 fecf 	bl	80046b8 <d_expr_primary>
 800291a:	0005      	movs	r5, r0
 800291c:	4643      	mov	r3, r8
 800291e:	6363      	str	r3, [r4, #52]	; 0x34
 8002920:	2d00      	cmp	r5, #0
 8002922:	d1c8      	bne.n	80028b6 <d_exprlist+0x9e>
 8002924:	2500      	movs	r5, #0
 8002926:	e7d8      	b.n	80028da <d_exprlist+0xc2>
 8002928:	0020      	movs	r0, r4
 800292a:	f7ff fc9f 	bl	800226c <d_template_param>
 800292e:	0005      	movs	r5, r0
 8002930:	e7f4      	b.n	800291c <d_exprlist+0x104>
 8002932:	6883      	ldr	r3, [r0, #8]
 8002934:	2b01      	cmp	r3, #1
 8002936:	d0a6      	beq.n	8002886 <d_exprlist+0x6e>
 8002938:	dc00      	bgt.n	800293c <d_exprlist+0x124>
 800293a:	e0d9      	b.n	8002af0 <d_exprlist+0x2d8>
 800293c:	4647      	mov	r7, r8
 800293e:	2500      	movs	r5, #0
 8002940:	6367      	str	r7, [r4, #52]	; 0x34
 8002942:	e7ca      	b.n	80028da <d_exprlist+0xc2>
 8002944:	1c9a      	adds	r2, r3, #2
 8002946:	60e2      	str	r2, [r4, #12]
 8002948:	789a      	ldrb	r2, [r3, #2]
 800294a:	2a54      	cmp	r2, #84	; 0x54
 800294c:	d000      	beq.n	8002950 <d_exprlist+0x138>
 800294e:	e0b9      	b.n	8002ac4 <d_exprlist+0x2ac>
 8002950:	2000      	movs	r0, #0
 8002952:	3303      	adds	r3, #3
 8002954:	60e3      	str	r3, [r4, #12]
 8002956:	6963      	ldr	r3, [r4, #20]
 8002958:	69a2      	ldr	r2, [r4, #24]
 800295a:	4293      	cmp	r3, r2
 800295c:	daee      	bge.n	800293c <d_exprlist+0x124>
 800295e:	6922      	ldr	r2, [r4, #16]
 8002960:	4694      	mov	ip, r2
 8002962:	2200      	movs	r2, #0
 8002964:	011d      	lsls	r5, r3, #4
 8002966:	4465      	add	r5, ip
 8002968:	3301      	adds	r3, #1
 800296a:	606a      	str	r2, [r5, #4]
 800296c:	6163      	str	r3, [r4, #20]
 800296e:	2306      	movs	r3, #6
 8002970:	60a8      	str	r0, [r5, #8]
 8002972:	702b      	strb	r3, [r5, #0]
 8002974:	e79d      	b.n	80028b2 <d_exprlist+0x9a>
 8002976:	6883      	ldr	r3, [r0, #8]
 8002978:	469a      	mov	sl, r3
 800297a:	681b      	ldr	r3, [r3, #0]
 800297c:	4699      	mov	r9, r3
 800297e:	4653      	mov	r3, sl
 8002980:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8002982:	4694      	mov	ip, r2
 8002984:	689b      	ldr	r3, [r3, #8]
 8002986:	3b02      	subs	r3, #2
 8002988:	4463      	add	r3, ip
 800298a:	6323      	str	r3, [r4, #48]	; 0x30
 800298c:	4659      	mov	r1, fp
 800298e:	4648      	mov	r0, r9
 8002990:	f006 fd3a 	bl	8009408 <strcmp>
 8002994:	2800      	cmp	r0, #0
 8002996:	d100      	bne.n	800299a <d_exprlist+0x182>
 8002998:	e0d2      	b.n	8002b40 <d_exprlist+0x328>
 800299a:	4653      	mov	r3, sl
 800299c:	68db      	ldr	r3, [r3, #12]
 800299e:	469a      	mov	sl, r3
 80029a0:	2b01      	cmp	r3, #1
 80029a2:	d04a      	beq.n	8002a3a <d_exprlist+0x222>
 80029a4:	dc00      	bgt.n	80029a8 <d_exprlist+0x190>
 80029a6:	e0a3      	b.n	8002af0 <d_exprlist+0x2d8>
 80029a8:	2b02      	cmp	r3, #2
 80029aa:	d100      	bne.n	80029ae <d_exprlist+0x196>
 80029ac:	e0d9      	b.n	8002b62 <d_exprlist+0x34a>
 80029ae:	2b03      	cmp	r3, #3
 80029b0:	d1c4      	bne.n	800293c <d_exprlist+0x124>
 80029b2:	464b      	mov	r3, r9
 80029b4:	2b00      	cmp	r3, #0
 80029b6:	d0c1      	beq.n	800293c <d_exprlist+0x124>
 80029b8:	4964      	ldr	r1, [pc, #400]	; (8002b4c <d_exprlist+0x334>)
 80029ba:	4648      	mov	r0, r9
 80029bc:	f006 fd24 	bl	8009408 <strcmp>
 80029c0:	2800      	cmp	r0, #0
 80029c2:	d100      	bne.n	80029c6 <d_exprlist+0x1ae>
 80029c4:	e12b      	b.n	8002c1e <d_exprlist+0x406>
 80029c6:	464b      	mov	r3, r9
 80029c8:	781b      	ldrb	r3, [r3, #0]
 80029ca:	2b66      	cmp	r3, #102	; 0x66
 80029cc:	d100      	bne.n	80029d0 <d_exprlist+0x1b8>
 80029ce:	e14e      	b.n	8002c6e <d_exprlist+0x456>
 80029d0:	2b6e      	cmp	r3, #110	; 0x6e
 80029d2:	d1b3      	bne.n	800293c <d_exprlist+0x124>
 80029d4:	464b      	mov	r3, r9
 80029d6:	785b      	ldrb	r3, [r3, #1]
 80029d8:	2b77      	cmp	r3, #119	; 0x77
 80029da:	d001      	beq.n	80029e0 <d_exprlist+0x1c8>
 80029dc:	2b61      	cmp	r3, #97	; 0x61
 80029de:	d1ad      	bne.n	800293c <d_exprlist+0x124>
 80029e0:	215f      	movs	r1, #95	; 0x5f
 80029e2:	0020      	movs	r0, r4
 80029e4:	f7ff ff18 	bl	8002818 <d_exprlist>
 80029e8:	4681      	mov	r9, r0
 80029ea:	0020      	movs	r0, r4
 80029ec:	f000 fdac 	bl	8003548 <d_type>
 80029f0:	68e3      	ldr	r3, [r4, #12]
 80029f2:	781a      	ldrb	r2, [r3, #0]
 80029f4:	4682      	mov	sl, r0
 80029f6:	2a45      	cmp	r2, #69	; 0x45
 80029f8:	d100      	bne.n	80029fc <d_exprlist+0x1e4>
 80029fa:	e10c      	b.n	8002c16 <d_exprlist+0x3fe>
 80029fc:	2a70      	cmp	r2, #112	; 0x70
 80029fe:	d100      	bne.n	8002a02 <d_exprlist+0x1ea>
 8002a00:	e129      	b.n	8002c56 <d_exprlist+0x43e>
 8002a02:	2a69      	cmp	r2, #105	; 0x69
 8002a04:	d19a      	bne.n	800293c <d_exprlist+0x124>
 8002a06:	785b      	ldrb	r3, [r3, #1]
 8002a08:	2b6c      	cmp	r3, #108	; 0x6c
 8002a0a:	d197      	bne.n	800293c <d_exprlist+0x124>
 8002a0c:	0020      	movs	r0, r4
 8002a0e:	f000 f96b 	bl	8002ce8 <d_expression_1>
 8002a12:	0003      	movs	r3, r0
 8002a14:	4652      	mov	r2, sl
 8002a16:	213b      	movs	r1, #59	; 0x3b
 8002a18:	0020      	movs	r0, r4
 8002a1a:	f7ff fb01 	bl	8002020 <d_make_comp>
 8002a1e:	464a      	mov	r2, r9
 8002a20:	0003      	movs	r3, r0
 8002a22:	213a      	movs	r1, #58	; 0x3a
 8002a24:	0020      	movs	r0, r4
 8002a26:	f7ff fafb 	bl	8002020 <d_make_comp>
 8002a2a:	002a      	movs	r2, r5
 8002a2c:	0003      	movs	r3, r0
 8002a2e:	2139      	movs	r1, #57	; 0x39
 8002a30:	0020      	movs	r0, r4
 8002a32:	f7ff faf5 	bl	8002020 <d_make_comp>
 8002a36:	0005      	movs	r5, r0
 8002a38:	e770      	b.n	800291c <d_exprlist+0x104>
 8002a3a:	464b      	mov	r3, r9
 8002a3c:	781b      	ldrb	r3, [r3, #0]
 8002a3e:	2b70      	cmp	r3, #112	; 0x70
 8002a40:	d061      	beq.n	8002b06 <d_exprlist+0x2ee>
 8002a42:	2b6d      	cmp	r3, #109	; 0x6d
 8002a44:	d05f      	beq.n	8002b06 <d_exprlist+0x2ee>
 8002a46:	2300      	movs	r3, #0
 8002a48:	469a      	mov	sl, r3
 8002a4a:	4941      	ldr	r1, [pc, #260]	; (8002b50 <d_exprlist+0x338>)
 8002a4c:	4648      	mov	r0, r9
 8002a4e:	f006 fcdb 	bl	8009408 <strcmp>
 8002a52:	2800      	cmp	r0, #0
 8002a54:	d170      	bne.n	8002b38 <d_exprlist+0x320>
 8002a56:	0020      	movs	r0, r4
 8002a58:	f000 fb66 	bl	8003128 <d_template_args_1>
 8002a5c:	4653      	mov	r3, sl
 8002a5e:	2b00      	cmp	r3, #0
 8002a60:	d005      	beq.n	8002a6e <d_exprlist+0x256>
 8002a62:	0003      	movs	r3, r0
 8002a64:	0002      	movs	r2, r0
 8002a66:	2138      	movs	r1, #56	; 0x38
 8002a68:	0020      	movs	r0, r4
 8002a6a:	f7ff fad9 	bl	8002020 <d_make_comp>
 8002a6e:	0003      	movs	r3, r0
 8002a70:	002a      	movs	r2, r5
 8002a72:	2136      	movs	r1, #54	; 0x36
 8002a74:	0020      	movs	r0, r4
 8002a76:	f7ff fad3 	bl	8002020 <d_make_comp>
 8002a7a:	0005      	movs	r5, r0
 8002a7c:	e74e      	b.n	800291c <d_exprlist+0x104>
 8002a7e:	3301      	adds	r3, #1
 8002a80:	60e3      	str	r3, [r4, #12]
 8002a82:	0020      	movs	r0, r4
 8002a84:	f000 fb50 	bl	8003128 <d_template_args_1>
 8002a88:	002a      	movs	r2, r5
 8002a8a:	0003      	movs	r3, r0
 8002a8c:	2104      	movs	r1, #4
 8002a8e:	0020      	movs	r0, r4
 8002a90:	f7ff fac6 	bl	8002020 <d_make_comp>
 8002a94:	0005      	movs	r5, r0
 8002a96:	e741      	b.n	800291c <d_exprlist+0x104>
 8002a98:	3302      	adds	r3, #2
 8002a9a:	60e3      	str	r3, [r4, #12]
 8002a9c:	0020      	movs	r0, r4
 8002a9e:	f000 fd53 	bl	8003548 <d_type>
 8002aa2:	0005      	movs	r5, r0
 8002aa4:	0020      	movs	r0, r4
 8002aa6:	f001 fa85 	bl	8003fb4 <d_unqualified_name>
 8002aaa:	68e3      	ldr	r3, [r4, #12]
 8002aac:	781a      	ldrb	r2, [r3, #0]
 8002aae:	4681      	mov	r9, r0
 8002ab0:	2a49      	cmp	r2, #73	; 0x49
 8002ab2:	d010      	beq.n	8002ad6 <d_exprlist+0x2be>
 8002ab4:	0003      	movs	r3, r0
 8002ab6:	002a      	movs	r2, r5
 8002ab8:	2101      	movs	r1, #1
 8002aba:	0020      	movs	r0, r4
 8002abc:	f7ff fab0 	bl	8002020 <d_make_comp>
 8002ac0:	0005      	movs	r5, r0
 8002ac2:	e72b      	b.n	800291c <d_exprlist+0x104>
 8002ac4:	0020      	movs	r0, r4
 8002ac6:	f7ff fbb5 	bl	8002234 <d_compact_number>
 8002aca:	0043      	lsls	r3, r0, #1
 8002acc:	3302      	adds	r3, #2
 8002ace:	d100      	bne.n	8002ad2 <d_exprlist+0x2ba>
 8002ad0:	e734      	b.n	800293c <d_exprlist+0x124>
 8002ad2:	3001      	adds	r0, #1
 8002ad4:	e73f      	b.n	8002956 <d_exprlist+0x13e>
 8002ad6:	3301      	adds	r3, #1
 8002ad8:	60e3      	str	r3, [r4, #12]
 8002ada:	0020      	movs	r0, r4
 8002adc:	f000 fb24 	bl	8003128 <d_template_args_1>
 8002ae0:	464a      	mov	r2, r9
 8002ae2:	0003      	movs	r3, r0
 8002ae4:	2104      	movs	r1, #4
 8002ae6:	0020      	movs	r0, r4
 8002ae8:	f7ff fa9a 	bl	8002020 <d_make_comp>
 8002aec:	0003      	movs	r3, r0
 8002aee:	e7e2      	b.n	8002ab6 <d_exprlist+0x29e>
 8002af0:	2b00      	cmp	r3, #0
 8002af2:	d000      	beq.n	8002af6 <d_exprlist+0x2de>
 8002af4:	e722      	b.n	800293c <d_exprlist+0x124>
 8002af6:	002a      	movs	r2, r5
 8002af8:	2300      	movs	r3, #0
 8002afa:	2135      	movs	r1, #53	; 0x35
 8002afc:	0020      	movs	r0, r4
 8002afe:	f7ff fa8f 	bl	8002020 <d_make_comp>
 8002b02:	0005      	movs	r5, r0
 8002b04:	e70a      	b.n	800291c <d_exprlist+0x104>
 8002b06:	464a      	mov	r2, r9
 8002b08:	7852      	ldrb	r2, [r2, #1]
 8002b0a:	429a      	cmp	r2, r3
 8002b0c:	d19b      	bne.n	8002a46 <d_exprlist+0x22e>
 8002b0e:	68e3      	ldr	r3, [r4, #12]
 8002b10:	781a      	ldrb	r2, [r3, #0]
 8002b12:	2a5f      	cmp	r2, #95	; 0x5f
 8002b14:	d199      	bne.n	8002a4a <d_exprlist+0x232>
 8002b16:	3301      	adds	r3, #1
 8002b18:	60e3      	str	r3, [r4, #12]
 8002b1a:	2300      	movs	r3, #0
 8002b1c:	469a      	mov	sl, r3
 8002b1e:	e794      	b.n	8002a4a <d_exprlist+0x232>
 8002b20:	3301      	adds	r3, #1
 8002b22:	60c3      	str	r3, [r0, #12]
 8002b24:	2200      	movs	r2, #0
 8002b26:	2300      	movs	r3, #0
 8002b28:	212e      	movs	r1, #46	; 0x2e
 8002b2a:	f7ff fa79 	bl	8002020 <d_make_comp>
 8002b2e:	0005      	movs	r5, r0
 8002b30:	e6d3      	b.n	80028da <d_exprlist+0xc2>
 8002b32:	4647      	mov	r7, r8
 8002b34:	6367      	str	r7, [r4, #52]	; 0x34
 8002b36:	e6d0      	b.n	80028da <d_exprlist+0xc2>
 8002b38:	0020      	movs	r0, r4
 8002b3a:	f000 f8d5 	bl	8002ce8 <d_expression_1>
 8002b3e:	e78d      	b.n	8002a5c <d_exprlist+0x244>
 8002b40:	0020      	movs	r0, r4
 8002b42:	f000 fd01 	bl	8003548 <d_type>
 8002b46:	e792      	b.n	8002a6e <d_exprlist+0x256>
 8002b48:	080272b4 	.word	0x080272b4
 8002b4c:	08026da8 	.word	0x08026da8
 8002b50:	08026d98 	.word	0x08026d98
 8002b54:	3301      	adds	r3, #1
 8002b56:	60e3      	str	r3, [r4, #12]
 8002b58:	2145      	movs	r1, #69	; 0x45
 8002b5a:	0020      	movs	r0, r4
 8002b5c:	f7ff fe5c 	bl	8002818 <d_exprlist>
 8002b60:	e785      	b.n	8002a6e <d_exprlist+0x256>
 8002b62:	464b      	mov	r3, r9
 8002b64:	2b00      	cmp	r3, #0
 8002b66:	d100      	bne.n	8002b6a <d_exprlist+0x352>
 8002b68:	e6e8      	b.n	800293c <d_exprlist+0x124>
 8002b6a:	68ab      	ldr	r3, [r5, #8]
 8002b6c:	681b      	ldr	r3, [r3, #0]
 8002b6e:	785a      	ldrb	r2, [r3, #1]
 8002b70:	2a63      	cmp	r2, #99	; 0x63
 8002b72:	d02f      	beq.n	8002bd4 <d_exprlist+0x3bc>
 8002b74:	464b      	mov	r3, r9
 8002b76:	781b      	ldrb	r3, [r3, #0]
 8002b78:	2b66      	cmp	r3, #102	; 0x66
 8002b7a:	d147      	bne.n	8002c0c <d_exprlist+0x3f4>
 8002b7c:	0020      	movs	r0, r4
 8002b7e:	f001 f843 	bl	8003c08 <d_operator_name>
 8002b82:	4682      	mov	sl, r0
 8002b84:	4955      	ldr	r1, [pc, #340]	; (8002cdc <d_exprlist+0x4c4>)
 8002b86:	4648      	mov	r0, r9
 8002b88:	f006 fc3e 	bl	8009408 <strcmp>
 8002b8c:	2800      	cmp	r0, #0
 8002b8e:	d037      	beq.n	8002c00 <d_exprlist+0x3e8>
 8002b90:	4953      	ldr	r1, [pc, #332]	; (8002ce0 <d_exprlist+0x4c8>)
 8002b92:	4648      	mov	r0, r9
 8002b94:	f006 fc38 	bl	8009408 <strcmp>
 8002b98:	2800      	cmp	r0, #0
 8002b9a:	d005      	beq.n	8002ba8 <d_exprlist+0x390>
 8002b9c:	4951      	ldr	r1, [pc, #324]	; (8002ce4 <d_exprlist+0x4cc>)
 8002b9e:	4648      	mov	r0, r9
 8002ba0:	f006 fc32 	bl	8009408 <strcmp>
 8002ba4:	2800      	cmp	r0, #0
 8002ba6:	d166      	bne.n	8002c76 <d_exprlist+0x45e>
 8002ba8:	0020      	movs	r0, r4
 8002baa:	f001 fa03 	bl	8003fb4 <d_unqualified_name>
 8002bae:	68e3      	ldr	r3, [r4, #12]
 8002bb0:	781a      	ldrb	r2, [r3, #0]
 8002bb2:	4681      	mov	r9, r0
 8002bb4:	2a49      	cmp	r2, #73	; 0x49
 8002bb6:	d041      	beq.n	8002c3c <d_exprlist+0x424>
 8002bb8:	464b      	mov	r3, r9
 8002bba:	4652      	mov	r2, sl
 8002bbc:	2138      	movs	r1, #56	; 0x38
 8002bbe:	0020      	movs	r0, r4
 8002bc0:	f7ff fa2e 	bl	8002020 <d_make_comp>
 8002bc4:	002a      	movs	r2, r5
 8002bc6:	0003      	movs	r3, r0
 8002bc8:	2137      	movs	r1, #55	; 0x37
 8002bca:	0020      	movs	r0, r4
 8002bcc:	f7ff fa28 	bl	8002020 <d_make_comp>
 8002bd0:	0005      	movs	r5, r0
 8002bd2:	e6a3      	b.n	800291c <d_exprlist+0x104>
 8002bd4:	781a      	ldrb	r2, [r3, #0]
 8002bd6:	0011      	movs	r1, r2
 8002bd8:	2300      	movs	r3, #0
 8002bda:	2001      	movs	r0, #1
 8002bdc:	3963      	subs	r1, #99	; 0x63
 8002bde:	0609      	lsls	r1, r1, #24
 8002be0:	0e09      	lsrs	r1, r1, #24
 8002be2:	4288      	cmp	r0, r1
 8002be4:	415b      	adcs	r3, r3
 8002be6:	2b00      	cmp	r3, #0
 8002be8:	d105      	bne.n	8002bf6 <d_exprlist+0x3de>
 8002bea:	0013      	movs	r3, r2
 8002bec:	3b72      	subs	r3, #114	; 0x72
 8002bee:	061b      	lsls	r3, r3, #24
 8002bf0:	0e1b      	lsrs	r3, r3, #24
 8002bf2:	2b01      	cmp	r3, #1
 8002bf4:	d8be      	bhi.n	8002b74 <d_exprlist+0x35c>
 8002bf6:	0020      	movs	r0, r4
 8002bf8:	f000 fca6 	bl	8003548 <d_type>
 8002bfc:	4682      	mov	sl, r0
 8002bfe:	e7c1      	b.n	8002b84 <d_exprlist+0x36c>
 8002c00:	2145      	movs	r1, #69	; 0x45
 8002c02:	0020      	movs	r0, r4
 8002c04:	f7ff fe08 	bl	8002818 <d_exprlist>
 8002c08:	4681      	mov	r9, r0
 8002c0a:	e7d5      	b.n	8002bb8 <d_exprlist+0x3a0>
 8002c0c:	0020      	movs	r0, r4
 8002c0e:	f000 f86b 	bl	8002ce8 <d_expression_1>
 8002c12:	4682      	mov	sl, r0
 8002c14:	e7b6      	b.n	8002b84 <d_exprlist+0x36c>
 8002c16:	3301      	adds	r3, #1
 8002c18:	60e3      	str	r3, [r4, #12]
 8002c1a:	2300      	movs	r3, #0
 8002c1c:	e6fa      	b.n	8002a14 <d_exprlist+0x1fc>
 8002c1e:	0020      	movs	r0, r4
 8002c20:	f000 f862 	bl	8002ce8 <d_expression_1>
 8002c24:	4681      	mov	r9, r0
 8002c26:	0020      	movs	r0, r4
 8002c28:	f000 f85e 	bl	8002ce8 <d_expression_1>
 8002c2c:	4682      	mov	sl, r0
 8002c2e:	0020      	movs	r0, r4
 8002c30:	f000 f85a 	bl	8002ce8 <d_expression_1>
 8002c34:	1e03      	subs	r3, r0, #0
 8002c36:	d000      	beq.n	8002c3a <d_exprlist+0x422>
 8002c38:	e6ec      	b.n	8002a14 <d_exprlist+0x1fc>
 8002c3a:	e67f      	b.n	800293c <d_exprlist+0x124>
 8002c3c:	3301      	adds	r3, #1
 8002c3e:	60e3      	str	r3, [r4, #12]
 8002c40:	0020      	movs	r0, r4
 8002c42:	f000 fa71 	bl	8003128 <d_template_args_1>
 8002c46:	464a      	mov	r2, r9
 8002c48:	0003      	movs	r3, r0
 8002c4a:	2104      	movs	r1, #4
 8002c4c:	0020      	movs	r0, r4
 8002c4e:	f7ff f9e7 	bl	8002020 <d_make_comp>
 8002c52:	4681      	mov	r9, r0
 8002c54:	e7b0      	b.n	8002bb8 <d_exprlist+0x3a0>
 8002c56:	785a      	ldrb	r2, [r3, #1]
 8002c58:	2a69      	cmp	r2, #105	; 0x69
 8002c5a:	d000      	beq.n	8002c5e <d_exprlist+0x446>
 8002c5c:	e66e      	b.n	800293c <d_exprlist+0x124>
 8002c5e:	3302      	adds	r3, #2
 8002c60:	60e3      	str	r3, [r4, #12]
 8002c62:	2145      	movs	r1, #69	; 0x45
 8002c64:	0020      	movs	r0, r4
 8002c66:	f7ff fdd7 	bl	8002818 <d_exprlist>
 8002c6a:	0003      	movs	r3, r0
 8002c6c:	e6d2      	b.n	8002a14 <d_exprlist+0x1fc>
 8002c6e:	0020      	movs	r0, r4
 8002c70:	f000 ffca 	bl	8003c08 <d_operator_name>
 8002c74:	e7d6      	b.n	8002c24 <d_exprlist+0x40c>
 8002c76:	0020      	movs	r0, r4
 8002c78:	f000 f836 	bl	8002ce8 <d_expression_1>
 8002c7c:	4681      	mov	r9, r0
 8002c7e:	e79b      	b.n	8002bb8 <d_exprlist+0x3a0>
 8002c80:	2a6f      	cmp	r2, #111	; 0x6f
 8002c82:	d106      	bne.n	8002c92 <d_exprlist+0x47a>
 8002c84:	785a      	ldrb	r2, [r3, #1]
 8002c86:	2a6e      	cmp	r2, #110	; 0x6e
 8002c88:	d000      	beq.n	8002c8c <d_exprlist+0x474>
 8002c8a:	e5e9      	b.n	8002860 <d_exprlist+0x48>
 8002c8c:	3302      	adds	r3, #2
 8002c8e:	60e3      	str	r3, [r4, #12]
 8002c90:	e604      	b.n	800289c <d_exprlist+0x84>
 8002c92:	2a69      	cmp	r2, #105	; 0x69
 8002c94:	d002      	beq.n	8002c9c <d_exprlist+0x484>
 8002c96:	2a74      	cmp	r2, #116	; 0x74
 8002c98:	d000      	beq.n	8002c9c <d_exprlist+0x484>
 8002c9a:	e5e1      	b.n	8002860 <d_exprlist+0x48>
 8002c9c:	7859      	ldrb	r1, [r3, #1]
 8002c9e:	296c      	cmp	r1, #108	; 0x6c
 8002ca0:	d000      	beq.n	8002ca4 <d_exprlist+0x48c>
 8002ca2:	e5dd      	b.n	8002860 <d_exprlist+0x48>
 8002ca4:	2500      	movs	r5, #0
 8002ca6:	2a74      	cmp	r2, #116	; 0x74
 8002ca8:	d00d      	beq.n	8002cc6 <d_exprlist+0x4ae>
 8002caa:	3302      	adds	r3, #2
 8002cac:	60e3      	str	r3, [r4, #12]
 8002cae:	2145      	movs	r1, #69	; 0x45
 8002cb0:	0020      	movs	r0, r4
 8002cb2:	f7ff fdb1 	bl	8002818 <d_exprlist>
 8002cb6:	002a      	movs	r2, r5
 8002cb8:	0003      	movs	r3, r0
 8002cba:	2130      	movs	r1, #48	; 0x30
 8002cbc:	0020      	movs	r0, r4
 8002cbe:	f7ff f9af 	bl	8002020 <d_make_comp>
 8002cc2:	0005      	movs	r5, r0
 8002cc4:	e62a      	b.n	800291c <d_exprlist+0x104>
 8002cc6:	0020      	movs	r0, r4
 8002cc8:	f000 fc3e 	bl	8003548 <d_type>
 8002ccc:	68e3      	ldr	r3, [r4, #12]
 8002cce:	785a      	ldrb	r2, [r3, #1]
 8002cd0:	0005      	movs	r5, r0
 8002cd2:	2a00      	cmp	r2, #0
 8002cd4:	d100      	bne.n	8002cd8 <d_exprlist+0x4c0>
 8002cd6:	e631      	b.n	800293c <d_exprlist+0x124>
 8002cd8:	e7e7      	b.n	8002caa <d_exprlist+0x492>
 8002cda:	46c0      	nop			; (mov r8, r8)
 8002cdc:	08026d9c 	.word	0x08026d9c
 8002ce0:	08026da0 	.word	0x08026da0
 8002ce4:	08026da4 	.word	0x08026da4

08002ce8 <d_expression_1>:
 8002ce8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002cea:	46c6      	mov	lr, r8
 8002cec:	b500      	push	{lr}
 8002cee:	68c2      	ldr	r2, [r0, #12]
 8002cf0:	7813      	ldrb	r3, [r2, #0]
 8002cf2:	0004      	movs	r4, r0
 8002cf4:	2b4c      	cmp	r3, #76	; 0x4c
 8002cf6:	d067      	beq.n	8002dc8 <d_expression_1+0xe0>
 8002cf8:	2b54      	cmp	r3, #84	; 0x54
 8002cfa:	d069      	beq.n	8002dd0 <d_expression_1+0xe8>
 8002cfc:	2b73      	cmp	r3, #115	; 0x73
 8002cfe:	d01d      	beq.n	8002d3c <d_expression_1+0x54>
 8002d00:	2b66      	cmp	r3, #102	; 0x66
 8002d02:	d13f      	bne.n	8002d84 <d_expression_1+0x9c>
 8002d04:	7853      	ldrb	r3, [r2, #1]
 8002d06:	2b70      	cmp	r3, #112	; 0x70
 8002d08:	d11f      	bne.n	8002d4a <d_expression_1+0x62>
 8002d0a:	1c93      	adds	r3, r2, #2
 8002d0c:	60c3      	str	r3, [r0, #12]
 8002d0e:	7893      	ldrb	r3, [r2, #2]
 8002d10:	2b54      	cmp	r3, #84	; 0x54
 8002d12:	d000      	beq.n	8002d16 <d_expression_1+0x2e>
 8002d14:	e0e6      	b.n	8002ee4 <d_expression_1+0x1fc>
 8002d16:	3203      	adds	r2, #3
 8002d18:	60c2      	str	r2, [r0, #12]
 8002d1a:	2000      	movs	r0, #0
 8002d1c:	6963      	ldr	r3, [r4, #20]
 8002d1e:	69a2      	ldr	r2, [r4, #24]
 8002d20:	4293      	cmp	r3, r2
 8002d22:	da4f      	bge.n	8002dc4 <d_expression_1+0xdc>
 8002d24:	6922      	ldr	r2, [r4, #16]
 8002d26:	4694      	mov	ip, r2
 8002d28:	2200      	movs	r2, #0
 8002d2a:	011d      	lsls	r5, r3, #4
 8002d2c:	4465      	add	r5, ip
 8002d2e:	3301      	adds	r3, #1
 8002d30:	606a      	str	r2, [r5, #4]
 8002d32:	6163      	str	r3, [r4, #20]
 8002d34:	2306      	movs	r3, #6
 8002d36:	60a8      	str	r0, [r5, #8]
 8002d38:	702b      	strb	r3, [r5, #0]
 8002d3a:	e034      	b.n	8002da6 <d_expression_1+0xbe>
 8002d3c:	7853      	ldrb	r3, [r2, #1]
 8002d3e:	2b72      	cmp	r3, #114	; 0x72
 8002d40:	d100      	bne.n	8002d44 <d_expression_1+0x5c>
 8002d42:	e0ba      	b.n	8002eba <d_expression_1+0x1d2>
 8002d44:	2b70      	cmp	r3, #112	; 0x70
 8002d46:	d100      	bne.n	8002d4a <d_expression_1+0x62>
 8002d48:	e125      	b.n	8002f96 <d_expression_1+0x2ae>
 8002d4a:	0020      	movs	r0, r4
 8002d4c:	f000 ff5c 	bl	8003c08 <d_operator_name>
 8002d50:	1e06      	subs	r6, r0, #0
 8002d52:	d037      	beq.n	8002dc4 <d_expression_1+0xdc>
 8002d54:	7803      	ldrb	r3, [r0, #0]
 8002d56:	2b31      	cmp	r3, #49	; 0x31
 8002d58:	d03e      	beq.n	8002dd8 <d_expression_1+0xf0>
 8002d5a:	2b32      	cmp	r3, #50	; 0x32
 8002d5c:	d100      	bne.n	8002d60 <d_expression_1+0x78>
 8002d5e:	e0ce      	b.n	8002efe <d_expression_1+0x216>
 8002d60:	2b33      	cmp	r3, #51	; 0x33
 8002d62:	d12f      	bne.n	8002dc4 <d_expression_1+0xdc>
 8002d64:	68e3      	ldr	r3, [r4, #12]
 8002d66:	781a      	ldrb	r2, [r3, #0]
 8002d68:	2a5f      	cmp	r2, #95	; 0x5f
 8002d6a:	d100      	bne.n	8002d6e <d_expression_1+0x86>
 8002d6c:	e17b      	b.n	8003066 <d_expression_1+0x37e>
 8002d6e:	0020      	movs	r0, r4
 8002d70:	f7ff ffba 	bl	8002ce8 <d_expression_1>
 8002d74:	0003      	movs	r3, r0
 8002d76:	0032      	movs	r2, r6
 8002d78:	2136      	movs	r1, #54	; 0x36
 8002d7a:	0020      	movs	r0, r4
 8002d7c:	f7ff f950 	bl	8002020 <d_make_comp>
 8002d80:	0005      	movs	r5, r0
 8002d82:	e010      	b.n	8002da6 <d_expression_1+0xbe>
 8002d84:	0019      	movs	r1, r3
 8002d86:	3930      	subs	r1, #48	; 0x30
 8002d88:	0609      	lsls	r1, r1, #24
 8002d8a:	0e09      	lsrs	r1, r1, #24
 8002d8c:	2909      	cmp	r1, #9
 8002d8e:	d900      	bls.n	8002d92 <d_expression_1+0xaa>
 8002d90:	e089      	b.n	8002ea6 <d_expression_1+0x1be>
 8002d92:	0020      	movs	r0, r4
 8002d94:	f001 f90e 	bl	8003fb4 <d_unqualified_name>
 8002d98:	1e05      	subs	r5, r0, #0
 8002d9a:	d013      	beq.n	8002dc4 <d_expression_1+0xdc>
 8002d9c:	68e3      	ldr	r3, [r4, #12]
 8002d9e:	781a      	ldrb	r2, [r3, #0]
 8002da0:	2a49      	cmp	r2, #73	; 0x49
 8002da2:	d100      	bne.n	8002da6 <d_expression_1+0xbe>
 8002da4:	e072      	b.n	8002e8c <d_expression_1+0x1a4>
 8002da6:	0028      	movs	r0, r5
 8002da8:	bc04      	pop	{r2}
 8002daa:	4690      	mov	r8, r2
 8002dac:	bcf0      	pop	{r4, r5, r6, r7}
 8002dae:	bc02      	pop	{r1}
 8002db0:	4708      	bx	r1
 8002db2:	0020      	movs	r0, r4
 8002db4:	f000 fbc8 	bl	8003548 <d_type>
 8002db8:	68e2      	ldr	r2, [r4, #12]
 8002dba:	7853      	ldrb	r3, [r2, #1]
 8002dbc:	0005      	movs	r5, r0
 8002dbe:	2b00      	cmp	r3, #0
 8002dc0:	d000      	beq.n	8002dc4 <d_expression_1+0xdc>
 8002dc2:	e196      	b.n	80030f2 <d_expression_1+0x40a>
 8002dc4:	2500      	movs	r5, #0
 8002dc6:	e7ee      	b.n	8002da6 <d_expression_1+0xbe>
 8002dc8:	f001 fc76 	bl	80046b8 <d_expr_primary>
 8002dcc:	0005      	movs	r5, r0
 8002dce:	e7ea      	b.n	8002da6 <d_expression_1+0xbe>
 8002dd0:	f7ff fa4c 	bl	800226c <d_template_param>
 8002dd4:	0005      	movs	r5, r0
 8002dd6:	e7e6      	b.n	8002da6 <d_expression_1+0xbe>
 8002dd8:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8002dda:	4694      	mov	ip, r2
 8002ddc:	6885      	ldr	r5, [r0, #8]
 8002dde:	68ab      	ldr	r3, [r5, #8]
 8002de0:	682f      	ldr	r7, [r5, #0]
 8002de2:	3b02      	subs	r3, #2
 8002de4:	4463      	add	r3, ip
 8002de6:	6323      	str	r3, [r4, #48]	; 0x30
 8002de8:	49c9      	ldr	r1, [pc, #804]	; (8003110 <d_expression_1+0x428>)
 8002dea:	0038      	movs	r0, r7
 8002dec:	f006 fb0c 	bl	8009408 <strcmp>
 8002df0:	2800      	cmp	r0, #0
 8002df2:	d100      	bne.n	8002df6 <d_expression_1+0x10e>
 8002df4:	e07f      	b.n	8002ef6 <d_expression_1+0x20e>
 8002df6:	68eb      	ldr	r3, [r5, #12]
 8002df8:	4698      	mov	r8, r3
 8002dfa:	2b01      	cmp	r3, #1
 8002dfc:	d100      	bne.n	8002e00 <d_expression_1+0x118>
 8002dfe:	e09c      	b.n	8002f3a <d_expression_1+0x252>
 8002e00:	dc00      	bgt.n	8002e04 <d_expression_1+0x11c>
 8002e02:	e082      	b.n	8002f0a <d_expression_1+0x222>
 8002e04:	2b02      	cmp	r3, #2
 8002e06:	d100      	bne.n	8002e0a <d_expression_1+0x122>
 8002e08:	e0d2      	b.n	8002fb0 <d_expression_1+0x2c8>
 8002e0a:	2b03      	cmp	r3, #3
 8002e0c:	d1da      	bne.n	8002dc4 <d_expression_1+0xdc>
 8002e0e:	49c1      	ldr	r1, [pc, #772]	; (8003114 <d_expression_1+0x42c>)
 8002e10:	0038      	movs	r0, r7
 8002e12:	f006 faf9 	bl	8009408 <strcmp>
 8002e16:	2800      	cmp	r0, #0
 8002e18:	d100      	bne.n	8002e1c <d_expression_1+0x134>
 8002e1a:	e12b      	b.n	8003074 <d_expression_1+0x38c>
 8002e1c:	783b      	ldrb	r3, [r7, #0]
 8002e1e:	2b66      	cmp	r3, #102	; 0x66
 8002e20:	d100      	bne.n	8002e24 <d_expression_1+0x13c>
 8002e22:	e150      	b.n	80030c6 <d_expression_1+0x3de>
 8002e24:	2b6e      	cmp	r3, #110	; 0x6e
 8002e26:	d1cd      	bne.n	8002dc4 <d_expression_1+0xdc>
 8002e28:	787b      	ldrb	r3, [r7, #1]
 8002e2a:	2b77      	cmp	r3, #119	; 0x77
 8002e2c:	d001      	beq.n	8002e32 <d_expression_1+0x14a>
 8002e2e:	2b61      	cmp	r3, #97	; 0x61
 8002e30:	d1c8      	bne.n	8002dc4 <d_expression_1+0xdc>
 8002e32:	215f      	movs	r1, #95	; 0x5f
 8002e34:	0020      	movs	r0, r4
 8002e36:	f7ff fcef 	bl	8002818 <d_exprlist>
 8002e3a:	0005      	movs	r5, r0
 8002e3c:	0020      	movs	r0, r4
 8002e3e:	f000 fb83 	bl	8003548 <d_type>
 8002e42:	68e3      	ldr	r3, [r4, #12]
 8002e44:	781a      	ldrb	r2, [r3, #0]
 8002e46:	0007      	movs	r7, r0
 8002e48:	2a45      	cmp	r2, #69	; 0x45
 8002e4a:	d100      	bne.n	8002e4e <d_expression_1+0x166>
 8002e4c:	e107      	b.n	800305e <d_expression_1+0x376>
 8002e4e:	2a70      	cmp	r2, #112	; 0x70
 8002e50:	d100      	bne.n	8002e54 <d_expression_1+0x16c>
 8002e52:	e12c      	b.n	80030ae <d_expression_1+0x3c6>
 8002e54:	2a69      	cmp	r2, #105	; 0x69
 8002e56:	d1b5      	bne.n	8002dc4 <d_expression_1+0xdc>
 8002e58:	785b      	ldrb	r3, [r3, #1]
 8002e5a:	2b6c      	cmp	r3, #108	; 0x6c
 8002e5c:	d1b2      	bne.n	8002dc4 <d_expression_1+0xdc>
 8002e5e:	0020      	movs	r0, r4
 8002e60:	f7ff ff42 	bl	8002ce8 <d_expression_1>
 8002e64:	0003      	movs	r3, r0
 8002e66:	003a      	movs	r2, r7
 8002e68:	213b      	movs	r1, #59	; 0x3b
 8002e6a:	0020      	movs	r0, r4
 8002e6c:	f7ff f8d8 	bl	8002020 <d_make_comp>
 8002e70:	002a      	movs	r2, r5
 8002e72:	0003      	movs	r3, r0
 8002e74:	213a      	movs	r1, #58	; 0x3a
 8002e76:	0020      	movs	r0, r4
 8002e78:	f7ff f8d2 	bl	8002020 <d_make_comp>
 8002e7c:	0032      	movs	r2, r6
 8002e7e:	0003      	movs	r3, r0
 8002e80:	2139      	movs	r1, #57	; 0x39
 8002e82:	0020      	movs	r0, r4
 8002e84:	f7ff f8cc 	bl	8002020 <d_make_comp>
 8002e88:	0005      	movs	r5, r0
 8002e8a:	e78c      	b.n	8002da6 <d_expression_1+0xbe>
 8002e8c:	3301      	adds	r3, #1
 8002e8e:	60e3      	str	r3, [r4, #12]
 8002e90:	0020      	movs	r0, r4
 8002e92:	f000 f949 	bl	8003128 <d_template_args_1>
 8002e96:	002a      	movs	r2, r5
 8002e98:	0003      	movs	r3, r0
 8002e9a:	2104      	movs	r1, #4
 8002e9c:	0020      	movs	r0, r4
 8002e9e:	f7ff f8bf 	bl	8002020 <d_make_comp>
 8002ea2:	0005      	movs	r5, r0
 8002ea4:	e77f      	b.n	8002da6 <d_expression_1+0xbe>
 8002ea6:	2b6f      	cmp	r3, #111	; 0x6f
 8002ea8:	d000      	beq.n	8002eac <d_expression_1+0x1c4>
 8002eaa:	e115      	b.n	80030d8 <d_expression_1+0x3f0>
 8002eac:	7853      	ldrb	r3, [r2, #1]
 8002eae:	2b6e      	cmp	r3, #110	; 0x6e
 8002eb0:	d000      	beq.n	8002eb4 <d_expression_1+0x1cc>
 8002eb2:	e74a      	b.n	8002d4a <d_expression_1+0x62>
 8002eb4:	3202      	adds	r2, #2
 8002eb6:	60c2      	str	r2, [r0, #12]
 8002eb8:	e76b      	b.n	8002d92 <d_expression_1+0xaa>
 8002eba:	3202      	adds	r2, #2
 8002ebc:	60c2      	str	r2, [r0, #12]
 8002ebe:	f000 fb43 	bl	8003548 <d_type>
 8002ec2:	0005      	movs	r5, r0
 8002ec4:	0020      	movs	r0, r4
 8002ec6:	f001 f875 	bl	8003fb4 <d_unqualified_name>
 8002eca:	68e3      	ldr	r3, [r4, #12]
 8002ecc:	781a      	ldrb	r2, [r3, #0]
 8002ece:	0006      	movs	r6, r0
 8002ed0:	2a49      	cmp	r2, #73	; 0x49
 8002ed2:	d025      	beq.n	8002f20 <d_expression_1+0x238>
 8002ed4:	0003      	movs	r3, r0
 8002ed6:	002a      	movs	r2, r5
 8002ed8:	2101      	movs	r1, #1
 8002eda:	0020      	movs	r0, r4
 8002edc:	f7ff f8a0 	bl	8002020 <d_make_comp>
 8002ee0:	0005      	movs	r5, r0
 8002ee2:	e760      	b.n	8002da6 <d_expression_1+0xbe>
 8002ee4:	f7ff f9a6 	bl	8002234 <d_compact_number>
 8002ee8:	0043      	lsls	r3, r0, #1
 8002eea:	3001      	adds	r0, #1
 8002eec:	3302      	adds	r3, #2
 8002eee:	d000      	beq.n	8002ef2 <d_expression_1+0x20a>
 8002ef0:	e714      	b.n	8002d1c <d_expression_1+0x34>
 8002ef2:	2500      	movs	r5, #0
 8002ef4:	e757      	b.n	8002da6 <d_expression_1+0xbe>
 8002ef6:	0020      	movs	r0, r4
 8002ef8:	f000 fb26 	bl	8003548 <d_type>
 8002efc:	e73a      	b.n	8002d74 <d_expression_1+0x8c>
 8002efe:	6883      	ldr	r3, [r0, #8]
 8002f00:	2b01      	cmp	r3, #1
 8002f02:	d100      	bne.n	8002f06 <d_expression_1+0x21e>
 8002f04:	e733      	b.n	8002d6e <d_expression_1+0x86>
 8002f06:	dd00      	ble.n	8002f0a <d_expression_1+0x222>
 8002f08:	e75c      	b.n	8002dc4 <d_expression_1+0xdc>
 8002f0a:	2b00      	cmp	r3, #0
 8002f0c:	d000      	beq.n	8002f10 <d_expression_1+0x228>
 8002f0e:	e759      	b.n	8002dc4 <d_expression_1+0xdc>
 8002f10:	2300      	movs	r3, #0
 8002f12:	0032      	movs	r2, r6
 8002f14:	2135      	movs	r1, #53	; 0x35
 8002f16:	0020      	movs	r0, r4
 8002f18:	f7ff f882 	bl	8002020 <d_make_comp>
 8002f1c:	0005      	movs	r5, r0
 8002f1e:	e742      	b.n	8002da6 <d_expression_1+0xbe>
 8002f20:	3301      	adds	r3, #1
 8002f22:	60e3      	str	r3, [r4, #12]
 8002f24:	0020      	movs	r0, r4
 8002f26:	f000 f8ff 	bl	8003128 <d_template_args_1>
 8002f2a:	0032      	movs	r2, r6
 8002f2c:	0003      	movs	r3, r0
 8002f2e:	2104      	movs	r1, #4
 8002f30:	0020      	movs	r0, r4
 8002f32:	f7ff f875 	bl	8002020 <d_make_comp>
 8002f36:	0003      	movs	r3, r0
 8002f38:	e7cd      	b.n	8002ed6 <d_expression_1+0x1ee>
 8002f3a:	2f00      	cmp	r7, #0
 8002f3c:	d100      	bne.n	8002f40 <d_expression_1+0x258>
 8002f3e:	e716      	b.n	8002d6e <d_expression_1+0x86>
 8002f40:	783b      	ldrb	r3, [r7, #0]
 8002f42:	2b70      	cmp	r3, #112	; 0x70
 8002f44:	d01b      	beq.n	8002f7e <d_expression_1+0x296>
 8002f46:	2b6d      	cmp	r3, #109	; 0x6d
 8002f48:	d019      	beq.n	8002f7e <d_expression_1+0x296>
 8002f4a:	2300      	movs	r3, #0
 8002f4c:	4698      	mov	r8, r3
 8002f4e:	4972      	ldr	r1, [pc, #456]	; (8003118 <d_expression_1+0x430>)
 8002f50:	0038      	movs	r0, r7
 8002f52:	f006 fa59 	bl	8009408 <strcmp>
 8002f56:	2800      	cmp	r0, #0
 8002f58:	d10d      	bne.n	8002f76 <d_expression_1+0x28e>
 8002f5a:	0020      	movs	r0, r4
 8002f5c:	f000 f8e4 	bl	8003128 <d_template_args_1>
 8002f60:	4643      	mov	r3, r8
 8002f62:	2b00      	cmp	r3, #0
 8002f64:	d100      	bne.n	8002f68 <d_expression_1+0x280>
 8002f66:	e705      	b.n	8002d74 <d_expression_1+0x8c>
 8002f68:	0003      	movs	r3, r0
 8002f6a:	0002      	movs	r2, r0
 8002f6c:	2138      	movs	r1, #56	; 0x38
 8002f6e:	0020      	movs	r0, r4
 8002f70:	f7ff f856 	bl	8002020 <d_make_comp>
 8002f74:	e6fe      	b.n	8002d74 <d_expression_1+0x8c>
 8002f76:	0020      	movs	r0, r4
 8002f78:	f7ff feb6 	bl	8002ce8 <d_expression_1>
 8002f7c:	e7f0      	b.n	8002f60 <d_expression_1+0x278>
 8002f7e:	787a      	ldrb	r2, [r7, #1]
 8002f80:	429a      	cmp	r2, r3
 8002f82:	d1e2      	bne.n	8002f4a <d_expression_1+0x262>
 8002f84:	68e3      	ldr	r3, [r4, #12]
 8002f86:	781a      	ldrb	r2, [r3, #0]
 8002f88:	2a5f      	cmp	r2, #95	; 0x5f
 8002f8a:	d1e0      	bne.n	8002f4e <d_expression_1+0x266>
 8002f8c:	3301      	adds	r3, #1
 8002f8e:	60e3      	str	r3, [r4, #12]
 8002f90:	2300      	movs	r3, #0
 8002f92:	4698      	mov	r8, r3
 8002f94:	e7db      	b.n	8002f4e <d_expression_1+0x266>
 8002f96:	3202      	adds	r2, #2
 8002f98:	60e2      	str	r2, [r4, #12]
 8002f9a:	0020      	movs	r0, r4
 8002f9c:	f7ff fea4 	bl	8002ce8 <d_expression_1>
 8002fa0:	2300      	movs	r3, #0
 8002fa2:	0002      	movs	r2, r0
 8002fa4:	214a      	movs	r1, #74	; 0x4a
 8002fa6:	0020      	movs	r0, r4
 8002fa8:	f7ff f83a 	bl	8002020 <d_make_comp>
 8002fac:	0005      	movs	r5, r0
 8002fae:	e6fa      	b.n	8002da6 <d_expression_1+0xbe>
 8002fb0:	2f00      	cmp	r7, #0
 8002fb2:	d100      	bne.n	8002fb6 <d_expression_1+0x2ce>
 8002fb4:	e706      	b.n	8002dc4 <d_expression_1+0xdc>
 8002fb6:	682b      	ldr	r3, [r5, #0]
 8002fb8:	785a      	ldrb	r2, [r3, #1]
 8002fba:	2a63      	cmp	r2, #99	; 0x63
 8002fbc:	d02e      	beq.n	800301c <d_expression_1+0x334>
 8002fbe:	783b      	ldrb	r3, [r7, #0]
 8002fc0:	2b66      	cmp	r3, #102	; 0x66
 8002fc2:	d147      	bne.n	8003054 <d_expression_1+0x36c>
 8002fc4:	0020      	movs	r0, r4
 8002fc6:	f000 fe1f 	bl	8003c08 <d_operator_name>
 8002fca:	4680      	mov	r8, r0
 8002fcc:	4953      	ldr	r1, [pc, #332]	; (800311c <d_expression_1+0x434>)
 8002fce:	0038      	movs	r0, r7
 8002fd0:	f006 fa1a 	bl	8009408 <strcmp>
 8002fd4:	2800      	cmp	r0, #0
 8002fd6:	d037      	beq.n	8003048 <d_expression_1+0x360>
 8002fd8:	4951      	ldr	r1, [pc, #324]	; (8003120 <d_expression_1+0x438>)
 8002fda:	0038      	movs	r0, r7
 8002fdc:	f006 fa14 	bl	8009408 <strcmp>
 8002fe0:	2800      	cmp	r0, #0
 8002fe2:	d005      	beq.n	8002ff0 <d_expression_1+0x308>
 8002fe4:	494f      	ldr	r1, [pc, #316]	; (8003124 <d_expression_1+0x43c>)
 8002fe6:	0038      	movs	r0, r7
 8002fe8:	f006 fa0e 	bl	8009408 <strcmp>
 8002fec:	2800      	cmp	r0, #0
 8002fee:	d16e      	bne.n	80030ce <d_expression_1+0x3e6>
 8002ff0:	0020      	movs	r0, r4
 8002ff2:	f000 ffdf 	bl	8003fb4 <d_unqualified_name>
 8002ff6:	68e3      	ldr	r3, [r4, #12]
 8002ff8:	781a      	ldrb	r2, [r3, #0]
 8002ffa:	0005      	movs	r5, r0
 8002ffc:	2a49      	cmp	r2, #73	; 0x49
 8002ffe:	d049      	beq.n	8003094 <d_expression_1+0x3ac>
 8003000:	002b      	movs	r3, r5
 8003002:	4642      	mov	r2, r8
 8003004:	2138      	movs	r1, #56	; 0x38
 8003006:	0020      	movs	r0, r4
 8003008:	f7ff f80a 	bl	8002020 <d_make_comp>
 800300c:	0032      	movs	r2, r6
 800300e:	0003      	movs	r3, r0
 8003010:	2137      	movs	r1, #55	; 0x37
 8003012:	0020      	movs	r0, r4
 8003014:	f7ff f804 	bl	8002020 <d_make_comp>
 8003018:	0005      	movs	r5, r0
 800301a:	e6c4      	b.n	8002da6 <d_expression_1+0xbe>
 800301c:	781a      	ldrb	r2, [r3, #0]
 800301e:	0011      	movs	r1, r2
 8003020:	2300      	movs	r3, #0
 8003022:	2001      	movs	r0, #1
 8003024:	3963      	subs	r1, #99	; 0x63
 8003026:	0609      	lsls	r1, r1, #24
 8003028:	0e09      	lsrs	r1, r1, #24
 800302a:	4288      	cmp	r0, r1
 800302c:	415b      	adcs	r3, r3
 800302e:	2b00      	cmp	r3, #0
 8003030:	d105      	bne.n	800303e <d_expression_1+0x356>
 8003032:	0013      	movs	r3, r2
 8003034:	3b72      	subs	r3, #114	; 0x72
 8003036:	061b      	lsls	r3, r3, #24
 8003038:	0e1b      	lsrs	r3, r3, #24
 800303a:	2b01      	cmp	r3, #1
 800303c:	d8bf      	bhi.n	8002fbe <d_expression_1+0x2d6>
 800303e:	0020      	movs	r0, r4
 8003040:	f000 fa82 	bl	8003548 <d_type>
 8003044:	4680      	mov	r8, r0
 8003046:	e7c1      	b.n	8002fcc <d_expression_1+0x2e4>
 8003048:	2145      	movs	r1, #69	; 0x45
 800304a:	0020      	movs	r0, r4
 800304c:	f7ff fbe4 	bl	8002818 <d_exprlist>
 8003050:	0005      	movs	r5, r0
 8003052:	e7d5      	b.n	8003000 <d_expression_1+0x318>
 8003054:	0020      	movs	r0, r4
 8003056:	f7ff fe47 	bl	8002ce8 <d_expression_1>
 800305a:	4680      	mov	r8, r0
 800305c:	e7b6      	b.n	8002fcc <d_expression_1+0x2e4>
 800305e:	3301      	adds	r3, #1
 8003060:	60e3      	str	r3, [r4, #12]
 8003062:	2300      	movs	r3, #0
 8003064:	e6ff      	b.n	8002e66 <d_expression_1+0x17e>
 8003066:	3301      	adds	r3, #1
 8003068:	60e3      	str	r3, [r4, #12]
 800306a:	2145      	movs	r1, #69	; 0x45
 800306c:	0020      	movs	r0, r4
 800306e:	f7ff fbd3 	bl	8002818 <d_exprlist>
 8003072:	e67f      	b.n	8002d74 <d_expression_1+0x8c>
 8003074:	0020      	movs	r0, r4
 8003076:	f7ff fe37 	bl	8002ce8 <d_expression_1>
 800307a:	0005      	movs	r5, r0
 800307c:	0020      	movs	r0, r4
 800307e:	f7ff fe33 	bl	8002ce8 <d_expression_1>
 8003082:	0007      	movs	r7, r0
 8003084:	0020      	movs	r0, r4
 8003086:	f7ff fe2f 	bl	8002ce8 <d_expression_1>
 800308a:	1e03      	subs	r3, r0, #0
 800308c:	d000      	beq.n	8003090 <d_expression_1+0x3a8>
 800308e:	e6ea      	b.n	8002e66 <d_expression_1+0x17e>
 8003090:	2500      	movs	r5, #0
 8003092:	e688      	b.n	8002da6 <d_expression_1+0xbe>
 8003094:	3301      	adds	r3, #1
 8003096:	60e3      	str	r3, [r4, #12]
 8003098:	0020      	movs	r0, r4
 800309a:	f000 f845 	bl	8003128 <d_template_args_1>
 800309e:	002a      	movs	r2, r5
 80030a0:	0003      	movs	r3, r0
 80030a2:	2104      	movs	r1, #4
 80030a4:	0020      	movs	r0, r4
 80030a6:	f7fe ffbb 	bl	8002020 <d_make_comp>
 80030aa:	0005      	movs	r5, r0
 80030ac:	e7a8      	b.n	8003000 <d_expression_1+0x318>
 80030ae:	785a      	ldrb	r2, [r3, #1]
 80030b0:	2a69      	cmp	r2, #105	; 0x69
 80030b2:	d000      	beq.n	80030b6 <d_expression_1+0x3ce>
 80030b4:	e686      	b.n	8002dc4 <d_expression_1+0xdc>
 80030b6:	3302      	adds	r3, #2
 80030b8:	60e3      	str	r3, [r4, #12]
 80030ba:	2145      	movs	r1, #69	; 0x45
 80030bc:	0020      	movs	r0, r4
 80030be:	f7ff fbab 	bl	8002818 <d_exprlist>
 80030c2:	0003      	movs	r3, r0
 80030c4:	e6cf      	b.n	8002e66 <d_expression_1+0x17e>
 80030c6:	0020      	movs	r0, r4
 80030c8:	f000 fd9e 	bl	8003c08 <d_operator_name>
 80030cc:	e7d5      	b.n	800307a <d_expression_1+0x392>
 80030ce:	0020      	movs	r0, r4
 80030d0:	f7ff fe0a 	bl	8002ce8 <d_expression_1>
 80030d4:	0005      	movs	r5, r0
 80030d6:	e793      	b.n	8003000 <d_expression_1+0x318>
 80030d8:	2b69      	cmp	r3, #105	; 0x69
 80030da:	d002      	beq.n	80030e2 <d_expression_1+0x3fa>
 80030dc:	2b74      	cmp	r3, #116	; 0x74
 80030de:	d000      	beq.n	80030e2 <d_expression_1+0x3fa>
 80030e0:	e633      	b.n	8002d4a <d_expression_1+0x62>
 80030e2:	7851      	ldrb	r1, [r2, #1]
 80030e4:	296c      	cmp	r1, #108	; 0x6c
 80030e6:	d000      	beq.n	80030ea <d_expression_1+0x402>
 80030e8:	e62f      	b.n	8002d4a <d_expression_1+0x62>
 80030ea:	2500      	movs	r5, #0
 80030ec:	2b74      	cmp	r3, #116	; 0x74
 80030ee:	d100      	bne.n	80030f2 <d_expression_1+0x40a>
 80030f0:	e65f      	b.n	8002db2 <d_expression_1+0xca>
 80030f2:	3202      	adds	r2, #2
 80030f4:	60e2      	str	r2, [r4, #12]
 80030f6:	2145      	movs	r1, #69	; 0x45
 80030f8:	0020      	movs	r0, r4
 80030fa:	f7ff fb8d 	bl	8002818 <d_exprlist>
 80030fe:	002a      	movs	r2, r5
 8003100:	0003      	movs	r3, r0
 8003102:	2130      	movs	r1, #48	; 0x30
 8003104:	0020      	movs	r0, r4
 8003106:	f7fe ff8b 	bl	8002020 <d_make_comp>
 800310a:	0005      	movs	r5, r0
 800310c:	e64b      	b.n	8002da6 <d_expression_1+0xbe>
 800310e:	46c0      	nop			; (mov r8, r8)
 8003110:	080272b4 	.word	0x080272b4
 8003114:	08026da8 	.word	0x08026da8
 8003118:	08026d98 	.word	0x08026d98
 800311c:	08026d9c 	.word	0x08026d9c
 8003120:	08026da0 	.word	0x08026da0
 8003124:	08026da4 	.word	0x08026da4

08003128 <d_template_args_1>:
 8003128:	b5f0      	push	{r4, r5, r6, r7, lr}
 800312a:	46c6      	mov	lr, r8
 800312c:	b500      	push	{lr}
 800312e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8003130:	68c2      	ldr	r2, [r0, #12]
 8003132:	4698      	mov	r8, r3
 8003134:	7813      	ldrb	r3, [r2, #0]
 8003136:	b082      	sub	sp, #8
 8003138:	0004      	movs	r4, r0
 800313a:	2b45      	cmp	r3, #69	; 0x45
 800313c:	d046      	beq.n	80031cc <d_template_args_1+0xa4>
 800313e:	2100      	movs	r1, #0
 8003140:	ad01      	add	r5, sp, #4
 8003142:	9101      	str	r1, [sp, #4]
 8003144:	2601      	movs	r6, #1
 8003146:	e018      	b.n	800317a <d_template_args_1+0x52>
 8003148:	3b49      	subs	r3, #73	; 0x49
 800314a:	061b      	lsls	r3, r3, #24
 800314c:	0e1b      	lsrs	r3, r3, #24
 800314e:	2b01      	cmp	r3, #1
 8003150:	d82b      	bhi.n	80031aa <d_template_args_1+0x82>
 8003152:	0020      	movs	r0, r4
 8003154:	f000 f842 	bl	80031dc <d_template_args>
 8003158:	2800      	cmp	r0, #0
 800315a:	d02a      	beq.n	80031b2 <d_template_args_1+0x8a>
 800315c:	0002      	movs	r2, r0
 800315e:	2300      	movs	r3, #0
 8003160:	212f      	movs	r1, #47	; 0x2f
 8003162:	0020      	movs	r0, r4
 8003164:	f7fe ff5c 	bl	8002020 <d_make_comp>
 8003168:	6028      	str	r0, [r5, #0]
 800316a:	2800      	cmp	r0, #0
 800316c:	d021      	beq.n	80031b2 <d_template_args_1+0x8a>
 800316e:	68e2      	ldr	r2, [r4, #12]
 8003170:	7813      	ldrb	r3, [r2, #0]
 8003172:	300c      	adds	r0, #12
 8003174:	0005      	movs	r5, r0
 8003176:	2b45      	cmp	r3, #69	; 0x45
 8003178:	d022      	beq.n	80031c0 <d_template_args_1+0x98>
 800317a:	2b4c      	cmp	r3, #76	; 0x4c
 800317c:	d011      	beq.n	80031a2 <d_template_args_1+0x7a>
 800317e:	d9e3      	bls.n	8003148 <d_template_args_1+0x20>
 8003180:	2b58      	cmp	r3, #88	; 0x58
 8003182:	d112      	bne.n	80031aa <d_template_args_1+0x82>
 8003184:	3201      	adds	r2, #1
 8003186:	6b67      	ldr	r7, [r4, #52]	; 0x34
 8003188:	60e2      	str	r2, [r4, #12]
 800318a:	6366      	str	r6, [r4, #52]	; 0x34
 800318c:	0020      	movs	r0, r4
 800318e:	f7ff fdab 	bl	8002ce8 <d_expression_1>
 8003192:	6367      	str	r7, [r4, #52]	; 0x34
 8003194:	68e3      	ldr	r3, [r4, #12]
 8003196:	781a      	ldrb	r2, [r3, #0]
 8003198:	2a45      	cmp	r2, #69	; 0x45
 800319a:	d10a      	bne.n	80031b2 <d_template_args_1+0x8a>
 800319c:	3301      	adds	r3, #1
 800319e:	60e3      	str	r3, [r4, #12]
 80031a0:	e7da      	b.n	8003158 <d_template_args_1+0x30>
 80031a2:	0020      	movs	r0, r4
 80031a4:	f001 fa88 	bl	80046b8 <d_expr_primary>
 80031a8:	e7d6      	b.n	8003158 <d_template_args_1+0x30>
 80031aa:	0020      	movs	r0, r4
 80031ac:	f000 f9cc 	bl	8003548 <d_type>
 80031b0:	e7d2      	b.n	8003158 <d_template_args_1+0x30>
 80031b2:	2000      	movs	r0, #0
 80031b4:	b002      	add	sp, #8
 80031b6:	bc04      	pop	{r2}
 80031b8:	4690      	mov	r8, r2
 80031ba:	bcf0      	pop	{r4, r5, r6, r7}
 80031bc:	bc02      	pop	{r1}
 80031be:	4708      	bx	r1
 80031c0:	4643      	mov	r3, r8
 80031c2:	3201      	adds	r2, #1
 80031c4:	60e2      	str	r2, [r4, #12]
 80031c6:	62e3      	str	r3, [r4, #44]	; 0x2c
 80031c8:	9801      	ldr	r0, [sp, #4]
 80031ca:	e7f3      	b.n	80031b4 <d_template_args_1+0x8c>
 80031cc:	3201      	adds	r2, #1
 80031ce:	60c2      	str	r2, [r0, #12]
 80031d0:	2300      	movs	r3, #0
 80031d2:	2200      	movs	r2, #0
 80031d4:	212f      	movs	r1, #47	; 0x2f
 80031d6:	f7fe ff23 	bl	8002020 <d_make_comp>
 80031da:	e7eb      	b.n	80031b4 <d_template_args_1+0x8c>

080031dc <d_template_args>:
 80031dc:	b510      	push	{r4, lr}
 80031de:	68c2      	ldr	r2, [r0, #12]
 80031e0:	7813      	ldrb	r3, [r2, #0]
 80031e2:	3b49      	subs	r3, #73	; 0x49
 80031e4:	061b      	lsls	r3, r3, #24
 80031e6:	0e1b      	lsrs	r3, r3, #24
 80031e8:	2b01      	cmp	r3, #1
 80031ea:	d806      	bhi.n	80031fa <d_template_args+0x1e>
 80031ec:	3201      	adds	r2, #1
 80031ee:	60c2      	str	r2, [r0, #12]
 80031f0:	f7ff ff9a 	bl	8003128 <d_template_args_1>
 80031f4:	bc10      	pop	{r4}
 80031f6:	bc02      	pop	{r1}
 80031f8:	4708      	bx	r1
 80031fa:	2000      	movs	r0, #0
 80031fc:	e7fa      	b.n	80031f4 <d_template_args+0x18>
 80031fe:	46c0      	nop			; (mov r8, r8)

08003200 <d_name>:
 8003200:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003202:	46d6      	mov	lr, sl
 8003204:	464f      	mov	r7, r9
 8003206:	4646      	mov	r6, r8
 8003208:	b5c0      	push	{r6, r7, lr}
 800320a:	68c2      	ldr	r2, [r0, #12]
 800320c:	7813      	ldrb	r3, [r2, #0]
 800320e:	b082      	sub	sp, #8
 8003210:	0004      	movs	r4, r0
 8003212:	2b53      	cmp	r3, #83	; 0x53
 8003214:	d100      	bne.n	8003218 <d_name+0x18>
 8003216:	e0bb      	b.n	8003390 <d_name+0x190>
 8003218:	d955      	bls.n	80032c6 <d_name+0xc6>
 800321a:	2b55      	cmp	r3, #85	; 0x55
 800321c:	d042      	beq.n	80032a4 <d_name+0xa4>
 800321e:	2b5a      	cmp	r3, #90	; 0x5a
 8003220:	d000      	beq.n	8003224 <d_name+0x24>
 8003222:	e097      	b.n	8003354 <d_name+0x154>
 8003224:	3201      	adds	r2, #1
 8003226:	60c2      	str	r2, [r0, #12]
 8003228:	2100      	movs	r1, #0
 800322a:	f001 f82b 	bl	8004284 <d_encoding>
 800322e:	68e3      	ldr	r3, [r4, #12]
 8003230:	781a      	ldrb	r2, [r3, #0]
 8003232:	0006      	movs	r6, r0
 8003234:	2a45      	cmp	r2, #69	; 0x45
 8003236:	d144      	bne.n	80032c2 <d_name+0xc2>
 8003238:	1c5a      	adds	r2, r3, #1
 800323a:	60e2      	str	r2, [r4, #12]
 800323c:	785a      	ldrb	r2, [r3, #1]
 800323e:	2a73      	cmp	r2, #115	; 0x73
 8003240:	d100      	bne.n	8003244 <d_name+0x44>
 8003242:	e14b      	b.n	80034dc <d_name+0x2dc>
 8003244:	2a64      	cmp	r2, #100	; 0x64
 8003246:	d100      	bne.n	800324a <d_name+0x4a>
 8003248:	e12e      	b.n	80034a8 <d_name+0x2a8>
 800324a:	0020      	movs	r0, r4
 800324c:	f7ff ffd8 	bl	8003200 <d_name>
 8003250:	1e05      	subs	r5, r0, #0
 8003252:	d01f      	beq.n	8003294 <d_name+0x94>
 8003254:	7803      	ldrb	r3, [r0, #0]
 8003256:	2b45      	cmp	r3, #69	; 0x45
 8003258:	d01c      	beq.n	8003294 <d_name+0x94>
 800325a:	2b47      	cmp	r3, #71	; 0x47
 800325c:	d01a      	beq.n	8003294 <d_name+0x94>
 800325e:	2701      	movs	r7, #1
 8003260:	427f      	negs	r7, r7
 8003262:	0020      	movs	r0, r4
 8003264:	f7ff f974 	bl	8002550 <d_discriminator>
 8003268:	2800      	cmp	r0, #0
 800326a:	d02a      	beq.n	80032c2 <d_name+0xc2>
 800326c:	1c7b      	adds	r3, r7, #1
 800326e:	d011      	beq.n	8003294 <d_name+0x94>
 8003270:	6962      	ldr	r2, [r4, #20]
 8003272:	69a3      	ldr	r3, [r4, #24]
 8003274:	429a      	cmp	r2, r3
 8003276:	db00      	blt.n	800327a <d_name+0x7a>
 8003278:	e12e      	b.n	80034d8 <d_name+0x2d8>
 800327a:	6921      	ldr	r1, [r4, #16]
 800327c:	468c      	mov	ip, r1
 800327e:	2100      	movs	r1, #0
 8003280:	0113      	lsls	r3, r2, #4
 8003282:	4463      	add	r3, ip
 8003284:	3201      	adds	r2, #1
 8003286:	6059      	str	r1, [r3, #4]
 8003288:	6162      	str	r2, [r4, #20]
 800328a:	2246      	movs	r2, #70	; 0x46
 800328c:	609d      	str	r5, [r3, #8]
 800328e:	001d      	movs	r5, r3
 8003290:	701a      	strb	r2, [r3, #0]
 8003292:	60df      	str	r7, [r3, #12]
 8003294:	002b      	movs	r3, r5
 8003296:	0032      	movs	r2, r6
 8003298:	2102      	movs	r1, #2
 800329a:	0020      	movs	r0, r4
 800329c:	f7fe fec0 	bl	8002020 <d_make_comp>
 80032a0:	0005      	movs	r5, r0
 80032a2:	e002      	b.n	80032aa <d_name+0xaa>
 80032a4:	f000 fe86 	bl	8003fb4 <d_unqualified_name>
 80032a8:	0005      	movs	r5, r0
 80032aa:	0028      	movs	r0, r5
 80032ac:	b002      	add	sp, #8
 80032ae:	bc1c      	pop	{r2, r3, r4}
 80032b0:	4690      	mov	r8, r2
 80032b2:	4699      	mov	r9, r3
 80032b4:	46a2      	mov	sl, r4
 80032b6:	bcf0      	pop	{r4, r5, r6, r7}
 80032b8:	bc02      	pop	{r1}
 80032ba:	4708      	bx	r1
 80032bc:	2300      	movs	r3, #0
 80032be:	4652      	mov	r2, sl
 80032c0:	6013      	str	r3, [r2, #0]
 80032c2:	2500      	movs	r5, #0
 80032c4:	e7f1      	b.n	80032aa <d_name+0xaa>
 80032c6:	2b4e      	cmp	r3, #78	; 0x4e
 80032c8:	d144      	bne.n	8003354 <d_name+0x154>
 80032ca:	3201      	adds	r2, #1
 80032cc:	60c2      	str	r2, [r0, #12]
 80032ce:	a901      	add	r1, sp, #4
 80032d0:	2201      	movs	r2, #1
 80032d2:	f000 fd6d 	bl	8003db0 <d_cv_qualifiers>
 80032d6:	4682      	mov	sl, r0
 80032d8:	2800      	cmp	r0, #0
 80032da:	d0f2      	beq.n	80032c2 <d_name+0xc2>
 80032dc:	2100      	movs	r1, #0
 80032de:	0020      	movs	r0, r4
 80032e0:	f7fe fec2 	bl	8002068 <d_ref_qualifier>
 80032e4:	2301      	movs	r3, #1
 80032e6:	4681      	mov	r9, r0
 80032e8:	2600      	movs	r6, #0
 80032ea:	4698      	mov	r8, r3
 80032ec:	68e2      	ldr	r2, [r4, #12]
 80032ee:	7815      	ldrb	r5, [r2, #0]
 80032f0:	2d00      	cmp	r5, #0
 80032f2:	d0e3      	beq.n	80032bc <d_name+0xbc>
 80032f4:	2719      	movs	r7, #25
 80032f6:	2d44      	cmp	r5, #68	; 0x44
 80032f8:	d074      	beq.n	80033e4 <d_name+0x1e4>
 80032fa:	002b      	movs	r3, r5
 80032fc:	3b30      	subs	r3, #48	; 0x30
 80032fe:	061b      	lsls	r3, r3, #24
 8003300:	0e1b      	lsrs	r3, r3, #24
 8003302:	2100      	movs	r1, #0
 8003304:	2b1c      	cmp	r3, #28
 8003306:	d806      	bhi.n	8003316 <d_name+0x116>
 8003308:	498c      	ldr	r1, [pc, #560]	; (800353c <d_name+0x33c>)
 800330a:	40d9      	lsrs	r1, r3
 800330c:	4643      	mov	r3, r8
 800330e:	438b      	bics	r3, r1
 8003310:	0019      	movs	r1, r3
 8003312:	2301      	movs	r3, #1
 8003314:	4059      	eors	r1, r3
 8003316:	002b      	movs	r3, r5
 8003318:	3b61      	subs	r3, #97	; 0x61
 800331a:	061b      	lsls	r3, r3, #24
 800331c:	0e1b      	lsrs	r3, r3, #24
 800331e:	429f      	cmp	r7, r3
 8003320:	d300      	bcc.n	8003324 <d_name+0x124>
 8003322:	e088      	b.n	8003436 <d_name+0x236>
 8003324:	2900      	cmp	r1, #0
 8003326:	d000      	beq.n	800332a <d_name+0x12a>
 8003328:	e085      	b.n	8003436 <d_name+0x236>
 800332a:	2d55      	cmp	r5, #85	; 0x55
 800332c:	d000      	beq.n	8003330 <d_name+0x130>
 800332e:	e08f      	b.n	8003450 <d_name+0x250>
 8003330:	0020      	movs	r0, r4
 8003332:	f000 fe3f 	bl	8003fb4 <d_unqualified_name>
 8003336:	2e00      	cmp	r6, #0
 8003338:	d05f      	beq.n	80033fa <d_name+0x1fa>
 800333a:	2101      	movs	r1, #1
 800333c:	0003      	movs	r3, r0
 800333e:	0032      	movs	r2, r6
 8003340:	0020      	movs	r0, r4
 8003342:	f7fe fe6d 	bl	8002020 <d_make_comp>
 8003346:	0006      	movs	r6, r0
 8003348:	68e2      	ldr	r2, [r4, #12]
 800334a:	7813      	ldrb	r3, [r2, #0]
 800334c:	2d53      	cmp	r5, #83	; 0x53
 800334e:	d157      	bne.n	8003400 <d_name+0x200>
 8003350:	001d      	movs	r5, r3
 8003352:	e7cd      	b.n	80032f0 <d_name+0xf0>
 8003354:	0020      	movs	r0, r4
 8003356:	f000 fe2d 	bl	8003fb4 <d_unqualified_name>
 800335a:	68e3      	ldr	r3, [r4, #12]
 800335c:	781b      	ldrb	r3, [r3, #0]
 800335e:	0005      	movs	r5, r0
 8003360:	2b49      	cmp	r3, #73	; 0x49
 8003362:	d1a2      	bne.n	80032aa <d_name+0xaa>
 8003364:	2d00      	cmp	r5, #0
 8003366:	d0ac      	beq.n	80032c2 <d_name+0xc2>
 8003368:	6a23      	ldr	r3, [r4, #32]
 800336a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800336c:	4293      	cmp	r3, r2
 800336e:	daa8      	bge.n	80032c2 <d_name+0xc2>
 8003370:	69e1      	ldr	r1, [r4, #28]
 8003372:	009a      	lsls	r2, r3, #2
 8003374:	3301      	adds	r3, #1
 8003376:	5055      	str	r5, [r2, r1]
 8003378:	6223      	str	r3, [r4, #32]
 800337a:	0020      	movs	r0, r4
 800337c:	f7ff ff2e 	bl	80031dc <d_template_args>
 8003380:	002a      	movs	r2, r5
 8003382:	0003      	movs	r3, r0
 8003384:	2104      	movs	r1, #4
 8003386:	0020      	movs	r0, r4
 8003388:	f7fe fe4a 	bl	8002020 <d_make_comp>
 800338c:	0005      	movs	r5, r0
 800338e:	e78c      	b.n	80032aa <d_name+0xaa>
 8003390:	7853      	ldrb	r3, [r2, #1]
 8003392:	2b74      	cmp	r3, #116	; 0x74
 8003394:	d145      	bne.n	8003422 <d_name+0x222>
 8003396:	3202      	adds	r2, #2
 8003398:	60c2      	str	r2, [r0, #12]
 800339a:	6943      	ldr	r3, [r0, #20]
 800339c:	6982      	ldr	r2, [r0, #24]
 800339e:	2500      	movs	r5, #0
 80033a0:	4293      	cmp	r3, r2
 80033a2:	da0c      	bge.n	80033be <d_name+0x1be>
 80033a4:	6902      	ldr	r2, [r0, #16]
 80033a6:	011d      	lsls	r5, r3, #4
 80033a8:	4694      	mov	ip, r2
 80033aa:	3301      	adds	r3, #1
 80033ac:	6143      	str	r3, [r0, #20]
 80033ae:	2300      	movs	r3, #0
 80033b0:	4465      	add	r5, ip
 80033b2:	606b      	str	r3, [r5, #4]
 80033b4:	702b      	strb	r3, [r5, #0]
 80033b6:	4b62      	ldr	r3, [pc, #392]	; (8003540 <d_name+0x340>)
 80033b8:	60ab      	str	r3, [r5, #8]
 80033ba:	2303      	movs	r3, #3
 80033bc:	60eb      	str	r3, [r5, #12]
 80033be:	0020      	movs	r0, r4
 80033c0:	f000 fdf8 	bl	8003fb4 <d_unqualified_name>
 80033c4:	002a      	movs	r2, r5
 80033c6:	0003      	movs	r3, r0
 80033c8:	2101      	movs	r1, #1
 80033ca:	0020      	movs	r0, r4
 80033cc:	f7fe fe28 	bl	8002020 <d_make_comp>
 80033d0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80033d2:	3303      	adds	r3, #3
 80033d4:	6323      	str	r3, [r4, #48]	; 0x30
 80033d6:	68e3      	ldr	r3, [r4, #12]
 80033d8:	781b      	ldrb	r3, [r3, #0]
 80033da:	0005      	movs	r5, r0
 80033dc:	2b49      	cmp	r3, #73	; 0x49
 80033de:	d000      	beq.n	80033e2 <d_name+0x1e2>
 80033e0:	e763      	b.n	80032aa <d_name+0xaa>
 80033e2:	e7bf      	b.n	8003364 <d_name+0x164>
 80033e4:	7853      	ldrb	r3, [r2, #1]
 80033e6:	2220      	movs	r2, #32
 80033e8:	0020      	movs	r0, r4
 80033ea:	4393      	bics	r3, r2
 80033ec:	2b54      	cmp	r3, #84	; 0x54
 80033ee:	d12c      	bne.n	800344a <d_name+0x24a>
 80033f0:	f000 f8aa 	bl	8003548 <d_type>
 80033f4:	2101      	movs	r1, #1
 80033f6:	2e00      	cmp	r6, #0
 80033f8:	d1a0      	bne.n	800333c <d_name+0x13c>
 80033fa:	0006      	movs	r6, r0
 80033fc:	68e2      	ldr	r2, [r4, #12]
 80033fe:	7813      	ldrb	r3, [r2, #0]
 8003400:	2b45      	cmp	r3, #69	; 0x45
 8003402:	d020      	beq.n	8003446 <d_name+0x246>
 8003404:	2e00      	cmp	r6, #0
 8003406:	d100      	bne.n	800340a <d_name+0x20a>
 8003408:	e758      	b.n	80032bc <d_name+0xbc>
 800340a:	6a23      	ldr	r3, [r4, #32]
 800340c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800340e:	428b      	cmp	r3, r1
 8003410:	db00      	blt.n	8003414 <d_name+0x214>
 8003412:	e753      	b.n	80032bc <d_name+0xbc>
 8003414:	69e0      	ldr	r0, [r4, #28]
 8003416:	0099      	lsls	r1, r3, #2
 8003418:	3301      	adds	r3, #1
 800341a:	500e      	str	r6, [r1, r0]
 800341c:	6223      	str	r3, [r4, #32]
 800341e:	7815      	ldrb	r5, [r2, #0]
 8003420:	e766      	b.n	80032f0 <d_name+0xf0>
 8003422:	2100      	movs	r1, #0
 8003424:	f7fe ffd0 	bl	80023c8 <d_substitution>
 8003428:	68e3      	ldr	r3, [r4, #12]
 800342a:	781b      	ldrb	r3, [r3, #0]
 800342c:	0005      	movs	r5, r0
 800342e:	2b49      	cmp	r3, #73	; 0x49
 8003430:	d000      	beq.n	8003434 <d_name+0x234>
 8003432:	e73a      	b.n	80032aa <d_name+0xaa>
 8003434:	e7a1      	b.n	800337a <d_name+0x17a>
 8003436:	0020      	movs	r0, r4
 8003438:	f000 fdbc 	bl	8003fb4 <d_unqualified_name>
 800343c:	2e00      	cmp	r6, #0
 800343e:	d000      	beq.n	8003442 <d_name+0x242>
 8003440:	e77b      	b.n	800333a <d_name+0x13a>
 8003442:	0006      	movs	r6, r0
 8003444:	e780      	b.n	8003348 <d_name+0x148>
 8003446:	2545      	movs	r5, #69	; 0x45
 8003448:	e757      	b.n	80032fa <d_name+0xfa>
 800344a:	f000 fdb3 	bl	8003fb4 <d_unqualified_name>
 800344e:	e7d1      	b.n	80033f4 <d_name+0x1f4>
 8003450:	2d53      	cmp	r5, #83	; 0x53
 8003452:	d01a      	beq.n	800348a <d_name+0x28a>
 8003454:	2d49      	cmp	r5, #73	; 0x49
 8003456:	d00e      	beq.n	8003476 <d_name+0x276>
 8003458:	2d54      	cmp	r5, #84	; 0x54
 800345a:	d021      	beq.n	80034a0 <d_name+0x2a0>
 800345c:	2d45      	cmp	r5, #69	; 0x45
 800345e:	d059      	beq.n	8003514 <d_name+0x314>
 8003460:	2d4d      	cmp	r5, #77	; 0x4d
 8003462:	d000      	beq.n	8003466 <d_name+0x266>
 8003464:	e72a      	b.n	80032bc <d_name+0xbc>
 8003466:	2e00      	cmp	r6, #0
 8003468:	d100      	bne.n	800346c <d_name+0x26c>
 800346a:	e727      	b.n	80032bc <d_name+0xbc>
 800346c:	1c53      	adds	r3, r2, #1
 800346e:	60e3      	str	r3, [r4, #12]
 8003470:	7855      	ldrb	r5, [r2, #1]
 8003472:	001a      	movs	r2, r3
 8003474:	e73c      	b.n	80032f0 <d_name+0xf0>
 8003476:	2e00      	cmp	r6, #0
 8003478:	d100      	bne.n	800347c <d_name+0x27c>
 800347a:	e71f      	b.n	80032bc <d_name+0xbc>
 800347c:	3201      	adds	r2, #1
 800347e:	60e2      	str	r2, [r4, #12]
 8003480:	0020      	movs	r0, r4
 8003482:	f7ff fe51 	bl	8003128 <d_template_args_1>
 8003486:	2104      	movs	r1, #4
 8003488:	e758      	b.n	800333c <d_name+0x13c>
 800348a:	2101      	movs	r1, #1
 800348c:	0020      	movs	r0, r4
 800348e:	f7fe ff9b 	bl	80023c8 <d_substitution>
 8003492:	2e00      	cmp	r6, #0
 8003494:	d000      	beq.n	8003498 <d_name+0x298>
 8003496:	e750      	b.n	800333a <d_name+0x13a>
 8003498:	68e2      	ldr	r2, [r4, #12]
 800349a:	0006      	movs	r6, r0
 800349c:	7815      	ldrb	r5, [r2, #0]
 800349e:	e727      	b.n	80032f0 <d_name+0xf0>
 80034a0:	0020      	movs	r0, r4
 80034a2:	f7fe fee3 	bl	800226c <d_template_param>
 80034a6:	e7a5      	b.n	80033f4 <d_name+0x1f4>
 80034a8:	3302      	adds	r3, #2
 80034aa:	60e3      	str	r3, [r4, #12]
 80034ac:	0020      	movs	r0, r4
 80034ae:	f7fe fec1 	bl	8002234 <d_compact_number>
 80034b2:	1e07      	subs	r7, r0, #0
 80034b4:	da00      	bge.n	80034b8 <d_name+0x2b8>
 80034b6:	e704      	b.n	80032c2 <d_name+0xc2>
 80034b8:	0020      	movs	r0, r4
 80034ba:	f7ff fea1 	bl	8003200 <d_name>
 80034be:	1e05      	subs	r5, r0, #0
 80034c0:	d100      	bne.n	80034c4 <d_name+0x2c4>
 80034c2:	e6d5      	b.n	8003270 <d_name+0x70>
 80034c4:	7803      	ldrb	r3, [r0, #0]
 80034c6:	061a      	lsls	r2, r3, #24
 80034c8:	2b45      	cmp	r3, #69	; 0x45
 80034ca:	d100      	bne.n	80034ce <d_name+0x2ce>
 80034cc:	e6ce      	b.n	800326c <d_name+0x6c>
 80034ce:	0e12      	lsrs	r2, r2, #24
 80034d0:	2a47      	cmp	r2, #71	; 0x47
 80034d2:	d100      	bne.n	80034d6 <d_name+0x2d6>
 80034d4:	e6ca      	b.n	800326c <d_name+0x6c>
 80034d6:	e6c4      	b.n	8003262 <d_name+0x62>
 80034d8:	2500      	movs	r5, #0
 80034da:	e6db      	b.n	8003294 <d_name+0x94>
 80034dc:	3302      	adds	r3, #2
 80034de:	60e3      	str	r3, [r4, #12]
 80034e0:	0020      	movs	r0, r4
 80034e2:	f7ff f835 	bl	8002550 <d_discriminator>
 80034e6:	2800      	cmp	r0, #0
 80034e8:	d100      	bne.n	80034ec <d_name+0x2ec>
 80034ea:	e6ea      	b.n	80032c2 <d_name+0xc2>
 80034ec:	6962      	ldr	r2, [r4, #20]
 80034ee:	69a1      	ldr	r1, [r4, #24]
 80034f0:	2300      	movs	r3, #0
 80034f2:	428a      	cmp	r2, r1
 80034f4:	db00      	blt.n	80034f8 <d_name+0x2f8>
 80034f6:	e6ce      	b.n	8003296 <d_name+0x96>
 80034f8:	6921      	ldr	r1, [r4, #16]
 80034fa:	0113      	lsls	r3, r2, #4
 80034fc:	468c      	mov	ip, r1
 80034fe:	3201      	adds	r2, #1
 8003500:	6162      	str	r2, [r4, #20]
 8003502:	2200      	movs	r2, #0
 8003504:	4463      	add	r3, ip
 8003506:	605a      	str	r2, [r3, #4]
 8003508:	701a      	strb	r2, [r3, #0]
 800350a:	4a0e      	ldr	r2, [pc, #56]	; (8003544 <d_name+0x344>)
 800350c:	609a      	str	r2, [r3, #8]
 800350e:	220e      	movs	r2, #14
 8003510:	60da      	str	r2, [r3, #12]
 8003512:	e6c0      	b.n	8003296 <d_name+0x96>
 8003514:	4653      	mov	r3, sl
 8003516:	601e      	str	r6, [r3, #0]
 8003518:	2e00      	cmp	r6, #0
 800351a:	d100      	bne.n	800351e <d_name+0x31e>
 800351c:	e6d1      	b.n	80032c2 <d_name+0xc2>
 800351e:	464b      	mov	r3, r9
 8003520:	2b00      	cmp	r3, #0
 8003522:	d002      	beq.n	800352a <d_name+0x32a>
 8003524:	9901      	ldr	r1, [sp, #4]
 8003526:	9301      	str	r3, [sp, #4]
 8003528:	6099      	str	r1, [r3, #8]
 800352a:	7813      	ldrb	r3, [r2, #0]
 800352c:	2b45      	cmp	r3, #69	; 0x45
 800352e:	d000      	beq.n	8003532 <d_name+0x332>
 8003530:	e6c7      	b.n	80032c2 <d_name+0xc2>
 8003532:	3201      	adds	r2, #1
 8003534:	60e2      	str	r2, [r4, #12]
 8003536:	9d01      	ldr	r5, [sp, #4]
 8003538:	e6b7      	b.n	80032aa <d_name+0xaa>
 800353a:	46c0      	nop			; (mov r8, r8)
 800353c:	100803ff 	.word	0x100803ff
 8003540:	08026dbc 	.word	0x08026dbc
 8003544:	08026dac 	.word	0x08026dac

08003548 <d_type>:
 8003548:	b5f0      	push	{r4, r5, r6, r7, lr}
 800354a:	46ce      	mov	lr, r9
 800354c:	4647      	mov	r7, r8
 800354e:	b580      	push	{r7, lr}
 8003550:	68c6      	ldr	r6, [r0, #12]
 8003552:	b083      	sub	sp, #12
 8003554:	0004      	movs	r4, r0
 8003556:	0030      	movs	r0, r6
 8003558:	f7ff f824 	bl	80025a4 <next_is_type_qual.isra.3>
 800355c:	2800      	cmp	r0, #0
 800355e:	d10a      	bne.n	8003576 <d_type+0x2e>
 8003560:	7832      	ldrb	r2, [r6, #0]
 8003562:	0013      	movs	r3, r2
 8003564:	3b30      	subs	r3, #48	; 0x30
 8003566:	061b      	lsls	r3, r3, #24
 8003568:	0e1b      	lsrs	r3, r3, #24
 800356a:	2b4a      	cmp	r3, #74	; 0x4a
 800356c:	d852      	bhi.n	8003614 <d_type+0xcc>
 800356e:	49ca      	ldr	r1, [pc, #808]	; (8003898 <d_type+0x350>)
 8003570:	009b      	lsls	r3, r3, #2
 8003572:	58cb      	ldr	r3, [r1, r3]
 8003574:	469f      	mov	pc, r3
 8003576:	2200      	movs	r2, #0
 8003578:	a901      	add	r1, sp, #4
 800357a:	0020      	movs	r0, r4
 800357c:	f000 fc18 	bl	8003db0 <d_cv_qualifiers>
 8003580:	1e05      	subs	r5, r0, #0
 8003582:	d047      	beq.n	8003614 <d_type+0xcc>
 8003584:	68e3      	ldr	r3, [r4, #12]
 8003586:	781b      	ldrb	r3, [r3, #0]
 8003588:	0020      	movs	r0, r4
 800358a:	2b46      	cmp	r3, #70	; 0x46
 800358c:	d125      	bne.n	80035da <d_type+0x92>
 800358e:	f000 fcf1 	bl	8003f74 <d_function_type>
 8003592:	6028      	str	r0, [r5, #0]
 8003594:	2800      	cmp	r0, #0
 8003596:	d03d      	beq.n	8003614 <d_type+0xcc>
 8003598:	7803      	ldrb	r3, [r0, #0]
 800359a:	3b1f      	subs	r3, #31
 800359c:	061b      	lsls	r3, r3, #24
 800359e:	9a01      	ldr	r2, [sp, #4]
 80035a0:	0e1b      	lsrs	r3, r3, #24
 80035a2:	2b01      	cmp	r3, #1
 80035a4:	d805      	bhi.n	80035b2 <d_type+0x6a>
 80035a6:	6883      	ldr	r3, [r0, #8]
 80035a8:	6082      	str	r2, [r0, #8]
 80035aa:	682a      	ldr	r2, [r5, #0]
 80035ac:	9201      	str	r2, [sp, #4]
 80035ae:	602b      	str	r3, [r5, #0]
 80035b0:	9a01      	ldr	r2, [sp, #4]
 80035b2:	2a00      	cmp	r2, #0
 80035b4:	d02e      	beq.n	8003614 <d_type+0xcc>
 80035b6:	6a23      	ldr	r3, [r4, #32]
 80035b8:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80035ba:	428b      	cmp	r3, r1
 80035bc:	da2a      	bge.n	8003614 <d_type+0xcc>
 80035be:	69e0      	ldr	r0, [r4, #28]
 80035c0:	0099      	lsls	r1, r3, #2
 80035c2:	500a      	str	r2, [r1, r0]
 80035c4:	3301      	adds	r3, #1
 80035c6:	6223      	str	r3, [r4, #32]
 80035c8:	9d01      	ldr	r5, [sp, #4]
 80035ca:	0028      	movs	r0, r5
 80035cc:	b003      	add	sp, #12
 80035ce:	bc0c      	pop	{r2, r3}
 80035d0:	4690      	mov	r8, r2
 80035d2:	4699      	mov	r9, r3
 80035d4:	bcf0      	pop	{r4, r5, r6, r7}
 80035d6:	bc02      	pop	{r1}
 80035d8:	4708      	bx	r1
 80035da:	f7ff ffb5 	bl	8003548 <d_type>
 80035de:	6028      	str	r0, [r5, #0]
 80035e0:	e7d8      	b.n	8003594 <d_type+0x4c>
 80035e2:	2301      	movs	r3, #1
 80035e4:	6b65      	ldr	r5, [r4, #52]	; 0x34
 80035e6:	0020      	movs	r0, r4
 80035e8:	6363      	str	r3, [r4, #52]	; 0x34
 80035ea:	f7ff fb7d 	bl	8002ce8 <d_expression_1>
 80035ee:	6365      	str	r5, [r4, #52]	; 0x34
 80035f0:	0002      	movs	r2, r0
 80035f2:	2300      	movs	r3, #0
 80035f4:	2142      	movs	r1, #66	; 0x42
 80035f6:	0020      	movs	r0, r4
 80035f8:	f7fe fd12 	bl	8002020 <d_make_comp>
 80035fc:	1e05      	subs	r5, r0, #0
 80035fe:	9001      	str	r0, [sp, #4]
 8003600:	d008      	beq.n	8003614 <d_type+0xcc>
 8003602:	68e3      	ldr	r3, [r4, #12]
 8003604:	781a      	ldrb	r2, [r3, #0]
 8003606:	2a00      	cmp	r2, #0
 8003608:	d004      	beq.n	8003614 <d_type+0xcc>
 800360a:	1c5a      	adds	r2, r3, #1
 800360c:	60e2      	str	r2, [r4, #12]
 800360e:	781b      	ldrb	r3, [r3, #0]
 8003610:	2b45      	cmp	r3, #69	; 0x45
 8003612:	d010      	beq.n	8003636 <d_type+0xee>
 8003614:	2500      	movs	r5, #0
 8003616:	e7d8      	b.n	80035ca <d_type+0x82>
 8003618:	3601      	adds	r6, #1
 800361a:	60e6      	str	r6, [r4, #12]
 800361c:	0020      	movs	r0, r4
 800361e:	f7fe fe49 	bl	80022b4 <d_source_name>
 8003622:	2300      	movs	r3, #0
 8003624:	0002      	movs	r2, r0
 8003626:	2128      	movs	r1, #40	; 0x28
 8003628:	0020      	movs	r0, r4
 800362a:	f7fe fcf9 	bl	8002020 <d_make_comp>
 800362e:	0005      	movs	r5, r0
 8003630:	9001      	str	r0, [sp, #4]
 8003632:	2d00      	cmp	r5, #0
 8003634:	d0ee      	beq.n	8003614 <d_type+0xcc>
 8003636:	6a23      	ldr	r3, [r4, #32]
 8003638:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800363a:	4293      	cmp	r3, r2
 800363c:	daea      	bge.n	8003614 <d_type+0xcc>
 800363e:	69e1      	ldr	r1, [r4, #28]
 8003640:	009a      	lsls	r2, r3, #2
 8003642:	5055      	str	r5, [r2, r1]
 8003644:	3301      	adds	r3, #1
 8003646:	6223      	str	r3, [r4, #32]
 8003648:	9d01      	ldr	r5, [sp, #4]
 800364a:	e7be      	b.n	80035ca <d_type+0x82>
 800364c:	3601      	adds	r6, #1
 800364e:	60e6      	str	r6, [r4, #12]
 8003650:	0020      	movs	r0, r4
 8003652:	f7ff ff79 	bl	8003548 <d_type>
 8003656:	2300      	movs	r3, #0
 8003658:	0002      	movs	r2, r0
 800365a:	2124      	movs	r1, #36	; 0x24
 800365c:	0020      	movs	r0, r4
 800365e:	f7fe fcdf 	bl	8002020 <d_make_comp>
 8003662:	0005      	movs	r5, r0
 8003664:	9001      	str	r0, [sp, #4]
 8003666:	e7e4      	b.n	8003632 <d_type+0xea>
 8003668:	3601      	adds	r6, #1
 800366a:	60e6      	str	r6, [r4, #12]
 800366c:	0020      	movs	r0, r4
 800366e:	f7ff ff6b 	bl	8003548 <d_type>
 8003672:	2300      	movs	r3, #0
 8003674:	0002      	movs	r2, r0
 8003676:	2126      	movs	r1, #38	; 0x26
 8003678:	0020      	movs	r0, r4
 800367a:	f7fe fcd1 	bl	8002020 <d_make_comp>
 800367e:	0005      	movs	r5, r0
 8003680:	9001      	str	r0, [sp, #4]
 8003682:	e7d6      	b.n	8003632 <d_type+0xea>
 8003684:	0020      	movs	r0, r4
 8003686:	f000 fc75 	bl	8003f74 <d_function_type>
 800368a:	0005      	movs	r5, r0
 800368c:	9001      	str	r0, [sp, #4]
 800368e:	e7d0      	b.n	8003632 <d_type+0xea>
 8003690:	1c73      	adds	r3, r6, #1
 8003692:	60e3      	str	r3, [r4, #12]
 8003694:	7873      	ldrb	r3, [r6, #1]
 8003696:	2b00      	cmp	r3, #0
 8003698:	d0bc      	beq.n	8003614 <d_type+0xcc>
 800369a:	1cb3      	adds	r3, r6, #2
 800369c:	60e3      	str	r3, [r4, #12]
 800369e:	7873      	ldrb	r3, [r6, #1]
 80036a0:	3b46      	subs	r3, #70	; 0x46
 80036a2:	061b      	lsls	r3, r3, #24
 80036a4:	0e1b      	lsrs	r3, r3, #24
 80036a6:	2b30      	cmp	r3, #48	; 0x30
 80036a8:	d8b4      	bhi.n	8003614 <d_type+0xcc>
 80036aa:	4a7c      	ldr	r2, [pc, #496]	; (800389c <d_type+0x354>)
 80036ac:	009b      	lsls	r3, r3, #2
 80036ae:	58d3      	ldr	r3, [r2, r3]
 80036b0:	469f      	mov	pc, r3
 80036b2:	3601      	adds	r6, #1
 80036b4:	60e6      	str	r6, [r4, #12]
 80036b6:	0020      	movs	r0, r4
 80036b8:	f7ff ff46 	bl	8003548 <d_type>
 80036bc:	2300      	movs	r3, #0
 80036be:	0002      	movs	r2, r0
 80036c0:	2125      	movs	r1, #37	; 0x25
 80036c2:	0020      	movs	r0, r4
 80036c4:	f7fe fcac 	bl	8002020 <d_make_comp>
 80036c8:	0005      	movs	r5, r0
 80036ca:	9001      	str	r0, [sp, #4]
 80036cc:	e7b1      	b.n	8003632 <d_type+0xea>
 80036ce:	3601      	adds	r6, #1
 80036d0:	60e6      	str	r6, [r4, #12]
 80036d2:	0020      	movs	r0, r4
 80036d4:	f7ff ff38 	bl	8003548 <d_type>
 80036d8:	2300      	movs	r3, #0
 80036da:	0002      	movs	r2, r0
 80036dc:	2123      	movs	r1, #35	; 0x23
 80036de:	0020      	movs	r0, r4
 80036e0:	f7fe fc9e 	bl	8002020 <d_make_comp>
 80036e4:	0005      	movs	r5, r0
 80036e6:	9001      	str	r0, [sp, #4]
 80036e8:	e7a3      	b.n	8003632 <d_type+0xea>
 80036ea:	3601      	adds	r6, #1
 80036ec:	60e6      	str	r6, [r4, #12]
 80036ee:	0020      	movs	r0, r4
 80036f0:	f7ff ff2a 	bl	8003548 <d_type>
 80036f4:	2300      	movs	r3, #0
 80036f6:	0002      	movs	r2, r0
 80036f8:	2122      	movs	r1, #34	; 0x22
 80036fa:	0020      	movs	r0, r4
 80036fc:	f7fe fc90 	bl	8002020 <d_make_comp>
 8003700:	0005      	movs	r5, r0
 8003702:	9001      	str	r0, [sp, #4]
 8003704:	e795      	b.n	8003632 <d_type+0xea>
 8003706:	3a61      	subs	r2, #97	; 0x61
 8003708:	0093      	lsls	r3, r2, #2
 800370a:	189a      	adds	r2, r3, r2
 800370c:	4b64      	ldr	r3, [pc, #400]	; (80038a0 <d_type+0x358>)
 800370e:	0092      	lsls	r2, r2, #2
 8003710:	18d2      	adds	r2, r2, r3
 8003712:	69a1      	ldr	r1, [r4, #24]
 8003714:	6963      	ldr	r3, [r4, #20]
 8003716:	428b      	cmp	r3, r1
 8003718:	db00      	blt.n	800371c <d_type+0x1d4>
 800371a:	e1ff      	b.n	8003b1c <d_type+0x5d4>
 800371c:	6921      	ldr	r1, [r4, #16]
 800371e:	468c      	mov	ip, r1
 8003720:	2100      	movs	r1, #0
 8003722:	011d      	lsls	r5, r3, #4
 8003724:	4465      	add	r5, ip
 8003726:	3301      	adds	r3, #1
 8003728:	6069      	str	r1, [r5, #4]
 800372a:	6163      	str	r3, [r4, #20]
 800372c:	2327      	movs	r3, #39	; 0x27
 800372e:	60aa      	str	r2, [r5, #8]
 8003730:	702b      	strb	r3, [r5, #0]
 8003732:	6853      	ldr	r3, [r2, #4]
 8003734:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8003736:	4694      	mov	ip, r2
 8003738:	3601      	adds	r6, #1
 800373a:	4463      	add	r3, ip
 800373c:	6323      	str	r3, [r4, #48]	; 0x30
 800373e:	60e6      	str	r6, [r4, #12]
 8003740:	e743      	b.n	80035ca <d_type+0x82>
 8003742:	3601      	adds	r6, #1
 8003744:	60e6      	str	r6, [r4, #12]
 8003746:	0020      	movs	r0, r4
 8003748:	f7fe fdb4 	bl	80022b4 <d_source_name>
 800374c:	68e3      	ldr	r3, [r4, #12]
 800374e:	9001      	str	r0, [sp, #4]
 8003750:	781a      	ldrb	r2, [r3, #0]
 8003752:	0005      	movs	r5, r0
 8003754:	2a49      	cmp	r2, #73	; 0x49
 8003756:	d100      	bne.n	800375a <d_type+0x212>
 8003758:	e1f2      	b.n	8003b40 <d_type+0x5f8>
 800375a:	0020      	movs	r0, r4
 800375c:	f7ff fef4 	bl	8003548 <d_type>
 8003760:	9b01      	ldr	r3, [sp, #4]
 8003762:	0002      	movs	r2, r0
 8003764:	2121      	movs	r1, #33	; 0x21
 8003766:	0020      	movs	r0, r4
 8003768:	f7fe fc5a 	bl	8002020 <d_make_comp>
 800376c:	0005      	movs	r5, r0
 800376e:	9001      	str	r0, [sp, #4]
 8003770:	e75f      	b.n	8003632 <d_type+0xea>
 8003772:	0020      	movs	r0, r4
 8003774:	f7fe fd7a 	bl	800226c <d_template_param>
 8003778:	68e6      	ldr	r6, [r4, #12]
 800377a:	9001      	str	r0, [sp, #4]
 800377c:	7833      	ldrb	r3, [r6, #0]
 800377e:	0005      	movs	r5, r0
 8003780:	2b49      	cmp	r3, #73	; 0x49
 8003782:	d000      	beq.n	8003786 <d_type+0x23e>
 8003784:	e755      	b.n	8003632 <d_type+0xea>
 8003786:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8003788:	2b00      	cmp	r3, #0
 800378a:	d000      	beq.n	800378e <d_type+0x246>
 800378c:	e1f2      	b.n	8003b74 <d_type+0x62c>
 800378e:	2800      	cmp	r0, #0
 8003790:	d100      	bne.n	8003794 <d_type+0x24c>
 8003792:	e73f      	b.n	8003614 <d_type+0xcc>
 8003794:	6a23      	ldr	r3, [r4, #32]
 8003796:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8003798:	4293      	cmp	r3, r2
 800379a:	db00      	blt.n	800379e <d_type+0x256>
 800379c:	e73a      	b.n	8003614 <d_type+0xcc>
 800379e:	69e1      	ldr	r1, [r4, #28]
 80037a0:	009a      	lsls	r2, r3, #2
 80037a2:	3301      	adds	r3, #1
 80037a4:	5050      	str	r0, [r2, r1]
 80037a6:	6223      	str	r3, [r4, #32]
 80037a8:	7832      	ldrb	r2, [r6, #0]
 80037aa:	3a49      	subs	r2, #73	; 0x49
 80037ac:	0612      	lsls	r2, r2, #24
 80037ae:	9d01      	ldr	r5, [sp, #4]
 80037b0:	0e12      	lsrs	r2, r2, #24
 80037b2:	2300      	movs	r3, #0
 80037b4:	2a01      	cmp	r2, #1
 80037b6:	d800      	bhi.n	80037ba <d_type+0x272>
 80037b8:	e1a9      	b.n	8003b0e <d_type+0x5c6>
 80037ba:	002a      	movs	r2, r5
 80037bc:	2104      	movs	r1, #4
 80037be:	0020      	movs	r0, r4
 80037c0:	f7fe fc2e 	bl	8002020 <d_make_comp>
 80037c4:	0005      	movs	r5, r0
 80037c6:	9001      	str	r0, [sp, #4]
 80037c8:	e733      	b.n	8003632 <d_type+0xea>
 80037ca:	0020      	movs	r0, r4
 80037cc:	f7ff fd18 	bl	8003200 <d_name>
 80037d0:	0005      	movs	r5, r0
 80037d2:	9001      	str	r0, [sp, #4]
 80037d4:	e72d      	b.n	8003632 <d_type+0xea>
 80037d6:	7873      	ldrb	r3, [r6, #1]
 80037d8:	001a      	movs	r2, r3
 80037da:	3a30      	subs	r2, #48	; 0x30
 80037dc:	0612      	lsls	r2, r2, #24
 80037de:	0e12      	lsrs	r2, r2, #24
 80037e0:	2a09      	cmp	r2, #9
 80037e2:	d907      	bls.n	80037f4 <d_type+0x2ac>
 80037e4:	2b5f      	cmp	r3, #95	; 0x5f
 80037e6:	d005      	beq.n	80037f4 <d_type+0x2ac>
 80037e8:	3b41      	subs	r3, #65	; 0x41
 80037ea:	061b      	lsls	r3, r3, #24
 80037ec:	0e1b      	lsrs	r3, r3, #24
 80037ee:	2b19      	cmp	r3, #25
 80037f0:	d900      	bls.n	80037f4 <d_type+0x2ac>
 80037f2:	e199      	b.n	8003b28 <d_type+0x5e0>
 80037f4:	2100      	movs	r1, #0
 80037f6:	0020      	movs	r0, r4
 80037f8:	f7fe fde6 	bl	80023c8 <d_substitution>
 80037fc:	68e3      	ldr	r3, [r4, #12]
 80037fe:	9001      	str	r0, [sp, #4]
 8003800:	781a      	ldrb	r2, [r3, #0]
 8003802:	0005      	movs	r5, r0
 8003804:	2a49      	cmp	r2, #73	; 0x49
 8003806:	d000      	beq.n	800380a <d_type+0x2c2>
 8003808:	e6df      	b.n	80035ca <d_type+0x82>
 800380a:	3301      	adds	r3, #1
 800380c:	60e3      	str	r3, [r4, #12]
 800380e:	0020      	movs	r0, r4
 8003810:	f7ff fc8a 	bl	8003128 <d_template_args_1>
 8003814:	0003      	movs	r3, r0
 8003816:	e7d0      	b.n	80037ba <d_type+0x272>
 8003818:	1c77      	adds	r7, r6, #1
 800381a:	60e7      	str	r7, [r4, #12]
 800381c:	7873      	ldrb	r3, [r6, #1]
 800381e:	2b5f      	cmp	r3, #95	; 0x5f
 8003820:	d100      	bne.n	8003824 <d_type+0x2dc>
 8003822:	e17f      	b.n	8003b24 <d_type+0x5dc>
 8003824:	3b30      	subs	r3, #48	; 0x30
 8003826:	061b      	lsls	r3, r3, #24
 8003828:	0e1b      	lsrs	r3, r3, #24
 800382a:	2b09      	cmp	r3, #9
 800382c:	d900      	bls.n	8003830 <d_type+0x2e8>
 800382e:	e194      	b.n	8003b5a <d_type+0x612>
 8003830:	003d      	movs	r5, r7
 8003832:	e000      	b.n	8003836 <d_type+0x2ee>
 8003834:	000d      	movs	r5, r1
 8003836:	1c69      	adds	r1, r5, #1
 8003838:	60e1      	str	r1, [r4, #12]
 800383a:	786b      	ldrb	r3, [r5, #1]
 800383c:	3b30      	subs	r3, #48	; 0x30
 800383e:	061b      	lsls	r3, r3, #24
 8003840:	0e1b      	lsrs	r3, r3, #24
 8003842:	2b09      	cmp	r3, #9
 8003844:	d9f6      	bls.n	8003834 <d_type+0x2ec>
 8003846:	6963      	ldr	r3, [r4, #20]
 8003848:	69a2      	ldr	r2, [r4, #24]
 800384a:	1bc8      	subs	r0, r1, r7
 800384c:	4293      	cmp	r3, r2
 800384e:	db00      	blt.n	8003852 <d_type+0x30a>
 8003850:	e6e0      	b.n	8003614 <d_type+0xcc>
 8003852:	6922      	ldr	r2, [r4, #16]
 8003854:	4694      	mov	ip, r2
 8003856:	2200      	movs	r2, #0
 8003858:	011e      	lsls	r6, r3, #4
 800385a:	4466      	add	r6, ip
 800385c:	3301      	adds	r3, #1
 800385e:	6072      	str	r2, [r6, #4]
 8003860:	6163      	str	r3, [r4, #20]
 8003862:	2800      	cmp	r0, #0
 8003864:	d100      	bne.n	8003868 <d_type+0x320>
 8003866:	e6d5      	b.n	8003614 <d_type+0xcc>
 8003868:	60b7      	str	r7, [r6, #8]
 800386a:	000f      	movs	r7, r1
 800386c:	6072      	str	r2, [r6, #4]
 800386e:	7032      	strb	r2, [r6, #0]
 8003870:	60f0      	str	r0, [r6, #12]
 8003872:	786b      	ldrb	r3, [r5, #1]
 8003874:	2b5f      	cmp	r3, #95	; 0x5f
 8003876:	d000      	beq.n	800387a <d_type+0x332>
 8003878:	e6cc      	b.n	8003614 <d_type+0xcc>
 800387a:	3701      	adds	r7, #1
 800387c:	60e7      	str	r7, [r4, #12]
 800387e:	0020      	movs	r0, r4
 8003880:	f7ff fe62 	bl	8003548 <d_type>
 8003884:	0032      	movs	r2, r6
 8003886:	0003      	movs	r3, r0
 8003888:	212a      	movs	r1, #42	; 0x2a
 800388a:	0020      	movs	r0, r4
 800388c:	f7fe fbc8 	bl	8002020 <d_make_comp>
 8003890:	0005      	movs	r5, r0
 8003892:	9001      	str	r0, [sp, #4]
 8003894:	e6cd      	b.n	8003632 <d_type+0xea>
 8003896:	46c0      	nop			; (mov r8, r8)
 8003898:	080205c8 	.word	0x080205c8
 800389c:	080206f4 	.word	0x080206f4
 80038a0:	0802111c 	.word	0x0802111c
 80038a4:	3601      	adds	r6, #1
 80038a6:	60e6      	str	r6, [r4, #12]
 80038a8:	0020      	movs	r0, r4
 80038aa:	f7ff fe4d 	bl	8003548 <d_type>
 80038ae:	1e05      	subs	r5, r0, #0
 80038b0:	d100      	bne.n	80038b4 <d_type+0x36c>
 80038b2:	e6af      	b.n	8003614 <d_type+0xcc>
 80038b4:	0020      	movs	r0, r4
 80038b6:	f7ff fe47 	bl	8003548 <d_type>
 80038ba:	1e03      	subs	r3, r0, #0
 80038bc:	d100      	bne.n	80038c0 <d_type+0x378>
 80038be:	e6a9      	b.n	8003614 <d_type+0xcc>
 80038c0:	002a      	movs	r2, r5
 80038c2:	212b      	movs	r1, #43	; 0x2b
 80038c4:	0020      	movs	r0, r4
 80038c6:	f7fe fbab 	bl	8002020 <d_make_comp>
 80038ca:	0005      	movs	r5, r0
 80038cc:	9001      	str	r0, [sp, #4]
 80038ce:	e6b0      	b.n	8003632 <d_type+0xea>
 80038d0:	78b3      	ldrb	r3, [r6, #2]
 80038d2:	2b5f      	cmp	r3, #95	; 0x5f
 80038d4:	d100      	bne.n	80038d8 <d_type+0x390>
 80038d6:	e179      	b.n	8003bcc <d_type+0x684>
 80038d8:	0020      	movs	r0, r4
 80038da:	f7fe fc91 	bl	8002200 <d_number_component>
 80038de:	0005      	movs	r5, r0
 80038e0:	2d00      	cmp	r5, #0
 80038e2:	d100      	bne.n	80038e6 <d_type+0x39e>
 80038e4:	e696      	b.n	8003614 <d_type+0xcc>
 80038e6:	68e3      	ldr	r3, [r4, #12]
 80038e8:	781a      	ldrb	r2, [r3, #0]
 80038ea:	2a5f      	cmp	r2, #95	; 0x5f
 80038ec:	d000      	beq.n	80038f0 <d_type+0x3a8>
 80038ee:	e691      	b.n	8003614 <d_type+0xcc>
 80038f0:	3301      	adds	r3, #1
 80038f2:	60e3      	str	r3, [r4, #12]
 80038f4:	0020      	movs	r0, r4
 80038f6:	f7ff fe27 	bl	8003548 <d_type>
 80038fa:	002a      	movs	r2, r5
 80038fc:	0003      	movs	r3, r0
 80038fe:	212d      	movs	r1, #45	; 0x2d
 8003900:	0020      	movs	r0, r4
 8003902:	f7fe fb8d 	bl	8002020 <d_make_comp>
 8003906:	0005      	movs	r5, r0
 8003908:	9001      	str	r0, [sp, #4]
 800390a:	e692      	b.n	8003632 <d_type+0xea>
 800390c:	6963      	ldr	r3, [r4, #20]
 800390e:	69a2      	ldr	r2, [r4, #24]
 8003910:	4293      	cmp	r3, r2
 8003912:	db00      	blt.n	8003916 <d_type+0x3ce>
 8003914:	e102      	b.n	8003b1c <d_type+0x5d4>
 8003916:	6922      	ldr	r2, [r4, #16]
 8003918:	4694      	mov	ip, r2
 800391a:	2200      	movs	r2, #0
 800391c:	011d      	lsls	r5, r3, #4
 800391e:	4465      	add	r5, ip
 8003920:	3301      	adds	r3, #1
 8003922:	606a      	str	r2, [r5, #4]
 8003924:	6163      	str	r3, [r4, #20]
 8003926:	2327      	movs	r3, #39	; 0x27
 8003928:	702b      	strb	r3, [r5, #0]
 800392a:	4bae      	ldr	r3, [pc, #696]	; (8003be4 <d_type+0x69c>)
 800392c:	60ab      	str	r3, [r5, #8]
 800392e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8003930:	3308      	adds	r3, #8
 8003932:	6323      	str	r3, [r4, #48]	; 0x30
 8003934:	e649      	b.n	80035ca <d_type+0x82>
 8003936:	6963      	ldr	r3, [r4, #20]
 8003938:	69a2      	ldr	r2, [r4, #24]
 800393a:	4293      	cmp	r3, r2
 800393c:	db00      	blt.n	8003940 <d_type+0x3f8>
 800393e:	e0ed      	b.n	8003b1c <d_type+0x5d4>
 8003940:	6922      	ldr	r2, [r4, #16]
 8003942:	4694      	mov	ip, r2
 8003944:	2200      	movs	r2, #0
 8003946:	011d      	lsls	r5, r3, #4
 8003948:	4465      	add	r5, ip
 800394a:	3301      	adds	r3, #1
 800394c:	606a      	str	r2, [r5, #4]
 800394e:	6163      	str	r3, [r4, #20]
 8003950:	2327      	movs	r3, #39	; 0x27
 8003952:	702b      	strb	r3, [r5, #0]
 8003954:	4ba4      	ldr	r3, [pc, #656]	; (8003be8 <d_type+0x6a0>)
 8003956:	60ab      	str	r3, [r5, #8]
 8003958:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800395a:	3304      	adds	r3, #4
 800395c:	6323      	str	r3, [r4, #48]	; 0x30
 800395e:	e634      	b.n	80035ca <d_type+0x82>
 8003960:	6963      	ldr	r3, [r4, #20]
 8003962:	69a2      	ldr	r2, [r4, #24]
 8003964:	4293      	cmp	r3, r2
 8003966:	db00      	blt.n	800396a <d_type+0x422>
 8003968:	e0d8      	b.n	8003b1c <d_type+0x5d4>
 800396a:	6922      	ldr	r2, [r4, #16]
 800396c:	4694      	mov	ip, r2
 800396e:	2200      	movs	r2, #0
 8003970:	011d      	lsls	r5, r3, #4
 8003972:	4465      	add	r5, ip
 8003974:	3301      	adds	r3, #1
 8003976:	606a      	str	r2, [r5, #4]
 8003978:	6163      	str	r3, [r4, #20]
 800397a:	2327      	movs	r3, #39	; 0x27
 800397c:	702b      	strb	r3, [r5, #0]
 800397e:	4b9b      	ldr	r3, [pc, #620]	; (8003bec <d_type+0x6a4>)
 8003980:	60ab      	str	r3, [r5, #8]
 8003982:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8003984:	3309      	adds	r3, #9
 8003986:	6323      	str	r3, [r4, #48]	; 0x30
 8003988:	e61f      	b.n	80035ca <d_type+0x82>
 800398a:	6963      	ldr	r3, [r4, #20]
 800398c:	69a2      	ldr	r2, [r4, #24]
 800398e:	4293      	cmp	r3, r2
 8003990:	db00      	blt.n	8003994 <d_type+0x44c>
 8003992:	e0c3      	b.n	8003b1c <d_type+0x5d4>
 8003994:	6922      	ldr	r2, [r4, #16]
 8003996:	4694      	mov	ip, r2
 8003998:	2200      	movs	r2, #0
 800399a:	011d      	lsls	r5, r3, #4
 800399c:	4465      	add	r5, ip
 800399e:	3301      	adds	r3, #1
 80039a0:	606a      	str	r2, [r5, #4]
 80039a2:	6163      	str	r3, [r4, #20]
 80039a4:	2327      	movs	r3, #39	; 0x27
 80039a6:	702b      	strb	r3, [r5, #0]
 80039a8:	4b91      	ldr	r3, [pc, #580]	; (8003bf0 <d_type+0x6a8>)
 80039aa:	60ab      	str	r3, [r5, #8]
 80039ac:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80039ae:	330a      	adds	r3, #10
 80039b0:	6323      	str	r3, [r4, #48]	; 0x30
 80039b2:	e60a      	b.n	80035ca <d_type+0x82>
 80039b4:	6963      	ldr	r3, [r4, #20]
 80039b6:	69a2      	ldr	r2, [r4, #24]
 80039b8:	4293      	cmp	r3, r2
 80039ba:	db00      	blt.n	80039be <d_type+0x476>
 80039bc:	e0ae      	b.n	8003b1c <d_type+0x5d4>
 80039be:	6922      	ldr	r2, [r4, #16]
 80039c0:	4694      	mov	ip, r2
 80039c2:	2200      	movs	r2, #0
 80039c4:	011d      	lsls	r5, r3, #4
 80039c6:	4465      	add	r5, ip
 80039c8:	3301      	adds	r3, #1
 80039ca:	606a      	str	r2, [r5, #4]
 80039cc:	6163      	str	r3, [r4, #20]
 80039ce:	2327      	movs	r3, #39	; 0x27
 80039d0:	702b      	strb	r3, [r5, #0]
 80039d2:	4b88      	ldr	r3, [pc, #544]	; (8003bf4 <d_type+0x6ac>)
 80039d4:	60ab      	str	r3, [r5, #8]
 80039d6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80039d8:	3309      	adds	r3, #9
 80039da:	6323      	str	r3, [r4, #48]	; 0x30
 80039dc:	e5f5      	b.n	80035ca <d_type+0x82>
 80039de:	6963      	ldr	r3, [r4, #20]
 80039e0:	69a2      	ldr	r2, [r4, #24]
 80039e2:	2500      	movs	r5, #0
 80039e4:	4293      	cmp	r3, r2
 80039e6:	db00      	blt.n	80039ea <d_type+0x4a2>
 80039e8:	e5ef      	b.n	80035ca <d_type+0x82>
 80039ea:	6922      	ldr	r2, [r4, #16]
 80039ec:	011d      	lsls	r5, r3, #4
 80039ee:	4694      	mov	ip, r2
 80039f0:	3301      	adds	r3, #1
 80039f2:	6163      	str	r3, [r4, #20]
 80039f4:	2300      	movs	r3, #0
 80039f6:	4465      	add	r5, ip
 80039f8:	606b      	str	r3, [r5, #4]
 80039fa:	702b      	strb	r3, [r5, #0]
 80039fc:	4b7e      	ldr	r3, [pc, #504]	; (8003bf8 <d_type+0x6b0>)
 80039fe:	60ab      	str	r3, [r5, #8]
 8003a00:	230e      	movs	r3, #14
 8003a02:	60eb      	str	r3, [r5, #12]
 8003a04:	e5e1      	b.n	80035ca <d_type+0x82>
 8003a06:	6963      	ldr	r3, [r4, #20]
 8003a08:	69a2      	ldr	r2, [r4, #24]
 8003a0a:	2500      	movs	r5, #0
 8003a0c:	4293      	cmp	r3, r2
 8003a0e:	db00      	blt.n	8003a12 <d_type+0x4ca>
 8003a10:	e5db      	b.n	80035ca <d_type+0x82>
 8003a12:	6922      	ldr	r2, [r4, #16]
 8003a14:	011d      	lsls	r5, r3, #4
 8003a16:	4694      	mov	ip, r2
 8003a18:	3301      	adds	r3, #1
 8003a1a:	6163      	str	r3, [r4, #20]
 8003a1c:	2300      	movs	r3, #0
 8003a1e:	4465      	add	r5, ip
 8003a20:	606b      	str	r3, [r5, #4]
 8003a22:	702b      	strb	r3, [r5, #0]
 8003a24:	4b75      	ldr	r3, [pc, #468]	; (8003bfc <d_type+0x6b4>)
 8003a26:	60ab      	str	r3, [r5, #8]
 8003a28:	2304      	movs	r3, #4
 8003a2a:	60eb      	str	r3, [r5, #12]
 8003a2c:	e5cd      	b.n	80035ca <d_type+0x82>
 8003a2e:	6963      	ldr	r3, [r4, #20]
 8003a30:	69a2      	ldr	r2, [r4, #24]
 8003a32:	4293      	cmp	r3, r2
 8003a34:	db00      	blt.n	8003a38 <d_type+0x4f0>
 8003a36:	e0b5      	b.n	8003ba4 <d_type+0x65c>
 8003a38:	6922      	ldr	r2, [r4, #16]
 8003a3a:	4694      	mov	ip, r2
 8003a3c:	2200      	movs	r2, #0
 8003a3e:	011d      	lsls	r5, r3, #4
 8003a40:	4465      	add	r5, ip
 8003a42:	3301      	adds	r3, #1
 8003a44:	606a      	str	r2, [r5, #4]
 8003a46:	6163      	str	r3, [r4, #20]
 8003a48:	232c      	movs	r3, #44	; 0x2c
 8003a4a:	2109      	movs	r1, #9
 8003a4c:	9501      	str	r5, [sp, #4]
 8003a4e:	702b      	strb	r3, [r5, #0]
 8003a50:	78b3      	ldrb	r3, [r6, #2]
 8003a52:	3b30      	subs	r3, #48	; 0x30
 8003a54:	061b      	lsls	r3, r3, #24
 8003a56:	0e1b      	lsrs	r3, r3, #24
 8003a58:	4299      	cmp	r1, r3
 8003a5a:	4152      	adcs	r2, r2
 8003a5c:	81aa      	strh	r2, [r5, #12]
 8003a5e:	2b09      	cmp	r3, #9
 8003a60:	d804      	bhi.n	8003a6c <d_type+0x524>
 8003a62:	0020      	movs	r0, r4
 8003a64:	300c      	adds	r0, #12
 8003a66:	f7fe fb97 	bl	8002198 <d_number.isra.1>
 8003a6a:	9d01      	ldr	r5, [sp, #4]
 8003a6c:	0020      	movs	r0, r4
 8003a6e:	f7ff fd6b 	bl	8003548 <d_type>
 8003a72:	9b01      	ldr	r3, [sp, #4]
 8003a74:	60a8      	str	r0, [r5, #8]
 8003a76:	689b      	ldr	r3, [r3, #8]
 8003a78:	2b00      	cmp	r3, #0
 8003a7a:	d100      	bne.n	8003a7e <d_type+0x536>
 8003a7c:	e5ca      	b.n	8003614 <d_type+0xcc>
 8003a7e:	0020      	movs	r0, r4
 8003a80:	300c      	adds	r0, #12
 8003a82:	f7fe fb89 	bl	8002198 <d_number.isra.1>
 8003a86:	68e2      	ldr	r2, [r4, #12]
 8003a88:	7811      	ldrb	r1, [r2, #0]
 8003a8a:	2300      	movs	r3, #0
 8003a8c:	2900      	cmp	r1, #0
 8003a8e:	d007      	beq.n	8003aa0 <d_type+0x558>
 8003a90:	1c53      	adds	r3, r2, #1
 8003a92:	60e3      	str	r3, [r4, #12]
 8003a94:	7813      	ldrb	r3, [r2, #0]
 8003a96:	3b73      	subs	r3, #115	; 0x73
 8003a98:	425a      	negs	r2, r3
 8003a9a:	4153      	adcs	r3, r2
 8003a9c:	041b      	lsls	r3, r3, #16
 8003a9e:	141b      	asrs	r3, r3, #16
 8003aa0:	9d01      	ldr	r5, [sp, #4]
 8003aa2:	81eb      	strh	r3, [r5, #14]
 8003aa4:	e591      	b.n	80035ca <d_type+0x82>
 8003aa6:	6963      	ldr	r3, [r4, #20]
 8003aa8:	69a2      	ldr	r2, [r4, #24]
 8003aaa:	4293      	cmp	r3, r2
 8003aac:	da36      	bge.n	8003b1c <d_type+0x5d4>
 8003aae:	6922      	ldr	r2, [r4, #16]
 8003ab0:	4694      	mov	ip, r2
 8003ab2:	2200      	movs	r2, #0
 8003ab4:	011d      	lsls	r5, r3, #4
 8003ab6:	4465      	add	r5, ip
 8003ab8:	3301      	adds	r3, #1
 8003aba:	606a      	str	r2, [r5, #4]
 8003abc:	6163      	str	r3, [r4, #20]
 8003abe:	2327      	movs	r3, #39	; 0x27
 8003ac0:	702b      	strb	r3, [r5, #0]
 8003ac2:	4b4f      	ldr	r3, [pc, #316]	; (8003c00 <d_type+0x6b8>)
 8003ac4:	60ab      	str	r3, [r5, #8]
 8003ac6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8003ac8:	3311      	adds	r3, #17
 8003aca:	6323      	str	r3, [r4, #48]	; 0x30
 8003acc:	e57d      	b.n	80035ca <d_type+0x82>
 8003ace:	6963      	ldr	r3, [r4, #20]
 8003ad0:	69a2      	ldr	r2, [r4, #24]
 8003ad2:	4293      	cmp	r3, r2
 8003ad4:	da22      	bge.n	8003b1c <d_type+0x5d4>
 8003ad6:	6922      	ldr	r2, [r4, #16]
 8003ad8:	4694      	mov	ip, r2
 8003ada:	2200      	movs	r2, #0
 8003adc:	011d      	lsls	r5, r3, #4
 8003ade:	4465      	add	r5, ip
 8003ae0:	3301      	adds	r3, #1
 8003ae2:	606a      	str	r2, [r5, #4]
 8003ae4:	6163      	str	r3, [r4, #20]
 8003ae6:	2327      	movs	r3, #39	; 0x27
 8003ae8:	702b      	strb	r3, [r5, #0]
 8003aea:	4b46      	ldr	r3, [pc, #280]	; (8003c04 <d_type+0x6bc>)
 8003aec:	60ab      	str	r3, [r5, #8]
 8003aee:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8003af0:	3308      	adds	r3, #8
 8003af2:	6323      	str	r3, [r4, #48]	; 0x30
 8003af4:	e569      	b.n	80035ca <d_type+0x82>
 8003af6:	0020      	movs	r0, r4
 8003af8:	f7ff fd26 	bl	8003548 <d_type>
 8003afc:	2300      	movs	r3, #0
 8003afe:	0002      	movs	r2, r0
 8003b00:	214a      	movs	r1, #74	; 0x4a
 8003b02:	0020      	movs	r0, r4
 8003b04:	f7fe fa8c 	bl	8002020 <d_make_comp>
 8003b08:	0005      	movs	r5, r0
 8003b0a:	9001      	str	r0, [sp, #4]
 8003b0c:	e591      	b.n	8003632 <d_type+0xea>
 8003b0e:	3601      	adds	r6, #1
 8003b10:	60e6      	str	r6, [r4, #12]
 8003b12:	0020      	movs	r0, r4
 8003b14:	f7ff fb08 	bl	8003128 <d_template_args_1>
 8003b18:	0003      	movs	r3, r0
 8003b1a:	e64e      	b.n	80037ba <d_type+0x272>
 8003b1c:	2300      	movs	r3, #0
 8003b1e:	9301      	str	r3, [sp, #4]
 8003b20:	689b      	ldr	r3, [r3, #8]
 8003b22:	deff      	udf	#255	; 0xff
 8003b24:	2600      	movs	r6, #0
 8003b26:	e6a8      	b.n	800387a <d_type+0x332>
 8003b28:	0020      	movs	r0, r4
 8003b2a:	f7ff fb69 	bl	8003200 <d_name>
 8003b2e:	1e05      	subs	r5, r0, #0
 8003b30:	9001      	str	r0, [sp, #4]
 8003b32:	d100      	bne.n	8003b36 <d_type+0x5ee>
 8003b34:	e56e      	b.n	8003614 <d_type+0xcc>
 8003b36:	7803      	ldrb	r3, [r0, #0]
 8003b38:	2b18      	cmp	r3, #24
 8003b3a:	d000      	beq.n	8003b3e <d_type+0x5f6>
 8003b3c:	e57b      	b.n	8003636 <d_type+0xee>
 8003b3e:	e544      	b.n	80035ca <d_type+0x82>
 8003b40:	3301      	adds	r3, #1
 8003b42:	60e3      	str	r3, [r4, #12]
 8003b44:	0020      	movs	r0, r4
 8003b46:	f7ff faef 	bl	8003128 <d_template_args_1>
 8003b4a:	002a      	movs	r2, r5
 8003b4c:	0003      	movs	r3, r0
 8003b4e:	2104      	movs	r1, #4
 8003b50:	0020      	movs	r0, r4
 8003b52:	f7fe fa65 	bl	8002020 <d_make_comp>
 8003b56:	9001      	str	r0, [sp, #4]
 8003b58:	e5ff      	b.n	800375a <d_type+0x212>
 8003b5a:	2301      	movs	r3, #1
 8003b5c:	6b65      	ldr	r5, [r4, #52]	; 0x34
 8003b5e:	0020      	movs	r0, r4
 8003b60:	6363      	str	r3, [r4, #52]	; 0x34
 8003b62:	f7ff f8c1 	bl	8002ce8 <d_expression_1>
 8003b66:	6365      	str	r5, [r4, #52]	; 0x34
 8003b68:	1e06      	subs	r6, r0, #0
 8003b6a:	d100      	bne.n	8003b6e <d_type+0x626>
 8003b6c:	e552      	b.n	8003614 <d_type+0xcc>
 8003b6e:	68e7      	ldr	r7, [r4, #12]
 8003b70:	783b      	ldrb	r3, [r7, #0]
 8003b72:	e67f      	b.n	8003874 <d_type+0x32c>
 8003b74:	6963      	ldr	r3, [r4, #20]
 8003b76:	4699      	mov	r9, r3
 8003b78:	6a23      	ldr	r3, [r4, #32]
 8003b7a:	4698      	mov	r8, r3
 8003b7c:	1c73      	adds	r3, r6, #1
 8003b7e:	60e3      	str	r3, [r4, #12]
 8003b80:	0020      	movs	r0, r4
 8003b82:	6aa7      	ldr	r7, [r4, #40]	; 0x28
 8003b84:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8003b86:	f7ff facf 	bl	8003128 <d_template_args_1>
 8003b8a:	68e3      	ldr	r3, [r4, #12]
 8003b8c:	781a      	ldrb	r2, [r3, #0]
 8003b8e:	2a49      	cmp	r2, #73	; 0x49
 8003b90:	d00b      	beq.n	8003baa <d_type+0x662>
 8003b92:	464b      	mov	r3, r9
 8003b94:	6163      	str	r3, [r4, #20]
 8003b96:	4643      	mov	r3, r8
 8003b98:	6325      	str	r5, [r4, #48]	; 0x30
 8003b9a:	60e6      	str	r6, [r4, #12]
 8003b9c:	6223      	str	r3, [r4, #32]
 8003b9e:	62a7      	str	r7, [r4, #40]	; 0x28
 8003ba0:	9d01      	ldr	r5, [sp, #4]
 8003ba2:	e546      	b.n	8003632 <d_type+0xea>
 8003ba4:	2300      	movs	r3, #0
 8003ba6:	701b      	strb	r3, [r3, #0]
 8003ba8:	deff      	udf	#255	; 0xff
 8003baa:	9b01      	ldr	r3, [sp, #4]
 8003bac:	2b00      	cmp	r3, #0
 8003bae:	d100      	bne.n	8003bb2 <d_type+0x66a>
 8003bb0:	e530      	b.n	8003614 <d_type+0xcc>
 8003bb2:	6a22      	ldr	r2, [r4, #32]
 8003bb4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8003bb6:	428a      	cmp	r2, r1
 8003bb8:	db00      	blt.n	8003bbc <d_type+0x674>
 8003bba:	e52b      	b.n	8003614 <d_type+0xcc>
 8003bbc:	69e5      	ldr	r5, [r4, #28]
 8003bbe:	0091      	lsls	r1, r2, #2
 8003bc0:	514b      	str	r3, [r1, r5]
 8003bc2:	3201      	adds	r2, #1
 8003bc4:	6222      	str	r2, [r4, #32]
 8003bc6:	0003      	movs	r3, r0
 8003bc8:	9a01      	ldr	r2, [sp, #4]
 8003bca:	e5f7      	b.n	80037bc <d_type+0x274>
 8003bcc:	3603      	adds	r6, #3
 8003bce:	3b5e      	subs	r3, #94	; 0x5e
 8003bd0:	60e6      	str	r6, [r4, #12]
 8003bd2:	0020      	movs	r0, r4
 8003bd4:	6b66      	ldr	r6, [r4, #52]	; 0x34
 8003bd6:	6363      	str	r3, [r4, #52]	; 0x34
 8003bd8:	f7ff f886 	bl	8002ce8 <d_expression_1>
 8003bdc:	6366      	str	r6, [r4, #52]	; 0x34
 8003bde:	0005      	movs	r5, r0
 8003be0:	e67e      	b.n	80038e0 <d_type+0x398>
 8003be2:	46c0      	nop			; (mov r8, r8)
 8003be4:	08021374 	.word	0x08021374
 8003be8:	08021360 	.word	0x08021360
 8003bec:	08021324 	.word	0x08021324
 8003bf0:	0802134c 	.word	0x0802134c
 8003bf4:	08021338 	.word	0x08021338
 8003bf8:	08026dc8 	.word	0x08026dc8
 8003bfc:	08026dc0 	.word	0x08026dc0
 8003c00:	0802139c 	.word	0x0802139c
 8003c04:	08021388 	.word	0x08021388

08003c08 <d_operator_name>:
 8003c08:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003c0a:	46c6      	mov	lr, r8
 8003c0c:	b500      	push	{lr}
 8003c0e:	68c3      	ldr	r3, [r0, #12]
 8003c10:	781a      	ldrb	r2, [r3, #0]
 8003c12:	0004      	movs	r4, r0
 8003c14:	2a00      	cmp	r2, #0
 8003c16:	d026      	beq.n	8003c66 <d_operator_name+0x5e>
 8003c18:	1c5a      	adds	r2, r3, #1
 8003c1a:	60c2      	str	r2, [r0, #12]
 8003c1c:	785a      	ldrb	r2, [r3, #1]
 8003c1e:	781e      	ldrb	r6, [r3, #0]
 8003c20:	2a00      	cmp	r2, #0
 8003c22:	d122      	bne.n	8003c6a <d_operator_name+0x62>
 8003c24:	2300      	movs	r3, #0
 8003c26:	469c      	mov	ip, r3
 8003c28:	4b38      	ldr	r3, [pc, #224]	; (8003d0c <d_operator_name+0x104>)
 8003c2a:	2543      	movs	r5, #67	; 0x43
 8003c2c:	2100      	movs	r1, #0
 8003c2e:	4698      	mov	r8, r3
 8003c30:	1a6a      	subs	r2, r5, r1
 8003c32:	0fd3      	lsrs	r3, r2, #31
 8003c34:	189b      	adds	r3, r3, r2
 8003c36:	105b      	asrs	r3, r3, #1
 8003c38:	185b      	adds	r3, r3, r1
 8003c3a:	011a      	lsls	r2, r3, #4
 8003c3c:	4442      	add	r2, r8
 8003c3e:	6817      	ldr	r7, [r2, #0]
 8003c40:	7838      	ldrb	r0, [r7, #0]
 8003c42:	42b0      	cmp	r0, r6
 8003c44:	d009      	beq.n	8003c5a <d_operator_name+0x52>
 8003c46:	d90c      	bls.n	8003c62 <d_operator_name+0x5a>
 8003c48:	001d      	movs	r5, r3
 8003c4a:	42a9      	cmp	r1, r5
 8003c4c:	d1f0      	bne.n	8003c30 <d_operator_name+0x28>
 8003c4e:	2000      	movs	r0, #0
 8003c50:	bc04      	pop	{r2}
 8003c52:	4690      	mov	r8, r2
 8003c54:	bcf0      	pop	{r4, r5, r6, r7}
 8003c56:	bc02      	pop	{r1}
 8003c58:	4708      	bx	r1
 8003c5a:	7878      	ldrb	r0, [r7, #1]
 8003c5c:	4560      	cmp	r0, ip
 8003c5e:	d044      	beq.n	8003cea <d_operator_name+0xe2>
 8003c60:	d8f2      	bhi.n	8003c48 <d_operator_name+0x40>
 8003c62:	1c59      	adds	r1, r3, #1
 8003c64:	e7f1      	b.n	8003c4a <d_operator_name+0x42>
 8003c66:	2600      	movs	r6, #0
 8003c68:	e7dc      	b.n	8003c24 <d_operator_name+0x1c>
 8003c6a:	1c9a      	adds	r2, r3, #2
 8003c6c:	60c2      	str	r2, [r0, #12]
 8003c6e:	785b      	ldrb	r3, [r3, #1]
 8003c70:	469c      	mov	ip, r3
 8003c72:	2e76      	cmp	r6, #118	; 0x76
 8003c74:	d11c      	bne.n	8003cb0 <d_operator_name+0xa8>
 8003c76:	001d      	movs	r5, r3
 8003c78:	3d30      	subs	r5, #48	; 0x30
 8003c7a:	062b      	lsls	r3, r5, #24
 8003c7c:	0e1b      	lsrs	r3, r3, #24
 8003c7e:	2b09      	cmp	r3, #9
 8003c80:	d8d2      	bhi.n	8003c28 <d_operator_name+0x20>
 8003c82:	f7fe fb17 	bl	80022b4 <d_source_name>
 8003c86:	6963      	ldr	r3, [r4, #20]
 8003c88:	69a1      	ldr	r1, [r4, #24]
 8003c8a:	0002      	movs	r2, r0
 8003c8c:	428b      	cmp	r3, r1
 8003c8e:	dade      	bge.n	8003c4e <d_operator_name+0x46>
 8003c90:	6921      	ldr	r1, [r4, #16]
 8003c92:	468c      	mov	ip, r1
 8003c94:	2100      	movs	r1, #0
 8003c96:	0118      	lsls	r0, r3, #4
 8003c98:	4460      	add	r0, ip
 8003c9a:	3301      	adds	r3, #1
 8003c9c:	6041      	str	r1, [r0, #4]
 8003c9e:	6163      	str	r3, [r4, #20]
 8003ca0:	2a00      	cmp	r2, #0
 8003ca2:	d0d4      	beq.n	8003c4e <d_operator_name+0x46>
 8003ca4:	2332      	movs	r3, #50	; 0x32
 8003ca6:	6041      	str	r1, [r0, #4]
 8003ca8:	7003      	strb	r3, [r0, #0]
 8003caa:	6085      	str	r5, [r0, #8]
 8003cac:	60c2      	str	r2, [r0, #12]
 8003cae:	e7cf      	b.n	8003c50 <d_operator_name+0x48>
 8003cb0:	2e63      	cmp	r6, #99	; 0x63
 8003cb2:	d1b9      	bne.n	8003c28 <d_operator_name+0x20>
 8003cb4:	2b76      	cmp	r3, #118	; 0x76
 8003cb6:	d1b7      	bne.n	8003c28 <d_operator_name+0x20>
 8003cb8:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8003cba:	425a      	negs	r2, r3
 8003cbc:	4153      	adcs	r3, r2
 8003cbe:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8003cc0:	6383      	str	r3, [r0, #56]	; 0x38
 8003cc2:	f7ff fc41 	bl	8003548 <d_type>
 8003cc6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8003cc8:	0002      	movs	r2, r0
 8003cca:	2b00      	cmp	r3, #0
 8003ccc:	d006      	beq.n	8003cdc <d_operator_name+0xd4>
 8003cce:	2300      	movs	r3, #0
 8003cd0:	2134      	movs	r1, #52	; 0x34
 8003cd2:	0020      	movs	r0, r4
 8003cd4:	f7fe f9a4 	bl	8002020 <d_make_comp>
 8003cd8:	63a5      	str	r5, [r4, #56]	; 0x38
 8003cda:	e7b9      	b.n	8003c50 <d_operator_name+0x48>
 8003cdc:	2300      	movs	r3, #0
 8003cde:	2133      	movs	r1, #51	; 0x33
 8003ce0:	0020      	movs	r0, r4
 8003ce2:	f7fe f99d 	bl	8002020 <d_make_comp>
 8003ce6:	63a5      	str	r5, [r4, #56]	; 0x38
 8003ce8:	e7b2      	b.n	8003c50 <d_operator_name+0x48>
 8003cea:	6963      	ldr	r3, [r4, #20]
 8003cec:	69a1      	ldr	r1, [r4, #24]
 8003cee:	428b      	cmp	r3, r1
 8003cf0:	daad      	bge.n	8003c4e <d_operator_name+0x46>
 8003cf2:	6921      	ldr	r1, [r4, #16]
 8003cf4:	468c      	mov	ip, r1
 8003cf6:	2100      	movs	r1, #0
 8003cf8:	0118      	lsls	r0, r3, #4
 8003cfa:	4460      	add	r0, ip
 8003cfc:	3301      	adds	r3, #1
 8003cfe:	6041      	str	r1, [r0, #4]
 8003d00:	6163      	str	r3, [r4, #20]
 8003d02:	2331      	movs	r3, #49	; 0x31
 8003d04:	6082      	str	r2, [r0, #8]
 8003d06:	7003      	strb	r3, [r0, #0]
 8003d08:	e7a2      	b.n	8003c50 <d_operator_name+0x48>
 8003d0a:	46c0      	nop			; (mov r8, r8)
 8003d0c:	08020cdc 	.word	0x08020cdc

08003d10 <d_parmlist>:
 8003d10:	2300      	movs	r3, #0
 8003d12:	b570      	push	{r4, r5, r6, lr}
 8003d14:	0004      	movs	r4, r0
 8003d16:	68c0      	ldr	r0, [r0, #12]
 8003d18:	b082      	sub	sp, #8
 8003d1a:	9301      	str	r3, [sp, #4]
 8003d1c:	7803      	ldrb	r3, [r0, #0]
 8003d1e:	001a      	movs	r2, r3
 8003d20:	3a45      	subs	r2, #69	; 0x45
 8003d22:	4251      	negs	r1, r2
 8003d24:	414a      	adcs	r2, r1
 8003d26:	4259      	negs	r1, r3
 8003d28:	4159      	adcs	r1, r3
 8003d2a:	430a      	orrs	r2, r1
 8003d2c:	d126      	bne.n	8003d7c <d_parmlist+0x6c>
 8003d2e:	ad01      	add	r5, sp, #4
 8003d30:	2b2e      	cmp	r3, #46	; 0x2e
 8003d32:	d117      	bne.n	8003d64 <d_parmlist+0x54>
 8003d34:	e022      	b.n	8003d7c <d_parmlist+0x6c>
 8003d36:	0002      	movs	r2, r0
 8003d38:	2300      	movs	r3, #0
 8003d3a:	212e      	movs	r1, #46	; 0x2e
 8003d3c:	0020      	movs	r0, r4
 8003d3e:	f7fe f96f 	bl	8002020 <d_make_comp>
 8003d42:	6028      	str	r0, [r5, #0]
 8003d44:	2800      	cmp	r0, #0
 8003d46:	d019      	beq.n	8003d7c <d_parmlist+0x6c>
 8003d48:	300c      	adds	r0, #12
 8003d4a:	0005      	movs	r5, r0
 8003d4c:	68e0      	ldr	r0, [r4, #12]
 8003d4e:	7803      	ldrb	r3, [r0, #0]
 8003d50:	425a      	negs	r2, r3
 8003d52:	415a      	adcs	r2, r3
 8003d54:	0019      	movs	r1, r3
 8003d56:	3945      	subs	r1, #69	; 0x45
 8003d58:	424e      	negs	r6, r1
 8003d5a:	4171      	adcs	r1, r6
 8003d5c:	430a      	orrs	r2, r1
 8003d5e:	d112      	bne.n	8003d86 <d_parmlist+0x76>
 8003d60:	2b2e      	cmp	r3, #46	; 0x2e
 8003d62:	d010      	beq.n	8003d86 <d_parmlist+0x76>
 8003d64:	2b52      	cmp	r3, #82	; 0x52
 8003d66:	d001      	beq.n	8003d6c <d_parmlist+0x5c>
 8003d68:	2b4f      	cmp	r3, #79	; 0x4f
 8003d6a:	d102      	bne.n	8003d72 <d_parmlist+0x62>
 8003d6c:	7843      	ldrb	r3, [r0, #1]
 8003d6e:	2b45      	cmp	r3, #69	; 0x45
 8003d70:	d009      	beq.n	8003d86 <d_parmlist+0x76>
 8003d72:	0020      	movs	r0, r4
 8003d74:	f7ff fbe8 	bl	8003548 <d_type>
 8003d78:	2800      	cmp	r0, #0
 8003d7a:	d1dc      	bne.n	8003d36 <d_parmlist+0x26>
 8003d7c:	2000      	movs	r0, #0
 8003d7e:	b002      	add	sp, #8
 8003d80:	bc70      	pop	{r4, r5, r6}
 8003d82:	bc02      	pop	{r1}
 8003d84:	4708      	bx	r1
 8003d86:	9801      	ldr	r0, [sp, #4]
 8003d88:	2800      	cmp	r0, #0
 8003d8a:	d0f7      	beq.n	8003d7c <d_parmlist+0x6c>
 8003d8c:	68c3      	ldr	r3, [r0, #12]
 8003d8e:	2b00      	cmp	r3, #0
 8003d90:	d1f5      	bne.n	8003d7e <d_parmlist+0x6e>
 8003d92:	6882      	ldr	r2, [r0, #8]
 8003d94:	7811      	ldrb	r1, [r2, #0]
 8003d96:	2927      	cmp	r1, #39	; 0x27
 8003d98:	d1f1      	bne.n	8003d7e <d_parmlist+0x6e>
 8003d9a:	6892      	ldr	r2, [r2, #8]
 8003d9c:	7c11      	ldrb	r1, [r2, #16]
 8003d9e:	2909      	cmp	r1, #9
 8003da0:	d1ed      	bne.n	8003d7e <d_parmlist+0x6e>
 8003da2:	6852      	ldr	r2, [r2, #4]
 8003da4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8003da6:	1a8a      	subs	r2, r1, r2
 8003da8:	6322      	str	r2, [r4, #48]	; 0x30
 8003daa:	6083      	str	r3, [r0, #8]
 8003dac:	e7e7      	b.n	8003d7e <d_parmlist+0x6e>
 8003dae:	46c0      	nop			; (mov r8, r8)

08003db0 <d_cv_qualifiers>:
 8003db0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003db2:	464e      	mov	r6, r9
 8003db4:	46de      	mov	lr, fp
 8003db6:	4645      	mov	r5, r8
 8003db8:	4657      	mov	r7, sl
 8003dba:	b5e0      	push	{r5, r6, r7, lr}
 8003dbc:	68c5      	ldr	r5, [r0, #12]
 8003dbe:	b083      	sub	sp, #12
 8003dc0:	0004      	movs	r4, r0
 8003dc2:	4689      	mov	r9, r1
 8003dc4:	4693      	mov	fp, r2
 8003dc6:	782e      	ldrb	r6, [r5, #0]
 8003dc8:	231b      	movs	r3, #27
 8003dca:	2a00      	cmp	r2, #0
 8003dcc:	d000      	beq.n	8003dd0 <d_cv_qualifiers+0x20>
 8003dce:	231e      	movs	r3, #30
 8003dd0:	465a      	mov	r2, fp
 8003dd2:	061b      	lsls	r3, r3, #24
 8003dd4:	0e1b      	lsrs	r3, r3, #24
 8003dd6:	9301      	str	r3, [sp, #4]
 8003dd8:	231a      	movs	r3, #26
 8003dda:	2a00      	cmp	r2, #0
 8003ddc:	d000      	beq.n	8003de0 <d_cv_qualifiers+0x30>
 8003dde:	231d      	movs	r3, #29
 8003de0:	465a      	mov	r2, fp
 8003de2:	061b      	lsls	r3, r3, #24
 8003de4:	0e1b      	lsrs	r3, r3, #24
 8003de6:	469a      	mov	sl, r3
 8003de8:	2319      	movs	r3, #25
 8003dea:	2a00      	cmp	r2, #0
 8003dec:	d000      	beq.n	8003df0 <d_cv_qualifiers+0x40>
 8003dee:	231c      	movs	r3, #28
 8003df0:	061b      	lsls	r3, r3, #24
 8003df2:	0e1b      	lsrs	r3, r3, #24
 8003df4:	0028      	movs	r0, r5
 8003df6:	4698      	mov	r8, r3
 8003df8:	464f      	mov	r7, r9
 8003dfa:	f7fe fbd3 	bl	80025a4 <next_is_type_qual.isra.3>
 8003dfe:	2800      	cmp	r0, #0
 8003e00:	d051      	beq.n	8003ea6 <d_cv_qualifiers+0xf6>
 8003e02:	1c6b      	adds	r3, r5, #1
 8003e04:	60e3      	str	r3, [r4, #12]
 8003e06:	2e72      	cmp	r6, #114	; 0x72
 8003e08:	d038      	beq.n	8003e7c <d_cv_qualifiers+0xcc>
 8003e0a:	2e56      	cmp	r6, #86	; 0x56
 8003e0c:	d067      	beq.n	8003ede <d_cv_qualifiers+0x12e>
 8003e0e:	2e4b      	cmp	r6, #75	; 0x4b
 8003e10:	d06b      	beq.n	8003eea <d_cv_qualifiers+0x13a>
 8003e12:	786b      	ldrb	r3, [r5, #1]
 8003e14:	2b00      	cmp	r3, #0
 8003e16:	d026      	beq.n	8003e66 <d_cv_qualifiers+0xb6>
 8003e18:	1cab      	adds	r3, r5, #2
 8003e1a:	60e3      	str	r3, [r4, #12]
 8003e1c:	786b      	ldrb	r3, [r5, #1]
 8003e1e:	2b78      	cmp	r3, #120	; 0x78
 8003e20:	d069      	beq.n	8003ef6 <d_cv_qualifiers+0x146>
 8003e22:	001a      	movs	r2, r3
 8003e24:	2120      	movs	r1, #32
 8003e26:	438a      	bics	r2, r1
 8003e28:	2a4f      	cmp	r2, #79	; 0x4f
 8003e2a:	d16a      	bne.n	8003f02 <d_cv_qualifiers+0x152>
 8003e2c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8003e2e:	3209      	adds	r2, #9
 8003e30:	6322      	str	r2, [r4, #48]	; 0x30
 8003e32:	2b4f      	cmp	r3, #79	; 0x4f
 8003e34:	d000      	beq.n	8003e38 <d_cv_qualifiers+0x88>
 8003e36:	e076      	b.n	8003f26 <d_cv_qualifiers+0x176>
 8003e38:	3b4e      	subs	r3, #78	; 0x4e
 8003e3a:	6b65      	ldr	r5, [r4, #52]	; 0x34
 8003e3c:	0020      	movs	r0, r4
 8003e3e:	6363      	str	r3, [r4, #52]	; 0x34
 8003e40:	f7fe ff52 	bl	8002ce8 <d_expression_1>
 8003e44:	6365      	str	r5, [r4, #52]	; 0x34
 8003e46:	1e03      	subs	r3, r0, #0
 8003e48:	d00d      	beq.n	8003e66 <d_cv_qualifiers+0xb6>
 8003e4a:	68e2      	ldr	r2, [r4, #12]
 8003e4c:	7811      	ldrb	r1, [r2, #0]
 8003e4e:	2945      	cmp	r1, #69	; 0x45
 8003e50:	d109      	bne.n	8003e66 <d_cv_qualifiers+0xb6>
 8003e52:	3201      	adds	r2, #1
 8003e54:	60e2      	str	r2, [r4, #12]
 8003e56:	3109      	adds	r1, #9
 8003e58:	2200      	movs	r2, #0
 8003e5a:	0020      	movs	r0, r4
 8003e5c:	f7fe f8e0 	bl	8002020 <d_make_comp>
 8003e60:	6038      	str	r0, [r7, #0]
 8003e62:	2800      	cmp	r0, #0
 8003e64:	d116      	bne.n	8003e94 <d_cv_qualifiers+0xe4>
 8003e66:	2700      	movs	r7, #0
 8003e68:	0038      	movs	r0, r7
 8003e6a:	b003      	add	sp, #12
 8003e6c:	bc3c      	pop	{r2, r3, r4, r5}
 8003e6e:	4690      	mov	r8, r2
 8003e70:	4699      	mov	r9, r3
 8003e72:	46a2      	mov	sl, r4
 8003e74:	46ab      	mov	fp, r5
 8003e76:	bcf0      	pop	{r4, r5, r6, r7}
 8003e78:	bc02      	pop	{r1}
 8003e7a:	4708      	bx	r1
 8003e7c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8003e7e:	3309      	adds	r3, #9
 8003e80:	6323      	str	r3, [r4, #48]	; 0x30
 8003e82:	4641      	mov	r1, r8
 8003e84:	2300      	movs	r3, #0
 8003e86:	2200      	movs	r2, #0
 8003e88:	0020      	movs	r0, r4
 8003e8a:	f7fe f8c9 	bl	8002020 <d_make_comp>
 8003e8e:	6038      	str	r0, [r7, #0]
 8003e90:	2800      	cmp	r0, #0
 8003e92:	d0e8      	beq.n	8003e66 <d_cv_qualifiers+0xb6>
 8003e94:	68e5      	ldr	r5, [r4, #12]
 8003e96:	3008      	adds	r0, #8
 8003e98:	0007      	movs	r7, r0
 8003e9a:	0028      	movs	r0, r5
 8003e9c:	782e      	ldrb	r6, [r5, #0]
 8003e9e:	f7fe fb81 	bl	80025a4 <next_is_type_qual.isra.3>
 8003ea2:	2800      	cmp	r0, #0
 8003ea4:	d1ad      	bne.n	8003e02 <d_cv_qualifiers+0x52>
 8003ea6:	465b      	mov	r3, fp
 8003ea8:	07db      	lsls	r3, r3, #31
 8003eaa:	d4dd      	bmi.n	8003e68 <d_cv_qualifiers+0xb8>
 8003eac:	2e46      	cmp	r6, #70	; 0x46
 8003eae:	d1db      	bne.n	8003e68 <d_cv_qualifiers+0xb8>
 8003eb0:	454f      	cmp	r7, r9
 8003eb2:	d0d9      	beq.n	8003e68 <d_cv_qualifiers+0xb8>
 8003eb4:	241d      	movs	r4, #29
 8003eb6:	301e      	adds	r0, #30
 8003eb8:	211c      	movs	r1, #28
 8003eba:	e009      	b.n	8003ed0 <d_cv_qualifiers+0x120>
 8003ebc:	2a1b      	cmp	r2, #27
 8003ebe:	d035      	beq.n	8003f2c <d_cv_qualifiers+0x17c>
 8003ec0:	2a19      	cmp	r2, #25
 8003ec2:	d100      	bne.n	8003ec6 <d_cv_qualifiers+0x116>
 8003ec4:	7019      	strb	r1, [r3, #0]
 8003ec6:	2208      	movs	r2, #8
 8003ec8:	4691      	mov	r9, r2
 8003eca:	4499      	add	r9, r3
 8003ecc:	454f      	cmp	r7, r9
 8003ece:	d0cb      	beq.n	8003e68 <d_cv_qualifiers+0xb8>
 8003ed0:	464b      	mov	r3, r9
 8003ed2:	681b      	ldr	r3, [r3, #0]
 8003ed4:	781a      	ldrb	r2, [r3, #0]
 8003ed6:	2a1a      	cmp	r2, #26
 8003ed8:	d1f0      	bne.n	8003ebc <d_cv_qualifiers+0x10c>
 8003eda:	701c      	strb	r4, [r3, #0]
 8003edc:	e7f3      	b.n	8003ec6 <d_cv_qualifiers+0x116>
 8003ede:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8003ee0:	3309      	adds	r3, #9
 8003ee2:	6323      	str	r3, [r4, #48]	; 0x30
 8003ee4:	4651      	mov	r1, sl
 8003ee6:	2300      	movs	r3, #0
 8003ee8:	e7cd      	b.n	8003e86 <d_cv_qualifiers+0xd6>
 8003eea:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8003eec:	3306      	adds	r3, #6
 8003eee:	6323      	str	r3, [r4, #48]	; 0x30
 8003ef0:	9901      	ldr	r1, [sp, #4]
 8003ef2:	2300      	movs	r3, #0
 8003ef4:	e7c7      	b.n	8003e86 <d_cv_qualifiers+0xd6>
 8003ef6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8003ef8:	3311      	adds	r3, #17
 8003efa:	6323      	str	r3, [r4, #48]	; 0x30
 8003efc:	214c      	movs	r1, #76	; 0x4c
 8003efe:	2300      	movs	r3, #0
 8003f00:	e7c1      	b.n	8003e86 <d_cv_qualifiers+0xd6>
 8003f02:	2b77      	cmp	r3, #119	; 0x77
 8003f04:	d1af      	bne.n	8003e66 <d_cv_qualifiers+0xb6>
 8003f06:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8003f08:	3306      	adds	r3, #6
 8003f0a:	6323      	str	r3, [r4, #48]	; 0x30
 8003f0c:	0020      	movs	r0, r4
 8003f0e:	f7ff feff 	bl	8003d10 <d_parmlist>
 8003f12:	1e03      	subs	r3, r0, #0
 8003f14:	d0a7      	beq.n	8003e66 <d_cv_qualifiers+0xb6>
 8003f16:	68e2      	ldr	r2, [r4, #12]
 8003f18:	7811      	ldrb	r1, [r2, #0]
 8003f1a:	2945      	cmp	r1, #69	; 0x45
 8003f1c:	d1a3      	bne.n	8003e66 <d_cv_qualifiers+0xb6>
 8003f1e:	3201      	adds	r2, #1
 8003f20:	60e2      	str	r2, [r4, #12]
 8003f22:	310a      	adds	r1, #10
 8003f24:	e7af      	b.n	8003e86 <d_cv_qualifiers+0xd6>
 8003f26:	2300      	movs	r3, #0
 8003f28:	214e      	movs	r1, #78	; 0x4e
 8003f2a:	e7ac      	b.n	8003e86 <d_cv_qualifiers+0xd6>
 8003f2c:	7018      	strb	r0, [r3, #0]
 8003f2e:	e7ca      	b.n	8003ec6 <d_cv_qualifiers+0x116>

08003f30 <d_bare_function_type>:
 8003f30:	b570      	push	{r4, r5, r6, lr}
 8003f32:	68c3      	ldr	r3, [r0, #12]
 8003f34:	781a      	ldrb	r2, [r3, #0]
 8003f36:	0004      	movs	r4, r0
 8003f38:	2a4a      	cmp	r2, #74	; 0x4a
 8003f3a:	d016      	beq.n	8003f6a <d_bare_function_type+0x3a>
 8003f3c:	2900      	cmp	r1, #0
 8003f3e:	d012      	beq.n	8003f66 <d_bare_function_type+0x36>
 8003f40:	0020      	movs	r0, r4
 8003f42:	f7ff fb01 	bl	8003548 <d_type>
 8003f46:	1e05      	subs	r5, r0, #0
 8003f48:	d012      	beq.n	8003f70 <d_bare_function_type+0x40>
 8003f4a:	0020      	movs	r0, r4
 8003f4c:	f7ff fee0 	bl	8003d10 <d_parmlist>
 8003f50:	2800      	cmp	r0, #0
 8003f52:	d00d      	beq.n	8003f70 <d_bare_function_type+0x40>
 8003f54:	0003      	movs	r3, r0
 8003f56:	002a      	movs	r2, r5
 8003f58:	2129      	movs	r1, #41	; 0x29
 8003f5a:	0020      	movs	r0, r4
 8003f5c:	f7fe f860 	bl	8002020 <d_make_comp>
 8003f60:	bc70      	pop	{r4, r5, r6}
 8003f62:	bc02      	pop	{r1}
 8003f64:	4708      	bx	r1
 8003f66:	2500      	movs	r5, #0
 8003f68:	e7ef      	b.n	8003f4a <d_bare_function_type+0x1a>
 8003f6a:	3301      	adds	r3, #1
 8003f6c:	60c3      	str	r3, [r0, #12]
 8003f6e:	e7e7      	b.n	8003f40 <d_bare_function_type+0x10>
 8003f70:	2000      	movs	r0, #0
 8003f72:	e7f5      	b.n	8003f60 <d_bare_function_type+0x30>

08003f74 <d_function_type>:
 8003f74:	b510      	push	{r4, lr}
 8003f76:	68c3      	ldr	r3, [r0, #12]
 8003f78:	781a      	ldrb	r2, [r3, #0]
 8003f7a:	0004      	movs	r4, r0
 8003f7c:	2a46      	cmp	r2, #70	; 0x46
 8003f7e:	d117      	bne.n	8003fb0 <d_function_type+0x3c>
 8003f80:	1c5a      	adds	r2, r3, #1
 8003f82:	60c2      	str	r2, [r0, #12]
 8003f84:	785a      	ldrb	r2, [r3, #1]
 8003f86:	2a59      	cmp	r2, #89	; 0x59
 8003f88:	d101      	bne.n	8003f8e <d_function_type+0x1a>
 8003f8a:	3302      	adds	r3, #2
 8003f8c:	60c3      	str	r3, [r0, #12]
 8003f8e:	2101      	movs	r1, #1
 8003f90:	0020      	movs	r0, r4
 8003f92:	f7ff ffcd 	bl	8003f30 <d_bare_function_type>
 8003f96:	0001      	movs	r1, r0
 8003f98:	0020      	movs	r0, r4
 8003f9a:	f7fe f865 	bl	8002068 <d_ref_qualifier>
 8003f9e:	68e3      	ldr	r3, [r4, #12]
 8003fa0:	781a      	ldrb	r2, [r3, #0]
 8003fa2:	2a45      	cmp	r2, #69	; 0x45
 8003fa4:	d104      	bne.n	8003fb0 <d_function_type+0x3c>
 8003fa6:	3301      	adds	r3, #1
 8003fa8:	60e3      	str	r3, [r4, #12]
 8003faa:	bc10      	pop	{r4}
 8003fac:	bc02      	pop	{r1}
 8003fae:	4708      	bx	r1
 8003fb0:	2000      	movs	r0, #0
 8003fb2:	e7fa      	b.n	8003faa <d_function_type+0x36>

08003fb4 <d_unqualified_name>:
 8003fb4:	b570      	push	{r4, r5, r6, lr}
 8003fb6:	68c1      	ldr	r1, [r0, #12]
 8003fb8:	780a      	ldrb	r2, [r1, #0]
 8003fba:	0013      	movs	r3, r2
 8003fbc:	3b30      	subs	r3, #48	; 0x30
 8003fbe:	061b      	lsls	r3, r3, #24
 8003fc0:	0004      	movs	r4, r0
 8003fc2:	0e1b      	lsrs	r3, r3, #24
 8003fc4:	2b09      	cmp	r3, #9
 8003fc6:	d951      	bls.n	800406c <d_unqualified_name+0xb8>
 8003fc8:	0013      	movs	r3, r2
 8003fca:	3b61      	subs	r3, #97	; 0x61
 8003fcc:	061b      	lsls	r3, r3, #24
 8003fce:	0e1b      	lsrs	r3, r3, #24
 8003fd0:	2b19      	cmp	r3, #25
 8003fd2:	d812      	bhi.n	8003ffa <d_unqualified_name+0x46>
 8003fd4:	2a6f      	cmp	r2, #111	; 0x6f
 8003fd6:	d100      	bne.n	8003fda <d_unqualified_name+0x26>
 8003fd8:	e07f      	b.n	80040da <d_unqualified_name+0x126>
 8003fda:	0020      	movs	r0, r4
 8003fdc:	f7ff fe14 	bl	8003c08 <d_operator_name>
 8003fe0:	1e05      	subs	r5, r0, #0
 8003fe2:	d002      	beq.n	8003fea <d_unqualified_name+0x36>
 8003fe4:	7803      	ldrb	r3, [r0, #0]
 8003fe6:	2b31      	cmp	r3, #49	; 0x31
 8003fe8:	d04d      	beq.n	8004086 <d_unqualified_name+0xd2>
 8003fea:	68e3      	ldr	r3, [r4, #12]
 8003fec:	781a      	ldrb	r2, [r3, #0]
 8003fee:	2a42      	cmp	r2, #66	; 0x42
 8003ff0:	d043      	beq.n	800407a <d_unqualified_name+0xc6>
 8003ff2:	0028      	movs	r0, r5
 8003ff4:	bc70      	pop	{r4, r5, r6}
 8003ff6:	bc02      	pop	{r1}
 8003ff8:	4708      	bx	r1
 8003ffa:	0013      	movs	r3, r2
 8003ffc:	3b43      	subs	r3, #67	; 0x43
 8003ffe:	061b      	lsls	r3, r3, #24
 8004000:	0e1b      	lsrs	r3, r3, #24
 8004002:	2b01      	cmp	r3, #1
 8004004:	d970      	bls.n	80040e8 <d_unqualified_name+0x134>
 8004006:	2a4c      	cmp	r2, #76	; 0x4c
 8004008:	d057      	beq.n	80040ba <d_unqualified_name+0x106>
 800400a:	2a55      	cmp	r2, #85	; 0x55
 800400c:	d161      	bne.n	80040d2 <d_unqualified_name+0x11e>
 800400e:	784b      	ldrb	r3, [r1, #1]
 8004010:	2b6c      	cmp	r3, #108	; 0x6c
 8004012:	d100      	bne.n	8004016 <d_unqualified_name+0x62>
 8004014:	e0c2      	b.n	800419c <d_unqualified_name+0x1e8>
 8004016:	2b74      	cmp	r3, #116	; 0x74
 8004018:	d15b      	bne.n	80040d2 <d_unqualified_name+0x11e>
 800401a:	1c4b      	adds	r3, r1, #1
 800401c:	60c3      	str	r3, [r0, #12]
 800401e:	784a      	ldrb	r2, [r1, #1]
 8004020:	2a74      	cmp	r2, #116	; 0x74
 8004022:	d158      	bne.n	80040d6 <d_unqualified_name+0x122>
 8004024:	3102      	adds	r1, #2
 8004026:	60c1      	str	r1, [r0, #12]
 8004028:	f7fe f904 	bl	8002234 <d_compact_number>
 800402c:	2800      	cmp	r0, #0
 800402e:	da00      	bge.n	8004032 <d_unqualified_name+0x7e>
 8004030:	e0e4      	b.n	80041fc <d_unqualified_name+0x248>
 8004032:	6963      	ldr	r3, [r4, #20]
 8004034:	69a1      	ldr	r1, [r4, #24]
 8004036:	68e2      	ldr	r2, [r4, #12]
 8004038:	428b      	cmp	r3, r1
 800403a:	db00      	blt.n	800403e <d_unqualified_name+0x8a>
 800403c:	e0db      	b.n	80041f6 <d_unqualified_name+0x242>
 800403e:	6921      	ldr	r1, [r4, #16]
 8004040:	468c      	mov	ip, r1
 8004042:	2100      	movs	r1, #0
 8004044:	011d      	lsls	r5, r3, #4
 8004046:	4465      	add	r5, ip
 8004048:	3301      	adds	r3, #1
 800404a:	6069      	str	r1, [r5, #4]
 800404c:	6163      	str	r3, [r4, #20]
 800404e:	2347      	movs	r3, #71	; 0x47
 8004050:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8004052:	702b      	strb	r3, [r5, #0]
 8004054:	6a23      	ldr	r3, [r4, #32]
 8004056:	60a8      	str	r0, [r5, #8]
 8004058:	428b      	cmp	r3, r1
 800405a:	db00      	blt.n	800405e <d_unqualified_name+0xaa>
 800405c:	e0cb      	b.n	80041f6 <d_unqualified_name+0x242>
 800405e:	69e0      	ldr	r0, [r4, #28]
 8004060:	0099      	lsls	r1, r3, #2
 8004062:	3301      	adds	r3, #1
 8004064:	500d      	str	r5, [r1, r0]
 8004066:	6223      	str	r3, [r4, #32]
 8004068:	7812      	ldrb	r2, [r2, #0]
 800406a:	e7c0      	b.n	8003fee <d_unqualified_name+0x3a>
 800406c:	f7fe f922 	bl	80022b4 <d_source_name>
 8004070:	68e3      	ldr	r3, [r4, #12]
 8004072:	781a      	ldrb	r2, [r3, #0]
 8004074:	0005      	movs	r5, r0
 8004076:	2a42      	cmp	r2, #66	; 0x42
 8004078:	d1bb      	bne.n	8003ff2 <d_unqualified_name+0x3e>
 800407a:	0029      	movs	r1, r5
 800407c:	0020      	movs	r0, r4
 800407e:	f7fe f985 	bl	800238c <d_abi_tags>
 8004082:	0005      	movs	r5, r0
 8004084:	e7b5      	b.n	8003ff2 <d_unqualified_name+0x3e>
 8004086:	6882      	ldr	r2, [r0, #8]
 8004088:	6891      	ldr	r1, [r2, #8]
 800408a:	468c      	mov	ip, r1
 800408c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800408e:	3307      	adds	r3, #7
 8004090:	4463      	add	r3, ip
 8004092:	6323      	str	r3, [r4, #48]	; 0x30
 8004094:	6810      	ldr	r0, [r2, #0]
 8004096:	4977      	ldr	r1, [pc, #476]	; (8004274 <d_unqualified_name+0x2c0>)
 8004098:	f005 f9b6 	bl	8009408 <strcmp>
 800409c:	2800      	cmp	r0, #0
 800409e:	d1a4      	bne.n	8003fea <d_unqualified_name+0x36>
 80040a0:	0020      	movs	r0, r4
 80040a2:	f7fe f907 	bl	80022b4 <d_source_name>
 80040a6:	002a      	movs	r2, r5
 80040a8:	0003      	movs	r3, r0
 80040aa:	2136      	movs	r1, #54	; 0x36
 80040ac:	0020      	movs	r0, r4
 80040ae:	f7fd ffb7 	bl	8002020 <d_make_comp>
 80040b2:	68e3      	ldr	r3, [r4, #12]
 80040b4:	0005      	movs	r5, r0
 80040b6:	781a      	ldrb	r2, [r3, #0]
 80040b8:	e799      	b.n	8003fee <d_unqualified_name+0x3a>
 80040ba:	3101      	adds	r1, #1
 80040bc:	60c1      	str	r1, [r0, #12]
 80040be:	f7fe f8f9 	bl	80022b4 <d_source_name>
 80040c2:	1e05      	subs	r5, r0, #0
 80040c4:	d005      	beq.n	80040d2 <d_unqualified_name+0x11e>
 80040c6:	0020      	movs	r0, r4
 80040c8:	f7fe fa42 	bl	8002550 <d_discriminator>
 80040cc:	2800      	cmp	r0, #0
 80040ce:	d000      	beq.n	80040d2 <d_unqualified_name+0x11e>
 80040d0:	e78b      	b.n	8003fea <d_unqualified_name+0x36>
 80040d2:	2500      	movs	r5, #0
 80040d4:	e78d      	b.n	8003ff2 <d_unqualified_name+0x3e>
 80040d6:	2500      	movs	r5, #0
 80040d8:	e789      	b.n	8003fee <d_unqualified_name+0x3a>
 80040da:	784b      	ldrb	r3, [r1, #1]
 80040dc:	2b6e      	cmp	r3, #110	; 0x6e
 80040de:	d000      	beq.n	80040e2 <d_unqualified_name+0x12e>
 80040e0:	e77b      	b.n	8003fda <d_unqualified_name+0x26>
 80040e2:	3102      	adds	r1, #2
 80040e4:	60c1      	str	r1, [r0, #12]
 80040e6:	e778      	b.n	8003fda <d_unqualified_name+0x26>
 80040e8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80040ea:	2b00      	cmp	r3, #0
 80040ec:	d008      	beq.n	8004100 <d_unqualified_name+0x14c>
 80040ee:	7818      	ldrb	r0, [r3, #0]
 80040f0:	2800      	cmp	r0, #0
 80040f2:	d113      	bne.n	800411c <d_unqualified_name+0x168>
 80040f4:	68d8      	ldr	r0, [r3, #12]
 80040f6:	4684      	mov	ip, r0
 80040f8:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80040fa:	4462      	add	r2, ip
 80040fc:	6322      	str	r2, [r4, #48]	; 0x30
 80040fe:	780a      	ldrb	r2, [r1, #0]
 8004100:	2a43      	cmp	r2, #67	; 0x43
 8004102:	d00e      	beq.n	8004122 <d_unqualified_name+0x16e>
 8004104:	2a44      	cmp	r2, #68	; 0x44
 8004106:	d1e6      	bne.n	80040d6 <d_unqualified_name+0x122>
 8004108:	784a      	ldrb	r2, [r1, #1]
 800410a:	3a30      	subs	r2, #48	; 0x30
 800410c:	0612      	lsls	r2, r2, #24
 800410e:	0e12      	lsrs	r2, r2, #24
 8004110:	2a05      	cmp	r2, #5
 8004112:	d8de      	bhi.n	80040d2 <d_unqualified_name+0x11e>
 8004114:	4858      	ldr	r0, [pc, #352]	; (8004278 <d_unqualified_name+0x2c4>)
 8004116:	0092      	lsls	r2, r2, #2
 8004118:	5882      	ldr	r2, [r0, r2]
 800411a:	4697      	mov	pc, r2
 800411c:	2818      	cmp	r0, #24
 800411e:	d1ef      	bne.n	8004100 <d_unqualified_name+0x14c>
 8004120:	e7e8      	b.n	80040f4 <d_unqualified_name+0x140>
 8004122:	784a      	ldrb	r2, [r1, #1]
 8004124:	2a49      	cmp	r2, #73	; 0x49
 8004126:	d07e      	beq.n	8004226 <d_unqualified_name+0x272>
 8004128:	3a31      	subs	r2, #49	; 0x31
 800412a:	0612      	lsls	r2, r2, #24
 800412c:	0e12      	lsrs	r2, r2, #24
 800412e:	2a04      	cmp	r2, #4
 8004130:	d8cf      	bhi.n	80040d2 <d_unqualified_name+0x11e>
 8004132:	4852      	ldr	r0, [pc, #328]	; (800427c <d_unqualified_name+0x2c8>)
 8004134:	0092      	lsls	r2, r2, #2
 8004136:	5882      	ldr	r2, [r0, r2]
 8004138:	3102      	adds	r1, #2
 800413a:	60e1      	str	r1, [r4, #12]
 800413c:	4697      	mov	pc, r2
 800413e:	2002      	movs	r0, #2
 8004140:	1c8a      	adds	r2, r1, #2
 8004142:	60e2      	str	r2, [r4, #12]
 8004144:	69a5      	ldr	r5, [r4, #24]
 8004146:	6962      	ldr	r2, [r4, #20]
 8004148:	42aa      	cmp	r2, r5
 800414a:	db5b      	blt.n	8004204 <d_unqualified_name+0x250>
 800414c:	788a      	ldrb	r2, [r1, #2]
 800414e:	2500      	movs	r5, #0
 8004150:	e74d      	b.n	8003fee <d_unqualified_name+0x3a>
 8004152:	2001      	movs	r0, #1
 8004154:	e7f4      	b.n	8004140 <d_unqualified_name+0x18c>
 8004156:	2005      	movs	r0, #5
 8004158:	e7f2      	b.n	8004140 <d_unqualified_name+0x18c>
 800415a:	2004      	movs	r0, #4
 800415c:	e7f0      	b.n	8004140 <d_unqualified_name+0x18c>
 800415e:	2003      	movs	r0, #3
 8004160:	e7ee      	b.n	8004140 <d_unqualified_name+0x18c>
 8004162:	2604      	movs	r6, #4
 8004164:	6962      	ldr	r2, [r4, #20]
 8004166:	69a1      	ldr	r1, [r4, #24]
 8004168:	428a      	cmp	r2, r1
 800416a:	da47      	bge.n	80041fc <d_unqualified_name+0x248>
 800416c:	6921      	ldr	r1, [r4, #16]
 800416e:	468c      	mov	ip, r1
 8004170:	2100      	movs	r1, #0
 8004172:	0115      	lsls	r5, r2, #4
 8004174:	4465      	add	r5, ip
 8004176:	3201      	adds	r2, #1
 8004178:	6069      	str	r1, [r5, #4]
 800417a:	6162      	str	r2, [r4, #20]
 800417c:	2b00      	cmp	r3, #0
 800417e:	d071      	beq.n	8004264 <d_unqualified_name+0x2b0>
 8004180:	2207      	movs	r2, #7
 8004182:	6069      	str	r1, [r5, #4]
 8004184:	702a      	strb	r2, [r5, #0]
 8004186:	722e      	strb	r6, [r5, #8]
 8004188:	60eb      	str	r3, [r5, #12]
 800418a:	e72e      	b.n	8003fea <d_unqualified_name+0x36>
 800418c:	2603      	movs	r6, #3
 800418e:	e7e9      	b.n	8004164 <d_unqualified_name+0x1b0>
 8004190:	2602      	movs	r6, #2
 8004192:	e7e7      	b.n	8004164 <d_unqualified_name+0x1b0>
 8004194:	2601      	movs	r6, #1
 8004196:	e7e5      	b.n	8004164 <d_unqualified_name+0x1b0>
 8004198:	2605      	movs	r6, #5
 800419a:	e7e3      	b.n	8004164 <d_unqualified_name+0x1b0>
 800419c:	1c4b      	adds	r3, r1, #1
 800419e:	60c3      	str	r3, [r0, #12]
 80041a0:	784a      	ldrb	r2, [r1, #1]
 80041a2:	2a6c      	cmp	r2, #108	; 0x6c
 80041a4:	d197      	bne.n	80040d6 <d_unqualified_name+0x122>
 80041a6:	3102      	adds	r1, #2
 80041a8:	60c1      	str	r1, [r0, #12]
 80041aa:	f7ff fdb1 	bl	8003d10 <d_parmlist>
 80041ae:	68e3      	ldr	r3, [r4, #12]
 80041b0:	0006      	movs	r6, r0
 80041b2:	781a      	ldrb	r2, [r3, #0]
 80041b4:	2800      	cmp	r0, #0
 80041b6:	d08e      	beq.n	80040d6 <d_unqualified_name+0x122>
 80041b8:	2a45      	cmp	r2, #69	; 0x45
 80041ba:	d18c      	bne.n	80040d6 <d_unqualified_name+0x122>
 80041bc:	3301      	adds	r3, #1
 80041be:	60e3      	str	r3, [r4, #12]
 80041c0:	0020      	movs	r0, r4
 80041c2:	f7fe f837 	bl	8002234 <d_compact_number>
 80041c6:	2800      	cmp	r0, #0
 80041c8:	db18      	blt.n	80041fc <d_unqualified_name+0x248>
 80041ca:	6963      	ldr	r3, [r4, #20]
 80041cc:	69a1      	ldr	r1, [r4, #24]
 80041ce:	68e2      	ldr	r2, [r4, #12]
 80041d0:	428b      	cmp	r3, r1
 80041d2:	da10      	bge.n	80041f6 <d_unqualified_name+0x242>
 80041d4:	6921      	ldr	r1, [r4, #16]
 80041d6:	468c      	mov	ip, r1
 80041d8:	2100      	movs	r1, #0
 80041da:	011d      	lsls	r5, r3, #4
 80041dc:	4465      	add	r5, ip
 80041de:	3301      	adds	r3, #1
 80041e0:	6069      	str	r1, [r5, #4]
 80041e2:	6163      	str	r3, [r4, #20]
 80041e4:	2345      	movs	r3, #69	; 0x45
 80041e6:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80041e8:	702b      	strb	r3, [r5, #0]
 80041ea:	6a23      	ldr	r3, [r4, #32]
 80041ec:	60ae      	str	r6, [r5, #8]
 80041ee:	60e8      	str	r0, [r5, #12]
 80041f0:	428b      	cmp	r3, r1
 80041f2:	da00      	bge.n	80041f6 <d_unqualified_name+0x242>
 80041f4:	e733      	b.n	800405e <d_unqualified_name+0xaa>
 80041f6:	7812      	ldrb	r2, [r2, #0]
 80041f8:	2500      	movs	r5, #0
 80041fa:	e6f8      	b.n	8003fee <d_unqualified_name+0x3a>
 80041fc:	68e3      	ldr	r3, [r4, #12]
 80041fe:	2500      	movs	r5, #0
 8004200:	781a      	ldrb	r2, [r3, #0]
 8004202:	e6f4      	b.n	8003fee <d_unqualified_name+0x3a>
 8004204:	6926      	ldr	r6, [r4, #16]
 8004206:	46b4      	mov	ip, r6
 8004208:	2600      	movs	r6, #0
 800420a:	0115      	lsls	r5, r2, #4
 800420c:	4465      	add	r5, ip
 800420e:	3201      	adds	r2, #1
 8004210:	606e      	str	r6, [r5, #4]
 8004212:	6162      	str	r2, [r4, #20]
 8004214:	2b00      	cmp	r3, #0
 8004216:	d029      	beq.n	800426c <d_unqualified_name+0x2b8>
 8004218:	2208      	movs	r2, #8
 800421a:	606e      	str	r6, [r5, #4]
 800421c:	702a      	strb	r2, [r5, #0]
 800421e:	7228      	strb	r0, [r5, #8]
 8004220:	60eb      	str	r3, [r5, #12]
 8004222:	788a      	ldrb	r2, [r1, #2]
 8004224:	e6e3      	b.n	8003fee <d_unqualified_name+0x3a>
 8004226:	1c4b      	adds	r3, r1, #1
 8004228:	60e3      	str	r3, [r4, #12]
 800422a:	788b      	ldrb	r3, [r1, #2]
 800422c:	3b31      	subs	r3, #49	; 0x31
 800422e:	061b      	lsls	r3, r3, #24
 8004230:	0e1b      	lsrs	r3, r3, #24
 8004232:	2b04      	cmp	r3, #4
 8004234:	d813      	bhi.n	800425e <d_unqualified_name+0x2aa>
 8004236:	4a12      	ldr	r2, [pc, #72]	; (8004280 <d_unqualified_name+0x2cc>)
 8004238:	009b      	lsls	r3, r3, #2
 800423a:	58d3      	ldr	r3, [r2, r3]
 800423c:	3103      	adds	r1, #3
 800423e:	60e1      	str	r1, [r4, #12]
 8004240:	469f      	mov	pc, r3
 8004242:	2604      	movs	r6, #4
 8004244:	0020      	movs	r0, r4
 8004246:	f7ff f97f 	bl	8003548 <d_type>
 800424a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800424c:	e78a      	b.n	8004164 <d_unqualified_name+0x1b0>
 800424e:	2603      	movs	r6, #3
 8004250:	e7f8      	b.n	8004244 <d_unqualified_name+0x290>
 8004252:	2601      	movs	r6, #1
 8004254:	e7f6      	b.n	8004244 <d_unqualified_name+0x290>
 8004256:	2605      	movs	r6, #5
 8004258:	e7f4      	b.n	8004244 <d_unqualified_name+0x290>
 800425a:	2602      	movs	r6, #2
 800425c:	e7f2      	b.n	8004244 <d_unqualified_name+0x290>
 800425e:	784a      	ldrb	r2, [r1, #1]
 8004260:	2500      	movs	r5, #0
 8004262:	e6c4      	b.n	8003fee <d_unqualified_name+0x3a>
 8004264:	68e3      	ldr	r3, [r4, #12]
 8004266:	000d      	movs	r5, r1
 8004268:	781a      	ldrb	r2, [r3, #0]
 800426a:	e6c0      	b.n	8003fee <d_unqualified_name+0x3a>
 800426c:	788a      	ldrb	r2, [r1, #2]
 800426e:	0035      	movs	r5, r6
 8004270:	e6bd      	b.n	8003fee <d_unqualified_name+0x3a>
 8004272:	46c0      	nop			; (mov r8, r8)
 8004274:	08026dd8 	.word	0x08026dd8
 8004278:	080207b8 	.word	0x080207b8
 800427c:	080207d0 	.word	0x080207d0
 8004280:	080207e4 	.word	0x080207e4

08004284 <d_encoding>:
 8004284:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004286:	46ce      	mov	lr, r9
 8004288:	4647      	mov	r7, r8
 800428a:	b580      	push	{r7, lr}
 800428c:	68c3      	ldr	r3, [r0, #12]
 800428e:	781a      	ldrb	r2, [r3, #0]
 8004290:	0004      	movs	r4, r0
 8004292:	000e      	movs	r6, r1
 8004294:	2a47      	cmp	r2, #71	; 0x47
 8004296:	d031      	beq.n	80042fc <d_encoding+0x78>
 8004298:	2a54      	cmp	r2, #84	; 0x54
 800429a:	d02f      	beq.n	80042fc <d_encoding+0x78>
 800429c:	f7fe ffb0 	bl	8003200 <d_name>
 80042a0:	1e05      	subs	r5, r0, #0
 80042a2:	d005      	beq.n	80042b0 <d_encoding+0x2c>
 80042a4:	2301      	movs	r3, #1
 80042a6:	4233      	tst	r3, r6
 80042a8:	d002      	beq.n	80042b0 <d_encoding+0x2c>
 80042aa:	68a2      	ldr	r2, [r4, #8]
 80042ac:	421a      	tst	r2, r3
 80042ae:	d012      	beq.n	80042d6 <d_encoding+0x52>
 80042b0:	68e3      	ldr	r3, [r4, #12]
 80042b2:	781b      	ldrb	r3, [r3, #0]
 80042b4:	425a      	negs	r2, r3
 80042b6:	415a      	adcs	r2, r3
 80042b8:	3b45      	subs	r3, #69	; 0x45
 80042ba:	4259      	negs	r1, r3
 80042bc:	414b      	adcs	r3, r1
 80042be:	4313      	orrs	r3, r2
 80042c0:	d101      	bne.n	80042c6 <d_encoding+0x42>
 80042c2:	2d00      	cmp	r5, #0
 80042c4:	d134      	bne.n	8004330 <d_encoding+0xac>
 80042c6:	0028      	movs	r0, r5
 80042c8:	bc0c      	pop	{r2, r3}
 80042ca:	4690      	mov	r8, r2
 80042cc:	4699      	mov	r9, r3
 80042ce:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80042d0:	bc02      	pop	{r1}
 80042d2:	4708      	bx	r1
 80042d4:	68ad      	ldr	r5, [r5, #8]
 80042d6:	782a      	ldrb	r2, [r5, #0]
 80042d8:	0013      	movs	r3, r2
 80042da:	3b1c      	subs	r3, #28
 80042dc:	061b      	lsls	r3, r3, #24
 80042de:	0e1b      	lsrs	r3, r3, #24
 80042e0:	2b04      	cmp	r3, #4
 80042e2:	d9f7      	bls.n	80042d4 <d_encoding+0x50>
 80042e4:	2a02      	cmp	r2, #2
 80042e6:	d1ee      	bne.n	80042c6 <d_encoding+0x42>
 80042e8:	68ec      	ldr	r4, [r5, #12]
 80042ea:	e000      	b.n	80042ee <d_encoding+0x6a>
 80042ec:	68a4      	ldr	r4, [r4, #8]
 80042ee:	7820      	ldrb	r0, [r4, #0]
 80042f0:	f7fd ff3e 	bl	8002170 <is_fnqual_component_type>
 80042f4:	2800      	cmp	r0, #0
 80042f6:	d1f9      	bne.n	80042ec <d_encoding+0x68>
 80042f8:	60ec      	str	r4, [r5, #12]
 80042fa:	e7e4      	b.n	80042c6 <d_encoding+0x42>
 80042fc:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80042fe:	000a      	movs	r2, r1
 8004300:	3214      	adds	r2, #20
 8004302:	6322      	str	r2, [r4, #48]	; 0x30
 8004304:	781a      	ldrb	r2, [r3, #0]
 8004306:	2a54      	cmp	r2, #84	; 0x54
 8004308:	d02f      	beq.n	800436a <d_encoding+0xe6>
 800430a:	2a47      	cmp	r2, #71	; 0x47
 800430c:	d12b      	bne.n	8004366 <d_encoding+0xe2>
 800430e:	1c5a      	adds	r2, r3, #1
 8004310:	60e2      	str	r2, [r4, #12]
 8004312:	785a      	ldrb	r2, [r3, #1]
 8004314:	2a00      	cmp	r2, #0
 8004316:	d026      	beq.n	8004366 <d_encoding+0xe2>
 8004318:	1c9a      	adds	r2, r3, #2
 800431a:	60e2      	str	r2, [r4, #12]
 800431c:	785a      	ldrb	r2, [r3, #1]
 800431e:	3a41      	subs	r2, #65	; 0x41
 8004320:	0612      	lsls	r2, r2, #24
 8004322:	0e12      	lsrs	r2, r2, #24
 8004324:	2a31      	cmp	r2, #49	; 0x31
 8004326:	d81e      	bhi.n	8004366 <d_encoding+0xe2>
 8004328:	49c8      	ldr	r1, [pc, #800]	; (800464c <d_encoding+0x3c8>)
 800432a:	0092      	lsls	r2, r2, #2
 800432c:	588a      	ldr	r2, [r1, r2]
 800432e:	4697      	mov	pc, r2
 8004330:	0029      	movs	r1, r5
 8004332:	780a      	ldrb	r2, [r1, #0]
 8004334:	2a20      	cmp	r2, #32
 8004336:	d837      	bhi.n	80043a8 <d_encoding+0x124>
 8004338:	2a1c      	cmp	r2, #28
 800433a:	d23d      	bcs.n	80043b8 <d_encoding+0x134>
 800433c:	2a04      	cmp	r2, #4
 800433e:	d127      	bne.n	8004390 <d_encoding+0x10c>
 8004340:	688a      	ldr	r2, [r1, #8]
 8004342:	2a00      	cmp	r2, #0
 8004344:	d00c      	beq.n	8004360 <d_encoding+0xdc>
 8004346:	7813      	ldrb	r3, [r2, #0]
 8004348:	2b08      	cmp	r3, #8
 800434a:	d81f      	bhi.n	800438c <d_encoding+0x108>
 800434c:	2b07      	cmp	r3, #7
 800434e:	d21f      	bcs.n	8004390 <d_encoding+0x10c>
 8004350:	3b01      	subs	r3, #1
 8004352:	061b      	lsls	r3, r3, #24
 8004354:	0e1b      	lsrs	r3, r3, #24
 8004356:	2b01      	cmp	r3, #1
 8004358:	d802      	bhi.n	8004360 <d_encoding+0xdc>
 800435a:	68d2      	ldr	r2, [r2, #12]
 800435c:	2a00      	cmp	r2, #0
 800435e:	d1f2      	bne.n	8004346 <d_encoding+0xc2>
 8004360:	2101      	movs	r1, #1
 8004362:	e016      	b.n	8004392 <d_encoding+0x10e>
 8004364:	60e5      	str	r5, [r4, #12]
 8004366:	2500      	movs	r5, #0
 8004368:	e7ad      	b.n	80042c6 <d_encoding+0x42>
 800436a:	1c5a      	adds	r2, r3, #1
 800436c:	60e2      	str	r2, [r4, #12]
 800436e:	785a      	ldrb	r2, [r3, #1]
 8004370:	2a00      	cmp	r2, #0
 8004372:	d0f8      	beq.n	8004366 <d_encoding+0xe2>
 8004374:	1c9a      	adds	r2, r3, #2
 8004376:	60e2      	str	r2, [r4, #12]
 8004378:	785b      	ldrb	r3, [r3, #1]
 800437a:	3b43      	subs	r3, #67	; 0x43
 800437c:	061b      	lsls	r3, r3, #24
 800437e:	0e1b      	lsrs	r3, r3, #24
 8004380:	2b33      	cmp	r3, #51	; 0x33
 8004382:	d8f0      	bhi.n	8004366 <d_encoding+0xe2>
 8004384:	4ab2      	ldr	r2, [pc, #712]	; (8004650 <d_encoding+0x3cc>)
 8004386:	009b      	lsls	r3, r3, #2
 8004388:	58d3      	ldr	r3, [r2, r3]
 800438a:	469f      	mov	pc, r3
 800438c:	2b34      	cmp	r3, #52	; 0x34
 800438e:	d1e7      	bne.n	8004360 <d_encoding+0xdc>
 8004390:	2100      	movs	r1, #0
 8004392:	0020      	movs	r0, r4
 8004394:	f7ff fdcc 	bl	8003f30 <d_bare_function_type>
 8004398:	002a      	movs	r2, r5
 800439a:	0003      	movs	r3, r0
 800439c:	2103      	movs	r1, #3
 800439e:	0020      	movs	r0, r4
 80043a0:	f7fd fe3e 	bl	8002020 <d_make_comp>
 80043a4:	0005      	movs	r5, r0
 80043a6:	e78e      	b.n	80042c6 <d_encoding+0x42>
 80043a8:	2a4c      	cmp	r2, #76	; 0x4c
 80043aa:	d005      	beq.n	80043b8 <d_encoding+0x134>
 80043ac:	d3f0      	bcc.n	8004390 <d_encoding+0x10c>
 80043ae:	3a4e      	subs	r2, #78	; 0x4e
 80043b0:	0612      	lsls	r2, r2, #24
 80043b2:	0e12      	lsrs	r2, r2, #24
 80043b4:	2a01      	cmp	r2, #1
 80043b6:	d8eb      	bhi.n	8004390 <d_encoding+0x10c>
 80043b8:	6889      	ldr	r1, [r1, #8]
 80043ba:	2900      	cmp	r1, #0
 80043bc:	d1b9      	bne.n	8004332 <d_encoding+0xae>
 80043be:	e7e8      	b.n	8004392 <d_encoding+0x10e>
 80043c0:	0020      	movs	r0, r4
 80043c2:	f7fe ff1d 	bl	8003200 <d_name>
 80043c6:	0005      	movs	r5, r0
 80043c8:	0020      	movs	r0, r4
 80043ca:	f7fd ff19 	bl	8002200 <d_number_component>
 80043ce:	002a      	movs	r2, r5
 80043d0:	0003      	movs	r3, r0
 80043d2:	2116      	movs	r1, #22
 80043d4:	0020      	movs	r0, r4
 80043d6:	f7fd fe23 	bl	8002020 <d_make_comp>
 80043da:	0005      	movs	r5, r0
 80043dc:	e773      	b.n	80042c6 <d_encoding+0x42>
 80043de:	789a      	ldrb	r2, [r3, #2]
 80043e0:	2100      	movs	r1, #0
 80043e2:	0020      	movs	r0, r4
 80043e4:	2a00      	cmp	r2, #0
 80043e6:	d005      	beq.n	80043f4 <d_encoding+0x170>
 80043e8:	1cda      	adds	r2, r3, #3
 80043ea:	60e2      	str	r2, [r4, #12]
 80043ec:	789b      	ldrb	r3, [r3, #2]
 80043ee:	2b6e      	cmp	r3, #110	; 0x6e
 80043f0:	d100      	bne.n	80043f4 <d_encoding+0x170>
 80043f2:	e157      	b.n	80046a4 <d_encoding+0x420>
 80043f4:	f7ff ff46 	bl	8004284 <d_encoding>
 80043f8:	2300      	movs	r3, #0
 80043fa:	0002      	movs	r2, r0
 80043fc:	2148      	movs	r1, #72	; 0x48
 80043fe:	0020      	movs	r0, r4
 8004400:	f7fd fe0e 	bl	8002020 <d_make_comp>
 8004404:	0005      	movs	r5, r0
 8004406:	e75e      	b.n	80042c6 <d_encoding+0x42>
 8004408:	0020      	movs	r0, r4
 800440a:	f7fe fef9 	bl	8003200 <d_name>
 800440e:	2300      	movs	r3, #0
 8004410:	0002      	movs	r2, r0
 8004412:	2113      	movs	r1, #19
 8004414:	0020      	movs	r0, r4
 8004416:	f7fd fe03 	bl	8002020 <d_make_comp>
 800441a:	0005      	movs	r5, r0
 800441c:	e753      	b.n	80042c6 <d_encoding+0x42>
 800441e:	0020      	movs	r0, r4
 8004420:	300c      	adds	r0, #12
 8004422:	f7fd feb9 	bl	8002198 <d_number.isra.1>
 8004426:	2801      	cmp	r0, #1
 8004428:	dd9d      	ble.n	8004366 <d_encoding+0xe2>
 800442a:	68e3      	ldr	r3, [r4, #12]
 800442c:	781a      	ldrb	r2, [r3, #0]
 800442e:	2a00      	cmp	r2, #0
 8004430:	d099      	beq.n	8004366 <d_encoding+0xe2>
 8004432:	1c5d      	adds	r5, r3, #1
 8004434:	60e5      	str	r5, [r4, #12]
 8004436:	781b      	ldrb	r3, [r3, #0]
 8004438:	2b5f      	cmp	r3, #95	; 0x5f
 800443a:	d194      	bne.n	8004366 <d_encoding+0xe2>
 800443c:	2300      	movs	r3, #0
 800443e:	4699      	mov	r9, r3
 8004440:	3340      	adds	r3, #64	; 0x40
 8004442:	2200      	movs	r2, #0
 8004444:	4698      	mov	r8, r3
 8004446:	1e46      	subs	r6, r0, #1
 8004448:	782b      	ldrb	r3, [r5, #0]
 800444a:	2b00      	cmp	r3, #0
 800444c:	d08b      	beq.n	8004366 <d_encoding+0xe2>
 800444e:	2b24      	cmp	r3, #36	; 0x24
 8004450:	d000      	beq.n	8004454 <d_encoding+0x1d0>
 8004452:	e0f9      	b.n	8004648 <d_encoding+0x3c4>
 8004454:	786b      	ldrb	r3, [r5, #1]
 8004456:	2b53      	cmp	r3, #83	; 0x53
 8004458:	d100      	bne.n	800445c <d_encoding+0x1d8>
 800445a:	e11f      	b.n	800469c <d_encoding+0x418>
 800445c:	2b5f      	cmp	r3, #95	; 0x5f
 800445e:	d100      	bne.n	8004462 <d_encoding+0x1de>
 8004460:	e11e      	b.n	80046a0 <d_encoding+0x41c>
 8004462:	2b24      	cmp	r3, #36	; 0x24
 8004464:	d000      	beq.n	8004468 <d_encoding+0x1e4>
 8004466:	e77e      	b.n	8004366 <d_encoding+0xe2>
 8004468:	2024      	movs	r0, #36	; 0x24
 800446a:	68e3      	ldr	r3, [r4, #12]
 800446c:	6961      	ldr	r1, [r4, #20]
 800446e:	1c9d      	adds	r5, r3, #2
 8004470:	69a3      	ldr	r3, [r4, #24]
 8004472:	4299      	cmp	r1, r3
 8004474:	db00      	blt.n	8004478 <d_encoding+0x1f4>
 8004476:	e775      	b.n	8004364 <d_encoding+0xe0>
 8004478:	6927      	ldr	r7, [r4, #16]
 800447a:	46bc      	mov	ip, r7
 800447c:	464f      	mov	r7, r9
 800447e:	010b      	lsls	r3, r1, #4
 8004480:	4463      	add	r3, ip
 8004482:	3101      	adds	r1, #1
 8004484:	605f      	str	r7, [r3, #4]
 8004486:	6161      	str	r1, [r4, #20]
 8004488:	4641      	mov	r1, r8
 800448a:	6098      	str	r0, [r3, #8]
 800448c:	7019      	strb	r1, [r3, #0]
 800448e:	60e5      	str	r5, [r4, #12]
 8004490:	3e02      	subs	r6, #2
 8004492:	2a00      	cmp	r2, #0
 8004494:	d100      	bne.n	8004498 <d_encoding+0x214>
 8004496:	e0ff      	b.n	8004698 <d_encoding+0x414>
 8004498:	213f      	movs	r1, #63	; 0x3f
 800449a:	0020      	movs	r0, r4
 800449c:	f7fd fdc0 	bl	8002020 <d_make_comp>
 80044a0:	1e02      	subs	r2, r0, #0
 80044a2:	d100      	bne.n	80044a6 <d_encoding+0x222>
 80044a4:	e75f      	b.n	8004366 <d_encoding+0xe2>
 80044a6:	2e00      	cmp	r6, #0
 80044a8:	dcce      	bgt.n	8004448 <d_encoding+0x1c4>
 80044aa:	2300      	movs	r3, #0
 80044ac:	213e      	movs	r1, #62	; 0x3e
 80044ae:	0020      	movs	r0, r4
 80044b0:	f7fd fdb6 	bl	8002020 <d_make_comp>
 80044b4:	0005      	movs	r5, r0
 80044b6:	e706      	b.n	80042c6 <d_encoding+0x42>
 80044b8:	2100      	movs	r1, #0
 80044ba:	0020      	movs	r0, r4
 80044bc:	f7ff fee2 	bl	8004284 <d_encoding>
 80044c0:	2300      	movs	r3, #0
 80044c2:	0002      	movs	r2, r0
 80044c4:	2117      	movs	r1, #23
 80044c6:	0020      	movs	r0, r4
 80044c8:	f7fd fdaa 	bl	8002020 <d_make_comp>
 80044cc:	0005      	movs	r5, r0
 80044ce:	e6fa      	b.n	80042c6 <d_encoding+0x42>
 80044d0:	2176      	movs	r1, #118	; 0x76
 80044d2:	0020      	movs	r0, r4
 80044d4:	f7fe f926 	bl	8002724 <d_call_offset>
 80044d8:	2800      	cmp	r0, #0
 80044da:	d100      	bne.n	80044de <d_encoding+0x25a>
 80044dc:	e743      	b.n	8004366 <d_encoding+0xe2>
 80044de:	2100      	movs	r1, #0
 80044e0:	0020      	movs	r0, r4
 80044e2:	f7ff fecf 	bl	8004284 <d_encoding>
 80044e6:	2300      	movs	r3, #0
 80044e8:	0002      	movs	r2, r0
 80044ea:	2110      	movs	r1, #16
 80044ec:	0020      	movs	r0, r4
 80044ee:	f7fd fd97 	bl	8002020 <d_make_comp>
 80044f2:	0005      	movs	r5, r0
 80044f4:	e6e7      	b.n	80042c6 <d_encoding+0x42>
 80044f6:	0020      	movs	r0, r4
 80044f8:	f7ff f826 	bl	8003548 <d_type>
 80044fc:	0005      	movs	r5, r0
 80044fe:	0020      	movs	r0, r4
 8004500:	300c      	adds	r0, #12
 8004502:	f7fd fe49 	bl	8002198 <d_number.isra.1>
 8004506:	2800      	cmp	r0, #0
 8004508:	da00      	bge.n	800450c <d_encoding+0x288>
 800450a:	e72c      	b.n	8004366 <d_encoding+0xe2>
 800450c:	68e3      	ldr	r3, [r4, #12]
 800450e:	781a      	ldrb	r2, [r3, #0]
 8004510:	2a5f      	cmp	r2, #95	; 0x5f
 8004512:	d000      	beq.n	8004516 <d_encoding+0x292>
 8004514:	e727      	b.n	8004366 <d_encoding+0xe2>
 8004516:	3301      	adds	r3, #1
 8004518:	60e3      	str	r3, [r4, #12]
 800451a:	0020      	movs	r0, r4
 800451c:	f7ff f814 	bl	8003548 <d_type>
 8004520:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8004522:	3305      	adds	r3, #5
 8004524:	0002      	movs	r2, r0
 8004526:	6323      	str	r3, [r4, #48]	; 0x30
 8004528:	210b      	movs	r1, #11
 800452a:	002b      	movs	r3, r5
 800452c:	0020      	movs	r0, r4
 800452e:	f7fd fd77 	bl	8002020 <d_make_comp>
 8004532:	0005      	movs	r5, r0
 8004534:	e6c7      	b.n	80042c6 <d_encoding+0x42>
 8004536:	0020      	movs	r0, r4
 8004538:	f7fe fe62 	bl	8003200 <d_name>
 800453c:	2300      	movs	r3, #0
 800453e:	0002      	movs	r2, r0
 8004540:	2114      	movs	r1, #20
 8004542:	0020      	movs	r0, r4
 8004544:	f7fd fd6c 	bl	8002020 <d_make_comp>
 8004548:	0005      	movs	r5, r0
 800454a:	e6bc      	b.n	80042c6 <d_encoding+0x42>
 800454c:	0020      	movs	r0, r4
 800454e:	f7fe fffb 	bl	8003548 <d_type>
 8004552:	2300      	movs	r3, #0
 8004554:	0002      	movs	r2, r0
 8004556:	210e      	movs	r1, #14
 8004558:	0020      	movs	r0, r4
 800455a:	f7fd fd61 	bl	8002020 <d_make_comp>
 800455e:	0005      	movs	r5, r0
 8004560:	e6b1      	b.n	80042c6 <d_encoding+0x42>
 8004562:	2168      	movs	r1, #104	; 0x68
 8004564:	0020      	movs	r0, r4
 8004566:	f7fe f8dd 	bl	8002724 <d_call_offset>
 800456a:	2800      	cmp	r0, #0
 800456c:	d100      	bne.n	8004570 <d_encoding+0x2ec>
 800456e:	e6fa      	b.n	8004366 <d_encoding+0xe2>
 8004570:	2100      	movs	r1, #0
 8004572:	0020      	movs	r0, r4
 8004574:	f7ff fe86 	bl	8004284 <d_encoding>
 8004578:	2300      	movs	r3, #0
 800457a:	0002      	movs	r2, r0
 800457c:	210f      	movs	r1, #15
 800457e:	0020      	movs	r0, r4
 8004580:	f7fd fd4e 	bl	8002020 <d_make_comp>
 8004584:	0005      	movs	r5, r0
 8004586:	e69e      	b.n	80042c6 <d_encoding+0x42>
 8004588:	2100      	movs	r1, #0
 800458a:	0020      	movs	r0, r4
 800458c:	f7fe f8ca 	bl	8002724 <d_call_offset>
 8004590:	2800      	cmp	r0, #0
 8004592:	d100      	bne.n	8004596 <d_encoding+0x312>
 8004594:	e6e7      	b.n	8004366 <d_encoding+0xe2>
 8004596:	2100      	movs	r1, #0
 8004598:	0020      	movs	r0, r4
 800459a:	f7fe f8c3 	bl	8002724 <d_call_offset>
 800459e:	2800      	cmp	r0, #0
 80045a0:	d100      	bne.n	80045a4 <d_encoding+0x320>
 80045a2:	e6e0      	b.n	8004366 <d_encoding+0xe2>
 80045a4:	2100      	movs	r1, #0
 80045a6:	0020      	movs	r0, r4
 80045a8:	f7ff fe6c 	bl	8004284 <d_encoding>
 80045ac:	2300      	movs	r3, #0
 80045ae:	0002      	movs	r2, r0
 80045b0:	2111      	movs	r1, #17
 80045b2:	0020      	movs	r0, r4
 80045b4:	f7fd fd34 	bl	8002020 <d_make_comp>
 80045b8:	0005      	movs	r5, r0
 80045ba:	e684      	b.n	80042c6 <d_encoding+0x42>
 80045bc:	0020      	movs	r0, r4
 80045be:	f7fe fe1f 	bl	8003200 <d_name>
 80045c2:	2300      	movs	r3, #0
 80045c4:	0002      	movs	r2, r0
 80045c6:	2115      	movs	r1, #21
 80045c8:	0020      	movs	r0, r4
 80045ca:	f7fd fd29 	bl	8002020 <d_make_comp>
 80045ce:	0005      	movs	r5, r0
 80045d0:	e679      	b.n	80042c6 <d_encoding+0x42>
 80045d2:	310f      	adds	r1, #15
 80045d4:	6321      	str	r1, [r4, #48]	; 0x30
 80045d6:	0020      	movs	r0, r4
 80045d8:	f7fe ffb6 	bl	8003548 <d_type>
 80045dc:	2300      	movs	r3, #0
 80045de:	0002      	movs	r2, r0
 80045e0:	2109      	movs	r1, #9
 80045e2:	0020      	movs	r0, r4
 80045e4:	f7fd fd1c 	bl	8002020 <d_make_comp>
 80045e8:	0005      	movs	r5, r0
 80045ea:	e66c      	b.n	80042c6 <d_encoding+0x42>
 80045ec:	310a      	adds	r1, #10
 80045ee:	6321      	str	r1, [r4, #48]	; 0x30
 80045f0:	0020      	movs	r0, r4
 80045f2:	f7fe ffa9 	bl	8003548 <d_type>
 80045f6:	2300      	movs	r3, #0
 80045f8:	0002      	movs	r2, r0
 80045fa:	210a      	movs	r1, #10
 80045fc:	0020      	movs	r0, r4
 80045fe:	f7fd fd0f 	bl	8002020 <d_make_comp>
 8004602:	0005      	movs	r5, r0
 8004604:	e65f      	b.n	80042c6 <d_encoding+0x42>
 8004606:	0020      	movs	r0, r4
 8004608:	f7fe ff9e 	bl	8003548 <d_type>
 800460c:	2300      	movs	r3, #0
 800460e:	0002      	movs	r2, r0
 8004610:	210d      	movs	r1, #13
 8004612:	0020      	movs	r0, r4
 8004614:	f7fd fd04 	bl	8002020 <d_make_comp>
 8004618:	0005      	movs	r5, r0
 800461a:	e654      	b.n	80042c6 <d_encoding+0x42>
 800461c:	0020      	movs	r0, r4
 800461e:	f7fe ff93 	bl	8003548 <d_type>
 8004622:	2300      	movs	r3, #0
 8004624:	0002      	movs	r2, r0
 8004626:	2112      	movs	r1, #18
 8004628:	0020      	movs	r0, r4
 800462a:	f7fd fcf9 	bl	8002020 <d_make_comp>
 800462e:	0005      	movs	r5, r0
 8004630:	e649      	b.n	80042c6 <d_encoding+0x42>
 8004632:	0020      	movs	r0, r4
 8004634:	f7fe ff88 	bl	8003548 <d_type>
 8004638:	2300      	movs	r3, #0
 800463a:	0002      	movs	r2, r0
 800463c:	210c      	movs	r1, #12
 800463e:	0020      	movs	r0, r4
 8004640:	f7fd fcee 	bl	8002020 <d_make_comp>
 8004644:	0005      	movs	r5, r0
 8004646:	e63e      	b.n	80042c6 <d_encoding+0x42>
 8004648:	2100      	movs	r1, #0
 800464a:	e008      	b.n	800465e <d_encoding+0x3da>
 800464c:	080207f8 	.word	0x080207f8
 8004650:	080208c0 	.word	0x080208c0
 8004654:	5c6b      	ldrb	r3, [r5, r1]
 8004656:	2b24      	cmp	r3, #36	; 0x24
 8004658:	d004      	beq.n	8004664 <d_encoding+0x3e0>
 800465a:	2b00      	cmp	r3, #0
 800465c:	d002      	beq.n	8004664 <d_encoding+0x3e0>
 800465e:	3101      	adds	r1, #1
 8004660:	42b1      	cmp	r1, r6
 8004662:	dbf7      	blt.n	8004654 <d_encoding+0x3d0>
 8004664:	6960      	ldr	r0, [r4, #20]
 8004666:	69a3      	ldr	r3, [r4, #24]
 8004668:	4298      	cmp	r0, r3
 800466a:	db05      	blt.n	8004678 <d_encoding+0x3f4>
 800466c:	68e3      	ldr	r3, [r4, #12]
 800466e:	469c      	mov	ip, r3
 8004670:	4461      	add	r1, ip
 8004672:	60e1      	str	r1, [r4, #12]
 8004674:	2500      	movs	r5, #0
 8004676:	e626      	b.n	80042c6 <d_encoding+0x42>
 8004678:	6927      	ldr	r7, [r4, #16]
 800467a:	0103      	lsls	r3, r0, #4
 800467c:	46bc      	mov	ip, r7
 800467e:	3001      	adds	r0, #1
 8004680:	6160      	str	r0, [r4, #20]
 8004682:	4648      	mov	r0, r9
 8004684:	4463      	add	r3, ip
 8004686:	6058      	str	r0, [r3, #4]
 8004688:	7018      	strb	r0, [r3, #0]
 800468a:	68e0      	ldr	r0, [r4, #12]
 800468c:	609d      	str	r5, [r3, #8]
 800468e:	1845      	adds	r5, r0, r1
 8004690:	60d9      	str	r1, [r3, #12]
 8004692:	1a76      	subs	r6, r6, r1
 8004694:	60e5      	str	r5, [r4, #12]
 8004696:	e6fc      	b.n	8004492 <d_encoding+0x20e>
 8004698:	001a      	movs	r2, r3
 800469a:	e704      	b.n	80044a6 <d_encoding+0x222>
 800469c:	202f      	movs	r0, #47	; 0x2f
 800469e:	e6e4      	b.n	800446a <d_encoding+0x1e6>
 80046a0:	202e      	movs	r0, #46	; 0x2e
 80046a2:	e6e2      	b.n	800446a <d_encoding+0x1e6>
 80046a4:	f7ff fdee 	bl	8004284 <d_encoding>
 80046a8:	2300      	movs	r3, #0
 80046aa:	0002      	movs	r2, r0
 80046ac:	2149      	movs	r1, #73	; 0x49
 80046ae:	0020      	movs	r0, r4
 80046b0:	f7fd fcb6 	bl	8002020 <d_make_comp>
 80046b4:	0005      	movs	r5, r0
 80046b6:	e606      	b.n	80042c6 <d_encoding+0x42>

080046b8 <d_expr_primary>:
 80046b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80046ba:	68c2      	ldr	r2, [r0, #12]
 80046bc:	7813      	ldrb	r3, [r2, #0]
 80046be:	0005      	movs	r5, r0
 80046c0:	2b4c      	cmp	r3, #76	; 0x4c
 80046c2:	d143      	bne.n	800474c <d_expr_primary+0x94>
 80046c4:	1c53      	adds	r3, r2, #1
 80046c6:	60c3      	str	r3, [r0, #12]
 80046c8:	7851      	ldrb	r1, [r2, #1]
 80046ca:	295f      	cmp	r1, #95	; 0x5f
 80046cc:	d040      	beq.n	8004750 <d_expr_primary+0x98>
 80046ce:	295a      	cmp	r1, #90	; 0x5a
 80046d0:	d03e      	beq.n	8004750 <d_expr_primary+0x98>
 80046d2:	f7fe ff39 	bl	8003548 <d_type>
 80046d6:	2800      	cmp	r0, #0
 80046d8:	d038      	beq.n	800474c <d_expr_primary+0x94>
 80046da:	7803      	ldrb	r3, [r0, #0]
 80046dc:	2b27      	cmp	r3, #39	; 0x27
 80046de:	d051      	beq.n	8004784 <d_expr_primary+0xcc>
 80046e0:	68ee      	ldr	r6, [r5, #12]
 80046e2:	7833      	ldrb	r3, [r6, #0]
 80046e4:	213c      	movs	r1, #60	; 0x3c
 80046e6:	2b6e      	cmp	r3, #110	; 0x6e
 80046e8:	d104      	bne.n	80046f4 <d_expr_primary+0x3c>
 80046ea:	1c72      	adds	r2, r6, #1
 80046ec:	60ea      	str	r2, [r5, #12]
 80046ee:	7873      	ldrb	r3, [r6, #1]
 80046f0:	0016      	movs	r6, r2
 80046f2:	3101      	adds	r1, #1
 80046f4:	2b45      	cmp	r3, #69	; 0x45
 80046f6:	d04e      	beq.n	8004796 <d_expr_primary+0xde>
 80046f8:	2b00      	cmp	r3, #0
 80046fa:	d027      	beq.n	800474c <d_expr_primary+0x94>
 80046fc:	1c73      	adds	r3, r6, #1
 80046fe:	e002      	b.n	8004706 <d_expr_primary+0x4e>
 8004700:	3301      	adds	r3, #1
 8004702:	2c00      	cmp	r4, #0
 8004704:	d022      	beq.n	800474c <d_expr_primary+0x94>
 8004706:	60eb      	str	r3, [r5, #12]
 8004708:	781c      	ldrb	r4, [r3, #0]
 800470a:	2c45      	cmp	r4, #69	; 0x45
 800470c:	d1f8      	bne.n	8004700 <d_expr_primary+0x48>
 800470e:	1b9c      	subs	r4, r3, r6
 8004710:	696a      	ldr	r2, [r5, #20]
 8004712:	69ab      	ldr	r3, [r5, #24]
 8004714:	429a      	cmp	r2, r3
 8004716:	da2c      	bge.n	8004772 <d_expr_primary+0xba>
 8004718:	692f      	ldr	r7, [r5, #16]
 800471a:	46bc      	mov	ip, r7
 800471c:	2700      	movs	r7, #0
 800471e:	0113      	lsls	r3, r2, #4
 8004720:	4463      	add	r3, ip
 8004722:	3201      	adds	r2, #1
 8004724:	605f      	str	r7, [r3, #4]
 8004726:	616a      	str	r2, [r5, #20]
 8004728:	2e00      	cmp	r6, #0
 800472a:	d022      	beq.n	8004772 <d_expr_primary+0xba>
 800472c:	4262      	negs	r2, r4
 800472e:	4162      	adcs	r2, r4
 8004730:	2a00      	cmp	r2, #0
 8004732:	d11e      	bne.n	8004772 <d_expr_primary+0xba>
 8004734:	605a      	str	r2, [r3, #4]
 8004736:	701a      	strb	r2, [r3, #0]
 8004738:	609e      	str	r6, [r3, #8]
 800473a:	60dc      	str	r4, [r3, #12]
 800473c:	0002      	movs	r2, r0
 800473e:	0028      	movs	r0, r5
 8004740:	f7fd fc6e 	bl	8002020 <d_make_comp>
 8004744:	68eb      	ldr	r3, [r5, #12]
 8004746:	781a      	ldrb	r2, [r3, #0]
 8004748:	2a45      	cmp	r2, #69	; 0x45
 800474a:	d00d      	beq.n	8004768 <d_expr_primary+0xb0>
 800474c:	2000      	movs	r0, #0
 800474e:	e00d      	b.n	800476c <d_expr_primary+0xb4>
 8004750:	295f      	cmp	r1, #95	; 0x5f
 8004752:	d010      	beq.n	8004776 <d_expr_primary+0xbe>
 8004754:	3301      	adds	r3, #1
 8004756:	60eb      	str	r3, [r5, #12]
 8004758:	2100      	movs	r1, #0
 800475a:	0028      	movs	r0, r5
 800475c:	f7ff fd92 	bl	8004284 <d_encoding>
 8004760:	68eb      	ldr	r3, [r5, #12]
 8004762:	781a      	ldrb	r2, [r3, #0]
 8004764:	2a45      	cmp	r2, #69	; 0x45
 8004766:	d1f1      	bne.n	800474c <d_expr_primary+0x94>
 8004768:	3301      	adds	r3, #1
 800476a:	60eb      	str	r3, [r5, #12]
 800476c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800476e:	bc02      	pop	{r1}
 8004770:	4708      	bx	r1
 8004772:	2300      	movs	r3, #0
 8004774:	e7e2      	b.n	800473c <d_expr_primary+0x84>
 8004776:	1c93      	adds	r3, r2, #2
 8004778:	60eb      	str	r3, [r5, #12]
 800477a:	7892      	ldrb	r2, [r2, #2]
 800477c:	2000      	movs	r0, #0
 800477e:	2a5a      	cmp	r2, #90	; 0x5a
 8004780:	d1f0      	bne.n	8004764 <d_expr_primary+0xac>
 8004782:	e7e7      	b.n	8004754 <d_expr_primary+0x9c>
 8004784:	6883      	ldr	r3, [r0, #8]
 8004786:	7c1a      	ldrb	r2, [r3, #16]
 8004788:	2a00      	cmp	r2, #0
 800478a:	d0a9      	beq.n	80046e0 <d_expr_primary+0x28>
 800478c:	685b      	ldr	r3, [r3, #4]
 800478e:	6b2a      	ldr	r2, [r5, #48]	; 0x30
 8004790:	1ad3      	subs	r3, r2, r3
 8004792:	632b      	str	r3, [r5, #48]	; 0x30
 8004794:	e7a4      	b.n	80046e0 <d_expr_primary+0x28>
 8004796:	2400      	movs	r4, #0
 8004798:	e7ba      	b.n	8004710 <d_expr_primary+0x58>
 800479a:	46c0      	nop			; (mov r8, r8)

0800479c <d_print_comp>:
 800479c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800479e:	464e      	mov	r6, r9
 80047a0:	4645      	mov	r5, r8
 80047a2:	46de      	mov	lr, fp
 80047a4:	4657      	mov	r7, sl
 80047a6:	b5e0      	push	{r5, r6, r7, lr}
 80047a8:	0004      	movs	r4, r0
 80047aa:	b099      	sub	sp, #100	; 0x64
 80047ac:	000e      	movs	r6, r1
 80047ae:	1e15      	subs	r5, r2, #0
 80047b0:	d002      	beq.n	80047b8 <d_print_comp+0x1c>
 80047b2:	6852      	ldr	r2, [r2, #4]
 80047b4:	2a01      	cmp	r2, #1
 80047b6:	dd0c      	ble.n	80047d2 <d_print_comp+0x36>
 80047b8:	238c      	movs	r3, #140	; 0x8c
 80047ba:	2201      	movs	r2, #1
 80047bc:	005b      	lsls	r3, r3, #1
 80047be:	50e2      	str	r2, [r4, r3]
 80047c0:	b019      	add	sp, #100	; 0x64
 80047c2:	bc3c      	pop	{r2, r3, r4, r5}
 80047c4:	4690      	mov	r8, r2
 80047c6:	4699      	mov	r9, r3
 80047c8:	46a2      	mov	sl, r4
 80047ca:	46ab      	mov	fp, r5
 80047cc:	bcf0      	pop	{r4, r5, r6, r7}
 80047ce:	bc01      	pop	{r0}
 80047d0:	4700      	bx	r0
 80047d2:	ab04      	add	r3, sp, #16
 80047d4:	2194      	movs	r1, #148	; 0x94
 80047d6:	469b      	mov	fp, r3
 80047d8:	0049      	lsls	r1, r1, #1
 80047da:	5843      	ldr	r3, [r0, r1]
 80047dc:	4658      	mov	r0, fp
 80047de:	3201      	adds	r2, #1
 80047e0:	606a      	str	r2, [r5, #4]
 80047e2:	5060      	str	r0, [r4, r1]
 80047e4:	3910      	subs	r1, #16
 80047e6:	5867      	ldr	r7, [r4, r1]
 80047e8:	9504      	str	r5, [sp, #16]
 80047ea:	6043      	str	r3, [r0, #4]
 80047ec:	2f00      	cmp	r7, #0
 80047ee:	d000      	beq.n	80047f2 <d_print_comp+0x56>
 80047f0:	e087      	b.n	8004902 <d_print_comp+0x166>
 80047f2:	7829      	ldrb	r1, [r5, #0]
 80047f4:	4689      	mov	r9, r1
 80047f6:	294f      	cmp	r1, #79	; 0x4f
 80047f8:	d901      	bls.n	80047fe <d_print_comp+0x62>
 80047fa:	f001 fc76 	bl	80060ea <d_print_comp+0x194e>
 80047fe:	48dc      	ldr	r0, [pc, #880]	; (8004b70 <d_print_comp+0x3d4>)
 8004800:	0089      	lsls	r1, r1, #2
 8004802:	5841      	ldr	r1, [r0, r1]
 8004804:	468f      	mov	pc, r1
 8004806:	002b      	movs	r3, r5
 8004808:	0031      	movs	r1, r6
 800480a:	330c      	adds	r3, #12
 800480c:	0020      	movs	r0, r4
 800480e:	f004 f967 	bl	8008ae0 <d_maybe_print_fold_expression.isra.20>
 8004812:	1e07      	subs	r7, r0, #0
 8004814:	d001      	beq.n	800481a <d_print_comp+0x7e>
 8004816:	f002 ff81 	bl	800771c <d_print_comp+0x2f80>
 800481a:	68ab      	ldr	r3, [r5, #8]
 800481c:	781a      	ldrb	r2, [r3, #0]
 800481e:	2a31      	cmp	r2, #49	; 0x31
 8004820:	d101      	bne.n	8004826 <d_print_comp+0x8a>
 8004822:	f002 ff4d 	bl	80076c0 <d_print_comp+0x2f24>
 8004826:	4ad3      	ldr	r2, [pc, #844]	; (8004b74 <d_print_comp+0x3d8>)
 8004828:	689b      	ldr	r3, [r3, #8]
 800482a:	0011      	movs	r1, r2
 800482c:	6818      	ldr	r0, [r3, #0]
 800482e:	4690      	mov	r8, r2
 8004830:	f004 fdea 	bl	8009408 <strcmp>
 8004834:	68eb      	ldr	r3, [r5, #12]
 8004836:	689a      	ldr	r2, [r3, #8]
 8004838:	2800      	cmp	r0, #0
 800483a:	d104      	bne.n	8004846 <d_print_comp+0xaa>
 800483c:	7813      	ldrb	r3, [r2, #0]
 800483e:	2b03      	cmp	r3, #3
 8004840:	d101      	bne.n	8004846 <d_print_comp+0xaa>
 8004842:	f003 f8ed 	bl	8007a20 <d_print_comp+0x3284>
 8004846:	0031      	movs	r1, r6
 8004848:	0020      	movs	r0, r4
 800484a:	f004 f8ef 	bl	8008a2c <d_print_subexpr>
 800484e:	68ab      	ldr	r3, [r5, #8]
 8004850:	4699      	mov	r9, r3
 8004852:	689b      	ldr	r3, [r3, #8]
 8004854:	681b      	ldr	r3, [r3, #0]
 8004856:	49c8      	ldr	r1, [pc, #800]	; (8004b78 <d_print_comp+0x3dc>)
 8004858:	0018      	movs	r0, r3
 800485a:	469a      	mov	sl, r3
 800485c:	f004 fdd4 	bl	8009408 <strcmp>
 8004860:	1e07      	subs	r7, r0, #0
 8004862:	d001      	beq.n	8004868 <d_print_comp+0xcc>
 8004864:	f002 ff1d 	bl	80076a2 <d_print_comp+0x2f06>
 8004868:	2380      	movs	r3, #128	; 0x80
 800486a:	005b      	lsls	r3, r3, #1
 800486c:	58e1      	ldr	r1, [r4, r3]
 800486e:	4698      	mov	r8, r3
 8004870:	29ff      	cmp	r1, #255	; 0xff
 8004872:	d10f      	bne.n	8004894 <d_print_comp+0xf8>
 8004874:	2286      	movs	r2, #134	; 0x86
 8004876:	5460      	strb	r0, [r4, r1]
 8004878:	3308      	adds	r3, #8
 800487a:	0052      	lsls	r2, r2, #1
 800487c:	58e3      	ldr	r3, [r4, r3]
 800487e:	58a2      	ldr	r2, [r4, r2]
 8004880:	0020      	movs	r0, r4
 8004882:	f004 fcbd 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8004886:	2292      	movs	r2, #146	; 0x92
 8004888:	4643      	mov	r3, r8
 800488a:	0052      	lsls	r2, r2, #1
 800488c:	50e7      	str	r7, [r4, r3]
 800488e:	58a3      	ldr	r3, [r4, r2]
 8004890:	3301      	adds	r3, #1
 8004892:	50a3      	str	r3, [r4, r2]
 8004894:	2780      	movs	r7, #128	; 0x80
 8004896:	007f      	lsls	r7, r7, #1
 8004898:	59e2      	ldr	r2, [r4, r7]
 800489a:	1c53      	adds	r3, r2, #1
 800489c:	51e3      	str	r3, [r4, r7]
 800489e:	235b      	movs	r3, #91	; 0x5b
 80048a0:	54a3      	strb	r3, [r4, r2]
 80048a2:	2282      	movs	r2, #130	; 0x82
 80048a4:	0052      	lsls	r2, r2, #1
 80048a6:	54a3      	strb	r3, [r4, r2]
 80048a8:	68eb      	ldr	r3, [r5, #12]
 80048aa:	0031      	movs	r1, r6
 80048ac:	68da      	ldr	r2, [r3, #12]
 80048ae:	0020      	movs	r0, r4
 80048b0:	f7ff ff74 	bl	800479c <d_print_comp>
 80048b4:	59e1      	ldr	r1, [r4, r7]
 80048b6:	29ff      	cmp	r1, #255	; 0xff
 80048b8:	d110      	bne.n	80048dc <d_print_comp+0x140>
 80048ba:	2600      	movs	r6, #0
 80048bc:	2384      	movs	r3, #132	; 0x84
 80048be:	2286      	movs	r2, #134	; 0x86
 80048c0:	5466      	strb	r6, [r4, r1]
 80048c2:	005b      	lsls	r3, r3, #1
 80048c4:	0052      	lsls	r2, r2, #1
 80048c6:	58e3      	ldr	r3, [r4, r3]
 80048c8:	58a2      	ldr	r2, [r4, r2]
 80048ca:	0020      	movs	r0, r4
 80048cc:	f004 fc98 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 80048d0:	2292      	movs	r2, #146	; 0x92
 80048d2:	0052      	lsls	r2, r2, #1
 80048d4:	58a3      	ldr	r3, [r4, r2]
 80048d6:	3301      	adds	r3, #1
 80048d8:	51e6      	str	r6, [r4, r7]
 80048da:	50a3      	str	r3, [r4, r2]
 80048dc:	2380      	movs	r3, #128	; 0x80
 80048de:	005b      	lsls	r3, r3, #1
 80048e0:	58e2      	ldr	r2, [r4, r3]
 80048e2:	1c51      	adds	r1, r2, #1
 80048e4:	50e1      	str	r1, [r4, r3]
 80048e6:	3ba3      	subs	r3, #163	; 0xa3
 80048e8:	54a3      	strb	r3, [r4, r2]
 80048ea:	2282      	movs	r2, #130	; 0x82
 80048ec:	0052      	lsls	r2, r2, #1
 80048ee:	54a3      	strb	r3, [r4, r2]
 80048f0:	68ab      	ldr	r3, [r5, #8]
 80048f2:	781a      	ldrb	r2, [r3, #0]
 80048f4:	2a31      	cmp	r2, #49	; 0x31
 80048f6:	d101      	bne.n	80048fc <d_print_comp+0x160>
 80048f8:	f002 ffae 	bl	8007858 <d_print_comp+0x30bc>
 80048fc:	465b      	mov	r3, fp
 80048fe:	686a      	ldr	r2, [r5, #4]
 8004900:	685b      	ldr	r3, [r3, #4]
 8004902:	2194      	movs	r1, #148	; 0x94
 8004904:	3a01      	subs	r2, #1
 8004906:	0049      	lsls	r1, r1, #1
 8004908:	5063      	str	r3, [r4, r1]
 800490a:	606a      	str	r2, [r5, #4]
 800490c:	e758      	b.n	80047c0 <d_print_comp+0x24>
 800490e:	68aa      	ldr	r2, [r5, #8]
 8004910:	0031      	movs	r1, r6
 8004912:	0020      	movs	r0, r4
 8004914:	f7ff ff42 	bl	800479c <d_print_comp>
 8004918:	2380      	movs	r3, #128	; 0x80
 800491a:	2284      	movs	r2, #132	; 0x84
 800491c:	005b      	lsls	r3, r3, #1
 800491e:	0052      	lsls	r2, r2, #1
 8004920:	58e3      	ldr	r3, [r4, r3]
 8004922:	4f96      	ldr	r7, [pc, #600]	; (8004b7c <d_print_comp+0x3e0>)
 8004924:	4692      	mov	sl, r2
 8004926:	46a8      	mov	r8, r5
 8004928:	e021      	b.n	800496e <d_print_comp+0x1d2>
 800492a:	2200      	movs	r2, #0
 800492c:	54e2      	strb	r2, [r4, r3]
 800492e:	2386      	movs	r3, #134	; 0x86
 8004930:	005b      	lsls	r3, r3, #1
 8004932:	58e3      	ldr	r3, [r4, r3]
 8004934:	001a      	movs	r2, r3
 8004936:	9300      	str	r3, [sp, #0]
 8004938:	4653      	mov	r3, sl
 800493a:	21ff      	movs	r1, #255	; 0xff
 800493c:	58e3      	ldr	r3, [r4, r3]
 800493e:	0020      	movs	r0, r4
 8004940:	f004 fc5e 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8004944:	2292      	movs	r2, #146	; 0x92
 8004946:	0052      	lsls	r2, r2, #1
 8004948:	58a3      	ldr	r3, [r4, r2]
 800494a:	3301      	adds	r3, #1
 800494c:	50a3      	str	r3, [r4, r2]
 800494e:	2301      	movs	r3, #1
 8004950:	2200      	movs	r2, #0
 8004952:	2180      	movs	r1, #128	; 0x80
 8004954:	0049      	lsls	r1, r1, #1
 8004956:	5063      	str	r3, [r4, r1]
 8004958:	54a5      	strb	r5, [r4, r2]
 800495a:	2282      	movs	r2, #130	; 0x82
 800495c:	0052      	lsls	r2, r2, #1
 800495e:	54a5      	strb	r5, [r4, r2]
 8004960:	4a87      	ldr	r2, [pc, #540]	; (8004b80 <d_print_comp+0x3e4>)
 8004962:	3701      	adds	r7, #1
 8004964:	4689      	mov	r9, r1
 8004966:	42ba      	cmp	r2, r7
 8004968:	d101      	bne.n	800496e <d_print_comp+0x1d2>
 800496a:	f001 fe57 	bl	800661c <d_print_comp+0x1e80>
 800496e:	783d      	ldrb	r5, [r7, #0]
 8004970:	2bff      	cmp	r3, #255	; 0xff
 8004972:	d0da      	beq.n	800492a <d_print_comp+0x18e>
 8004974:	001a      	movs	r2, r3
 8004976:	3301      	adds	r3, #1
 8004978:	e7eb      	b.n	8004952 <d_print_comp+0x1b6>
 800497a:	68a9      	ldr	r1, [r5, #8]
 800497c:	0020      	movs	r0, r4
 800497e:	f7fd fe65 	bl	800264c <d_find_pack>
 8004982:	2300      	movs	r3, #0
 8004984:	9300      	str	r3, [sp, #0]
 8004986:	2300      	movs	r3, #0
 8004988:	2800      	cmp	r0, #0
 800498a:	d101      	bne.n	8004990 <d_print_comp+0x1f4>
 800498c:	f002 fd66 	bl	800745c <d_print_comp+0x2cc0>
 8004990:	7802      	ldrb	r2, [r0, #0]
 8004992:	2a2f      	cmp	r2, #47	; 0x2f
 8004994:	d001      	beq.n	800499a <d_print_comp+0x1fe>
 8004996:	f001 ff54 	bl	8006842 <d_print_comp+0x20a6>
 800499a:	6882      	ldr	r2, [r0, #8]
 800499c:	2a00      	cmp	r2, #0
 800499e:	d101      	bne.n	80049a4 <d_print_comp+0x208>
 80049a0:	f001 ff4f 	bl	8006842 <d_print_comp+0x20a6>
 80049a4:	68c0      	ldr	r0, [r0, #12]
 80049a6:	3301      	adds	r3, #1
 80049a8:	2800      	cmp	r0, #0
 80049aa:	d1f1      	bne.n	8004990 <d_print_comp+0x1f4>
 80049ac:	9300      	str	r3, [sp, #0]
 80049ae:	68ab      	ldr	r3, [r5, #8]
 80049b0:	9301      	str	r3, [sp, #4]
 80049b2:	46b9      	mov	r9, r7
 80049b4:	46b2      	mov	sl, r6
 80049b6:	9b00      	ldr	r3, [sp, #0]
 80049b8:	3b01      	subs	r3, #1
 80049ba:	9302      	str	r3, [sp, #8]
 80049bc:	9503      	str	r5, [sp, #12]
 80049be:	2390      	movs	r3, #144	; 0x90
 80049c0:	464a      	mov	r2, r9
 80049c2:	005b      	lsls	r3, r3, #1
 80049c4:	50e2      	str	r2, [r4, r3]
 80049c6:	4651      	mov	r1, sl
 80049c8:	9a01      	ldr	r2, [sp, #4]
 80049ca:	0020      	movs	r0, r4
 80049cc:	f7ff fee6 	bl	800479c <d_print_comp>
 80049d0:	9b02      	ldr	r3, [sp, #8]
 80049d2:	4599      	cmp	r9, r3
 80049d4:	db01      	blt.n	80049da <d_print_comp+0x23e>
 80049d6:	f001 fb92 	bl	80060fe <d_print_comp+0x1962>
 80049da:	2380      	movs	r3, #128	; 0x80
 80049dc:	2286      	movs	r2, #134	; 0x86
 80049de:	2784      	movs	r7, #132	; 0x84
 80049e0:	005b      	lsls	r3, r3, #1
 80049e2:	0052      	lsls	r2, r2, #1
 80049e4:	58e3      	ldr	r3, [r4, r3]
 80049e6:	2600      	movs	r6, #0
 80049e8:	4690      	mov	r8, r2
 80049ea:	007f      	lsls	r7, r7, #1
 80049ec:	e01a      	b.n	8004a24 <d_print_comp+0x288>
 80049ee:	2200      	movs	r2, #0
 80049f0:	54e2      	strb	r2, [r4, r3]
 80049f2:	4643      	mov	r3, r8
 80049f4:	21ff      	movs	r1, #255	; 0xff
 80049f6:	58e2      	ldr	r2, [r4, r3]
 80049f8:	0020      	movs	r0, r4
 80049fa:	59e3      	ldr	r3, [r4, r7]
 80049fc:	f004 fc00 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8004a00:	2292      	movs	r2, #146	; 0x92
 8004a02:	0052      	lsls	r2, r2, #1
 8004a04:	58a3      	ldr	r3, [r4, r2]
 8004a06:	3301      	adds	r3, #1
 8004a08:	50a3      	str	r3, [r4, r2]
 8004a0a:	2100      	movs	r1, #0
 8004a0c:	2301      	movs	r3, #1
 8004a0e:	2280      	movs	r2, #128	; 0x80
 8004a10:	0052      	lsls	r2, r2, #1
 8004a12:	50a3      	str	r3, [r4, r2]
 8004a14:	3204      	adds	r2, #4
 8004a16:	5465      	strb	r5, [r4, r1]
 8004a18:	54a5      	strb	r5, [r4, r2]
 8004a1a:	2e01      	cmp	r6, #1
 8004a1c:	d101      	bne.n	8004a22 <d_print_comp+0x286>
 8004a1e:	f001 fb6e 	bl	80060fe <d_print_comp+0x1962>
 8004a22:	2601      	movs	r6, #1
 8004a24:	4a57      	ldr	r2, [pc, #348]	; (8004b84 <d_print_comp+0x3e8>)
 8004a26:	5d95      	ldrb	r5, [r2, r6]
 8004a28:	2bff      	cmp	r3, #255	; 0xff
 8004a2a:	d0e0      	beq.n	80049ee <d_print_comp+0x252>
 8004a2c:	0019      	movs	r1, r3
 8004a2e:	3301      	adds	r3, #1
 8004a30:	e7ed      	b.n	8004a0e <d_print_comp+0x272>
 8004a32:	2286      	movs	r2, #134	; 0x86
 8004a34:	2380      	movs	r3, #128	; 0x80
 8004a36:	0052      	lsls	r2, r2, #1
 8004a38:	005b      	lsls	r3, r3, #1
 8004a3a:	4692      	mov	sl, r2
 8004a3c:	3a04      	subs	r2, #4
 8004a3e:	58e3      	ldr	r3, [r4, r3]
 8004a40:	4f51      	ldr	r7, [pc, #324]	; (8004b88 <d_print_comp+0x3ec>)
 8004a42:	4691      	mov	r9, r2
 8004a44:	46a8      	mov	r8, r5
 8004a46:	e01d      	b.n	8004a84 <d_print_comp+0x2e8>
 8004a48:	2200      	movs	r2, #0
 8004a4a:	54e2      	strb	r2, [r4, r3]
 8004a4c:	4653      	mov	r3, sl
 8004a4e:	58e2      	ldr	r2, [r4, r3]
 8004a50:	464b      	mov	r3, r9
 8004a52:	21ff      	movs	r1, #255	; 0xff
 8004a54:	58e3      	ldr	r3, [r4, r3]
 8004a56:	0020      	movs	r0, r4
 8004a58:	f004 fbd2 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8004a5c:	2292      	movs	r2, #146	; 0x92
 8004a5e:	0052      	lsls	r2, r2, #1
 8004a60:	58a3      	ldr	r3, [r4, r2]
 8004a62:	3301      	adds	r3, #1
 8004a64:	50a3      	str	r3, [r4, r2]
 8004a66:	2301      	movs	r3, #1
 8004a68:	2200      	movs	r2, #0
 8004a6a:	2180      	movs	r1, #128	; 0x80
 8004a6c:	0049      	lsls	r1, r1, #1
 8004a6e:	5063      	str	r3, [r4, r1]
 8004a70:	54a5      	strb	r5, [r4, r2]
 8004a72:	2282      	movs	r2, #130	; 0x82
 8004a74:	0052      	lsls	r2, r2, #1
 8004a76:	54a5      	strb	r5, [r4, r2]
 8004a78:	4a44      	ldr	r2, [pc, #272]	; (8004b8c <d_print_comp+0x3f0>)
 8004a7a:	3701      	adds	r7, #1
 8004a7c:	42ba      	cmp	r2, r7
 8004a7e:	d101      	bne.n	8004a84 <d_print_comp+0x2e8>
 8004a80:	f001 fb6c 	bl	800615c <d_print_comp+0x19c0>
 8004a84:	783d      	ldrb	r5, [r7, #0]
 8004a86:	2bff      	cmp	r3, #255	; 0xff
 8004a88:	d0de      	beq.n	8004a48 <d_print_comp+0x2ac>
 8004a8a:	001a      	movs	r2, r3
 8004a8c:	3301      	adds	r3, #1
 8004a8e:	e7ec      	b.n	8004a6a <d_print_comp+0x2ce>
 8004a90:	68aa      	ldr	r2, [r5, #8]
 8004a92:	0031      	movs	r1, r6
 8004a94:	0020      	movs	r0, r4
 8004a96:	f7ff fe81 	bl	800479c <d_print_comp>
 8004a9a:	2380      	movs	r3, #128	; 0x80
 8004a9c:	2284      	movs	r2, #132	; 0x84
 8004a9e:	005b      	lsls	r3, r3, #1
 8004aa0:	0052      	lsls	r2, r2, #1
 8004aa2:	58e3      	ldr	r3, [r4, r3]
 8004aa4:	2700      	movs	r7, #0
 8004aa6:	4692      	mov	sl, r2
 8004aa8:	46a8      	mov	r8, r5
 8004aaa:	e020      	b.n	8004aee <d_print_comp+0x352>
 8004aac:	2200      	movs	r2, #0
 8004aae:	54e2      	strb	r2, [r4, r3]
 8004ab0:	2386      	movs	r3, #134	; 0x86
 8004ab2:	005b      	lsls	r3, r3, #1
 8004ab4:	58e3      	ldr	r3, [r4, r3]
 8004ab6:	001a      	movs	r2, r3
 8004ab8:	9300      	str	r3, [sp, #0]
 8004aba:	4653      	mov	r3, sl
 8004abc:	21ff      	movs	r1, #255	; 0xff
 8004abe:	58e3      	ldr	r3, [r4, r3]
 8004ac0:	0020      	movs	r0, r4
 8004ac2:	f004 fb9d 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8004ac6:	2292      	movs	r2, #146	; 0x92
 8004ac8:	0052      	lsls	r2, r2, #1
 8004aca:	58a3      	ldr	r3, [r4, r2]
 8004acc:	3301      	adds	r3, #1
 8004ace:	50a3      	str	r3, [r4, r2]
 8004ad0:	2301      	movs	r3, #1
 8004ad2:	2200      	movs	r2, #0
 8004ad4:	2180      	movs	r1, #128	; 0x80
 8004ad6:	0049      	lsls	r1, r1, #1
 8004ad8:	5063      	str	r3, [r4, r1]
 8004ada:	54a5      	strb	r5, [r4, r2]
 8004adc:	2282      	movs	r2, #130	; 0x82
 8004ade:	3701      	adds	r7, #1
 8004ae0:	0052      	lsls	r2, r2, #1
 8004ae2:	4689      	mov	r9, r1
 8004ae4:	54a5      	strb	r5, [r4, r2]
 8004ae6:	2f05      	cmp	r7, #5
 8004ae8:	d101      	bne.n	8004aee <d_print_comp+0x352>
 8004aea:	f001 fdc2 	bl	8006672 <d_print_comp+0x1ed6>
 8004aee:	4a28      	ldr	r2, [pc, #160]	; (8004b90 <d_print_comp+0x3f4>)
 8004af0:	5dd5      	ldrb	r5, [r2, r7]
 8004af2:	2bff      	cmp	r3, #255	; 0xff
 8004af4:	d0da      	beq.n	8004aac <d_print_comp+0x310>
 8004af6:	001a      	movs	r2, r3
 8004af8:	3301      	adds	r3, #1
 8004afa:	e7eb      	b.n	8004ad4 <d_print_comp+0x338>
 8004afc:	2286      	movs	r2, #134	; 0x86
 8004afe:	2380      	movs	r3, #128	; 0x80
 8004b00:	0052      	lsls	r2, r2, #1
 8004b02:	005b      	lsls	r3, r3, #1
 8004b04:	4692      	mov	sl, r2
 8004b06:	3a04      	subs	r2, #4
 8004b08:	58e3      	ldr	r3, [r4, r3]
 8004b0a:	4f22      	ldr	r7, [pc, #136]	; (8004b94 <d_print_comp+0x3f8>)
 8004b0c:	4691      	mov	r9, r2
 8004b0e:	46a8      	mov	r8, r5
 8004b10:	e01d      	b.n	8004b4e <d_print_comp+0x3b2>
 8004b12:	2200      	movs	r2, #0
 8004b14:	54e2      	strb	r2, [r4, r3]
 8004b16:	4653      	mov	r3, sl
 8004b18:	58e2      	ldr	r2, [r4, r3]
 8004b1a:	464b      	mov	r3, r9
 8004b1c:	21ff      	movs	r1, #255	; 0xff
 8004b1e:	58e3      	ldr	r3, [r4, r3]
 8004b20:	0020      	movs	r0, r4
 8004b22:	f004 fb6d 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8004b26:	2292      	movs	r2, #146	; 0x92
 8004b28:	0052      	lsls	r2, r2, #1
 8004b2a:	58a3      	ldr	r3, [r4, r2]
 8004b2c:	3301      	adds	r3, #1
 8004b2e:	50a3      	str	r3, [r4, r2]
 8004b30:	2301      	movs	r3, #1
 8004b32:	2200      	movs	r2, #0
 8004b34:	2180      	movs	r1, #128	; 0x80
 8004b36:	0049      	lsls	r1, r1, #1
 8004b38:	5063      	str	r3, [r4, r1]
 8004b3a:	54a5      	strb	r5, [r4, r2]
 8004b3c:	2282      	movs	r2, #130	; 0x82
 8004b3e:	0052      	lsls	r2, r2, #1
 8004b40:	54a5      	strb	r5, [r4, r2]
 8004b42:	4a15      	ldr	r2, [pc, #84]	; (8004b98 <d_print_comp+0x3fc>)
 8004b44:	3701      	adds	r7, #1
 8004b46:	42ba      	cmp	r2, r7
 8004b48:	d101      	bne.n	8004b4e <d_print_comp+0x3b2>
 8004b4a:	f001 fd1d 	bl	8006588 <d_print_comp+0x1dec>
 8004b4e:	783d      	ldrb	r5, [r7, #0]
 8004b50:	2bff      	cmp	r3, #255	; 0xff
 8004b52:	d0de      	beq.n	8004b12 <d_print_comp+0x376>
 8004b54:	001a      	movs	r2, r3
 8004b56:	3301      	adds	r3, #1
 8004b58:	e7ec      	b.n	8004b34 <d_print_comp+0x398>
 8004b5a:	2286      	movs	r2, #134	; 0x86
 8004b5c:	2380      	movs	r3, #128	; 0x80
 8004b5e:	0052      	lsls	r2, r2, #1
 8004b60:	005b      	lsls	r3, r3, #1
 8004b62:	4691      	mov	r9, r2
 8004b64:	3a04      	subs	r2, #4
 8004b66:	58e3      	ldr	r3, [r4, r3]
 8004b68:	4e0c      	ldr	r6, [pc, #48]	; (8004b9c <d_print_comp+0x400>)
 8004b6a:	4692      	mov	sl, r2
 8004b6c:	e037      	b.n	8004bde <d_print_comp+0x442>
 8004b6e:	46c0      	nop			; (mov r8, r8)
 8004b70:	08020990 	.word	0x08020990
 8004b74:	08026d9c 	.word	0x08026d9c
 8004b78:	08026f9c 	.word	0x08026f9c
 8004b7c:	08027058 	.word	0x08027058
 8004b80:	08027060 	.word	0x08027060
 8004b84:	08026f70 	.word	0x08026f70
 8004b88:	08026f3c 	.word	0x08026f3c
 8004b8c:	08026f56 	.word	0x08026f56
 8004b90:	08026ddc 	.word	0x08026ddc
 8004b94:	08026f40 	.word	0x08026f40
 8004b98:	08026f56 	.word	0x08026f56
 8004b9c:	08027048 	.word	0x08027048
 8004ba0:	2200      	movs	r2, #0
 8004ba2:	54e2      	strb	r2, [r4, r3]
 8004ba4:	464b      	mov	r3, r9
 8004ba6:	58e2      	ldr	r2, [r4, r3]
 8004ba8:	4653      	mov	r3, sl
 8004baa:	21ff      	movs	r1, #255	; 0xff
 8004bac:	58e3      	ldr	r3, [r4, r3]
 8004bae:	0020      	movs	r0, r4
 8004bb0:	f004 fb26 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8004bb4:	2292      	movs	r2, #146	; 0x92
 8004bb6:	0052      	lsls	r2, r2, #1
 8004bb8:	58a3      	ldr	r3, [r4, r2]
 8004bba:	3301      	adds	r3, #1
 8004bbc:	50a3      	str	r3, [r4, r2]
 8004bbe:	2301      	movs	r3, #1
 8004bc0:	2200      	movs	r2, #0
 8004bc2:	2180      	movs	r1, #128	; 0x80
 8004bc4:	0049      	lsls	r1, r1, #1
 8004bc6:	5063      	str	r3, [r4, r1]
 8004bc8:	54a7      	strb	r7, [r4, r2]
 8004bca:	2282      	movs	r2, #130	; 0x82
 8004bcc:	0052      	lsls	r2, r2, #1
 8004bce:	54a7      	strb	r7, [r4, r2]
 8004bd0:	4aeb      	ldr	r2, [pc, #940]	; (8004f80 <d_print_comp+0x7e4>)
 8004bd2:	3601      	adds	r6, #1
 8004bd4:	4688      	mov	r8, r1
 8004bd6:	42b2      	cmp	r2, r6
 8004bd8:	d101      	bne.n	8004bde <d_print_comp+0x442>
 8004bda:	f001 fce0 	bl	800659e <d_print_comp+0x1e02>
 8004bde:	7837      	ldrb	r7, [r6, #0]
 8004be0:	2bff      	cmp	r3, #255	; 0xff
 8004be2:	d0dd      	beq.n	8004ba0 <d_print_comp+0x404>
 8004be4:	001a      	movs	r2, r3
 8004be6:	3301      	adds	r3, #1
 8004be8:	e7eb      	b.n	8004bc2 <d_print_comp+0x426>
 8004bea:	2380      	movs	r3, #128	; 0x80
 8004bec:	2284      	movs	r2, #132	; 0x84
 8004bee:	005b      	lsls	r3, r3, #1
 8004bf0:	0052      	lsls	r2, r2, #1
 8004bf2:	58e3      	ldr	r3, [r4, r3]
 8004bf4:	4fe3      	ldr	r7, [pc, #908]	; (8004f84 <d_print_comp+0x7e8>)
 8004bf6:	4692      	mov	sl, r2
 8004bf8:	46a8      	mov	r8, r5
 8004bfa:	e021      	b.n	8004c40 <d_print_comp+0x4a4>
 8004bfc:	2200      	movs	r2, #0
 8004bfe:	54e2      	strb	r2, [r4, r3]
 8004c00:	2386      	movs	r3, #134	; 0x86
 8004c02:	005b      	lsls	r3, r3, #1
 8004c04:	58e3      	ldr	r3, [r4, r3]
 8004c06:	001a      	movs	r2, r3
 8004c08:	9300      	str	r3, [sp, #0]
 8004c0a:	4653      	mov	r3, sl
 8004c0c:	21ff      	movs	r1, #255	; 0xff
 8004c0e:	58e3      	ldr	r3, [r4, r3]
 8004c10:	0020      	movs	r0, r4
 8004c12:	f004 faf5 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8004c16:	2292      	movs	r2, #146	; 0x92
 8004c18:	0052      	lsls	r2, r2, #1
 8004c1a:	58a3      	ldr	r3, [r4, r2]
 8004c1c:	3301      	adds	r3, #1
 8004c1e:	50a3      	str	r3, [r4, r2]
 8004c20:	2301      	movs	r3, #1
 8004c22:	2200      	movs	r2, #0
 8004c24:	2180      	movs	r1, #128	; 0x80
 8004c26:	0049      	lsls	r1, r1, #1
 8004c28:	5063      	str	r3, [r4, r1]
 8004c2a:	54a5      	strb	r5, [r4, r2]
 8004c2c:	2282      	movs	r2, #130	; 0x82
 8004c2e:	0052      	lsls	r2, r2, #1
 8004c30:	54a5      	strb	r5, [r4, r2]
 8004c32:	4ad5      	ldr	r2, [pc, #852]	; (8004f88 <d_print_comp+0x7ec>)
 8004c34:	3701      	adds	r7, #1
 8004c36:	4689      	mov	r9, r1
 8004c38:	42ba      	cmp	r2, r7
 8004c3a:	d101      	bne.n	8004c40 <d_print_comp+0x4a4>
 8004c3c:	f001 fc20 	bl	8006480 <d_print_comp+0x1ce4>
 8004c40:	783d      	ldrb	r5, [r7, #0]
 8004c42:	2bff      	cmp	r3, #255	; 0xff
 8004c44:	d0da      	beq.n	8004bfc <d_print_comp+0x460>
 8004c46:	001a      	movs	r2, r3
 8004c48:	3301      	adds	r3, #1
 8004c4a:	e7eb      	b.n	8004c24 <d_print_comp+0x488>
 8004c4c:	2286      	movs	r2, #134	; 0x86
 8004c4e:	2380      	movs	r3, #128	; 0x80
 8004c50:	0052      	lsls	r2, r2, #1
 8004c52:	005b      	lsls	r3, r3, #1
 8004c54:	4692      	mov	sl, r2
 8004c56:	3a04      	subs	r2, #4
 8004c58:	58e3      	ldr	r3, [r4, r3]
 8004c5a:	4fcc      	ldr	r7, [pc, #816]	; (8004f8c <d_print_comp+0x7f0>)
 8004c5c:	4691      	mov	r9, r2
 8004c5e:	46a8      	mov	r8, r5
 8004c60:	e01d      	b.n	8004c9e <d_print_comp+0x502>
 8004c62:	2200      	movs	r2, #0
 8004c64:	54e2      	strb	r2, [r4, r3]
 8004c66:	4653      	mov	r3, sl
 8004c68:	58e2      	ldr	r2, [r4, r3]
 8004c6a:	464b      	mov	r3, r9
 8004c6c:	21ff      	movs	r1, #255	; 0xff
 8004c6e:	58e3      	ldr	r3, [r4, r3]
 8004c70:	0020      	movs	r0, r4
 8004c72:	f004 fac5 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8004c76:	2292      	movs	r2, #146	; 0x92
 8004c78:	0052      	lsls	r2, r2, #1
 8004c7a:	58a3      	ldr	r3, [r4, r2]
 8004c7c:	3301      	adds	r3, #1
 8004c7e:	50a3      	str	r3, [r4, r2]
 8004c80:	2301      	movs	r3, #1
 8004c82:	2200      	movs	r2, #0
 8004c84:	2180      	movs	r1, #128	; 0x80
 8004c86:	0049      	lsls	r1, r1, #1
 8004c88:	5063      	str	r3, [r4, r1]
 8004c8a:	54a5      	strb	r5, [r4, r2]
 8004c8c:	2282      	movs	r2, #130	; 0x82
 8004c8e:	0052      	lsls	r2, r2, #1
 8004c90:	54a5      	strb	r5, [r4, r2]
 8004c92:	4abf      	ldr	r2, [pc, #764]	; (8004f90 <d_print_comp+0x7f4>)
 8004c94:	3701      	adds	r7, #1
 8004c96:	42ba      	cmp	r2, r7
 8004c98:	d101      	bne.n	8004c9e <d_print_comp+0x502>
 8004c9a:	f001 fc2b 	bl	80064f4 <d_print_comp+0x1d58>
 8004c9e:	783d      	ldrb	r5, [r7, #0]
 8004ca0:	2bff      	cmp	r3, #255	; 0xff
 8004ca2:	d0de      	beq.n	8004c62 <d_print_comp+0x4c6>
 8004ca4:	001a      	movs	r2, r3
 8004ca6:	3301      	adds	r3, #1
 8004ca8:	e7ec      	b.n	8004c84 <d_print_comp+0x4e8>
 8004caa:	2286      	movs	r2, #134	; 0x86
 8004cac:	2380      	movs	r3, #128	; 0x80
 8004cae:	0052      	lsls	r2, r2, #1
 8004cb0:	005b      	lsls	r3, r3, #1
 8004cb2:	4692      	mov	sl, r2
 8004cb4:	3a04      	subs	r2, #4
 8004cb6:	58e3      	ldr	r3, [r4, r3]
 8004cb8:	4fb6      	ldr	r7, [pc, #728]	; (8004f94 <d_print_comp+0x7f8>)
 8004cba:	4691      	mov	r9, r2
 8004cbc:	46a8      	mov	r8, r5
 8004cbe:	e01d      	b.n	8004cfc <d_print_comp+0x560>
 8004cc0:	2200      	movs	r2, #0
 8004cc2:	54e2      	strb	r2, [r4, r3]
 8004cc4:	4653      	mov	r3, sl
 8004cc6:	58e2      	ldr	r2, [r4, r3]
 8004cc8:	464b      	mov	r3, r9
 8004cca:	21ff      	movs	r1, #255	; 0xff
 8004ccc:	58e3      	ldr	r3, [r4, r3]
 8004cce:	0020      	movs	r0, r4
 8004cd0:	f004 fa96 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8004cd4:	2292      	movs	r2, #146	; 0x92
 8004cd6:	0052      	lsls	r2, r2, #1
 8004cd8:	58a3      	ldr	r3, [r4, r2]
 8004cda:	3301      	adds	r3, #1
 8004cdc:	50a3      	str	r3, [r4, r2]
 8004cde:	2301      	movs	r3, #1
 8004ce0:	2200      	movs	r2, #0
 8004ce2:	2180      	movs	r1, #128	; 0x80
 8004ce4:	0049      	lsls	r1, r1, #1
 8004ce6:	5063      	str	r3, [r4, r1]
 8004ce8:	54a5      	strb	r5, [r4, r2]
 8004cea:	2282      	movs	r2, #130	; 0x82
 8004cec:	0052      	lsls	r2, r2, #1
 8004cee:	54a5      	strb	r5, [r4, r2]
 8004cf0:	4aa9      	ldr	r2, [pc, #676]	; (8004f98 <d_print_comp+0x7fc>)
 8004cf2:	3701      	adds	r7, #1
 8004cf4:	42ba      	cmp	r2, r7
 8004cf6:	d101      	bne.n	8004cfc <d_print_comp+0x560>
 8004cf8:	f001 fb8c 	bl	8006414 <d_print_comp+0x1c78>
 8004cfc:	783d      	ldrb	r5, [r7, #0]
 8004cfe:	2bff      	cmp	r3, #255	; 0xff
 8004d00:	d0de      	beq.n	8004cc0 <d_print_comp+0x524>
 8004d02:	001a      	movs	r2, r3
 8004d04:	3301      	adds	r3, #1
 8004d06:	e7ec      	b.n	8004ce2 <d_print_comp+0x546>
 8004d08:	2380      	movs	r3, #128	; 0x80
 8004d0a:	2284      	movs	r2, #132	; 0x84
 8004d0c:	005b      	lsls	r3, r3, #1
 8004d0e:	0052      	lsls	r2, r2, #1
 8004d10:	58e3      	ldr	r3, [r4, r3]
 8004d12:	2700      	movs	r7, #0
 8004d14:	4692      	mov	sl, r2
 8004d16:	46a8      	mov	r8, r5
 8004d18:	e020      	b.n	8004d5c <d_print_comp+0x5c0>
 8004d1a:	2200      	movs	r2, #0
 8004d1c:	54e2      	strb	r2, [r4, r3]
 8004d1e:	2386      	movs	r3, #134	; 0x86
 8004d20:	005b      	lsls	r3, r3, #1
 8004d22:	58e3      	ldr	r3, [r4, r3]
 8004d24:	001a      	movs	r2, r3
 8004d26:	9300      	str	r3, [sp, #0]
 8004d28:	4653      	mov	r3, sl
 8004d2a:	21ff      	movs	r1, #255	; 0xff
 8004d2c:	58e3      	ldr	r3, [r4, r3]
 8004d2e:	0020      	movs	r0, r4
 8004d30:	f004 fa66 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8004d34:	2292      	movs	r2, #146	; 0x92
 8004d36:	0052      	lsls	r2, r2, #1
 8004d38:	58a3      	ldr	r3, [r4, r2]
 8004d3a:	3301      	adds	r3, #1
 8004d3c:	50a3      	str	r3, [r4, r2]
 8004d3e:	2301      	movs	r3, #1
 8004d40:	2200      	movs	r2, #0
 8004d42:	2180      	movs	r1, #128	; 0x80
 8004d44:	0049      	lsls	r1, r1, #1
 8004d46:	5063      	str	r3, [r4, r1]
 8004d48:	54a5      	strb	r5, [r4, r2]
 8004d4a:	2282      	movs	r2, #130	; 0x82
 8004d4c:	3701      	adds	r7, #1
 8004d4e:	0052      	lsls	r2, r2, #1
 8004d50:	4689      	mov	r9, r1
 8004d52:	54a5      	strb	r5, [r4, r2]
 8004d54:	2f0a      	cmp	r7, #10
 8004d56:	d101      	bne.n	8004d5c <d_print_comp+0x5c0>
 8004d58:	f001 fb67 	bl	800642a <d_print_comp+0x1c8e>
 8004d5c:	4a8f      	ldr	r2, [pc, #572]	; (8004f9c <d_print_comp+0x800>)
 8004d5e:	5dd5      	ldrb	r5, [r2, r7]
 8004d60:	2bff      	cmp	r3, #255	; 0xff
 8004d62:	d0da      	beq.n	8004d1a <d_print_comp+0x57e>
 8004d64:	001a      	movs	r2, r3
 8004d66:	3301      	adds	r3, #1
 8004d68:	e7eb      	b.n	8004d42 <d_print_comp+0x5a6>
 8004d6a:	ab08      	add	r3, sp, #32
 8004d6c:	469a      	mov	sl, r3
 8004d6e:	68aa      	ldr	r2, [r5, #8]
 8004d70:	498b      	ldr	r1, [pc, #556]	; (8004fa0 <d_print_comp+0x804>)
 8004d72:	0018      	movs	r0, r3
 8004d74:	f017 fc54 	bl	801c620 <sprintf>
 8004d78:	4650      	mov	r0, sl
 8004d7a:	f004 fcc1 	bl	8009700 <strlen>
 8004d7e:	9000      	str	r0, [sp, #0]
 8004d80:	2800      	cmp	r0, #0
 8004d82:	d101      	bne.n	8004d88 <d_print_comp+0x5ec>
 8004d84:	f001 fa9f 	bl	80062c6 <d_print_comp+0x1b2a>
 8004d88:	2286      	movs	r2, #134	; 0x86
 8004d8a:	0052      	lsls	r2, r2, #1
 8004d8c:	2380      	movs	r3, #128	; 0x80
 8004d8e:	4690      	mov	r8, r2
 8004d90:	3a04      	subs	r2, #4
 8004d92:	4691      	mov	r9, r2
 8004d94:	4652      	mov	r2, sl
 8004d96:	005b      	lsls	r3, r3, #1
 8004d98:	46aa      	mov	sl, r5
 8004d9a:	58e3      	ldr	r3, [r4, r3]
 8004d9c:	2600      	movs	r6, #0
 8004d9e:	0015      	movs	r5, r2
 8004da0:	e01d      	b.n	8004dde <d_print_comp+0x642>
 8004da2:	2200      	movs	r2, #0
 8004da4:	54e2      	strb	r2, [r4, r3]
 8004da6:	4643      	mov	r3, r8
 8004da8:	58e2      	ldr	r2, [r4, r3]
 8004daa:	464b      	mov	r3, r9
 8004dac:	21ff      	movs	r1, #255	; 0xff
 8004dae:	58e3      	ldr	r3, [r4, r3]
 8004db0:	0020      	movs	r0, r4
 8004db2:	f004 fa25 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8004db6:	2292      	movs	r2, #146	; 0x92
 8004db8:	0052      	lsls	r2, r2, #1
 8004dba:	58a3      	ldr	r3, [r4, r2]
 8004dbc:	3301      	adds	r3, #1
 8004dbe:	50a3      	str	r3, [r4, r2]
 8004dc0:	2301      	movs	r3, #1
 8004dc2:	2200      	movs	r2, #0
 8004dc4:	2180      	movs	r1, #128	; 0x80
 8004dc6:	0049      	lsls	r1, r1, #1
 8004dc8:	5063      	str	r3, [r4, r1]
 8004dca:	54a7      	strb	r7, [r4, r2]
 8004dcc:	2282      	movs	r2, #130	; 0x82
 8004dce:	0052      	lsls	r2, r2, #1
 8004dd0:	54a7      	strb	r7, [r4, r2]
 8004dd2:	9a00      	ldr	r2, [sp, #0]
 8004dd4:	3601      	adds	r6, #1
 8004dd6:	42b2      	cmp	r2, r6
 8004dd8:	d101      	bne.n	8004dde <d_print_comp+0x642>
 8004dda:	f001 fa73 	bl	80062c4 <d_print_comp+0x1b28>
 8004dde:	5daf      	ldrb	r7, [r5, r6]
 8004de0:	2bff      	cmp	r3, #255	; 0xff
 8004de2:	d0de      	beq.n	8004da2 <d_print_comp+0x606>
 8004de4:	001a      	movs	r2, r3
 8004de6:	3301      	adds	r3, #1
 8004de8:	e7ec      	b.n	8004dc4 <d_print_comp+0x628>
 8004dea:	2780      	movs	r7, #128	; 0x80
 8004dec:	007f      	lsls	r7, r7, #1
 8004dee:	59e3      	ldr	r3, [r4, r7]
 8004df0:	7a2e      	ldrb	r6, [r5, #8]
 8004df2:	2bff      	cmp	r3, #255	; 0xff
 8004df4:	d112      	bne.n	8004e1c <d_print_comp+0x680>
 8004df6:	2200      	movs	r2, #0
 8004df8:	54e2      	strb	r2, [r4, r3]
 8004dfa:	4690      	mov	r8, r2
 8004dfc:	2286      	movs	r2, #134	; 0x86
 8004dfe:	3309      	adds	r3, #9
 8004e00:	0052      	lsls	r2, r2, #1
 8004e02:	58e3      	ldr	r3, [r4, r3]
 8004e04:	58a2      	ldr	r2, [r4, r2]
 8004e06:	21ff      	movs	r1, #255	; 0xff
 8004e08:	0020      	movs	r0, r4
 8004e0a:	f004 f9f9 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8004e0e:	2292      	movs	r2, #146	; 0x92
 8004e10:	4643      	mov	r3, r8
 8004e12:	0052      	lsls	r2, r2, #1
 8004e14:	51e3      	str	r3, [r4, r7]
 8004e16:	58a3      	ldr	r3, [r4, r2]
 8004e18:	3301      	adds	r3, #1
 8004e1a:	50a3      	str	r3, [r4, r2]
 8004e1c:	2280      	movs	r2, #128	; 0x80
 8004e1e:	0052      	lsls	r2, r2, #1
 8004e20:	58a3      	ldr	r3, [r4, r2]
 8004e22:	1c59      	adds	r1, r3, #1
 8004e24:	50a1      	str	r1, [r4, r2]
 8004e26:	54e6      	strb	r6, [r4, r3]
 8004e28:	2382      	movs	r3, #130	; 0x82
 8004e2a:	005b      	lsls	r3, r3, #1
 8004e2c:	54e6      	strb	r6, [r4, r3]
 8004e2e:	465b      	mov	r3, fp
 8004e30:	686a      	ldr	r2, [r5, #4]
 8004e32:	685b      	ldr	r3, [r3, #4]
 8004e34:	e565      	b.n	8004902 <d_print_comp+0x166>
 8004e36:	68aa      	ldr	r2, [r5, #8]
 8004e38:	0031      	movs	r1, r6
 8004e3a:	0020      	movs	r0, r4
 8004e3c:	f7ff fcae 	bl	800479c <d_print_comp>
 8004e40:	68ea      	ldr	r2, [r5, #12]
 8004e42:	0031      	movs	r1, r6
 8004e44:	0020      	movs	r0, r4
 8004e46:	f7ff fca9 	bl	800479c <d_print_comp>
 8004e4a:	465b      	mov	r3, fp
 8004e4c:	686a      	ldr	r2, [r5, #4]
 8004e4e:	685b      	ldr	r3, [r3, #4]
 8004e50:	e557      	b.n	8004902 <d_print_comp+0x166>
 8004e52:	2286      	movs	r2, #134	; 0x86
 8004e54:	2380      	movs	r3, #128	; 0x80
 8004e56:	0052      	lsls	r2, r2, #1
 8004e58:	005b      	lsls	r3, r3, #1
 8004e5a:	4692      	mov	sl, r2
 8004e5c:	3a04      	subs	r2, #4
 8004e5e:	58e3      	ldr	r3, [r4, r3]
 8004e60:	4f50      	ldr	r7, [pc, #320]	; (8004fa4 <d_print_comp+0x808>)
 8004e62:	4691      	mov	r9, r2
 8004e64:	46a8      	mov	r8, r5
 8004e66:	e01d      	b.n	8004ea4 <d_print_comp+0x708>
 8004e68:	2200      	movs	r2, #0
 8004e6a:	54e2      	strb	r2, [r4, r3]
 8004e6c:	4653      	mov	r3, sl
 8004e6e:	58e2      	ldr	r2, [r4, r3]
 8004e70:	464b      	mov	r3, r9
 8004e72:	21ff      	movs	r1, #255	; 0xff
 8004e74:	58e3      	ldr	r3, [r4, r3]
 8004e76:	0020      	movs	r0, r4
 8004e78:	f004 f9c2 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8004e7c:	2292      	movs	r2, #146	; 0x92
 8004e7e:	0052      	lsls	r2, r2, #1
 8004e80:	58a3      	ldr	r3, [r4, r2]
 8004e82:	3301      	adds	r3, #1
 8004e84:	50a3      	str	r3, [r4, r2]
 8004e86:	2301      	movs	r3, #1
 8004e88:	2200      	movs	r2, #0
 8004e8a:	2180      	movs	r1, #128	; 0x80
 8004e8c:	0049      	lsls	r1, r1, #1
 8004e8e:	5063      	str	r3, [r4, r1]
 8004e90:	54a5      	strb	r5, [r4, r2]
 8004e92:	2282      	movs	r2, #130	; 0x82
 8004e94:	0052      	lsls	r2, r2, #1
 8004e96:	54a5      	strb	r5, [r4, r2]
 8004e98:	4a43      	ldr	r2, [pc, #268]	; (8004fa8 <d_print_comp+0x80c>)
 8004e9a:	3701      	adds	r7, #1
 8004e9c:	4297      	cmp	r7, r2
 8004e9e:	d101      	bne.n	8004ea4 <d_print_comp+0x708>
 8004ea0:	f001 f972 	bl	8006188 <d_print_comp+0x19ec>
 8004ea4:	783d      	ldrb	r5, [r7, #0]
 8004ea6:	2bff      	cmp	r3, #255	; 0xff
 8004ea8:	d0de      	beq.n	8004e68 <d_print_comp+0x6cc>
 8004eaa:	001a      	movs	r2, r3
 8004eac:	3301      	adds	r3, #1
 8004eae:	e7ec      	b.n	8004e8a <d_print_comp+0x6ee>
 8004eb0:	68ab      	ldr	r3, [r5, #8]
 8004eb2:	781a      	ldrb	r2, [r3, #0]
 8004eb4:	2700      	movs	r7, #0
 8004eb6:	2a27      	cmp	r2, #39	; 0x27
 8004eb8:	d101      	bne.n	8004ebe <d_print_comp+0x722>
 8004eba:	f002 f97a 	bl	80071b2 <d_print_comp+0x2a16>
 8004ebe:	2380      	movs	r3, #128	; 0x80
 8004ec0:	005b      	lsls	r3, r3, #1
 8004ec2:	4698      	mov	r8, r3
 8004ec4:	58e3      	ldr	r3, [r4, r3]
 8004ec6:	2bff      	cmp	r3, #255	; 0xff
 8004ec8:	d113      	bne.n	8004ef2 <d_print_comp+0x756>
 8004eca:	2200      	movs	r2, #0
 8004ecc:	54e2      	strb	r2, [r4, r3]
 8004ece:	4691      	mov	r9, r2
 8004ed0:	2286      	movs	r2, #134	; 0x86
 8004ed2:	3309      	adds	r3, #9
 8004ed4:	0052      	lsls	r2, r2, #1
 8004ed6:	58e3      	ldr	r3, [r4, r3]
 8004ed8:	58a2      	ldr	r2, [r4, r2]
 8004eda:	21ff      	movs	r1, #255	; 0xff
 8004edc:	0020      	movs	r0, r4
 8004ede:	f004 f98f 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8004ee2:	4643      	mov	r3, r8
 8004ee4:	464a      	mov	r2, r9
 8004ee6:	50e2      	str	r2, [r4, r3]
 8004ee8:	3225      	adds	r2, #37	; 0x25
 8004eea:	32ff      	adds	r2, #255	; 0xff
 8004eec:	58a3      	ldr	r3, [r4, r2]
 8004eee:	3301      	adds	r3, #1
 8004ef0:	50a3      	str	r3, [r4, r2]
 8004ef2:	2380      	movs	r3, #128	; 0x80
 8004ef4:	005b      	lsls	r3, r3, #1
 8004ef6:	4698      	mov	r8, r3
 8004ef8:	4641      	mov	r1, r8
 8004efa:	58e2      	ldr	r2, [r4, r3]
 8004efc:	1c53      	adds	r3, r2, #1
 8004efe:	5063      	str	r3, [r4, r1]
 8004f00:	2328      	movs	r3, #40	; 0x28
 8004f02:	54a3      	strb	r3, [r4, r2]
 8004f04:	2282      	movs	r2, #130	; 0x82
 8004f06:	0052      	lsls	r2, r2, #1
 8004f08:	54a3      	strb	r3, [r4, r2]
 8004f0a:	4691      	mov	r9, r2
 8004f0c:	0031      	movs	r1, r6
 8004f0e:	68aa      	ldr	r2, [r5, #8]
 8004f10:	0020      	movs	r0, r4
 8004f12:	f7ff fc43 	bl	800479c <d_print_comp>
 8004f16:	4643      	mov	r3, r8
 8004f18:	58e3      	ldr	r3, [r4, r3]
 8004f1a:	2bff      	cmp	r3, #255	; 0xff
 8004f1c:	d001      	beq.n	8004f22 <d_print_comp+0x786>
 8004f1e:	f001 fea4 	bl	8006c6a <d_print_comp+0x24ce>
 8004f22:	2200      	movs	r2, #0
 8004f24:	54e2      	strb	r2, [r4, r3]
 8004f26:	320d      	adds	r2, #13
 8004f28:	3309      	adds	r3, #9
 8004f2a:	32ff      	adds	r2, #255	; 0xff
 8004f2c:	58e3      	ldr	r3, [r4, r3]
 8004f2e:	58a2      	ldr	r2, [r4, r2]
 8004f30:	21ff      	movs	r1, #255	; 0xff
 8004f32:	0020      	movs	r0, r4
 8004f34:	f004 f964 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8004f38:	2292      	movs	r2, #146	; 0x92
 8004f3a:	0052      	lsls	r2, r2, #1
 8004f3c:	58a3      	ldr	r3, [r4, r2]
 8004f3e:	3301      	adds	r3, #1
 8004f40:	50a3      	str	r3, [r4, r2]
 8004f42:	2301      	movs	r3, #1
 8004f44:	4642      	mov	r2, r8
 8004f46:	50a3      	str	r3, [r4, r2]
 8004f48:	464a      	mov	r2, r9
 8004f4a:	3328      	adds	r3, #40	; 0x28
 8004f4c:	7023      	strb	r3, [r4, #0]
 8004f4e:	54a3      	strb	r3, [r4, r2]
 8004f50:	782b      	ldrb	r3, [r5, #0]
 8004f52:	2b3d      	cmp	r3, #61	; 0x3d
 8004f54:	d101      	bne.n	8004f5a <d_print_comp+0x7be>
 8004f56:	f001 fea9 	bl	8006cac <d_print_comp+0x2510>
 8004f5a:	2f08      	cmp	r7, #8
 8004f5c:	d101      	bne.n	8004f62 <d_print_comp+0x7c6>
 8004f5e:	f001 ff4c 	bl	8006dfa <d_print_comp+0x265e>
 8004f62:	68ea      	ldr	r2, [r5, #12]
 8004f64:	0031      	movs	r1, r6
 8004f66:	0020      	movs	r0, r4
 8004f68:	f7ff fc18 	bl	800479c <d_print_comp>
 8004f6c:	465b      	mov	r3, fp
 8004f6e:	686a      	ldr	r2, [r5, #4]
 8004f70:	685b      	ldr	r3, [r3, #4]
 8004f72:	e4c6      	b.n	8004902 <d_print_comp+0x166>
 8004f74:	228c      	movs	r2, #140	; 0x8c
 8004f76:	2101      	movs	r1, #1
 8004f78:	0052      	lsls	r2, r2, #1
 8004f7a:	50a1      	str	r1, [r4, r2]
 8004f7c:	686a      	ldr	r2, [r5, #4]
 8004f7e:	e4c0      	b.n	8004902 <d_print_comp+0x166>
 8004f80:	08027056 	.word	0x08027056
 8004f84:	08027038 	.word	0x08027038
 8004f88:	08027040 	.word	0x08027040
 8004f8c:	08027018 	.word	0x08027018
 8004f90:	08027034 	.word	0x08027034
 8004f94:	08026ff8 	.word	0x08026ff8
 8004f98:	08027015 	.word	0x08027015
 8004f9c:	08026fd8 	.word	0x08026fd8
 8004fa0:	08026d94 	.word	0x08026d94
 8004fa4:	08026fc8 	.word	0x08026fc8
 8004fa8:	08026fd6 	.word	0x08026fd6
 8004fac:	68aa      	ldr	r2, [r5, #8]
 8004fae:	0031      	movs	r1, r6
 8004fb0:	0020      	movs	r0, r4
 8004fb2:	f003 fcf7 	bl	80089a4 <d_print_expr_op>
 8004fb6:	465b      	mov	r3, fp
 8004fb8:	686a      	ldr	r2, [r5, #4]
 8004fba:	685b      	ldr	r3, [r3, #4]
 8004fbc:	e4a1      	b.n	8004902 <d_print_comp+0x166>
 8004fbe:	4ae9      	ldr	r2, [pc, #932]	; (8005364 <d_print_comp+0xbc8>)
 8004fc0:	9200      	str	r2, [sp, #0]
 8004fc2:	2286      	movs	r2, #134	; 0x86
 8004fc4:	2380      	movs	r3, #128	; 0x80
 8004fc6:	0052      	lsls	r2, r2, #1
 8004fc8:	005b      	lsls	r3, r3, #1
 8004fca:	4692      	mov	sl, r2
 8004fcc:	3a04      	subs	r2, #4
 8004fce:	58e3      	ldr	r3, [r4, r3]
 8004fd0:	2700      	movs	r7, #0
 8004fd2:	4691      	mov	r9, r2
 8004fd4:	46a8      	mov	r8, r5
 8004fd6:	e01c      	b.n	8005012 <d_print_comp+0x876>
 8004fd8:	2200      	movs	r2, #0
 8004fda:	54e2      	strb	r2, [r4, r3]
 8004fdc:	4653      	mov	r3, sl
 8004fde:	58e2      	ldr	r2, [r4, r3]
 8004fe0:	464b      	mov	r3, r9
 8004fe2:	21ff      	movs	r1, #255	; 0xff
 8004fe4:	58e3      	ldr	r3, [r4, r3]
 8004fe6:	0020      	movs	r0, r4
 8004fe8:	f004 f90a 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8004fec:	2292      	movs	r2, #146	; 0x92
 8004fee:	0052      	lsls	r2, r2, #1
 8004ff0:	58a3      	ldr	r3, [r4, r2]
 8004ff2:	3301      	adds	r3, #1
 8004ff4:	50a3      	str	r3, [r4, r2]
 8004ff6:	2301      	movs	r3, #1
 8004ff8:	2200      	movs	r2, #0
 8004ffa:	2180      	movs	r1, #128	; 0x80
 8004ffc:	0049      	lsls	r1, r1, #1
 8004ffe:	5063      	str	r3, [r4, r1]
 8005000:	54a5      	strb	r5, [r4, r2]
 8005002:	2282      	movs	r2, #130	; 0x82
 8005004:	3701      	adds	r7, #1
 8005006:	0052      	lsls	r2, r2, #1
 8005008:	54a5      	strb	r5, [r4, r2]
 800500a:	2f09      	cmp	r7, #9
 800500c:	d101      	bne.n	8005012 <d_print_comp+0x876>
 800500e:	f001 f935 	bl	800627c <d_print_comp+0x1ae0>
 8005012:	9a00      	ldr	r2, [sp, #0]
 8005014:	5dd5      	ldrb	r5, [r2, r7]
 8005016:	2bff      	cmp	r3, #255	; 0xff
 8005018:	d0de      	beq.n	8004fd8 <d_print_comp+0x83c>
 800501a:	001a      	movs	r2, r3
 800501c:	3301      	adds	r3, #1
 800501e:	e7ec      	b.n	8004ffa <d_print_comp+0x85e>
 8005020:	4ad0      	ldr	r2, [pc, #832]	; (8005364 <d_print_comp+0xbc8>)
 8005022:	9200      	str	r2, [sp, #0]
 8005024:	2286      	movs	r2, #134	; 0x86
 8005026:	2380      	movs	r3, #128	; 0x80
 8005028:	0052      	lsls	r2, r2, #1
 800502a:	005b      	lsls	r3, r3, #1
 800502c:	4692      	mov	sl, r2
 800502e:	3a04      	subs	r2, #4
 8005030:	58e3      	ldr	r3, [r4, r3]
 8005032:	2700      	movs	r7, #0
 8005034:	4691      	mov	r9, r2
 8005036:	46a8      	mov	r8, r5
 8005038:	e01c      	b.n	8005074 <d_print_comp+0x8d8>
 800503a:	2200      	movs	r2, #0
 800503c:	54e2      	strb	r2, [r4, r3]
 800503e:	4653      	mov	r3, sl
 8005040:	58e2      	ldr	r2, [r4, r3]
 8005042:	464b      	mov	r3, r9
 8005044:	21ff      	movs	r1, #255	; 0xff
 8005046:	58e3      	ldr	r3, [r4, r3]
 8005048:	0020      	movs	r0, r4
 800504a:	f004 f8d9 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 800504e:	2292      	movs	r2, #146	; 0x92
 8005050:	0052      	lsls	r2, r2, #1
 8005052:	58a3      	ldr	r3, [r4, r2]
 8005054:	3301      	adds	r3, #1
 8005056:	50a3      	str	r3, [r4, r2]
 8005058:	2301      	movs	r3, #1
 800505a:	2200      	movs	r2, #0
 800505c:	2180      	movs	r1, #128	; 0x80
 800505e:	0049      	lsls	r1, r1, #1
 8005060:	5063      	str	r3, [r4, r1]
 8005062:	54a5      	strb	r5, [r4, r2]
 8005064:	2282      	movs	r2, #130	; 0x82
 8005066:	3701      	adds	r7, #1
 8005068:	0052      	lsls	r2, r2, #1
 800506a:	54a5      	strb	r5, [r4, r2]
 800506c:	2f09      	cmp	r7, #9
 800506e:	d101      	bne.n	8005074 <d_print_comp+0x8d8>
 8005070:	f001 f895 	bl	800619e <d_print_comp+0x1a02>
 8005074:	9a00      	ldr	r2, [sp, #0]
 8005076:	5dd5      	ldrb	r5, [r2, r7]
 8005078:	2bff      	cmp	r3, #255	; 0xff
 800507a:	d0de      	beq.n	800503a <d_print_comp+0x89e>
 800507c:	001a      	movs	r2, r3
 800507e:	3301      	adds	r3, #1
 8005080:	e7ec      	b.n	800505c <d_print_comp+0x8c0>
 8005082:	68ab      	ldr	r3, [r5, #8]
 8005084:	9301      	str	r3, [sp, #4]
 8005086:	689b      	ldr	r3, [r3, #8]
 8005088:	9300      	str	r3, [sp, #0]
 800508a:	2380      	movs	r3, #128	; 0x80
 800508c:	005b      	lsls	r3, r3, #1
 800508e:	58e1      	ldr	r1, [r4, r3]
 8005090:	330c      	adds	r3, #12
 8005092:	469a      	mov	sl, r3
 8005094:	3b04      	subs	r3, #4
 8005096:	4eb4      	ldr	r6, [pc, #720]	; (8005368 <d_print_comp+0xbcc>)
 8005098:	4699      	mov	r9, r3
 800509a:	e01e      	b.n	80050da <d_print_comp+0x93e>
 800509c:	2300      	movs	r3, #0
 800509e:	5463      	strb	r3, [r4, r1]
 80050a0:	4653      	mov	r3, sl
 80050a2:	58e2      	ldr	r2, [r4, r3]
 80050a4:	464b      	mov	r3, r9
 80050a6:	21ff      	movs	r1, #255	; 0xff
 80050a8:	58e3      	ldr	r3, [r4, r3]
 80050aa:	0020      	movs	r0, r4
 80050ac:	f004 f8a8 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 80050b0:	2292      	movs	r2, #146	; 0x92
 80050b2:	0052      	lsls	r2, r2, #1
 80050b4:	58a3      	ldr	r3, [r4, r2]
 80050b6:	3301      	adds	r3, #1
 80050b8:	50a3      	str	r3, [r4, r2]
 80050ba:	2101      	movs	r1, #1
 80050bc:	2300      	movs	r3, #0
 80050be:	2280      	movs	r2, #128	; 0x80
 80050c0:	0052      	lsls	r2, r2, #1
 80050c2:	50a1      	str	r1, [r4, r2]
 80050c4:	54e7      	strb	r7, [r4, r3]
 80050c6:	2382      	movs	r3, #130	; 0x82
 80050c8:	005b      	lsls	r3, r3, #1
 80050ca:	54e7      	strb	r7, [r4, r3]
 80050cc:	4ba7      	ldr	r3, [pc, #668]	; (800536c <d_print_comp+0xbd0>)
 80050ce:	3601      	adds	r6, #1
 80050d0:	4690      	mov	r8, r2
 80050d2:	42b3      	cmp	r3, r6
 80050d4:	d101      	bne.n	80050da <d_print_comp+0x93e>
 80050d6:	f001 f86d 	bl	80061b4 <d_print_comp+0x1a18>
 80050da:	7837      	ldrb	r7, [r6, #0]
 80050dc:	29ff      	cmp	r1, #255	; 0xff
 80050de:	d0dd      	beq.n	800509c <d_print_comp+0x900>
 80050e0:	000b      	movs	r3, r1
 80050e2:	3101      	adds	r1, #1
 80050e4:	e7eb      	b.n	80050be <d_print_comp+0x922>
 80050e6:	68eb      	ldr	r3, [r5, #12]
 80050e8:	68aa      	ldr	r2, [r5, #8]
 80050ea:	4698      	mov	r8, r3
 80050ec:	2a00      	cmp	r2, #0
 80050ee:	d003      	beq.n	80050f8 <d_print_comp+0x95c>
 80050f0:	0031      	movs	r1, r6
 80050f2:	0020      	movs	r0, r4
 80050f4:	f7ff fb52 	bl	800479c <d_print_comp>
 80050f8:	2780      	movs	r7, #128	; 0x80
 80050fa:	007f      	lsls	r7, r7, #1
 80050fc:	59e3      	ldr	r3, [r4, r7]
 80050fe:	2bff      	cmp	r3, #255	; 0xff
 8005100:	d112      	bne.n	8005128 <d_print_comp+0x98c>
 8005102:	2200      	movs	r2, #0
 8005104:	54e2      	strb	r2, [r4, r3]
 8005106:	4691      	mov	r9, r2
 8005108:	2286      	movs	r2, #134	; 0x86
 800510a:	3309      	adds	r3, #9
 800510c:	0052      	lsls	r2, r2, #1
 800510e:	58e3      	ldr	r3, [r4, r3]
 8005110:	58a2      	ldr	r2, [r4, r2]
 8005112:	21ff      	movs	r1, #255	; 0xff
 8005114:	0020      	movs	r0, r4
 8005116:	f004 f873 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 800511a:	2292      	movs	r2, #146	; 0x92
 800511c:	464b      	mov	r3, r9
 800511e:	0052      	lsls	r2, r2, #1
 8005120:	51e3      	str	r3, [r4, r7]
 8005122:	58a3      	ldr	r3, [r4, r2]
 8005124:	3301      	adds	r3, #1
 8005126:	50a3      	str	r3, [r4, r2]
 8005128:	2780      	movs	r7, #128	; 0x80
 800512a:	007f      	lsls	r7, r7, #1
 800512c:	59e2      	ldr	r2, [r4, r7]
 800512e:	1c53      	adds	r3, r2, #1
 8005130:	51e3      	str	r3, [r4, r7]
 8005132:	237b      	movs	r3, #123	; 0x7b
 8005134:	54a3      	strb	r3, [r4, r2]
 8005136:	2282      	movs	r2, #130	; 0x82
 8005138:	0052      	lsls	r2, r2, #1
 800513a:	54a3      	strb	r3, [r4, r2]
 800513c:	0031      	movs	r1, r6
 800513e:	4642      	mov	r2, r8
 8005140:	0020      	movs	r0, r4
 8005142:	f7ff fb2b 	bl	800479c <d_print_comp>
 8005146:	59e3      	ldr	r3, [r4, r7]
 8005148:	2bff      	cmp	r3, #255	; 0xff
 800514a:	d110      	bne.n	800516e <d_print_comp+0x9d2>
 800514c:	2600      	movs	r6, #0
 800514e:	2286      	movs	r2, #134	; 0x86
 8005150:	54e6      	strb	r6, [r4, r3]
 8005152:	0052      	lsls	r2, r2, #1
 8005154:	3309      	adds	r3, #9
 8005156:	58e3      	ldr	r3, [r4, r3]
 8005158:	58a2      	ldr	r2, [r4, r2]
 800515a:	21ff      	movs	r1, #255	; 0xff
 800515c:	0020      	movs	r0, r4
 800515e:	f004 f84f 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8005162:	2292      	movs	r2, #146	; 0x92
 8005164:	0052      	lsls	r2, r2, #1
 8005166:	58a3      	ldr	r3, [r4, r2]
 8005168:	3301      	adds	r3, #1
 800516a:	51e6      	str	r6, [r4, r7]
 800516c:	50a3      	str	r3, [r4, r2]
 800516e:	2380      	movs	r3, #128	; 0x80
 8005170:	005b      	lsls	r3, r3, #1
 8005172:	58e2      	ldr	r2, [r4, r3]
 8005174:	1c51      	adds	r1, r2, #1
 8005176:	50e1      	str	r1, [r4, r3]
 8005178:	3b83      	subs	r3, #131	; 0x83
 800517a:	54a3      	strb	r3, [r4, r2]
 800517c:	2282      	movs	r2, #130	; 0x82
 800517e:	0052      	lsls	r2, r2, #1
 8005180:	54a3      	strb	r3, [r4, r2]
 8005182:	465b      	mov	r3, fp
 8005184:	686a      	ldr	r2, [r5, #4]
 8005186:	685b      	ldr	r3, [r3, #4]
 8005188:	f7ff fbbb 	bl	8004902 <d_print_comp+0x166>
 800518c:	68aa      	ldr	r2, [r5, #8]
 800518e:	2a00      	cmp	r2, #0
 8005190:	d003      	beq.n	800519a <d_print_comp+0x9fe>
 8005192:	0031      	movs	r1, r6
 8005194:	0020      	movs	r0, r4
 8005196:	f7ff fb01 	bl	800479c <d_print_comp>
 800519a:	68eb      	ldr	r3, [r5, #12]
 800519c:	2b00      	cmp	r3, #0
 800519e:	d101      	bne.n	80051a4 <d_print_comp+0xa08>
 80051a0:	f002 f89d 	bl	80072de <d_print_comp+0x2b42>
 80051a4:	2780      	movs	r7, #128	; 0x80
 80051a6:	007f      	lsls	r7, r7, #1
 80051a8:	59e1      	ldr	r1, [r4, r7]
 80051aa:	29fd      	cmp	r1, #253	; 0xfd
 80051ac:	d912      	bls.n	80051d4 <d_print_comp+0xa38>
 80051ae:	2300      	movs	r3, #0
 80051b0:	2286      	movs	r2, #134	; 0x86
 80051b2:	5463      	strb	r3, [r4, r1]
 80051b4:	4698      	mov	r8, r3
 80051b6:	2384      	movs	r3, #132	; 0x84
 80051b8:	0052      	lsls	r2, r2, #1
 80051ba:	005b      	lsls	r3, r3, #1
 80051bc:	58e3      	ldr	r3, [r4, r3]
 80051be:	58a2      	ldr	r2, [r4, r2]
 80051c0:	0020      	movs	r0, r4
 80051c2:	f004 f81d 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 80051c6:	2292      	movs	r2, #146	; 0x92
 80051c8:	4643      	mov	r3, r8
 80051ca:	0052      	lsls	r2, r2, #1
 80051cc:	51e3      	str	r3, [r4, r7]
 80051ce:	58a3      	ldr	r3, [r4, r2]
 80051d0:	3301      	adds	r3, #1
 80051d2:	50a3      	str	r3, [r4, r2]
 80051d4:	2380      	movs	r3, #128	; 0x80
 80051d6:	005b      	lsls	r3, r3, #1
 80051d8:	58e7      	ldr	r7, [r4, r3]
 80051da:	2300      	movs	r3, #0
 80051dc:	4698      	mov	r8, r3
 80051de:	0033      	movs	r3, r6
 80051e0:	46a9      	mov	r9, r5
 80051e2:	4646      	mov	r6, r8
 80051e4:	4698      	mov	r8, r3
 80051e6:	e021      	b.n	800522c <d_print_comp+0xa90>
 80051e8:	2300      	movs	r3, #0
 80051ea:	55e3      	strb	r3, [r4, r7]
 80051ec:	2386      	movs	r3, #134	; 0x86
 80051ee:	005b      	lsls	r3, r3, #1
 80051f0:	58e3      	ldr	r3, [r4, r3]
 80051f2:	9300      	str	r3, [sp, #0]
 80051f4:	2384      	movs	r3, #132	; 0x84
 80051f6:	005b      	lsls	r3, r3, #1
 80051f8:	58e3      	ldr	r3, [r4, r3]
 80051fa:	9a00      	ldr	r2, [sp, #0]
 80051fc:	21ff      	movs	r1, #255	; 0xff
 80051fe:	0020      	movs	r0, r4
 8005200:	9301      	str	r3, [sp, #4]
 8005202:	f003 fffd 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8005206:	2292      	movs	r2, #146	; 0x92
 8005208:	0052      	lsls	r2, r2, #1
 800520a:	58a3      	ldr	r3, [r4, r2]
 800520c:	3301      	adds	r3, #1
 800520e:	50a3      	str	r3, [r4, r2]
 8005210:	2701      	movs	r7, #1
 8005212:	2200      	movs	r2, #0
 8005214:	2380      	movs	r3, #128	; 0x80
 8005216:	005b      	lsls	r3, r3, #1
 8005218:	50e7      	str	r7, [r4, r3]
 800521a:	469a      	mov	sl, r3
 800521c:	3304      	adds	r3, #4
 800521e:	54a5      	strb	r5, [r4, r2]
 8005220:	54e5      	strb	r5, [r4, r3]
 8005222:	2e01      	cmp	r6, #1
 8005224:	d101      	bne.n	800522a <d_print_comp+0xa8e>
 8005226:	f001 faf5 	bl	8006814 <d_print_comp+0x2078>
 800522a:	2601      	movs	r6, #1
 800522c:	4b50      	ldr	r3, [pc, #320]	; (8005370 <d_print_comp+0xbd4>)
 800522e:	5d9d      	ldrb	r5, [r3, r6]
 8005230:	2fff      	cmp	r7, #255	; 0xff
 8005232:	d0d9      	beq.n	80051e8 <d_print_comp+0xa4c>
 8005234:	003a      	movs	r2, r7
 8005236:	3701      	adds	r7, #1
 8005238:	e7ec      	b.n	8005214 <d_print_comp+0xa78>
 800523a:	220e      	movs	r2, #14
 800523c:	5eab      	ldrsh	r3, [r5, r2]
 800523e:	2b00      	cmp	r3, #0
 8005240:	d001      	beq.n	8005246 <d_print_comp+0xaaa>
 8005242:	f001 ffe7 	bl	8007214 <d_print_comp+0x2a78>
 8005246:	68aa      	ldr	r2, [r5, #8]
 8005248:	4b4a      	ldr	r3, [pc, #296]	; (8005374 <d_print_comp+0xbd8>)
 800524a:	6891      	ldr	r1, [r2, #8]
 800524c:	4299      	cmp	r1, r3
 800524e:	d023      	beq.n	8005298 <d_print_comp+0xafc>
 8005250:	0031      	movs	r1, r6
 8005252:	2680      	movs	r6, #128	; 0x80
 8005254:	0020      	movs	r0, r4
 8005256:	0076      	lsls	r6, r6, #1
 8005258:	f7ff faa0 	bl	800479c <d_print_comp>
 800525c:	59a1      	ldr	r1, [r4, r6]
 800525e:	29ff      	cmp	r1, #255	; 0xff
 8005260:	d110      	bne.n	8005284 <d_print_comp+0xae8>
 8005262:	2700      	movs	r7, #0
 8005264:	2384      	movs	r3, #132	; 0x84
 8005266:	2286      	movs	r2, #134	; 0x86
 8005268:	5467      	strb	r7, [r4, r1]
 800526a:	005b      	lsls	r3, r3, #1
 800526c:	0052      	lsls	r2, r2, #1
 800526e:	58e3      	ldr	r3, [r4, r3]
 8005270:	58a2      	ldr	r2, [r4, r2]
 8005272:	0020      	movs	r0, r4
 8005274:	f003 ffc4 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8005278:	2292      	movs	r2, #146	; 0x92
 800527a:	0052      	lsls	r2, r2, #1
 800527c:	58a3      	ldr	r3, [r4, r2]
 800527e:	3301      	adds	r3, #1
 8005280:	51a7      	str	r7, [r4, r6]
 8005282:	50a3      	str	r3, [r4, r2]
 8005284:	2380      	movs	r3, #128	; 0x80
 8005286:	005b      	lsls	r3, r3, #1
 8005288:	58e2      	ldr	r2, [r4, r3]
 800528a:	1c51      	adds	r1, r2, #1
 800528c:	50e1      	str	r1, [r4, r3]
 800528e:	3be0      	subs	r3, #224	; 0xe0
 8005290:	54a3      	strb	r3, [r4, r2]
 8005292:	2282      	movs	r2, #130	; 0x82
 8005294:	0052      	lsls	r2, r2, #1
 8005296:	54a3      	strb	r3, [r4, r2]
 8005298:	2380      	movs	r3, #128	; 0x80
 800529a:	210c      	movs	r1, #12
 800529c:	5e6a      	ldrsh	r2, [r5, r1]
 800529e:	005b      	lsls	r3, r3, #1
 80052a0:	58e3      	ldr	r3, [r4, r3]
 80052a2:	2600      	movs	r6, #0
 80052a4:	2a00      	cmp	r2, #0
 80052a6:	d101      	bne.n	80052ac <d_print_comp+0xb10>
 80052a8:	f001 fb92 	bl	80069d0 <d_print_comp+0x2234>
 80052ac:	4a32      	ldr	r2, [pc, #200]	; (8005378 <d_print_comp+0xbdc>)
 80052ae:	4690      	mov	r8, r2
 80052b0:	2286      	movs	r2, #134	; 0x86
 80052b2:	0052      	lsls	r2, r2, #1
 80052b4:	4692      	mov	sl, r2
 80052b6:	3a04      	subs	r2, #4
 80052b8:	4691      	mov	r9, r2
 80052ba:	e01c      	b.n	80052f6 <d_print_comp+0xb5a>
 80052bc:	2200      	movs	r2, #0
 80052be:	54e2      	strb	r2, [r4, r3]
 80052c0:	4653      	mov	r3, sl
 80052c2:	58e2      	ldr	r2, [r4, r3]
 80052c4:	464b      	mov	r3, r9
 80052c6:	21ff      	movs	r1, #255	; 0xff
 80052c8:	58e3      	ldr	r3, [r4, r3]
 80052ca:	0020      	movs	r0, r4
 80052cc:	f003 ff98 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 80052d0:	2292      	movs	r2, #146	; 0x92
 80052d2:	0052      	lsls	r2, r2, #1
 80052d4:	58a3      	ldr	r3, [r4, r2]
 80052d6:	3301      	adds	r3, #1
 80052d8:	50a3      	str	r3, [r4, r2]
 80052da:	2301      	movs	r3, #1
 80052dc:	2200      	movs	r2, #0
 80052de:	2180      	movs	r1, #128	; 0x80
 80052e0:	0049      	lsls	r1, r1, #1
 80052e2:	5063      	str	r3, [r4, r1]
 80052e4:	54a7      	strb	r7, [r4, r2]
 80052e6:	2282      	movs	r2, #130	; 0x82
 80052e8:	3601      	adds	r6, #1
 80052ea:	0052      	lsls	r2, r2, #1
 80052ec:	54a7      	strb	r7, [r4, r2]
 80052ee:	2e06      	cmp	r6, #6
 80052f0:	d101      	bne.n	80052f6 <d_print_comp+0xb5a>
 80052f2:	f001 fae1 	bl	80068b8 <d_print_comp+0x211c>
 80052f6:	4642      	mov	r2, r8
 80052f8:	5d97      	ldrb	r7, [r2, r6]
 80052fa:	2bff      	cmp	r3, #255	; 0xff
 80052fc:	d0de      	beq.n	80052bc <d_print_comp+0xb20>
 80052fe:	001a      	movs	r2, r3
 8005300:	3301      	adds	r3, #1
 8005302:	e7ec      	b.n	80052de <d_print_comp+0xb42>
 8005304:	238a      	movs	r3, #138	; 0x8a
 8005306:	af08      	add	r7, sp, #32
 8005308:	005b      	lsls	r3, r3, #1
 800530a:	58e2      	ldr	r2, [r4, r3]
 800530c:	50e7      	str	r7, [r4, r3]
 800530e:	2300      	movs	r3, #0
 8005310:	930a      	str	r3, [sp, #40]	; 0x28
 8005312:	3311      	adds	r3, #17
 8005314:	33ff      	adds	r3, #255	; 0xff
 8005316:	58e3      	ldr	r3, [r4, r3]
 8005318:	9208      	str	r2, [sp, #32]
 800531a:	0031      	movs	r1, r6
 800531c:	68ea      	ldr	r2, [r5, #12]
 800531e:	0020      	movs	r0, r4
 8005320:	930b      	str	r3, [sp, #44]	; 0x2c
 8005322:	9509      	str	r5, [sp, #36]	; 0x24
 8005324:	f7ff fa3a 	bl	800479c <d_print_comp>
 8005328:	68bb      	ldr	r3, [r7, #8]
 800532a:	2b00      	cmp	r3, #0
 800532c:	d104      	bne.n	8005338 <d_print_comp+0xb9c>
 800532e:	002a      	movs	r2, r5
 8005330:	0031      	movs	r1, r6
 8005332:	0020      	movs	r0, r4
 8005334:	f002 fc3c 	bl	8007bb0 <d_print_mod>
 8005338:	238a      	movs	r3, #138	; 0x8a
 800533a:	9a08      	ldr	r2, [sp, #32]
 800533c:	005b      	lsls	r3, r3, #1
 800533e:	50e2      	str	r2, [r4, r3]
 8005340:	465b      	mov	r3, fp
 8005342:	686a      	ldr	r2, [r5, #4]
 8005344:	685b      	ldr	r3, [r3, #4]
 8005346:	f7ff fadc 	bl	8004902 <d_print_comp+0x166>
 800534a:	68ea      	ldr	r2, [r5, #12]
 800534c:	7811      	ldrb	r1, [r2, #0]
 800534e:	293a      	cmp	r1, #58	; 0x3a
 8005350:	d101      	bne.n	8005356 <d_print_comp+0xbba>
 8005352:	f001 fd9b 	bl	8006e8c <d_print_comp+0x26f0>
 8005356:	228c      	movs	r2, #140	; 0x8c
 8005358:	2101      	movs	r1, #1
 800535a:	0052      	lsls	r2, r2, #1
 800535c:	50a1      	str	r1, [r4, r2]
 800535e:	686a      	ldr	r2, [r5, #4]
 8005360:	f7ff facf 	bl	8004902 <d_print_comp+0x166>
 8005364:	08026f80 	.word	0x08026f80
 8005368:	08026f74 	.word	0x08026f74
 800536c:	08026f7c 	.word	0x08026f7c
 8005370:	08026f70 	.word	0x08026f70
 8005374:	080211bc 	.word	0x080211bc
 8005378:	08026f60 	.word	0x08026f60
 800537c:	228c      	movs	r2, #140	; 0x8c
 800537e:	2101      	movs	r1, #1
 8005380:	0052      	lsls	r2, r2, #1
 8005382:	50a1      	str	r1, [r4, r2]
 8005384:	686a      	ldr	r2, [r5, #4]
 8005386:	f7ff fabc 	bl	8004902 <d_print_comp+0x166>
 800538a:	68ea      	ldr	r2, [r5, #12]
 800538c:	7812      	ldrb	r2, [r2, #0]
 800538e:	2a38      	cmp	r2, #56	; 0x38
 8005390:	d101      	bne.n	8005396 <d_print_comp+0xbfa>
 8005392:	f001 fdf5 	bl	8006f80 <d_print_comp+0x27e4>
 8005396:	228c      	movs	r2, #140	; 0x8c
 8005398:	2101      	movs	r1, #1
 800539a:	0052      	lsls	r2, r2, #1
 800539c:	50a1      	str	r1, [r4, r2]
 800539e:	686a      	ldr	r2, [r5, #4]
 80053a0:	f7ff faaf 	bl	8004902 <d_print_comp+0x166>
 80053a4:	68ab      	ldr	r3, [r5, #8]
 80053a6:	4698      	mov	r8, r3
 80053a8:	781b      	ldrb	r3, [r3, #0]
 80053aa:	68ef      	ldr	r7, [r5, #12]
 80053ac:	2b31      	cmp	r3, #49	; 0x31
 80053ae:	d101      	bne.n	80053b4 <d_print_comp+0xc18>
 80053b0:	f001 fc88 	bl	8006cc4 <d_print_comp+0x2528>
 80053b4:	2b33      	cmp	r3, #51	; 0x33
 80053b6:	d001      	beq.n	80053bc <d_print_comp+0xc20>
 80053b8:	f002 faf8 	bl	80079ac <d_print_comp+0x3210>
 80053bc:	2380      	movs	r3, #128	; 0x80
 80053be:	005b      	lsls	r3, r3, #1
 80053c0:	58e1      	ldr	r1, [r4, r3]
 80053c2:	4699      	mov	r9, r3
 80053c4:	29ff      	cmp	r1, #255	; 0xff
 80053c6:	d113      	bne.n	80053f0 <d_print_comp+0xc54>
 80053c8:	2300      	movs	r3, #0
 80053ca:	2286      	movs	r2, #134	; 0x86
 80053cc:	5463      	strb	r3, [r4, r1]
 80053ce:	469a      	mov	sl, r3
 80053d0:	2384      	movs	r3, #132	; 0x84
 80053d2:	0052      	lsls	r2, r2, #1
 80053d4:	005b      	lsls	r3, r3, #1
 80053d6:	58e3      	ldr	r3, [r4, r3]
 80053d8:	58a2      	ldr	r2, [r4, r2]
 80053da:	0020      	movs	r0, r4
 80053dc:	f003 ff10 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 80053e0:	464b      	mov	r3, r9
 80053e2:	4652      	mov	r2, sl
 80053e4:	50e2      	str	r2, [r4, r3]
 80053e6:	3225      	adds	r2, #37	; 0x25
 80053e8:	32ff      	adds	r2, #255	; 0xff
 80053ea:	58a3      	ldr	r3, [r4, r2]
 80053ec:	3301      	adds	r3, #1
 80053ee:	50a3      	str	r3, [r4, r2]
 80053f0:	2380      	movs	r3, #128	; 0x80
 80053f2:	005b      	lsls	r3, r3, #1
 80053f4:	4699      	mov	r9, r3
 80053f6:	4649      	mov	r1, r9
 80053f8:	58e2      	ldr	r2, [r4, r3]
 80053fa:	1c53      	adds	r3, r2, #1
 80053fc:	5063      	str	r3, [r4, r1]
 80053fe:	2328      	movs	r3, #40	; 0x28
 8005400:	54a3      	strb	r3, [r4, r2]
 8005402:	2282      	movs	r2, #130	; 0x82
 8005404:	0052      	lsls	r2, r2, #1
 8005406:	54a3      	strb	r3, [r4, r2]
 8005408:	4643      	mov	r3, r8
 800540a:	0031      	movs	r1, r6
 800540c:	689a      	ldr	r2, [r3, #8]
 800540e:	0020      	movs	r0, r4
 8005410:	f7ff f9c4 	bl	800479c <d_print_comp>
 8005414:	464b      	mov	r3, r9
 8005416:	58e1      	ldr	r1, [r4, r3]
 8005418:	29ff      	cmp	r1, #255	; 0xff
 800541a:	d113      	bne.n	8005444 <d_print_comp+0xca8>
 800541c:	2300      	movs	r3, #0
 800541e:	2286      	movs	r2, #134	; 0x86
 8005420:	5463      	strb	r3, [r4, r1]
 8005422:	4698      	mov	r8, r3
 8005424:	2384      	movs	r3, #132	; 0x84
 8005426:	0052      	lsls	r2, r2, #1
 8005428:	005b      	lsls	r3, r3, #1
 800542a:	58e3      	ldr	r3, [r4, r3]
 800542c:	58a2      	ldr	r2, [r4, r2]
 800542e:	0020      	movs	r0, r4
 8005430:	f003 fee6 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8005434:	464b      	mov	r3, r9
 8005436:	4642      	mov	r2, r8
 8005438:	50e2      	str	r2, [r4, r3]
 800543a:	3225      	adds	r2, #37	; 0x25
 800543c:	32ff      	adds	r2, #255	; 0xff
 800543e:	58a3      	ldr	r3, [r4, r2]
 8005440:	3301      	adds	r3, #1
 8005442:	50a3      	str	r3, [r4, r2]
 8005444:	2380      	movs	r3, #128	; 0x80
 8005446:	005b      	lsls	r3, r3, #1
 8005448:	58e2      	ldr	r2, [r4, r3]
 800544a:	1c51      	adds	r1, r2, #1
 800544c:	50e1      	str	r1, [r4, r3]
 800544e:	3bd7      	subs	r3, #215	; 0xd7
 8005450:	54a3      	strb	r3, [r4, r2]
 8005452:	2282      	movs	r2, #130	; 0x82
 8005454:	0052      	lsls	r2, r2, #1
 8005456:	54a3      	strb	r3, [r4, r2]
 8005458:	003a      	movs	r2, r7
 800545a:	0031      	movs	r1, r6
 800545c:	0020      	movs	r0, r4
 800545e:	f003 fae5 	bl	8008a2c <d_print_subexpr>
 8005462:	465b      	mov	r3, fp
 8005464:	686a      	ldr	r2, [r5, #4]
 8005466:	685b      	ldr	r3, [r3, #4]
 8005468:	f7ff fa4b 	bl	8004902 <d_print_comp+0x166>
 800546c:	218a      	movs	r1, #138	; 0x8a
 800546e:	0049      	lsls	r1, r1, #1
 8005470:	5863      	ldr	r3, [r4, r1]
 8005472:	4698      	mov	r8, r3
 8005474:	ab08      	add	r3, sp, #32
 8005476:	469a      	mov	sl, r3
 8005478:	4643      	mov	r3, r8
 800547a:	9308      	str	r3, [sp, #32]
 800547c:	4653      	mov	r3, sl
 800547e:	4652      	mov	r2, sl
 8005480:	605d      	str	r5, [r3, #4]
 8005482:	5063      	str	r3, [r4, r1]
 8005484:	2300      	movs	r3, #0
 8005486:	6093      	str	r3, [r2, #8]
 8005488:	3311      	adds	r3, #17
 800548a:	33ff      	adds	r3, #255	; 0xff
 800548c:	58e3      	ldr	r3, [r4, r3]
 800548e:	60d3      	str	r3, [r2, #12]
 8005490:	4643      	mov	r3, r8
 8005492:	2b00      	cmp	r3, #0
 8005494:	d101      	bne.n	800549a <d_print_comp+0xcfe>
 8005496:	f002 f8ee 	bl	8007676 <d_print_comp+0x2eda>
 800549a:	685b      	ldr	r3, [r3, #4]
 800549c:	781b      	ldrb	r3, [r3, #0]
 800549e:	3b19      	subs	r3, #25
 80054a0:	061b      	lsls	r3, r3, #24
 80054a2:	0e1b      	lsrs	r3, r3, #24
 80054a4:	2b02      	cmp	r3, #2
 80054a6:	d901      	bls.n	80054ac <d_print_comp+0xd10>
 80054a8:	f002 f8e5 	bl	8007676 <d_print_comp+0x2eda>
 80054ac:	2301      	movs	r3, #1
 80054ae:	469c      	mov	ip, r3
 80054b0:	4653      	mov	r3, sl
 80054b2:	4642      	mov	r2, r8
 80054b4:	2701      	movs	r7, #1
 80054b6:	9102      	str	r1, [sp, #8]
 80054b8:	9401      	str	r4, [sp, #4]
 80054ba:	46b1      	mov	r9, r6
 80054bc:	9300      	str	r3, [sp, #0]
 80054be:	46aa      	mov	sl, r5
 80054c0:	e006      	b.n	80054d0 <d_print_comp+0xd34>
 80054c2:	6853      	ldr	r3, [r2, #4]
 80054c4:	781b      	ldrb	r3, [r3, #0]
 80054c6:	3b19      	subs	r3, #25
 80054c8:	061b      	lsls	r3, r3, #24
 80054ca:	0e1b      	lsrs	r3, r3, #24
 80054cc:	2b02      	cmp	r3, #2
 80054ce:	d81b      	bhi.n	8005508 <d_print_comp+0xd6c>
 80054d0:	6893      	ldr	r3, [r2, #8]
 80054d2:	2b00      	cmp	r3, #0
 80054d4:	d115      	bne.n	8005502 <d_print_comp+0xd66>
 80054d6:	2f03      	cmp	r7, #3
 80054d8:	d901      	bls.n	80054de <d_print_comp+0xd42>
 80054da:	f001 ffab 	bl	8007434 <d_print_comp+0x2c98>
 80054de:	0016      	movs	r6, r2
 80054e0:	9900      	ldr	r1, [sp, #0]
 80054e2:	013d      	lsls	r5, r7, #4
 80054e4:	194b      	adds	r3, r1, r5
 80054e6:	ce13      	ldmia	r6!, {r0, r1, r4}
 80054e8:	c313      	stmia	r3!, {r0, r1, r4}
 80054ea:	6836      	ldr	r6, [r6, #0]
 80054ec:	601e      	str	r6, [r3, #0]
 80054ee:	9801      	ldr	r0, [sp, #4]
 80054f0:	9c02      	ldr	r4, [sp, #8]
 80054f2:	9900      	ldr	r1, [sp, #0]
 80054f4:	5903      	ldr	r3, [r0, r4]
 80054f6:	514b      	str	r3, [r1, r5]
 80054f8:	194b      	adds	r3, r1, r5
 80054fa:	5103      	str	r3, [r0, r4]
 80054fc:	4663      	mov	r3, ip
 80054fe:	6093      	str	r3, [r2, #8]
 8005500:	3701      	adds	r7, #1
 8005502:	6812      	ldr	r2, [r2, #0]
 8005504:	2a00      	cmp	r2, #0
 8005506:	d1dc      	bne.n	80054c2 <d_print_comp+0xd26>
 8005508:	4655      	mov	r5, sl
 800550a:	9c01      	ldr	r4, [sp, #4]
 800550c:	9b00      	ldr	r3, [sp, #0]
 800550e:	68ea      	ldr	r2, [r5, #12]
 8005510:	4649      	mov	r1, r9
 8005512:	0020      	movs	r0, r4
 8005514:	469a      	mov	sl, r3
 8005516:	f7ff f941 	bl	800479c <d_print_comp>
 800551a:	238a      	movs	r3, #138	; 0x8a
 800551c:	4642      	mov	r2, r8
 800551e:	005b      	lsls	r3, r3, #1
 8005520:	50e2      	str	r2, [r4, r3]
 8005522:	4653      	mov	r3, sl
 8005524:	689b      	ldr	r3, [r3, #8]
 8005526:	464e      	mov	r6, r9
 8005528:	2b00      	cmp	r3, #0
 800552a:	d117      	bne.n	800555c <d_print_comp+0xdc0>
 800552c:	2f01      	cmp	r7, #1
 800552e:	d00c      	beq.n	800554a <d_print_comp+0xdae>
 8005530:	ab09      	add	r3, sp, #36	; 0x24
 8005532:	4698      	mov	r8, r3
 8005534:	013f      	lsls	r7, r7, #4
 8005536:	3f0c      	subs	r7, #12
 8005538:	4457      	add	r7, sl
 800553a:	683a      	ldr	r2, [r7, #0]
 800553c:	0031      	movs	r1, r6
 800553e:	0020      	movs	r0, r4
 8005540:	3f10      	subs	r7, #16
 8005542:	f002 fb35 	bl	8007bb0 <d_print_mod>
 8005546:	45b8      	cmp	r8, r7
 8005548:	d1f7      	bne.n	800553a <d_print_comp+0xd9e>
 800554a:	238a      	movs	r3, #138	; 0x8a
 800554c:	002a      	movs	r2, r5
 800554e:	005b      	lsls	r3, r3, #1
 8005550:	58e3      	ldr	r3, [r4, r3]
 8005552:	3208      	adds	r2, #8
 8005554:	0031      	movs	r1, r6
 8005556:	0020      	movs	r0, r4
 8005558:	f003 f92a 	bl	80087b0 <d_print_array_type.isra.14>
 800555c:	465b      	mov	r3, fp
 800555e:	686a      	ldr	r2, [r5, #4]
 8005560:	685b      	ldr	r3, [r3, #4]
 8005562:	f7ff f9ce 	bl	8004902 <d_print_comp+0x166>
 8005566:	2286      	movs	r2, #134	; 0x86
 8005568:	2380      	movs	r3, #128	; 0x80
 800556a:	0052      	lsls	r2, r2, #1
 800556c:	005b      	lsls	r3, r3, #1
 800556e:	4692      	mov	sl, r2
 8005570:	3a04      	subs	r2, #4
 8005572:	58e3      	ldr	r3, [r4, r3]
 8005574:	4fe8      	ldr	r7, [pc, #928]	; (8005918 <d_print_comp+0x117c>)
 8005576:	4691      	mov	r9, r2
 8005578:	46a8      	mov	r8, r5
 800557a:	e01d      	b.n	80055b8 <d_print_comp+0xe1c>
 800557c:	2200      	movs	r2, #0
 800557e:	54e2      	strb	r2, [r4, r3]
 8005580:	4653      	mov	r3, sl
 8005582:	58e2      	ldr	r2, [r4, r3]
 8005584:	464b      	mov	r3, r9
 8005586:	21ff      	movs	r1, #255	; 0xff
 8005588:	58e3      	ldr	r3, [r4, r3]
 800558a:	0020      	movs	r0, r4
 800558c:	f003 fe38 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8005590:	2292      	movs	r2, #146	; 0x92
 8005592:	0052      	lsls	r2, r2, #1
 8005594:	58a3      	ldr	r3, [r4, r2]
 8005596:	3301      	adds	r3, #1
 8005598:	50a3      	str	r3, [r4, r2]
 800559a:	2301      	movs	r3, #1
 800559c:	2200      	movs	r2, #0
 800559e:	2180      	movs	r1, #128	; 0x80
 80055a0:	0049      	lsls	r1, r1, #1
 80055a2:	5063      	str	r3, [r4, r1]
 80055a4:	54a5      	strb	r5, [r4, r2]
 80055a6:	2282      	movs	r2, #130	; 0x82
 80055a8:	0052      	lsls	r2, r2, #1
 80055aa:	54a5      	strb	r5, [r4, r2]
 80055ac:	4adb      	ldr	r2, [pc, #876]	; (800591c <d_print_comp+0x1180>)
 80055ae:	3701      	adds	r7, #1
 80055b0:	42ba      	cmp	r2, r7
 80055b2:	d101      	bne.n	80055b8 <d_print_comp+0xe1c>
 80055b4:	f000 ff18 	bl	80063e8 <d_print_comp+0x1c4c>
 80055b8:	783d      	ldrb	r5, [r7, #0]
 80055ba:	2bff      	cmp	r3, #255	; 0xff
 80055bc:	d0de      	beq.n	800557c <d_print_comp+0xde0>
 80055be:	001a      	movs	r2, r3
 80055c0:	3301      	adds	r3, #1
 80055c2:	e7ec      	b.n	800559e <d_print_comp+0xe02>
 80055c4:	2286      	movs	r2, #134	; 0x86
 80055c6:	2380      	movs	r3, #128	; 0x80
 80055c8:	0052      	lsls	r2, r2, #1
 80055ca:	005b      	lsls	r3, r3, #1
 80055cc:	4692      	mov	sl, r2
 80055ce:	3a04      	subs	r2, #4
 80055d0:	58e3      	ldr	r3, [r4, r3]
 80055d2:	4fd3      	ldr	r7, [pc, #844]	; (8005920 <d_print_comp+0x1184>)
 80055d4:	4691      	mov	r9, r2
 80055d6:	46a8      	mov	r8, r5
 80055d8:	e01d      	b.n	8005616 <d_print_comp+0xe7a>
 80055da:	2200      	movs	r2, #0
 80055dc:	54e2      	strb	r2, [r4, r3]
 80055de:	4653      	mov	r3, sl
 80055e0:	58e2      	ldr	r2, [r4, r3]
 80055e2:	464b      	mov	r3, r9
 80055e4:	21ff      	movs	r1, #255	; 0xff
 80055e6:	58e3      	ldr	r3, [r4, r3]
 80055e8:	0020      	movs	r0, r4
 80055ea:	f003 fe09 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 80055ee:	2292      	movs	r2, #146	; 0x92
 80055f0:	0052      	lsls	r2, r2, #1
 80055f2:	58a3      	ldr	r3, [r4, r2]
 80055f4:	3301      	adds	r3, #1
 80055f6:	50a3      	str	r3, [r4, r2]
 80055f8:	2301      	movs	r3, #1
 80055fa:	2200      	movs	r2, #0
 80055fc:	2180      	movs	r1, #128	; 0x80
 80055fe:	0049      	lsls	r1, r1, #1
 8005600:	5063      	str	r3, [r4, r1]
 8005602:	54a5      	strb	r5, [r4, r2]
 8005604:	2282      	movs	r2, #130	; 0x82
 8005606:	0052      	lsls	r2, r2, #1
 8005608:	54a5      	strb	r5, [r4, r2]
 800560a:	4ac6      	ldr	r2, [pc, #792]	; (8005924 <d_print_comp+0x1188>)
 800560c:	3701      	adds	r7, #1
 800560e:	42ba      	cmp	r2, r7
 8005610:	d101      	bne.n	8005616 <d_print_comp+0xe7a>
 8005612:	f000 fead 	bl	8006370 <d_print_comp+0x1bd4>
 8005616:	783d      	ldrb	r5, [r7, #0]
 8005618:	2bff      	cmp	r3, #255	; 0xff
 800561a:	d0de      	beq.n	80055da <d_print_comp+0xe3e>
 800561c:	001a      	movs	r2, r3
 800561e:	3301      	adds	r3, #1
 8005620:	e7ec      	b.n	80055fc <d_print_comp+0xe60>
 8005622:	2380      	movs	r3, #128	; 0x80
 8005624:	2284      	movs	r2, #132	; 0x84
 8005626:	005b      	lsls	r3, r3, #1
 8005628:	0052      	lsls	r2, r2, #1
 800562a:	58e3      	ldr	r3, [r4, r3]
 800562c:	4fbe      	ldr	r7, [pc, #760]	; (8005928 <d_print_comp+0x118c>)
 800562e:	4692      	mov	sl, r2
 8005630:	46a8      	mov	r8, r5
 8005632:	e021      	b.n	8005678 <d_print_comp+0xedc>
 8005634:	2200      	movs	r2, #0
 8005636:	54e2      	strb	r2, [r4, r3]
 8005638:	2386      	movs	r3, #134	; 0x86
 800563a:	005b      	lsls	r3, r3, #1
 800563c:	58e3      	ldr	r3, [r4, r3]
 800563e:	001a      	movs	r2, r3
 8005640:	9300      	str	r3, [sp, #0]
 8005642:	4653      	mov	r3, sl
 8005644:	21ff      	movs	r1, #255	; 0xff
 8005646:	58e3      	ldr	r3, [r4, r3]
 8005648:	0020      	movs	r0, r4
 800564a:	f003 fdd9 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 800564e:	2292      	movs	r2, #146	; 0x92
 8005650:	0052      	lsls	r2, r2, #1
 8005652:	58a3      	ldr	r3, [r4, r2]
 8005654:	3301      	adds	r3, #1
 8005656:	50a3      	str	r3, [r4, r2]
 8005658:	2301      	movs	r3, #1
 800565a:	2200      	movs	r2, #0
 800565c:	2180      	movs	r1, #128	; 0x80
 800565e:	0049      	lsls	r1, r1, #1
 8005660:	5063      	str	r3, [r4, r1]
 8005662:	54a5      	strb	r5, [r4, r2]
 8005664:	2282      	movs	r2, #130	; 0x82
 8005666:	0052      	lsls	r2, r2, #1
 8005668:	54a5      	strb	r5, [r4, r2]
 800566a:	4ab0      	ldr	r2, [pc, #704]	; (800592c <d_print_comp+0x1190>)
 800566c:	3701      	adds	r7, #1
 800566e:	4689      	mov	r9, r1
 8005670:	42ba      	cmp	r2, r7
 8005672:	d101      	bne.n	8005678 <d_print_comp+0xedc>
 8005674:	f000 fe87 	bl	8006386 <d_print_comp+0x1bea>
 8005678:	783d      	ldrb	r5, [r7, #0]
 800567a:	2bff      	cmp	r3, #255	; 0xff
 800567c:	d0da      	beq.n	8005634 <d_print_comp+0xe98>
 800567e:	001a      	movs	r2, r3
 8005680:	3301      	adds	r3, #1
 8005682:	e7eb      	b.n	800565c <d_print_comp+0xec0>
 8005684:	2286      	movs	r2, #134	; 0x86
 8005686:	2380      	movs	r3, #128	; 0x80
 8005688:	0052      	lsls	r2, r2, #1
 800568a:	005b      	lsls	r3, r3, #1
 800568c:	4692      	mov	sl, r2
 800568e:	3a04      	subs	r2, #4
 8005690:	58e3      	ldr	r3, [r4, r3]
 8005692:	4fa7      	ldr	r7, [pc, #668]	; (8005930 <d_print_comp+0x1194>)
 8005694:	4691      	mov	r9, r2
 8005696:	46a8      	mov	r8, r5
 8005698:	e01d      	b.n	80056d6 <d_print_comp+0xf3a>
 800569a:	2200      	movs	r2, #0
 800569c:	54e2      	strb	r2, [r4, r3]
 800569e:	4653      	mov	r3, sl
 80056a0:	58e2      	ldr	r2, [r4, r3]
 80056a2:	464b      	mov	r3, r9
 80056a4:	21ff      	movs	r1, #255	; 0xff
 80056a6:	58e3      	ldr	r3, [r4, r3]
 80056a8:	0020      	movs	r0, r4
 80056aa:	f003 fda9 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 80056ae:	2292      	movs	r2, #146	; 0x92
 80056b0:	0052      	lsls	r2, r2, #1
 80056b2:	58a3      	ldr	r3, [r4, r2]
 80056b4:	3301      	adds	r3, #1
 80056b6:	50a3      	str	r3, [r4, r2]
 80056b8:	2301      	movs	r3, #1
 80056ba:	2200      	movs	r2, #0
 80056bc:	2180      	movs	r1, #128	; 0x80
 80056be:	0049      	lsls	r1, r1, #1
 80056c0:	5063      	str	r3, [r4, r1]
 80056c2:	54a5      	strb	r5, [r4, r2]
 80056c4:	2282      	movs	r2, #130	; 0x82
 80056c6:	0052      	lsls	r2, r2, #1
 80056c8:	54a5      	strb	r5, [r4, r2]
 80056ca:	4a9a      	ldr	r2, [pc, #616]	; (8005934 <d_print_comp+0x1198>)
 80056cc:	3701      	adds	r7, #1
 80056ce:	42ba      	cmp	r2, r7
 80056d0:	d101      	bne.n	80056d6 <d_print_comp+0xf3a>
 80056d2:	f000 fe37 	bl	8006344 <d_print_comp+0x1ba8>
 80056d6:	783d      	ldrb	r5, [r7, #0]
 80056d8:	2bff      	cmp	r3, #255	; 0xff
 80056da:	d0de      	beq.n	800569a <d_print_comp+0xefe>
 80056dc:	001a      	movs	r2, r3
 80056de:	3301      	adds	r3, #1
 80056e0:	e7ec      	b.n	80056bc <d_print_comp+0xf20>
 80056e2:	2286      	movs	r2, #134	; 0x86
 80056e4:	2380      	movs	r3, #128	; 0x80
 80056e6:	0052      	lsls	r2, r2, #1
 80056e8:	005b      	lsls	r3, r3, #1
 80056ea:	4692      	mov	sl, r2
 80056ec:	3a04      	subs	r2, #4
 80056ee:	58e3      	ldr	r3, [r4, r3]
 80056f0:	4f91      	ldr	r7, [pc, #580]	; (8005938 <d_print_comp+0x119c>)
 80056f2:	4691      	mov	r9, r2
 80056f4:	46a8      	mov	r8, r5
 80056f6:	e01d      	b.n	8005734 <d_print_comp+0xf98>
 80056f8:	2200      	movs	r2, #0
 80056fa:	54e2      	strb	r2, [r4, r3]
 80056fc:	4653      	mov	r3, sl
 80056fe:	58e2      	ldr	r2, [r4, r3]
 8005700:	464b      	mov	r3, r9
 8005702:	21ff      	movs	r1, #255	; 0xff
 8005704:	58e3      	ldr	r3, [r4, r3]
 8005706:	0020      	movs	r0, r4
 8005708:	f003 fd7a 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 800570c:	2292      	movs	r2, #146	; 0x92
 800570e:	0052      	lsls	r2, r2, #1
 8005710:	58a3      	ldr	r3, [r4, r2]
 8005712:	3301      	adds	r3, #1
 8005714:	50a3      	str	r3, [r4, r2]
 8005716:	2301      	movs	r3, #1
 8005718:	2200      	movs	r2, #0
 800571a:	2180      	movs	r1, #128	; 0x80
 800571c:	0049      	lsls	r1, r1, #1
 800571e:	5063      	str	r3, [r4, r1]
 8005720:	54a5      	strb	r5, [r4, r2]
 8005722:	2282      	movs	r2, #130	; 0x82
 8005724:	0052      	lsls	r2, r2, #1
 8005726:	54a5      	strb	r5, [r4, r2]
 8005728:	4a84      	ldr	r2, [pc, #528]	; (800593c <d_print_comp+0x11a0>)
 800572a:	3701      	adds	r7, #1
 800572c:	42ba      	cmp	r2, r7
 800572e:	d101      	bne.n	8005734 <d_print_comp+0xf98>
 8005730:	f000 fe13 	bl	800635a <d_print_comp+0x1bbe>
 8005734:	783d      	ldrb	r5, [r7, #0]
 8005736:	2bff      	cmp	r3, #255	; 0xff
 8005738:	d0de      	beq.n	80056f8 <d_print_comp+0xf5c>
 800573a:	001a      	movs	r2, r3
 800573c:	3301      	adds	r3, #1
 800573e:	e7ec      	b.n	800571a <d_print_comp+0xf7e>
 8005740:	2286      	movs	r2, #134	; 0x86
 8005742:	2380      	movs	r3, #128	; 0x80
 8005744:	0052      	lsls	r2, r2, #1
 8005746:	005b      	lsls	r3, r3, #1
 8005748:	4692      	mov	sl, r2
 800574a:	3a04      	subs	r2, #4
 800574c:	58e3      	ldr	r3, [r4, r3]
 800574e:	4f7c      	ldr	r7, [pc, #496]	; (8005940 <d_print_comp+0x11a4>)
 8005750:	4691      	mov	r9, r2
 8005752:	46a8      	mov	r8, r5
 8005754:	e01d      	b.n	8005792 <d_print_comp+0xff6>
 8005756:	2200      	movs	r2, #0
 8005758:	54e2      	strb	r2, [r4, r3]
 800575a:	4653      	mov	r3, sl
 800575c:	58e2      	ldr	r2, [r4, r3]
 800575e:	464b      	mov	r3, r9
 8005760:	21ff      	movs	r1, #255	; 0xff
 8005762:	58e3      	ldr	r3, [r4, r3]
 8005764:	0020      	movs	r0, r4
 8005766:	f003 fd4b 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 800576a:	2292      	movs	r2, #146	; 0x92
 800576c:	0052      	lsls	r2, r2, #1
 800576e:	58a3      	ldr	r3, [r4, r2]
 8005770:	3301      	adds	r3, #1
 8005772:	50a3      	str	r3, [r4, r2]
 8005774:	2301      	movs	r3, #1
 8005776:	2200      	movs	r2, #0
 8005778:	2180      	movs	r1, #128	; 0x80
 800577a:	0049      	lsls	r1, r1, #1
 800577c:	5063      	str	r3, [r4, r1]
 800577e:	54a5      	strb	r5, [r4, r2]
 8005780:	2282      	movs	r2, #130	; 0x82
 8005782:	0052      	lsls	r2, r2, #1
 8005784:	54a5      	strb	r5, [r4, r2]
 8005786:	4a6f      	ldr	r2, [pc, #444]	; (8005944 <d_print_comp+0x11a8>)
 8005788:	3701      	adds	r7, #1
 800578a:	42ba      	cmp	r2, r7
 800578c:	d101      	bne.n	8005792 <d_print_comp+0xff6>
 800578e:	f000 fdb5 	bl	80062fc <d_print_comp+0x1b60>
 8005792:	783d      	ldrb	r5, [r7, #0]
 8005794:	2bff      	cmp	r3, #255	; 0xff
 8005796:	d0de      	beq.n	8005756 <d_print_comp+0xfba>
 8005798:	001a      	movs	r2, r3
 800579a:	3301      	adds	r3, #1
 800579c:	e7ec      	b.n	8005778 <d_print_comp+0xfdc>
 800579e:	2286      	movs	r2, #134	; 0x86
 80057a0:	2380      	movs	r3, #128	; 0x80
 80057a2:	0052      	lsls	r2, r2, #1
 80057a4:	005b      	lsls	r3, r3, #1
 80057a6:	4692      	mov	sl, r2
 80057a8:	3a04      	subs	r2, #4
 80057aa:	58e3      	ldr	r3, [r4, r3]
 80057ac:	4f66      	ldr	r7, [pc, #408]	; (8005948 <d_print_comp+0x11ac>)
 80057ae:	4691      	mov	r9, r2
 80057b0:	46a8      	mov	r8, r5
 80057b2:	e01d      	b.n	80057f0 <d_print_comp+0x1054>
 80057b4:	2200      	movs	r2, #0
 80057b6:	54e2      	strb	r2, [r4, r3]
 80057b8:	4653      	mov	r3, sl
 80057ba:	58e2      	ldr	r2, [r4, r3]
 80057bc:	464b      	mov	r3, r9
 80057be:	21ff      	movs	r1, #255	; 0xff
 80057c0:	58e3      	ldr	r3, [r4, r3]
 80057c2:	0020      	movs	r0, r4
 80057c4:	f003 fd1c 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 80057c8:	2292      	movs	r2, #146	; 0x92
 80057ca:	0052      	lsls	r2, r2, #1
 80057cc:	58a3      	ldr	r3, [r4, r2]
 80057ce:	3301      	adds	r3, #1
 80057d0:	50a3      	str	r3, [r4, r2]
 80057d2:	2301      	movs	r3, #1
 80057d4:	2200      	movs	r2, #0
 80057d6:	2180      	movs	r1, #128	; 0x80
 80057d8:	0049      	lsls	r1, r1, #1
 80057da:	5063      	str	r3, [r4, r1]
 80057dc:	54a5      	strb	r5, [r4, r2]
 80057de:	2282      	movs	r2, #130	; 0x82
 80057e0:	0052      	lsls	r2, r2, #1
 80057e2:	54a5      	strb	r5, [r4, r2]
 80057e4:	4a59      	ldr	r2, [pc, #356]	; (800594c <d_print_comp+0x11b0>)
 80057e6:	3701      	adds	r7, #1
 80057e8:	42ba      	cmp	r2, r7
 80057ea:	d101      	bne.n	80057f0 <d_print_comp+0x1054>
 80057ec:	f000 fd91 	bl	8006312 <d_print_comp+0x1b76>
 80057f0:	783d      	ldrb	r5, [r7, #0]
 80057f2:	2bff      	cmp	r3, #255	; 0xff
 80057f4:	d0de      	beq.n	80057b4 <d_print_comp+0x1018>
 80057f6:	001a      	movs	r2, r3
 80057f8:	3301      	adds	r3, #1
 80057fa:	e7ec      	b.n	80057d6 <d_print_comp+0x103a>
 80057fc:	2286      	movs	r2, #134	; 0x86
 80057fe:	2380      	movs	r3, #128	; 0x80
 8005800:	0052      	lsls	r2, r2, #1
 8005802:	005b      	lsls	r3, r3, #1
 8005804:	4692      	mov	sl, r2
 8005806:	3a04      	subs	r2, #4
 8005808:	58e3      	ldr	r3, [r4, r3]
 800580a:	4f51      	ldr	r7, [pc, #324]	; (8005950 <d_print_comp+0x11b4>)
 800580c:	4691      	mov	r9, r2
 800580e:	46a8      	mov	r8, r5
 8005810:	e01d      	b.n	800584e <d_print_comp+0x10b2>
 8005812:	2200      	movs	r2, #0
 8005814:	54e2      	strb	r2, [r4, r3]
 8005816:	4653      	mov	r3, sl
 8005818:	58e2      	ldr	r2, [r4, r3]
 800581a:	464b      	mov	r3, r9
 800581c:	21ff      	movs	r1, #255	; 0xff
 800581e:	58e3      	ldr	r3, [r4, r3]
 8005820:	0020      	movs	r0, r4
 8005822:	f003 fced 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8005826:	2292      	movs	r2, #146	; 0x92
 8005828:	0052      	lsls	r2, r2, #1
 800582a:	58a3      	ldr	r3, [r4, r2]
 800582c:	3301      	adds	r3, #1
 800582e:	50a3      	str	r3, [r4, r2]
 8005830:	2301      	movs	r3, #1
 8005832:	2200      	movs	r2, #0
 8005834:	2180      	movs	r1, #128	; 0x80
 8005836:	0049      	lsls	r1, r1, #1
 8005838:	5063      	str	r3, [r4, r1]
 800583a:	54a5      	strb	r5, [r4, r2]
 800583c:	2282      	movs	r2, #130	; 0x82
 800583e:	0052      	lsls	r2, r2, #1
 8005840:	54a5      	strb	r5, [r4, r2]
 8005842:	4a44      	ldr	r2, [pc, #272]	; (8005954 <d_print_comp+0x11b8>)
 8005844:	3701      	adds	r7, #1
 8005846:	42ba      	cmp	r2, r7
 8005848:	d101      	bne.n	800584e <d_print_comp+0x10b2>
 800584a:	f000 fd41 	bl	80062d0 <d_print_comp+0x1b34>
 800584e:	783d      	ldrb	r5, [r7, #0]
 8005850:	2bff      	cmp	r3, #255	; 0xff
 8005852:	d0de      	beq.n	8005812 <d_print_comp+0x1076>
 8005854:	001a      	movs	r2, r3
 8005856:	3301      	adds	r3, #1
 8005858:	e7ec      	b.n	8005834 <d_print_comp+0x1098>
 800585a:	2286      	movs	r2, #134	; 0x86
 800585c:	2380      	movs	r3, #128	; 0x80
 800585e:	0052      	lsls	r2, r2, #1
 8005860:	005b      	lsls	r3, r3, #1
 8005862:	4692      	mov	sl, r2
 8005864:	3a04      	subs	r2, #4
 8005866:	58e3      	ldr	r3, [r4, r3]
 8005868:	4f3b      	ldr	r7, [pc, #236]	; (8005958 <d_print_comp+0x11bc>)
 800586a:	4691      	mov	r9, r2
 800586c:	46a8      	mov	r8, r5
 800586e:	e01d      	b.n	80058ac <d_print_comp+0x1110>
 8005870:	2200      	movs	r2, #0
 8005872:	54e2      	strb	r2, [r4, r3]
 8005874:	4653      	mov	r3, sl
 8005876:	58e2      	ldr	r2, [r4, r3]
 8005878:	464b      	mov	r3, r9
 800587a:	21ff      	movs	r1, #255	; 0xff
 800587c:	58e3      	ldr	r3, [r4, r3]
 800587e:	0020      	movs	r0, r4
 8005880:	f003 fcbe 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8005884:	2292      	movs	r2, #146	; 0x92
 8005886:	0052      	lsls	r2, r2, #1
 8005888:	58a3      	ldr	r3, [r4, r2]
 800588a:	3301      	adds	r3, #1
 800588c:	50a3      	str	r3, [r4, r2]
 800588e:	2301      	movs	r3, #1
 8005890:	2200      	movs	r2, #0
 8005892:	2180      	movs	r1, #128	; 0x80
 8005894:	0049      	lsls	r1, r1, #1
 8005896:	5063      	str	r3, [r4, r1]
 8005898:	54a5      	strb	r5, [r4, r2]
 800589a:	2282      	movs	r2, #130	; 0x82
 800589c:	0052      	lsls	r2, r2, #1
 800589e:	54a5      	strb	r5, [r4, r2]
 80058a0:	4a2e      	ldr	r2, [pc, #184]	; (800595c <d_print_comp+0x11c0>)
 80058a2:	3701      	adds	r7, #1
 80058a4:	42ba      	cmp	r2, r7
 80058a6:	d101      	bne.n	80058ac <d_print_comp+0x1110>
 80058a8:	f000 fd1d 	bl	80062e6 <d_print_comp+0x1b4a>
 80058ac:	783d      	ldrb	r5, [r7, #0]
 80058ae:	2bff      	cmp	r3, #255	; 0xff
 80058b0:	d0de      	beq.n	8005870 <d_print_comp+0x10d4>
 80058b2:	001a      	movs	r2, r3
 80058b4:	3301      	adds	r3, #1
 80058b6:	e7ec      	b.n	8005892 <d_print_comp+0x10f6>
 80058b8:	68aa      	ldr	r2, [r5, #8]
 80058ba:	4690      	mov	r8, r2
 80058bc:	228e      	movs	r2, #142	; 0x8e
 80058be:	0052      	lsls	r2, r2, #1
 80058c0:	58a7      	ldr	r7, [r4, r2]
 80058c2:	2f00      	cmp	r7, #0
 80058c4:	d001      	beq.n	80058ca <d_print_comp+0x112e>
 80058c6:	f001 f93d 	bl	8006b44 <d_print_comp+0x23a8>
 80058ca:	4642      	mov	r2, r8
 80058cc:	7812      	ldrb	r2, [r2, #0]
 80058ce:	2a05      	cmp	r2, #5
 80058d0:	d101      	bne.n	80058d6 <d_print_comp+0x113a>
 80058d2:	f001 fdd2 	bl	800747a <d_print_comp+0x2cde>
 80058d6:	4643      	mov	r3, r8
 80058d8:	781b      	ldrb	r3, [r3, #0]
 80058da:	2b23      	cmp	r3, #35	; 0x23
 80058dc:	d007      	beq.n	80058ee <d_print_comp+0x1152>
 80058de:	782a      	ldrb	r2, [r5, #0]
 80058e0:	429a      	cmp	r2, r3
 80058e2:	d004      	beq.n	80058ee <d_print_comp+0x1152>
 80058e4:	2b24      	cmp	r3, #36	; 0x24
 80058e6:	d101      	bne.n	80058ec <d_print_comp+0x1150>
 80058e8:	f000 fc06 	bl	80060f8 <d_print_comp+0x195c>
 80058ec:	46a8      	mov	r8, r5
 80058ee:	ab08      	add	r3, sp, #32
 80058f0:	469a      	mov	sl, r3
 80058f2:	238a      	movs	r3, #138	; 0x8a
 80058f4:	005b      	lsls	r3, r3, #1
 80058f6:	58e2      	ldr	r2, [r4, r3]
 80058f8:	9208      	str	r2, [sp, #32]
 80058fa:	4652      	mov	r2, sl
 80058fc:	50e2      	str	r2, [r4, r3]
 80058fe:	4653      	mov	r3, sl
 8005900:	4642      	mov	r2, r8
 8005902:	605a      	str	r2, [r3, #4]
 8005904:	2300      	movs	r3, #0
 8005906:	4652      	mov	r2, sl
 8005908:	6093      	str	r3, [r2, #8]
 800590a:	3311      	adds	r3, #17
 800590c:	33ff      	adds	r3, #255	; 0xff
 800590e:	58e3      	ldr	r3, [r4, r3]
 8005910:	60d3      	str	r3, [r2, #12]
 8005912:	4643      	mov	r3, r8
 8005914:	689a      	ldr	r2, [r3, #8]
 8005916:	e036      	b.n	8005986 <d_print_comp+0x11ea>
 8005918:	08026e84 	.word	0x08026e84
 800591c:	08026e99 	.word	0x08026e99
 8005920:	08026f28 	.word	0x08026f28
 8005924:	08026f39 	.word	0x08026f39
 8005928:	08026f10 	.word	0x08026f10
 800592c:	08026f25 	.word	0x08026f25
 8005930:	08026ef4 	.word	0x08026ef4
 8005934:	08026f0d 	.word	0x08026f0d
 8005938:	08026edc 	.word	0x08026edc
 800593c:	08026ef2 	.word	0x08026ef2
 8005940:	08026ec8 	.word	0x08026ec8
 8005944:	08026edb 	.word	0x08026edb
 8005948:	08026eb8 	.word	0x08026eb8
 800594c:	08026ec7 	.word	0x08026ec7
 8005950:	08026e9c 	.word	0x08026e9c
 8005954:	08026eb6 	.word	0x08026eb6
 8005958:	08026e88 	.word	0x08026e88
 800595c:	08026e99 	.word	0x08026e99
 8005960:	2200      	movs	r2, #0
 8005962:	ab08      	add	r3, sp, #32
 8005964:	469a      	mov	sl, r3
 8005966:	238a      	movs	r3, #138	; 0x8a
 8005968:	005b      	lsls	r3, r3, #1
 800596a:	58e1      	ldr	r1, [r4, r3]
 800596c:	9108      	str	r1, [sp, #32]
 800596e:	4651      	mov	r1, sl
 8005970:	50e1      	str	r1, [r4, r3]
 8005972:	2300      	movs	r3, #0
 8005974:	608b      	str	r3, [r1, #8]
 8005976:	3311      	adds	r3, #17
 8005978:	33ff      	adds	r3, #255	; 0xff
 800597a:	58e3      	ldr	r3, [r4, r3]
 800597c:	604d      	str	r5, [r1, #4]
 800597e:	60cb      	str	r3, [r1, #12]
 8005980:	46a8      	mov	r8, r5
 8005982:	2a00      	cmp	r2, #0
 8005984:	d0c5      	beq.n	8005912 <d_print_comp+0x1176>
 8005986:	0031      	movs	r1, r6
 8005988:	0020      	movs	r0, r4
 800598a:	f7fe ff07 	bl	800479c <d_print_comp>
 800598e:	4653      	mov	r3, sl
 8005990:	689b      	ldr	r3, [r3, #8]
 8005992:	2b00      	cmp	r3, #0
 8005994:	d104      	bne.n	80059a0 <d_print_comp+0x1204>
 8005996:	4642      	mov	r2, r8
 8005998:	0031      	movs	r1, r6
 800599a:	0020      	movs	r0, r4
 800599c:	f002 f908 	bl	8007bb0 <d_print_mod>
 80059a0:	238a      	movs	r3, #138	; 0x8a
 80059a2:	9a08      	ldr	r2, [sp, #32]
 80059a4:	005b      	lsls	r3, r3, #1
 80059a6:	50e2      	str	r2, [r4, r3]
 80059a8:	2f00      	cmp	r7, #0
 80059aa:	d002      	beq.n	80059b2 <d_print_comp+0x1216>
 80059ac:	9a00      	ldr	r2, [sp, #0]
 80059ae:	3b04      	subs	r3, #4
 80059b0:	50e2      	str	r2, [r4, r3]
 80059b2:	465b      	mov	r3, fp
 80059b4:	686a      	ldr	r2, [r5, #4]
 80059b6:	685b      	ldr	r3, [r3, #4]
 80059b8:	f7fe ffa3 	bl	8004902 <d_print_comp+0x166>
 80059bc:	238a      	movs	r3, #138	; 0x8a
 80059be:	005b      	lsls	r3, r3, #1
 80059c0:	58e3      	ldr	r3, [r4, r3]
 80059c2:	2b00      	cmp	r3, #0
 80059c4:	d092      	beq.n	80058ec <d_print_comp+0x1150>
 80059c6:	4648      	mov	r0, r9
 80059c8:	689a      	ldr	r2, [r3, #8]
 80059ca:	2a00      	cmp	r2, #0
 80059cc:	d10d      	bne.n	80059ea <d_print_comp+0x124e>
 80059ce:	685a      	ldr	r2, [r3, #4]
 80059d0:	7811      	ldrb	r1, [r2, #0]
 80059d2:	000a      	movs	r2, r1
 80059d4:	3a19      	subs	r2, #25
 80059d6:	0612      	lsls	r2, r2, #24
 80059d8:	0e12      	lsrs	r2, r2, #24
 80059da:	2a02      	cmp	r2, #2
 80059dc:	d901      	bls.n	80059e2 <d_print_comp+0x1246>
 80059de:	f001 fc7a 	bl	80072d6 <d_print_comp+0x2b3a>
 80059e2:	4288      	cmp	r0, r1
 80059e4:	d101      	bne.n	80059ea <d_print_comp+0x124e>
 80059e6:	f001 fc6c 	bl	80072c2 <d_print_comp+0x2b26>
 80059ea:	681b      	ldr	r3, [r3, #0]
 80059ec:	2b00      	cmp	r3, #0
 80059ee:	d1eb      	bne.n	80059c8 <d_print_comp+0x122c>
 80059f0:	e77c      	b.n	80058ec <d_print_comp+0x1150>
 80059f2:	68e9      	ldr	r1, [r5, #12]
 80059f4:	68ae      	ldr	r6, [r5, #8]
 80059f6:	2900      	cmp	r1, #0
 80059f8:	d101      	bne.n	80059fe <d_print_comp+0x1262>
 80059fa:	f7fe ff82 	bl	8004902 <d_print_comp+0x166>
 80059fe:	2286      	movs	r2, #134	; 0x86
 8005a00:	0052      	lsls	r2, r2, #1
 8005a02:	2380      	movs	r3, #128	; 0x80
 8005a04:	4688      	mov	r8, r1
 8005a06:	4692      	mov	sl, r2
 8005a08:	3a04      	subs	r2, #4
 8005a0a:	4691      	mov	r9, r2
 8005a0c:	002a      	movs	r2, r5
 8005a0e:	44b0      	add	r8, r6
 8005a10:	005b      	lsls	r3, r3, #1
 8005a12:	4645      	mov	r5, r8
 8005a14:	58e3      	ldr	r3, [r4, r3]
 8005a16:	4690      	mov	r8, r2
 8005a18:	e01c      	b.n	8005a54 <d_print_comp+0x12b8>
 8005a1a:	2200      	movs	r2, #0
 8005a1c:	54e2      	strb	r2, [r4, r3]
 8005a1e:	4653      	mov	r3, sl
 8005a20:	58e2      	ldr	r2, [r4, r3]
 8005a22:	464b      	mov	r3, r9
 8005a24:	21ff      	movs	r1, #255	; 0xff
 8005a26:	58e3      	ldr	r3, [r4, r3]
 8005a28:	0020      	movs	r0, r4
 8005a2a:	f003 fbe9 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8005a2e:	2292      	movs	r2, #146	; 0x92
 8005a30:	0052      	lsls	r2, r2, #1
 8005a32:	58a3      	ldr	r3, [r4, r2]
 8005a34:	3301      	adds	r3, #1
 8005a36:	50a3      	str	r3, [r4, r2]
 8005a38:	2301      	movs	r3, #1
 8005a3a:	2200      	movs	r2, #0
 8005a3c:	2180      	movs	r1, #128	; 0x80
 8005a3e:	0049      	lsls	r1, r1, #1
 8005a40:	5063      	str	r3, [r4, r1]
 8005a42:	54a7      	strb	r7, [r4, r2]
 8005a44:	2282      	movs	r2, #130	; 0x82
 8005a46:	3601      	adds	r6, #1
 8005a48:	0052      	lsls	r2, r2, #1
 8005a4a:	54a7      	strb	r7, [r4, r2]
 8005a4c:	42b5      	cmp	r5, r6
 8005a4e:	d101      	bne.n	8005a54 <d_print_comp+0x12b8>
 8005a50:	f000 feaf 	bl	80067b2 <d_print_comp+0x2016>
 8005a54:	7837      	ldrb	r7, [r6, #0]
 8005a56:	2bff      	cmp	r3, #255	; 0xff
 8005a58:	d0df      	beq.n	8005a1a <d_print_comp+0x127e>
 8005a5a:	001a      	movs	r2, r3
 8005a5c:	3301      	adds	r3, #1
 8005a5e:	e7ed      	b.n	8005a3c <d_print_comp+0x12a0>
 8005a60:	68aa      	ldr	r2, [r5, #8]
 8005a62:	0031      	movs	r1, r6
 8005a64:	0020      	movs	r0, r4
 8005a66:	f7fe fe99 	bl	800479c <d_print_comp>
 8005a6a:	465b      	mov	r3, fp
 8005a6c:	686a      	ldr	r2, [r5, #4]
 8005a6e:	685b      	ldr	r3, [r3, #4]
 8005a70:	f7fe ff47 	bl	8004902 <d_print_comp+0x166>
 8005a74:	68a9      	ldr	r1, [r5, #8]
 8005a76:	0770      	lsls	r0, r6, #29
 8005a78:	d501      	bpl.n	8005a7e <d_print_comp+0x12e2>
 8005a7a:	f000 ff76 	bl	800696a <d_print_comp+0x21ce>
 8005a7e:	680e      	ldr	r6, [r1, #0]
 8005a80:	6849      	ldr	r1, [r1, #4]
 8005a82:	2900      	cmp	r1, #0
 8005a84:	d101      	bne.n	8005a8a <d_print_comp+0x12ee>
 8005a86:	f7fe ff3c 	bl	8004902 <d_print_comp+0x166>
 8005a8a:	2286      	movs	r2, #134	; 0x86
 8005a8c:	2380      	movs	r3, #128	; 0x80
 8005a8e:	4688      	mov	r8, r1
 8005a90:	0052      	lsls	r2, r2, #1
 8005a92:	005b      	lsls	r3, r3, #1
 8005a94:	4692      	mov	sl, r2
 8005a96:	3a04      	subs	r2, #4
 8005a98:	58e3      	ldr	r3, [r4, r3]
 8005a9a:	44b0      	add	r8, r6
 8005a9c:	4691      	mov	r9, r2
 8005a9e:	e01c      	b.n	8005ada <d_print_comp+0x133e>
 8005aa0:	2200      	movs	r2, #0
 8005aa2:	54e2      	strb	r2, [r4, r3]
 8005aa4:	4653      	mov	r3, sl
 8005aa6:	58e2      	ldr	r2, [r4, r3]
 8005aa8:	464b      	mov	r3, r9
 8005aaa:	21ff      	movs	r1, #255	; 0xff
 8005aac:	58e3      	ldr	r3, [r4, r3]
 8005aae:	0020      	movs	r0, r4
 8005ab0:	f003 fba6 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8005ab4:	2292      	movs	r2, #146	; 0x92
 8005ab6:	0052      	lsls	r2, r2, #1
 8005ab8:	58a3      	ldr	r3, [r4, r2]
 8005aba:	3301      	adds	r3, #1
 8005abc:	50a3      	str	r3, [r4, r2]
 8005abe:	2301      	movs	r3, #1
 8005ac0:	2200      	movs	r2, #0
 8005ac2:	2180      	movs	r1, #128	; 0x80
 8005ac4:	0049      	lsls	r1, r1, #1
 8005ac6:	5063      	str	r3, [r4, r1]
 8005ac8:	54a7      	strb	r7, [r4, r2]
 8005aca:	2282      	movs	r2, #130	; 0x82
 8005acc:	3601      	adds	r6, #1
 8005ace:	0052      	lsls	r2, r2, #1
 8005ad0:	54a7      	strb	r7, [r4, r2]
 8005ad2:	45b0      	cmp	r8, r6
 8005ad4:	d101      	bne.n	8005ada <d_print_comp+0x133e>
 8005ad6:	f001 f88b 	bl	8006bf0 <d_print_comp+0x2454>
 8005ada:	7837      	ldrb	r7, [r6, #0]
 8005adc:	2bff      	cmp	r3, #255	; 0xff
 8005ade:	d0df      	beq.n	8005aa0 <d_print_comp+0x1304>
 8005ae0:	001a      	movs	r2, r3
 8005ae2:	3301      	adds	r3, #1
 8005ae4:	e7ed      	b.n	8005ac2 <d_print_comp+0x1326>
 8005ae6:	2360      	movs	r3, #96	; 0x60
 8005ae8:	0032      	movs	r2, r6
 8005aea:	439a      	bics	r2, r3
 8005aec:	33b4      	adds	r3, #180	; 0xb4
 8005aee:	4699      	mov	r9, r3
 8005af0:	4690      	mov	r8, r2
 8005af2:	58e3      	ldr	r3, [r4, r3]
 8005af4:	06b2      	lsls	r2, r6, #26
 8005af6:	d501      	bpl.n	8005afc <d_print_comp+0x1360>
 8005af8:	f001 f96b 	bl	8006dd2 <d_print_comp+0x2636>
 8005afc:	68aa      	ldr	r2, [r5, #8]
 8005afe:	2a00      	cmp	r2, #0
 8005b00:	d004      	beq.n	8005b0c <d_print_comp+0x1370>
 8005b02:	2140      	movs	r1, #64	; 0x40
 8005b04:	400e      	ands	r6, r1
 8005b06:	d101      	bne.n	8005b0c <d_print_comp+0x1370>
 8005b08:	f001 fd7c 	bl	8007604 <d_print_comp+0x2e68>
 8005b0c:	238a      	movs	r3, #138	; 0x8a
 8005b0e:	002a      	movs	r2, r5
 8005b10:	005b      	lsls	r3, r3, #1
 8005b12:	58e3      	ldr	r3, [r4, r3]
 8005b14:	320c      	adds	r2, #12
 8005b16:	4641      	mov	r1, r8
 8005b18:	0020      	movs	r0, r4
 8005b1a:	f002 fbaf 	bl	800827c <d_print_function_type.isra.15>
 8005b1e:	465b      	mov	r3, fp
 8005b20:	686a      	ldr	r2, [r5, #4]
 8005b22:	685b      	ldr	r3, [r3, #4]
 8005b24:	f7fe feed 	bl	8004902 <d_print_comp+0x166>
 8005b28:	68ea      	ldr	r2, [r5, #12]
 8005b2a:	0031      	movs	r1, r6
 8005b2c:	0020      	movs	r0, r4
 8005b2e:	f7fe fe35 	bl	800479c <d_print_comp>
 8005b32:	465b      	mov	r3, fp
 8005b34:	686a      	ldr	r2, [r5, #4]
 8005b36:	685b      	ldr	r3, [r3, #4]
 8005b38:	f7fe fee3 	bl	8004902 <d_print_comp+0x166>
 8005b3c:	2380      	movs	r3, #128	; 0x80
 8005b3e:	68aa      	ldr	r2, [r5, #8]
 8005b40:	005b      	lsls	r3, r3, #1
 8005b42:	9200      	str	r2, [sp, #0]
 8005b44:	58e3      	ldr	r3, [r4, r3]
 8005b46:	2600      	movs	r6, #0
 8005b48:	2a00      	cmp	r2, #0
 8005b4a:	d101      	bne.n	8005b50 <d_print_comp+0x13b4>
 8005b4c:	f000 fe85 	bl	800685a <d_print_comp+0x20be>
 8005b50:	2286      	movs	r2, #134	; 0x86
 8005b52:	0052      	lsls	r2, r2, #1
 8005b54:	4692      	mov	sl, r2
 8005b56:	3a04      	subs	r2, #4
 8005b58:	4690      	mov	r8, r2
 8005b5a:	e01d      	b.n	8005b98 <d_print_comp+0x13fc>
 8005b5c:	2200      	movs	r2, #0
 8005b5e:	54e2      	strb	r2, [r4, r3]
 8005b60:	4653      	mov	r3, sl
 8005b62:	58e2      	ldr	r2, [r4, r3]
 8005b64:	4643      	mov	r3, r8
 8005b66:	21ff      	movs	r1, #255	; 0xff
 8005b68:	58e3      	ldr	r3, [r4, r3]
 8005b6a:	0020      	movs	r0, r4
 8005b6c:	f003 fb48 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8005b70:	2292      	movs	r2, #146	; 0x92
 8005b72:	0052      	lsls	r2, r2, #1
 8005b74:	58a3      	ldr	r3, [r4, r2]
 8005b76:	3301      	adds	r3, #1
 8005b78:	50a3      	str	r3, [r4, r2]
 8005b7a:	2301      	movs	r3, #1
 8005b7c:	2200      	movs	r2, #0
 8005b7e:	2180      	movs	r1, #128	; 0x80
 8005b80:	0049      	lsls	r1, r1, #1
 8005b82:	5063      	str	r3, [r4, r1]
 8005b84:	54a7      	strb	r7, [r4, r2]
 8005b86:	2282      	movs	r2, #130	; 0x82
 8005b88:	3601      	adds	r6, #1
 8005b8a:	0052      	lsls	r2, r2, #1
 8005b8c:	4689      	mov	r9, r1
 8005b8e:	54a7      	strb	r7, [r4, r2]
 8005b90:	2e06      	cmp	r6, #6
 8005b92:	d101      	bne.n	8005b98 <d_print_comp+0x13fc>
 8005b94:	f000 ff4b 	bl	8006a2e <d_print_comp+0x2292>
 8005b98:	4ade      	ldr	r2, [pc, #888]	; (8005f14 <d_print_comp+0x1778>)
 8005b9a:	5d97      	ldrb	r7, [r2, r6]
 8005b9c:	2bff      	cmp	r3, #255	; 0xff
 8005b9e:	d0dd      	beq.n	8005b5c <d_print_comp+0x13c0>
 8005ba0:	001a      	movs	r2, r3
 8005ba2:	3301      	adds	r3, #1
 8005ba4:	e7eb      	b.n	8005b7e <d_print_comp+0x13e2>
 8005ba6:	238e      	movs	r3, #142	; 0x8e
 8005ba8:	005b      	lsls	r3, r3, #1
 8005baa:	58e3      	ldr	r3, [r4, r3]
 8005bac:	2b00      	cmp	r3, #0
 8005bae:	d001      	beq.n	8005bb4 <d_print_comp+0x1418>
 8005bb0:	f000 ff9b 	bl	8006aea <d_print_comp+0x234e>
 8005bb4:	0029      	movs	r1, r5
 8005bb6:	0020      	movs	r0, r4
 8005bb8:	3108      	adds	r1, #8
 8005bba:	f7fc fd31 	bl	8002620 <d_lookup_template_argument.isra.10>
 8005bbe:	2800      	cmp	r0, #0
 8005bc0:	d101      	bne.n	8005bc6 <d_print_comp+0x142a>
 8005bc2:	f001 fb75 	bl	80072b0 <d_print_comp+0x2b14>
 8005bc6:	7803      	ldrb	r3, [r0, #0]
 8005bc8:	2b2f      	cmp	r3, #47	; 0x2f
 8005bca:	d101      	bne.n	8005bd0 <d_print_comp+0x1434>
 8005bcc:	f001 fb64 	bl	8007298 <d_print_comp+0x2afc>
 8005bd0:	2788      	movs	r7, #136	; 0x88
 8005bd2:	007f      	lsls	r7, r7, #1
 8005bd4:	59e3      	ldr	r3, [r4, r7]
 8005bd6:	4698      	mov	r8, r3
 8005bd8:	681b      	ldr	r3, [r3, #0]
 8005bda:	0002      	movs	r2, r0
 8005bdc:	51e3      	str	r3, [r4, r7]
 8005bde:	0031      	movs	r1, r6
 8005be0:	0020      	movs	r0, r4
 8005be2:	f7fe fddb 	bl	800479c <d_print_comp>
 8005be6:	4643      	mov	r3, r8
 8005be8:	51e3      	str	r3, [r4, r7]
 8005bea:	465b      	mov	r3, fp
 8005bec:	686a      	ldr	r2, [r5, #4]
 8005bee:	685b      	ldr	r3, [r3, #4]
 8005bf0:	f7fe fe87 	bl	8004902 <d_print_comp+0x166>
 8005bf4:	23a2      	movs	r3, #162	; 0xa2
 8005bf6:	005b      	lsls	r3, r3, #1
 8005bf8:	58e2      	ldr	r2, [r4, r3]
 8005bfa:	50e5      	str	r5, [r4, r3]
 8005bfc:	3b30      	subs	r3, #48	; 0x30
 8005bfe:	4690      	mov	r8, r2
 8005c00:	58e2      	ldr	r2, [r4, r3]
 8005c02:	4691      	mov	r9, r2
 8005c04:	2200      	movs	r2, #0
 8005c06:	68af      	ldr	r7, [r5, #8]
 8005c08:	50e2      	str	r2, [r4, r3]
 8005c0a:	0773      	lsls	r3, r6, #29
 8005c0c:	d507      	bpl.n	8005c1e <d_print_comp+0x1482>
 8005c0e:	783b      	ldrb	r3, [r7, #0]
 8005c10:	4293      	cmp	r3, r2
 8005c12:	d104      	bne.n	8005c1e <d_print_comp+0x1482>
 8005c14:	68fa      	ldr	r2, [r7, #12]
 8005c16:	2a06      	cmp	r2, #6
 8005c18:	d101      	bne.n	8005c1e <d_print_comp+0x1482>
 8005c1a:	f001 fdb2 	bl	8007782 <d_print_comp+0x2fe6>
 8005c1e:	003a      	movs	r2, r7
 8005c20:	0031      	movs	r1, r6
 8005c22:	0020      	movs	r0, r4
 8005c24:	f7fe fdba 	bl	800479c <d_print_comp>
 8005c28:	2382      	movs	r3, #130	; 0x82
 8005c2a:	005b      	lsls	r3, r3, #1
 8005c2c:	5ce3      	ldrb	r3, [r4, r3]
 8005c2e:	2b3c      	cmp	r3, #60	; 0x3c
 8005c30:	d101      	bne.n	8005c36 <d_print_comp+0x149a>
 8005c32:	f001 fa36 	bl	80070a2 <d_print_comp+0x2906>
 8005c36:	2780      	movs	r7, #128	; 0x80
 8005c38:	007f      	lsls	r7, r7, #1
 8005c3a:	59e3      	ldr	r3, [r4, r7]
 8005c3c:	2bff      	cmp	r3, #255	; 0xff
 8005c3e:	d112      	bne.n	8005c66 <d_print_comp+0x14ca>
 8005c40:	2200      	movs	r2, #0
 8005c42:	54e2      	strb	r2, [r4, r3]
 8005c44:	4692      	mov	sl, r2
 8005c46:	2286      	movs	r2, #134	; 0x86
 8005c48:	3309      	adds	r3, #9
 8005c4a:	0052      	lsls	r2, r2, #1
 8005c4c:	58e3      	ldr	r3, [r4, r3]
 8005c4e:	58a2      	ldr	r2, [r4, r2]
 8005c50:	21ff      	movs	r1, #255	; 0xff
 8005c52:	0020      	movs	r0, r4
 8005c54:	f003 fad4 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8005c58:	2292      	movs	r2, #146	; 0x92
 8005c5a:	4653      	mov	r3, sl
 8005c5c:	0052      	lsls	r2, r2, #1
 8005c5e:	51e3      	str	r3, [r4, r7]
 8005c60:	58a3      	ldr	r3, [r4, r2]
 8005c62:	3301      	adds	r3, #1
 8005c64:	50a3      	str	r3, [r4, r2]
 8005c66:	2780      	movs	r7, #128	; 0x80
 8005c68:	007f      	lsls	r7, r7, #1
 8005c6a:	59e2      	ldr	r2, [r4, r7]
 8005c6c:	1c53      	adds	r3, r2, #1
 8005c6e:	51e3      	str	r3, [r4, r7]
 8005c70:	233c      	movs	r3, #60	; 0x3c
 8005c72:	54a3      	strb	r3, [r4, r2]
 8005c74:	2282      	movs	r2, #130	; 0x82
 8005c76:	0052      	lsls	r2, r2, #1
 8005c78:	4692      	mov	sl, r2
 8005c7a:	54a3      	strb	r3, [r4, r2]
 8005c7c:	0031      	movs	r1, r6
 8005c7e:	68ea      	ldr	r2, [r5, #12]
 8005c80:	0020      	movs	r0, r4
 8005c82:	f7fe fd8b 	bl	800479c <d_print_comp>
 8005c86:	4653      	mov	r3, sl
 8005c88:	5ce3      	ldrb	r3, [r4, r3]
 8005c8a:	2b3e      	cmp	r3, #62	; 0x3e
 8005c8c:	d101      	bne.n	8005c92 <d_print_comp+0x14f6>
 8005c8e:	f001 f9e9 	bl	8007064 <d_print_comp+0x28c8>
 8005c92:	2680      	movs	r6, #128	; 0x80
 8005c94:	0076      	lsls	r6, r6, #1
 8005c96:	59a3      	ldr	r3, [r4, r6]
 8005c98:	2bff      	cmp	r3, #255	; 0xff
 8005c9a:	d110      	bne.n	8005cbe <d_print_comp+0x1522>
 8005c9c:	2700      	movs	r7, #0
 8005c9e:	2286      	movs	r2, #134	; 0x86
 8005ca0:	54e7      	strb	r7, [r4, r3]
 8005ca2:	0052      	lsls	r2, r2, #1
 8005ca4:	3309      	adds	r3, #9
 8005ca6:	58e3      	ldr	r3, [r4, r3]
 8005ca8:	58a2      	ldr	r2, [r4, r2]
 8005caa:	21ff      	movs	r1, #255	; 0xff
 8005cac:	0020      	movs	r0, r4
 8005cae:	f003 faa7 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8005cb2:	2292      	movs	r2, #146	; 0x92
 8005cb4:	0052      	lsls	r2, r2, #1
 8005cb6:	58a3      	ldr	r3, [r4, r2]
 8005cb8:	3301      	adds	r3, #1
 8005cba:	51a7      	str	r7, [r4, r6]
 8005cbc:	50a3      	str	r3, [r4, r2]
 8005cbe:	2380      	movs	r3, #128	; 0x80
 8005cc0:	005b      	lsls	r3, r3, #1
 8005cc2:	58e2      	ldr	r2, [r4, r3]
 8005cc4:	1c51      	adds	r1, r2, #1
 8005cc6:	50e1      	str	r1, [r4, r3]
 8005cc8:	3bc2      	subs	r3, #194	; 0xc2
 8005cca:	54a3      	strb	r3, [r4, r2]
 8005ccc:	2282      	movs	r2, #130	; 0x82
 8005cce:	0052      	lsls	r2, r2, #1
 8005cd0:	54a3      	strb	r3, [r4, r2]
 8005cd2:	238a      	movs	r3, #138	; 0x8a
 8005cd4:	464a      	mov	r2, r9
 8005cd6:	005b      	lsls	r3, r3, #1
 8005cd8:	50e2      	str	r2, [r4, r3]
 8005cda:	4642      	mov	r2, r8
 8005cdc:	3330      	adds	r3, #48	; 0x30
 8005cde:	50e2      	str	r2, [r4, r3]
 8005ce0:	465b      	mov	r3, fp
 8005ce2:	686a      	ldr	r2, [r5, #4]
 8005ce4:	685b      	ldr	r3, [r3, #4]
 8005ce6:	f7fe fe0c 	bl	8004902 <d_print_comp+0x166>
 8005cea:	238a      	movs	r3, #138	; 0x8a
 8005cec:	005b      	lsls	r3, r3, #1
 8005cee:	58e2      	ldr	r2, [r4, r3]
 8005cf0:	9202      	str	r2, [sp, #8]
 8005cf2:	2200      	movs	r2, #0
 8005cf4:	50e2      	str	r2, [r4, r3]
 8005cf6:	68ab      	ldr	r3, [r5, #8]
 8005cf8:	4699      	mov	r9, r3
 8005cfa:	2b00      	cmp	r3, #0
 8005cfc:	d02e      	beq.n	8005d5c <d_print_comp+0x15c0>
 8005cfe:	2388      	movs	r3, #136	; 0x88
 8005d00:	005b      	lsls	r3, r3, #1
 8005d02:	58e3      	ldr	r3, [r4, r3]
 8005d04:	2200      	movs	r2, #0
 8005d06:	9301      	str	r3, [sp, #4]
 8005d08:	ab08      	add	r3, sp, #32
 8005d0a:	469a      	mov	sl, r3
 8005d0c:	001f      	movs	r7, r3
 8005d0e:	46a0      	mov	r8, r4
 8005d10:	2300      	movs	r3, #0
 8005d12:	464c      	mov	r4, r9
 8005d14:	46a9      	mov	r9, r5
 8005d16:	9200      	str	r2, [sp, #0]
 8005d18:	9603      	str	r6, [sp, #12]
 8005d1a:	603b      	str	r3, [r7, #0]
 8005d1c:	2300      	movs	r3, #0
 8005d1e:	607c      	str	r4, [r7, #4]
 8005d20:	60bb      	str	r3, [r7, #8]
 8005d22:	9b01      	ldr	r3, [sp, #4]
 8005d24:	7825      	ldrb	r5, [r4, #0]
 8005d26:	60fb      	str	r3, [r7, #12]
 8005d28:	9b00      	ldr	r3, [sp, #0]
 8005d2a:	0028      	movs	r0, r5
 8005d2c:	3301      	adds	r3, #1
 8005d2e:	003e      	movs	r6, r7
 8005d30:	9300      	str	r3, [sp, #0]
 8005d32:	f7fc fa1d 	bl	8002170 <is_fnqual_component_type>
 8005d36:	2800      	cmp	r0, #0
 8005d38:	d101      	bne.n	8005d3e <d_print_comp+0x15a2>
 8005d3a:	f001 fad5 	bl	80072e8 <d_print_comp+0x2b4c>
 8005d3e:	68a4      	ldr	r4, [r4, #8]
 8005d40:	2c00      	cmp	r4, #0
 8005d42:	d101      	bne.n	8005d48 <d_print_comp+0x15ac>
 8005d44:	f001 fb83 	bl	800744e <d_print_comp+0x2cb2>
 8005d48:	9a00      	ldr	r2, [sp, #0]
 8005d4a:	3710      	adds	r7, #16
 8005d4c:	0033      	movs	r3, r6
 8005d4e:	2a04      	cmp	r2, #4
 8005d50:	d1e3      	bne.n	8005d1a <d_print_comp+0x157e>
 8005d52:	4644      	mov	r4, r8
 8005d54:	464d      	mov	r5, r9
 8005d56:	3211      	adds	r2, #17
 8005d58:	32ff      	adds	r2, #255	; 0xff
 8005d5a:	50a6      	str	r6, [r4, r2]
 8005d5c:	238c      	movs	r3, #140	; 0x8c
 8005d5e:	2201      	movs	r2, #1
 8005d60:	005b      	lsls	r3, r3, #1
 8005d62:	50e2      	str	r2, [r4, r3]
 8005d64:	465b      	mov	r3, fp
 8005d66:	686a      	ldr	r2, [r5, #4]
 8005d68:	685b      	ldr	r3, [r3, #4]
 8005d6a:	f7fe fdca 	bl	8004902 <d_print_comp+0x166>
 8005d6e:	68aa      	ldr	r2, [r5, #8]
 8005d70:	0031      	movs	r1, r6
 8005d72:	0020      	movs	r0, r4
 8005d74:	f7fe fd12 	bl	800479c <d_print_comp>
 8005d78:	0773      	lsls	r3, r6, #29
 8005d7a:	d401      	bmi.n	8005d80 <d_print_comp+0x15e4>
 8005d7c:	f000 ff42 	bl	8006c04 <d_print_comp+0x2468>
 8005d80:	2780      	movs	r7, #128	; 0x80
 8005d82:	007f      	lsls	r7, r7, #1
 8005d84:	59e1      	ldr	r1, [r4, r7]
 8005d86:	29ff      	cmp	r1, #255	; 0xff
 8005d88:	d112      	bne.n	8005db0 <d_print_comp+0x1614>
 8005d8a:	2300      	movs	r3, #0
 8005d8c:	2286      	movs	r2, #134	; 0x86
 8005d8e:	5463      	strb	r3, [r4, r1]
 8005d90:	4698      	mov	r8, r3
 8005d92:	2384      	movs	r3, #132	; 0x84
 8005d94:	0052      	lsls	r2, r2, #1
 8005d96:	005b      	lsls	r3, r3, #1
 8005d98:	58e3      	ldr	r3, [r4, r3]
 8005d9a:	58a2      	ldr	r2, [r4, r2]
 8005d9c:	0020      	movs	r0, r4
 8005d9e:	f003 fa2f 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8005da2:	2292      	movs	r2, #146	; 0x92
 8005da4:	4643      	mov	r3, r8
 8005da6:	0052      	lsls	r2, r2, #1
 8005da8:	51e3      	str	r3, [r4, r7]
 8005daa:	58a3      	ldr	r3, [r4, r2]
 8005dac:	3301      	adds	r3, #1
 8005dae:	50a3      	str	r3, [r4, r2]
 8005db0:	2380      	movs	r3, #128	; 0x80
 8005db2:	005b      	lsls	r3, r3, #1
 8005db4:	58e2      	ldr	r2, [r4, r3]
 8005db6:	1c51      	adds	r1, r2, #1
 8005db8:	50e1      	str	r1, [r4, r3]
 8005dba:	3bd2      	subs	r3, #210	; 0xd2
 8005dbc:	54a3      	strb	r3, [r4, r2]
 8005dbe:	2282      	movs	r2, #130	; 0x82
 8005dc0:	0052      	lsls	r2, r2, #1
 8005dc2:	54a3      	strb	r3, [r4, r2]
 8005dc4:	68ef      	ldr	r7, [r5, #12]
 8005dc6:	783b      	ldrb	r3, [r7, #0]
 8005dc8:	2b46      	cmp	r3, #70	; 0x46
 8005dca:	d101      	bne.n	8005dd0 <d_print_comp+0x1634>
 8005dcc:	f001 fb20 	bl	8007410 <d_print_comp+0x2c74>
 8005dd0:	003a      	movs	r2, r7
 8005dd2:	0031      	movs	r1, r6
 8005dd4:	0020      	movs	r0, r4
 8005dd6:	f7fe fce1 	bl	800479c <d_print_comp>
 8005dda:	465b      	mov	r3, fp
 8005ddc:	686a      	ldr	r2, [r5, #4]
 8005dde:	685b      	ldr	r3, [r3, #4]
 8005de0:	f7fe fd8f 	bl	8004902 <d_print_comp+0x166>
 8005de4:	68af      	ldr	r7, [r5, #8]
 8005de6:	0771      	lsls	r1, r6, #29
 8005de8:	d501      	bpl.n	8005dee <d_print_comp+0x1652>
 8005dea:	f000 fd6a 	bl	80068c2 <d_print_comp+0x2126>
 8005dee:	68e9      	ldr	r1, [r5, #12]
 8005df0:	2900      	cmp	r1, #0
 8005df2:	d101      	bne.n	8005df8 <d_print_comp+0x165c>
 8005df4:	f7fe fd85 	bl	8004902 <d_print_comp+0x166>
 8005df8:	2286      	movs	r2, #134	; 0x86
 8005dfa:	2380      	movs	r3, #128	; 0x80
 8005dfc:	4688      	mov	r8, r1
 8005dfe:	0052      	lsls	r2, r2, #1
 8005e00:	005b      	lsls	r3, r3, #1
 8005e02:	4692      	mov	sl, r2
 8005e04:	3a04      	subs	r2, #4
 8005e06:	58e3      	ldr	r3, [r4, r3]
 8005e08:	003e      	movs	r6, r7
 8005e0a:	44b8      	add	r8, r7
 8005e0c:	4691      	mov	r9, r2
 8005e0e:	e01c      	b.n	8005e4a <d_print_comp+0x16ae>
 8005e10:	2200      	movs	r2, #0
 8005e12:	54e2      	strb	r2, [r4, r3]
 8005e14:	4653      	mov	r3, sl
 8005e16:	58e2      	ldr	r2, [r4, r3]
 8005e18:	464b      	mov	r3, r9
 8005e1a:	21ff      	movs	r1, #255	; 0xff
 8005e1c:	58e3      	ldr	r3, [r4, r3]
 8005e1e:	0020      	movs	r0, r4
 8005e20:	f003 f9ee 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8005e24:	2292      	movs	r2, #146	; 0x92
 8005e26:	0052      	lsls	r2, r2, #1
 8005e28:	58a3      	ldr	r3, [r4, r2]
 8005e2a:	3301      	adds	r3, #1
 8005e2c:	50a3      	str	r3, [r4, r2]
 8005e2e:	2301      	movs	r3, #1
 8005e30:	2200      	movs	r2, #0
 8005e32:	2180      	movs	r1, #128	; 0x80
 8005e34:	0049      	lsls	r1, r1, #1
 8005e36:	5063      	str	r3, [r4, r1]
 8005e38:	54a7      	strb	r7, [r4, r2]
 8005e3a:	2282      	movs	r2, #130	; 0x82
 8005e3c:	3601      	adds	r6, #1
 8005e3e:	0052      	lsls	r2, r2, #1
 8005e40:	54a7      	strb	r7, [r4, r2]
 8005e42:	45b0      	cmp	r8, r6
 8005e44:	d101      	bne.n	8005e4a <d_print_comp+0x16ae>
 8005e46:	f000 fed8 	bl	8006bfa <d_print_comp+0x245e>
 8005e4a:	7837      	ldrb	r7, [r6, #0]
 8005e4c:	2bff      	cmp	r3, #255	; 0xff
 8005e4e:	d0df      	beq.n	8005e10 <d_print_comp+0x1674>
 8005e50:	001a      	movs	r2, r3
 8005e52:	3301      	adds	r3, #1
 8005e54:	e7ed      	b.n	8005e32 <d_print_comp+0x1696>
 8005e56:	2380      	movs	r3, #128	; 0x80
 8005e58:	2284      	movs	r2, #132	; 0x84
 8005e5a:	005b      	lsls	r3, r3, #1
 8005e5c:	0052      	lsls	r2, r2, #1
 8005e5e:	58e3      	ldr	r3, [r4, r3]
 8005e60:	4f2d      	ldr	r7, [pc, #180]	; (8005f18 <d_print_comp+0x177c>)
 8005e62:	4692      	mov	sl, r2
 8005e64:	46a8      	mov	r8, r5
 8005e66:	e021      	b.n	8005eac <d_print_comp+0x1710>
 8005e68:	2200      	movs	r2, #0
 8005e6a:	54e2      	strb	r2, [r4, r3]
 8005e6c:	2386      	movs	r3, #134	; 0x86
 8005e6e:	005b      	lsls	r3, r3, #1
 8005e70:	58e3      	ldr	r3, [r4, r3]
 8005e72:	001a      	movs	r2, r3
 8005e74:	9300      	str	r3, [sp, #0]
 8005e76:	4653      	mov	r3, sl
 8005e78:	21ff      	movs	r1, #255	; 0xff
 8005e7a:	58e3      	ldr	r3, [r4, r3]
 8005e7c:	0020      	movs	r0, r4
 8005e7e:	f003 f9bf 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8005e82:	2292      	movs	r2, #146	; 0x92
 8005e84:	0052      	lsls	r2, r2, #1
 8005e86:	58a3      	ldr	r3, [r4, r2]
 8005e88:	3301      	adds	r3, #1
 8005e8a:	50a3      	str	r3, [r4, r2]
 8005e8c:	2301      	movs	r3, #1
 8005e8e:	2200      	movs	r2, #0
 8005e90:	2180      	movs	r1, #128	; 0x80
 8005e92:	0049      	lsls	r1, r1, #1
 8005e94:	5063      	str	r3, [r4, r1]
 8005e96:	54a5      	strb	r5, [r4, r2]
 8005e98:	2282      	movs	r2, #130	; 0x82
 8005e9a:	0052      	lsls	r2, r2, #1
 8005e9c:	54a5      	strb	r5, [r4, r2]
 8005e9e:	4a1f      	ldr	r2, [pc, #124]	; (8005f1c <d_print_comp+0x1780>)
 8005ea0:	3701      	adds	r7, #1
 8005ea2:	4689      	mov	r9, r1
 8005ea4:	42ba      	cmp	r2, r7
 8005ea6:	d101      	bne.n	8005eac <d_print_comp+0x1710>
 8005ea8:	f000 fc0e 	bl	80066c8 <d_print_comp+0x1f2c>
 8005eac:	783d      	ldrb	r5, [r7, #0]
 8005eae:	2bff      	cmp	r3, #255	; 0xff
 8005eb0:	d0da      	beq.n	8005e68 <d_print_comp+0x16cc>
 8005eb2:	001a      	movs	r2, r3
 8005eb4:	3301      	adds	r3, #1
 8005eb6:	e7eb      	b.n	8005e90 <d_print_comp+0x16f4>
 8005eb8:	2286      	movs	r2, #134	; 0x86
 8005eba:	2380      	movs	r3, #128	; 0x80
 8005ebc:	0052      	lsls	r2, r2, #1
 8005ebe:	005b      	lsls	r3, r3, #1
 8005ec0:	4692      	mov	sl, r2
 8005ec2:	3a04      	subs	r2, #4
 8005ec4:	58e3      	ldr	r3, [r4, r3]
 8005ec6:	2700      	movs	r7, #0
 8005ec8:	4691      	mov	r9, r2
 8005eca:	46a8      	mov	r8, r5
 8005ecc:	e01b      	b.n	8005f06 <d_print_comp+0x176a>
 8005ece:	2200      	movs	r2, #0
 8005ed0:	54e2      	strb	r2, [r4, r3]
 8005ed2:	4653      	mov	r3, sl
 8005ed4:	58e2      	ldr	r2, [r4, r3]
 8005ed6:	464b      	mov	r3, r9
 8005ed8:	21ff      	movs	r1, #255	; 0xff
 8005eda:	58e3      	ldr	r3, [r4, r3]
 8005edc:	0020      	movs	r0, r4
 8005ede:	f003 f98f 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8005ee2:	2292      	movs	r2, #146	; 0x92
 8005ee4:	0052      	lsls	r2, r2, #1
 8005ee6:	58a3      	ldr	r3, [r4, r2]
 8005ee8:	3301      	adds	r3, #1
 8005eea:	50a3      	str	r3, [r4, r2]
 8005eec:	2301      	movs	r3, #1
 8005eee:	2200      	movs	r2, #0
 8005ef0:	2180      	movs	r1, #128	; 0x80
 8005ef2:	0049      	lsls	r1, r1, #1
 8005ef4:	5063      	str	r3, [r4, r1]
 8005ef6:	54a5      	strb	r5, [r4, r2]
 8005ef8:	2282      	movs	r2, #130	; 0x82
 8005efa:	3701      	adds	r7, #1
 8005efc:	0052      	lsls	r2, r2, #1
 8005efe:	54a5      	strb	r5, [r4, r2]
 8005f00:	2f0b      	cmp	r7, #11
 8005f02:	d100      	bne.n	8005f06 <d_print_comp+0x176a>
 8005f04:	e114      	b.n	8006130 <d_print_comp+0x1994>
 8005f06:	4a06      	ldr	r2, [pc, #24]	; (8005f20 <d_print_comp+0x1784>)
 8005f08:	5dd5      	ldrb	r5, [r2, r7]
 8005f0a:	2bff      	cmp	r3, #255	; 0xff
 8005f0c:	d0df      	beq.n	8005ece <d_print_comp+0x1732>
 8005f0e:	001a      	movs	r2, r3
 8005f10:	3301      	adds	r3, #1
 8005f12:	e7ed      	b.n	8005ef0 <d_print_comp+0x1754>
 8005f14:	08026ff0 	.word	0x08026ff0
 8005f18:	08026e28 	.word	0x08026e28
 8005f1c:	08026e40 	.word	0x08026e40
 8005f20:	08026e10 	.word	0x08026e10
 8005f24:	2780      	movs	r7, #128	; 0x80
 8005f26:	007f      	lsls	r7, r7, #1
 8005f28:	59e3      	ldr	r3, [r4, r7]
 8005f2a:	2bff      	cmp	r3, #255	; 0xff
 8005f2c:	d112      	bne.n	8005f54 <d_print_comp+0x17b8>
 8005f2e:	2200      	movs	r2, #0
 8005f30:	54e2      	strb	r2, [r4, r3]
 8005f32:	4690      	mov	r8, r2
 8005f34:	2286      	movs	r2, #134	; 0x86
 8005f36:	3309      	adds	r3, #9
 8005f38:	0052      	lsls	r2, r2, #1
 8005f3a:	58e3      	ldr	r3, [r4, r3]
 8005f3c:	58a2      	ldr	r2, [r4, r2]
 8005f3e:	21ff      	movs	r1, #255	; 0xff
 8005f40:	0020      	movs	r0, r4
 8005f42:	f003 f95d 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8005f46:	2292      	movs	r2, #146	; 0x92
 8005f48:	4643      	mov	r3, r8
 8005f4a:	0052      	lsls	r2, r2, #1
 8005f4c:	51e3      	str	r3, [r4, r7]
 8005f4e:	58a3      	ldr	r3, [r4, r2]
 8005f50:	3301      	adds	r3, #1
 8005f52:	50a3      	str	r3, [r4, r2]
 8005f54:	2380      	movs	r3, #128	; 0x80
 8005f56:	005b      	lsls	r3, r3, #1
 8005f58:	58e2      	ldr	r2, [r4, r3]
 8005f5a:	1c51      	adds	r1, r2, #1
 8005f5c:	50e1      	str	r1, [r4, r3]
 8005f5e:	3b82      	subs	r3, #130	; 0x82
 8005f60:	54a3      	strb	r3, [r4, r2]
 8005f62:	2282      	movs	r2, #130	; 0x82
 8005f64:	0052      	lsls	r2, r2, #1
 8005f66:	54a3      	strb	r3, [r4, r2]
 8005f68:	0031      	movs	r1, r6
 8005f6a:	68ea      	ldr	r2, [r5, #12]
 8005f6c:	0020      	movs	r0, r4
 8005f6e:	f7fe fc15 	bl	800479c <d_print_comp>
 8005f72:	465b      	mov	r3, fp
 8005f74:	686a      	ldr	r2, [r5, #4]
 8005f76:	685b      	ldr	r3, [r3, #4]
 8005f78:	f7fe fcc3 	bl	8004902 <d_print_comp+0x166>
 8005f7c:	2286      	movs	r2, #134	; 0x86
 8005f7e:	2380      	movs	r3, #128	; 0x80
 8005f80:	0052      	lsls	r2, r2, #1
 8005f82:	005b      	lsls	r3, r3, #1
 8005f84:	4692      	mov	sl, r2
 8005f86:	3a04      	subs	r2, #4
 8005f88:	58e3      	ldr	r3, [r4, r3]
 8005f8a:	4fe7      	ldr	r7, [pc, #924]	; (8006328 <d_print_comp+0x1b8c>)
 8005f8c:	4691      	mov	r9, r2
 8005f8e:	46a8      	mov	r8, r5
 8005f90:	e01c      	b.n	8005fcc <d_print_comp+0x1830>
 8005f92:	2200      	movs	r2, #0
 8005f94:	54e2      	strb	r2, [r4, r3]
 8005f96:	4653      	mov	r3, sl
 8005f98:	58e2      	ldr	r2, [r4, r3]
 8005f9a:	464b      	mov	r3, r9
 8005f9c:	21ff      	movs	r1, #255	; 0xff
 8005f9e:	58e3      	ldr	r3, [r4, r3]
 8005fa0:	0020      	movs	r0, r4
 8005fa2:	f003 f92d 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8005fa6:	2292      	movs	r2, #146	; 0x92
 8005fa8:	0052      	lsls	r2, r2, #1
 8005faa:	58a3      	ldr	r3, [r4, r2]
 8005fac:	3301      	adds	r3, #1
 8005fae:	50a3      	str	r3, [r4, r2]
 8005fb0:	2301      	movs	r3, #1
 8005fb2:	2200      	movs	r2, #0
 8005fb4:	2180      	movs	r1, #128	; 0x80
 8005fb6:	0049      	lsls	r1, r1, #1
 8005fb8:	5063      	str	r3, [r4, r1]
 8005fba:	54a5      	strb	r5, [r4, r2]
 8005fbc:	2282      	movs	r2, #130	; 0x82
 8005fbe:	0052      	lsls	r2, r2, #1
 8005fc0:	54a5      	strb	r5, [r4, r2]
 8005fc2:	4ada      	ldr	r2, [pc, #872]	; (800632c <d_print_comp+0x1b90>)
 8005fc4:	3701      	adds	r7, #1
 8005fc6:	42ba      	cmp	r2, r7
 8005fc8:	d100      	bne.n	8005fcc <d_print_comp+0x1830>
 8005fca:	e0a6      	b.n	800611a <d_print_comp+0x197e>
 8005fcc:	783d      	ldrb	r5, [r7, #0]
 8005fce:	2bff      	cmp	r3, #255	; 0xff
 8005fd0:	d0df      	beq.n	8005f92 <d_print_comp+0x17f6>
 8005fd2:	001a      	movs	r2, r3
 8005fd4:	3301      	adds	r3, #1
 8005fd6:	e7ed      	b.n	8005fb4 <d_print_comp+0x1818>
 8005fd8:	2286      	movs	r2, #134	; 0x86
 8005fda:	2380      	movs	r3, #128	; 0x80
 8005fdc:	0052      	lsls	r2, r2, #1
 8005fde:	005b      	lsls	r3, r3, #1
 8005fe0:	4692      	mov	sl, r2
 8005fe2:	3a04      	subs	r2, #4
 8005fe4:	58e3      	ldr	r3, [r4, r3]
 8005fe6:	2700      	movs	r7, #0
 8005fe8:	4691      	mov	r9, r2
 8005fea:	46a8      	mov	r8, r5
 8005fec:	e01b      	b.n	8006026 <d_print_comp+0x188a>
 8005fee:	2200      	movs	r2, #0
 8005ff0:	54e2      	strb	r2, [r4, r3]
 8005ff2:	4653      	mov	r3, sl
 8005ff4:	58e2      	ldr	r2, [r4, r3]
 8005ff6:	464b      	mov	r3, r9
 8005ff8:	21ff      	movs	r1, #255	; 0xff
 8005ffa:	58e3      	ldr	r3, [r4, r3]
 8005ffc:	0020      	movs	r0, r4
 8005ffe:	f003 f8ff 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8006002:	2292      	movs	r2, #146	; 0x92
 8006004:	0052      	lsls	r2, r2, #1
 8006006:	58a3      	ldr	r3, [r4, r2]
 8006008:	3301      	adds	r3, #1
 800600a:	50a3      	str	r3, [r4, r2]
 800600c:	2301      	movs	r3, #1
 800600e:	2200      	movs	r2, #0
 8006010:	2180      	movs	r1, #128	; 0x80
 8006012:	0049      	lsls	r1, r1, #1
 8006014:	5063      	str	r3, [r4, r1]
 8006016:	54a5      	strb	r5, [r4, r2]
 8006018:	2282      	movs	r2, #130	; 0x82
 800601a:	3701      	adds	r7, #1
 800601c:	0052      	lsls	r2, r2, #1
 800601e:	54a5      	strb	r5, [r4, r2]
 8006020:	2f0d      	cmp	r7, #13
 8006022:	d100      	bne.n	8006026 <d_print_comp+0x188a>
 8006024:	e08f      	b.n	8006146 <d_print_comp+0x19aa>
 8006026:	4ac2      	ldr	r2, [pc, #776]	; (8006330 <d_print_comp+0x1b94>)
 8006028:	5dd5      	ldrb	r5, [r2, r7]
 800602a:	2bff      	cmp	r3, #255	; 0xff
 800602c:	d0df      	beq.n	8005fee <d_print_comp+0x1852>
 800602e:	001a      	movs	r2, r3
 8006030:	3301      	adds	r3, #1
 8006032:	e7ed      	b.n	8006010 <d_print_comp+0x1874>
 8006034:	2286      	movs	r2, #134	; 0x86
 8006036:	2380      	movs	r3, #128	; 0x80
 8006038:	0052      	lsls	r2, r2, #1
 800603a:	005b      	lsls	r3, r3, #1
 800603c:	4692      	mov	sl, r2
 800603e:	3a04      	subs	r2, #4
 8006040:	58e3      	ldr	r3, [r4, r3]
 8006042:	4fbc      	ldr	r7, [pc, #752]	; (8006334 <d_print_comp+0x1b98>)
 8006044:	4691      	mov	r9, r2
 8006046:	46a8      	mov	r8, r5
 8006048:	e01c      	b.n	8006084 <d_print_comp+0x18e8>
 800604a:	2200      	movs	r2, #0
 800604c:	54e2      	strb	r2, [r4, r3]
 800604e:	4653      	mov	r3, sl
 8006050:	58e2      	ldr	r2, [r4, r3]
 8006052:	464b      	mov	r3, r9
 8006054:	21ff      	movs	r1, #255	; 0xff
 8006056:	58e3      	ldr	r3, [r4, r3]
 8006058:	0020      	movs	r0, r4
 800605a:	f003 f8d1 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 800605e:	2292      	movs	r2, #146	; 0x92
 8006060:	0052      	lsls	r2, r2, #1
 8006062:	58a3      	ldr	r3, [r4, r2]
 8006064:	3301      	adds	r3, #1
 8006066:	50a3      	str	r3, [r4, r2]
 8006068:	2301      	movs	r3, #1
 800606a:	2200      	movs	r2, #0
 800606c:	2180      	movs	r1, #128	; 0x80
 800606e:	0049      	lsls	r1, r1, #1
 8006070:	5063      	str	r3, [r4, r1]
 8006072:	54a5      	strb	r5, [r4, r2]
 8006074:	2282      	movs	r2, #130	; 0x82
 8006076:	0052      	lsls	r2, r2, #1
 8006078:	54a5      	strb	r5, [r4, r2]
 800607a:	4aaf      	ldr	r2, [pc, #700]	; (8006338 <d_print_comp+0x1b9c>)
 800607c:	3701      	adds	r7, #1
 800607e:	42ba      	cmp	r2, r7
 8006080:	d100      	bne.n	8006084 <d_print_comp+0x18e8>
 8006082:	e35d      	b.n	8006740 <d_print_comp+0x1fa4>
 8006084:	783d      	ldrb	r5, [r7, #0]
 8006086:	2bff      	cmp	r3, #255	; 0xff
 8006088:	d0df      	beq.n	800604a <d_print_comp+0x18ae>
 800608a:	001a      	movs	r2, r3
 800608c:	3301      	adds	r3, #1
 800608e:	e7ed      	b.n	800606c <d_print_comp+0x18d0>
 8006090:	2286      	movs	r2, #134	; 0x86
 8006092:	2380      	movs	r3, #128	; 0x80
 8006094:	0052      	lsls	r2, r2, #1
 8006096:	005b      	lsls	r3, r3, #1
 8006098:	4692      	mov	sl, r2
 800609a:	3a04      	subs	r2, #4
 800609c:	58e3      	ldr	r3, [r4, r3]
 800609e:	4fa7      	ldr	r7, [pc, #668]	; (800633c <d_print_comp+0x1ba0>)
 80060a0:	4691      	mov	r9, r2
 80060a2:	46a8      	mov	r8, r5
 80060a4:	e01b      	b.n	80060de <d_print_comp+0x1942>
 80060a6:	2200      	movs	r2, #0
 80060a8:	54e2      	strb	r2, [r4, r3]
 80060aa:	4653      	mov	r3, sl
 80060ac:	58e2      	ldr	r2, [r4, r3]
 80060ae:	464b      	mov	r3, r9
 80060b0:	21ff      	movs	r1, #255	; 0xff
 80060b2:	58e3      	ldr	r3, [r4, r3]
 80060b4:	0020      	movs	r0, r4
 80060b6:	f003 f8a3 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 80060ba:	2292      	movs	r2, #146	; 0x92
 80060bc:	0052      	lsls	r2, r2, #1
 80060be:	58a3      	ldr	r3, [r4, r2]
 80060c0:	3301      	adds	r3, #1
 80060c2:	50a3      	str	r3, [r4, r2]
 80060c4:	2301      	movs	r3, #1
 80060c6:	2200      	movs	r2, #0
 80060c8:	2180      	movs	r1, #128	; 0x80
 80060ca:	0049      	lsls	r1, r1, #1
 80060cc:	5063      	str	r3, [r4, r1]
 80060ce:	54a5      	strb	r5, [r4, r2]
 80060d0:	2282      	movs	r2, #130	; 0x82
 80060d2:	0052      	lsls	r2, r2, #1
 80060d4:	54a5      	strb	r5, [r4, r2]
 80060d6:	4a9a      	ldr	r2, [pc, #616]	; (8006340 <d_print_comp+0x1ba4>)
 80060d8:	3701      	adds	r7, #1
 80060da:	42ba      	cmp	r2, r7
 80060dc:	d049      	beq.n	8006172 <d_print_comp+0x19d6>
 80060de:	783d      	ldrb	r5, [r7, #0]
 80060e0:	2bff      	cmp	r3, #255	; 0xff
 80060e2:	d0e0      	beq.n	80060a6 <d_print_comp+0x190a>
 80060e4:	001a      	movs	r2, r3
 80060e6:	3301      	adds	r3, #1
 80060e8:	e7ee      	b.n	80060c8 <d_print_comp+0x192c>
 80060ea:	228c      	movs	r2, #140	; 0x8c
 80060ec:	2101      	movs	r1, #1
 80060ee:	0052      	lsls	r2, r2, #1
 80060f0:	50a1      	str	r1, [r4, r2]
 80060f2:	686a      	ldr	r2, [r5, #4]
 80060f4:	f7fe fc05 	bl	8004902 <d_print_comp+0x166>
 80060f8:	4643      	mov	r3, r8
 80060fa:	689a      	ldr	r2, [r3, #8]
 80060fc:	e431      	b.n	8005962 <d_print_comp+0x11c6>
 80060fe:	2301      	movs	r3, #1
 8006100:	469c      	mov	ip, r3
 8006102:	9b00      	ldr	r3, [sp, #0]
 8006104:	44e1      	add	r9, ip
 8006106:	4599      	cmp	r9, r3
 8006108:	d001      	beq.n	800610e <d_print_comp+0x1972>
 800610a:	f7fe fc58 	bl	80049be <d_print_comp+0x222>
 800610e:	465b      	mov	r3, fp
 8006110:	9d03      	ldr	r5, [sp, #12]
 8006112:	685b      	ldr	r3, [r3, #4]
 8006114:	686a      	ldr	r2, [r5, #4]
 8006116:	f7fe fbf4 	bl	8004902 <d_print_comp+0x166>
 800611a:	4645      	mov	r5, r8
 800611c:	0031      	movs	r1, r6
 800611e:	68aa      	ldr	r2, [r5, #8]
 8006120:	0020      	movs	r0, r4
 8006122:	f7fe fb3b 	bl	800479c <d_print_comp>
 8006126:	465b      	mov	r3, fp
 8006128:	686a      	ldr	r2, [r5, #4]
 800612a:	685b      	ldr	r3, [r3, #4]
 800612c:	f7fe fbe9 	bl	8004902 <d_print_comp+0x166>
 8006130:	4645      	mov	r5, r8
 8006132:	0031      	movs	r1, r6
 8006134:	68aa      	ldr	r2, [r5, #8]
 8006136:	0020      	movs	r0, r4
 8006138:	f7fe fb30 	bl	800479c <d_print_comp>
 800613c:	465b      	mov	r3, fp
 800613e:	686a      	ldr	r2, [r5, #4]
 8006140:	685b      	ldr	r3, [r3, #4]
 8006142:	f7fe fbde 	bl	8004902 <d_print_comp+0x166>
 8006146:	4645      	mov	r5, r8
 8006148:	0031      	movs	r1, r6
 800614a:	68aa      	ldr	r2, [r5, #8]
 800614c:	0020      	movs	r0, r4
 800614e:	f7fe fb25 	bl	800479c <d_print_comp>
 8006152:	465b      	mov	r3, fp
 8006154:	686a      	ldr	r2, [r5, #4]
 8006156:	685b      	ldr	r3, [r3, #4]
 8006158:	f7fe fbd3 	bl	8004902 <d_print_comp+0x166>
 800615c:	4645      	mov	r5, r8
 800615e:	0031      	movs	r1, r6
 8006160:	68aa      	ldr	r2, [r5, #8]
 8006162:	0020      	movs	r0, r4
 8006164:	f7fe fb1a 	bl	800479c <d_print_comp>
 8006168:	465b      	mov	r3, fp
 800616a:	686a      	ldr	r2, [r5, #4]
 800616c:	685b      	ldr	r3, [r3, #4]
 800616e:	f7fe fbc8 	bl	8004902 <d_print_comp+0x166>
 8006172:	4645      	mov	r5, r8
 8006174:	0031      	movs	r1, r6
 8006176:	68aa      	ldr	r2, [r5, #8]
 8006178:	0020      	movs	r0, r4
 800617a:	f7fe fb0f 	bl	800479c <d_print_comp>
 800617e:	465b      	mov	r3, fp
 8006180:	686a      	ldr	r2, [r5, #4]
 8006182:	685b      	ldr	r3, [r3, #4]
 8006184:	f7fe fbbd 	bl	8004902 <d_print_comp+0x166>
 8006188:	4645      	mov	r5, r8
 800618a:	0031      	movs	r1, r6
 800618c:	68aa      	ldr	r2, [r5, #8]
 800618e:	0020      	movs	r0, r4
 8006190:	f7fe fb04 	bl	800479c <d_print_comp>
 8006194:	465b      	mov	r3, fp
 8006196:	686a      	ldr	r2, [r5, #4]
 8006198:	685b      	ldr	r3, [r3, #4]
 800619a:	f7fe fbb2 	bl	8004902 <d_print_comp+0x166>
 800619e:	4645      	mov	r5, r8
 80061a0:	0031      	movs	r1, r6
 80061a2:	68ea      	ldr	r2, [r5, #12]
 80061a4:	0020      	movs	r0, r4
 80061a6:	f7fe faf9 	bl	800479c <d_print_comp>
 80061aa:	465b      	mov	r3, fp
 80061ac:	686a      	ldr	r2, [r5, #4]
 80061ae:	685b      	ldr	r3, [r3, #4]
 80061b0:	f7fe fba7 	bl	8004902 <d_print_comp+0x166>
 80061b4:	9b01      	ldr	r3, [sp, #4]
 80061b6:	685e      	ldr	r6, [r3, #4]
 80061b8:	7833      	ldrb	r3, [r6, #0]
 80061ba:	3b61      	subs	r3, #97	; 0x61
 80061bc:	061b      	lsls	r3, r3, #24
 80061be:	0e1b      	lsrs	r3, r3, #24
 80061c0:	2b19      	cmp	r3, #25
 80061c2:	d81e      	bhi.n	8006202 <d_print_comp+0x1a66>
 80061c4:	29ff      	cmp	r1, #255	; 0xff
 80061c6:	d110      	bne.n	80061ea <d_print_comp+0x1a4e>
 80061c8:	2600      	movs	r6, #0
 80061ca:	2384      	movs	r3, #132	; 0x84
 80061cc:	5466      	strb	r6, [r4, r1]
 80061ce:	005b      	lsls	r3, r3, #1
 80061d0:	320c      	adds	r2, #12
 80061d2:	58e3      	ldr	r3, [r4, r3]
 80061d4:	58a2      	ldr	r2, [r4, r2]
 80061d6:	0020      	movs	r0, r4
 80061d8:	f003 f812 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 80061dc:	2292      	movs	r2, #146	; 0x92
 80061de:	4643      	mov	r3, r8
 80061e0:	0052      	lsls	r2, r2, #1
 80061e2:	50e6      	str	r6, [r4, r3]
 80061e4:	58a3      	ldr	r3, [r4, r2]
 80061e6:	3301      	adds	r3, #1
 80061e8:	50a3      	str	r3, [r4, r2]
 80061ea:	2380      	movs	r3, #128	; 0x80
 80061ec:	005b      	lsls	r3, r3, #1
 80061ee:	58e2      	ldr	r2, [r4, r3]
 80061f0:	1c51      	adds	r1, r2, #1
 80061f2:	50e1      	str	r1, [r4, r3]
 80061f4:	3be0      	subs	r3, #224	; 0xe0
 80061f6:	54a3      	strb	r3, [r4, r2]
 80061f8:	2282      	movs	r2, #130	; 0x82
 80061fa:	0052      	lsls	r2, r2, #1
 80061fc:	54a3      	strb	r3, [r4, r2]
 80061fe:	9b01      	ldr	r3, [sp, #4]
 8006200:	685e      	ldr	r6, [r3, #4]
 8006202:	9900      	ldr	r1, [sp, #0]
 8006204:	1873      	adds	r3, r6, r1
 8006206:	3b01      	subs	r3, #1
 8006208:	781b      	ldrb	r3, [r3, #0]
 800620a:	3b20      	subs	r3, #32
 800620c:	425a      	negs	r2, r3
 800620e:	4153      	adcs	r3, r2
 8006210:	1acb      	subs	r3, r1, r3
 8006212:	9300      	str	r3, [sp, #0]
 8006214:	d101      	bne.n	800621a <d_print_comp+0x1a7e>
 8006216:	f001 f915 	bl	8007444 <d_print_comp+0x2ca8>
 800621a:	9a00      	ldr	r2, [sp, #0]
 800621c:	4690      	mov	r8, r2
 800621e:	2286      	movs	r2, #134	; 0x86
 8006220:	0052      	lsls	r2, r2, #1
 8006222:	2380      	movs	r3, #128	; 0x80
 8006224:	4692      	mov	sl, r2
 8006226:	3a04      	subs	r2, #4
 8006228:	4691      	mov	r9, r2
 800622a:	002a      	movs	r2, r5
 800622c:	44b0      	add	r8, r6
 800622e:	005b      	lsls	r3, r3, #1
 8006230:	4645      	mov	r5, r8
 8006232:	58e3      	ldr	r3, [r4, r3]
 8006234:	4690      	mov	r8, r2
 8006236:	e01b      	b.n	8006270 <d_print_comp+0x1ad4>
 8006238:	2200      	movs	r2, #0
 800623a:	54e2      	strb	r2, [r4, r3]
 800623c:	4653      	mov	r3, sl
 800623e:	58e2      	ldr	r2, [r4, r3]
 8006240:	464b      	mov	r3, r9
 8006242:	21ff      	movs	r1, #255	; 0xff
 8006244:	58e3      	ldr	r3, [r4, r3]
 8006246:	0020      	movs	r0, r4
 8006248:	f002 ffda 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 800624c:	2292      	movs	r2, #146	; 0x92
 800624e:	0052      	lsls	r2, r2, #1
 8006250:	58a3      	ldr	r3, [r4, r2]
 8006252:	3301      	adds	r3, #1
 8006254:	50a3      	str	r3, [r4, r2]
 8006256:	2301      	movs	r3, #1
 8006258:	2200      	movs	r2, #0
 800625a:	2180      	movs	r1, #128	; 0x80
 800625c:	0049      	lsls	r1, r1, #1
 800625e:	5063      	str	r3, [r4, r1]
 8006260:	54a7      	strb	r7, [r4, r2]
 8006262:	2282      	movs	r2, #130	; 0x82
 8006264:	3601      	adds	r6, #1
 8006266:	0052      	lsls	r2, r2, #1
 8006268:	54a7      	strb	r7, [r4, r2]
 800626a:	42b5      	cmp	r5, r6
 800626c:	d100      	bne.n	8006270 <d_print_comp+0x1ad4>
 800626e:	e2cb      	b.n	8006808 <d_print_comp+0x206c>
 8006270:	7837      	ldrb	r7, [r6, #0]
 8006272:	2bff      	cmp	r3, #255	; 0xff
 8006274:	d0e0      	beq.n	8006238 <d_print_comp+0x1a9c>
 8006276:	001a      	movs	r2, r3
 8006278:	3301      	adds	r3, #1
 800627a:	e7ee      	b.n	800625a <d_print_comp+0x1abe>
 800627c:	23a2      	movs	r3, #162	; 0xa2
 800627e:	005b      	lsls	r3, r3, #1
 8006280:	58e2      	ldr	r2, [r4, r3]
 8006282:	4645      	mov	r5, r8
 8006284:	2a00      	cmp	r2, #0
 8006286:	d005      	beq.n	8006294 <d_print_comp+0x1af8>
 8006288:	3110      	adds	r1, #16
 800628a:	5860      	ldr	r0, [r4, r1]
 800628c:	ab08      	add	r3, sp, #32
 800628e:	9008      	str	r0, [sp, #32]
 8006290:	5063      	str	r3, [r4, r1]
 8006292:	9209      	str	r2, [sp, #36]	; 0x24
 8006294:	68aa      	ldr	r2, [r5, #8]
 8006296:	7813      	ldrb	r3, [r2, #0]
 8006298:	2b04      	cmp	r3, #4
 800629a:	d101      	bne.n	80062a0 <d_print_comp+0x1b04>
 800629c:	f000 ff25 	bl	80070ea <d_print_comp+0x294e>
 80062a0:	0031      	movs	r1, r6
 80062a2:	0020      	movs	r0, r4
 80062a4:	f7fe fa7a 	bl	800479c <d_print_comp>
 80062a8:	23a2      	movs	r3, #162	; 0xa2
 80062aa:	005b      	lsls	r3, r3, #1
 80062ac:	58e3      	ldr	r3, [r4, r3]
 80062ae:	2b00      	cmp	r3, #0
 80062b0:	d003      	beq.n	80062ba <d_print_comp+0x1b1e>
 80062b2:	2388      	movs	r3, #136	; 0x88
 80062b4:	9a08      	ldr	r2, [sp, #32]
 80062b6:	005b      	lsls	r3, r3, #1
 80062b8:	50e2      	str	r2, [r4, r3]
 80062ba:	465b      	mov	r3, fp
 80062bc:	686a      	ldr	r2, [r5, #4]
 80062be:	685b      	ldr	r3, [r3, #4]
 80062c0:	f7fe fb1f 	bl	8004902 <d_print_comp+0x166>
 80062c4:	4655      	mov	r5, sl
 80062c6:	465b      	mov	r3, fp
 80062c8:	686a      	ldr	r2, [r5, #4]
 80062ca:	685b      	ldr	r3, [r3, #4]
 80062cc:	f7fe fb19 	bl	8004902 <d_print_comp+0x166>
 80062d0:	4645      	mov	r5, r8
 80062d2:	0031      	movs	r1, r6
 80062d4:	68aa      	ldr	r2, [r5, #8]
 80062d6:	0020      	movs	r0, r4
 80062d8:	f7fe fa60 	bl	800479c <d_print_comp>
 80062dc:	465b      	mov	r3, fp
 80062de:	686a      	ldr	r2, [r5, #4]
 80062e0:	685b      	ldr	r3, [r3, #4]
 80062e2:	f7fe fb0e 	bl	8004902 <d_print_comp+0x166>
 80062e6:	4645      	mov	r5, r8
 80062e8:	0031      	movs	r1, r6
 80062ea:	68aa      	ldr	r2, [r5, #8]
 80062ec:	0020      	movs	r0, r4
 80062ee:	f7fe fa55 	bl	800479c <d_print_comp>
 80062f2:	465b      	mov	r3, fp
 80062f4:	686a      	ldr	r2, [r5, #4]
 80062f6:	685b      	ldr	r3, [r3, #4]
 80062f8:	f7fe fb03 	bl	8004902 <d_print_comp+0x166>
 80062fc:	4645      	mov	r5, r8
 80062fe:	0031      	movs	r1, r6
 8006300:	68aa      	ldr	r2, [r5, #8]
 8006302:	0020      	movs	r0, r4
 8006304:	f7fe fa4a 	bl	800479c <d_print_comp>
 8006308:	465b      	mov	r3, fp
 800630a:	686a      	ldr	r2, [r5, #4]
 800630c:	685b      	ldr	r3, [r3, #4]
 800630e:	f7fe faf8 	bl	8004902 <d_print_comp+0x166>
 8006312:	4645      	mov	r5, r8
 8006314:	0031      	movs	r1, r6
 8006316:	68aa      	ldr	r2, [r5, #8]
 8006318:	0020      	movs	r0, r4
 800631a:	f7fe fa3f 	bl	800479c <d_print_comp>
 800631e:	465b      	mov	r3, fp
 8006320:	686a      	ldr	r2, [r5, #4]
 8006322:	685b      	ldr	r3, [r3, #4]
 8006324:	f7fe faed 	bl	8004902 <d_print_comp+0x166>
 8006328:	08026e5c 	.word	0x08026e5c
 800632c:	08026e6e 	.word	0x08026e6e
 8006330:	08026e4c 	.word	0x08026e4c
 8006334:	08026e70 	.word	0x08026e70
 8006338:	08026e80 	.word	0x08026e80
 800633c:	08026e1c 	.word	0x08026e1c
 8006340:	08026e24 	.word	0x08026e24
 8006344:	4645      	mov	r5, r8
 8006346:	0031      	movs	r1, r6
 8006348:	68aa      	ldr	r2, [r5, #8]
 800634a:	0020      	movs	r0, r4
 800634c:	f7fe fa26 	bl	800479c <d_print_comp>
 8006350:	465b      	mov	r3, fp
 8006352:	686a      	ldr	r2, [r5, #4]
 8006354:	685b      	ldr	r3, [r3, #4]
 8006356:	f7fe fad4 	bl	8004902 <d_print_comp+0x166>
 800635a:	4645      	mov	r5, r8
 800635c:	0031      	movs	r1, r6
 800635e:	68aa      	ldr	r2, [r5, #8]
 8006360:	0020      	movs	r0, r4
 8006362:	f7fe fa1b 	bl	800479c <d_print_comp>
 8006366:	465b      	mov	r3, fp
 8006368:	686a      	ldr	r2, [r5, #4]
 800636a:	685b      	ldr	r3, [r3, #4]
 800636c:	f7fe fac9 	bl	8004902 <d_print_comp+0x166>
 8006370:	4645      	mov	r5, r8
 8006372:	0031      	movs	r1, r6
 8006374:	68aa      	ldr	r2, [r5, #8]
 8006376:	0020      	movs	r0, r4
 8006378:	f7fe fa10 	bl	800479c <d_print_comp>
 800637c:	465b      	mov	r3, fp
 800637e:	686a      	ldr	r2, [r5, #4]
 8006380:	685b      	ldr	r3, [r3, #4]
 8006382:	f7fe fabe 	bl	8004902 <d_print_comp+0x166>
 8006386:	4645      	mov	r5, r8
 8006388:	0031      	movs	r1, r6
 800638a:	68ea      	ldr	r2, [r5, #12]
 800638c:	0020      	movs	r0, r4
 800638e:	f7fe fa05 	bl	800479c <d_print_comp>
 8006392:	2286      	movs	r2, #134	; 0x86
 8006394:	464b      	mov	r3, r9
 8006396:	0052      	lsls	r2, r2, #1
 8006398:	4692      	mov	sl, r2
 800639a:	3a04      	subs	r2, #4
 800639c:	58e3      	ldr	r3, [r4, r3]
 800639e:	2700      	movs	r7, #0
 80063a0:	4691      	mov	r9, r2
 80063a2:	e01a      	b.n	80063da <d_print_comp+0x1c3e>
 80063a4:	2200      	movs	r2, #0
 80063a6:	54e2      	strb	r2, [r4, r3]
 80063a8:	4653      	mov	r3, sl
 80063aa:	58e2      	ldr	r2, [r4, r3]
 80063ac:	464b      	mov	r3, r9
 80063ae:	21ff      	movs	r1, #255	; 0xff
 80063b0:	58e3      	ldr	r3, [r4, r3]
 80063b2:	0020      	movs	r0, r4
 80063b4:	f002 ff24 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 80063b8:	2292      	movs	r2, #146	; 0x92
 80063ba:	0052      	lsls	r2, r2, #1
 80063bc:	58a3      	ldr	r3, [r4, r2]
 80063be:	3301      	adds	r3, #1
 80063c0:	50a3      	str	r3, [r4, r2]
 80063c2:	2301      	movs	r3, #1
 80063c4:	2200      	movs	r2, #0
 80063c6:	2180      	movs	r1, #128	; 0x80
 80063c8:	0049      	lsls	r1, r1, #1
 80063ca:	5063      	str	r3, [r4, r1]
 80063cc:	54a5      	strb	r5, [r4, r2]
 80063ce:	2282      	movs	r2, #130	; 0x82
 80063d0:	3701      	adds	r7, #1
 80063d2:	0052      	lsls	r2, r2, #1
 80063d4:	54a5      	strb	r5, [r4, r2]
 80063d6:	2f05      	cmp	r7, #5
 80063d8:	d011      	beq.n	80063fe <d_print_comp+0x1c62>
 80063da:	4adf      	ldr	r2, [pc, #892]	; (8006758 <d_print_comp+0x1fbc>)
 80063dc:	5dd5      	ldrb	r5, [r2, r7]
 80063de:	2bff      	cmp	r3, #255	; 0xff
 80063e0:	d0e0      	beq.n	80063a4 <d_print_comp+0x1c08>
 80063e2:	001a      	movs	r2, r3
 80063e4:	3301      	adds	r3, #1
 80063e6:	e7ee      	b.n	80063c6 <d_print_comp+0x1c2a>
 80063e8:	4645      	mov	r5, r8
 80063ea:	0031      	movs	r1, r6
 80063ec:	68aa      	ldr	r2, [r5, #8]
 80063ee:	0020      	movs	r0, r4
 80063f0:	f7fe f9d4 	bl	800479c <d_print_comp>
 80063f4:	465b      	mov	r3, fp
 80063f6:	686a      	ldr	r2, [r5, #4]
 80063f8:	685b      	ldr	r3, [r3, #4]
 80063fa:	f7fe fa82 	bl	8004902 <d_print_comp+0x166>
 80063fe:	4645      	mov	r5, r8
 8006400:	0031      	movs	r1, r6
 8006402:	68aa      	ldr	r2, [r5, #8]
 8006404:	0020      	movs	r0, r4
 8006406:	f7fe f9c9 	bl	800479c <d_print_comp>
 800640a:	465b      	mov	r3, fp
 800640c:	686a      	ldr	r2, [r5, #4]
 800640e:	685b      	ldr	r3, [r3, #4]
 8006410:	f7fe fa77 	bl	8004902 <d_print_comp+0x166>
 8006414:	4645      	mov	r5, r8
 8006416:	0031      	movs	r1, r6
 8006418:	68aa      	ldr	r2, [r5, #8]
 800641a:	0020      	movs	r0, r4
 800641c:	f7fe f9be 	bl	800479c <d_print_comp>
 8006420:	465b      	mov	r3, fp
 8006422:	686a      	ldr	r2, [r5, #4]
 8006424:	685b      	ldr	r3, [r3, #4]
 8006426:	f7fe fa6c 	bl	8004902 <d_print_comp+0x166>
 800642a:	4645      	mov	r5, r8
 800642c:	0031      	movs	r1, r6
 800642e:	68aa      	ldr	r2, [r5, #8]
 8006430:	0020      	movs	r0, r4
 8006432:	f7fe f9b3 	bl	800479c <d_print_comp>
 8006436:	464b      	mov	r3, r9
 8006438:	58e3      	ldr	r3, [r4, r3]
 800643a:	2bff      	cmp	r3, #255	; 0xff
 800643c:	d111      	bne.n	8006462 <d_print_comp+0x1cc6>
 800643e:	2600      	movs	r6, #0
 8006440:	2286      	movs	r2, #134	; 0x86
 8006442:	54e6      	strb	r6, [r4, r3]
 8006444:	0052      	lsls	r2, r2, #1
 8006446:	3309      	adds	r3, #9
 8006448:	58e3      	ldr	r3, [r4, r3]
 800644a:	58a2      	ldr	r2, [r4, r2]
 800644c:	21ff      	movs	r1, #255	; 0xff
 800644e:	0020      	movs	r0, r4
 8006450:	f002 fed6 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8006454:	2292      	movs	r2, #146	; 0x92
 8006456:	464b      	mov	r3, r9
 8006458:	0052      	lsls	r2, r2, #1
 800645a:	50e6      	str	r6, [r4, r3]
 800645c:	58a3      	ldr	r3, [r4, r2]
 800645e:	3301      	adds	r3, #1
 8006460:	50a3      	str	r3, [r4, r2]
 8006462:	2380      	movs	r3, #128	; 0x80
 8006464:	005b      	lsls	r3, r3, #1
 8006466:	58e2      	ldr	r2, [r4, r3]
 8006468:	1c51      	adds	r1, r2, #1
 800646a:	50e1      	str	r1, [r4, r3]
 800646c:	3bd7      	subs	r3, #215	; 0xd7
 800646e:	54a3      	strb	r3, [r4, r2]
 8006470:	2282      	movs	r2, #130	; 0x82
 8006472:	0052      	lsls	r2, r2, #1
 8006474:	54a3      	strb	r3, [r4, r2]
 8006476:	465b      	mov	r3, fp
 8006478:	686a      	ldr	r2, [r5, #4]
 800647a:	685b      	ldr	r3, [r3, #4]
 800647c:	f7fe fa41 	bl	8004902 <d_print_comp+0x166>
 8006480:	278e      	movs	r7, #142	; 0x8e
 8006482:	4645      	mov	r5, r8
 8006484:	007f      	lsls	r7, r7, #1
 8006486:	59e3      	ldr	r3, [r4, r7]
 8006488:	3301      	adds	r3, #1
 800648a:	51e3      	str	r3, [r4, r7]
 800648c:	68aa      	ldr	r2, [r5, #8]
 800648e:	0031      	movs	r1, r6
 8006490:	0020      	movs	r0, r4
 8006492:	f7fe f983 	bl	800479c <d_print_comp>
 8006496:	59e3      	ldr	r3, [r4, r7]
 8006498:	2286      	movs	r2, #134	; 0x86
 800649a:	3b01      	subs	r3, #1
 800649c:	51e3      	str	r3, [r4, r7]
 800649e:	464b      	mov	r3, r9
 80064a0:	0052      	lsls	r2, r2, #1
 80064a2:	4691      	mov	r9, r2
 80064a4:	3a04      	subs	r2, #4
 80064a6:	58e3      	ldr	r3, [r4, r3]
 80064a8:	2600      	movs	r6, #0
 80064aa:	4692      	mov	sl, r2
 80064ac:	e01b      	b.n	80064e6 <d_print_comp+0x1d4a>
 80064ae:	2200      	movs	r2, #0
 80064b0:	54e2      	strb	r2, [r4, r3]
 80064b2:	464b      	mov	r3, r9
 80064b4:	58e2      	ldr	r2, [r4, r3]
 80064b6:	4653      	mov	r3, sl
 80064b8:	21ff      	movs	r1, #255	; 0xff
 80064ba:	58e3      	ldr	r3, [r4, r3]
 80064bc:	0020      	movs	r0, r4
 80064be:	f002 fe9f 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 80064c2:	2292      	movs	r2, #146	; 0x92
 80064c4:	0052      	lsls	r2, r2, #1
 80064c6:	58a3      	ldr	r3, [r4, r2]
 80064c8:	3301      	adds	r3, #1
 80064ca:	50a3      	str	r3, [r4, r2]
 80064cc:	2301      	movs	r3, #1
 80064ce:	2200      	movs	r2, #0
 80064d0:	2180      	movs	r1, #128	; 0x80
 80064d2:	0049      	lsls	r1, r1, #1
 80064d4:	5063      	str	r3, [r4, r1]
 80064d6:	54a7      	strb	r7, [r4, r2]
 80064d8:	2282      	movs	r2, #130	; 0x82
 80064da:	0052      	lsls	r2, r2, #1
 80064dc:	4688      	mov	r8, r1
 80064de:	54a7      	strb	r7, [r4, r2]
 80064e0:	2e01      	cmp	r6, #1
 80064e2:	d012      	beq.n	800650a <d_print_comp+0x1d6e>
 80064e4:	2601      	movs	r6, #1
 80064e6:	4a9d      	ldr	r2, [pc, #628]	; (800675c <d_print_comp+0x1fc0>)
 80064e8:	5d97      	ldrb	r7, [r2, r6]
 80064ea:	2bff      	cmp	r3, #255	; 0xff
 80064ec:	d0df      	beq.n	80064ae <d_print_comp+0x1d12>
 80064ee:	001a      	movs	r2, r3
 80064f0:	3301      	adds	r3, #1
 80064f2:	e7ed      	b.n	80064d0 <d_print_comp+0x1d34>
 80064f4:	4645      	mov	r5, r8
 80064f6:	0031      	movs	r1, r6
 80064f8:	68aa      	ldr	r2, [r5, #8]
 80064fa:	0020      	movs	r0, r4
 80064fc:	f7fe f94e 	bl	800479c <d_print_comp>
 8006500:	465b      	mov	r3, fp
 8006502:	686a      	ldr	r2, [r5, #4]
 8006504:	685b      	ldr	r3, [r3, #4]
 8006506:	f7fe f9fc 	bl	8004902 <d_print_comp+0x166>
 800650a:	68eb      	ldr	r3, [r5, #12]
 800650c:	1c5a      	adds	r2, r3, #1
 800650e:	ab08      	add	r3, sp, #32
 8006510:	469a      	mov	sl, r3
 8006512:	4993      	ldr	r1, [pc, #588]	; (8006760 <d_print_comp+0x1fc4>)
 8006514:	0018      	movs	r0, r3
 8006516:	f016 f883 	bl	801c620 <sprintf>
 800651a:	4650      	mov	r0, sl
 800651c:	f003 f8f0 	bl	8009700 <strlen>
 8006520:	9000      	str	r0, [sp, #0]
 8006522:	2800      	cmp	r0, #0
 8006524:	d101      	bne.n	800652a <d_print_comp+0x1d8e>
 8006526:	f001 f8a2 	bl	800766e <d_print_comp+0x2ed2>
 800652a:	2286      	movs	r2, #134	; 0x86
 800652c:	0052      	lsls	r2, r2, #1
 800652e:	4691      	mov	r9, r2
 8006530:	3a04      	subs	r2, #4
 8006532:	4643      	mov	r3, r8
 8006534:	4690      	mov	r8, r2
 8006536:	4652      	mov	r2, sl
 8006538:	58e3      	ldr	r3, [r4, r3]
 800653a:	46aa      	mov	sl, r5
 800653c:	2600      	movs	r6, #0
 800653e:	0015      	movs	r5, r2
 8006540:	e01c      	b.n	800657c <d_print_comp+0x1de0>
 8006542:	2200      	movs	r2, #0
 8006544:	54e2      	strb	r2, [r4, r3]
 8006546:	464b      	mov	r3, r9
 8006548:	58e2      	ldr	r2, [r4, r3]
 800654a:	4643      	mov	r3, r8
 800654c:	21ff      	movs	r1, #255	; 0xff
 800654e:	58e3      	ldr	r3, [r4, r3]
 8006550:	0020      	movs	r0, r4
 8006552:	f002 fe55 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8006556:	2292      	movs	r2, #146	; 0x92
 8006558:	0052      	lsls	r2, r2, #1
 800655a:	58a3      	ldr	r3, [r4, r2]
 800655c:	3301      	adds	r3, #1
 800655e:	50a3      	str	r3, [r4, r2]
 8006560:	2301      	movs	r3, #1
 8006562:	2200      	movs	r2, #0
 8006564:	2180      	movs	r1, #128	; 0x80
 8006566:	0049      	lsls	r1, r1, #1
 8006568:	5063      	str	r3, [r4, r1]
 800656a:	54a7      	strb	r7, [r4, r2]
 800656c:	2282      	movs	r2, #130	; 0x82
 800656e:	0052      	lsls	r2, r2, #1
 8006570:	54a7      	strb	r7, [r4, r2]
 8006572:	9a00      	ldr	r2, [sp, #0]
 8006574:	3601      	adds	r6, #1
 8006576:	42b2      	cmp	r2, r6
 8006578:	d100      	bne.n	800657c <d_print_comp+0x1de0>
 800657a:	e120      	b.n	80067be <d_print_comp+0x2022>
 800657c:	5daf      	ldrb	r7, [r5, r6]
 800657e:	2bff      	cmp	r3, #255	; 0xff
 8006580:	d0df      	beq.n	8006542 <d_print_comp+0x1da6>
 8006582:	001a      	movs	r2, r3
 8006584:	3301      	adds	r3, #1
 8006586:	e7ed      	b.n	8006564 <d_print_comp+0x1dc8>
 8006588:	4645      	mov	r5, r8
 800658a:	0031      	movs	r1, r6
 800658c:	68aa      	ldr	r2, [r5, #8]
 800658e:	0020      	movs	r0, r4
 8006590:	f7fe f904 	bl	800479c <d_print_comp>
 8006594:	465b      	mov	r3, fp
 8006596:	686a      	ldr	r2, [r5, #4]
 8006598:	685b      	ldr	r3, [r3, #4]
 800659a:	f7fe f9b2 	bl	8004902 <d_print_comp+0x166>
 800659e:	68ab      	ldr	r3, [r5, #8]
 80065a0:	1c5a      	adds	r2, r3, #1
 80065a2:	ab08      	add	r3, sp, #32
 80065a4:	469a      	mov	sl, r3
 80065a6:	496e      	ldr	r1, [pc, #440]	; (8006760 <d_print_comp+0x1fc4>)
 80065a8:	0018      	movs	r0, r3
 80065aa:	f016 f839 	bl	801c620 <sprintf>
 80065ae:	4650      	mov	r0, sl
 80065b0:	f003 f8a6 	bl	8009700 <strlen>
 80065b4:	9000      	str	r0, [sp, #0]
 80065b6:	2800      	cmp	r0, #0
 80065b8:	d101      	bne.n	80065be <d_print_comp+0x1e22>
 80065ba:	f001 f81f 	bl	80075fc <d_print_comp+0x2e60>
 80065be:	2286      	movs	r2, #134	; 0x86
 80065c0:	0052      	lsls	r2, r2, #1
 80065c2:	4691      	mov	r9, r2
 80065c4:	3a04      	subs	r2, #4
 80065c6:	4643      	mov	r3, r8
 80065c8:	4690      	mov	r8, r2
 80065ca:	4652      	mov	r2, sl
 80065cc:	58e3      	ldr	r3, [r4, r3]
 80065ce:	46aa      	mov	sl, r5
 80065d0:	2600      	movs	r6, #0
 80065d2:	0015      	movs	r5, r2
 80065d4:	e01c      	b.n	8006610 <d_print_comp+0x1e74>
 80065d6:	2200      	movs	r2, #0
 80065d8:	54e2      	strb	r2, [r4, r3]
 80065da:	464b      	mov	r3, r9
 80065dc:	58e2      	ldr	r2, [r4, r3]
 80065de:	4643      	mov	r3, r8
 80065e0:	21ff      	movs	r1, #255	; 0xff
 80065e2:	58e3      	ldr	r3, [r4, r3]
 80065e4:	0020      	movs	r0, r4
 80065e6:	f002 fe0b 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 80065ea:	2292      	movs	r2, #146	; 0x92
 80065ec:	0052      	lsls	r2, r2, #1
 80065ee:	58a3      	ldr	r3, [r4, r2]
 80065f0:	3301      	adds	r3, #1
 80065f2:	50a3      	str	r3, [r4, r2]
 80065f4:	2301      	movs	r3, #1
 80065f6:	2200      	movs	r2, #0
 80065f8:	2180      	movs	r1, #128	; 0x80
 80065fa:	0049      	lsls	r1, r1, #1
 80065fc:	5063      	str	r3, [r4, r1]
 80065fe:	54a7      	strb	r7, [r4, r2]
 8006600:	2282      	movs	r2, #130	; 0x82
 8006602:	0052      	lsls	r2, r2, #1
 8006604:	54a7      	strb	r7, [r4, r2]
 8006606:	9a00      	ldr	r2, [sp, #0]
 8006608:	3601      	adds	r6, #1
 800660a:	42b2      	cmp	r2, r6
 800660c:	d100      	bne.n	8006610 <d_print_comp+0x1e74>
 800660e:	e0ab      	b.n	8006768 <d_print_comp+0x1fcc>
 8006610:	5daf      	ldrb	r7, [r5, r6]
 8006612:	2bff      	cmp	r3, #255	; 0xff
 8006614:	d0df      	beq.n	80065d6 <d_print_comp+0x1e3a>
 8006616:	001a      	movs	r2, r3
 8006618:	3301      	adds	r3, #1
 800661a:	e7ed      	b.n	80065f8 <d_print_comp+0x1e5c>
 800661c:	4645      	mov	r5, r8
 800661e:	0031      	movs	r1, r6
 8006620:	68ea      	ldr	r2, [r5, #12]
 8006622:	0020      	movs	r0, r4
 8006624:	f7fe f8ba 	bl	800479c <d_print_comp>
 8006628:	464b      	mov	r3, r9
 800662a:	58e3      	ldr	r3, [r4, r3]
 800662c:	2bff      	cmp	r3, #255	; 0xff
 800662e:	d111      	bne.n	8006654 <d_print_comp+0x1eb8>
 8006630:	2600      	movs	r6, #0
 8006632:	2286      	movs	r2, #134	; 0x86
 8006634:	54e6      	strb	r6, [r4, r3]
 8006636:	0052      	lsls	r2, r2, #1
 8006638:	3309      	adds	r3, #9
 800663a:	58e3      	ldr	r3, [r4, r3]
 800663c:	58a2      	ldr	r2, [r4, r2]
 800663e:	21ff      	movs	r1, #255	; 0xff
 8006640:	0020      	movs	r0, r4
 8006642:	f002 fddd 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8006646:	2292      	movs	r2, #146	; 0x92
 8006648:	464b      	mov	r3, r9
 800664a:	0052      	lsls	r2, r2, #1
 800664c:	50e6      	str	r6, [r4, r3]
 800664e:	58a3      	ldr	r3, [r4, r2]
 8006650:	3301      	adds	r3, #1
 8006652:	50a3      	str	r3, [r4, r2]
 8006654:	2380      	movs	r3, #128	; 0x80
 8006656:	005b      	lsls	r3, r3, #1
 8006658:	58e2      	ldr	r2, [r4, r3]
 800665a:	1c51      	adds	r1, r2, #1
 800665c:	50e1      	str	r1, [r4, r3]
 800665e:	3ba3      	subs	r3, #163	; 0xa3
 8006660:	54a3      	strb	r3, [r4, r2]
 8006662:	2282      	movs	r2, #130	; 0x82
 8006664:	0052      	lsls	r2, r2, #1
 8006666:	54a3      	strb	r3, [r4, r2]
 8006668:	465b      	mov	r3, fp
 800666a:	686a      	ldr	r2, [r5, #4]
 800666c:	685b      	ldr	r3, [r3, #4]
 800666e:	f7fe f948 	bl	8004902 <d_print_comp+0x166>
 8006672:	4645      	mov	r5, r8
 8006674:	0031      	movs	r1, r6
 8006676:	68ea      	ldr	r2, [r5, #12]
 8006678:	0020      	movs	r0, r4
 800667a:	f7fe f88f 	bl	800479c <d_print_comp>
 800667e:	464b      	mov	r3, r9
 8006680:	58e3      	ldr	r3, [r4, r3]
 8006682:	2bff      	cmp	r3, #255	; 0xff
 8006684:	d111      	bne.n	80066aa <d_print_comp+0x1f0e>
 8006686:	2600      	movs	r6, #0
 8006688:	2286      	movs	r2, #134	; 0x86
 800668a:	54e6      	strb	r6, [r4, r3]
 800668c:	0052      	lsls	r2, r2, #1
 800668e:	3309      	adds	r3, #9
 8006690:	58e3      	ldr	r3, [r4, r3]
 8006692:	58a2      	ldr	r2, [r4, r2]
 8006694:	21ff      	movs	r1, #255	; 0xff
 8006696:	0020      	movs	r0, r4
 8006698:	f002 fdb2 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 800669c:	2292      	movs	r2, #146	; 0x92
 800669e:	464b      	mov	r3, r9
 80066a0:	0052      	lsls	r2, r2, #1
 80066a2:	50e6      	str	r6, [r4, r3]
 80066a4:	58a3      	ldr	r3, [r4, r2]
 80066a6:	3301      	adds	r3, #1
 80066a8:	50a3      	str	r3, [r4, r2]
 80066aa:	2380      	movs	r3, #128	; 0x80
 80066ac:	005b      	lsls	r3, r3, #1
 80066ae:	58e2      	ldr	r2, [r4, r3]
 80066b0:	1c51      	adds	r1, r2, #1
 80066b2:	50e1      	str	r1, [r4, r3]
 80066b4:	3ba3      	subs	r3, #163	; 0xa3
 80066b6:	54a3      	strb	r3, [r4, r2]
 80066b8:	2282      	movs	r2, #130	; 0x82
 80066ba:	0052      	lsls	r2, r2, #1
 80066bc:	54a3      	strb	r3, [r4, r2]
 80066be:	465b      	mov	r3, fp
 80066c0:	686a      	ldr	r2, [r5, #4]
 80066c2:	685b      	ldr	r3, [r3, #4]
 80066c4:	f7fe f91d 	bl	8004902 <d_print_comp+0x166>
 80066c8:	4645      	mov	r5, r8
 80066ca:	0031      	movs	r1, r6
 80066cc:	68aa      	ldr	r2, [r5, #8]
 80066ce:	0020      	movs	r0, r4
 80066d0:	f7fe f864 	bl	800479c <d_print_comp>
 80066d4:	2286      	movs	r2, #134	; 0x86
 80066d6:	464b      	mov	r3, r9
 80066d8:	0052      	lsls	r2, r2, #1
 80066da:	4692      	mov	sl, r2
 80066dc:	3a04      	subs	r2, #4
 80066de:	58e3      	ldr	r3, [r4, r3]
 80066e0:	2700      	movs	r7, #0
 80066e2:	4691      	mov	r9, r2
 80066e4:	e01a      	b.n	800671c <d_print_comp+0x1f80>
 80066e6:	2200      	movs	r2, #0
 80066e8:	54e2      	strb	r2, [r4, r3]
 80066ea:	4653      	mov	r3, sl
 80066ec:	58e2      	ldr	r2, [r4, r3]
 80066ee:	464b      	mov	r3, r9
 80066f0:	21ff      	movs	r1, #255	; 0xff
 80066f2:	58e3      	ldr	r3, [r4, r3]
 80066f4:	0020      	movs	r0, r4
 80066f6:	f002 fd83 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 80066fa:	2292      	movs	r2, #146	; 0x92
 80066fc:	0052      	lsls	r2, r2, #1
 80066fe:	58a3      	ldr	r3, [r4, r2]
 8006700:	3301      	adds	r3, #1
 8006702:	50a3      	str	r3, [r4, r2]
 8006704:	2301      	movs	r3, #1
 8006706:	2200      	movs	r2, #0
 8006708:	2180      	movs	r1, #128	; 0x80
 800670a:	0049      	lsls	r1, r1, #1
 800670c:	5063      	str	r3, [r4, r1]
 800670e:	54a5      	strb	r5, [r4, r2]
 8006710:	2282      	movs	r2, #130	; 0x82
 8006712:	3701      	adds	r7, #1
 8006714:	0052      	lsls	r2, r2, #1
 8006716:	54a5      	strb	r5, [r4, r2]
 8006718:	2f04      	cmp	r7, #4
 800671a:	d006      	beq.n	800672a <d_print_comp+0x1f8e>
 800671c:	4a11      	ldr	r2, [pc, #68]	; (8006764 <d_print_comp+0x1fc8>)
 800671e:	5dd5      	ldrb	r5, [r2, r7]
 8006720:	2bff      	cmp	r3, #255	; 0xff
 8006722:	d0e0      	beq.n	80066e6 <d_print_comp+0x1f4a>
 8006724:	001a      	movs	r2, r3
 8006726:	3301      	adds	r3, #1
 8006728:	e7ee      	b.n	8006708 <d_print_comp+0x1f6c>
 800672a:	4645      	mov	r5, r8
 800672c:	0031      	movs	r1, r6
 800672e:	68ea      	ldr	r2, [r5, #12]
 8006730:	0020      	movs	r0, r4
 8006732:	f7fe f833 	bl	800479c <d_print_comp>
 8006736:	465b      	mov	r3, fp
 8006738:	686a      	ldr	r2, [r5, #4]
 800673a:	685b      	ldr	r3, [r3, #4]
 800673c:	f7fe f8e1 	bl	8004902 <d_print_comp+0x166>
 8006740:	4645      	mov	r5, r8
 8006742:	0031      	movs	r1, r6
 8006744:	68aa      	ldr	r2, [r5, #8]
 8006746:	0020      	movs	r0, r4
 8006748:	f7fe f828 	bl	800479c <d_print_comp>
 800674c:	465b      	mov	r3, fp
 800674e:	686a      	ldr	r2, [r5, #4]
 8006750:	685b      	ldr	r3, [r3, #4]
 8006752:	f7fe f8d6 	bl	8004902 <d_print_comp+0x166>
 8006756:	46c0      	nop			; (mov r8, r8)
 8006758:	08026f08 	.word	0x08026f08
 800675c:	08027044 	.word	0x08027044
 8006760:	08026d94 	.word	0x08026d94
 8006764:	08026e44 	.word	0x08026e44
 8006768:	4655      	mov	r5, sl
 800676a:	2bff      	cmp	r3, #255	; 0xff
 800676c:	d112      	bne.n	8006794 <d_print_comp+0x1ff8>
 800676e:	2600      	movs	r6, #0
 8006770:	2286      	movs	r2, #134	; 0x86
 8006772:	54e6      	strb	r6, [r4, r3]
 8006774:	0052      	lsls	r2, r2, #1
 8006776:	3309      	adds	r3, #9
 8006778:	58e3      	ldr	r3, [r4, r3]
 800677a:	58a2      	ldr	r2, [r4, r2]
 800677c:	21ff      	movs	r1, #255	; 0xff
 800677e:	0020      	movs	r0, r4
 8006780:	f002 fd3e 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8006784:	2380      	movs	r3, #128	; 0x80
 8006786:	2292      	movs	r2, #146	; 0x92
 8006788:	005b      	lsls	r3, r3, #1
 800678a:	0052      	lsls	r2, r2, #1
 800678c:	50e6      	str	r6, [r4, r3]
 800678e:	58a3      	ldr	r3, [r4, r2]
 8006790:	3301      	adds	r3, #1
 8006792:	50a3      	str	r3, [r4, r2]
 8006794:	2380      	movs	r3, #128	; 0x80
 8006796:	005b      	lsls	r3, r3, #1
 8006798:	58e2      	ldr	r2, [r4, r3]
 800679a:	1c51      	adds	r1, r2, #1
 800679c:	50e1      	str	r1, [r4, r3]
 800679e:	3b83      	subs	r3, #131	; 0x83
 80067a0:	54a3      	strb	r3, [r4, r2]
 80067a2:	2282      	movs	r2, #130	; 0x82
 80067a4:	0052      	lsls	r2, r2, #1
 80067a6:	54a3      	strb	r3, [r4, r2]
 80067a8:	465b      	mov	r3, fp
 80067aa:	686a      	ldr	r2, [r5, #4]
 80067ac:	685b      	ldr	r3, [r3, #4]
 80067ae:	f7fe f8a8 	bl	8004902 <d_print_comp+0x166>
 80067b2:	4645      	mov	r5, r8
 80067b4:	465b      	mov	r3, fp
 80067b6:	686a      	ldr	r2, [r5, #4]
 80067b8:	685b      	ldr	r3, [r3, #4]
 80067ba:	f7fe f8a2 	bl	8004902 <d_print_comp+0x166>
 80067be:	4655      	mov	r5, sl
 80067c0:	2bff      	cmp	r3, #255	; 0xff
 80067c2:	d112      	bne.n	80067ea <d_print_comp+0x204e>
 80067c4:	2600      	movs	r6, #0
 80067c6:	2286      	movs	r2, #134	; 0x86
 80067c8:	54e6      	strb	r6, [r4, r3]
 80067ca:	0052      	lsls	r2, r2, #1
 80067cc:	3309      	adds	r3, #9
 80067ce:	58e3      	ldr	r3, [r4, r3]
 80067d0:	58a2      	ldr	r2, [r4, r2]
 80067d2:	21ff      	movs	r1, #255	; 0xff
 80067d4:	0020      	movs	r0, r4
 80067d6:	f002 fd13 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 80067da:	2380      	movs	r3, #128	; 0x80
 80067dc:	2292      	movs	r2, #146	; 0x92
 80067de:	005b      	lsls	r3, r3, #1
 80067e0:	0052      	lsls	r2, r2, #1
 80067e2:	50e6      	str	r6, [r4, r3]
 80067e4:	58a3      	ldr	r3, [r4, r2]
 80067e6:	3301      	adds	r3, #1
 80067e8:	50a3      	str	r3, [r4, r2]
 80067ea:	2380      	movs	r3, #128	; 0x80
 80067ec:	005b      	lsls	r3, r3, #1
 80067ee:	58e2      	ldr	r2, [r4, r3]
 80067f0:	1c51      	adds	r1, r2, #1
 80067f2:	50e1      	str	r1, [r4, r3]
 80067f4:	3b83      	subs	r3, #131	; 0x83
 80067f6:	54a3      	strb	r3, [r4, r2]
 80067f8:	2282      	movs	r2, #130	; 0x82
 80067fa:	0052      	lsls	r2, r2, #1
 80067fc:	54a3      	strb	r3, [r4, r2]
 80067fe:	465b      	mov	r3, fp
 8006800:	686a      	ldr	r2, [r5, #4]
 8006802:	685b      	ldr	r3, [r3, #4]
 8006804:	f7fe f87d 	bl	8004902 <d_print_comp+0x166>
 8006808:	4645      	mov	r5, r8
 800680a:	465b      	mov	r3, fp
 800680c:	686a      	ldr	r2, [r5, #4]
 800680e:	685b      	ldr	r3, [r3, #4]
 8006810:	f7fe f877 	bl	8004902 <d_print_comp+0x166>
 8006814:	4646      	mov	r6, r8
 8006816:	464d      	mov	r5, r9
 8006818:	3320      	adds	r3, #32
 800681a:	4698      	mov	r8, r3
 800681c:	58e3      	ldr	r3, [r4, r3]
 800681e:	9200      	str	r2, [sp, #0]
 8006820:	0031      	movs	r1, r6
 8006822:	68ea      	ldr	r2, [r5, #12]
 8006824:	0020      	movs	r0, r4
 8006826:	4699      	mov	r9, r3
 8006828:	f7fd ffb8 	bl	800479c <d_print_comp>
 800682c:	4643      	mov	r3, r8
 800682e:	58e3      	ldr	r3, [r4, r3]
 8006830:	4599      	cmp	r9, r3
 8006832:	d101      	bne.n	8006838 <d_print_comp+0x209c>
 8006834:	f000 fd21 	bl	800727a <d_print_comp+0x2ade>
 8006838:	465b      	mov	r3, fp
 800683a:	686a      	ldr	r2, [r5, #4]
 800683c:	685b      	ldr	r3, [r3, #4]
 800683e:	f7fe f860 	bl	8004902 <d_print_comp+0x166>
 8006842:	68aa      	ldr	r2, [r5, #8]
 8006844:	9300      	str	r3, [sp, #0]
 8006846:	9201      	str	r2, [sp, #4]
 8006848:	2b00      	cmp	r3, #0
 800684a:	d001      	beq.n	8006850 <d_print_comp+0x20b4>
 800684c:	f7fe f8b1 	bl	80049b2 <d_print_comp+0x216>
 8006850:	465b      	mov	r3, fp
 8006852:	686a      	ldr	r2, [r5, #4]
 8006854:	685b      	ldr	r3, [r3, #4]
 8006856:	f7fe f854 	bl	8004902 <d_print_comp+0x166>
 800685a:	4ae1      	ldr	r2, [pc, #900]	; (8006be0 <d_print_comp+0x2444>)
 800685c:	4690      	mov	r8, r2
 800685e:	2286      	movs	r2, #134	; 0x86
 8006860:	0052      	lsls	r2, r2, #1
 8006862:	4692      	mov	sl, r2
 8006864:	3a04      	subs	r2, #4
 8006866:	4691      	mov	r9, r2
 8006868:	e01a      	b.n	80068a0 <d_print_comp+0x2104>
 800686a:	2200      	movs	r2, #0
 800686c:	54e2      	strb	r2, [r4, r3]
 800686e:	4653      	mov	r3, sl
 8006870:	58e2      	ldr	r2, [r4, r3]
 8006872:	464b      	mov	r3, r9
 8006874:	21ff      	movs	r1, #255	; 0xff
 8006876:	58e3      	ldr	r3, [r4, r3]
 8006878:	0020      	movs	r0, r4
 800687a:	f002 fcc1 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 800687e:	2292      	movs	r2, #146	; 0x92
 8006880:	0052      	lsls	r2, r2, #1
 8006882:	58a3      	ldr	r3, [r4, r2]
 8006884:	3301      	adds	r3, #1
 8006886:	50a3      	str	r3, [r4, r2]
 8006888:	2301      	movs	r3, #1
 800688a:	2200      	movs	r2, #0
 800688c:	2180      	movs	r1, #128	; 0x80
 800688e:	0049      	lsls	r1, r1, #1
 8006890:	5063      	str	r3, [r4, r1]
 8006892:	54a7      	strb	r7, [r4, r2]
 8006894:	2282      	movs	r2, #130	; 0x82
 8006896:	3601      	adds	r6, #1
 8006898:	0052      	lsls	r2, r2, #1
 800689a:	54a7      	strb	r7, [r4, r2]
 800689c:	2e04      	cmp	r6, #4
 800689e:	d006      	beq.n	80068ae <d_print_comp+0x2112>
 80068a0:	4642      	mov	r2, r8
 80068a2:	5d97      	ldrb	r7, [r2, r6]
 80068a4:	2bff      	cmp	r3, #255	; 0xff
 80068a6:	d0e0      	beq.n	800686a <d_print_comp+0x20ce>
 80068a8:	001a      	movs	r2, r3
 80068aa:	3301      	adds	r3, #1
 80068ac:	e7ee      	b.n	800688c <d_print_comp+0x20f0>
 80068ae:	465b      	mov	r3, fp
 80068b0:	686a      	ldr	r2, [r5, #4]
 80068b2:	685b      	ldr	r3, [r3, #4]
 80068b4:	f7fe f825 	bl	8004902 <d_print_comp+0x166>
 80068b8:	465b      	mov	r3, fp
 80068ba:	686a      	ldr	r2, [r5, #4]
 80068bc:	685b      	ldr	r3, [r3, #4]
 80068be:	f7fe f820 	bl	8004902 <d_print_comp+0x166>
 80068c2:	68e9      	ldr	r1, [r5, #12]
 80068c4:	4688      	mov	r8, r1
 80068c6:	44b8      	add	r8, r7
 80068c8:	45b8      	cmp	r8, r7
 80068ca:	d801      	bhi.n	80068d0 <d_print_comp+0x2134>
 80068cc:	f7fe f819 	bl	8004902 <d_print_comp+0x166>
 80068d0:	2680      	movs	r6, #128	; 0x80
 80068d2:	46a9      	mov	r9, r5
 80068d4:	0076      	lsls	r6, r6, #1
 80068d6:	e01f      	b.n	8006918 <d_print_comp+0x217c>
 80068d8:	59a3      	ldr	r3, [r4, r6]
 80068da:	1c5a      	adds	r2, r3, #1
 80068dc:	2bff      	cmp	r3, #255	; 0xff
 80068de:	d112      	bne.n	8006906 <d_print_comp+0x216a>
 80068e0:	2200      	movs	r2, #0
 80068e2:	54e2      	strb	r2, [r4, r3]
 80068e4:	2386      	movs	r3, #134	; 0x86
 80068e6:	005b      	lsls	r3, r3, #1
 80068e8:	58e2      	ldr	r2, [r4, r3]
 80068ea:	3b04      	subs	r3, #4
 80068ec:	58e3      	ldr	r3, [r4, r3]
 80068ee:	21ff      	movs	r1, #255	; 0xff
 80068f0:	0020      	movs	r0, r4
 80068f2:	f002 fc85 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 80068f6:	2292      	movs	r2, #146	; 0x92
 80068f8:	0052      	lsls	r2, r2, #1
 80068fa:	58a3      	ldr	r3, [r4, r2]
 80068fc:	3301      	adds	r3, #1
 80068fe:	50a3      	str	r3, [r4, r2]
 8006900:	2300      	movs	r3, #0
 8006902:	3a24      	subs	r2, #36	; 0x24
 8006904:	3aff      	subs	r2, #255	; 0xff
 8006906:	51a2      	str	r2, [r4, r6]
 8006908:	54e5      	strb	r5, [r4, r3]
 800690a:	2382      	movs	r3, #130	; 0x82
 800690c:	005b      	lsls	r3, r3, #1
 800690e:	54e5      	strb	r5, [r4, r3]
 8006910:	3701      	adds	r7, #1
 8006912:	45b8      	cmp	r8, r7
 8006914:	d800      	bhi.n	8006918 <d_print_comp+0x217c>
 8006916:	e15c      	b.n	8006bd2 <d_print_comp+0x2436>
 8006918:	4643      	mov	r3, r8
 800691a:	783d      	ldrb	r5, [r7, #0]
 800691c:	1bdb      	subs	r3, r3, r7
 800691e:	2b03      	cmp	r3, #3
 8006920:	ddda      	ble.n	80068d8 <d_print_comp+0x213c>
 8006922:	2d5f      	cmp	r5, #95	; 0x5f
 8006924:	d1d8      	bne.n	80068d8 <d_print_comp+0x213c>
 8006926:	787b      	ldrb	r3, [r7, #1]
 8006928:	2b5f      	cmp	r3, #95	; 0x5f
 800692a:	d1d5      	bne.n	80068d8 <d_print_comp+0x213c>
 800692c:	78bb      	ldrb	r3, [r7, #2]
 800692e:	2b55      	cmp	r3, #85	; 0x55
 8006930:	d1d2      	bne.n	80068d8 <d_print_comp+0x213c>
 8006932:	1cfb      	adds	r3, r7, #3
 8006934:	2000      	movs	r0, #0
 8006936:	0019      	movs	r1, r3
 8006938:	46a4      	mov	ip, r4
 800693a:	e003      	b.n	8006944 <d_print_comp+0x21a8>
 800693c:	0013      	movs	r3, r2
 800693e:	0100      	lsls	r0, r0, #4
 8006940:	1818      	adds	r0, r3, r0
 8006942:	3101      	adds	r1, #1
 8006944:	4588      	cmp	r8, r1
 8006946:	d801      	bhi.n	800694c <d_print_comp+0x21b0>
 8006948:	f001 f912 	bl	8007b70 <d_print_comp+0x33d4>
 800694c:	780b      	ldrb	r3, [r1, #0]
 800694e:	001a      	movs	r2, r3
 8006950:	3a30      	subs	r2, #48	; 0x30
 8006952:	0614      	lsls	r4, r2, #24
 8006954:	0e24      	lsrs	r4, r4, #24
 8006956:	2c09      	cmp	r4, #9
 8006958:	d9f0      	bls.n	800693c <d_print_comp+0x21a0>
 800695a:	001a      	movs	r2, r3
 800695c:	3a41      	subs	r2, #65	; 0x41
 800695e:	2a05      	cmp	r2, #5
 8006960:	d901      	bls.n	8006966 <d_print_comp+0x21ca>
 8006962:	f000 ffa9 	bl	80078b8 <d_print_comp+0x311c>
 8006966:	3b37      	subs	r3, #55	; 0x37
 8006968:	e7e9      	b.n	800693e <d_print_comp+0x21a2>
 800696a:	688e      	ldr	r6, [r1, #8]
 800696c:	68c9      	ldr	r1, [r1, #12]
 800696e:	2900      	cmp	r1, #0
 8006970:	d101      	bne.n	8006976 <d_print_comp+0x21da>
 8006972:	f7fd ffc6 	bl	8004902 <d_print_comp+0x166>
 8006976:	2286      	movs	r2, #134	; 0x86
 8006978:	2380      	movs	r3, #128	; 0x80
 800697a:	4688      	mov	r8, r1
 800697c:	0052      	lsls	r2, r2, #1
 800697e:	005b      	lsls	r3, r3, #1
 8006980:	4692      	mov	sl, r2
 8006982:	3a04      	subs	r2, #4
 8006984:	58e3      	ldr	r3, [r4, r3]
 8006986:	44b0      	add	r8, r6
 8006988:	4691      	mov	r9, r2
 800698a:	e01b      	b.n	80069c4 <d_print_comp+0x2228>
 800698c:	2200      	movs	r2, #0
 800698e:	54e2      	strb	r2, [r4, r3]
 8006990:	4653      	mov	r3, sl
 8006992:	58e2      	ldr	r2, [r4, r3]
 8006994:	464b      	mov	r3, r9
 8006996:	21ff      	movs	r1, #255	; 0xff
 8006998:	58e3      	ldr	r3, [r4, r3]
 800699a:	0020      	movs	r0, r4
 800699c:	f002 fc30 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 80069a0:	2292      	movs	r2, #146	; 0x92
 80069a2:	0052      	lsls	r2, r2, #1
 80069a4:	58a3      	ldr	r3, [r4, r2]
 80069a6:	3301      	adds	r3, #1
 80069a8:	50a3      	str	r3, [r4, r2]
 80069aa:	2301      	movs	r3, #1
 80069ac:	2200      	movs	r2, #0
 80069ae:	2180      	movs	r1, #128	; 0x80
 80069b0:	0049      	lsls	r1, r1, #1
 80069b2:	5063      	str	r3, [r4, r1]
 80069b4:	54a7      	strb	r7, [r4, r2]
 80069b6:	2282      	movs	r2, #130	; 0x82
 80069b8:	3601      	adds	r6, #1
 80069ba:	0052      	lsls	r2, r2, #1
 80069bc:	54a7      	strb	r7, [r4, r2]
 80069be:	45b0      	cmp	r8, r6
 80069c0:	d100      	bne.n	80069c4 <d_print_comp+0x2228>
 80069c2:	e0c2      	b.n	8006b4a <d_print_comp+0x23ae>
 80069c4:	7837      	ldrb	r7, [r6, #0]
 80069c6:	2bff      	cmp	r3, #255	; 0xff
 80069c8:	d0e0      	beq.n	800698c <d_print_comp+0x21f0>
 80069ca:	001a      	movs	r2, r3
 80069cc:	3301      	adds	r3, #1
 80069ce:	e7ee      	b.n	80069ae <d_print_comp+0x2212>
 80069d0:	4a84      	ldr	r2, [pc, #528]	; (8006be4 <d_print_comp+0x2448>)
 80069d2:	4690      	mov	r8, r2
 80069d4:	2286      	movs	r2, #134	; 0x86
 80069d6:	0052      	lsls	r2, r2, #1
 80069d8:	4692      	mov	sl, r2
 80069da:	3a04      	subs	r2, #4
 80069dc:	4691      	mov	r9, r2
 80069de:	e01a      	b.n	8006a16 <d_print_comp+0x227a>
 80069e0:	2200      	movs	r2, #0
 80069e2:	54e2      	strb	r2, [r4, r3]
 80069e4:	4653      	mov	r3, sl
 80069e6:	58e2      	ldr	r2, [r4, r3]
 80069e8:	464b      	mov	r3, r9
 80069ea:	21ff      	movs	r1, #255	; 0xff
 80069ec:	58e3      	ldr	r3, [r4, r3]
 80069ee:	0020      	movs	r0, r4
 80069f0:	f002 fc06 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 80069f4:	2292      	movs	r2, #146	; 0x92
 80069f6:	0052      	lsls	r2, r2, #1
 80069f8:	58a3      	ldr	r3, [r4, r2]
 80069fa:	3301      	adds	r3, #1
 80069fc:	50a3      	str	r3, [r4, r2]
 80069fe:	2301      	movs	r3, #1
 8006a00:	2200      	movs	r2, #0
 8006a02:	2180      	movs	r1, #128	; 0x80
 8006a04:	0049      	lsls	r1, r1, #1
 8006a06:	5063      	str	r3, [r4, r1]
 8006a08:	54a7      	strb	r7, [r4, r2]
 8006a0a:	2282      	movs	r2, #130	; 0x82
 8006a0c:	3601      	adds	r6, #1
 8006a0e:	0052      	lsls	r2, r2, #1
 8006a10:	54a7      	strb	r7, [r4, r2]
 8006a12:	2e06      	cmp	r6, #6
 8006a14:	d006      	beq.n	8006a24 <d_print_comp+0x2288>
 8006a16:	4642      	mov	r2, r8
 8006a18:	5d97      	ldrb	r7, [r2, r6]
 8006a1a:	2bff      	cmp	r3, #255	; 0xff
 8006a1c:	d0e0      	beq.n	80069e0 <d_print_comp+0x2244>
 8006a1e:	001a      	movs	r2, r3
 8006a20:	3301      	adds	r3, #1
 8006a22:	e7ee      	b.n	8006a02 <d_print_comp+0x2266>
 8006a24:	465b      	mov	r3, fp
 8006a26:	686a      	ldr	r2, [r5, #4]
 8006a28:	685b      	ldr	r3, [r3, #4]
 8006a2a:	f7fd ff6a 	bl	8004902 <d_print_comp+0x166>
 8006a2e:	ab08      	add	r3, sp, #32
 8006a30:	469a      	mov	sl, r3
 8006a32:	9a00      	ldr	r2, [sp, #0]
 8006a34:	496c      	ldr	r1, [pc, #432]	; (8006be8 <d_print_comp+0x244c>)
 8006a36:	0018      	movs	r0, r3
 8006a38:	f015 fdf2 	bl	801c620 <sprintf>
 8006a3c:	4650      	mov	r0, sl
 8006a3e:	f002 fe5f 	bl	8009700 <strlen>
 8006a42:	4680      	mov	r8, r0
 8006a44:	2800      	cmp	r0, #0
 8006a46:	d02b      	beq.n	8006aa0 <d_print_comp+0x2304>
 8006a48:	2284      	movs	r2, #132	; 0x84
 8006a4a:	464b      	mov	r3, r9
 8006a4c:	0052      	lsls	r2, r2, #1
 8006a4e:	58e3      	ldr	r3, [r4, r3]
 8006a50:	2600      	movs	r6, #0
 8006a52:	4691      	mov	r9, r2
 8006a54:	e01d      	b.n	8006a92 <d_print_comp+0x22f6>
 8006a56:	2200      	movs	r2, #0
 8006a58:	54e2      	strb	r2, [r4, r3]
 8006a5a:	2386      	movs	r3, #134	; 0x86
 8006a5c:	005b      	lsls	r3, r3, #1
 8006a5e:	58e3      	ldr	r3, [r4, r3]
 8006a60:	001a      	movs	r2, r3
 8006a62:	9300      	str	r3, [sp, #0]
 8006a64:	464b      	mov	r3, r9
 8006a66:	21ff      	movs	r1, #255	; 0xff
 8006a68:	58e3      	ldr	r3, [r4, r3]
 8006a6a:	0020      	movs	r0, r4
 8006a6c:	f002 fbc8 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8006a70:	2292      	movs	r2, #146	; 0x92
 8006a72:	0052      	lsls	r2, r2, #1
 8006a74:	58a3      	ldr	r3, [r4, r2]
 8006a76:	3301      	adds	r3, #1
 8006a78:	50a3      	str	r3, [r4, r2]
 8006a7a:	2301      	movs	r3, #1
 8006a7c:	2200      	movs	r2, #0
 8006a7e:	2180      	movs	r1, #128	; 0x80
 8006a80:	0049      	lsls	r1, r1, #1
 8006a82:	5063      	str	r3, [r4, r1]
 8006a84:	54a7      	strb	r7, [r4, r2]
 8006a86:	2282      	movs	r2, #130	; 0x82
 8006a88:	3601      	adds	r6, #1
 8006a8a:	0052      	lsls	r2, r2, #1
 8006a8c:	54a7      	strb	r7, [r4, r2]
 8006a8e:	45b0      	cmp	r8, r6
 8006a90:	d006      	beq.n	8006aa0 <d_print_comp+0x2304>
 8006a92:	4652      	mov	r2, sl
 8006a94:	5d97      	ldrb	r7, [r2, r6]
 8006a96:	2bff      	cmp	r3, #255	; 0xff
 8006a98:	d0dd      	beq.n	8006a56 <d_print_comp+0x22ba>
 8006a9a:	001a      	movs	r2, r3
 8006a9c:	3301      	adds	r3, #1
 8006a9e:	e7ee      	b.n	8006a7e <d_print_comp+0x22e2>
 8006aa0:	2680      	movs	r6, #128	; 0x80
 8006aa2:	0076      	lsls	r6, r6, #1
 8006aa4:	59a1      	ldr	r1, [r4, r6]
 8006aa6:	29ff      	cmp	r1, #255	; 0xff
 8006aa8:	d110      	bne.n	8006acc <d_print_comp+0x2330>
 8006aaa:	2700      	movs	r7, #0
 8006aac:	2384      	movs	r3, #132	; 0x84
 8006aae:	2286      	movs	r2, #134	; 0x86
 8006ab0:	5467      	strb	r7, [r4, r1]
 8006ab2:	005b      	lsls	r3, r3, #1
 8006ab4:	0052      	lsls	r2, r2, #1
 8006ab6:	58e3      	ldr	r3, [r4, r3]
 8006ab8:	58a2      	ldr	r2, [r4, r2]
 8006aba:	0020      	movs	r0, r4
 8006abc:	f002 fba0 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8006ac0:	2292      	movs	r2, #146	; 0x92
 8006ac2:	0052      	lsls	r2, r2, #1
 8006ac4:	58a3      	ldr	r3, [r4, r2]
 8006ac6:	3301      	adds	r3, #1
 8006ac8:	51a7      	str	r7, [r4, r6]
 8006aca:	50a3      	str	r3, [r4, r2]
 8006acc:	2380      	movs	r3, #128	; 0x80
 8006ace:	005b      	lsls	r3, r3, #1
 8006ad0:	58e2      	ldr	r2, [r4, r3]
 8006ad2:	1c51      	adds	r1, r2, #1
 8006ad4:	50e1      	str	r1, [r4, r3]
 8006ad6:	3b83      	subs	r3, #131	; 0x83
 8006ad8:	54a3      	strb	r3, [r4, r2]
 8006ada:	2282      	movs	r2, #130	; 0x82
 8006adc:	0052      	lsls	r2, r2, #1
 8006ade:	54a3      	strb	r3, [r4, r2]
 8006ae0:	465b      	mov	r3, fp
 8006ae2:	686a      	ldr	r2, [r5, #4]
 8006ae4:	685b      	ldr	r3, [r3, #4]
 8006ae6:	f7fd ff0c 	bl	8004902 <d_print_comp+0x166>
 8006aea:	2286      	movs	r2, #134	; 0x86
 8006aec:	2380      	movs	r3, #128	; 0x80
 8006aee:	0052      	lsls	r2, r2, #1
 8006af0:	005b      	lsls	r3, r3, #1
 8006af2:	4692      	mov	sl, r2
 8006af4:	3a04      	subs	r2, #4
 8006af6:	58e3      	ldr	r3, [r4, r3]
 8006af8:	2600      	movs	r6, #0
 8006afa:	4691      	mov	r9, r2
 8006afc:	e01b      	b.n	8006b36 <d_print_comp+0x239a>
 8006afe:	2200      	movs	r2, #0
 8006b00:	54e2      	strb	r2, [r4, r3]
 8006b02:	4653      	mov	r3, sl
 8006b04:	58e2      	ldr	r2, [r4, r3]
 8006b06:	464b      	mov	r3, r9
 8006b08:	21ff      	movs	r1, #255	; 0xff
 8006b0a:	58e3      	ldr	r3, [r4, r3]
 8006b0c:	0020      	movs	r0, r4
 8006b0e:	f002 fb77 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8006b12:	2292      	movs	r2, #146	; 0x92
 8006b14:	0052      	lsls	r2, r2, #1
 8006b16:	58a3      	ldr	r3, [r4, r2]
 8006b18:	3301      	adds	r3, #1
 8006b1a:	50a3      	str	r3, [r4, r2]
 8006b1c:	2301      	movs	r3, #1
 8006b1e:	2200      	movs	r2, #0
 8006b20:	2180      	movs	r1, #128	; 0x80
 8006b22:	0049      	lsls	r1, r1, #1
 8006b24:	5063      	str	r3, [r4, r1]
 8006b26:	54a7      	strb	r7, [r4, r2]
 8006b28:	2282      	movs	r2, #130	; 0x82
 8006b2a:	3601      	adds	r6, #1
 8006b2c:	0052      	lsls	r2, r2, #1
 8006b2e:	4688      	mov	r8, r1
 8006b30:	54a7      	strb	r7, [r4, r2]
 8006b32:	2e05      	cmp	r6, #5
 8006b34:	d00e      	beq.n	8006b54 <d_print_comp+0x23b8>
 8006b36:	4a2d      	ldr	r2, [pc, #180]	; (8006bec <d_print_comp+0x2450>)
 8006b38:	5d97      	ldrb	r7, [r2, r6]
 8006b3a:	2bff      	cmp	r3, #255	; 0xff
 8006b3c:	d0df      	beq.n	8006afe <d_print_comp+0x2362>
 8006b3e:	001a      	movs	r2, r3
 8006b40:	3301      	adds	r3, #1
 8006b42:	e7ed      	b.n	8006b20 <d_print_comp+0x2384>
 8006b44:	2700      	movs	r7, #0
 8006b46:	f7fe fec6 	bl	80058d6 <d_print_comp+0x113a>
 8006b4a:	465b      	mov	r3, fp
 8006b4c:	686a      	ldr	r2, [r5, #4]
 8006b4e:	685b      	ldr	r3, [r3, #4]
 8006b50:	f7fd fed7 	bl	8004902 <d_print_comp+0x166>
 8006b54:	68ab      	ldr	r3, [r5, #8]
 8006b56:	1c5a      	adds	r2, r3, #1
 8006b58:	ab08      	add	r3, sp, #32
 8006b5a:	469a      	mov	sl, r3
 8006b5c:	4922      	ldr	r1, [pc, #136]	; (8006be8 <d_print_comp+0x244c>)
 8006b5e:	0018      	movs	r0, r3
 8006b60:	f015 fd5e 	bl	801c620 <sprintf>
 8006b64:	4650      	mov	r0, sl
 8006b66:	f002 fdcb 	bl	8009700 <strlen>
 8006b6a:	4681      	mov	r9, r0
 8006b6c:	2800      	cmp	r0, #0
 8006b6e:	d02b      	beq.n	8006bc8 <d_print_comp+0x242c>
 8006b70:	2284      	movs	r2, #132	; 0x84
 8006b72:	4643      	mov	r3, r8
 8006b74:	0052      	lsls	r2, r2, #1
 8006b76:	58e3      	ldr	r3, [r4, r3]
 8006b78:	2600      	movs	r6, #0
 8006b7a:	4690      	mov	r8, r2
 8006b7c:	e01d      	b.n	8006bba <d_print_comp+0x241e>
 8006b7e:	2200      	movs	r2, #0
 8006b80:	54e2      	strb	r2, [r4, r3]
 8006b82:	2386      	movs	r3, #134	; 0x86
 8006b84:	005b      	lsls	r3, r3, #1
 8006b86:	58e3      	ldr	r3, [r4, r3]
 8006b88:	001a      	movs	r2, r3
 8006b8a:	9300      	str	r3, [sp, #0]
 8006b8c:	4643      	mov	r3, r8
 8006b8e:	21ff      	movs	r1, #255	; 0xff
 8006b90:	58e3      	ldr	r3, [r4, r3]
 8006b92:	0020      	movs	r0, r4
 8006b94:	f002 fb34 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8006b98:	2292      	movs	r2, #146	; 0x92
 8006b9a:	0052      	lsls	r2, r2, #1
 8006b9c:	58a3      	ldr	r3, [r4, r2]
 8006b9e:	3301      	adds	r3, #1
 8006ba0:	50a3      	str	r3, [r4, r2]
 8006ba2:	2301      	movs	r3, #1
 8006ba4:	2200      	movs	r2, #0
 8006ba6:	2180      	movs	r1, #128	; 0x80
 8006ba8:	0049      	lsls	r1, r1, #1
 8006baa:	5063      	str	r3, [r4, r1]
 8006bac:	54a7      	strb	r7, [r4, r2]
 8006bae:	2282      	movs	r2, #130	; 0x82
 8006bb0:	3601      	adds	r6, #1
 8006bb2:	0052      	lsls	r2, r2, #1
 8006bb4:	54a7      	strb	r7, [r4, r2]
 8006bb6:	45b1      	cmp	r9, r6
 8006bb8:	d006      	beq.n	8006bc8 <d_print_comp+0x242c>
 8006bba:	4652      	mov	r2, sl
 8006bbc:	5d97      	ldrb	r7, [r2, r6]
 8006bbe:	2bff      	cmp	r3, #255	; 0xff
 8006bc0:	d0dd      	beq.n	8006b7e <d_print_comp+0x23e2>
 8006bc2:	001a      	movs	r2, r3
 8006bc4:	3301      	adds	r3, #1
 8006bc6:	e7ee      	b.n	8006ba6 <d_print_comp+0x240a>
 8006bc8:	465b      	mov	r3, fp
 8006bca:	686a      	ldr	r2, [r5, #4]
 8006bcc:	685b      	ldr	r3, [r3, #4]
 8006bce:	f7fd fe98 	bl	8004902 <d_print_comp+0x166>
 8006bd2:	464d      	mov	r5, r9
 8006bd4:	465b      	mov	r3, fp
 8006bd6:	686a      	ldr	r2, [r5, #4]
 8006bd8:	685b      	ldr	r3, [r3, #4]
 8006bda:	f7fd fe92 	bl	8004902 <d_print_comp+0x166>
 8006bde:	46c0      	nop			; (mov r8, r8)
 8006be0:	08026fe8 	.word	0x08026fe8
 8006be4:	08026f68 	.word	0x08026f68
 8006be8:	08026d94 	.word	0x08026d94
 8006bec:	08026e08 	.word	0x08026e08
 8006bf0:	465b      	mov	r3, fp
 8006bf2:	686a      	ldr	r2, [r5, #4]
 8006bf4:	685b      	ldr	r3, [r3, #4]
 8006bf6:	f7fd fe84 	bl	8004902 <d_print_comp+0x166>
 8006bfa:	465b      	mov	r3, fp
 8006bfc:	686a      	ldr	r2, [r5, #4]
 8006bfe:	685b      	ldr	r3, [r3, #4]
 8006c00:	f7fd fe7f 	bl	8004902 <d_print_comp+0x166>
 8006c04:	4ad6      	ldr	r2, [pc, #856]	; (8006f60 <d_print_comp+0x27c4>)
 8006c06:	2380      	movs	r3, #128	; 0x80
 8006c08:	4691      	mov	r9, r2
 8006c0a:	2286      	movs	r2, #134	; 0x86
 8006c0c:	005b      	lsls	r3, r3, #1
 8006c0e:	0052      	lsls	r2, r2, #1
 8006c10:	58e3      	ldr	r3, [r4, r3]
 8006c12:	2700      	movs	r7, #0
 8006c14:	4692      	mov	sl, r2
 8006c16:	46a8      	mov	r8, r5
 8006c18:	e01d      	b.n	8006c56 <d_print_comp+0x24ba>
 8006c1a:	2200      	movs	r2, #0
 8006c1c:	54e2      	strb	r2, [r4, r3]
 8006c1e:	2384      	movs	r3, #132	; 0x84
 8006c20:	005b      	lsls	r3, r3, #1
 8006c22:	58e3      	ldr	r3, [r4, r3]
 8006c24:	9300      	str	r3, [sp, #0]
 8006c26:	4653      	mov	r3, sl
 8006c28:	21ff      	movs	r1, #255	; 0xff
 8006c2a:	58e2      	ldr	r2, [r4, r3]
 8006c2c:	0020      	movs	r0, r4
 8006c2e:	9b00      	ldr	r3, [sp, #0]
 8006c30:	f002 fae6 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8006c34:	2292      	movs	r2, #146	; 0x92
 8006c36:	0052      	lsls	r2, r2, #1
 8006c38:	58a3      	ldr	r3, [r4, r2]
 8006c3a:	3301      	adds	r3, #1
 8006c3c:	50a3      	str	r3, [r4, r2]
 8006c3e:	2301      	movs	r3, #1
 8006c40:	2200      	movs	r2, #0
 8006c42:	2180      	movs	r1, #128	; 0x80
 8006c44:	0049      	lsls	r1, r1, #1
 8006c46:	5063      	str	r3, [r4, r1]
 8006c48:	54a5      	strb	r5, [r4, r2]
 8006c4a:	2282      	movs	r2, #130	; 0x82
 8006c4c:	0052      	lsls	r2, r2, #1
 8006c4e:	54a5      	strb	r5, [r4, r2]
 8006c50:	2f01      	cmp	r7, #1
 8006c52:	d007      	beq.n	8006c64 <d_print_comp+0x24c8>
 8006c54:	2701      	movs	r7, #1
 8006c56:	464a      	mov	r2, r9
 8006c58:	5dd5      	ldrb	r5, [r2, r7]
 8006c5a:	2bff      	cmp	r3, #255	; 0xff
 8006c5c:	d0dd      	beq.n	8006c1a <d_print_comp+0x247e>
 8006c5e:	001a      	movs	r2, r3
 8006c60:	3301      	adds	r3, #1
 8006c62:	e7ee      	b.n	8006c42 <d_print_comp+0x24a6>
 8006c64:	4645      	mov	r5, r8
 8006c66:	f7ff f8ad 	bl	8005dc4 <d_print_comp+0x1628>
 8006c6a:	4642      	mov	r2, r8
 8006c6c:	1c59      	adds	r1, r3, #1
 8006c6e:	50a1      	str	r1, [r4, r2]
 8006c70:	2229      	movs	r2, #41	; 0x29
 8006c72:	54e2      	strb	r2, [r4, r3]
 8006c74:	464b      	mov	r3, r9
 8006c76:	54e2      	strb	r2, [r4, r3]
 8006c78:	782b      	ldrb	r3, [r5, #0]
 8006c7a:	2b3d      	cmp	r3, #61	; 0x3d
 8006c7c:	d001      	beq.n	8006c82 <d_print_comp+0x24e6>
 8006c7e:	f7fe f96c 	bl	8004f5a <d_print_comp+0x7be>
 8006c82:	29ff      	cmp	r1, #255	; 0xff
 8006c84:	d112      	bne.n	8006cac <d_print_comp+0x2510>
 8006c86:	2300      	movs	r3, #0
 8006c88:	5463      	strb	r3, [r4, r1]
 8006c8a:	4699      	mov	r9, r3
 8006c8c:	2384      	movs	r3, #132	; 0x84
 8006c8e:	32e3      	adds	r2, #227	; 0xe3
 8006c90:	005b      	lsls	r3, r3, #1
 8006c92:	58e3      	ldr	r3, [r4, r3]
 8006c94:	58a2      	ldr	r2, [r4, r2]
 8006c96:	0020      	movs	r0, r4
 8006c98:	f002 fab2 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8006c9c:	4643      	mov	r3, r8
 8006c9e:	464a      	mov	r2, r9
 8006ca0:	50e2      	str	r2, [r4, r3]
 8006ca2:	3225      	adds	r2, #37	; 0x25
 8006ca4:	32ff      	adds	r2, #255	; 0xff
 8006ca6:	58a3      	ldr	r3, [r4, r2]
 8006ca8:	3301      	adds	r3, #1
 8006caa:	50a3      	str	r3, [r4, r2]
 8006cac:	2380      	movs	r3, #128	; 0x80
 8006cae:	005b      	lsls	r3, r3, #1
 8006cb0:	58e2      	ldr	r2, [r4, r3]
 8006cb2:	1c51      	adds	r1, r2, #1
 8006cb4:	50e1      	str	r1, [r4, r3]
 8006cb6:	3bd3      	subs	r3, #211	; 0xd3
 8006cb8:	54a3      	strb	r3, [r4, r2]
 8006cba:	2282      	movs	r2, #130	; 0x82
 8006cbc:	0052      	lsls	r2, r2, #1
 8006cbe:	54a3      	strb	r3, [r4, r2]
 8006cc0:	f7fe f94b 	bl	8004f5a <d_print_comp+0x7be>
 8006cc4:	4643      	mov	r3, r8
 8006cc6:	689b      	ldr	r3, [r3, #8]
 8006cc8:	681b      	ldr	r3, [r3, #0]
 8006cca:	49a6      	ldr	r1, [pc, #664]	; (8006f64 <d_print_comp+0x27c8>)
 8006ccc:	0018      	movs	r0, r3
 8006cce:	4699      	mov	r9, r3
 8006cd0:	f002 fb9a 	bl	8009408 <strcmp>
 8006cd4:	783b      	ldrb	r3, [r7, #0]
 8006cd6:	2800      	cmp	r0, #0
 8006cd8:	d103      	bne.n	8006ce2 <d_print_comp+0x2546>
 8006cda:	2b03      	cmp	r3, #3
 8006cdc:	d101      	bne.n	8006ce2 <d_print_comp+0x2546>
 8006cde:	f000 fd41 	bl	8007764 <d_print_comp+0x2fc8>
 8006ce2:	2b38      	cmp	r3, #56	; 0x38
 8006ce4:	d101      	bne.n	8006cea <d_print_comp+0x254e>
 8006ce6:	f000 fe28 	bl	800793a <d_print_comp+0x319e>
 8006cea:	499f      	ldr	r1, [pc, #636]	; (8006f68 <d_print_comp+0x27cc>)
 8006cec:	4648      	mov	r0, r9
 8006cee:	f002 fb8b 	bl	8009408 <strcmp>
 8006cf2:	4682      	mov	sl, r0
 8006cf4:	2800      	cmp	r0, #0
 8006cf6:	d101      	bne.n	8006cfc <d_print_comp+0x2560>
 8006cf8:	f000 fe06 	bl	8007908 <d_print_comp+0x316c>
 8006cfc:	499b      	ldr	r1, [pc, #620]	; (8006f6c <d_print_comp+0x27d0>)
 8006cfe:	4648      	mov	r0, r9
 8006d00:	f002 fb82 	bl	8009408 <strcmp>
 8006d04:	2800      	cmp	r0, #0
 8006d06:	d101      	bne.n	8006d0c <d_print_comp+0x2570>
 8006d08:	f000 fc44 	bl	8007594 <d_print_comp+0x2df8>
 8006d0c:	0031      	movs	r1, r6
 8006d0e:	0020      	movs	r0, r4
 8006d10:	4642      	mov	r2, r8
 8006d12:	f001 fe47 	bl	80089a4 <d_print_expr_op>
 8006d16:	4996      	ldr	r1, [pc, #600]	; (8006f70 <d_print_comp+0x27d4>)
 8006d18:	4648      	mov	r0, r9
 8006d1a:	f002 fb75 	bl	8009408 <strcmp>
 8006d1e:	2800      	cmp	r0, #0
 8006d20:	d101      	bne.n	8006d26 <d_print_comp+0x258a>
 8006d22:	f000 fc2d 	bl	8007580 <d_print_comp+0x2de4>
 8006d26:	4993      	ldr	r1, [pc, #588]	; (8006f74 <d_print_comp+0x27d8>)
 8006d28:	4648      	mov	r0, r9
 8006d2a:	f002 fb6d 	bl	8009408 <strcmp>
 8006d2e:	4680      	mov	r8, r0
 8006d30:	1e03      	subs	r3, r0, #0
 8006d32:	d001      	beq.n	8006d38 <d_print_comp+0x259c>
 8006d34:	f7fe fb90 	bl	8005458 <d_print_comp+0xcbc>
 8006d38:	3301      	adds	r3, #1
 8006d3a:	33ff      	adds	r3, #255	; 0xff
 8006d3c:	58e1      	ldr	r1, [r4, r3]
 8006d3e:	4699      	mov	r9, r3
 8006d40:	29ff      	cmp	r1, #255	; 0xff
 8006d42:	d111      	bne.n	8006d68 <d_print_comp+0x25cc>
 8006d44:	2384      	movs	r3, #132	; 0x84
 8006d46:	2286      	movs	r2, #134	; 0x86
 8006d48:	5460      	strb	r0, [r4, r1]
 8006d4a:	005b      	lsls	r3, r3, #1
 8006d4c:	0052      	lsls	r2, r2, #1
 8006d4e:	58e3      	ldr	r3, [r4, r3]
 8006d50:	58a2      	ldr	r2, [r4, r2]
 8006d52:	0020      	movs	r0, r4
 8006d54:	f002 fa54 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8006d58:	464b      	mov	r3, r9
 8006d5a:	4642      	mov	r2, r8
 8006d5c:	50e2      	str	r2, [r4, r3]
 8006d5e:	2292      	movs	r2, #146	; 0x92
 8006d60:	0052      	lsls	r2, r2, #1
 8006d62:	58a3      	ldr	r3, [r4, r2]
 8006d64:	3301      	adds	r3, #1
 8006d66:	50a3      	str	r3, [r4, r2]
 8006d68:	2380      	movs	r3, #128	; 0x80
 8006d6a:	005b      	lsls	r3, r3, #1
 8006d6c:	4698      	mov	r8, r3
 8006d6e:	4641      	mov	r1, r8
 8006d70:	58e2      	ldr	r2, [r4, r3]
 8006d72:	1c53      	adds	r3, r2, #1
 8006d74:	5063      	str	r3, [r4, r1]
 8006d76:	2328      	movs	r3, #40	; 0x28
 8006d78:	54a3      	strb	r3, [r4, r2]
 8006d7a:	2282      	movs	r2, #130	; 0x82
 8006d7c:	0052      	lsls	r2, r2, #1
 8006d7e:	54a3      	strb	r3, [r4, r2]
 8006d80:	0031      	movs	r1, r6
 8006d82:	003a      	movs	r2, r7
 8006d84:	0020      	movs	r0, r4
 8006d86:	f7fd fd09 	bl	800479c <d_print_comp>
 8006d8a:	4643      	mov	r3, r8
 8006d8c:	58e1      	ldr	r1, [r4, r3]
 8006d8e:	29ff      	cmp	r1, #255	; 0xff
 8006d90:	d110      	bne.n	8006db4 <d_print_comp+0x2618>
 8006d92:	2600      	movs	r6, #0
 8006d94:	2286      	movs	r2, #134	; 0x86
 8006d96:	5466      	strb	r6, [r4, r1]
 8006d98:	3308      	adds	r3, #8
 8006d9a:	0052      	lsls	r2, r2, #1
 8006d9c:	58e3      	ldr	r3, [r4, r3]
 8006d9e:	58a2      	ldr	r2, [r4, r2]
 8006da0:	0020      	movs	r0, r4
 8006da2:	f002 fa2d 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8006da6:	2292      	movs	r2, #146	; 0x92
 8006da8:	4643      	mov	r3, r8
 8006daa:	0052      	lsls	r2, r2, #1
 8006dac:	50e6      	str	r6, [r4, r3]
 8006dae:	58a3      	ldr	r3, [r4, r2]
 8006db0:	3301      	adds	r3, #1
 8006db2:	50a3      	str	r3, [r4, r2]
 8006db4:	2380      	movs	r3, #128	; 0x80
 8006db6:	005b      	lsls	r3, r3, #1
 8006db8:	58e2      	ldr	r2, [r4, r3]
 8006dba:	1c51      	adds	r1, r2, #1
 8006dbc:	50e1      	str	r1, [r4, r3]
 8006dbe:	3bd7      	subs	r3, #215	; 0xd7
 8006dc0:	54a3      	strb	r3, [r4, r2]
 8006dc2:	2282      	movs	r2, #130	; 0x82
 8006dc4:	0052      	lsls	r2, r2, #1
 8006dc6:	54a3      	strb	r3, [r4, r2]
 8006dc8:	465b      	mov	r3, fp
 8006dca:	686a      	ldr	r2, [r5, #4]
 8006dcc:	685b      	ldr	r3, [r3, #4]
 8006dce:	f7fd fd98 	bl	8004902 <d_print_comp+0x166>
 8006dd2:	002a      	movs	r2, r5
 8006dd4:	4641      	mov	r1, r8
 8006dd6:	320c      	adds	r2, #12
 8006dd8:	0020      	movs	r0, r4
 8006dda:	f001 fa4f 	bl	800827c <d_print_function_type.isra.15>
 8006dde:	68aa      	ldr	r2, [r5, #8]
 8006de0:	2a00      	cmp	r2, #0
 8006de2:	d101      	bne.n	8006de8 <d_print_comp+0x264c>
 8006de4:	f000 fcb9 	bl	800775a <d_print_comp+0x2fbe>
 8006de8:	4641      	mov	r1, r8
 8006dea:	0020      	movs	r0, r4
 8006dec:	f7fd fcd6 	bl	800479c <d_print_comp>
 8006df0:	465b      	mov	r3, fp
 8006df2:	686a      	ldr	r2, [r5, #4]
 8006df4:	685b      	ldr	r3, [r3, #4]
 8006df6:	f7fd fd84 	bl	8004902 <d_print_comp+0x166>
 8006dfa:	37f8      	adds	r7, #248	; 0xf8
 8006dfc:	59e1      	ldr	r1, [r4, r7]
 8006dfe:	29ff      	cmp	r1, #255	; 0xff
 8006e00:	d112      	bne.n	8006e28 <d_print_comp+0x268c>
 8006e02:	2300      	movs	r3, #0
 8006e04:	2286      	movs	r2, #134	; 0x86
 8006e06:	5463      	strb	r3, [r4, r1]
 8006e08:	4698      	mov	r8, r3
 8006e0a:	2384      	movs	r3, #132	; 0x84
 8006e0c:	0052      	lsls	r2, r2, #1
 8006e0e:	005b      	lsls	r3, r3, #1
 8006e10:	58e3      	ldr	r3, [r4, r3]
 8006e12:	58a2      	ldr	r2, [r4, r2]
 8006e14:	0020      	movs	r0, r4
 8006e16:	f002 f9f3 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8006e1a:	2292      	movs	r2, #146	; 0x92
 8006e1c:	4643      	mov	r3, r8
 8006e1e:	0052      	lsls	r2, r2, #1
 8006e20:	51e3      	str	r3, [r4, r7]
 8006e22:	58a3      	ldr	r3, [r4, r2]
 8006e24:	3301      	adds	r3, #1
 8006e26:	50a3      	str	r3, [r4, r2]
 8006e28:	2780      	movs	r7, #128	; 0x80
 8006e2a:	007f      	lsls	r7, r7, #1
 8006e2c:	59e2      	ldr	r2, [r4, r7]
 8006e2e:	1c53      	adds	r3, r2, #1
 8006e30:	51e3      	str	r3, [r4, r7]
 8006e32:	235b      	movs	r3, #91	; 0x5b
 8006e34:	54a3      	strb	r3, [r4, r2]
 8006e36:	2282      	movs	r2, #130	; 0x82
 8006e38:	0052      	lsls	r2, r2, #1
 8006e3a:	54a3      	strb	r3, [r4, r2]
 8006e3c:	0031      	movs	r1, r6
 8006e3e:	68ea      	ldr	r2, [r5, #12]
 8006e40:	0020      	movs	r0, r4
 8006e42:	f7fd fcab 	bl	800479c <d_print_comp>
 8006e46:	59e1      	ldr	r1, [r4, r7]
 8006e48:	29ff      	cmp	r1, #255	; 0xff
 8006e4a:	d110      	bne.n	8006e6e <d_print_comp+0x26d2>
 8006e4c:	2600      	movs	r6, #0
 8006e4e:	2384      	movs	r3, #132	; 0x84
 8006e50:	2286      	movs	r2, #134	; 0x86
 8006e52:	5466      	strb	r6, [r4, r1]
 8006e54:	005b      	lsls	r3, r3, #1
 8006e56:	0052      	lsls	r2, r2, #1
 8006e58:	58e3      	ldr	r3, [r4, r3]
 8006e5a:	58a2      	ldr	r2, [r4, r2]
 8006e5c:	0020      	movs	r0, r4
 8006e5e:	f002 f9cf 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8006e62:	2292      	movs	r2, #146	; 0x92
 8006e64:	0052      	lsls	r2, r2, #1
 8006e66:	58a3      	ldr	r3, [r4, r2]
 8006e68:	3301      	adds	r3, #1
 8006e6a:	51e6      	str	r6, [r4, r7]
 8006e6c:	50a3      	str	r3, [r4, r2]
 8006e6e:	2380      	movs	r3, #128	; 0x80
 8006e70:	005b      	lsls	r3, r3, #1
 8006e72:	58e2      	ldr	r2, [r4, r3]
 8006e74:	1c51      	adds	r1, r2, #1
 8006e76:	50e1      	str	r1, [r4, r3]
 8006e78:	3ba3      	subs	r3, #163	; 0xa3
 8006e7a:	54a3      	strb	r3, [r4, r2]
 8006e7c:	2282      	movs	r2, #130	; 0x82
 8006e7e:	0052      	lsls	r2, r2, #1
 8006e80:	54a3      	strb	r3, [r4, r2]
 8006e82:	465b      	mov	r3, fp
 8006e84:	686a      	ldr	r2, [r5, #4]
 8006e86:	685b      	ldr	r3, [r3, #4]
 8006e88:	f7fd fd3b 	bl	8004902 <d_print_comp+0x166>
 8006e8c:	68d2      	ldr	r2, [r2, #12]
 8006e8e:	7812      	ldrb	r2, [r2, #0]
 8006e90:	2a3b      	cmp	r2, #59	; 0x3b
 8006e92:	d001      	beq.n	8006e98 <d_print_comp+0x26fc>
 8006e94:	f7fe fa5f 	bl	8005356 <d_print_comp+0xbba>
 8006e98:	002b      	movs	r3, r5
 8006e9a:	68aa      	ldr	r2, [r5, #8]
 8006e9c:	330c      	adds	r3, #12
 8006e9e:	0031      	movs	r1, r6
 8006ea0:	0020      	movs	r0, r4
 8006ea2:	f001 fe1d 	bl	8008ae0 <d_maybe_print_fold_expression.isra.20>
 8006ea6:	4680      	mov	r8, r0
 8006ea8:	2800      	cmp	r0, #0
 8006eaa:	d001      	beq.n	8006eb0 <d_print_comp+0x2714>
 8006eac:	f000 fdb3 	bl	8007a16 <d_print_comp+0x327a>
 8006eb0:	68ab      	ldr	r3, [r5, #8]
 8006eb2:	469a      	mov	sl, r3
 8006eb4:	68eb      	ldr	r3, [r5, #12]
 8006eb6:	689a      	ldr	r2, [r3, #8]
 8006eb8:	68db      	ldr	r3, [r3, #12]
 8006eba:	4691      	mov	r9, r2
 8006ebc:	68df      	ldr	r7, [r3, #12]
 8006ebe:	689a      	ldr	r2, [r3, #8]
 8006ec0:	4653      	mov	r3, sl
 8006ec2:	689b      	ldr	r3, [r3, #8]
 8006ec4:	492c      	ldr	r1, [pc, #176]	; (8006f78 <d_print_comp+0x27dc>)
 8006ec6:	6818      	ldr	r0, [r3, #0]
 8006ec8:	9200      	str	r2, [sp, #0]
 8006eca:	f002 fa9d 	bl	8009408 <strcmp>
 8006ece:	2800      	cmp	r0, #0
 8006ed0:	d101      	bne.n	8006ed6 <d_print_comp+0x273a>
 8006ed2:	f000 fd82 	bl	80079da <d_print_comp+0x323e>
 8006ed6:	2204      	movs	r2, #4
 8006ed8:	4928      	ldr	r1, [pc, #160]	; (8006f7c <d_print_comp+0x27e0>)
 8006eda:	0020      	movs	r0, r4
 8006edc:	f7fb f90c 	bl	80020f8 <d_append_buffer>
 8006ee0:	464b      	mov	r3, r9
 8006ee2:	689b      	ldr	r3, [r3, #8]
 8006ee4:	2b00      	cmp	r3, #0
 8006ee6:	d027      	beq.n	8006f38 <d_print_comp+0x279c>
 8006ee8:	464a      	mov	r2, r9
 8006eea:	0031      	movs	r1, r6
 8006eec:	0020      	movs	r0, r4
 8006eee:	f001 fd9d 	bl	8008a2c <d_print_subexpr>
 8006ef2:	2380      	movs	r3, #128	; 0x80
 8006ef4:	005b      	lsls	r3, r3, #1
 8006ef6:	58e1      	ldr	r1, [r4, r3]
 8006ef8:	4699      	mov	r9, r3
 8006efa:	29ff      	cmp	r1, #255	; 0xff
 8006efc:	d112      	bne.n	8006f24 <d_print_comp+0x2788>
 8006efe:	4643      	mov	r3, r8
 8006f00:	2286      	movs	r2, #134	; 0x86
 8006f02:	5463      	strb	r3, [r4, r1]
 8006f04:	2384      	movs	r3, #132	; 0x84
 8006f06:	0052      	lsls	r2, r2, #1
 8006f08:	005b      	lsls	r3, r3, #1
 8006f0a:	58e3      	ldr	r3, [r4, r3]
 8006f0c:	58a2      	ldr	r2, [r4, r2]
 8006f0e:	0020      	movs	r0, r4
 8006f10:	f002 f976 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8006f14:	464b      	mov	r3, r9
 8006f16:	4642      	mov	r2, r8
 8006f18:	50e2      	str	r2, [r4, r3]
 8006f1a:	2292      	movs	r2, #146	; 0x92
 8006f1c:	0052      	lsls	r2, r2, #1
 8006f1e:	58a3      	ldr	r3, [r4, r2]
 8006f20:	3301      	adds	r3, #1
 8006f22:	50a3      	str	r3, [r4, r2]
 8006f24:	2380      	movs	r3, #128	; 0x80
 8006f26:	005b      	lsls	r3, r3, #1
 8006f28:	58e2      	ldr	r2, [r4, r3]
 8006f2a:	1c51      	adds	r1, r2, #1
 8006f2c:	50e1      	str	r1, [r4, r3]
 8006f2e:	3be0      	subs	r3, #224	; 0xe0
 8006f30:	54a3      	strb	r3, [r4, r2]
 8006f32:	2282      	movs	r2, #130	; 0x82
 8006f34:	0052      	lsls	r2, r2, #1
 8006f36:	54a3      	strb	r3, [r4, r2]
 8006f38:	9a00      	ldr	r2, [sp, #0]
 8006f3a:	0031      	movs	r1, r6
 8006f3c:	0020      	movs	r0, r4
 8006f3e:	f7fd fc2d 	bl	800479c <d_print_comp>
 8006f42:	2f00      	cmp	r7, #0
 8006f44:	d101      	bne.n	8006f4a <d_print_comp+0x27ae>
 8006f46:	f000 fd38 	bl	80079ba <d_print_comp+0x321e>
 8006f4a:	003a      	movs	r2, r7
 8006f4c:	0031      	movs	r1, r6
 8006f4e:	0020      	movs	r0, r4
 8006f50:	f001 fd6c 	bl	8008a2c <d_print_subexpr>
 8006f54:	465b      	mov	r3, fp
 8006f56:	686a      	ldr	r2, [r5, #4]
 8006f58:	685b      	ldr	r3, [r3, #4]
 8006f5a:	f7fd fcd2 	bl	8004902 <d_print_comp+0x166>
 8006f5e:	46c0      	nop			; (mov r8, r8)
 8006f60:	08026de4 	.word	0x08026de4
 8006f64:	08026f8c 	.word	0x08026f8c
 8006f68:	08026f90 	.word	0x08026f90
 8006f6c:	08026d98 	.word	0x08026d98
 8006f70:	08026f94 	.word	0x08026f94
 8006f74:	080272b4 	.word	0x080272b4
 8006f78:	08026da8 	.word	0x08026da8
 8006f7c:	08026fa4 	.word	0x08026fa4
 8006f80:	68aa      	ldr	r2, [r5, #8]
 8006f82:	6893      	ldr	r3, [r2, #8]
 8006f84:	681b      	ldr	r3, [r3, #0]
 8006f86:	7859      	ldrb	r1, [r3, #1]
 8006f88:	2963      	cmp	r1, #99	; 0x63
 8006f8a:	d001      	beq.n	8006f90 <d_print_comp+0x27f4>
 8006f8c:	f7fd fc3b 	bl	8004806 <d_print_comp+0x6a>
 8006f90:	7818      	ldrb	r0, [r3, #0]
 8006f92:	0001      	movs	r1, r0
 8006f94:	2300      	movs	r3, #0
 8006f96:	2701      	movs	r7, #1
 8006f98:	3972      	subs	r1, #114	; 0x72
 8006f9a:	0609      	lsls	r1, r1, #24
 8006f9c:	0e09      	lsrs	r1, r1, #24
 8006f9e:	428f      	cmp	r7, r1
 8006fa0:	415b      	adcs	r3, r3
 8006fa2:	2b00      	cmp	r3, #0
 8006fa4:	d104      	bne.n	8006fb0 <d_print_comp+0x2814>
 8006fa6:	3863      	subs	r0, #99	; 0x63
 8006fa8:	42b8      	cmp	r0, r7
 8006faa:	d901      	bls.n	8006fb0 <d_print_comp+0x2814>
 8006fac:	f7fd fc2b 	bl	8004806 <d_print_comp+0x6a>
 8006fb0:	2780      	movs	r7, #128	; 0x80
 8006fb2:	0031      	movs	r1, r6
 8006fb4:	0020      	movs	r0, r4
 8006fb6:	007f      	lsls	r7, r7, #1
 8006fb8:	f001 fcf4 	bl	80089a4 <d_print_expr_op>
 8006fbc:	59e1      	ldr	r1, [r4, r7]
 8006fbe:	29ff      	cmp	r1, #255	; 0xff
 8006fc0:	d112      	bne.n	8006fe8 <d_print_comp+0x284c>
 8006fc2:	2300      	movs	r3, #0
 8006fc4:	2286      	movs	r2, #134	; 0x86
 8006fc6:	5463      	strb	r3, [r4, r1]
 8006fc8:	4698      	mov	r8, r3
 8006fca:	2384      	movs	r3, #132	; 0x84
 8006fcc:	0052      	lsls	r2, r2, #1
 8006fce:	005b      	lsls	r3, r3, #1
 8006fd0:	58e3      	ldr	r3, [r4, r3]
 8006fd2:	58a2      	ldr	r2, [r4, r2]
 8006fd4:	0020      	movs	r0, r4
 8006fd6:	f002 f913 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8006fda:	2292      	movs	r2, #146	; 0x92
 8006fdc:	4643      	mov	r3, r8
 8006fde:	0052      	lsls	r2, r2, #1
 8006fe0:	51e3      	str	r3, [r4, r7]
 8006fe2:	58a3      	ldr	r3, [r4, r2]
 8006fe4:	3301      	adds	r3, #1
 8006fe6:	50a3      	str	r3, [r4, r2]
 8006fe8:	2780      	movs	r7, #128	; 0x80
 8006fea:	007f      	lsls	r7, r7, #1
 8006fec:	59e2      	ldr	r2, [r4, r7]
 8006fee:	1c53      	adds	r3, r2, #1
 8006ff0:	51e3      	str	r3, [r4, r7]
 8006ff2:	233c      	movs	r3, #60	; 0x3c
 8006ff4:	54a3      	strb	r3, [r4, r2]
 8006ff6:	2282      	movs	r2, #130	; 0x82
 8006ff8:	0052      	lsls	r2, r2, #1
 8006ffa:	54a3      	strb	r3, [r4, r2]
 8006ffc:	68eb      	ldr	r3, [r5, #12]
 8006ffe:	0031      	movs	r1, r6
 8007000:	689a      	ldr	r2, [r3, #8]
 8007002:	0020      	movs	r0, r4
 8007004:	f7fd fbca 	bl	800479c <d_print_comp>
 8007008:	2202      	movs	r2, #2
 800700a:	49c7      	ldr	r1, [pc, #796]	; (8007328 <d_print_comp+0x2b8c>)
 800700c:	0020      	movs	r0, r4
 800700e:	f7fb f873 	bl	80020f8 <d_append_buffer>
 8007012:	68eb      	ldr	r3, [r5, #12]
 8007014:	0031      	movs	r1, r6
 8007016:	68da      	ldr	r2, [r3, #12]
 8007018:	0020      	movs	r0, r4
 800701a:	f7fd fbbf 	bl	800479c <d_print_comp>
 800701e:	59e1      	ldr	r1, [r4, r7]
 8007020:	29ff      	cmp	r1, #255	; 0xff
 8007022:	d110      	bne.n	8007046 <d_print_comp+0x28aa>
 8007024:	2600      	movs	r6, #0
 8007026:	2384      	movs	r3, #132	; 0x84
 8007028:	2286      	movs	r2, #134	; 0x86
 800702a:	5466      	strb	r6, [r4, r1]
 800702c:	005b      	lsls	r3, r3, #1
 800702e:	0052      	lsls	r2, r2, #1
 8007030:	58e3      	ldr	r3, [r4, r3]
 8007032:	58a2      	ldr	r2, [r4, r2]
 8007034:	0020      	movs	r0, r4
 8007036:	f002 f8e3 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 800703a:	2292      	movs	r2, #146	; 0x92
 800703c:	0052      	lsls	r2, r2, #1
 800703e:	58a3      	ldr	r3, [r4, r2]
 8007040:	3301      	adds	r3, #1
 8007042:	51e6      	str	r6, [r4, r7]
 8007044:	50a3      	str	r3, [r4, r2]
 8007046:	2380      	movs	r3, #128	; 0x80
 8007048:	005b      	lsls	r3, r3, #1
 800704a:	58e2      	ldr	r2, [r4, r3]
 800704c:	1c51      	adds	r1, r2, #1
 800704e:	50e1      	str	r1, [r4, r3]
 8007050:	3bd7      	subs	r3, #215	; 0xd7
 8007052:	54a3      	strb	r3, [r4, r2]
 8007054:	2282      	movs	r2, #130	; 0x82
 8007056:	0052      	lsls	r2, r2, #1
 8007058:	54a3      	strb	r3, [r4, r2]
 800705a:	465b      	mov	r3, fp
 800705c:	686a      	ldr	r2, [r5, #4]
 800705e:	685b      	ldr	r3, [r3, #4]
 8007060:	f7fd fc4f 	bl	8004902 <d_print_comp+0x166>
 8007064:	59e1      	ldr	r1, [r4, r7]
 8007066:	29ff      	cmp	r1, #255	; 0xff
 8007068:	d10f      	bne.n	800708a <d_print_comp+0x28ee>
 800706a:	2600      	movs	r6, #0
 800706c:	2286      	movs	r2, #134	; 0x86
 800706e:	5466      	strb	r6, [r4, r1]
 8007070:	33ca      	adds	r3, #202	; 0xca
 8007072:	0052      	lsls	r2, r2, #1
 8007074:	58e3      	ldr	r3, [r4, r3]
 8007076:	58a2      	ldr	r2, [r4, r2]
 8007078:	0020      	movs	r0, r4
 800707a:	f002 f8c1 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 800707e:	2292      	movs	r2, #146	; 0x92
 8007080:	0052      	lsls	r2, r2, #1
 8007082:	58a3      	ldr	r3, [r4, r2]
 8007084:	3301      	adds	r3, #1
 8007086:	51e6      	str	r6, [r4, r7]
 8007088:	50a3      	str	r3, [r4, r2]
 800708a:	2380      	movs	r3, #128	; 0x80
 800708c:	005b      	lsls	r3, r3, #1
 800708e:	58e2      	ldr	r2, [r4, r3]
 8007090:	1c51      	adds	r1, r2, #1
 8007092:	50e1      	str	r1, [r4, r3]
 8007094:	3be0      	subs	r3, #224	; 0xe0
 8007096:	54a3      	strb	r3, [r4, r2]
 8007098:	2282      	movs	r2, #130	; 0x82
 800709a:	0052      	lsls	r2, r2, #1
 800709c:	54a3      	strb	r3, [r4, r2]
 800709e:	f7fe fdf8 	bl	8005c92 <d_print_comp+0x14f6>
 80070a2:	2780      	movs	r7, #128	; 0x80
 80070a4:	007f      	lsls	r7, r7, #1
 80070a6:	59e1      	ldr	r1, [r4, r7]
 80070a8:	29ff      	cmp	r1, #255	; 0xff
 80070aa:	d112      	bne.n	80070d2 <d_print_comp+0x2936>
 80070ac:	2300      	movs	r3, #0
 80070ae:	2286      	movs	r2, #134	; 0x86
 80070b0:	5463      	strb	r3, [r4, r1]
 80070b2:	469a      	mov	sl, r3
 80070b4:	2384      	movs	r3, #132	; 0x84
 80070b6:	0052      	lsls	r2, r2, #1
 80070b8:	005b      	lsls	r3, r3, #1
 80070ba:	58e3      	ldr	r3, [r4, r3]
 80070bc:	58a2      	ldr	r2, [r4, r2]
 80070be:	0020      	movs	r0, r4
 80070c0:	f002 f89e 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 80070c4:	2292      	movs	r2, #146	; 0x92
 80070c6:	4653      	mov	r3, sl
 80070c8:	0052      	lsls	r2, r2, #1
 80070ca:	51e3      	str	r3, [r4, r7]
 80070cc:	58a3      	ldr	r3, [r4, r2]
 80070ce:	3301      	adds	r3, #1
 80070d0:	50a3      	str	r3, [r4, r2]
 80070d2:	2380      	movs	r3, #128	; 0x80
 80070d4:	005b      	lsls	r3, r3, #1
 80070d6:	58e2      	ldr	r2, [r4, r3]
 80070d8:	1c51      	adds	r1, r2, #1
 80070da:	50e1      	str	r1, [r4, r3]
 80070dc:	3be0      	subs	r3, #224	; 0xe0
 80070de:	54a3      	strb	r3, [r4, r2]
 80070e0:	2282      	movs	r2, #130	; 0x82
 80070e2:	0052      	lsls	r2, r2, #1
 80070e4:	54a3      	strb	r3, [r4, r2]
 80070e6:	f7fe fda6 	bl	8005c36 <d_print_comp+0x149a>
 80070ea:	6892      	ldr	r2, [r2, #8]
 80070ec:	0031      	movs	r1, r6
 80070ee:	0020      	movs	r0, r4
 80070f0:	f7fd fb54 	bl	800479c <d_print_comp>
 80070f4:	23a2      	movs	r3, #162	; 0xa2
 80070f6:	005b      	lsls	r3, r3, #1
 80070f8:	58e3      	ldr	r3, [r4, r3]
 80070fa:	2b00      	cmp	r3, #0
 80070fc:	d003      	beq.n	8007106 <d_print_comp+0x296a>
 80070fe:	2388      	movs	r3, #136	; 0x88
 8007100:	9a08      	ldr	r2, [sp, #32]
 8007102:	005b      	lsls	r3, r3, #1
 8007104:	50e2      	str	r2, [r4, r3]
 8007106:	2382      	movs	r3, #130	; 0x82
 8007108:	005b      	lsls	r3, r3, #1
 800710a:	5ce3      	ldrb	r3, [r4, r3]
 800710c:	2b3c      	cmp	r3, #60	; 0x3c
 800710e:	d100      	bne.n	8007112 <d_print_comp+0x2976>
 8007110:	e37f      	b.n	8007812 <d_print_comp+0x3076>
 8007112:	2780      	movs	r7, #128	; 0x80
 8007114:	007f      	lsls	r7, r7, #1
 8007116:	59e1      	ldr	r1, [r4, r7]
 8007118:	29ff      	cmp	r1, #255	; 0xff
 800711a:	d112      	bne.n	8007142 <d_print_comp+0x29a6>
 800711c:	2300      	movs	r3, #0
 800711e:	2286      	movs	r2, #134	; 0x86
 8007120:	5463      	strb	r3, [r4, r1]
 8007122:	4698      	mov	r8, r3
 8007124:	2384      	movs	r3, #132	; 0x84
 8007126:	0052      	lsls	r2, r2, #1
 8007128:	005b      	lsls	r3, r3, #1
 800712a:	58e3      	ldr	r3, [r4, r3]
 800712c:	58a2      	ldr	r2, [r4, r2]
 800712e:	0020      	movs	r0, r4
 8007130:	f002 f866 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8007134:	2292      	movs	r2, #146	; 0x92
 8007136:	4643      	mov	r3, r8
 8007138:	0052      	lsls	r2, r2, #1
 800713a:	51e3      	str	r3, [r4, r7]
 800713c:	58a3      	ldr	r3, [r4, r2]
 800713e:	3301      	adds	r3, #1
 8007140:	50a3      	str	r3, [r4, r2]
 8007142:	2780      	movs	r7, #128	; 0x80
 8007144:	007f      	lsls	r7, r7, #1
 8007146:	59e2      	ldr	r2, [r4, r7]
 8007148:	1c53      	adds	r3, r2, #1
 800714a:	51e3      	str	r3, [r4, r7]
 800714c:	233c      	movs	r3, #60	; 0x3c
 800714e:	54a3      	strb	r3, [r4, r2]
 8007150:	2282      	movs	r2, #130	; 0x82
 8007152:	0052      	lsls	r2, r2, #1
 8007154:	4690      	mov	r8, r2
 8007156:	54a3      	strb	r3, [r4, r2]
 8007158:	68ab      	ldr	r3, [r5, #8]
 800715a:	0031      	movs	r1, r6
 800715c:	68da      	ldr	r2, [r3, #12]
 800715e:	0020      	movs	r0, r4
 8007160:	f7fd fb1c 	bl	800479c <d_print_comp>
 8007164:	4643      	mov	r3, r8
 8007166:	5ce3      	ldrb	r3, [r4, r3]
 8007168:	2b3e      	cmp	r3, #62	; 0x3e
 800716a:	d100      	bne.n	800716e <d_print_comp+0x29d2>
 800716c:	e333      	b.n	80077d6 <d_print_comp+0x303a>
 800716e:	2680      	movs	r6, #128	; 0x80
 8007170:	0076      	lsls	r6, r6, #1
 8007172:	59a1      	ldr	r1, [r4, r6]
 8007174:	29ff      	cmp	r1, #255	; 0xff
 8007176:	d110      	bne.n	800719a <d_print_comp+0x29fe>
 8007178:	2700      	movs	r7, #0
 800717a:	2384      	movs	r3, #132	; 0x84
 800717c:	2286      	movs	r2, #134	; 0x86
 800717e:	5467      	strb	r7, [r4, r1]
 8007180:	005b      	lsls	r3, r3, #1
 8007182:	0052      	lsls	r2, r2, #1
 8007184:	58e3      	ldr	r3, [r4, r3]
 8007186:	58a2      	ldr	r2, [r4, r2]
 8007188:	0020      	movs	r0, r4
 800718a:	f002 f839 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 800718e:	2292      	movs	r2, #146	; 0x92
 8007190:	0052      	lsls	r2, r2, #1
 8007192:	58a3      	ldr	r3, [r4, r2]
 8007194:	3301      	adds	r3, #1
 8007196:	51a7      	str	r7, [r4, r6]
 8007198:	50a3      	str	r3, [r4, r2]
 800719a:	2380      	movs	r3, #128	; 0x80
 800719c:	005b      	lsls	r3, r3, #1
 800719e:	58e2      	ldr	r2, [r4, r3]
 80071a0:	1c51      	adds	r1, r2, #1
 80071a2:	50e1      	str	r1, [r4, r3]
 80071a4:	3bc2      	subs	r3, #194	; 0xc2
 80071a6:	54a3      	strb	r3, [r4, r2]
 80071a8:	2282      	movs	r2, #130	; 0x82
 80071aa:	0052      	lsls	r2, r2, #1
 80071ac:	54a3      	strb	r3, [r4, r2]
 80071ae:	f7ff f884 	bl	80062ba <d_print_comp+0x1b1e>
 80071b2:	689b      	ldr	r3, [r3, #8]
 80071b4:	7c1f      	ldrb	r7, [r3, #16]
 80071b6:	2f00      	cmp	r7, #0
 80071b8:	d101      	bne.n	80071be <d_print_comp+0x2a22>
 80071ba:	f7fd fe80 	bl	8004ebe <d_print_comp+0x722>
 80071be:	2f06      	cmp	r7, #6
 80071c0:	d800      	bhi.n	80071c4 <d_print_comp+0x2a28>
 80071c2:	e2b0      	b.n	8007726 <d_print_comp+0x2f8a>
 80071c4:	2f07      	cmp	r7, #7
 80071c6:	d001      	beq.n	80071cc <d_print_comp+0x2a30>
 80071c8:	f7fd fe79 	bl	8004ebe <d_print_comp+0x722>
 80071cc:	68eb      	ldr	r3, [r5, #12]
 80071ce:	781a      	ldrb	r2, [r3, #0]
 80071d0:	2a00      	cmp	r2, #0
 80071d2:	d001      	beq.n	80071d8 <d_print_comp+0x2a3c>
 80071d4:	f7fd fe73 	bl	8004ebe <d_print_comp+0x722>
 80071d8:	68da      	ldr	r2, [r3, #12]
 80071da:	2a01      	cmp	r2, #1
 80071dc:	d001      	beq.n	80071e2 <d_print_comp+0x2a46>
 80071de:	f7fd fe6e 	bl	8004ebe <d_print_comp+0x722>
 80071e2:	464a      	mov	r2, r9
 80071e4:	2a3c      	cmp	r2, #60	; 0x3c
 80071e6:	d001      	beq.n	80071ec <d_print_comp+0x2a50>
 80071e8:	f7fd fe69 	bl	8004ebe <d_print_comp+0x722>
 80071ec:	689b      	ldr	r3, [r3, #8]
 80071ee:	781b      	ldrb	r3, [r3, #0]
 80071f0:	2b30      	cmp	r3, #48	; 0x30
 80071f2:	d101      	bne.n	80071f8 <d_print_comp+0x2a5c>
 80071f4:	f000 fcbf 	bl	8007b76 <d_print_comp+0x33da>
 80071f8:	2b31      	cmp	r3, #49	; 0x31
 80071fa:	d001      	beq.n	8007200 <d_print_comp+0x2a64>
 80071fc:	f7fd fe5f 	bl	8004ebe <d_print_comp+0x722>
 8007200:	2204      	movs	r2, #4
 8007202:	494a      	ldr	r1, [pc, #296]	; (800732c <d_print_comp+0x2b90>)
 8007204:	0020      	movs	r0, r4
 8007206:	f7fa ff77 	bl	80020f8 <d_append_buffer>
 800720a:	465b      	mov	r3, fp
 800720c:	686a      	ldr	r2, [r5, #4]
 800720e:	685b      	ldr	r3, [r3, #4]
 8007210:	f7fd fb77 	bl	8004902 <d_print_comp+0x166>
 8007214:	4a46      	ldr	r2, [pc, #280]	; (8007330 <d_print_comp+0x2b94>)
 8007216:	2380      	movs	r3, #128	; 0x80
 8007218:	4691      	mov	r9, r2
 800721a:	2286      	movs	r2, #134	; 0x86
 800721c:	005b      	lsls	r3, r3, #1
 800721e:	0052      	lsls	r2, r2, #1
 8007220:	58e3      	ldr	r3, [r4, r3]
 8007222:	2700      	movs	r7, #0
 8007224:	4692      	mov	sl, r2
 8007226:	46a8      	mov	r8, r5
 8007228:	e01d      	b.n	8007266 <d_print_comp+0x2aca>
 800722a:	2200      	movs	r2, #0
 800722c:	54e2      	strb	r2, [r4, r3]
 800722e:	2384      	movs	r3, #132	; 0x84
 8007230:	005b      	lsls	r3, r3, #1
 8007232:	58e3      	ldr	r3, [r4, r3]
 8007234:	9300      	str	r3, [sp, #0]
 8007236:	4653      	mov	r3, sl
 8007238:	21ff      	movs	r1, #255	; 0xff
 800723a:	58e2      	ldr	r2, [r4, r3]
 800723c:	0020      	movs	r0, r4
 800723e:	9b00      	ldr	r3, [sp, #0]
 8007240:	f001 ffde 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8007244:	2292      	movs	r2, #146	; 0x92
 8007246:	0052      	lsls	r2, r2, #1
 8007248:	58a3      	ldr	r3, [r4, r2]
 800724a:	3301      	adds	r3, #1
 800724c:	50a3      	str	r3, [r4, r2]
 800724e:	2301      	movs	r3, #1
 8007250:	2200      	movs	r2, #0
 8007252:	2180      	movs	r1, #128	; 0x80
 8007254:	0049      	lsls	r1, r1, #1
 8007256:	5063      	str	r3, [r4, r1]
 8007258:	54a5      	strb	r5, [r4, r2]
 800725a:	2282      	movs	r2, #130	; 0x82
 800725c:	3701      	adds	r7, #1
 800725e:	0052      	lsls	r2, r2, #1
 8007260:	54a5      	strb	r5, [r4, r2]
 8007262:	2f05      	cmp	r7, #5
 8007264:	d006      	beq.n	8007274 <d_print_comp+0x2ad8>
 8007266:	464a      	mov	r2, r9
 8007268:	5dd5      	ldrb	r5, [r2, r7]
 800726a:	2bff      	cmp	r3, #255	; 0xff
 800726c:	d0dd      	beq.n	800722a <d_print_comp+0x2a8e>
 800726e:	001a      	movs	r2, r3
 8007270:	3301      	adds	r3, #1
 8007272:	e7ee      	b.n	8007252 <d_print_comp+0x2ab6>
 8007274:	4645      	mov	r5, r8
 8007276:	f7fd ffe6 	bl	8005246 <d_print_comp+0xaaa>
 800727a:	4651      	mov	r1, sl
 800727c:	465b      	mov	r3, fp
 800727e:	5861      	ldr	r1, [r4, r1]
 8007280:	685b      	ldr	r3, [r3, #4]
 8007282:	686a      	ldr	r2, [r5, #4]
 8007284:	42b9      	cmp	r1, r7
 8007286:	d001      	beq.n	800728c <d_print_comp+0x2af0>
 8007288:	f7fd fb3b 	bl	8004902 <d_print_comp+0x166>
 800728c:	4650      	mov	r0, sl
 800728e:	9900      	ldr	r1, [sp, #0]
 8007290:	3901      	subs	r1, #1
 8007292:	5021      	str	r1, [r4, r0]
 8007294:	f7fd fb35 	bl	8004902 <d_print_comp+0x166>
 8007298:	33f1      	adds	r3, #241	; 0xf1
 800729a:	58e1      	ldr	r1, [r4, r3]
 800729c:	2900      	cmp	r1, #0
 800729e:	da01      	bge.n	80072a4 <d_print_comp+0x2b08>
 80072a0:	f7fe fc96 	bl	8005bd0 <d_print_comp+0x1434>
 80072a4:	f7fb f9a4 	bl	80025f0 <d_index_template_argument.part.9>
 80072a8:	2800      	cmp	r0, #0
 80072aa:	d001      	beq.n	80072b0 <d_print_comp+0x2b14>
 80072ac:	f7fe fc90 	bl	8005bd0 <d_print_comp+0x1434>
 80072b0:	238c      	movs	r3, #140	; 0x8c
 80072b2:	2201      	movs	r2, #1
 80072b4:	005b      	lsls	r3, r3, #1
 80072b6:	50e2      	str	r2, [r4, r3]
 80072b8:	465b      	mov	r3, fp
 80072ba:	686a      	ldr	r2, [r5, #4]
 80072bc:	685b      	ldr	r3, [r3, #4]
 80072be:	f7fd fb20 	bl	8004902 <d_print_comp+0x166>
 80072c2:	68aa      	ldr	r2, [r5, #8]
 80072c4:	0031      	movs	r1, r6
 80072c6:	0020      	movs	r0, r4
 80072c8:	f7fd fa68 	bl	800479c <d_print_comp>
 80072cc:	465b      	mov	r3, fp
 80072ce:	686a      	ldr	r2, [r5, #4]
 80072d0:	685b      	ldr	r3, [r3, #4]
 80072d2:	f7fd fb16 	bl	8004902 <d_print_comp+0x166>
 80072d6:	2700      	movs	r7, #0
 80072d8:	46a8      	mov	r8, r5
 80072da:	f7fe fb08 	bl	80058ee <d_print_comp+0x1152>
 80072de:	465b      	mov	r3, fp
 80072e0:	686a      	ldr	r2, [r5, #4]
 80072e2:	685b      	ldr	r3, [r3, #4]
 80072e4:	f7fd fb0d 	bl	8004902 <d_print_comp+0x166>
 80072e8:	464b      	mov	r3, r9
 80072ea:	46a1      	mov	r9, r4
 80072ec:	4644      	mov	r4, r8
 80072ee:	46a8      	mov	r8, r5
 80072f0:	001d      	movs	r5, r3
 80072f2:	238a      	movs	r3, #138	; 0x8a
 80072f4:	005b      	lsls	r3, r3, #1
 80072f6:	50e7      	str	r7, [r4, r3]
 80072f8:	4643      	mov	r3, r8
 80072fa:	9e03      	ldr	r6, [sp, #12]
 80072fc:	2b04      	cmp	r3, #4
 80072fe:	d100      	bne.n	8007302 <d_print_comp+0x2b66>
 8007300:	e260      	b.n	80077c4 <d_print_comp+0x3028>
 8007302:	4643      	mov	r3, r8
 8007304:	2b02      	cmp	r3, #2
 8007306:	d139      	bne.n	800737c <d_print_comp+0x2be0>
 8007308:	464b      	mov	r3, r9
 800730a:	68db      	ldr	r3, [r3, #12]
 800730c:	4698      	mov	r8, r3
 800730e:	781b      	ldrb	r3, [r3, #0]
 8007310:	2b46      	cmp	r3, #70	; 0x46
 8007312:	d100      	bne.n	8007316 <d_print_comp+0x2b7a>
 8007314:	e356      	b.n	80079c4 <d_print_comp+0x3228>
 8007316:	9b00      	ldr	r3, [sp, #0]
 8007318:	011f      	lsls	r7, r3, #4
 800731a:	0023      	movs	r3, r4
 800731c:	3f0c      	subs	r7, #12
 800731e:	4644      	mov	r4, r8
 8007320:	4457      	add	r7, sl
 8007322:	9603      	str	r6, [sp, #12]
 8007324:	4698      	mov	r8, r3
 8007326:	e022      	b.n	800736e <d_print_comp+0x2bd2>
 8007328:	08026f98 	.word	0x08026f98
 800732c:	08026fc0 	.word	0x08026fc0
 8007330:	08026f58 	.word	0x08026f58
 8007334:	9800      	ldr	r0, [sp, #0]
 8007336:	2804      	cmp	r0, #4
 8007338:	d100      	bne.n	800733c <d_print_comp+0x2ba0>
 800733a:	e34b      	b.n	80079d4 <d_print_comp+0x3238>
 800733c:	1f3b      	subs	r3, r7, #4
 800733e:	469c      	mov	ip, r3
 8007340:	4661      	mov	r1, ip
 8007342:	3310      	adds	r3, #16
 8007344:	c945      	ldmia	r1!, {r0, r2, r6}
 8007346:	c345      	stmia	r3!, {r0, r2, r6}
 8007348:	6809      	ldr	r1, [r1, #0]
 800734a:	6019      	str	r1, [r3, #0]
 800734c:	4663      	mov	r3, ip
 800734e:	218a      	movs	r1, #138	; 0x8a
 8007350:	4642      	mov	r2, r8
 8007352:	60fb      	str	r3, [r7, #12]
 8007354:	0049      	lsls	r1, r1, #1
 8007356:	3310      	adds	r3, #16
 8007358:	5053      	str	r3, [r2, r1]
 800735a:	2300      	movs	r3, #0
 800735c:	9800      	ldr	r0, [sp, #0]
 800735e:	607b      	str	r3, [r7, #4]
 8007360:	603c      	str	r4, [r7, #0]
 8007362:	9b01      	ldr	r3, [sp, #4]
 8007364:	3001      	adds	r0, #1
 8007366:	9000      	str	r0, [sp, #0]
 8007368:	68a4      	ldr	r4, [r4, #8]
 800736a:	60bb      	str	r3, [r7, #8]
 800736c:	3710      	adds	r7, #16
 800736e:	7820      	ldrb	r0, [r4, #0]
 8007370:	f7fa fefe 	bl	8002170 <is_fnqual_component_type>
 8007374:	2800      	cmp	r0, #0
 8007376:	d1dd      	bne.n	8007334 <d_print_comp+0x2b98>
 8007378:	4644      	mov	r4, r8
 800737a:	9e03      	ldr	r6, [sp, #12]
 800737c:	68ea      	ldr	r2, [r5, #12]
 800737e:	0031      	movs	r1, r6
 8007380:	0020      	movs	r0, r4
 8007382:	f7fd fa0b 	bl	800479c <d_print_comp>
 8007386:	464b      	mov	r3, r9
 8007388:	781b      	ldrb	r3, [r3, #0]
 800738a:	2b04      	cmp	r3, #4
 800738c:	d103      	bne.n	8007396 <d_print_comp+0x2bfa>
 800738e:	330d      	adds	r3, #13
 8007390:	9a06      	ldr	r2, [sp, #24]
 8007392:	33ff      	adds	r3, #255	; 0xff
 8007394:	50e2      	str	r2, [r4, r3]
 8007396:	9b00      	ldr	r3, [sp, #0]
 8007398:	011f      	lsls	r7, r3, #4
 800739a:	2380      	movs	r3, #128	; 0x80
 800739c:	005b      	lsls	r3, r3, #1
 800739e:	4698      	mov	r8, r3
 80073a0:	46a9      	mov	r9, r5
 80073a2:	003b      	movs	r3, r7
 80073a4:	4453      	add	r3, sl
 80073a6:	9300      	str	r3, [sp, #0]
 80073a8:	3b08      	subs	r3, #8
 80073aa:	681d      	ldr	r5, [r3, #0]
 80073ac:	2d00      	cmp	r5, #0
 80073ae:	d125      	bne.n	80073fc <d_print_comp+0x2c60>
 80073b0:	4643      	mov	r3, r8
 80073b2:	58e1      	ldr	r1, [r4, r3]
 80073b4:	29ff      	cmp	r1, #255	; 0xff
 80073b6:	d110      	bne.n	80073da <d_print_comp+0x2c3e>
 80073b8:	2384      	movs	r3, #132	; 0x84
 80073ba:	2286      	movs	r2, #134	; 0x86
 80073bc:	5465      	strb	r5, [r4, r1]
 80073be:	005b      	lsls	r3, r3, #1
 80073c0:	0052      	lsls	r2, r2, #1
 80073c2:	58e3      	ldr	r3, [r4, r3]
 80073c4:	58a2      	ldr	r2, [r4, r2]
 80073c6:	0020      	movs	r0, r4
 80073c8:	f001 ff1a 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 80073cc:	2292      	movs	r2, #146	; 0x92
 80073ce:	4643      	mov	r3, r8
 80073d0:	0052      	lsls	r2, r2, #1
 80073d2:	50e5      	str	r5, [r4, r3]
 80073d4:	58a3      	ldr	r3, [r4, r2]
 80073d6:	3301      	adds	r3, #1
 80073d8:	50a3      	str	r3, [r4, r2]
 80073da:	4643      	mov	r3, r8
 80073dc:	4641      	mov	r1, r8
 80073de:	58e3      	ldr	r3, [r4, r3]
 80073e0:	1c5a      	adds	r2, r3, #1
 80073e2:	5062      	str	r2, [r4, r1]
 80073e4:	2220      	movs	r2, #32
 80073e6:	54e2      	strb	r2, [r4, r3]
 80073e8:	2382      	movs	r3, #130	; 0x82
 80073ea:	005b      	lsls	r3, r3, #1
 80073ec:	54e2      	strb	r2, [r4, r3]
 80073ee:	9b00      	ldr	r3, [sp, #0]
 80073f0:	3b0c      	subs	r3, #12
 80073f2:	681a      	ldr	r2, [r3, #0]
 80073f4:	0031      	movs	r1, r6
 80073f6:	0020      	movs	r0, r4
 80073f8:	f000 fbda 	bl	8007bb0 <d_print_mod>
 80073fc:	3f10      	subs	r7, #16
 80073fe:	2f00      	cmp	r7, #0
 8007400:	d1cf      	bne.n	80073a2 <d_print_comp+0x2c06>
 8007402:	238a      	movs	r3, #138	; 0x8a
 8007404:	9a02      	ldr	r2, [sp, #8]
 8007406:	005b      	lsls	r3, r3, #1
 8007408:	464d      	mov	r5, r9
 800740a:	50e2      	str	r2, [r4, r3]
 800740c:	f7fe fcaa 	bl	8005d64 <d_print_comp+0x15c8>
 8007410:	220d      	movs	r2, #13
 8007412:	49e6      	ldr	r1, [pc, #920]	; (80077ac <d_print_comp+0x3010>)
 8007414:	0020      	movs	r0, r4
 8007416:	f7fa fe6f 	bl	80020f8 <d_append_buffer>
 800741a:	68fb      	ldr	r3, [r7, #12]
 800741c:	0020      	movs	r0, r4
 800741e:	1c59      	adds	r1, r3, #1
 8007420:	f7fb f9ae 	bl	8002780 <d_append_num>
 8007424:	2203      	movs	r2, #3
 8007426:	49e2      	ldr	r1, [pc, #904]	; (80077b0 <d_print_comp+0x3014>)
 8007428:	0020      	movs	r0, r4
 800742a:	f7fa fe65 	bl	80020f8 <d_append_buffer>
 800742e:	68bf      	ldr	r7, [r7, #8]
 8007430:	f7fe fcce 	bl	8005dd0 <d_print_comp+0x1634>
 8007434:	2201      	movs	r2, #1
 8007436:	9c01      	ldr	r4, [sp, #4]
 8007438:	3319      	adds	r3, #25
 800743a:	33ff      	adds	r3, #255	; 0xff
 800743c:	4655      	mov	r5, sl
 800743e:	50e2      	str	r2, [r4, r3]
 8007440:	f7fe f88c 	bl	800555c <d_print_comp+0xdc0>
 8007444:	465b      	mov	r3, fp
 8007446:	686a      	ldr	r2, [r5, #4]
 8007448:	685b      	ldr	r3, [r3, #4]
 800744a:	f7fd fa5a 	bl	8004902 <d_print_comp+0x166>
 800744e:	238a      	movs	r3, #138	; 0x8a
 8007450:	4644      	mov	r4, r8
 8007452:	005b      	lsls	r3, r3, #1
 8007454:	464d      	mov	r5, r9
 8007456:	50e7      	str	r7, [r4, r3]
 8007458:	f7fe fc80 	bl	8005d5c <d_print_comp+0x15c0>
 800745c:	68aa      	ldr	r2, [r5, #8]
 800745e:	0031      	movs	r1, r6
 8007460:	0020      	movs	r0, r4
 8007462:	f001 fae3 	bl	8008a2c <d_print_subexpr>
 8007466:	2203      	movs	r2, #3
 8007468:	49d2      	ldr	r1, [pc, #840]	; (80077b4 <d_print_comp+0x3018>)
 800746a:	0020      	movs	r0, r4
 800746c:	f7fa fe44 	bl	80020f8 <d_append_buffer>
 8007470:	465b      	mov	r3, fp
 8007472:	686a      	ldr	r2, [r5, #4]
 8007474:	685b      	ldr	r3, [r3, #4]
 8007476:	f7fd fa44 	bl	8004902 <d_print_comp+0x166>
 800747a:	2198      	movs	r1, #152	; 0x98
 800747c:	0049      	lsls	r1, r1, #1
 800747e:	3228      	adds	r2, #40	; 0x28
 8007480:	5861      	ldr	r1, [r4, r1]
 8007482:	32ff      	adds	r2, #255	; 0xff
 8007484:	58a2      	ldr	r2, [r4, r2]
 8007486:	2900      	cmp	r1, #0
 8007488:	dd19      	ble.n	80074be <d_print_comp+0x2d22>
 800748a:	6810      	ldr	r0, [r2, #0]
 800748c:	4580      	cmp	r8, r0
 800748e:	d100      	bne.n	8007492 <d_print_comp+0x2cf6>
 8007490:	e219      	b.n	80078c6 <d_print_comp+0x312a>
 8007492:	0010      	movs	r0, r2
 8007494:	3008      	adds	r0, #8
 8007496:	4681      	mov	r9, r0
 8007498:	2000      	movs	r0, #0
 800749a:	469a      	mov	sl, r3
 800749c:	4684      	mov	ip, r0
 800749e:	4648      	mov	r0, r9
 80074a0:	e007      	b.n	80074b2 <d_print_comp+0x2d16>
 80074a2:	4681      	mov	r9, r0
 80074a4:	3008      	adds	r0, #8
 80074a6:	0003      	movs	r3, r0
 80074a8:	3b08      	subs	r3, #8
 80074aa:	681b      	ldr	r3, [r3, #0]
 80074ac:	4598      	cmp	r8, r3
 80074ae:	d100      	bne.n	80074b2 <d_print_comp+0x2d16>
 80074b0:	e20a      	b.n	80078c8 <d_print_comp+0x312c>
 80074b2:	2301      	movs	r3, #1
 80074b4:	4699      	mov	r9, r3
 80074b6:	44cc      	add	ip, r9
 80074b8:	4561      	cmp	r1, ip
 80074ba:	d1f2      	bne.n	80074a2 <d_print_comp+0x2d06>
 80074bc:	4653      	mov	r3, sl
 80074be:	209a      	movs	r0, #154	; 0x9a
 80074c0:	0040      	lsls	r0, r0, #1
 80074c2:	5820      	ldr	r0, [r4, r0]
 80074c4:	4281      	cmp	r1, r0
 80074c6:	db00      	blt.n	80074ca <d_print_comp+0x2d2e>
 80074c8:	e360      	b.n	8007b8c <d_print_comp+0x33f0>
 80074ca:	00c8      	lsls	r0, r1, #3
 80074cc:	3101      	adds	r1, #1
 80074ce:	468c      	mov	ip, r1
 80074d0:	2198      	movs	r1, #152	; 0x98
 80074d2:	4681      	mov	r9, r0
 80074d4:	4660      	mov	r0, ip
 80074d6:	0049      	lsls	r1, r1, #1
 80074d8:	5060      	str	r0, [r4, r1]
 80074da:	4641      	mov	r1, r8
 80074dc:	444a      	add	r2, r9
 80074de:	c202      	stmia	r2!, {r1}
 80074e0:	2188      	movs	r1, #136	; 0x88
 80074e2:	0049      	lsls	r1, r1, #1
 80074e4:	5860      	ldr	r0, [r4, r1]
 80074e6:	312c      	adds	r1, #44	; 0x2c
 80074e8:	4689      	mov	r9, r1
 80074ea:	3104      	adds	r1, #4
 80074ec:	9102      	str	r1, [sp, #8]
 80074ee:	469c      	mov	ip, r3
 80074f0:	9603      	str	r6, [sp, #12]
 80074f2:	e015      	b.n	8007520 <d_print_comp+0x2d84>
 80074f4:	464b      	mov	r3, r9
 80074f6:	9902      	ldr	r1, [sp, #8]
 80074f8:	58e3      	ldr	r3, [r4, r3]
 80074fa:	5861      	ldr	r1, [r4, r1]
 80074fc:	428b      	cmp	r3, r1
 80074fe:	db00      	blt.n	8007502 <d_print_comp+0x2d66>
 8007500:	e343      	b.n	8007b8a <d_print_comp+0x33ee>
 8007502:	269c      	movs	r6, #156	; 0x9c
 8007504:	0076      	lsls	r6, r6, #1
 8007506:	59a6      	ldr	r6, [r4, r6]
 8007508:	46b2      	mov	sl, r6
 800750a:	9601      	str	r6, [sp, #4]
 800750c:	464e      	mov	r6, r9
 800750e:	00d9      	lsls	r1, r3, #3
 8007510:	3301      	adds	r3, #1
 8007512:	51a3      	str	r3, [r4, r6]
 8007514:	6843      	ldr	r3, [r0, #4]
 8007516:	4451      	add	r1, sl
 8007518:	604b      	str	r3, [r1, #4]
 800751a:	6011      	str	r1, [r2, #0]
 800751c:	000a      	movs	r2, r1
 800751e:	6800      	ldr	r0, [r0, #0]
 8007520:	2800      	cmp	r0, #0
 8007522:	d1e7      	bne.n	80074f4 <d_print_comp+0x2d58>
 8007524:	4641      	mov	r1, r8
 8007526:	9e03      	ldr	r6, [sp, #12]
 8007528:	6010      	str	r0, [r2, #0]
 800752a:	3108      	adds	r1, #8
 800752c:	0020      	movs	r0, r4
 800752e:	f7fb f877 	bl	8002620 <d_lookup_template_argument.isra.10>
 8007532:	4680      	mov	r8, r0
 8007534:	2800      	cmp	r0, #0
 8007536:	d01a      	beq.n	800756e <d_print_comp+0x2dd2>
 8007538:	4643      	mov	r3, r8
 800753a:	781b      	ldrb	r3, [r3, #0]
 800753c:	2b2f      	cmp	r3, #47	; 0x2f
 800753e:	d001      	beq.n	8007544 <d_print_comp+0x2da8>
 8007540:	f7fe f9c9 	bl	80058d6 <d_print_comp+0x113a>
 8007544:	2290      	movs	r2, #144	; 0x90
 8007546:	0052      	lsls	r2, r2, #1
 8007548:	58a1      	ldr	r1, [r4, r2]
 800754a:	2900      	cmp	r1, #0
 800754c:	da01      	bge.n	8007552 <d_print_comp+0x2db6>
 800754e:	f7fe f9c6 	bl	80058de <d_print_comp+0x1142>
 8007552:	4640      	mov	r0, r8
 8007554:	f7fb f84c 	bl	80025f0 <d_index_template_argument.part.9>
 8007558:	4680      	mov	r8, r0
 800755a:	2800      	cmp	r0, #0
 800755c:	d001      	beq.n	8007562 <d_print_comp+0x2dc6>
 800755e:	f7fe f9ba 	bl	80058d6 <d_print_comp+0x113a>
 8007562:	2f00      	cmp	r7, #0
 8007564:	d003      	beq.n	800756e <d_print_comp+0x2dd2>
 8007566:	2388      	movs	r3, #136	; 0x88
 8007568:	9a00      	ldr	r2, [sp, #0]
 800756a:	005b      	lsls	r3, r3, #1
 800756c:	50e2      	str	r2, [r4, r3]
 800756e:	238c      	movs	r3, #140	; 0x8c
 8007570:	2201      	movs	r2, #1
 8007572:	005b      	lsls	r3, r3, #1
 8007574:	50e2      	str	r2, [r4, r3]
 8007576:	465b      	mov	r3, fp
 8007578:	686a      	ldr	r2, [r5, #4]
 800757a:	685b      	ldr	r3, [r3, #4]
 800757c:	f7fd f9c1 	bl	8004902 <d_print_comp+0x166>
 8007580:	003a      	movs	r2, r7
 8007582:	0031      	movs	r1, r6
 8007584:	0020      	movs	r0, r4
 8007586:	f7fd f909 	bl	800479c <d_print_comp>
 800758a:	465b      	mov	r3, fp
 800758c:	686a      	ldr	r2, [r5, #4]
 800758e:	685b      	ldr	r3, [r3, #4]
 8007590:	f7fd f9b7 	bl	8004902 <d_print_comp+0x166>
 8007594:	0006      	movs	r6, r0
 8007596:	e003      	b.n	80075a0 <d_print_comp+0x2e04>
 8007598:	3601      	adds	r6, #1
 800759a:	68ff      	ldr	r7, [r7, #12]
 800759c:	2f00      	cmp	r7, #0
 800759e:	d024      	beq.n	80075ea <d_print_comp+0x2e4e>
 80075a0:	783b      	ldrb	r3, [r7, #0]
 80075a2:	2b2f      	cmp	r3, #47	; 0x2f
 80075a4:	d121      	bne.n	80075ea <d_print_comp+0x2e4e>
 80075a6:	68bb      	ldr	r3, [r7, #8]
 80075a8:	2b00      	cmp	r3, #0
 80075aa:	d01e      	beq.n	80075ea <d_print_comp+0x2e4e>
 80075ac:	781a      	ldrb	r2, [r3, #0]
 80075ae:	2a4a      	cmp	r2, #74	; 0x4a
 80075b0:	d1f2      	bne.n	8007598 <d_print_comp+0x2dfc>
 80075b2:	6899      	ldr	r1, [r3, #8]
 80075b4:	0020      	movs	r0, r4
 80075b6:	f7fb f849 	bl	800264c <d_find_pack>
 80075ba:	2800      	cmp	r0, #0
 80075bc:	d100      	bne.n	80075c0 <d_print_comp+0x2e24>
 80075be:	e2ce      	b.n	8007b5e <d_print_comp+0x33c2>
 80075c0:	7803      	ldrb	r3, [r0, #0]
 80075c2:	2b2f      	cmp	r3, #47	; 0x2f
 80075c4:	d000      	beq.n	80075c8 <d_print_comp+0x2e2c>
 80075c6:	e2ca      	b.n	8007b5e <d_print_comp+0x33c2>
 80075c8:	6883      	ldr	r3, [r0, #8]
 80075ca:	2b00      	cmp	r3, #0
 80075cc:	d00b      	beq.n	80075e6 <d_print_comp+0x2e4a>
 80075ce:	2300      	movs	r3, #0
 80075d0:	e005      	b.n	80075de <d_print_comp+0x2e42>
 80075d2:	7802      	ldrb	r2, [r0, #0]
 80075d4:	2a2f      	cmp	r2, #47	; 0x2f
 80075d6:	d106      	bne.n	80075e6 <d_print_comp+0x2e4a>
 80075d8:	6882      	ldr	r2, [r0, #8]
 80075da:	2a00      	cmp	r2, #0
 80075dc:	d003      	beq.n	80075e6 <d_print_comp+0x2e4a>
 80075de:	68c0      	ldr	r0, [r0, #12]
 80075e0:	3301      	adds	r3, #1
 80075e2:	2800      	cmp	r0, #0
 80075e4:	d1f5      	bne.n	80075d2 <d_print_comp+0x2e36>
 80075e6:	18f6      	adds	r6, r6, r3
 80075e8:	e7d7      	b.n	800759a <d_print_comp+0x2dfe>
 80075ea:	0031      	movs	r1, r6
 80075ec:	0020      	movs	r0, r4
 80075ee:	f7fb f8c7 	bl	8002780 <d_append_num>
 80075f2:	465b      	mov	r3, fp
 80075f4:	686a      	ldr	r2, [r5, #4]
 80075f6:	685b      	ldr	r3, [r3, #4]
 80075f8:	f7fd f983 	bl	8004902 <d_print_comp+0x166>
 80075fc:	4643      	mov	r3, r8
 80075fe:	58e3      	ldr	r3, [r4, r3]
 8007600:	f7ff f8b3 	bl	800676a <d_print_comp+0x1fce>
 8007604:	9308      	str	r3, [sp, #32]
 8007606:	464b      	mov	r3, r9
 8007608:	af08      	add	r7, sp, #32
 800760a:	50e7      	str	r7, [r4, r3]
 800760c:	2388      	movs	r3, #136	; 0x88
 800760e:	005b      	lsls	r3, r3, #1
 8007610:	58e3      	ldr	r3, [r4, r3]
 8007612:	4641      	mov	r1, r8
 8007614:	0020      	movs	r0, r4
 8007616:	960a      	str	r6, [sp, #40]	; 0x28
 8007618:	930b      	str	r3, [sp, #44]	; 0x2c
 800761a:	9509      	str	r5, [sp, #36]	; 0x24
 800761c:	f7fd f8be 	bl	800479c <d_print_comp>
 8007620:	464b      	mov	r3, r9
 8007622:	9a08      	ldr	r2, [sp, #32]
 8007624:	68be      	ldr	r6, [r7, #8]
 8007626:	50e2      	str	r2, [r4, r3]
 8007628:	2e00      	cmp	r6, #0
 800762a:	d135      	bne.n	8007698 <d_print_comp+0x2efc>
 800762c:	2780      	movs	r7, #128	; 0x80
 800762e:	007f      	lsls	r7, r7, #1
 8007630:	59e1      	ldr	r1, [r4, r7]
 8007632:	29ff      	cmp	r1, #255	; 0xff
 8007634:	d10f      	bne.n	8007656 <d_print_comp+0x2eba>
 8007636:	2384      	movs	r3, #132	; 0x84
 8007638:	2286      	movs	r2, #134	; 0x86
 800763a:	5466      	strb	r6, [r4, r1]
 800763c:	005b      	lsls	r3, r3, #1
 800763e:	0052      	lsls	r2, r2, #1
 8007640:	58e3      	ldr	r3, [r4, r3]
 8007642:	58a2      	ldr	r2, [r4, r2]
 8007644:	0020      	movs	r0, r4
 8007646:	f001 fddb 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 800764a:	2292      	movs	r2, #146	; 0x92
 800764c:	0052      	lsls	r2, r2, #1
 800764e:	58a3      	ldr	r3, [r4, r2]
 8007650:	3301      	adds	r3, #1
 8007652:	51e6      	str	r6, [r4, r7]
 8007654:	50a3      	str	r3, [r4, r2]
 8007656:	2380      	movs	r3, #128	; 0x80
 8007658:	005b      	lsls	r3, r3, #1
 800765a:	58e2      	ldr	r2, [r4, r3]
 800765c:	1c51      	adds	r1, r2, #1
 800765e:	50e1      	str	r1, [r4, r3]
 8007660:	3be0      	subs	r3, #224	; 0xe0
 8007662:	54a3      	strb	r3, [r4, r2]
 8007664:	2282      	movs	r2, #130	; 0x82
 8007666:	0052      	lsls	r2, r2, #1
 8007668:	54a3      	strb	r3, [r4, r2]
 800766a:	f7fe fa4f 	bl	8005b0c <d_print_comp+0x1370>
 800766e:	4643      	mov	r3, r8
 8007670:	58e3      	ldr	r3, [r4, r3]
 8007672:	f7ff f8a5 	bl	80067c0 <d_print_comp+0x2024>
 8007676:	68ea      	ldr	r2, [r5, #12]
 8007678:	0031      	movs	r1, r6
 800767a:	0020      	movs	r0, r4
 800767c:	f7fd f88e 	bl	800479c <d_print_comp>
 8007680:	238a      	movs	r3, #138	; 0x8a
 8007682:	4642      	mov	r2, r8
 8007684:	005b      	lsls	r3, r3, #1
 8007686:	50e2      	str	r2, [r4, r3]
 8007688:	4653      	mov	r3, sl
 800768a:	689b      	ldr	r3, [r3, #8]
 800768c:	2b00      	cmp	r3, #0
 800768e:	d101      	bne.n	8007694 <d_print_comp+0x2ef8>
 8007690:	f7fd ff5b 	bl	800554a <d_print_comp+0xdae>
 8007694:	f7fd ff62 	bl	800555c <d_print_comp+0xdc0>
 8007698:	465b      	mov	r3, fp
 800769a:	686a      	ldr	r2, [r5, #4]
 800769c:	685b      	ldr	r3, [r3, #4]
 800769e:	f7fd f930 	bl	8004902 <d_print_comp+0x166>
 80076a2:	4641      	mov	r1, r8
 80076a4:	4650      	mov	r0, sl
 80076a6:	f001 feaf 	bl	8009408 <strcmp>
 80076aa:	2800      	cmp	r0, #0
 80076ac:	d000      	beq.n	80076b0 <d_print_comp+0x2f14>
 80076ae:	e259      	b.n	8007b64 <d_print_comp+0x33c8>
 80076b0:	68eb      	ldr	r3, [r5, #12]
 80076b2:	0031      	movs	r1, r6
 80076b4:	68da      	ldr	r2, [r3, #12]
 80076b6:	0020      	movs	r0, r4
 80076b8:	f001 f9b8 	bl	8008a2c <d_print_subexpr>
 80076bc:	f7fd f918 	bl	80048f0 <d_print_comp+0x154>
 80076c0:	689a      	ldr	r2, [r3, #8]
 80076c2:	6891      	ldr	r1, [r2, #8]
 80076c4:	2901      	cmp	r1, #1
 80076c6:	d001      	beq.n	80076cc <d_print_comp+0x2f30>
 80076c8:	f7fd f8ad 	bl	8004826 <d_print_comp+0x8a>
 80076cc:	6852      	ldr	r2, [r2, #4]
 80076ce:	7812      	ldrb	r2, [r2, #0]
 80076d0:	2a3e      	cmp	r2, #62	; 0x3e
 80076d2:	d001      	beq.n	80076d8 <d_print_comp+0x2f3c>
 80076d4:	f7fd f8a7 	bl	8004826 <d_print_comp+0x8a>
 80076d8:	2380      	movs	r3, #128	; 0x80
 80076da:	005b      	lsls	r3, r3, #1
 80076dc:	58e1      	ldr	r1, [r4, r3]
 80076de:	4698      	mov	r8, r3
 80076e0:	29ff      	cmp	r1, #255	; 0xff
 80076e2:	d10e      	bne.n	8007702 <d_print_comp+0x2f66>
 80076e4:	5460      	strb	r0, [r4, r1]
 80076e6:	3308      	adds	r3, #8
 80076e8:	32ce      	adds	r2, #206	; 0xce
 80076ea:	58e3      	ldr	r3, [r4, r3]
 80076ec:	58a2      	ldr	r2, [r4, r2]
 80076ee:	0020      	movs	r0, r4
 80076f0:	f001 fd86 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 80076f4:	2292      	movs	r2, #146	; 0x92
 80076f6:	4643      	mov	r3, r8
 80076f8:	0052      	lsls	r2, r2, #1
 80076fa:	50e7      	str	r7, [r4, r3]
 80076fc:	58a3      	ldr	r3, [r4, r2]
 80076fe:	3301      	adds	r3, #1
 8007700:	50a3      	str	r3, [r4, r2]
 8007702:	2380      	movs	r3, #128	; 0x80
 8007704:	005b      	lsls	r3, r3, #1
 8007706:	58e2      	ldr	r2, [r4, r3]
 8007708:	1c51      	adds	r1, r2, #1
 800770a:	50e1      	str	r1, [r4, r3]
 800770c:	3bd8      	subs	r3, #216	; 0xd8
 800770e:	54a3      	strb	r3, [r4, r2]
 8007710:	2282      	movs	r2, #130	; 0x82
 8007712:	0052      	lsls	r2, r2, #1
 8007714:	54a3      	strb	r3, [r4, r2]
 8007716:	68ab      	ldr	r3, [r5, #8]
 8007718:	f7fd f885 	bl	8004826 <d_print_comp+0x8a>
 800771c:	465b      	mov	r3, fp
 800771e:	686a      	ldr	r2, [r5, #4]
 8007720:	685b      	ldr	r3, [r3, #4]
 8007722:	f7fd f8ee 	bl	8004902 <d_print_comp+0x166>
 8007726:	68eb      	ldr	r3, [r5, #12]
 8007728:	781b      	ldrb	r3, [r3, #0]
 800772a:	4698      	mov	r8, r3
 800772c:	2b00      	cmp	r3, #0
 800772e:	d001      	beq.n	8007734 <d_print_comp+0x2f98>
 8007730:	f7fd fbc5 	bl	8004ebe <d_print_comp+0x722>
 8007734:	464b      	mov	r3, r9
 8007736:	2b3d      	cmp	r3, #61	; 0x3d
 8007738:	d100      	bne.n	800773c <d_print_comp+0x2fa0>
 800773a:	e1ed      	b.n	8007b18 <d_print_comp+0x337c>
 800773c:	3f02      	subs	r7, #2
 800773e:	68ea      	ldr	r2, [r5, #12]
 8007740:	0031      	movs	r1, r6
 8007742:	0020      	movs	r0, r4
 8007744:	063f      	lsls	r7, r7, #24
 8007746:	f7fd f829 	bl	800479c <d_print_comp>
 800774a:	0e3f      	lsrs	r7, r7, #24
 800774c:	2f04      	cmp	r7, #4
 800774e:	d900      	bls.n	8007752 <d_print_comp+0x2fb6>
 8007750:	e1dd      	b.n	8007b0e <d_print_comp+0x3372>
 8007752:	4b19      	ldr	r3, [pc, #100]	; (80077b8 <d_print_comp+0x301c>)
 8007754:	00bf      	lsls	r7, r7, #2
 8007756:	59db      	ldr	r3, [r3, r7]
 8007758:	469f      	mov	pc, r3
 800775a:	465b      	mov	r3, fp
 800775c:	686a      	ldr	r2, [r5, #4]
 800775e:	685b      	ldr	r3, [r3, #4]
 8007760:	f7fd f8cf 	bl	8004902 <d_print_comp+0x166>
 8007764:	68bb      	ldr	r3, [r7, #8]
 8007766:	781a      	ldrb	r2, [r3, #0]
 8007768:	2a01      	cmp	r2, #1
 800776a:	d001      	beq.n	8007770 <d_print_comp+0x2fd4>
 800776c:	f7ff fabd 	bl	8006cea <d_print_comp+0x254e>
 8007770:	68fa      	ldr	r2, [r7, #12]
 8007772:	7812      	ldrb	r2, [r2, #0]
 8007774:	2a29      	cmp	r2, #41	; 0x29
 8007776:	d001      	beq.n	800777c <d_print_comp+0x2fe0>
 8007778:	f7ff fab7 	bl	8006cea <d_print_comp+0x254e>
 800777c:	001f      	movs	r7, r3
 800777e:	f7ff fab4 	bl	8006cea <d_print_comp+0x254e>
 8007782:	490e      	ldr	r1, [pc, #56]	; (80077bc <d_print_comp+0x3020>)
 8007784:	68b8      	ldr	r0, [r7, #8]
 8007786:	f014 ff6d 	bl	801c664 <strncmp>
 800778a:	2800      	cmp	r0, #0
 800778c:	d001      	beq.n	8007792 <d_print_comp+0x2ff6>
 800778e:	f7fe fa46 	bl	8005c1e <d_print_comp+0x1482>
 8007792:	68ea      	ldr	r2, [r5, #12]
 8007794:	0031      	movs	r1, r6
 8007796:	0020      	movs	r0, r4
 8007798:	f7fd f800 	bl	800479c <d_print_comp>
 800779c:	2202      	movs	r2, #2
 800779e:	4908      	ldr	r1, [pc, #32]	; (80077c0 <d_print_comp+0x3024>)
 80077a0:	0020      	movs	r0, r4
 80077a2:	f7fa fca9 	bl	80020f8 <d_append_buffer>
 80077a6:	f7fe fa94 	bl	8005cd2 <d_print_comp+0x1536>
 80077aa:	46c0      	nop			; (mov r8, r8)
 80077ac:	08026de8 	.word	0x08026de8
 80077b0:	08026df8 	.word	0x08026df8
 80077b4:	08026fe4 	.word	0x08026fe4
 80077b8:	08020ad0 	.word	0x08020ad0
 80077bc:	08026dfc 	.word	0x08026dfc
 80077c0:	08026e04 	.word	0x08026e04
 80077c4:	9a01      	ldr	r2, [sp, #4]
 80077c6:	9206      	str	r2, [sp, #24]
 80077c8:	2288      	movs	r2, #136	; 0x88
 80077ca:	ab06      	add	r3, sp, #24
 80077cc:	0052      	lsls	r2, r2, #1
 80077ce:	50a3      	str	r3, [r4, r2]
 80077d0:	464a      	mov	r2, r9
 80077d2:	9207      	str	r2, [sp, #28]
 80077d4:	e5d2      	b.n	800737c <d_print_comp+0x2be0>
 80077d6:	59e1      	ldr	r1, [r4, r7]
 80077d8:	29ff      	cmp	r1, #255	; 0xff
 80077da:	d10f      	bne.n	80077fc <d_print_comp+0x3060>
 80077dc:	2600      	movs	r6, #0
 80077de:	2286      	movs	r2, #134	; 0x86
 80077e0:	5466      	strb	r6, [r4, r1]
 80077e2:	33ca      	adds	r3, #202	; 0xca
 80077e4:	0052      	lsls	r2, r2, #1
 80077e6:	58e3      	ldr	r3, [r4, r3]
 80077e8:	58a2      	ldr	r2, [r4, r2]
 80077ea:	0020      	movs	r0, r4
 80077ec:	f001 fd08 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 80077f0:	2292      	movs	r2, #146	; 0x92
 80077f2:	0052      	lsls	r2, r2, #1
 80077f4:	58a3      	ldr	r3, [r4, r2]
 80077f6:	3301      	adds	r3, #1
 80077f8:	51e6      	str	r6, [r4, r7]
 80077fa:	50a3      	str	r3, [r4, r2]
 80077fc:	2380      	movs	r3, #128	; 0x80
 80077fe:	005b      	lsls	r3, r3, #1
 8007800:	58e2      	ldr	r2, [r4, r3]
 8007802:	1c51      	adds	r1, r2, #1
 8007804:	50e1      	str	r1, [r4, r3]
 8007806:	3be0      	subs	r3, #224	; 0xe0
 8007808:	54a3      	strb	r3, [r4, r2]
 800780a:	2282      	movs	r2, #130	; 0x82
 800780c:	0052      	lsls	r2, r2, #1
 800780e:	54a3      	strb	r3, [r4, r2]
 8007810:	e4ad      	b.n	800716e <d_print_comp+0x29d2>
 8007812:	2780      	movs	r7, #128	; 0x80
 8007814:	007f      	lsls	r7, r7, #1
 8007816:	59e1      	ldr	r1, [r4, r7]
 8007818:	29ff      	cmp	r1, #255	; 0xff
 800781a:	d112      	bne.n	8007842 <d_print_comp+0x30a6>
 800781c:	2300      	movs	r3, #0
 800781e:	2286      	movs	r2, #134	; 0x86
 8007820:	5463      	strb	r3, [r4, r1]
 8007822:	4698      	mov	r8, r3
 8007824:	2384      	movs	r3, #132	; 0x84
 8007826:	0052      	lsls	r2, r2, #1
 8007828:	005b      	lsls	r3, r3, #1
 800782a:	58e3      	ldr	r3, [r4, r3]
 800782c:	58a2      	ldr	r2, [r4, r2]
 800782e:	0020      	movs	r0, r4
 8007830:	f001 fce6 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8007834:	2292      	movs	r2, #146	; 0x92
 8007836:	4643      	mov	r3, r8
 8007838:	0052      	lsls	r2, r2, #1
 800783a:	51e3      	str	r3, [r4, r7]
 800783c:	58a3      	ldr	r3, [r4, r2]
 800783e:	3301      	adds	r3, #1
 8007840:	50a3      	str	r3, [r4, r2]
 8007842:	2380      	movs	r3, #128	; 0x80
 8007844:	005b      	lsls	r3, r3, #1
 8007846:	58e2      	ldr	r2, [r4, r3]
 8007848:	1c51      	adds	r1, r2, #1
 800784a:	50e1      	str	r1, [r4, r3]
 800784c:	3be0      	subs	r3, #224	; 0xe0
 800784e:	54a3      	strb	r3, [r4, r2]
 8007850:	2282      	movs	r2, #130	; 0x82
 8007852:	0052      	lsls	r2, r2, #1
 8007854:	54a3      	strb	r3, [r4, r2]
 8007856:	e45c      	b.n	8007112 <d_print_comp+0x2976>
 8007858:	689b      	ldr	r3, [r3, #8]
 800785a:	689a      	ldr	r2, [r3, #8]
 800785c:	2a01      	cmp	r2, #1
 800785e:	d001      	beq.n	8007864 <d_print_comp+0x30c8>
 8007860:	f7fd f84c 	bl	80048fc <d_print_comp+0x160>
 8007864:	685b      	ldr	r3, [r3, #4]
 8007866:	781b      	ldrb	r3, [r3, #0]
 8007868:	2b3e      	cmp	r3, #62	; 0x3e
 800786a:	d001      	beq.n	8007870 <d_print_comp+0x30d4>
 800786c:	f7fd f846 	bl	80048fc <d_print_comp+0x160>
 8007870:	2680      	movs	r6, #128	; 0x80
 8007872:	0076      	lsls	r6, r6, #1
 8007874:	59a1      	ldr	r1, [r4, r6]
 8007876:	29ff      	cmp	r1, #255	; 0xff
 8007878:	d10f      	bne.n	800789a <d_print_comp+0x30fe>
 800787a:	2700      	movs	r7, #0
 800787c:	320c      	adds	r2, #12
 800787e:	5467      	strb	r7, [r4, r1]
 8007880:	33ca      	adds	r3, #202	; 0xca
 8007882:	32ff      	adds	r2, #255	; 0xff
 8007884:	58e3      	ldr	r3, [r4, r3]
 8007886:	58a2      	ldr	r2, [r4, r2]
 8007888:	0020      	movs	r0, r4
 800788a:	f001 fcb9 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 800788e:	2292      	movs	r2, #146	; 0x92
 8007890:	0052      	lsls	r2, r2, #1
 8007892:	58a3      	ldr	r3, [r4, r2]
 8007894:	3301      	adds	r3, #1
 8007896:	51a7      	str	r7, [r4, r6]
 8007898:	50a3      	str	r3, [r4, r2]
 800789a:	2380      	movs	r3, #128	; 0x80
 800789c:	005b      	lsls	r3, r3, #1
 800789e:	58e2      	ldr	r2, [r4, r3]
 80078a0:	1c51      	adds	r1, r2, #1
 80078a2:	50e1      	str	r1, [r4, r3]
 80078a4:	3bd7      	subs	r3, #215	; 0xd7
 80078a6:	54a3      	strb	r3, [r4, r2]
 80078a8:	2282      	movs	r2, #130	; 0x82
 80078aa:	0052      	lsls	r2, r2, #1
 80078ac:	54a3      	strb	r3, [r4, r2]
 80078ae:	465b      	mov	r3, fp
 80078b0:	686a      	ldr	r2, [r5, #4]
 80078b2:	685b      	ldr	r3, [r3, #4]
 80078b4:	f7fd f825 	bl	8004902 <d_print_comp+0x166>
 80078b8:	001a      	movs	r2, r3
 80078ba:	3a61      	subs	r2, #97	; 0x61
 80078bc:	2a05      	cmp	r2, #5
 80078be:	d84b      	bhi.n	8007958 <d_print_comp+0x31bc>
 80078c0:	3b57      	subs	r3, #87	; 0x57
 80078c2:	f7ff f83c 	bl	800693e <d_print_comp+0x21a2>
 80078c6:	4691      	mov	r9, r2
 80078c8:	465b      	mov	r3, fp
 80078ca:	4641      	mov	r1, r8
 80078cc:	e007      	b.n	80078de <d_print_comp+0x3142>
 80078ce:	4295      	cmp	r5, r2
 80078d0:	d102      	bne.n	80078d8 <d_print_comp+0x313c>
 80078d2:	455b      	cmp	r3, fp
 80078d4:	d000      	beq.n	80078d8 <d_print_comp+0x313c>
 80078d6:	e628      	b.n	800752a <d_print_comp+0x2d8e>
 80078d8:	685b      	ldr	r3, [r3, #4]
 80078da:	2b00      	cmp	r3, #0
 80078dc:	d003      	beq.n	80078e6 <d_print_comp+0x314a>
 80078de:	681a      	ldr	r2, [r3, #0]
 80078e0:	4291      	cmp	r1, r2
 80078e2:	d1f4      	bne.n	80078ce <d_print_comp+0x3132>
 80078e4:	e621      	b.n	800752a <d_print_comp+0x2d8e>
 80078e6:	2388      	movs	r3, #136	; 0x88
 80078e8:	005b      	lsls	r3, r3, #1
 80078ea:	58e2      	ldr	r2, [r4, r3]
 80078ec:	9200      	str	r2, [sp, #0]
 80078ee:	464a      	mov	r2, r9
 80078f0:	6852      	ldr	r2, [r2, #4]
 80078f2:	3108      	adds	r1, #8
 80078f4:	50e2      	str	r2, [r4, r3]
 80078f6:	0020      	movs	r0, r4
 80078f8:	f7fa fe92 	bl	8002620 <d_lookup_template_argument.isra.10>
 80078fc:	2701      	movs	r7, #1
 80078fe:	4680      	mov	r8, r0
 8007900:	2800      	cmp	r0, #0
 8007902:	d000      	beq.n	8007906 <d_print_comp+0x316a>
 8007904:	e618      	b.n	8007538 <d_print_comp+0x2d9c>
 8007906:	e62e      	b.n	8007566 <d_print_comp+0x2dca>
 8007908:	0039      	movs	r1, r7
 800790a:	0020      	movs	r0, r4
 800790c:	f7fa fe9e 	bl	800264c <d_find_pack>
 8007910:	4653      	mov	r3, sl
 8007912:	e007      	b.n	8007924 <d_print_comp+0x3188>
 8007914:	7802      	ldrb	r2, [r0, #0]
 8007916:	2a2f      	cmp	r2, #47	; 0x2f
 8007918:	d106      	bne.n	8007928 <d_print_comp+0x318c>
 800791a:	6882      	ldr	r2, [r0, #8]
 800791c:	2a00      	cmp	r2, #0
 800791e:	d003      	beq.n	8007928 <d_print_comp+0x318c>
 8007920:	68c0      	ldr	r0, [r0, #12]
 8007922:	3301      	adds	r3, #1
 8007924:	2800      	cmp	r0, #0
 8007926:	d1f5      	bne.n	8007914 <d_print_comp+0x3178>
 8007928:	0019      	movs	r1, r3
 800792a:	0020      	movs	r0, r4
 800792c:	f7fa ff28 	bl	8002780 <d_append_num>
 8007930:	465b      	mov	r3, fp
 8007932:	686a      	ldr	r2, [r5, #4]
 8007934:	685b      	ldr	r3, [r3, #4]
 8007936:	f7fc ffe4 	bl	8004902 <d_print_comp+0x166>
 800793a:	68ba      	ldr	r2, [r7, #8]
 800793c:	0031      	movs	r1, r6
 800793e:	0020      	movs	r0, r4
 8007940:	f001 f874 	bl	8008a2c <d_print_subexpr>
 8007944:	4642      	mov	r2, r8
 8007946:	0031      	movs	r1, r6
 8007948:	0020      	movs	r0, r4
 800794a:	f001 f82b 	bl	80089a4 <d_print_expr_op>
 800794e:	465b      	mov	r3, fp
 8007950:	686a      	ldr	r2, [r5, #4]
 8007952:	685b      	ldr	r3, [r3, #4]
 8007954:	f7fc ffd5 	bl	8004902 <d_print_comp+0x166>
 8007958:	4664      	mov	r4, ip
 800795a:	468a      	mov	sl, r1
 800795c:	59a1      	ldr	r1, [r4, r6]
 800795e:	28ff      	cmp	r0, #255	; 0xff
 8007960:	d901      	bls.n	8007966 <d_print_comp+0x31ca>
 8007962:	f7fe ffb9 	bl	80068d8 <d_print_comp+0x213c>
 8007966:	2b5f      	cmp	r3, #95	; 0x5f
 8007968:	d001      	beq.n	800796e <d_print_comp+0x31d2>
 800796a:	f7fe ffb5 	bl	80068d8 <d_print_comp+0x213c>
 800796e:	0605      	lsls	r5, r0, #24
 8007970:	0e2d      	lsrs	r5, r5, #24
 8007972:	29ff      	cmp	r1, #255	; 0xff
 8007974:	d110      	bne.n	8007998 <d_print_comp+0x31fc>
 8007976:	2700      	movs	r7, #0
 8007978:	2384      	movs	r3, #132	; 0x84
 800797a:	2286      	movs	r2, #134	; 0x86
 800797c:	5467      	strb	r7, [r4, r1]
 800797e:	005b      	lsls	r3, r3, #1
 8007980:	0052      	lsls	r2, r2, #1
 8007982:	58e3      	ldr	r3, [r4, r3]
 8007984:	58a2      	ldr	r2, [r4, r2]
 8007986:	4660      	mov	r0, ip
 8007988:	f001 fc3a 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 800798c:	2292      	movs	r2, #146	; 0x92
 800798e:	0052      	lsls	r2, r2, #1
 8007990:	58a3      	ldr	r3, [r4, r2]
 8007992:	3301      	adds	r3, #1
 8007994:	51a7      	str	r7, [r4, r6]
 8007996:	50a3      	str	r3, [r4, r2]
 8007998:	59a3      	ldr	r3, [r4, r6]
 800799a:	1c5a      	adds	r2, r3, #1
 800799c:	51a2      	str	r2, [r4, r6]
 800799e:	54e5      	strb	r5, [r4, r3]
 80079a0:	2382      	movs	r3, #130	; 0x82
 80079a2:	005b      	lsls	r3, r3, #1
 80079a4:	54e5      	strb	r5, [r4, r3]
 80079a6:	4657      	mov	r7, sl
 80079a8:	f7fe ffb2 	bl	8006910 <d_print_comp+0x2174>
 80079ac:	4642      	mov	r2, r8
 80079ae:	0031      	movs	r1, r6
 80079b0:	0020      	movs	r0, r4
 80079b2:	f000 fff7 	bl	80089a4 <d_print_expr_op>
 80079b6:	f7fd fd4f 	bl	8005458 <d_print_comp+0xcbc>
 80079ba:	465b      	mov	r3, fp
 80079bc:	686a      	ldr	r2, [r5, #4]
 80079be:	685b      	ldr	r3, [r3, #4]
 80079c0:	f7fc ff9f 	bl	8004902 <d_print_comp+0x166>
 80079c4:	4643      	mov	r3, r8
 80079c6:	689b      	ldr	r3, [r3, #8]
 80079c8:	4698      	mov	r8, r3
 80079ca:	2b00      	cmp	r3, #0
 80079cc:	d101      	bne.n	80079d2 <d_print_comp+0x3236>
 80079ce:	f7fe f9c5 	bl	8005d5c <d_print_comp+0x15c0>
 80079d2:	e4a0      	b.n	8007316 <d_print_comp+0x2b7a>
 80079d4:	4644      	mov	r4, r8
 80079d6:	f7fe f9c1 	bl	8005d5c <d_print_comp+0x15c0>
 80079da:	464a      	mov	r2, r9
 80079dc:	0031      	movs	r1, r6
 80079de:	0020      	movs	r0, r4
 80079e0:	f001 f824 	bl	8008a2c <d_print_subexpr>
 80079e4:	4652      	mov	r2, sl
 80079e6:	0031      	movs	r1, r6
 80079e8:	0020      	movs	r0, r4
 80079ea:	f000 ffdb 	bl	80089a4 <d_print_expr_op>
 80079ee:	9a00      	ldr	r2, [sp, #0]
 80079f0:	0031      	movs	r1, r6
 80079f2:	0020      	movs	r0, r4
 80079f4:	f001 f81a 	bl	8008a2c <d_print_subexpr>
 80079f8:	2203      	movs	r2, #3
 80079fa:	4968      	ldr	r1, [pc, #416]	; (8007b9c <d_print_comp+0x3400>)
 80079fc:	0020      	movs	r0, r4
 80079fe:	f7fa fb7b 	bl	80020f8 <d_append_buffer>
 8007a02:	003a      	movs	r2, r7
 8007a04:	0031      	movs	r1, r6
 8007a06:	0020      	movs	r0, r4
 8007a08:	f001 f810 	bl	8008a2c <d_print_subexpr>
 8007a0c:	465b      	mov	r3, fp
 8007a0e:	686a      	ldr	r2, [r5, #4]
 8007a10:	685b      	ldr	r3, [r3, #4]
 8007a12:	f7fc ff76 	bl	8004902 <d_print_comp+0x166>
 8007a16:	465b      	mov	r3, fp
 8007a18:	686a      	ldr	r2, [r5, #4]
 8007a1a:	685b      	ldr	r3, [r3, #4]
 8007a1c:	f7fc ff71 	bl	8004902 <d_print_comp+0x166>
 8007a20:	68d3      	ldr	r3, [r2, #12]
 8007a22:	781b      	ldrb	r3, [r3, #0]
 8007a24:	2b29      	cmp	r3, #41	; 0x29
 8007a26:	d003      	beq.n	8007a30 <d_print_comp+0x3294>
 8007a28:	238c      	movs	r3, #140	; 0x8c
 8007a2a:	2101      	movs	r1, #1
 8007a2c:	005b      	lsls	r3, r3, #1
 8007a2e:	50e1      	str	r1, [r4, r3]
 8007a30:	6892      	ldr	r2, [r2, #8]
 8007a32:	0031      	movs	r1, r6
 8007a34:	0020      	movs	r0, r4
 8007a36:	f000 fff9 	bl	8008a2c <d_print_subexpr>
 8007a3a:	f7fc ff08 	bl	800484e <d_print_comp+0xb2>
 8007a3e:	2202      	movs	r2, #2
 8007a40:	4957      	ldr	r1, [pc, #348]	; (8007ba0 <d_print_comp+0x3404>)
 8007a42:	0020      	movs	r0, r4
 8007a44:	f7fa fb58 	bl	80020f8 <d_append_buffer>
 8007a48:	465b      	mov	r3, fp
 8007a4a:	686a      	ldr	r2, [r5, #4]
 8007a4c:	685b      	ldr	r3, [r3, #4]
 8007a4e:	f7fc ff58 	bl	8004902 <d_print_comp+0x166>
 8007a52:	2202      	movs	r2, #2
 8007a54:	4953      	ldr	r1, [pc, #332]	; (8007ba4 <d_print_comp+0x3408>)
 8007a56:	0020      	movs	r0, r4
 8007a58:	f7fa fb4e 	bl	80020f8 <d_append_buffer>
 8007a5c:	465b      	mov	r3, fp
 8007a5e:	686a      	ldr	r2, [r5, #4]
 8007a60:	685b      	ldr	r3, [r3, #4]
 8007a62:	f7fc ff4e 	bl	8004902 <d_print_comp+0x166>
 8007a66:	2680      	movs	r6, #128	; 0x80
 8007a68:	0076      	lsls	r6, r6, #1
 8007a6a:	59a1      	ldr	r1, [r4, r6]
 8007a6c:	29ff      	cmp	r1, #255	; 0xff
 8007a6e:	d110      	bne.n	8007a92 <d_print_comp+0x32f6>
 8007a70:	2700      	movs	r7, #0
 8007a72:	2384      	movs	r3, #132	; 0x84
 8007a74:	2286      	movs	r2, #134	; 0x86
 8007a76:	5467      	strb	r7, [r4, r1]
 8007a78:	005b      	lsls	r3, r3, #1
 8007a7a:	0052      	lsls	r2, r2, #1
 8007a7c:	58e3      	ldr	r3, [r4, r3]
 8007a7e:	58a2      	ldr	r2, [r4, r2]
 8007a80:	0020      	movs	r0, r4
 8007a82:	f001 fbbd 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8007a86:	2292      	movs	r2, #146	; 0x92
 8007a88:	0052      	lsls	r2, r2, #1
 8007a8a:	58a3      	ldr	r3, [r4, r2]
 8007a8c:	3301      	adds	r3, #1
 8007a8e:	51a7      	str	r7, [r4, r6]
 8007a90:	50a3      	str	r3, [r4, r2]
 8007a92:	2380      	movs	r3, #128	; 0x80
 8007a94:	005b      	lsls	r3, r3, #1
 8007a96:	58e2      	ldr	r2, [r4, r3]
 8007a98:	1c51      	adds	r1, r2, #1
 8007a9a:	50e1      	str	r1, [r4, r3]
 8007a9c:	3b94      	subs	r3, #148	; 0x94
 8007a9e:	54a3      	strb	r3, [r4, r2]
 8007aa0:	2282      	movs	r2, #130	; 0x82
 8007aa2:	0052      	lsls	r2, r2, #1
 8007aa4:	54a3      	strb	r3, [r4, r2]
 8007aa6:	465b      	mov	r3, fp
 8007aa8:	686a      	ldr	r2, [r5, #4]
 8007aaa:	685b      	ldr	r3, [r3, #4]
 8007aac:	f7fc ff29 	bl	8004902 <d_print_comp+0x166>
 8007ab0:	2680      	movs	r6, #128	; 0x80
 8007ab2:	0076      	lsls	r6, r6, #1
 8007ab4:	59a1      	ldr	r1, [r4, r6]
 8007ab6:	29ff      	cmp	r1, #255	; 0xff
 8007ab8:	d110      	bne.n	8007adc <d_print_comp+0x3340>
 8007aba:	2700      	movs	r7, #0
 8007abc:	2384      	movs	r3, #132	; 0x84
 8007abe:	2286      	movs	r2, #134	; 0x86
 8007ac0:	5467      	strb	r7, [r4, r1]
 8007ac2:	005b      	lsls	r3, r3, #1
 8007ac4:	0052      	lsls	r2, r2, #1
 8007ac6:	58e3      	ldr	r3, [r4, r3]
 8007ac8:	58a2      	ldr	r2, [r4, r2]
 8007aca:	0020      	movs	r0, r4
 8007acc:	f001 fb98 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8007ad0:	2292      	movs	r2, #146	; 0x92
 8007ad2:	0052      	lsls	r2, r2, #1
 8007ad4:	58a3      	ldr	r3, [r4, r2]
 8007ad6:	3301      	adds	r3, #1
 8007ad8:	51a7      	str	r7, [r4, r6]
 8007ada:	50a3      	str	r3, [r4, r2]
 8007adc:	2380      	movs	r3, #128	; 0x80
 8007ade:	005b      	lsls	r3, r3, #1
 8007ae0:	58e2      	ldr	r2, [r4, r3]
 8007ae2:	1c51      	adds	r1, r2, #1
 8007ae4:	50e1      	str	r1, [r4, r3]
 8007ae6:	3b8b      	subs	r3, #139	; 0x8b
 8007ae8:	54a3      	strb	r3, [r4, r2]
 8007aea:	2282      	movs	r2, #130	; 0x82
 8007aec:	0052      	lsls	r2, r2, #1
 8007aee:	54a3      	strb	r3, [r4, r2]
 8007af0:	465b      	mov	r3, fp
 8007af2:	686a      	ldr	r2, [r5, #4]
 8007af4:	685b      	ldr	r3, [r3, #4]
 8007af6:	f7fc ff04 	bl	8004902 <d_print_comp+0x166>
 8007afa:	2203      	movs	r2, #3
 8007afc:	492a      	ldr	r1, [pc, #168]	; (8007ba8 <d_print_comp+0x340c>)
 8007afe:	0020      	movs	r0, r4
 8007b00:	f7fa fafa 	bl	80020f8 <d_append_buffer>
 8007b04:	465b      	mov	r3, fp
 8007b06:	686a      	ldr	r2, [r5, #4]
 8007b08:	685b      	ldr	r3, [r3, #4]
 8007b0a:	f7fc fefa 	bl	8004902 <d_print_comp+0x166>
 8007b0e:	465b      	mov	r3, fp
 8007b10:	686a      	ldr	r2, [r5, #4]
 8007b12:	685b      	ldr	r3, [r3, #4]
 8007b14:	f7fc fef5 	bl	8004902 <d_print_comp+0x166>
 8007b18:	33c3      	adds	r3, #195	; 0xc3
 8007b1a:	58e1      	ldr	r1, [r4, r3]
 8007b1c:	4699      	mov	r9, r3
 8007b1e:	29ff      	cmp	r1, #255	; 0xff
 8007b20:	d112      	bne.n	8007b48 <d_print_comp+0x33ac>
 8007b22:	4643      	mov	r3, r8
 8007b24:	2286      	movs	r2, #134	; 0x86
 8007b26:	5463      	strb	r3, [r4, r1]
 8007b28:	2384      	movs	r3, #132	; 0x84
 8007b2a:	0052      	lsls	r2, r2, #1
 8007b2c:	005b      	lsls	r3, r3, #1
 8007b2e:	58e3      	ldr	r3, [r4, r3]
 8007b30:	58a2      	ldr	r2, [r4, r2]
 8007b32:	0020      	movs	r0, r4
 8007b34:	f001 fb64 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8007b38:	464b      	mov	r3, r9
 8007b3a:	4642      	mov	r2, r8
 8007b3c:	50e2      	str	r2, [r4, r3]
 8007b3e:	2292      	movs	r2, #146	; 0x92
 8007b40:	0052      	lsls	r2, r2, #1
 8007b42:	58a3      	ldr	r3, [r4, r2]
 8007b44:	3301      	adds	r3, #1
 8007b46:	50a3      	str	r3, [r4, r2]
 8007b48:	2380      	movs	r3, #128	; 0x80
 8007b4a:	005b      	lsls	r3, r3, #1
 8007b4c:	58e2      	ldr	r2, [r4, r3]
 8007b4e:	1c51      	adds	r1, r2, #1
 8007b50:	50e1      	str	r1, [r4, r3]
 8007b52:	3bd3      	subs	r3, #211	; 0xd3
 8007b54:	54a3      	strb	r3, [r4, r2]
 8007b56:	2282      	movs	r2, #130	; 0x82
 8007b58:	0052      	lsls	r2, r2, #1
 8007b5a:	54a3      	strb	r3, [r4, r2]
 8007b5c:	e5ee      	b.n	800773c <d_print_comp+0x2fa0>
 8007b5e:	2300      	movs	r3, #0
 8007b60:	18f6      	adds	r6, r6, r3
 8007b62:	e51a      	b.n	800759a <d_print_comp+0x2dfe>
 8007b64:	464a      	mov	r2, r9
 8007b66:	0031      	movs	r1, r6
 8007b68:	0020      	movs	r0, r4
 8007b6a:	f000 ff1b 	bl	80089a4 <d_print_expr_op>
 8007b6e:	e59f      	b.n	80076b0 <d_print_comp+0x2f14>
 8007b70:	4664      	mov	r4, ip
 8007b72:	f7fe feb1 	bl	80068d8 <d_print_comp+0x213c>
 8007b76:	2205      	movs	r2, #5
 8007b78:	490c      	ldr	r1, [pc, #48]	; (8007bac <d_print_comp+0x3410>)
 8007b7a:	0020      	movs	r0, r4
 8007b7c:	f7fa fabc 	bl	80020f8 <d_append_buffer>
 8007b80:	465b      	mov	r3, fp
 8007b82:	686a      	ldr	r2, [r5, #4]
 8007b84:	685b      	ldr	r3, [r3, #4]
 8007b86:	f7fc febc 	bl	8004902 <d_print_comp+0x166>
 8007b8a:	4663      	mov	r3, ip
 8007b8c:	228c      	movs	r2, #140	; 0x8c
 8007b8e:	2101      	movs	r1, #1
 8007b90:	0052      	lsls	r2, r2, #1
 8007b92:	50a1      	str	r1, [r4, r2]
 8007b94:	686a      	ldr	r2, [r5, #4]
 8007b96:	f7fc feb4 	bl	8004902 <d_print_comp+0x166>
 8007b9a:	46c0      	nop			; (mov r8, r8)
 8007b9c:	08026fa0 	.word	0x08026fa0
 8007ba0:	08026fb0 	.word	0x08026fb0
 8007ba4:	08026fac 	.word	0x08026fac
 8007ba8:	08026fb4 	.word	0x08026fb4
 8007bac:	08026fb8 	.word	0x08026fb8

08007bb0 <d_print_mod>:
 8007bb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007bb2:	464e      	mov	r6, r9
 8007bb4:	4645      	mov	r5, r8
 8007bb6:	46de      	mov	lr, fp
 8007bb8:	4657      	mov	r7, sl
 8007bba:	7813      	ldrb	r3, [r2, #0]
 8007bbc:	3b03      	subs	r3, #3
 8007bbe:	061b      	lsls	r3, r3, #24
 8007bc0:	b5e0      	push	{r5, r6, r7, lr}
 8007bc2:	0004      	movs	r4, r0
 8007bc4:	000e      	movs	r6, r1
 8007bc6:	0015      	movs	r5, r2
 8007bc8:	0e1b      	lsrs	r3, r3, #24
 8007bca:	2b4c      	cmp	r3, #76	; 0x4c
 8007bcc:	d900      	bls.n	8007bd0 <d_print_mod+0x20>
 8007bce:	e2f6      	b.n	80081be <d_print_mod+0x60e>
 8007bd0:	4ad7      	ldr	r2, [pc, #860]	; (8007f30 <d_print_mod+0x380>)
 8007bd2:	009b      	lsls	r3, r3, #2
 8007bd4:	58d3      	ldr	r3, [r2, r3]
 8007bd6:	469f      	mov	pc, r3
 8007bd8:	4ad6      	ldr	r2, [pc, #856]	; (8007f34 <d_print_mod+0x384>)
 8007bda:	4691      	mov	r9, r2
 8007bdc:	2286      	movs	r2, #134	; 0x86
 8007bde:	2380      	movs	r3, #128	; 0x80
 8007be0:	0052      	lsls	r2, r2, #1
 8007be2:	005b      	lsls	r3, r3, #1
 8007be4:	4693      	mov	fp, r2
 8007be6:	3a04      	subs	r2, #4
 8007be8:	58c3      	ldr	r3, [r0, r3]
 8007bea:	2700      	movs	r7, #0
 8007bec:	4692      	mov	sl, r2
 8007bee:	e01c      	b.n	8007c2a <d_print_mod+0x7a>
 8007bf0:	2200      	movs	r2, #0
 8007bf2:	54e2      	strb	r2, [r4, r3]
 8007bf4:	465b      	mov	r3, fp
 8007bf6:	58e2      	ldr	r2, [r4, r3]
 8007bf8:	4653      	mov	r3, sl
 8007bfa:	21ff      	movs	r1, #255	; 0xff
 8007bfc:	58e3      	ldr	r3, [r4, r3]
 8007bfe:	0020      	movs	r0, r4
 8007c00:	f001 fafe 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8007c04:	2292      	movs	r2, #146	; 0x92
 8007c06:	0052      	lsls	r2, r2, #1
 8007c08:	58a3      	ldr	r3, [r4, r2]
 8007c0a:	3301      	adds	r3, #1
 8007c0c:	50a3      	str	r3, [r4, r2]
 8007c0e:	2301      	movs	r3, #1
 8007c10:	2200      	movs	r2, #0
 8007c12:	2180      	movs	r1, #128	; 0x80
 8007c14:	0049      	lsls	r1, r1, #1
 8007c16:	5063      	str	r3, [r4, r1]
 8007c18:	4641      	mov	r1, r8
 8007c1a:	54a1      	strb	r1, [r4, r2]
 8007c1c:	2282      	movs	r2, #130	; 0x82
 8007c1e:	3701      	adds	r7, #1
 8007c20:	0052      	lsls	r2, r2, #1
 8007c22:	54a1      	strb	r1, [r4, r2]
 8007c24:	2f06      	cmp	r7, #6
 8007c26:	d100      	bne.n	8007c2a <d_print_mod+0x7a>
 8007c28:	e2cf      	b.n	80081ca <d_print_mod+0x61a>
 8007c2a:	464a      	mov	r2, r9
 8007c2c:	5dd2      	ldrb	r2, [r2, r7]
 8007c2e:	4690      	mov	r8, r2
 8007c30:	2bff      	cmp	r3, #255	; 0xff
 8007c32:	d0dd      	beq.n	8007bf0 <d_print_mod+0x40>
 8007c34:	001a      	movs	r2, r3
 8007c36:	3301      	adds	r3, #1
 8007c38:	e7eb      	b.n	8007c12 <d_print_mod+0x62>
 8007c3a:	68aa      	ldr	r2, [r5, #8]
 8007c3c:	f7fc fdae 	bl	800479c <d_print_comp>
 8007c40:	bc3c      	pop	{r2, r3, r4, r5}
 8007c42:	4690      	mov	r8, r2
 8007c44:	4699      	mov	r9, r3
 8007c46:	46a2      	mov	sl, r4
 8007c48:	46ab      	mov	fp, r5
 8007c4a:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007c4c:	bc01      	pop	{r0}
 8007c4e:	4700      	bx	r0
 8007c50:	2200      	movs	r2, #0
 8007c52:	2380      	movs	r3, #128	; 0x80
 8007c54:	4692      	mov	sl, r2
 8007c56:	320d      	adds	r2, #13
 8007c58:	32ff      	adds	r2, #255	; 0xff
 8007c5a:	005b      	lsls	r3, r3, #1
 8007c5c:	4691      	mov	r9, r2
 8007c5e:	3a04      	subs	r2, #4
 8007c60:	58c3      	ldr	r3, [r0, r3]
 8007c62:	2500      	movs	r5, #0
 8007c64:	4fb4      	ldr	r7, [pc, #720]	; (8007f38 <d_print_mod+0x388>)
 8007c66:	4690      	mov	r8, r2
 8007c68:	e01a      	b.n	8007ca0 <d_print_mod+0xf0>
 8007c6a:	4652      	mov	r2, sl
 8007c6c:	54e2      	strb	r2, [r4, r3]
 8007c6e:	464b      	mov	r3, r9
 8007c70:	58e2      	ldr	r2, [r4, r3]
 8007c72:	4643      	mov	r3, r8
 8007c74:	21ff      	movs	r1, #255	; 0xff
 8007c76:	58e3      	ldr	r3, [r4, r3]
 8007c78:	0020      	movs	r0, r4
 8007c7a:	f001 fac1 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8007c7e:	2292      	movs	r2, #146	; 0x92
 8007c80:	0052      	lsls	r2, r2, #1
 8007c82:	58a3      	ldr	r3, [r4, r2]
 8007c84:	3301      	adds	r3, #1
 8007c86:	50a3      	str	r3, [r4, r2]
 8007c88:	2301      	movs	r3, #1
 8007c8a:	2200      	movs	r2, #0
 8007c8c:	2180      	movs	r1, #128	; 0x80
 8007c8e:	0049      	lsls	r1, r1, #1
 8007c90:	5063      	str	r3, [r4, r1]
 8007c92:	54a6      	strb	r6, [r4, r2]
 8007c94:	2282      	movs	r2, #130	; 0x82
 8007c96:	3501      	adds	r5, #1
 8007c98:	0052      	lsls	r2, r2, #1
 8007c9a:	54a6      	strb	r6, [r4, r2]
 8007c9c:	2d09      	cmp	r5, #9
 8007c9e:	d0cf      	beq.n	8007c40 <d_print_mod+0x90>
 8007ca0:	5d7e      	ldrb	r6, [r7, r5]
 8007ca2:	2bff      	cmp	r3, #255	; 0xff
 8007ca4:	d0e1      	beq.n	8007c6a <d_print_mod+0xba>
 8007ca6:	001a      	movs	r2, r3
 8007ca8:	3301      	adds	r3, #1
 8007caa:	e7ef      	b.n	8007c8c <d_print_mod+0xdc>
 8007cac:	2200      	movs	r2, #0
 8007cae:	2380      	movs	r3, #128	; 0x80
 8007cb0:	4692      	mov	sl, r2
 8007cb2:	320d      	adds	r2, #13
 8007cb4:	32ff      	adds	r2, #255	; 0xff
 8007cb6:	005b      	lsls	r3, r3, #1
 8007cb8:	4691      	mov	r9, r2
 8007cba:	3a04      	subs	r2, #4
 8007cbc:	58c3      	ldr	r3, [r0, r3]
 8007cbe:	2500      	movs	r5, #0
 8007cc0:	4f9e      	ldr	r7, [pc, #632]	; (8007f3c <d_print_mod+0x38c>)
 8007cc2:	4690      	mov	r8, r2
 8007cc4:	e01a      	b.n	8007cfc <d_print_mod+0x14c>
 8007cc6:	4652      	mov	r2, sl
 8007cc8:	54e2      	strb	r2, [r4, r3]
 8007cca:	464b      	mov	r3, r9
 8007ccc:	58e2      	ldr	r2, [r4, r3]
 8007cce:	4643      	mov	r3, r8
 8007cd0:	21ff      	movs	r1, #255	; 0xff
 8007cd2:	58e3      	ldr	r3, [r4, r3]
 8007cd4:	0020      	movs	r0, r4
 8007cd6:	f001 fa93 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8007cda:	2292      	movs	r2, #146	; 0x92
 8007cdc:	0052      	lsls	r2, r2, #1
 8007cde:	58a3      	ldr	r3, [r4, r2]
 8007ce0:	3301      	adds	r3, #1
 8007ce2:	50a3      	str	r3, [r4, r2]
 8007ce4:	2301      	movs	r3, #1
 8007ce6:	2200      	movs	r2, #0
 8007ce8:	2180      	movs	r1, #128	; 0x80
 8007cea:	0049      	lsls	r1, r1, #1
 8007cec:	5063      	str	r3, [r4, r1]
 8007cee:	54a6      	strb	r6, [r4, r2]
 8007cf0:	2282      	movs	r2, #130	; 0x82
 8007cf2:	3501      	adds	r5, #1
 8007cf4:	0052      	lsls	r2, r2, #1
 8007cf6:	54a6      	strb	r6, [r4, r2]
 8007cf8:	2d09      	cmp	r5, #9
 8007cfa:	d0a1      	beq.n	8007c40 <d_print_mod+0x90>
 8007cfc:	5d7e      	ldrb	r6, [r7, r5]
 8007cfe:	2bff      	cmp	r3, #255	; 0xff
 8007d00:	d0e1      	beq.n	8007cc6 <d_print_mod+0x116>
 8007d02:	001a      	movs	r2, r3
 8007d04:	3301      	adds	r3, #1
 8007d06:	e7ef      	b.n	8007ce8 <d_print_mod+0x138>
 8007d08:	2200      	movs	r2, #0
 8007d0a:	2380      	movs	r3, #128	; 0x80
 8007d0c:	4692      	mov	sl, r2
 8007d0e:	320d      	adds	r2, #13
 8007d10:	32ff      	adds	r2, #255	; 0xff
 8007d12:	005b      	lsls	r3, r3, #1
 8007d14:	4691      	mov	r9, r2
 8007d16:	3a04      	subs	r2, #4
 8007d18:	58c3      	ldr	r3, [r0, r3]
 8007d1a:	2500      	movs	r5, #0
 8007d1c:	4f88      	ldr	r7, [pc, #544]	; (8007f40 <d_print_mod+0x390>)
 8007d1e:	4690      	mov	r8, r2
 8007d20:	e01b      	b.n	8007d5a <d_print_mod+0x1aa>
 8007d22:	4652      	mov	r2, sl
 8007d24:	54e2      	strb	r2, [r4, r3]
 8007d26:	464b      	mov	r3, r9
 8007d28:	58e2      	ldr	r2, [r4, r3]
 8007d2a:	4643      	mov	r3, r8
 8007d2c:	21ff      	movs	r1, #255	; 0xff
 8007d2e:	58e3      	ldr	r3, [r4, r3]
 8007d30:	0020      	movs	r0, r4
 8007d32:	f001 fa65 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8007d36:	2292      	movs	r2, #146	; 0x92
 8007d38:	0052      	lsls	r2, r2, #1
 8007d3a:	58a3      	ldr	r3, [r4, r2]
 8007d3c:	3301      	adds	r3, #1
 8007d3e:	50a3      	str	r3, [r4, r2]
 8007d40:	2301      	movs	r3, #1
 8007d42:	2200      	movs	r2, #0
 8007d44:	2180      	movs	r1, #128	; 0x80
 8007d46:	0049      	lsls	r1, r1, #1
 8007d48:	5063      	str	r3, [r4, r1]
 8007d4a:	54a6      	strb	r6, [r4, r2]
 8007d4c:	2282      	movs	r2, #130	; 0x82
 8007d4e:	3501      	adds	r5, #1
 8007d50:	0052      	lsls	r2, r2, #1
 8007d52:	54a6      	strb	r6, [r4, r2]
 8007d54:	2d06      	cmp	r5, #6
 8007d56:	d100      	bne.n	8007d5a <d_print_mod+0x1aa>
 8007d58:	e772      	b.n	8007c40 <d_print_mod+0x90>
 8007d5a:	5d7e      	ldrb	r6, [r7, r5]
 8007d5c:	2bff      	cmp	r3, #255	; 0xff
 8007d5e:	d0e0      	beq.n	8007d22 <d_print_mod+0x172>
 8007d60:	001a      	movs	r2, r3
 8007d62:	3301      	adds	r3, #1
 8007d64:	e7ee      	b.n	8007d44 <d_print_mod+0x194>
 8007d66:	2580      	movs	r5, #128	; 0x80
 8007d68:	006d      	lsls	r5, r5, #1
 8007d6a:	5943      	ldr	r3, [r0, r5]
 8007d6c:	2bff      	cmp	r3, #255	; 0xff
 8007d6e:	d10e      	bne.n	8007d8e <d_print_mod+0x1de>
 8007d70:	2600      	movs	r6, #0
 8007d72:	54c6      	strb	r6, [r0, r3]
 8007d74:	330d      	adds	r3, #13
 8007d76:	58c2      	ldr	r2, [r0, r3]
 8007d78:	3b04      	subs	r3, #4
 8007d7a:	58c3      	ldr	r3, [r0, r3]
 8007d7c:	21ff      	movs	r1, #255	; 0xff
 8007d7e:	f001 fa3f 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8007d82:	2292      	movs	r2, #146	; 0x92
 8007d84:	0052      	lsls	r2, r2, #1
 8007d86:	58a3      	ldr	r3, [r4, r2]
 8007d88:	3301      	adds	r3, #1
 8007d8a:	5166      	str	r6, [r4, r5]
 8007d8c:	50a3      	str	r3, [r4, r2]
 8007d8e:	2280      	movs	r2, #128	; 0x80
 8007d90:	0052      	lsls	r2, r2, #1
 8007d92:	58a1      	ldr	r1, [r4, r2]
 8007d94:	1c4b      	adds	r3, r1, #1
 8007d96:	50a3      	str	r3, [r4, r2]
 8007d98:	3ae0      	subs	r2, #224	; 0xe0
 8007d9a:	5462      	strb	r2, [r4, r1]
 8007d9c:	2182      	movs	r1, #130	; 0x82
 8007d9e:	0049      	lsls	r1, r1, #1
 8007da0:	5462      	strb	r2, [r4, r1]
 8007da2:	e069      	b.n	8007e78 <d_print_mod+0x2c8>
 8007da4:	2580      	movs	r5, #128	; 0x80
 8007da6:	006d      	lsls	r5, r5, #1
 8007da8:	5943      	ldr	r3, [r0, r5]
 8007daa:	2bff      	cmp	r3, #255	; 0xff
 8007dac:	d10e      	bne.n	8007dcc <d_print_mod+0x21c>
 8007dae:	2600      	movs	r6, #0
 8007db0:	54c6      	strb	r6, [r0, r3]
 8007db2:	330d      	adds	r3, #13
 8007db4:	58c2      	ldr	r2, [r0, r3]
 8007db6:	3b04      	subs	r3, #4
 8007db8:	58c3      	ldr	r3, [r0, r3]
 8007dba:	21ff      	movs	r1, #255	; 0xff
 8007dbc:	f001 fa20 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8007dc0:	2292      	movs	r2, #146	; 0x92
 8007dc2:	0052      	lsls	r2, r2, #1
 8007dc4:	58a3      	ldr	r3, [r4, r2]
 8007dc6:	3301      	adds	r3, #1
 8007dc8:	5166      	str	r6, [r4, r5]
 8007dca:	50a3      	str	r3, [r4, r2]
 8007dcc:	2280      	movs	r2, #128	; 0x80
 8007dce:	0052      	lsls	r2, r2, #1
 8007dd0:	58a1      	ldr	r1, [r4, r2]
 8007dd2:	1c4b      	adds	r3, r1, #1
 8007dd4:	50a3      	str	r3, [r4, r2]
 8007dd6:	3ae0      	subs	r2, #224	; 0xe0
 8007dd8:	5462      	strb	r2, [r4, r1]
 8007dda:	2182      	movs	r1, #130	; 0x82
 8007ddc:	0049      	lsls	r1, r1, #1
 8007dde:	5462      	strb	r2, [r4, r1]
 8007de0:	e06b      	b.n	8007eba <d_print_mod+0x30a>
 8007de2:	2780      	movs	r7, #128	; 0x80
 8007de4:	007f      	lsls	r7, r7, #1
 8007de6:	59c3      	ldr	r3, [r0, r7]
 8007de8:	2bff      	cmp	r3, #255	; 0xff
 8007dea:	d110      	bne.n	8007e0e <d_print_mod+0x25e>
 8007dec:	2200      	movs	r2, #0
 8007dee:	4690      	mov	r8, r2
 8007df0:	54c2      	strb	r2, [r0, r3]
 8007df2:	330d      	adds	r3, #13
 8007df4:	58c2      	ldr	r2, [r0, r3]
 8007df6:	3b04      	subs	r3, #4
 8007df8:	58c3      	ldr	r3, [r0, r3]
 8007dfa:	21ff      	movs	r1, #255	; 0xff
 8007dfc:	f001 fa00 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8007e00:	2292      	movs	r2, #146	; 0x92
 8007e02:	4643      	mov	r3, r8
 8007e04:	0052      	lsls	r2, r2, #1
 8007e06:	51e3      	str	r3, [r4, r7]
 8007e08:	58a3      	ldr	r3, [r4, r2]
 8007e0a:	3301      	adds	r3, #1
 8007e0c:	50a3      	str	r3, [r4, r2]
 8007e0e:	2380      	movs	r3, #128	; 0x80
 8007e10:	005b      	lsls	r3, r3, #1
 8007e12:	58e2      	ldr	r2, [r4, r3]
 8007e14:	1c51      	adds	r1, r2, #1
 8007e16:	50e1      	str	r1, [r4, r3]
 8007e18:	3be0      	subs	r3, #224	; 0xe0
 8007e1a:	54a3      	strb	r3, [r4, r2]
 8007e1c:	2282      	movs	r2, #130	; 0x82
 8007e1e:	0052      	lsls	r2, r2, #1
 8007e20:	54a3      	strb	r3, [r4, r2]
 8007e22:	0031      	movs	r1, r6
 8007e24:	68ea      	ldr	r2, [r5, #12]
 8007e26:	0020      	movs	r0, r4
 8007e28:	f7fc fcb8 	bl	800479c <d_print_comp>
 8007e2c:	e708      	b.n	8007c40 <d_print_mod+0x90>
 8007e2e:	2304      	movs	r3, #4
 8007e30:	401e      	ands	r6, r3
 8007e32:	d000      	beq.n	8007e36 <d_print_mod+0x286>
 8007e34:	e704      	b.n	8007c40 <d_print_mod+0x90>
 8007e36:	2580      	movs	r5, #128	; 0x80
 8007e38:	006d      	lsls	r5, r5, #1
 8007e3a:	5943      	ldr	r3, [r0, r5]
 8007e3c:	2bff      	cmp	r3, #255	; 0xff
 8007e3e:	d10d      	bne.n	8007e5c <d_print_mod+0x2ac>
 8007e40:	54c6      	strb	r6, [r0, r3]
 8007e42:	330d      	adds	r3, #13
 8007e44:	58c2      	ldr	r2, [r0, r3]
 8007e46:	3b04      	subs	r3, #4
 8007e48:	58c3      	ldr	r3, [r0, r3]
 8007e4a:	21ff      	movs	r1, #255	; 0xff
 8007e4c:	f001 f9d8 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8007e50:	2292      	movs	r2, #146	; 0x92
 8007e52:	0052      	lsls	r2, r2, #1
 8007e54:	58a3      	ldr	r3, [r4, r2]
 8007e56:	3301      	adds	r3, #1
 8007e58:	5166      	str	r6, [r4, r5]
 8007e5a:	50a3      	str	r3, [r4, r2]
 8007e5c:	2380      	movs	r3, #128	; 0x80
 8007e5e:	005b      	lsls	r3, r3, #1
 8007e60:	58e2      	ldr	r2, [r4, r3]
 8007e62:	1c51      	adds	r1, r2, #1
 8007e64:	50e1      	str	r1, [r4, r3]
 8007e66:	3bd6      	subs	r3, #214	; 0xd6
 8007e68:	54a3      	strb	r3, [r4, r2]
 8007e6a:	2282      	movs	r2, #130	; 0x82
 8007e6c:	0052      	lsls	r2, r2, #1
 8007e6e:	54a3      	strb	r3, [r4, r2]
 8007e70:	e6e6      	b.n	8007c40 <d_print_mod+0x90>
 8007e72:	2380      	movs	r3, #128	; 0x80
 8007e74:	005b      	lsls	r3, r3, #1
 8007e76:	58c3      	ldr	r3, [r0, r3]
 8007e78:	1c59      	adds	r1, r3, #1
 8007e7a:	2bff      	cmp	r3, #255	; 0xff
 8007e7c:	d111      	bne.n	8007ea2 <d_print_mod+0x2f2>
 8007e7e:	2200      	movs	r2, #0
 8007e80:	54e2      	strb	r2, [r4, r3]
 8007e82:	2386      	movs	r3, #134	; 0x86
 8007e84:	005b      	lsls	r3, r3, #1
 8007e86:	58e2      	ldr	r2, [r4, r3]
 8007e88:	3b04      	subs	r3, #4
 8007e8a:	58e3      	ldr	r3, [r4, r3]
 8007e8c:	21ff      	movs	r1, #255	; 0xff
 8007e8e:	0020      	movs	r0, r4
 8007e90:	f001 f9b6 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8007e94:	2292      	movs	r2, #146	; 0x92
 8007e96:	0052      	lsls	r2, r2, #1
 8007e98:	58a3      	ldr	r3, [r4, r2]
 8007e9a:	3301      	adds	r3, #1
 8007e9c:	50a3      	str	r3, [r4, r2]
 8007e9e:	2101      	movs	r1, #1
 8007ea0:	2300      	movs	r3, #0
 8007ea2:	2280      	movs	r2, #128	; 0x80
 8007ea4:	0052      	lsls	r2, r2, #1
 8007ea6:	50a1      	str	r1, [r4, r2]
 8007ea8:	3ada      	subs	r2, #218	; 0xda
 8007eaa:	54e2      	strb	r2, [r4, r3]
 8007eac:	2382      	movs	r3, #130	; 0x82
 8007eae:	005b      	lsls	r3, r3, #1
 8007eb0:	54e2      	strb	r2, [r4, r3]
 8007eb2:	e6c5      	b.n	8007c40 <d_print_mod+0x90>
 8007eb4:	2380      	movs	r3, #128	; 0x80
 8007eb6:	005b      	lsls	r3, r3, #1
 8007eb8:	58c3      	ldr	r3, [r0, r3]
 8007eba:	2200      	movs	r2, #0
 8007ebc:	4692      	mov	sl, r2
 8007ebe:	320d      	adds	r2, #13
 8007ec0:	32ff      	adds	r2, #255	; 0xff
 8007ec2:	4691      	mov	r9, r2
 8007ec4:	3a04      	subs	r2, #4
 8007ec6:	2500      	movs	r5, #0
 8007ec8:	4f1e      	ldr	r7, [pc, #120]	; (8007f44 <d_print_mod+0x394>)
 8007eca:	4690      	mov	r8, r2
 8007ecc:	e01b      	b.n	8007f06 <d_print_mod+0x356>
 8007ece:	4652      	mov	r2, sl
 8007ed0:	54e2      	strb	r2, [r4, r3]
 8007ed2:	464b      	mov	r3, r9
 8007ed4:	58e2      	ldr	r2, [r4, r3]
 8007ed6:	4643      	mov	r3, r8
 8007ed8:	21ff      	movs	r1, #255	; 0xff
 8007eda:	58e3      	ldr	r3, [r4, r3]
 8007edc:	0020      	movs	r0, r4
 8007ede:	f001 f98f 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8007ee2:	2292      	movs	r2, #146	; 0x92
 8007ee4:	0052      	lsls	r2, r2, #1
 8007ee6:	58a3      	ldr	r3, [r4, r2]
 8007ee8:	3301      	adds	r3, #1
 8007eea:	50a3      	str	r3, [r4, r2]
 8007eec:	2301      	movs	r3, #1
 8007eee:	2200      	movs	r2, #0
 8007ef0:	2180      	movs	r1, #128	; 0x80
 8007ef2:	0049      	lsls	r1, r1, #1
 8007ef4:	5063      	str	r3, [r4, r1]
 8007ef6:	54a6      	strb	r6, [r4, r2]
 8007ef8:	2282      	movs	r2, #130	; 0x82
 8007efa:	0052      	lsls	r2, r2, #1
 8007efc:	54a6      	strb	r6, [r4, r2]
 8007efe:	2d01      	cmp	r5, #1
 8007f00:	d100      	bne.n	8007f04 <d_print_mod+0x354>
 8007f02:	e69d      	b.n	8007c40 <d_print_mod+0x90>
 8007f04:	2501      	movs	r5, #1
 8007f06:	5d7e      	ldrb	r6, [r7, r5]
 8007f08:	2bff      	cmp	r3, #255	; 0xff
 8007f0a:	d0e0      	beq.n	8007ece <d_print_mod+0x31e>
 8007f0c:	001a      	movs	r2, r3
 8007f0e:	3301      	adds	r3, #1
 8007f10:	e7ee      	b.n	8007ef0 <d_print_mod+0x340>
 8007f12:	2200      	movs	r2, #0
 8007f14:	4d0c      	ldr	r5, [pc, #48]	; (8007f48 <d_print_mod+0x398>)
 8007f16:	2380      	movs	r3, #128	; 0x80
 8007f18:	002f      	movs	r7, r5
 8007f1a:	4692      	mov	sl, r2
 8007f1c:	320d      	adds	r2, #13
 8007f1e:	32ff      	adds	r2, #255	; 0xff
 8007f20:	005b      	lsls	r3, r3, #1
 8007f22:	4691      	mov	r9, r2
 8007f24:	3a04      	subs	r2, #4
 8007f26:	58c3      	ldr	r3, [r0, r3]
 8007f28:	3708      	adds	r7, #8
 8007f2a:	4690      	mov	r8, r2
 8007f2c:	e02a      	b.n	8007f84 <d_print_mod+0x3d4>
 8007f2e:	46c0      	nop			; (mov r8, r8)
 8007f30:	08020ae4 	.word	0x08020ae4
 8007f34:	080270a4 	.word	0x080270a4
 8007f38:	08027064 	.word	0x08027064
 8007f3c:	08027070 	.word	0x08027070
 8007f40:	0802707c 	.word	0x0802707c
 8007f44:	080270ac 	.word	0x080270ac
 8007f48:	080270b0 	.word	0x080270b0
 8007f4c:	4652      	mov	r2, sl
 8007f4e:	54e2      	strb	r2, [r4, r3]
 8007f50:	464b      	mov	r3, r9
 8007f52:	58e2      	ldr	r2, [r4, r3]
 8007f54:	4643      	mov	r3, r8
 8007f56:	21ff      	movs	r1, #255	; 0xff
 8007f58:	58e3      	ldr	r3, [r4, r3]
 8007f5a:	0020      	movs	r0, r4
 8007f5c:	f001 f950 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8007f60:	2292      	movs	r2, #146	; 0x92
 8007f62:	0052      	lsls	r2, r2, #1
 8007f64:	58a3      	ldr	r3, [r4, r2]
 8007f66:	3301      	adds	r3, #1
 8007f68:	50a3      	str	r3, [r4, r2]
 8007f6a:	2301      	movs	r3, #1
 8007f6c:	2200      	movs	r2, #0
 8007f6e:	2180      	movs	r1, #128	; 0x80
 8007f70:	0049      	lsls	r1, r1, #1
 8007f72:	5063      	str	r3, [r4, r1]
 8007f74:	54a6      	strb	r6, [r4, r2]
 8007f76:	2282      	movs	r2, #130	; 0x82
 8007f78:	3501      	adds	r5, #1
 8007f7a:	0052      	lsls	r2, r2, #1
 8007f7c:	54a6      	strb	r6, [r4, r2]
 8007f7e:	42af      	cmp	r7, r5
 8007f80:	d100      	bne.n	8007f84 <d_print_mod+0x3d4>
 8007f82:	e65d      	b.n	8007c40 <d_print_mod+0x90>
 8007f84:	782e      	ldrb	r6, [r5, #0]
 8007f86:	2bff      	cmp	r3, #255	; 0xff
 8007f88:	d0e0      	beq.n	8007f4c <d_print_mod+0x39c>
 8007f8a:	001a      	movs	r2, r3
 8007f8c:	3301      	adds	r3, #1
 8007f8e:	e7ee      	b.n	8007f6e <d_print_mod+0x3be>
 8007f90:	2200      	movs	r2, #0
 8007f92:	2380      	movs	r3, #128	; 0x80
 8007f94:	4692      	mov	sl, r2
 8007f96:	320d      	adds	r2, #13
 8007f98:	32ff      	adds	r2, #255	; 0xff
 8007f9a:	005b      	lsls	r3, r3, #1
 8007f9c:	4691      	mov	r9, r2
 8007f9e:	3a04      	subs	r2, #4
 8007fa0:	58c3      	ldr	r3, [r0, r3]
 8007fa2:	2500      	movs	r5, #0
 8007fa4:	4fb0      	ldr	r7, [pc, #704]	; (8008268 <d_print_mod+0x6b8>)
 8007fa6:	4690      	mov	r8, r2
 8007fa8:	e01b      	b.n	8007fe2 <d_print_mod+0x432>
 8007faa:	4652      	mov	r2, sl
 8007fac:	54e2      	strb	r2, [r4, r3]
 8007fae:	464b      	mov	r3, r9
 8007fb0:	58e2      	ldr	r2, [r4, r3]
 8007fb2:	4643      	mov	r3, r8
 8007fb4:	21ff      	movs	r1, #255	; 0xff
 8007fb6:	58e3      	ldr	r3, [r4, r3]
 8007fb8:	0020      	movs	r0, r4
 8007fba:	f001 f921 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8007fbe:	2292      	movs	r2, #146	; 0x92
 8007fc0:	0052      	lsls	r2, r2, #1
 8007fc2:	58a3      	ldr	r3, [r4, r2]
 8007fc4:	3301      	adds	r3, #1
 8007fc6:	50a3      	str	r3, [r4, r2]
 8007fc8:	2301      	movs	r3, #1
 8007fca:	2200      	movs	r2, #0
 8007fcc:	2180      	movs	r1, #128	; 0x80
 8007fce:	0049      	lsls	r1, r1, #1
 8007fd0:	5063      	str	r3, [r4, r1]
 8007fd2:	54a6      	strb	r6, [r4, r2]
 8007fd4:	2282      	movs	r2, #130	; 0x82
 8007fd6:	3501      	adds	r5, #1
 8007fd8:	0052      	lsls	r2, r2, #1
 8007fda:	54a6      	strb	r6, [r4, r2]
 8007fdc:	2d0a      	cmp	r5, #10
 8007fde:	d100      	bne.n	8007fe2 <d_print_mod+0x432>
 8007fe0:	e62e      	b.n	8007c40 <d_print_mod+0x90>
 8007fe2:	5d7e      	ldrb	r6, [r7, r5]
 8007fe4:	2bff      	cmp	r3, #255	; 0xff
 8007fe6:	d0e0      	beq.n	8007faa <d_print_mod+0x3fa>
 8007fe8:	001a      	movs	r2, r3
 8007fea:	3301      	adds	r3, #1
 8007fec:	e7ee      	b.n	8007fcc <d_print_mod+0x41c>
 8007fee:	2382      	movs	r3, #130	; 0x82
 8007ff0:	005b      	lsls	r3, r3, #1
 8007ff2:	5cc3      	ldrb	r3, [r0, r3]
 8007ff4:	2b28      	cmp	r3, #40	; 0x28
 8007ff6:	d01e      	beq.n	8008036 <d_print_mod+0x486>
 8007ff8:	2380      	movs	r3, #128	; 0x80
 8007ffa:	005b      	lsls	r3, r3, #1
 8007ffc:	58c3      	ldr	r3, [r0, r3]
 8007ffe:	1c59      	adds	r1, r3, #1
 8008000:	2bff      	cmp	r3, #255	; 0xff
 8008002:	d110      	bne.n	8008026 <d_print_mod+0x476>
 8008004:	2200      	movs	r2, #0
 8008006:	54c2      	strb	r2, [r0, r3]
 8008008:	2386      	movs	r3, #134	; 0x86
 800800a:	005b      	lsls	r3, r3, #1
 800800c:	58c2      	ldr	r2, [r0, r3]
 800800e:	3b04      	subs	r3, #4
 8008010:	58c3      	ldr	r3, [r0, r3]
 8008012:	21ff      	movs	r1, #255	; 0xff
 8008014:	f001 f8f4 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8008018:	2292      	movs	r2, #146	; 0x92
 800801a:	0052      	lsls	r2, r2, #1
 800801c:	58a3      	ldr	r3, [r4, r2]
 800801e:	3301      	adds	r3, #1
 8008020:	50a3      	str	r3, [r4, r2]
 8008022:	2101      	movs	r1, #1
 8008024:	2300      	movs	r3, #0
 8008026:	2280      	movs	r2, #128	; 0x80
 8008028:	0052      	lsls	r2, r2, #1
 800802a:	50a1      	str	r1, [r4, r2]
 800802c:	3ae0      	subs	r2, #224	; 0xe0
 800802e:	54e2      	strb	r2, [r4, r3]
 8008030:	2382      	movs	r3, #130	; 0x82
 8008032:	005b      	lsls	r3, r3, #1
 8008034:	54e2      	strb	r2, [r4, r3]
 8008036:	68aa      	ldr	r2, [r5, #8]
 8008038:	0031      	movs	r1, r6
 800803a:	0020      	movs	r0, r4
 800803c:	f7fc fbae 	bl	800479c <d_print_comp>
 8008040:	2200      	movs	r2, #0
 8008042:	2380      	movs	r3, #128	; 0x80
 8008044:	4692      	mov	sl, r2
 8008046:	320d      	adds	r2, #13
 8008048:	32ff      	adds	r2, #255	; 0xff
 800804a:	005b      	lsls	r3, r3, #1
 800804c:	4691      	mov	r9, r2
 800804e:	3a04      	subs	r2, #4
 8008050:	58e3      	ldr	r3, [r4, r3]
 8008052:	2500      	movs	r5, #0
 8008054:	4f85      	ldr	r7, [pc, #532]	; (800826c <d_print_mod+0x6bc>)
 8008056:	4690      	mov	r8, r2
 8008058:	e01b      	b.n	8008092 <d_print_mod+0x4e2>
 800805a:	4652      	mov	r2, sl
 800805c:	54e2      	strb	r2, [r4, r3]
 800805e:	464b      	mov	r3, r9
 8008060:	58e2      	ldr	r2, [r4, r3]
 8008062:	4643      	mov	r3, r8
 8008064:	21ff      	movs	r1, #255	; 0xff
 8008066:	58e3      	ldr	r3, [r4, r3]
 8008068:	0020      	movs	r0, r4
 800806a:	f001 f8c9 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 800806e:	2292      	movs	r2, #146	; 0x92
 8008070:	0052      	lsls	r2, r2, #1
 8008072:	58a3      	ldr	r3, [r4, r2]
 8008074:	3301      	adds	r3, #1
 8008076:	50a3      	str	r3, [r4, r2]
 8008078:	2301      	movs	r3, #1
 800807a:	2200      	movs	r2, #0
 800807c:	2180      	movs	r1, #128	; 0x80
 800807e:	0049      	lsls	r1, r1, #1
 8008080:	5063      	str	r3, [r4, r1]
 8008082:	54a6      	strb	r6, [r4, r2]
 8008084:	2282      	movs	r2, #130	; 0x82
 8008086:	3501      	adds	r5, #1
 8008088:	0052      	lsls	r2, r2, #1
 800808a:	54a6      	strb	r6, [r4, r2]
 800808c:	2d03      	cmp	r5, #3
 800808e:	d100      	bne.n	8008092 <d_print_mod+0x4e2>
 8008090:	e5d6      	b.n	8007c40 <d_print_mod+0x90>
 8008092:	5d7e      	ldrb	r6, [r7, r5]
 8008094:	2bff      	cmp	r3, #255	; 0xff
 8008096:	d0e0      	beq.n	800805a <d_print_mod+0x4aa>
 8008098:	001a      	movs	r2, r3
 800809a:	3301      	adds	r3, #1
 800809c:	e7ee      	b.n	800807c <d_print_mod+0x4cc>
 800809e:	2286      	movs	r2, #134	; 0x86
 80080a0:	2380      	movs	r3, #128	; 0x80
 80080a2:	0052      	lsls	r2, r2, #1
 80080a4:	005b      	lsls	r3, r3, #1
 80080a6:	4693      	mov	fp, r2
 80080a8:	3a04      	subs	r2, #4
 80080aa:	58c3      	ldr	r3, [r0, r3]
 80080ac:	2700      	movs	r7, #0
 80080ae:	4692      	mov	sl, r2
 80080b0:	e01d      	b.n	80080ee <d_print_mod+0x53e>
 80080b2:	2200      	movs	r2, #0
 80080b4:	54e2      	strb	r2, [r4, r3]
 80080b6:	465b      	mov	r3, fp
 80080b8:	58e2      	ldr	r2, [r4, r3]
 80080ba:	4653      	mov	r3, sl
 80080bc:	21ff      	movs	r1, #255	; 0xff
 80080be:	58e3      	ldr	r3, [r4, r3]
 80080c0:	0020      	movs	r0, r4
 80080c2:	f001 f89d 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 80080c6:	2292      	movs	r2, #146	; 0x92
 80080c8:	0052      	lsls	r2, r2, #1
 80080ca:	58a3      	ldr	r3, [r4, r2]
 80080cc:	3301      	adds	r3, #1
 80080ce:	50a3      	str	r3, [r4, r2]
 80080d0:	2301      	movs	r3, #1
 80080d2:	2200      	movs	r2, #0
 80080d4:	2180      	movs	r1, #128	; 0x80
 80080d6:	0049      	lsls	r1, r1, #1
 80080d8:	5063      	str	r3, [r4, r1]
 80080da:	4689      	mov	r9, r1
 80080dc:	4641      	mov	r1, r8
 80080de:	54a1      	strb	r1, [r4, r2]
 80080e0:	2282      	movs	r2, #130	; 0x82
 80080e2:	3701      	adds	r7, #1
 80080e4:	0052      	lsls	r2, r2, #1
 80080e6:	54a1      	strb	r1, [r4, r2]
 80080e8:	2f0a      	cmp	r7, #10
 80080ea:	d100      	bne.n	80080ee <d_print_mod+0x53e>
 80080ec:	e0b1      	b.n	8008252 <d_print_mod+0x6a2>
 80080ee:	4a60      	ldr	r2, [pc, #384]	; (8008270 <d_print_mod+0x6c0>)
 80080f0:	5dd2      	ldrb	r2, [r2, r7]
 80080f2:	4690      	mov	r8, r2
 80080f4:	2bff      	cmp	r3, #255	; 0xff
 80080f6:	d0dc      	beq.n	80080b2 <d_print_mod+0x502>
 80080f8:	001a      	movs	r2, r3
 80080fa:	3301      	adds	r3, #1
 80080fc:	e7ea      	b.n	80080d4 <d_print_mod+0x524>
 80080fe:	2200      	movs	r2, #0
 8008100:	4d5c      	ldr	r5, [pc, #368]	; (8008274 <d_print_mod+0x6c4>)
 8008102:	2380      	movs	r3, #128	; 0x80
 8008104:	002f      	movs	r7, r5
 8008106:	4692      	mov	sl, r2
 8008108:	320d      	adds	r2, #13
 800810a:	32ff      	adds	r2, #255	; 0xff
 800810c:	005b      	lsls	r3, r3, #1
 800810e:	4691      	mov	r9, r2
 8008110:	3a04      	subs	r2, #4
 8008112:	58c3      	ldr	r3, [r0, r3]
 8008114:	3711      	adds	r7, #17
 8008116:	4690      	mov	r8, r2
 8008118:	e01b      	b.n	8008152 <d_print_mod+0x5a2>
 800811a:	4652      	mov	r2, sl
 800811c:	54e2      	strb	r2, [r4, r3]
 800811e:	464b      	mov	r3, r9
 8008120:	58e2      	ldr	r2, [r4, r3]
 8008122:	4643      	mov	r3, r8
 8008124:	21ff      	movs	r1, #255	; 0xff
 8008126:	58e3      	ldr	r3, [r4, r3]
 8008128:	0020      	movs	r0, r4
 800812a:	f001 f869 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 800812e:	2292      	movs	r2, #146	; 0x92
 8008130:	0052      	lsls	r2, r2, #1
 8008132:	58a3      	ldr	r3, [r4, r2]
 8008134:	3301      	adds	r3, #1
 8008136:	50a3      	str	r3, [r4, r2]
 8008138:	2301      	movs	r3, #1
 800813a:	2200      	movs	r2, #0
 800813c:	2180      	movs	r1, #128	; 0x80
 800813e:	0049      	lsls	r1, r1, #1
 8008140:	5063      	str	r3, [r4, r1]
 8008142:	54a6      	strb	r6, [r4, r2]
 8008144:	2282      	movs	r2, #130	; 0x82
 8008146:	3501      	adds	r5, #1
 8008148:	0052      	lsls	r2, r2, #1
 800814a:	54a6      	strb	r6, [r4, r2]
 800814c:	42af      	cmp	r7, r5
 800814e:	d100      	bne.n	8008152 <d_print_mod+0x5a2>
 8008150:	e576      	b.n	8007c40 <d_print_mod+0x90>
 8008152:	782e      	ldrb	r6, [r5, #0]
 8008154:	2bff      	cmp	r3, #255	; 0xff
 8008156:	d0e0      	beq.n	800811a <d_print_mod+0x56a>
 8008158:	001a      	movs	r2, r3
 800815a:	3301      	adds	r3, #1
 800815c:	e7ee      	b.n	800813c <d_print_mod+0x58c>
 800815e:	4a46      	ldr	r2, [pc, #280]	; (8008278 <d_print_mod+0x6c8>)
 8008160:	4691      	mov	r9, r2
 8008162:	2286      	movs	r2, #134	; 0x86
 8008164:	2380      	movs	r3, #128	; 0x80
 8008166:	0052      	lsls	r2, r2, #1
 8008168:	005b      	lsls	r3, r3, #1
 800816a:	4693      	mov	fp, r2
 800816c:	3a04      	subs	r2, #4
 800816e:	58c3      	ldr	r3, [r0, r3]
 8008170:	2700      	movs	r7, #0
 8008172:	4692      	mov	sl, r2
 8008174:	e01b      	b.n	80081ae <d_print_mod+0x5fe>
 8008176:	2200      	movs	r2, #0
 8008178:	54e2      	strb	r2, [r4, r3]
 800817a:	465b      	mov	r3, fp
 800817c:	58e2      	ldr	r2, [r4, r3]
 800817e:	4653      	mov	r3, sl
 8008180:	21ff      	movs	r1, #255	; 0xff
 8008182:	58e3      	ldr	r3, [r4, r3]
 8008184:	0020      	movs	r0, r4
 8008186:	f001 f83b 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 800818a:	2292      	movs	r2, #146	; 0x92
 800818c:	0052      	lsls	r2, r2, #1
 800818e:	58a3      	ldr	r3, [r4, r2]
 8008190:	3301      	adds	r3, #1
 8008192:	50a3      	str	r3, [r4, r2]
 8008194:	2301      	movs	r3, #1
 8008196:	2200      	movs	r2, #0
 8008198:	2180      	movs	r1, #128	; 0x80
 800819a:	0049      	lsls	r1, r1, #1
 800819c:	5063      	str	r3, [r4, r1]
 800819e:	4641      	mov	r1, r8
 80081a0:	54a1      	strb	r1, [r4, r2]
 80081a2:	2282      	movs	r2, #130	; 0x82
 80081a4:	3701      	adds	r7, #1
 80081a6:	0052      	lsls	r2, r2, #1
 80081a8:	54a1      	strb	r1, [r4, r2]
 80081aa:	2f09      	cmp	r7, #9
 80081ac:	d00d      	beq.n	80081ca <d_print_mod+0x61a>
 80081ae:	464a      	mov	r2, r9
 80081b0:	5dd2      	ldrb	r2, [r2, r7]
 80081b2:	4690      	mov	r8, r2
 80081b4:	2bff      	cmp	r3, #255	; 0xff
 80081b6:	d0de      	beq.n	8008176 <d_print_mod+0x5c6>
 80081b8:	001a      	movs	r2, r3
 80081ba:	3301      	adds	r3, #1
 80081bc:	e7ec      	b.n	8008198 <d_print_mod+0x5e8>
 80081be:	002a      	movs	r2, r5
 80081c0:	0031      	movs	r1, r6
 80081c2:	0020      	movs	r0, r4
 80081c4:	f7fc faea 	bl	800479c <d_print_comp>
 80081c8:	e53a      	b.n	8007c40 <d_print_mod+0x90>
 80081ca:	68ea      	ldr	r2, [r5, #12]
 80081cc:	2a00      	cmp	r2, #0
 80081ce:	d100      	bne.n	80081d2 <d_print_mod+0x622>
 80081d0:	e536      	b.n	8007c40 <d_print_mod+0x90>
 80081d2:	1c59      	adds	r1, r3, #1
 80081d4:	2bff      	cmp	r3, #255	; 0xff
 80081d6:	d112      	bne.n	80081fe <d_print_mod+0x64e>
 80081d8:	2200      	movs	r2, #0
 80081da:	54e2      	strb	r2, [r4, r3]
 80081dc:	2386      	movs	r3, #134	; 0x86
 80081de:	005b      	lsls	r3, r3, #1
 80081e0:	58e2      	ldr	r2, [r4, r3]
 80081e2:	3b04      	subs	r3, #4
 80081e4:	58e3      	ldr	r3, [r4, r3]
 80081e6:	21ff      	movs	r1, #255	; 0xff
 80081e8:	0020      	movs	r0, r4
 80081ea:	f001 f809 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 80081ee:	2292      	movs	r2, #146	; 0x92
 80081f0:	0052      	lsls	r2, r2, #1
 80081f2:	58a3      	ldr	r3, [r4, r2]
 80081f4:	3301      	adds	r3, #1
 80081f6:	50a3      	str	r3, [r4, r2]
 80081f8:	2101      	movs	r1, #1
 80081fa:	2300      	movs	r3, #0
 80081fc:	68ea      	ldr	r2, [r5, #12]
 80081fe:	2580      	movs	r5, #128	; 0x80
 8008200:	006d      	lsls	r5, r5, #1
 8008202:	5161      	str	r1, [r4, r5]
 8008204:	2128      	movs	r1, #40	; 0x28
 8008206:	54e1      	strb	r1, [r4, r3]
 8008208:	2382      	movs	r3, #130	; 0x82
 800820a:	005b      	lsls	r3, r3, #1
 800820c:	54e1      	strb	r1, [r4, r3]
 800820e:	0020      	movs	r0, r4
 8008210:	0031      	movs	r1, r6
 8008212:	f7fc fac3 	bl	800479c <d_print_comp>
 8008216:	5963      	ldr	r3, [r4, r5]
 8008218:	2bff      	cmp	r3, #255	; 0xff
 800821a:	d123      	bne.n	8008264 <d_print_mod+0x6b4>
 800821c:	2200      	movs	r2, #0
 800821e:	54e2      	strb	r2, [r4, r3]
 8008220:	2386      	movs	r3, #134	; 0x86
 8008222:	005b      	lsls	r3, r3, #1
 8008224:	58e2      	ldr	r2, [r4, r3]
 8008226:	3b04      	subs	r3, #4
 8008228:	58e3      	ldr	r3, [r4, r3]
 800822a:	21ff      	movs	r1, #255	; 0xff
 800822c:	0020      	movs	r0, r4
 800822e:	f000 ffe7 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8008232:	2292      	movs	r2, #146	; 0x92
 8008234:	0052      	lsls	r2, r2, #1
 8008236:	58a3      	ldr	r3, [r4, r2]
 8008238:	3301      	adds	r3, #1
 800823a:	50a3      	str	r3, [r4, r2]
 800823c:	2101      	movs	r1, #1
 800823e:	2300      	movs	r3, #0
 8008240:	2280      	movs	r2, #128	; 0x80
 8008242:	0052      	lsls	r2, r2, #1
 8008244:	50a1      	str	r1, [r4, r2]
 8008246:	3ad7      	subs	r2, #215	; 0xd7
 8008248:	54e2      	strb	r2, [r4, r3]
 800824a:	2382      	movs	r3, #130	; 0x82
 800824c:	005b      	lsls	r3, r3, #1
 800824e:	54e2      	strb	r2, [r4, r3]
 8008250:	e4f6      	b.n	8007c40 <d_print_mod+0x90>
 8008252:	68aa      	ldr	r2, [r5, #8]
 8008254:	0031      	movs	r1, r6
 8008256:	0020      	movs	r0, r4
 8008258:	f7fc faa0 	bl	800479c <d_print_comp>
 800825c:	464b      	mov	r3, r9
 800825e:	58e3      	ldr	r3, [r4, r3]
 8008260:	2bff      	cmp	r3, #255	; 0xff
 8008262:	d0db      	beq.n	800821c <d_print_mod+0x66c>
 8008264:	1c59      	adds	r1, r3, #1
 8008266:	e7eb      	b.n	8008240 <d_print_mod+0x690>
 8008268:	080270bc 	.word	0x080270bc
 800826c:	080270c8 	.word	0x080270c8
 8008270:	080270cc 	.word	0x080270cc
 8008274:	08027084 	.word	0x08027084
 8008278:	08027098 	.word	0x08027098

0800827c <d_print_function_type.isra.15>:
 800827c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800827e:	464e      	mov	r6, r9
 8008280:	4645      	mov	r5, r8
 8008282:	46de      	mov	lr, fp
 8008284:	4657      	mov	r7, sl
 8008286:	b5e0      	push	{r5, r6, r7, lr}
 8008288:	b083      	sub	sp, #12
 800828a:	0004      	movs	r4, r0
 800828c:	000e      	movs	r6, r1
 800828e:	9201      	str	r2, [sp, #4]
 8008290:	1e1d      	subs	r5, r3, #0
 8008292:	d01f      	beq.n	80082d4 <d_print_function_type.isra.15+0x58>
 8008294:	689b      	ldr	r3, [r3, #8]
 8008296:	2b00      	cmp	r3, #0
 8008298:	d11c      	bne.n	80082d4 <d_print_function_type.isra.15+0x58>
 800829a:	23e0      	movs	r3, #224	; 0xe0
 800829c:	011b      	lsls	r3, r3, #4
 800829e:	002a      	movs	r2, r5
 80082a0:	2001      	movs	r0, #1
 80082a2:	4989      	ldr	r1, [pc, #548]	; (80084c8 <d_print_function_type.isra.15+0x24c>)
 80082a4:	469c      	mov	ip, r3
 80082a6:	e002      	b.n	80082ae <d_print_function_type.isra.15+0x32>
 80082a8:	6893      	ldr	r3, [r2, #8]
 80082aa:	2b00      	cmp	r3, #0
 80082ac:	d112      	bne.n	80082d4 <d_print_function_type.isra.15+0x58>
 80082ae:	6853      	ldr	r3, [r2, #4]
 80082b0:	781b      	ldrb	r3, [r3, #0]
 80082b2:	3b19      	subs	r3, #25
 80082b4:	061b      	lsls	r3, r3, #24
 80082b6:	0e1b      	lsrs	r3, r3, #24
 80082b8:	2b12      	cmp	r3, #18
 80082ba:	d808      	bhi.n	80082ce <d_print_function_type.isra.15+0x52>
 80082bc:	0007      	movs	r7, r0
 80082be:	409f      	lsls	r7, r3
 80082c0:	003b      	movs	r3, r7
 80082c2:	420f      	tst	r7, r1
 80082c4:	d000      	beq.n	80082c8 <d_print_function_type.isra.15+0x4c>
 80082c6:	e0ca      	b.n	800845e <d_print_function_type.isra.15+0x1e2>
 80082c8:	4667      	mov	r7, ip
 80082ca:	423b      	tst	r3, r7
 80082cc:	d16b      	bne.n	80083a6 <d_print_function_type.isra.15+0x12a>
 80082ce:	6812      	ldr	r2, [r2, #0]
 80082d0:	2a00      	cmp	r2, #0
 80082d2:	d1e9      	bne.n	80082a8 <d_print_function_type.isra.15+0x2c>
 80082d4:	238a      	movs	r3, #138	; 0x8a
 80082d6:	005b      	lsls	r3, r3, #1
 80082d8:	58e2      	ldr	r2, [r4, r3]
 80082da:	4690      	mov	r8, r2
 80082dc:	2200      	movs	r2, #0
 80082de:	0031      	movs	r1, r6
 80082e0:	50e2      	str	r2, [r4, r3]
 80082e2:	0020      	movs	r0, r4
 80082e4:	2300      	movs	r3, #0
 80082e6:	002a      	movs	r2, r5
 80082e8:	f000 f8f0 	bl	80084cc <d_print_mod_list>
 80082ec:	2380      	movs	r3, #128	; 0x80
 80082ee:	005b      	lsls	r3, r3, #1
 80082f0:	58e2      	ldr	r2, [r4, r3]
 80082f2:	2aff      	cmp	r2, #255	; 0xff
 80082f4:	d000      	beq.n	80082f8 <d_print_function_type.isra.15+0x7c>
 80082f6:	e0a3      	b.n	8008440 <d_print_function_type.isra.15+0x1c4>
 80082f8:	2300      	movs	r3, #0
 80082fa:	54a3      	strb	r3, [r4, r2]
 80082fc:	330d      	adds	r3, #13
 80082fe:	33ff      	adds	r3, #255	; 0xff
 8008300:	58e2      	ldr	r2, [r4, r3]
 8008302:	3b04      	subs	r3, #4
 8008304:	58e3      	ldr	r3, [r4, r3]
 8008306:	21ff      	movs	r1, #255	; 0xff
 8008308:	0020      	movs	r0, r4
 800830a:	f000 ff79 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 800830e:	2292      	movs	r2, #146	; 0x92
 8008310:	0052      	lsls	r2, r2, #1
 8008312:	58a3      	ldr	r3, [r4, r2]
 8008314:	3301      	adds	r3, #1
 8008316:	50a3      	str	r3, [r4, r2]
 8008318:	2380      	movs	r3, #128	; 0x80
 800831a:	3a24      	subs	r2, #36	; 0x24
 800831c:	005b      	lsls	r3, r3, #1
 800831e:	3aff      	subs	r2, #255	; 0xff
 8008320:	50e2      	str	r2, [r4, r3]
 8008322:	3204      	adds	r2, #4
 8008324:	3bd8      	subs	r3, #216	; 0xd8
 8008326:	32ff      	adds	r2, #255	; 0xff
 8008328:	7023      	strb	r3, [r4, #0]
 800832a:	54a3      	strb	r3, [r4, r2]
 800832c:	9b01      	ldr	r3, [sp, #4]
 800832e:	681a      	ldr	r2, [r3, #0]
 8008330:	2a00      	cmp	r2, #0
 8008332:	d100      	bne.n	8008336 <d_print_function_type.isra.15+0xba>
 8008334:	e0b1      	b.n	800849a <d_print_function_type.isra.15+0x21e>
 8008336:	0031      	movs	r1, r6
 8008338:	0020      	movs	r0, r4
 800833a:	f7fc fa2f 	bl	800479c <d_print_comp>
 800833e:	2380      	movs	r3, #128	; 0x80
 8008340:	005b      	lsls	r3, r3, #1
 8008342:	58e3      	ldr	r3, [r4, r3]
 8008344:	2bff      	cmp	r3, #255	; 0xff
 8008346:	d000      	beq.n	800834a <d_print_function_type.isra.15+0xce>
 8008348:	e0a8      	b.n	800849c <d_print_function_type.isra.15+0x220>
 800834a:	2200      	movs	r2, #0
 800834c:	54e2      	strb	r2, [r4, r3]
 800834e:	2386      	movs	r3, #134	; 0x86
 8008350:	005b      	lsls	r3, r3, #1
 8008352:	58e2      	ldr	r2, [r4, r3]
 8008354:	3b04      	subs	r3, #4
 8008356:	58e3      	ldr	r3, [r4, r3]
 8008358:	21ff      	movs	r1, #255	; 0xff
 800835a:	0020      	movs	r0, r4
 800835c:	f000 ff50 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8008360:	2292      	movs	r2, #146	; 0x92
 8008362:	0052      	lsls	r2, r2, #1
 8008364:	58a3      	ldr	r3, [r4, r2]
 8008366:	3301      	adds	r3, #1
 8008368:	50a3      	str	r3, [r4, r2]
 800836a:	2101      	movs	r1, #1
 800836c:	2300      	movs	r3, #0
 800836e:	2280      	movs	r2, #128	; 0x80
 8008370:	0052      	lsls	r2, r2, #1
 8008372:	50a1      	str	r1, [r4, r2]
 8008374:	3ad7      	subs	r2, #215	; 0xd7
 8008376:	54e2      	strb	r2, [r4, r3]
 8008378:	2382      	movs	r3, #130	; 0x82
 800837a:	005b      	lsls	r3, r3, #1
 800837c:	54e2      	strb	r2, [r4, r3]
 800837e:	3b04      	subs	r3, #4
 8008380:	002a      	movs	r2, r5
 8008382:	3bff      	subs	r3, #255	; 0xff
 8008384:	0031      	movs	r1, r6
 8008386:	0020      	movs	r0, r4
 8008388:	f000 f8a0 	bl	80084cc <d_print_mod_list>
 800838c:	238a      	movs	r3, #138	; 0x8a
 800838e:	4642      	mov	r2, r8
 8008390:	005b      	lsls	r3, r3, #1
 8008392:	50e2      	str	r2, [r4, r3]
 8008394:	b003      	add	sp, #12
 8008396:	bc3c      	pop	{r2, r3, r4, r5}
 8008398:	4690      	mov	r8, r2
 800839a:	4699      	mov	r9, r3
 800839c:	46a2      	mov	sl, r4
 800839e:	46ab      	mov	fp, r5
 80083a0:	bcf0      	pop	{r4, r5, r6, r7}
 80083a2:	bc01      	pop	{r0}
 80083a4:	4700      	bx	r0
 80083a6:	2382      	movs	r3, #130	; 0x82
 80083a8:	005b      	lsls	r3, r3, #1
 80083aa:	5ce2      	ldrb	r2, [r4, r3]
 80083ac:	2102      	movs	r1, #2
 80083ae:	0010      	movs	r0, r2
 80083b0:	3b04      	subs	r3, #4
 80083b2:	58e3      	ldr	r3, [r4, r3]
 80083b4:	4388      	bics	r0, r1
 80083b6:	2828      	cmp	r0, #40	; 0x28
 80083b8:	d156      	bne.n	8008468 <d_print_function_type.isra.15+0x1ec>
 80083ba:	2bff      	cmp	r3, #255	; 0xff
 80083bc:	d16b      	bne.n	8008496 <d_print_function_type.isra.15+0x21a>
 80083be:	2200      	movs	r2, #0
 80083c0:	54e2      	strb	r2, [r4, r3]
 80083c2:	2386      	movs	r3, #134	; 0x86
 80083c4:	005b      	lsls	r3, r3, #1
 80083c6:	58e2      	ldr	r2, [r4, r3]
 80083c8:	3b04      	subs	r3, #4
 80083ca:	58e3      	ldr	r3, [r4, r3]
 80083cc:	21ff      	movs	r1, #255	; 0xff
 80083ce:	0020      	movs	r0, r4
 80083d0:	f000 ff16 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 80083d4:	2292      	movs	r2, #146	; 0x92
 80083d6:	0052      	lsls	r2, r2, #1
 80083d8:	58a3      	ldr	r3, [r4, r2]
 80083da:	3301      	adds	r3, #1
 80083dc:	50a3      	str	r3, [r4, r2]
 80083de:	2300      	movs	r3, #0
 80083e0:	3a24      	subs	r2, #36	; 0x24
 80083e2:	3aff      	subs	r2, #255	; 0xff
 80083e4:	2180      	movs	r1, #128	; 0x80
 80083e6:	0049      	lsls	r1, r1, #1
 80083e8:	5062      	str	r2, [r4, r1]
 80083ea:	2228      	movs	r2, #40	; 0x28
 80083ec:	54e2      	strb	r2, [r4, r3]
 80083ee:	2382      	movs	r3, #130	; 0x82
 80083f0:	005b      	lsls	r3, r3, #1
 80083f2:	54e2      	strb	r2, [r4, r3]
 80083f4:	469a      	mov	sl, r3
 80083f6:	3310      	adds	r3, #16
 80083f8:	58e2      	ldr	r2, [r4, r3]
 80083fa:	4690      	mov	r8, r2
 80083fc:	2200      	movs	r2, #0
 80083fe:	4689      	mov	r9, r1
 8008400:	50e2      	str	r2, [r4, r3]
 8008402:	4693      	mov	fp, r2
 8008404:	2300      	movs	r3, #0
 8008406:	002a      	movs	r2, r5
 8008408:	0031      	movs	r1, r6
 800840a:	0020      	movs	r0, r4
 800840c:	f000 f85e 	bl	80084cc <d_print_mod_list>
 8008410:	464b      	mov	r3, r9
 8008412:	58e3      	ldr	r3, [r4, r3]
 8008414:	2bff      	cmp	r3, #255	; 0xff
 8008416:	d143      	bne.n	80084a0 <d_print_function_type.isra.15+0x224>
 8008418:	465a      	mov	r2, fp
 800841a:	54e2      	strb	r2, [r4, r3]
 800841c:	2386      	movs	r3, #134	; 0x86
 800841e:	005b      	lsls	r3, r3, #1
 8008420:	58e2      	ldr	r2, [r4, r3]
 8008422:	3b04      	subs	r3, #4
 8008424:	58e3      	ldr	r3, [r4, r3]
 8008426:	21ff      	movs	r1, #255	; 0xff
 8008428:	0020      	movs	r0, r4
 800842a:	f000 fee9 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 800842e:	2292      	movs	r2, #146	; 0x92
 8008430:	0052      	lsls	r2, r2, #1
 8008432:	58a3      	ldr	r3, [r4, r2]
 8008434:	3301      	adds	r3, #1
 8008436:	50a3      	str	r3, [r4, r2]
 8008438:	2329      	movs	r3, #41	; 0x29
 800843a:	3a24      	subs	r2, #36	; 0x24
 800843c:	7023      	strb	r3, [r4, #0]
 800843e:	3aff      	subs	r2, #255	; 0xff
 8008440:	2180      	movs	r1, #128	; 0x80
 8008442:	1c53      	adds	r3, r2, #1
 8008444:	0049      	lsls	r1, r1, #1
 8008446:	5063      	str	r3, [r4, r1]
 8008448:	39d8      	subs	r1, #216	; 0xd8
 800844a:	54a1      	strb	r1, [r4, r2]
 800844c:	2282      	movs	r2, #130	; 0x82
 800844e:	0052      	lsls	r2, r2, #1
 8008450:	54a1      	strb	r1, [r4, r2]
 8008452:	9a01      	ldr	r2, [sp, #4]
 8008454:	6812      	ldr	r2, [r2, #0]
 8008456:	2a00      	cmp	r2, #0
 8008458:	d100      	bne.n	800845c <d_print_function_type.isra.15+0x1e0>
 800845a:	e773      	b.n	8008344 <d_print_function_type.isra.15+0xc8>
 800845c:	e76b      	b.n	8008336 <d_print_function_type.isra.15+0xba>
 800845e:	2382      	movs	r3, #130	; 0x82
 8008460:	005b      	lsls	r3, r3, #1
 8008462:	5ce2      	ldrb	r2, [r4, r3]
 8008464:	3b04      	subs	r3, #4
 8008466:	58e3      	ldr	r3, [r4, r3]
 8008468:	2a20      	cmp	r2, #32
 800846a:	d0a6      	beq.n	80083ba <d_print_function_type.isra.15+0x13e>
 800846c:	2bff      	cmp	r3, #255	; 0xff
 800846e:	d11f      	bne.n	80084b0 <d_print_function_type.isra.15+0x234>
 8008470:	2200      	movs	r2, #0
 8008472:	54e2      	strb	r2, [r4, r3]
 8008474:	2386      	movs	r3, #134	; 0x86
 8008476:	005b      	lsls	r3, r3, #1
 8008478:	58e2      	ldr	r2, [r4, r3]
 800847a:	3b04      	subs	r3, #4
 800847c:	58e3      	ldr	r3, [r4, r3]
 800847e:	21ff      	movs	r1, #255	; 0xff
 8008480:	0020      	movs	r0, r4
 8008482:	f000 febd 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8008486:	2292      	movs	r2, #146	; 0x92
 8008488:	0052      	lsls	r2, r2, #1
 800848a:	58a3      	ldr	r3, [r4, r2]
 800848c:	3301      	adds	r3, #1
 800848e:	50a3      	str	r3, [r4, r2]
 8008490:	2320      	movs	r3, #32
 8008492:	7023      	strb	r3, [r4, #0]
 8008494:	3b1f      	subs	r3, #31
 8008496:	1c5a      	adds	r2, r3, #1
 8008498:	e7a4      	b.n	80083e4 <d_print_function_type.isra.15+0x168>
 800849a:	2301      	movs	r3, #1
 800849c:	1c59      	adds	r1, r3, #1
 800849e:	e766      	b.n	800836e <d_print_function_type.isra.15+0xf2>
 80084a0:	4649      	mov	r1, r9
 80084a2:	1c5a      	adds	r2, r3, #1
 80084a4:	5062      	str	r2, [r4, r1]
 80084a6:	39d7      	subs	r1, #215	; 0xd7
 80084a8:	54e1      	strb	r1, [r4, r3]
 80084aa:	4653      	mov	r3, sl
 80084ac:	54e1      	strb	r1, [r4, r3]
 80084ae:	e720      	b.n	80082f2 <d_print_function_type.isra.15+0x76>
 80084b0:	2180      	movs	r1, #128	; 0x80
 80084b2:	1c5a      	adds	r2, r3, #1
 80084b4:	0049      	lsls	r1, r1, #1
 80084b6:	5062      	str	r2, [r4, r1]
 80084b8:	39e0      	subs	r1, #224	; 0xe0
 80084ba:	54e1      	strb	r1, [r4, r3]
 80084bc:	2382      	movs	r3, #130	; 0x82
 80084be:	005b      	lsls	r3, r3, #1
 80084c0:	54e1      	strb	r1, [r4, r3]
 80084c2:	0013      	movs	r3, r2
 80084c4:	e779      	b.n	80083ba <d_print_function_type.isra.15+0x13e>
 80084c6:	46c0      	nop			; (mov r8, r8)
 80084c8:	00043107 	.word	0x00043107

080084cc <d_print_mod_list>:
 80084cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80084ce:	4657      	mov	r7, sl
 80084d0:	4645      	mov	r5, r8
 80084d2:	46de      	mov	lr, fp
 80084d4:	464e      	mov	r6, r9
 80084d6:	b5e0      	push	{r5, r6, r7, lr}
 80084d8:	b08b      	sub	sp, #44	; 0x2c
 80084da:	0005      	movs	r5, r0
 80084dc:	9100      	str	r1, [sp, #0]
 80084de:	1e14      	subs	r4, r2, #0
 80084e0:	469a      	mov	sl, r3
 80084e2:	d033      	beq.n	800854c <d_print_mod_list+0x80>
 80084e4:	238c      	movs	r3, #140	; 0x8c
 80084e6:	005b      	lsls	r3, r3, #1
 80084e8:	58c2      	ldr	r2, [r0, r3]
 80084ea:	2a00      	cmp	r2, #0
 80084ec:	d12e      	bne.n	800854c <d_print_mod_list+0x80>
 80084ee:	3211      	adds	r2, #17
 80084f0:	32ff      	adds	r2, #255	; 0xff
 80084f2:	4691      	mov	r9, r2
 80084f4:	4698      	mov	r8, r3
 80084f6:	e003      	b.n	8008500 <d_print_mod_list+0x34>
 80084f8:	4643      	mov	r3, r8
 80084fa:	58eb      	ldr	r3, [r5, r3]
 80084fc:	2b00      	cmp	r3, #0
 80084fe:	d125      	bne.n	800854c <d_print_mod_list+0x80>
 8008500:	68a3      	ldr	r3, [r4, #8]
 8008502:	2b00      	cmp	r3, #0
 8008504:	d11f      	bne.n	8008546 <d_print_mod_list+0x7a>
 8008506:	4653      	mov	r3, sl
 8008508:	6867      	ldr	r7, [r4, #4]
 800850a:	783e      	ldrb	r6, [r7, #0]
 800850c:	2b00      	cmp	r3, #0
 800850e:	d104      	bne.n	800851a <d_print_mod_list+0x4e>
 8008510:	0030      	movs	r0, r6
 8008512:	f7f9 fe2d 	bl	8002170 <is_fnqual_component_type>
 8008516:	2800      	cmp	r0, #0
 8008518:	d115      	bne.n	8008546 <d_print_mod_list+0x7a>
 800851a:	2301      	movs	r3, #1
 800851c:	60a3      	str	r3, [r4, #8]
 800851e:	464b      	mov	r3, r9
 8008520:	58eb      	ldr	r3, [r5, r3]
 8008522:	469b      	mov	fp, r3
 8008524:	464b      	mov	r3, r9
 8008526:	68e2      	ldr	r2, [r4, #12]
 8008528:	50ea      	str	r2, [r5, r3]
 800852a:	2e29      	cmp	r6, #41	; 0x29
 800852c:	d017      	beq.n	800855e <d_print_mod_list+0x92>
 800852e:	2e2a      	cmp	r6, #42	; 0x2a
 8008530:	d020      	beq.n	8008574 <d_print_mod_list+0xa8>
 8008532:	2e02      	cmp	r6, #2
 8008534:	d029      	beq.n	800858a <d_print_mod_list+0xbe>
 8008536:	003a      	movs	r2, r7
 8008538:	9900      	ldr	r1, [sp, #0]
 800853a:	0028      	movs	r0, r5
 800853c:	f7ff fb38 	bl	8007bb0 <d_print_mod>
 8008540:	464b      	mov	r3, r9
 8008542:	465a      	mov	r2, fp
 8008544:	50ea      	str	r2, [r5, r3]
 8008546:	6824      	ldr	r4, [r4, #0]
 8008548:	2c00      	cmp	r4, #0
 800854a:	d1d5      	bne.n	80084f8 <d_print_mod_list+0x2c>
 800854c:	b00b      	add	sp, #44	; 0x2c
 800854e:	bc3c      	pop	{r2, r3, r4, r5}
 8008550:	4690      	mov	r8, r2
 8008552:	4699      	mov	r9, r3
 8008554:	46a2      	mov	sl, r4
 8008556:	46ab      	mov	fp, r5
 8008558:	bcf0      	pop	{r4, r5, r6, r7}
 800855a:	bc01      	pop	{r0}
 800855c:	4700      	bx	r0
 800855e:	003a      	movs	r2, r7
 8008560:	6823      	ldr	r3, [r4, #0]
 8008562:	320c      	adds	r2, #12
 8008564:	9900      	ldr	r1, [sp, #0]
 8008566:	0028      	movs	r0, r5
 8008568:	f7ff fe88 	bl	800827c <d_print_function_type.isra.15>
 800856c:	464b      	mov	r3, r9
 800856e:	465a      	mov	r2, fp
 8008570:	50ea      	str	r2, [r5, r3]
 8008572:	e7eb      	b.n	800854c <d_print_mod_list+0x80>
 8008574:	003a      	movs	r2, r7
 8008576:	6823      	ldr	r3, [r4, #0]
 8008578:	3208      	adds	r2, #8
 800857a:	9900      	ldr	r1, [sp, #0]
 800857c:	0028      	movs	r0, r5
 800857e:	f000 f917 	bl	80087b0 <d_print_array_type.isra.14>
 8008582:	464b      	mov	r3, r9
 8008584:	465a      	mov	r2, fp
 8008586:	50ea      	str	r2, [r5, r3]
 8008588:	e7e0      	b.n	800854c <d_print_mod_list+0x80>
 800858a:	3613      	adds	r6, #19
 800858c:	36ff      	adds	r6, #255	; 0xff
 800858e:	59ab      	ldr	r3, [r5, r6]
 8008590:	4699      	mov	r9, r3
 8008592:	2300      	movs	r3, #0
 8008594:	68ba      	ldr	r2, [r7, #8]
 8008596:	9f00      	ldr	r7, [sp, #0]
 8008598:	51ab      	str	r3, [r5, r6]
 800859a:	0039      	movs	r1, r7
 800859c:	0028      	movs	r0, r5
 800859e:	4698      	mov	r8, r3
 80085a0:	f7fc f8fc 	bl	800479c <d_print_comp>
 80085a4:	464b      	mov	r3, r9
 80085a6:	51ab      	str	r3, [r5, r6]
 80085a8:	003b      	movs	r3, r7
 80085aa:	075b      	lsls	r3, r3, #29
 80085ac:	d535      	bpl.n	800861a <d_print_mod_list+0x14e>
 80085ae:	2380      	movs	r3, #128	; 0x80
 80085b0:	005b      	lsls	r3, r3, #1
 80085b2:	58eb      	ldr	r3, [r5, r3]
 80085b4:	1c59      	adds	r1, r3, #1
 80085b6:	2bff      	cmp	r3, #255	; 0xff
 80085b8:	d111      	bne.n	80085de <d_print_mod_list+0x112>
 80085ba:	4642      	mov	r2, r8
 80085bc:	54ea      	strb	r2, [r5, r3]
 80085be:	2386      	movs	r3, #134	; 0x86
 80085c0:	005b      	lsls	r3, r3, #1
 80085c2:	58ea      	ldr	r2, [r5, r3]
 80085c4:	3b04      	subs	r3, #4
 80085c6:	58eb      	ldr	r3, [r5, r3]
 80085c8:	21ff      	movs	r1, #255	; 0xff
 80085ca:	0028      	movs	r0, r5
 80085cc:	f000 fe18 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 80085d0:	2292      	movs	r2, #146	; 0x92
 80085d2:	0052      	lsls	r2, r2, #1
 80085d4:	58ab      	ldr	r3, [r5, r2]
 80085d6:	3301      	adds	r3, #1
 80085d8:	50ab      	str	r3, [r5, r2]
 80085da:	2101      	movs	r1, #1
 80085dc:	2300      	movs	r3, #0
 80085de:	2280      	movs	r2, #128	; 0x80
 80085e0:	0052      	lsls	r2, r2, #1
 80085e2:	50a9      	str	r1, [r5, r2]
 80085e4:	3ad2      	subs	r2, #210	; 0xd2
 80085e6:	54ea      	strb	r2, [r5, r3]
 80085e8:	2382      	movs	r3, #130	; 0x82
 80085ea:	005b      	lsls	r3, r3, #1
 80085ec:	54ea      	strb	r2, [r5, r3]
 80085ee:	6863      	ldr	r3, [r4, #4]
 80085f0:	68de      	ldr	r6, [r3, #12]
 80085f2:	7830      	ldrb	r0, [r6, #0]
 80085f4:	2846      	cmp	r0, #70	; 0x46
 80085f6:	d102      	bne.n	80085fe <d_print_mod_list+0x132>
 80085f8:	e03d      	b.n	8008676 <d_print_mod_list+0x1aa>
 80085fa:	68b6      	ldr	r6, [r6, #8]
 80085fc:	7830      	ldrb	r0, [r6, #0]
 80085fe:	f7f9 fdb7 	bl	8002170 <is_fnqual_component_type>
 8008602:	2800      	cmp	r0, #0
 8008604:	d1f9      	bne.n	80085fa <d_print_mod_list+0x12e>
 8008606:	0032      	movs	r2, r6
 8008608:	9900      	ldr	r1, [sp, #0]
 800860a:	0028      	movs	r0, r5
 800860c:	f7fc f8c6 	bl	800479c <d_print_comp>
 8008610:	2388      	movs	r3, #136	; 0x88
 8008612:	465a      	mov	r2, fp
 8008614:	005b      	lsls	r3, r3, #1
 8008616:	50ea      	str	r2, [r5, r3]
 8008618:	e798      	b.n	800854c <d_print_mod_list+0x80>
 800861a:	4a61      	ldr	r2, [pc, #388]	; (80087a0 <d_print_mod_list+0x2d4>)
 800861c:	4692      	mov	sl, r2
 800861e:	2286      	movs	r2, #134	; 0x86
 8008620:	2380      	movs	r3, #128	; 0x80
 8008622:	0052      	lsls	r2, r2, #1
 8008624:	005b      	lsls	r3, r3, #1
 8008626:	4691      	mov	r9, r2
 8008628:	3a04      	subs	r2, #4
 800862a:	58eb      	ldr	r3, [r5, r3]
 800862c:	2600      	movs	r6, #0
 800862e:	4690      	mov	r8, r2
 8008630:	e01a      	b.n	8008668 <d_print_mod_list+0x19c>
 8008632:	2200      	movs	r2, #0
 8008634:	54ea      	strb	r2, [r5, r3]
 8008636:	464b      	mov	r3, r9
 8008638:	58ea      	ldr	r2, [r5, r3]
 800863a:	4643      	mov	r3, r8
 800863c:	21ff      	movs	r1, #255	; 0xff
 800863e:	58eb      	ldr	r3, [r5, r3]
 8008640:	0028      	movs	r0, r5
 8008642:	f000 fddd 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8008646:	2292      	movs	r2, #146	; 0x92
 8008648:	0052      	lsls	r2, r2, #1
 800864a:	58ab      	ldr	r3, [r5, r2]
 800864c:	3301      	adds	r3, #1
 800864e:	50ab      	str	r3, [r5, r2]
 8008650:	2301      	movs	r3, #1
 8008652:	2200      	movs	r2, #0
 8008654:	2180      	movs	r1, #128	; 0x80
 8008656:	0049      	lsls	r1, r1, #1
 8008658:	506b      	str	r3, [r5, r1]
 800865a:	54af      	strb	r7, [r5, r2]
 800865c:	2282      	movs	r2, #130	; 0x82
 800865e:	0052      	lsls	r2, r2, #1
 8008660:	54af      	strb	r7, [r5, r2]
 8008662:	2e01      	cmp	r6, #1
 8008664:	d0c3      	beq.n	80085ee <d_print_mod_list+0x122>
 8008666:	2601      	movs	r6, #1
 8008668:	4652      	mov	r2, sl
 800866a:	5d97      	ldrb	r7, [r2, r6]
 800866c:	2bff      	cmp	r3, #255	; 0xff
 800866e:	d0e0      	beq.n	8008632 <d_print_mod_list+0x166>
 8008670:	001a      	movs	r2, r3
 8008672:	3301      	adds	r3, #1
 8008674:	e7ee      	b.n	8008654 <d_print_mod_list+0x188>
 8008676:	2286      	movs	r2, #134	; 0x86
 8008678:	2380      	movs	r3, #128	; 0x80
 800867a:	0052      	lsls	r2, r2, #1
 800867c:	005b      	lsls	r3, r3, #1
 800867e:	4691      	mov	r9, r2
 8008680:	3a04      	subs	r2, #4
 8008682:	58eb      	ldr	r3, [r5, r3]
 8008684:	2400      	movs	r4, #0
 8008686:	4692      	mov	sl, r2
 8008688:	e01b      	b.n	80086c2 <d_print_mod_list+0x1f6>
 800868a:	2200      	movs	r2, #0
 800868c:	54ea      	strb	r2, [r5, r3]
 800868e:	464b      	mov	r3, r9
 8008690:	58ea      	ldr	r2, [r5, r3]
 8008692:	4653      	mov	r3, sl
 8008694:	21ff      	movs	r1, #255	; 0xff
 8008696:	58eb      	ldr	r3, [r5, r3]
 8008698:	0028      	movs	r0, r5
 800869a:	f000 fdb1 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 800869e:	2292      	movs	r2, #146	; 0x92
 80086a0:	0052      	lsls	r2, r2, #1
 80086a2:	58ab      	ldr	r3, [r5, r2]
 80086a4:	3301      	adds	r3, #1
 80086a6:	50ab      	str	r3, [r5, r2]
 80086a8:	2301      	movs	r3, #1
 80086aa:	2200      	movs	r2, #0
 80086ac:	2180      	movs	r1, #128	; 0x80
 80086ae:	0049      	lsls	r1, r1, #1
 80086b0:	506b      	str	r3, [r5, r1]
 80086b2:	54af      	strb	r7, [r5, r2]
 80086b4:	2282      	movs	r2, #130	; 0x82
 80086b6:	3401      	adds	r4, #1
 80086b8:	0052      	lsls	r2, r2, #1
 80086ba:	4688      	mov	r8, r1
 80086bc:	54af      	strb	r7, [r5, r2]
 80086be:	2c0d      	cmp	r4, #13
 80086c0:	d006      	beq.n	80086d0 <d_print_mod_list+0x204>
 80086c2:	4a38      	ldr	r2, [pc, #224]	; (80087a4 <d_print_mod_list+0x2d8>)
 80086c4:	5d17      	ldrb	r7, [r2, r4]
 80086c6:	2bff      	cmp	r3, #255	; 0xff
 80086c8:	d0df      	beq.n	800868a <d_print_mod_list+0x1be>
 80086ca:	001a      	movs	r2, r3
 80086cc:	3301      	adds	r3, #1
 80086ce:	e7ed      	b.n	80086ac <d_print_mod_list+0x1e0>
 80086d0:	68f3      	ldr	r3, [r6, #12]
 80086d2:	ac03      	add	r4, sp, #12
 80086d4:	1c5a      	adds	r2, r3, #1
 80086d6:	4934      	ldr	r1, [pc, #208]	; (80087a8 <d_print_mod_list+0x2dc>)
 80086d8:	0020      	movs	r0, r4
 80086da:	f013 ffa1 	bl	801c620 <sprintf>
 80086de:	0020      	movs	r0, r4
 80086e0:	f001 f80e 	bl	8009700 <strlen>
 80086e4:	9001      	str	r0, [sp, #4]
 80086e6:	2800      	cmp	r0, #0
 80086e8:	d056      	beq.n	8008798 <d_print_mod_list+0x2cc>
 80086ea:	2286      	movs	r2, #134	; 0x86
 80086ec:	4643      	mov	r3, r8
 80086ee:	0052      	lsls	r2, r2, #1
 80086f0:	4691      	mov	r9, r2
 80086f2:	3a04      	subs	r2, #4
 80086f4:	58eb      	ldr	r3, [r5, r3]
 80086f6:	2700      	movs	r7, #0
 80086f8:	4692      	mov	sl, r2
 80086fa:	46b0      	mov	r8, r6
 80086fc:	e01a      	b.n	8008734 <d_print_mod_list+0x268>
 80086fe:	2200      	movs	r2, #0
 8008700:	54ea      	strb	r2, [r5, r3]
 8008702:	464b      	mov	r3, r9
 8008704:	58ea      	ldr	r2, [r5, r3]
 8008706:	4653      	mov	r3, sl
 8008708:	21ff      	movs	r1, #255	; 0xff
 800870a:	58eb      	ldr	r3, [r5, r3]
 800870c:	0028      	movs	r0, r5
 800870e:	f000 fd77 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8008712:	2292      	movs	r2, #146	; 0x92
 8008714:	0052      	lsls	r2, r2, #1
 8008716:	58ab      	ldr	r3, [r5, r2]
 8008718:	3301      	adds	r3, #1
 800871a:	50ab      	str	r3, [r5, r2]
 800871c:	2100      	movs	r1, #0
 800871e:	2301      	movs	r3, #1
 8008720:	2280      	movs	r2, #128	; 0x80
 8008722:	0052      	lsls	r2, r2, #1
 8008724:	50ab      	str	r3, [r5, r2]
 8008726:	3204      	adds	r2, #4
 8008728:	546e      	strb	r6, [r5, r1]
 800872a:	54ae      	strb	r6, [r5, r2]
 800872c:	9a01      	ldr	r2, [sp, #4]
 800872e:	3701      	adds	r7, #1
 8008730:	42ba      	cmp	r2, r7
 8008732:	d005      	beq.n	8008740 <d_print_mod_list+0x274>
 8008734:	5de6      	ldrb	r6, [r4, r7]
 8008736:	2bff      	cmp	r3, #255	; 0xff
 8008738:	d0e1      	beq.n	80086fe <d_print_mod_list+0x232>
 800873a:	0019      	movs	r1, r3
 800873c:	3301      	adds	r3, #1
 800873e:	e7ef      	b.n	8008720 <d_print_mod_list+0x254>
 8008740:	4646      	mov	r6, r8
 8008742:	4a1a      	ldr	r2, [pc, #104]	; (80087ac <d_print_mod_list+0x2e0>)
 8008744:	4692      	mov	sl, r2
 8008746:	2286      	movs	r2, #134	; 0x86
 8008748:	0052      	lsls	r2, r2, #1
 800874a:	4691      	mov	r9, r2
 800874c:	3a04      	subs	r2, #4
 800874e:	2400      	movs	r4, #0
 8008750:	4690      	mov	r8, r2
 8008752:	e01a      	b.n	800878a <d_print_mod_list+0x2be>
 8008754:	2200      	movs	r2, #0
 8008756:	54ea      	strb	r2, [r5, r3]
 8008758:	464b      	mov	r3, r9
 800875a:	58ea      	ldr	r2, [r5, r3]
 800875c:	4643      	mov	r3, r8
 800875e:	21ff      	movs	r1, #255	; 0xff
 8008760:	58eb      	ldr	r3, [r5, r3]
 8008762:	0028      	movs	r0, r5
 8008764:	f000 fd4c 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8008768:	2292      	movs	r2, #146	; 0x92
 800876a:	0052      	lsls	r2, r2, #1
 800876c:	58ab      	ldr	r3, [r5, r2]
 800876e:	3301      	adds	r3, #1
 8008770:	50ab      	str	r3, [r5, r2]
 8008772:	2100      	movs	r1, #0
 8008774:	2301      	movs	r3, #1
 8008776:	2280      	movs	r2, #128	; 0x80
 8008778:	0052      	lsls	r2, r2, #1
 800877a:	50ab      	str	r3, [r5, r2]
 800877c:	3401      	adds	r4, #1
 800877e:	3204      	adds	r2, #4
 8008780:	546f      	strb	r7, [r5, r1]
 8008782:	54af      	strb	r7, [r5, r2]
 8008784:	2c03      	cmp	r4, #3
 8008786:	d100      	bne.n	800878a <d_print_mod_list+0x2be>
 8008788:	e737      	b.n	80085fa <d_print_mod_list+0x12e>
 800878a:	4652      	mov	r2, sl
 800878c:	5d17      	ldrb	r7, [r2, r4]
 800878e:	2bff      	cmp	r3, #255	; 0xff
 8008790:	d0e0      	beq.n	8008754 <d_print_mod_list+0x288>
 8008792:	0019      	movs	r1, r3
 8008794:	3301      	adds	r3, #1
 8008796:	e7ee      	b.n	8008776 <d_print_mod_list+0x2aa>
 8008798:	4643      	mov	r3, r8
 800879a:	58eb      	ldr	r3, [r5, r3]
 800879c:	e7d1      	b.n	8008742 <d_print_mod_list+0x276>
 800879e:	46c0      	nop			; (mov r8, r8)
 80087a0:	08026de4 	.word	0x08026de4
 80087a4:	08026de8 	.word	0x08026de8
 80087a8:	08026d94 	.word	0x08026d94
 80087ac:	08026df8 	.word	0x08026df8

080087b0 <d_print_array_type.isra.14>:
 80087b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80087b2:	4657      	mov	r7, sl
 80087b4:	464e      	mov	r6, r9
 80087b6:	4645      	mov	r5, r8
 80087b8:	46de      	mov	lr, fp
 80087ba:	b5e0      	push	{r5, r6, r7, lr}
 80087bc:	0004      	movs	r4, r0
 80087be:	b083      	sub	sp, #12
 80087c0:	4688      	mov	r8, r1
 80087c2:	4692      	mov	sl, r2
 80087c4:	1e1e      	subs	r6, r3, #0
 80087c6:	d00b      	beq.n	80087e0 <d_print_array_type.isra.14+0x30>
 80087c8:	689a      	ldr	r2, [r3, #8]
 80087ca:	2a00      	cmp	r2, #0
 80087cc:	d05c      	beq.n	8008888 <d_print_array_type.isra.14+0xd8>
 80087ce:	681b      	ldr	r3, [r3, #0]
 80087d0:	2b00      	cmp	r3, #0
 80087d2:	d1f9      	bne.n	80087c8 <d_print_array_type.isra.14+0x18>
 80087d4:	2300      	movs	r3, #0
 80087d6:	0032      	movs	r2, r6
 80087d8:	4641      	mov	r1, r8
 80087da:	0020      	movs	r0, r4
 80087dc:	f7ff fe76 	bl	80084cc <d_print_mod_list>
 80087e0:	2380      	movs	r3, #128	; 0x80
 80087e2:	005b      	lsls	r3, r3, #1
 80087e4:	58e5      	ldr	r5, [r4, r3]
 80087e6:	2dff      	cmp	r5, #255	; 0xff
 80087e8:	d000      	beq.n	80087ec <d_print_array_type.isra.14+0x3c>
 80087ea:	e0c7      	b.n	800897c <d_print_array_type.isra.14+0x1cc>
 80087ec:	2300      	movs	r3, #0
 80087ee:	5563      	strb	r3, [r4, r5]
 80087f0:	330d      	adds	r3, #13
 80087f2:	33ff      	adds	r3, #255	; 0xff
 80087f4:	58e2      	ldr	r2, [r4, r3]
 80087f6:	3b04      	subs	r3, #4
 80087f8:	58e3      	ldr	r3, [r4, r3]
 80087fa:	21ff      	movs	r1, #255	; 0xff
 80087fc:	0020      	movs	r0, r4
 80087fe:	f000 fcff 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8008802:	2292      	movs	r2, #146	; 0x92
 8008804:	0052      	lsls	r2, r2, #1
 8008806:	58a3      	ldr	r3, [r4, r2]
 8008808:	3301      	adds	r3, #1
 800880a:	50a3      	str	r3, [r4, r2]
 800880c:	2320      	movs	r3, #32
 800880e:	3a24      	subs	r2, #36	; 0x24
 8008810:	7023      	strb	r3, [r4, #0]
 8008812:	3aff      	subs	r2, #255	; 0xff
 8008814:	2180      	movs	r1, #128	; 0x80
 8008816:	1c53      	adds	r3, r2, #1
 8008818:	0049      	lsls	r1, r1, #1
 800881a:	5063      	str	r3, [r4, r1]
 800881c:	39a5      	subs	r1, #165	; 0xa5
 800881e:	54a1      	strb	r1, [r4, r2]
 8008820:	2282      	movs	r2, #130	; 0x82
 8008822:	0052      	lsls	r2, r2, #1
 8008824:	54a1      	strb	r1, [r4, r2]
 8008826:	4652      	mov	r2, sl
 8008828:	6812      	ldr	r2, [r2, #0]
 800882a:	2a00      	cmp	r2, #0
 800882c:	d124      	bne.n	8008878 <d_print_array_type.isra.14+0xc8>
 800882e:	2bff      	cmp	r3, #255	; 0xff
 8008830:	d158      	bne.n	80088e4 <d_print_array_type.isra.14+0x134>
 8008832:	2200      	movs	r2, #0
 8008834:	54e2      	strb	r2, [r4, r3]
 8008836:	2386      	movs	r3, #134	; 0x86
 8008838:	005b      	lsls	r3, r3, #1
 800883a:	58e2      	ldr	r2, [r4, r3]
 800883c:	3b04      	subs	r3, #4
 800883e:	58e3      	ldr	r3, [r4, r3]
 8008840:	21ff      	movs	r1, #255	; 0xff
 8008842:	0020      	movs	r0, r4
 8008844:	f000 fcdc 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8008848:	2292      	movs	r2, #146	; 0x92
 800884a:	0052      	lsls	r2, r2, #1
 800884c:	58a3      	ldr	r3, [r4, r2]
 800884e:	3301      	adds	r3, #1
 8008850:	50a3      	str	r3, [r4, r2]
 8008852:	2101      	movs	r1, #1
 8008854:	2300      	movs	r3, #0
 8008856:	2280      	movs	r2, #128	; 0x80
 8008858:	0052      	lsls	r2, r2, #1
 800885a:	50a1      	str	r1, [r4, r2]
 800885c:	3aa3      	subs	r2, #163	; 0xa3
 800885e:	54e2      	strb	r2, [r4, r3]
 8008860:	2382      	movs	r3, #130	; 0x82
 8008862:	005b      	lsls	r3, r3, #1
 8008864:	54e2      	strb	r2, [r4, r3]
 8008866:	b003      	add	sp, #12
 8008868:	bc3c      	pop	{r2, r3, r4, r5}
 800886a:	4690      	mov	r8, r2
 800886c:	4699      	mov	r9, r3
 800886e:	46a2      	mov	sl, r4
 8008870:	46ab      	mov	fp, r5
 8008872:	bcf0      	pop	{r4, r5, r6, r7}
 8008874:	bc01      	pop	{r0}
 8008876:	4700      	bx	r0
 8008878:	4641      	mov	r1, r8
 800887a:	0020      	movs	r0, r4
 800887c:	f7fb ff8e 	bl	800479c <d_print_comp>
 8008880:	2380      	movs	r3, #128	; 0x80
 8008882:	005b      	lsls	r3, r3, #1
 8008884:	58e3      	ldr	r3, [r4, r3]
 8008886:	e7d2      	b.n	800882e <d_print_array_type.isra.14+0x7e>
 8008888:	685b      	ldr	r3, [r3, #4]
 800888a:	781b      	ldrb	r3, [r3, #0]
 800888c:	2b2a      	cmp	r3, #42	; 0x2a
 800888e:	d12b      	bne.n	80088e8 <d_print_array_type.isra.14+0x138>
 8008890:	2300      	movs	r3, #0
 8008892:	0032      	movs	r2, r6
 8008894:	4641      	mov	r1, r8
 8008896:	0020      	movs	r0, r4
 8008898:	f7ff fe18 	bl	80084cc <d_print_mod_list>
 800889c:	2380      	movs	r3, #128	; 0x80
 800889e:	005b      	lsls	r3, r3, #1
 80088a0:	58e2      	ldr	r2, [r4, r3]
 80088a2:	2aff      	cmp	r2, #255	; 0xff
 80088a4:	d1b6      	bne.n	8008814 <d_print_array_type.isra.14+0x64>
 80088a6:	2300      	movs	r3, #0
 80088a8:	54a3      	strb	r3, [r4, r2]
 80088aa:	330d      	adds	r3, #13
 80088ac:	33ff      	adds	r3, #255	; 0xff
 80088ae:	58e2      	ldr	r2, [r4, r3]
 80088b0:	3b04      	subs	r3, #4
 80088b2:	58e3      	ldr	r3, [r4, r3]
 80088b4:	21ff      	movs	r1, #255	; 0xff
 80088b6:	0020      	movs	r0, r4
 80088b8:	f000 fca2 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 80088bc:	2292      	movs	r2, #146	; 0x92
 80088be:	0052      	lsls	r2, r2, #1
 80088c0:	58a3      	ldr	r3, [r4, r2]
 80088c2:	3301      	adds	r3, #1
 80088c4:	50a3      	str	r3, [r4, r2]
 80088c6:	2380      	movs	r3, #128	; 0x80
 80088c8:	3a24      	subs	r2, #36	; 0x24
 80088ca:	005b      	lsls	r3, r3, #1
 80088cc:	3aff      	subs	r2, #255	; 0xff
 80088ce:	50e2      	str	r2, [r4, r3]
 80088d0:	3204      	adds	r2, #4
 80088d2:	3ba5      	subs	r3, #165	; 0xa5
 80088d4:	32ff      	adds	r2, #255	; 0xff
 80088d6:	7023      	strb	r3, [r4, #0]
 80088d8:	54a3      	strb	r3, [r4, r2]
 80088da:	4653      	mov	r3, sl
 80088dc:	681a      	ldr	r2, [r3, #0]
 80088de:	2a00      	cmp	r2, #0
 80088e0:	d1ca      	bne.n	8008878 <d_print_array_type.isra.14+0xc8>
 80088e2:	2301      	movs	r3, #1
 80088e4:	1c59      	adds	r1, r3, #1
 80088e6:	e7b6      	b.n	8008856 <d_print_array_type.isra.14+0xa6>
 80088e8:	2380      	movs	r3, #128	; 0x80
 80088ea:	005b      	lsls	r3, r3, #1
 80088ec:	58e3      	ldr	r3, [r4, r3]
 80088ee:	2500      	movs	r5, #0
 80088f0:	e021      	b.n	8008936 <d_print_array_type.isra.14+0x186>
 80088f2:	2200      	movs	r2, #0
 80088f4:	54e2      	strb	r2, [r4, r3]
 80088f6:	2386      	movs	r3, #134	; 0x86
 80088f8:	005b      	lsls	r3, r3, #1
 80088fa:	58e3      	ldr	r3, [r4, r3]
 80088fc:	9300      	str	r3, [sp, #0]
 80088fe:	2384      	movs	r3, #132	; 0x84
 8008900:	005b      	lsls	r3, r3, #1
 8008902:	58e3      	ldr	r3, [r4, r3]
 8008904:	9a00      	ldr	r2, [sp, #0]
 8008906:	21ff      	movs	r1, #255	; 0xff
 8008908:	0020      	movs	r0, r4
 800890a:	9301      	str	r3, [sp, #4]
 800890c:	f000 fc78 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8008910:	2292      	movs	r2, #146	; 0x92
 8008912:	0052      	lsls	r2, r2, #1
 8008914:	58a3      	ldr	r3, [r4, r2]
 8008916:	3301      	adds	r3, #1
 8008918:	50a3      	str	r3, [r4, r2]
 800891a:	2301      	movs	r3, #1
 800891c:	2200      	movs	r2, #0
 800891e:	2180      	movs	r1, #128	; 0x80
 8008920:	0049      	lsls	r1, r1, #1
 8008922:	5063      	str	r3, [r4, r1]
 8008924:	54a7      	strb	r7, [r4, r2]
 8008926:	2282      	movs	r2, #130	; 0x82
 8008928:	0052      	lsls	r2, r2, #1
 800892a:	4689      	mov	r9, r1
 800892c:	4693      	mov	fp, r2
 800892e:	54a7      	strb	r7, [r4, r2]
 8008930:	2d01      	cmp	r5, #1
 8008932:	d007      	beq.n	8008944 <d_print_array_type.isra.14+0x194>
 8008934:	2501      	movs	r5, #1
 8008936:	4a1a      	ldr	r2, [pc, #104]	; (80089a0 <d_print_array_type.isra.14+0x1f0>)
 8008938:	5d57      	ldrb	r7, [r2, r5]
 800893a:	2bff      	cmp	r3, #255	; 0xff
 800893c:	d0d9      	beq.n	80088f2 <d_print_array_type.isra.14+0x142>
 800893e:	001a      	movs	r2, r3
 8008940:	3301      	adds	r3, #1
 8008942:	e7ec      	b.n	800891e <d_print_array_type.isra.14+0x16e>
 8008944:	2300      	movs	r3, #0
 8008946:	0032      	movs	r2, r6
 8008948:	4641      	mov	r1, r8
 800894a:	0020      	movs	r0, r4
 800894c:	f7ff fdbe 	bl	80084cc <d_print_mod_list>
 8008950:	464b      	mov	r3, r9
 8008952:	58e3      	ldr	r3, [r4, r3]
 8008954:	2bff      	cmp	r3, #255	; 0xff
 8008956:	d11b      	bne.n	8008990 <d_print_array_type.isra.14+0x1e0>
 8008958:	2200      	movs	r2, #0
 800895a:	54e2      	strb	r2, [r4, r3]
 800895c:	2386      	movs	r3, #134	; 0x86
 800895e:	005b      	lsls	r3, r3, #1
 8008960:	58e2      	ldr	r2, [r4, r3]
 8008962:	3b04      	subs	r3, #4
 8008964:	58e3      	ldr	r3, [r4, r3]
 8008966:	21ff      	movs	r1, #255	; 0xff
 8008968:	0020      	movs	r0, r4
 800896a:	f000 fc49 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 800896e:	2292      	movs	r2, #146	; 0x92
 8008970:	0052      	lsls	r2, r2, #1
 8008972:	58a3      	ldr	r3, [r4, r2]
 8008974:	3301      	adds	r3, #1
 8008976:	50a3      	str	r3, [r4, r2]
 8008978:	2329      	movs	r3, #41	; 0x29
 800897a:	7023      	strb	r3, [r4, #0]
 800897c:	2380      	movs	r3, #128	; 0x80
 800897e:	2182      	movs	r1, #130	; 0x82
 8008980:	005b      	lsls	r3, r3, #1
 8008982:	1c6a      	adds	r2, r5, #1
 8008984:	50e2      	str	r2, [r4, r3]
 8008986:	0049      	lsls	r1, r1, #1
 8008988:	3be0      	subs	r3, #224	; 0xe0
 800898a:	5563      	strb	r3, [r4, r5]
 800898c:	5463      	strb	r3, [r4, r1]
 800898e:	e788      	b.n	80088a2 <d_print_array_type.isra.14+0xf2>
 8008990:	464a      	mov	r2, r9
 8008992:	1c5d      	adds	r5, r3, #1
 8008994:	50a5      	str	r5, [r4, r2]
 8008996:	2229      	movs	r2, #41	; 0x29
 8008998:	54e2      	strb	r2, [r4, r3]
 800899a:	465b      	mov	r3, fp
 800899c:	54e2      	strb	r2, [r4, r3]
 800899e:	e722      	b.n	80087e6 <d_print_array_type.isra.14+0x36>
 80089a0:	08026fe0 	.word	0x08026fe0

080089a4 <d_print_expr_op>:
 80089a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80089a6:	46d6      	mov	lr, sl
 80089a8:	464f      	mov	r7, r9
 80089aa:	4646      	mov	r6, r8
 80089ac:	7813      	ldrb	r3, [r2, #0]
 80089ae:	b5c0      	push	{r6, r7, lr}
 80089b0:	0004      	movs	r4, r0
 80089b2:	2b31      	cmp	r3, #49	; 0x31
 80089b4:	d008      	beq.n	80089c8 <d_print_expr_op+0x24>
 80089b6:	f7fb fef1 	bl	800479c <d_print_comp>
 80089ba:	bc1c      	pop	{r2, r3, r4}
 80089bc:	4690      	mov	r8, r2
 80089be:	4699      	mov	r9, r3
 80089c0:	46a2      	mov	sl, r4
 80089c2:	bcf0      	pop	{r4, r5, r6, r7}
 80089c4:	bc01      	pop	{r0}
 80089c6:	4700      	bx	r0
 80089c8:	6893      	ldr	r3, [r2, #8]
 80089ca:	3304      	adds	r3, #4
 80089cc:	cba0      	ldmia	r3!, {r5, r7}
 80089ce:	2f00      	cmp	r7, #0
 80089d0:	d0f3      	beq.n	80089ba <d_print_expr_op+0x16>
 80089d2:	2200      	movs	r2, #0
 80089d4:	2380      	movs	r3, #128	; 0x80
 80089d6:	4692      	mov	sl, r2
 80089d8:	320d      	adds	r2, #13
 80089da:	32ff      	adds	r2, #255	; 0xff
 80089dc:	005b      	lsls	r3, r3, #1
 80089de:	4691      	mov	r9, r2
 80089e0:	3a04      	subs	r2, #4
 80089e2:	58c3      	ldr	r3, [r0, r3]
 80089e4:	19ef      	adds	r7, r5, r7
 80089e6:	4690      	mov	r8, r2
 80089e8:	e019      	b.n	8008a1e <d_print_expr_op+0x7a>
 80089ea:	4652      	mov	r2, sl
 80089ec:	54e2      	strb	r2, [r4, r3]
 80089ee:	464b      	mov	r3, r9
 80089f0:	58e2      	ldr	r2, [r4, r3]
 80089f2:	4643      	mov	r3, r8
 80089f4:	21ff      	movs	r1, #255	; 0xff
 80089f6:	58e3      	ldr	r3, [r4, r3]
 80089f8:	0020      	movs	r0, r4
 80089fa:	f000 fc01 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 80089fe:	2292      	movs	r2, #146	; 0x92
 8008a00:	0052      	lsls	r2, r2, #1
 8008a02:	58a3      	ldr	r3, [r4, r2]
 8008a04:	3301      	adds	r3, #1
 8008a06:	50a3      	str	r3, [r4, r2]
 8008a08:	2100      	movs	r1, #0
 8008a0a:	2301      	movs	r3, #1
 8008a0c:	2280      	movs	r2, #128	; 0x80
 8008a0e:	0052      	lsls	r2, r2, #1
 8008a10:	50a3      	str	r3, [r4, r2]
 8008a12:	3501      	adds	r5, #1
 8008a14:	3204      	adds	r2, #4
 8008a16:	5466      	strb	r6, [r4, r1]
 8008a18:	54a6      	strb	r6, [r4, r2]
 8008a1a:	42bd      	cmp	r5, r7
 8008a1c:	d0cd      	beq.n	80089ba <d_print_expr_op+0x16>
 8008a1e:	782e      	ldrb	r6, [r5, #0]
 8008a20:	2bff      	cmp	r3, #255	; 0xff
 8008a22:	d0e2      	beq.n	80089ea <d_print_expr_op+0x46>
 8008a24:	0019      	movs	r1, r3
 8008a26:	3301      	adds	r3, #1
 8008a28:	e7f0      	b.n	8008a0c <d_print_expr_op+0x68>
 8008a2a:	46c0      	nop			; (mov r8, r8)

08008a2c <d_print_subexpr>:
 8008a2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008a2e:	0015      	movs	r5, r2
 8008a30:	7812      	ldrb	r2, [r2, #0]
 8008a32:	0004      	movs	r4, r0
 8008a34:	000e      	movs	r6, r1
 8008a36:	2a01      	cmp	r2, #1
 8008a38:	d948      	bls.n	8008acc <d_print_subexpr+0xa0>
 8008a3a:	0013      	movs	r3, r2
 8008a3c:	3b30      	subs	r3, #48	; 0x30
 8008a3e:	4259      	negs	r1, r3
 8008a40:	414b      	adcs	r3, r1
 8008a42:	2b00      	cmp	r3, #0
 8008a44:	d142      	bne.n	8008acc <d_print_subexpr+0xa0>
 8008a46:	2a06      	cmp	r2, #6
 8008a48:	d040      	beq.n	8008acc <d_print_subexpr+0xa0>
 8008a4a:	2280      	movs	r2, #128	; 0x80
 8008a4c:	0052      	lsls	r2, r2, #1
 8008a4e:	5882      	ldr	r2, [r0, r2]
 8008a50:	2aff      	cmp	r2, #255	; 0xff
 8008a52:	d143      	bne.n	8008adc <d_print_subexpr+0xb0>
 8008a54:	5483      	strb	r3, [r0, r2]
 8008a56:	2386      	movs	r3, #134	; 0x86
 8008a58:	005b      	lsls	r3, r3, #1
 8008a5a:	58c2      	ldr	r2, [r0, r3]
 8008a5c:	3b04      	subs	r3, #4
 8008a5e:	58c3      	ldr	r3, [r0, r3]
 8008a60:	21ff      	movs	r1, #255	; 0xff
 8008a62:	f000 fbcd 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8008a66:	2292      	movs	r2, #146	; 0x92
 8008a68:	0052      	lsls	r2, r2, #1
 8008a6a:	58a3      	ldr	r3, [r4, r2]
 8008a6c:	3301      	adds	r3, #1
 8008a6e:	50a3      	str	r3, [r4, r2]
 8008a70:	2301      	movs	r3, #1
 8008a72:	2200      	movs	r2, #0
 8008a74:	2780      	movs	r7, #128	; 0x80
 8008a76:	007f      	lsls	r7, r7, #1
 8008a78:	51e3      	str	r3, [r4, r7]
 8008a7a:	2328      	movs	r3, #40	; 0x28
 8008a7c:	54a3      	strb	r3, [r4, r2]
 8008a7e:	2282      	movs	r2, #130	; 0x82
 8008a80:	0052      	lsls	r2, r2, #1
 8008a82:	54a3      	strb	r3, [r4, r2]
 8008a84:	0031      	movs	r1, r6
 8008a86:	002a      	movs	r2, r5
 8008a88:	0020      	movs	r0, r4
 8008a8a:	f7fb fe87 	bl	800479c <d_print_comp>
 8008a8e:	59e3      	ldr	r3, [r4, r7]
 8008a90:	1c59      	adds	r1, r3, #1
 8008a92:	2bff      	cmp	r3, #255	; 0xff
 8008a94:	d111      	bne.n	8008aba <d_print_subexpr+0x8e>
 8008a96:	2200      	movs	r2, #0
 8008a98:	54e2      	strb	r2, [r4, r3]
 8008a9a:	2386      	movs	r3, #134	; 0x86
 8008a9c:	005b      	lsls	r3, r3, #1
 8008a9e:	58e2      	ldr	r2, [r4, r3]
 8008aa0:	3b04      	subs	r3, #4
 8008aa2:	58e3      	ldr	r3, [r4, r3]
 8008aa4:	21ff      	movs	r1, #255	; 0xff
 8008aa6:	0020      	movs	r0, r4
 8008aa8:	f000 fbaa 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8008aac:	2292      	movs	r2, #146	; 0x92
 8008aae:	0052      	lsls	r2, r2, #1
 8008ab0:	58a3      	ldr	r3, [r4, r2]
 8008ab2:	3301      	adds	r3, #1
 8008ab4:	50a3      	str	r3, [r4, r2]
 8008ab6:	2101      	movs	r1, #1
 8008ab8:	2300      	movs	r3, #0
 8008aba:	2280      	movs	r2, #128	; 0x80
 8008abc:	0052      	lsls	r2, r2, #1
 8008abe:	50a1      	str	r1, [r4, r2]
 8008ac0:	3ad7      	subs	r2, #215	; 0xd7
 8008ac2:	54e2      	strb	r2, [r4, r3]
 8008ac4:	2382      	movs	r3, #130	; 0x82
 8008ac6:	005b      	lsls	r3, r3, #1
 8008ac8:	54e2      	strb	r2, [r4, r3]
 8008aca:	e004      	b.n	8008ad6 <d_print_subexpr+0xaa>
 8008acc:	002a      	movs	r2, r5
 8008ace:	0031      	movs	r1, r6
 8008ad0:	0020      	movs	r0, r4
 8008ad2:	f7fb fe63 	bl	800479c <d_print_comp>
 8008ad6:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008ad8:	bc01      	pop	{r0}
 8008ada:	4700      	bx	r0
 8008adc:	1c53      	adds	r3, r2, #1
 8008ade:	e7c9      	b.n	8008a74 <d_print_subexpr+0x48>

08008ae0 <d_maybe_print_fold_expression.isra.20>:
 8008ae0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008ae2:	464e      	mov	r6, r9
 8008ae4:	46de      	mov	lr, fp
 8008ae6:	4657      	mov	r7, sl
 8008ae8:	4645      	mov	r5, r8
 8008aea:	b5e0      	push	{r5, r6, r7, lr}
 8008aec:	6892      	ldr	r2, [r2, #8]
 8008aee:	6812      	ldr	r2, [r2, #0]
 8008af0:	000e      	movs	r6, r1
 8008af2:	7811      	ldrb	r1, [r2, #0]
 8008af4:	0004      	movs	r4, r0
 8008af6:	b085      	sub	sp, #20
 8008af8:	2000      	movs	r0, #0
 8008afa:	2966      	cmp	r1, #102	; 0x66
 8008afc:	d008      	beq.n	8008b10 <d_maybe_print_fold_expression.isra.20+0x30>
 8008afe:	b005      	add	sp, #20
 8008b00:	bc3c      	pop	{r2, r3, r4, r5}
 8008b02:	4690      	mov	r8, r2
 8008b04:	4699      	mov	r9, r3
 8008b06:	46a2      	mov	sl, r4
 8008b08:	46ab      	mov	fp, r5
 8008b0a:	bcf0      	pop	{r4, r5, r6, r7}
 8008b0c:	bc02      	pop	{r1}
 8008b0e:	4708      	bx	r1
 8008b10:	681b      	ldr	r3, [r3, #0]
 8008b12:	6899      	ldr	r1, [r3, #8]
 8008b14:	9101      	str	r1, [sp, #4]
 8008b16:	2100      	movs	r1, #0
 8008b18:	68db      	ldr	r3, [r3, #12]
 8008b1a:	4698      	mov	r8, r3
 8008b1c:	781b      	ldrb	r3, [r3, #0]
 8008b1e:	9103      	str	r1, [sp, #12]
 8008b20:	2b3b      	cmp	r3, #59	; 0x3b
 8008b22:	d105      	bne.n	8008b30 <d_maybe_print_fold_expression.isra.20+0x50>
 8008b24:	4643      	mov	r3, r8
 8008b26:	68db      	ldr	r3, [r3, #12]
 8008b28:	9303      	str	r3, [sp, #12]
 8008b2a:	4643      	mov	r3, r8
 8008b2c:	689b      	ldr	r3, [r3, #8]
 8008b2e:	4698      	mov	r8, r3
 8008b30:	2390      	movs	r3, #144	; 0x90
 8008b32:	005b      	lsls	r3, r3, #1
 8008b34:	58e1      	ldr	r1, [r4, r3]
 8008b36:	9102      	str	r1, [sp, #8]
 8008b38:	2101      	movs	r1, #1
 8008b3a:	4249      	negs	r1, r1
 8008b3c:	50e1      	str	r1, [r4, r3]
 8008b3e:	7853      	ldrb	r3, [r2, #1]
 8008b40:	2b52      	cmp	r3, #82	; 0x52
 8008b42:	d100      	bne.n	8008b46 <d_maybe_print_fold_expression.isra.20+0x66>
 8008b44:	e0bb      	b.n	8008cbe <d_maybe_print_fold_expression.isra.20+0x1de>
 8008b46:	d800      	bhi.n	8008b4a <d_maybe_print_fold_expression.isra.20+0x6a>
 8008b48:	e0b7      	b.n	8008cba <d_maybe_print_fold_expression.isra.20+0x1da>
 8008b4a:	2b6c      	cmp	r3, #108	; 0x6c
 8008b4c:	d059      	beq.n	8008c02 <d_maybe_print_fold_expression.isra.20+0x122>
 8008b4e:	2b72      	cmp	r3, #114	; 0x72
 8008b50:	d000      	beq.n	8008b54 <d_maybe_print_fold_expression.isra.20+0x74>
 8008b52:	e0ac      	b.n	8008cae <d_maybe_print_fold_expression.isra.20+0x1ce>
 8008b54:	2380      	movs	r3, #128	; 0x80
 8008b56:	005b      	lsls	r3, r3, #1
 8008b58:	58e3      	ldr	r3, [r4, r3]
 8008b5a:	1c5a      	adds	r2, r3, #1
 8008b5c:	2bff      	cmp	r3, #255	; 0xff
 8008b5e:	d112      	bne.n	8008b86 <d_maybe_print_fold_expression.isra.20+0xa6>
 8008b60:	2200      	movs	r2, #0
 8008b62:	54e2      	strb	r2, [r4, r3]
 8008b64:	2386      	movs	r3, #134	; 0x86
 8008b66:	005b      	lsls	r3, r3, #1
 8008b68:	58e2      	ldr	r2, [r4, r3]
 8008b6a:	3b04      	subs	r3, #4
 8008b6c:	58e3      	ldr	r3, [r4, r3]
 8008b6e:	21ff      	movs	r1, #255	; 0xff
 8008b70:	0020      	movs	r0, r4
 8008b72:	f000 fb45 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8008b76:	2292      	movs	r2, #146	; 0x92
 8008b78:	0052      	lsls	r2, r2, #1
 8008b7a:	58a3      	ldr	r3, [r4, r2]
 8008b7c:	3301      	adds	r3, #1
 8008b7e:	50a3      	str	r3, [r4, r2]
 8008b80:	2300      	movs	r3, #0
 8008b82:	3a24      	subs	r2, #36	; 0x24
 8008b84:	3aff      	subs	r2, #255	; 0xff
 8008b86:	2580      	movs	r5, #128	; 0x80
 8008b88:	006d      	lsls	r5, r5, #1
 8008b8a:	5162      	str	r2, [r4, r5]
 8008b8c:	2228      	movs	r2, #40	; 0x28
 8008b8e:	54e2      	strb	r2, [r4, r3]
 8008b90:	2382      	movs	r3, #130	; 0x82
 8008b92:	005b      	lsls	r3, r3, #1
 8008b94:	54e2      	strb	r2, [r4, r3]
 8008b96:	0031      	movs	r1, r6
 8008b98:	4642      	mov	r2, r8
 8008b9a:	0020      	movs	r0, r4
 8008b9c:	f7ff ff46 	bl	8008a2c <d_print_subexpr>
 8008ba0:	9a01      	ldr	r2, [sp, #4]
 8008ba2:	0031      	movs	r1, r6
 8008ba4:	0020      	movs	r0, r4
 8008ba6:	f7ff fefd 	bl	80089a4 <d_print_expr_op>
 8008baa:	2200      	movs	r2, #0
 8008bac:	4692      	mov	sl, r2
 8008bae:	320d      	adds	r2, #13
 8008bb0:	32ff      	adds	r2, #255	; 0xff
 8008bb2:	4691      	mov	r9, r2
 8008bb4:	3a04      	subs	r2, #4
 8008bb6:	5963      	ldr	r3, [r4, r5]
 8008bb8:	4f74      	ldr	r7, [pc, #464]	; (8008d8c <d_maybe_print_fold_expression.isra.20+0x2ac>)
 8008bba:	2500      	movs	r5, #0
 8008bbc:	4690      	mov	r8, r2
 8008bbe:	e01a      	b.n	8008bf6 <d_maybe_print_fold_expression.isra.20+0x116>
 8008bc0:	4652      	mov	r2, sl
 8008bc2:	54e2      	strb	r2, [r4, r3]
 8008bc4:	464b      	mov	r3, r9
 8008bc6:	58e2      	ldr	r2, [r4, r3]
 8008bc8:	4643      	mov	r3, r8
 8008bca:	21ff      	movs	r1, #255	; 0xff
 8008bcc:	58e3      	ldr	r3, [r4, r3]
 8008bce:	0020      	movs	r0, r4
 8008bd0:	f000 fb16 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8008bd4:	2292      	movs	r2, #146	; 0x92
 8008bd6:	0052      	lsls	r2, r2, #1
 8008bd8:	58a3      	ldr	r3, [r4, r2]
 8008bda:	3301      	adds	r3, #1
 8008bdc:	50a3      	str	r3, [r4, r2]
 8008bde:	2301      	movs	r3, #1
 8008be0:	2200      	movs	r2, #0
 8008be2:	2180      	movs	r1, #128	; 0x80
 8008be4:	0049      	lsls	r1, r1, #1
 8008be6:	5063      	str	r3, [r4, r1]
 8008be8:	54a6      	strb	r6, [r4, r2]
 8008bea:	2282      	movs	r2, #130	; 0x82
 8008bec:	3501      	adds	r5, #1
 8008bee:	0052      	lsls	r2, r2, #1
 8008bf0:	54a6      	strb	r6, [r4, r2]
 8008bf2:	2d04      	cmp	r5, #4
 8008bf4:	d05b      	beq.n	8008cae <d_maybe_print_fold_expression.isra.20+0x1ce>
 8008bf6:	5d7e      	ldrb	r6, [r7, r5]
 8008bf8:	2bff      	cmp	r3, #255	; 0xff
 8008bfa:	d0e1      	beq.n	8008bc0 <d_maybe_print_fold_expression.isra.20+0xe0>
 8008bfc:	001a      	movs	r2, r3
 8008bfe:	3301      	adds	r3, #1
 8008c00:	e7ef      	b.n	8008be2 <d_maybe_print_fold_expression.isra.20+0x102>
 8008c02:	2286      	movs	r2, #134	; 0x86
 8008c04:	2380      	movs	r3, #128	; 0x80
 8008c06:	0052      	lsls	r2, r2, #1
 8008c08:	005b      	lsls	r3, r3, #1
 8008c0a:	4693      	mov	fp, r2
 8008c0c:	3a04      	subs	r2, #4
 8008c0e:	58e3      	ldr	r3, [r4, r3]
 8008c10:	2500      	movs	r5, #0
 8008c12:	4692      	mov	sl, r2
 8008c14:	e01b      	b.n	8008c4e <d_maybe_print_fold_expression.isra.20+0x16e>
 8008c16:	2200      	movs	r2, #0
 8008c18:	54e2      	strb	r2, [r4, r3]
 8008c1a:	465b      	mov	r3, fp
 8008c1c:	58e2      	ldr	r2, [r4, r3]
 8008c1e:	4653      	mov	r3, sl
 8008c20:	21ff      	movs	r1, #255	; 0xff
 8008c22:	58e3      	ldr	r3, [r4, r3]
 8008c24:	0020      	movs	r0, r4
 8008c26:	f000 faeb 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8008c2a:	2292      	movs	r2, #146	; 0x92
 8008c2c:	0052      	lsls	r2, r2, #1
 8008c2e:	58a3      	ldr	r3, [r4, r2]
 8008c30:	3301      	adds	r3, #1
 8008c32:	50a3      	str	r3, [r4, r2]
 8008c34:	2301      	movs	r3, #1
 8008c36:	2200      	movs	r2, #0
 8008c38:	2180      	movs	r1, #128	; 0x80
 8008c3a:	0049      	lsls	r1, r1, #1
 8008c3c:	5063      	str	r3, [r4, r1]
 8008c3e:	54a7      	strb	r7, [r4, r2]
 8008c40:	2282      	movs	r2, #130	; 0x82
 8008c42:	3501      	adds	r5, #1
 8008c44:	0052      	lsls	r2, r2, #1
 8008c46:	4689      	mov	r9, r1
 8008c48:	54a7      	strb	r7, [r4, r2]
 8008c4a:	2d04      	cmp	r5, #4
 8008c4c:	d006      	beq.n	8008c5c <d_maybe_print_fold_expression.isra.20+0x17c>
 8008c4e:	4a50      	ldr	r2, [pc, #320]	; (8008d90 <d_maybe_print_fold_expression.isra.20+0x2b0>)
 8008c50:	5d57      	ldrb	r7, [r2, r5]
 8008c52:	2bff      	cmp	r3, #255	; 0xff
 8008c54:	d0df      	beq.n	8008c16 <d_maybe_print_fold_expression.isra.20+0x136>
 8008c56:	001a      	movs	r2, r3
 8008c58:	3301      	adds	r3, #1
 8008c5a:	e7ed      	b.n	8008c38 <d_maybe_print_fold_expression.isra.20+0x158>
 8008c5c:	9a01      	ldr	r2, [sp, #4]
 8008c5e:	0031      	movs	r1, r6
 8008c60:	0020      	movs	r0, r4
 8008c62:	f7ff fe9f 	bl	80089a4 <d_print_expr_op>
 8008c66:	4642      	mov	r2, r8
 8008c68:	0031      	movs	r1, r6
 8008c6a:	0020      	movs	r0, r4
 8008c6c:	f7ff fede 	bl	8008a2c <d_print_subexpr>
 8008c70:	464b      	mov	r3, r9
 8008c72:	58e3      	ldr	r3, [r4, r3]
 8008c74:	2bff      	cmp	r3, #255	; 0xff
 8008c76:	d000      	beq.n	8008c7a <d_maybe_print_fold_expression.isra.20+0x19a>
 8008c78:	e086      	b.n	8008d88 <d_maybe_print_fold_expression.isra.20+0x2a8>
 8008c7a:	2200      	movs	r2, #0
 8008c7c:	54e2      	strb	r2, [r4, r3]
 8008c7e:	2386      	movs	r3, #134	; 0x86
 8008c80:	005b      	lsls	r3, r3, #1
 8008c82:	58e2      	ldr	r2, [r4, r3]
 8008c84:	3b04      	subs	r3, #4
 8008c86:	58e3      	ldr	r3, [r4, r3]
 8008c88:	21ff      	movs	r1, #255	; 0xff
 8008c8a:	0020      	movs	r0, r4
 8008c8c:	f000 fab8 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8008c90:	2292      	movs	r2, #146	; 0x92
 8008c92:	0052      	lsls	r2, r2, #1
 8008c94:	58a3      	ldr	r3, [r4, r2]
 8008c96:	3301      	adds	r3, #1
 8008c98:	50a3      	str	r3, [r4, r2]
 8008c9a:	2101      	movs	r1, #1
 8008c9c:	2300      	movs	r3, #0
 8008c9e:	2280      	movs	r2, #128	; 0x80
 8008ca0:	0052      	lsls	r2, r2, #1
 8008ca2:	50a1      	str	r1, [r4, r2]
 8008ca4:	3ad7      	subs	r2, #215	; 0xd7
 8008ca6:	54e2      	strb	r2, [r4, r3]
 8008ca8:	2382      	movs	r3, #130	; 0x82
 8008caa:	005b      	lsls	r3, r3, #1
 8008cac:	54e2      	strb	r2, [r4, r3]
 8008cae:	2390      	movs	r3, #144	; 0x90
 8008cb0:	9a02      	ldr	r2, [sp, #8]
 8008cb2:	005b      	lsls	r3, r3, #1
 8008cb4:	50e2      	str	r2, [r4, r3]
 8008cb6:	2001      	movs	r0, #1
 8008cb8:	e721      	b.n	8008afe <d_maybe_print_fold_expression.isra.20+0x1e>
 8008cba:	2b4c      	cmp	r3, #76	; 0x4c
 8008cbc:	d1f7      	bne.n	8008cae <d_maybe_print_fold_expression.isra.20+0x1ce>
 8008cbe:	2580      	movs	r5, #128	; 0x80
 8008cc0:	006d      	lsls	r5, r5, #1
 8008cc2:	5963      	ldr	r3, [r4, r5]
 8008cc4:	2bff      	cmp	r3, #255	; 0xff
 8008cc6:	d10f      	bne.n	8008ce8 <d_maybe_print_fold_expression.isra.20+0x208>
 8008cc8:	2700      	movs	r7, #0
 8008cca:	54e7      	strb	r7, [r4, r3]
 8008ccc:	330d      	adds	r3, #13
 8008cce:	58e2      	ldr	r2, [r4, r3]
 8008cd0:	3b04      	subs	r3, #4
 8008cd2:	58e3      	ldr	r3, [r4, r3]
 8008cd4:	21ff      	movs	r1, #255	; 0xff
 8008cd6:	0020      	movs	r0, r4
 8008cd8:	f000 fa92 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8008cdc:	2292      	movs	r2, #146	; 0x92
 8008cde:	0052      	lsls	r2, r2, #1
 8008ce0:	58a3      	ldr	r3, [r4, r2]
 8008ce2:	3301      	adds	r3, #1
 8008ce4:	5167      	str	r7, [r4, r5]
 8008ce6:	50a3      	str	r3, [r4, r2]
 8008ce8:	2580      	movs	r5, #128	; 0x80
 8008cea:	006d      	lsls	r5, r5, #1
 8008cec:	5962      	ldr	r2, [r4, r5]
 8008cee:	1c53      	adds	r3, r2, #1
 8008cf0:	5163      	str	r3, [r4, r5]
 8008cf2:	2328      	movs	r3, #40	; 0x28
 8008cf4:	54a3      	strb	r3, [r4, r2]
 8008cf6:	2282      	movs	r2, #130	; 0x82
 8008cf8:	0052      	lsls	r2, r2, #1
 8008cfa:	54a3      	strb	r3, [r4, r2]
 8008cfc:	0031      	movs	r1, r6
 8008cfe:	4642      	mov	r2, r8
 8008d00:	0020      	movs	r0, r4
 8008d02:	f7ff fe93 	bl	8008a2c <d_print_subexpr>
 8008d06:	9a01      	ldr	r2, [sp, #4]
 8008d08:	0031      	movs	r1, r6
 8008d0a:	0020      	movs	r0, r4
 8008d0c:	f7ff fe4a 	bl	80089a4 <d_print_expr_op>
 8008d10:	4a20      	ldr	r2, [pc, #128]	; (8008d94 <d_maybe_print_fold_expression.isra.20+0x2b4>)
 8008d12:	4691      	mov	r9, r2
 8008d14:	2286      	movs	r2, #134	; 0x86
 8008d16:	0052      	lsls	r2, r2, #1
 8008d18:	4693      	mov	fp, r2
 8008d1a:	3a04      	subs	r2, #4
 8008d1c:	5963      	ldr	r3, [r4, r5]
 8008d1e:	4692      	mov	sl, r2
 8008d20:	2500      	movs	r5, #0
 8008d22:	e01b      	b.n	8008d5c <d_maybe_print_fold_expression.isra.20+0x27c>
 8008d24:	2200      	movs	r2, #0
 8008d26:	54e2      	strb	r2, [r4, r3]
 8008d28:	465b      	mov	r3, fp
 8008d2a:	58e2      	ldr	r2, [r4, r3]
 8008d2c:	4653      	mov	r3, sl
 8008d2e:	21ff      	movs	r1, #255	; 0xff
 8008d30:	58e3      	ldr	r3, [r4, r3]
 8008d32:	0020      	movs	r0, r4
 8008d34:	f000 fa64 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8008d38:	2292      	movs	r2, #146	; 0x92
 8008d3a:	0052      	lsls	r2, r2, #1
 8008d3c:	58a3      	ldr	r3, [r4, r2]
 8008d3e:	3301      	adds	r3, #1
 8008d40:	50a3      	str	r3, [r4, r2]
 8008d42:	2301      	movs	r3, #1
 8008d44:	2200      	movs	r2, #0
 8008d46:	2180      	movs	r1, #128	; 0x80
 8008d48:	0049      	lsls	r1, r1, #1
 8008d4a:	5063      	str	r3, [r4, r1]
 8008d4c:	54a7      	strb	r7, [r4, r2]
 8008d4e:	2282      	movs	r2, #130	; 0x82
 8008d50:	3501      	adds	r5, #1
 8008d52:	0052      	lsls	r2, r2, #1
 8008d54:	4688      	mov	r8, r1
 8008d56:	54a7      	strb	r7, [r4, r2]
 8008d58:	2d03      	cmp	r5, #3
 8008d5a:	d006      	beq.n	8008d6a <d_maybe_print_fold_expression.isra.20+0x28a>
 8008d5c:	464a      	mov	r2, r9
 8008d5e:	5d57      	ldrb	r7, [r2, r5]
 8008d60:	2bff      	cmp	r3, #255	; 0xff
 8008d62:	d0df      	beq.n	8008d24 <d_maybe_print_fold_expression.isra.20+0x244>
 8008d64:	001a      	movs	r2, r3
 8008d66:	3301      	adds	r3, #1
 8008d68:	e7ed      	b.n	8008d46 <d_maybe_print_fold_expression.isra.20+0x266>
 8008d6a:	9a01      	ldr	r2, [sp, #4]
 8008d6c:	0031      	movs	r1, r6
 8008d6e:	0020      	movs	r0, r4
 8008d70:	f7ff fe18 	bl	80089a4 <d_print_expr_op>
 8008d74:	9a03      	ldr	r2, [sp, #12]
 8008d76:	0031      	movs	r1, r6
 8008d78:	0020      	movs	r0, r4
 8008d7a:	f7ff fe57 	bl	8008a2c <d_print_subexpr>
 8008d7e:	4643      	mov	r3, r8
 8008d80:	58e3      	ldr	r3, [r4, r3]
 8008d82:	2bff      	cmp	r3, #255	; 0xff
 8008d84:	d100      	bne.n	8008d88 <d_maybe_print_fold_expression.isra.20+0x2a8>
 8008d86:	e778      	b.n	8008c7a <d_maybe_print_fold_expression.isra.20+0x19a>
 8008d88:	1c59      	adds	r1, r3, #1
 8008d8a:	e788      	b.n	8008c9e <d_maybe_print_fold_expression.isra.20+0x1be>
 8008d8c:	080270e0 	.word	0x080270e0
 8008d90:	080270d8 	.word	0x080270d8
 8008d94:	08026fe4 	.word	0x08026fe4

08008d98 <d_demangle_callback.constprop.22>:
 8008d98:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008d9a:	4645      	mov	r5, r8
 8008d9c:	46de      	mov	lr, fp
 8008d9e:	4657      	mov	r7, sl
 8008da0:	464e      	mov	r6, r9
 8008da2:	b5e0      	push	{r5, r6, r7, lr}
 8008da4:	b0e5      	sub	sp, #404	; 0x194
 8008da6:	7803      	ldrb	r3, [r0, #0]
 8008da8:	af00      	add	r7, sp, #0
 8008daa:	0005      	movs	r5, r0
 8008dac:	468b      	mov	fp, r1
 8008dae:	607a      	str	r2, [r7, #4]
 8008db0:	4698      	mov	r8, r3
 8008db2:	2b5f      	cmp	r3, #95	; 0x5f
 8008db4:	d100      	bne.n	8008db8 <d_demangle_callback.constprop.22+0x20>
 8008db6:	e0e3      	b.n	8008f80 <d_demangle_callback.constprop.22+0x1e8>
 8008db8:	2208      	movs	r2, #8
 8008dba:	49d2      	ldr	r1, [pc, #840]	; (8009104 <d_demangle_callback.constprop.22+0x36c>)
 8008dbc:	0028      	movs	r0, r5
 8008dbe:	f013 fc51 	bl	801c664 <strncmp>
 8008dc2:	2600      	movs	r6, #0
 8008dc4:	2800      	cmp	r0, #0
 8008dc6:	d114      	bne.n	8008df2 <d_demangle_callback.constprop.22+0x5a>
 8008dc8:	7a29      	ldrb	r1, [r5, #8]
 8008dca:	000b      	movs	r3, r1
 8008dcc:	3b2e      	subs	r3, #46	; 0x2e
 8008dce:	425a      	negs	r2, r3
 8008dd0:	4153      	adcs	r3, r2
 8008dd2:	000a      	movs	r2, r1
 8008dd4:	3a5f      	subs	r2, #95	; 0x5f
 8008dd6:	4250      	negs	r0, r2
 8008dd8:	4142      	adcs	r2, r0
 8008dda:	4313      	orrs	r3, r2
 8008ddc:	d101      	bne.n	8008de2 <d_demangle_callback.constprop.22+0x4a>
 8008dde:	2924      	cmp	r1, #36	; 0x24
 8008de0:	d107      	bne.n	8008df2 <d_demangle_callback.constprop.22+0x5a>
 8008de2:	7a6b      	ldrb	r3, [r5, #9]
 8008de4:	2b44      	cmp	r3, #68	; 0x44
 8008de6:	d100      	bne.n	8008dea <d_demangle_callback.constprop.22+0x52>
 8008de8:	e152      	b.n	8009090 <d_demangle_callback.constprop.22+0x2f8>
 8008dea:	2600      	movs	r6, #0
 8008dec:	2b49      	cmp	r3, #73	; 0x49
 8008dee:	d100      	bne.n	8008df2 <d_demangle_callback.constprop.22+0x5a>
 8008df0:	e14e      	b.n	8009090 <d_demangle_callback.constprop.22+0x2f8>
 8008df2:	0028      	movs	r0, r5
 8008df4:	f000 fc84 	bl	8009700 <strlen>
 8008df8:	230c      	movs	r3, #12
 8008dfa:	18fc      	adds	r4, r7, r3
 8008dfc:	182b      	adds	r3, r5, r0
 8008dfe:	6063      	str	r3, [r4, #4]
 8008e00:	2311      	movs	r3, #17
 8008e02:	60a3      	str	r3, [r4, #8]
 8008e04:	0043      	lsls	r3, r0, #1
 8008e06:	469a      	mov	sl, r3
 8008e08:	61a3      	str	r3, [r4, #24]
 8008e0a:	2300      	movs	r3, #0
 8008e0c:	466a      	mov	r2, sp
 8008e0e:	6163      	str	r3, [r4, #20]
 8008e10:	6223      	str	r3, [r4, #32]
 8008e12:	62a3      	str	r3, [r4, #40]	; 0x28
 8008e14:	62e3      	str	r3, [r4, #44]	; 0x2c
 8008e16:	6323      	str	r3, [r4, #48]	; 0x30
 8008e18:	6363      	str	r3, [r4, #52]	; 0x34
 8008e1a:	63a3      	str	r3, [r4, #56]	; 0x38
 8008e1c:	0143      	lsls	r3, r0, #5
 8008e1e:	3308      	adds	r3, #8
 8008e20:	1ad3      	subs	r3, r2, r3
 8008e22:	469d      	mov	sp, r3
 8008e24:	46e9      	mov	r9, sp
 8008e26:	6260      	str	r0, [r4, #36]	; 0x24
 8008e28:	0080      	lsls	r0, r0, #2
 8008e2a:	300a      	adds	r0, #10
 8008e2c:	08c0      	lsrs	r0, r0, #3
 8008e2e:	00c0      	lsls	r0, r0, #3
 8008e30:	1a1b      	subs	r3, r3, r0
 8008e32:	469d      	mov	sp, r3
 8008e34:	464b      	mov	r3, r9
 8008e36:	6123      	str	r3, [r4, #16]
 8008e38:	466b      	mov	r3, sp
 8008e3a:	60fd      	str	r5, [r7, #12]
 8008e3c:	60e5      	str	r5, [r4, #12]
 8008e3e:	61e3      	str	r3, [r4, #28]
 8008e40:	2e01      	cmp	r6, #1
 8008e42:	d037      	beq.n	8008eb4 <d_demangle_callback.constprop.22+0x11c>
 8008e44:	2e00      	cmp	r6, #0
 8008e46:	d100      	bne.n	8008e4a <d_demangle_callback.constprop.22+0xb2>
 8008e48:	e0a0      	b.n	8008f8c <d_demangle_callback.constprop.22+0x1f4>
 8008e4a:	2e03      	cmp	r6, #3
 8008e4c:	d900      	bls.n	8008e50 <d_demangle_callback.constprop.22+0xb8>
 8008e4e:	e09d      	b.n	8008f8c <d_demangle_callback.constprop.22+0x1f4>
 8008e50:	230b      	movs	r3, #11
 8008e52:	4698      	mov	r8, r3
 8008e54:	44a8      	add	r8, r5
 8008e56:	4643      	mov	r3, r8
 8008e58:	3e02      	subs	r6, #2
 8008e5a:	60e3      	str	r3, [r4, #12]
 8008e5c:	1e73      	subs	r3, r6, #1
 8008e5e:	419e      	sbcs	r6, r3
 8008e60:	7aeb      	ldrb	r3, [r5, #11]
 8008e62:	3643      	adds	r6, #67	; 0x43
 8008e64:	2b5f      	cmp	r3, #95	; 0x5f
 8008e66:	d100      	bne.n	8008e6a <d_demangle_callback.constprop.22+0xd2>
 8008e68:	e11d      	b.n	80090a6 <d_demangle_callback.constprop.22+0x30e>
 8008e6a:	4640      	mov	r0, r8
 8008e6c:	f000 fc48 	bl	8009700 <strlen>
 8008e70:	4653      	mov	r3, sl
 8008e72:	2b00      	cmp	r3, #0
 8008e74:	dd00      	ble.n	8008e78 <d_demangle_callback.constprop.22+0xe0>
 8008e76:	e122      	b.n	80090be <d_demangle_callback.constprop.22+0x326>
 8008e78:	2300      	movs	r3, #0
 8008e7a:	4699      	mov	r9, r3
 8008e7c:	2300      	movs	r3, #0
 8008e7e:	464a      	mov	r2, r9
 8008e80:	0031      	movs	r1, r6
 8008e82:	0020      	movs	r0, r4
 8008e84:	f7f9 f8cc 	bl	8002020 <d_make_comp>
 8008e88:	69bc      	ldr	r4, [r7, #24]
 8008e8a:	0005      	movs	r5, r0
 8008e8c:	0020      	movs	r0, r4
 8008e8e:	f000 fc37 	bl	8009700 <strlen>
 8008e92:	1824      	adds	r4, r4, r0
 8008e94:	61bc      	str	r4, [r7, #24]
 8008e96:	7823      	ldrb	r3, [r4, #0]
 8008e98:	2b00      	cmp	r3, #0
 8008e9a:	d100      	bne.n	8008e9e <d_demangle_callback.constprop.22+0x106>
 8008e9c:	e07f      	b.n	8008f9e <d_demangle_callback.constprop.22+0x206>
 8008e9e:	2000      	movs	r0, #0
 8008ea0:	46bd      	mov	sp, r7
 8008ea2:	b065      	add	sp, #404	; 0x194
 8008ea4:	bc3c      	pop	{r2, r3, r4, r5}
 8008ea6:	4690      	mov	r8, r2
 8008ea8:	4699      	mov	r9, r3
 8008eaa:	46a2      	mov	sl, r4
 8008eac:	46ab      	mov	fp, r5
 8008eae:	bcf0      	pop	{r4, r5, r6, r7}
 8008eb0:	bc02      	pop	{r1}
 8008eb2:	4708      	bx	r1
 8008eb4:	4643      	mov	r3, r8
 8008eb6:	2b5f      	cmp	r3, #95	; 0x5f
 8008eb8:	d1f1      	bne.n	8008e9e <d_demangle_callback.constprop.22+0x106>
 8008eba:	1c6b      	adds	r3, r5, #1
 8008ebc:	60e3      	str	r3, [r4, #12]
 8008ebe:	786b      	ldrb	r3, [r5, #1]
 8008ec0:	2b5a      	cmp	r3, #90	; 0x5a
 8008ec2:	d1ec      	bne.n	8008e9e <d_demangle_callback.constprop.22+0x106>
 8008ec4:	3502      	adds	r5, #2
 8008ec6:	2101      	movs	r1, #1
 8008ec8:	0020      	movs	r0, r4
 8008eca:	60e5      	str	r5, [r4, #12]
 8008ecc:	f7fb f9da 	bl	8004284 <d_encoding>
 8008ed0:	68a3      	ldr	r3, [r4, #8]
 8008ed2:	0005      	movs	r5, r0
 8008ed4:	4233      	tst	r3, r6
 8008ed6:	d100      	bne.n	8008eda <d_demangle_callback.constprop.22+0x142>
 8008ed8:	e100      	b.n	80090dc <d_demangle_callback.constprop.22+0x344>
 8008eda:	2219      	movs	r2, #25
 8008edc:	4691      	mov	r9, r2
 8008ede:	2200      	movs	r2, #0
 8008ee0:	68e0      	ldr	r0, [r4, #12]
 8008ee2:	7803      	ldrb	r3, [r0, #0]
 8008ee4:	4690      	mov	r8, r2
 8008ee6:	2b2e      	cmp	r3, #46	; 0x2e
 8008ee8:	d156      	bne.n	8008f98 <d_demangle_callback.constprop.22+0x200>
 8008eea:	7843      	ldrb	r3, [r0, #1]
 8008eec:	001a      	movs	r2, r3
 8008eee:	3a61      	subs	r2, #97	; 0x61
 8008ef0:	0612      	lsls	r2, r2, #24
 8008ef2:	0e12      	lsrs	r2, r2, #24
 8008ef4:	4591      	cmp	r9, r2
 8008ef6:	d300      	bcc.n	8008efa <d_demangle_callback.constprop.22+0x162>
 8008ef8:	e0f5      	b.n	80090e6 <d_demangle_callback.constprop.22+0x34e>
 8008efa:	2b5f      	cmp	r3, #95	; 0x5f
 8008efc:	d100      	bne.n	8008f00 <d_demangle_callback.constprop.22+0x168>
 8008efe:	e0f2      	b.n	80090e6 <d_demangle_callback.constprop.22+0x34e>
 8008f00:	3b30      	subs	r3, #48	; 0x30
 8008f02:	061b      	lsls	r3, r3, #24
 8008f04:	0e1b      	lsrs	r3, r3, #24
 8008f06:	2b09      	cmp	r3, #9
 8008f08:	d900      	bls.n	8008f0c <d_demangle_callback.constprop.22+0x174>
 8008f0a:	e0e7      	b.n	80090dc <d_demangle_callback.constprop.22+0x344>
 8008f0c:	0006      	movs	r6, r0
 8008f0e:	7801      	ldrb	r1, [r0, #0]
 8008f10:	292e      	cmp	r1, #46	; 0x2e
 8008f12:	d113      	bne.n	8008f3c <d_demangle_callback.constprop.22+0x1a4>
 8008f14:	7873      	ldrb	r3, [r6, #1]
 8008f16:	3b30      	subs	r3, #48	; 0x30
 8008f18:	061b      	lsls	r3, r3, #24
 8008f1a:	0e1b      	lsrs	r3, r3, #24
 8008f1c:	2b09      	cmp	r3, #9
 8008f1e:	d80d      	bhi.n	8008f3c <d_demangle_callback.constprop.22+0x1a4>
 8008f20:	1cb2      	adds	r2, r6, #2
 8008f22:	78b1      	ldrb	r1, [r6, #2]
 8008f24:	e001      	b.n	8008f2a <d_demangle_callback.constprop.22+0x192>
 8008f26:	3201      	adds	r2, #1
 8008f28:	7811      	ldrb	r1, [r2, #0]
 8008f2a:	000b      	movs	r3, r1
 8008f2c:	3b30      	subs	r3, #48	; 0x30
 8008f2e:	061b      	lsls	r3, r3, #24
 8008f30:	0e1b      	lsrs	r3, r3, #24
 8008f32:	2b09      	cmp	r3, #9
 8008f34:	d9f7      	bls.n	8008f26 <d_demangle_callback.constprop.22+0x18e>
 8008f36:	0016      	movs	r6, r2
 8008f38:	292e      	cmp	r1, #46	; 0x2e
 8008f3a:	d0eb      	beq.n	8008f14 <d_demangle_callback.constprop.22+0x17c>
 8008f3c:	6962      	ldr	r2, [r4, #20]
 8008f3e:	69a3      	ldr	r3, [r4, #24]
 8008f40:	60e6      	str	r6, [r4, #12]
 8008f42:	429a      	cmp	r2, r3
 8008f44:	db00      	blt.n	8008f48 <d_demangle_callback.constprop.22+0x1b0>
 8008f46:	e0cc      	b.n	80090e2 <d_demangle_callback.constprop.22+0x34a>
 8008f48:	6921      	ldr	r1, [r4, #16]
 8008f4a:	468c      	mov	ip, r1
 8008f4c:	4641      	mov	r1, r8
 8008f4e:	0113      	lsls	r3, r2, #4
 8008f50:	4463      	add	r3, ip
 8008f52:	3201      	adds	r2, #1
 8008f54:	6059      	str	r1, [r3, #4]
 8008f56:	1a36      	subs	r6, r6, r0
 8008f58:	6162      	str	r2, [r4, #20]
 8008f5a:	d100      	bne.n	8008f5e <d_demangle_callback.constprop.22+0x1c6>
 8008f5c:	e0c1      	b.n	80090e2 <d_demangle_callback.constprop.22+0x34a>
 8008f5e:	6059      	str	r1, [r3, #4]
 8008f60:	7019      	strb	r1, [r3, #0]
 8008f62:	6098      	str	r0, [r3, #8]
 8008f64:	60de      	str	r6, [r3, #12]
 8008f66:	002a      	movs	r2, r5
 8008f68:	0020      	movs	r0, r4
 8008f6a:	214d      	movs	r1, #77	; 0x4d
 8008f6c:	f7f9 f858 	bl	8002020 <d_make_comp>
 8008f70:	230c      	movs	r3, #12
 8008f72:	18fc      	adds	r4, r7, r3
 8008f74:	0005      	movs	r5, r0
 8008f76:	68e0      	ldr	r0, [r4, #12]
 8008f78:	7803      	ldrb	r3, [r0, #0]
 8008f7a:	2b2e      	cmp	r3, #46	; 0x2e
 8008f7c:	d0b5      	beq.n	8008eea <d_demangle_callback.constprop.22+0x152>
 8008f7e:	e00b      	b.n	8008f98 <d_demangle_callback.constprop.22+0x200>
 8008f80:	7843      	ldrb	r3, [r0, #1]
 8008f82:	2b5a      	cmp	r3, #90	; 0x5a
 8008f84:	d000      	beq.n	8008f88 <d_demangle_callback.constprop.22+0x1f0>
 8008f86:	e717      	b.n	8008db8 <d_demangle_callback.constprop.22+0x20>
 8008f88:	2601      	movs	r6, #1
 8008f8a:	e732      	b.n	8008df2 <d_demangle_callback.constprop.22+0x5a>
 8008f8c:	0020      	movs	r0, r4
 8008f8e:	f7fa fadb 	bl	8003548 <d_type>
 8008f92:	0005      	movs	r5, r0
 8008f94:	69bb      	ldr	r3, [r7, #24]
 8008f96:	781b      	ldrb	r3, [r3, #0]
 8008f98:	2b00      	cmp	r3, #0
 8008f9a:	d000      	beq.n	8008f9e <d_demangle_callback.constprop.22+0x206>
 8008f9c:	e77f      	b.n	8008e9e <d_demangle_callback.constprop.22+0x106>
 8008f9e:	2d00      	cmp	r5, #0
 8008fa0:	d100      	bne.n	8008fa4 <d_demangle_callback.constprop.22+0x20c>
 8008fa2:	e77c      	b.n	8008e9e <d_demangle_callback.constprop.22+0x106>
 8008fa4:	2108      	movs	r1, #8
 8008fa6:	2600      	movs	r6, #0
 8008fa8:	187a      	adds	r2, r7, r1
 8008faa:	3340      	adds	r3, #64	; 0x40
 8008fac:	18d4      	adds	r4, r2, r3
 8008fae:	465a      	mov	r2, fp
 8008fb0:	33c0      	adds	r3, #192	; 0xc0
 8008fb2:	50e6      	str	r6, [r4, r3]
 8008fb4:	3304      	adds	r3, #4
 8008fb6:	54e6      	strb	r6, [r4, r3]
 8008fb8:	330c      	adds	r3, #12
 8008fba:	50e6      	str	r6, [r4, r3]
 8008fbc:	3304      	adds	r3, #4
 8008fbe:	50e6      	str	r6, [r4, r3]
 8008fc0:	330c      	adds	r3, #12
 8008fc2:	50e6      	str	r6, [r4, r3]
 8008fc4:	3304      	adds	r3, #4
 8008fc6:	50e6      	str	r6, [r4, r3]
 8008fc8:	3b1c      	subs	r3, #28
 8008fca:	50e2      	str	r2, [r4, r3]
 8008fcc:	687a      	ldr	r2, [r7, #4]
 8008fce:	3304      	adds	r3, #4
 8008fd0:	50e2      	str	r2, [r4, r3]
 8008fd2:	330c      	adds	r3, #12
 8008fd4:	50e6      	str	r6, [r4, r3]
 8008fd6:	3304      	adds	r3, #4
 8008fd8:	50e6      	str	r6, [r4, r3]
 8008fda:	330c      	adds	r3, #12
 8008fdc:	50e6      	str	r6, [r4, r3]
 8008fde:	3304      	adds	r3, #4
 8008fe0:	50e6      	str	r6, [r4, r3]
 8008fe2:	0008      	movs	r0, r1
 8008fe4:	3304      	adds	r3, #4
 8008fe6:	50e6      	str	r6, [r4, r3]
 8008fe8:	3304      	adds	r3, #4
 8008fea:	4699      	mov	r9, r3
 8008fec:	50e6      	str	r6, [r4, r3]
 8008fee:	3304      	adds	r3, #4
 8008ff0:	50e6      	str	r6, [r4, r3]
 8008ff2:	3304      	adds	r3, #4
 8008ff4:	50e6      	str	r6, [r4, r3]
 8008ff6:	3304      	adds	r3, #4
 8008ff8:	4698      	mov	r8, r3
 8008ffa:	50e6      	str	r6, [r4, r3]
 8008ffc:	1879      	adds	r1, r7, r1
 8008ffe:	3334      	adds	r3, #52	; 0x34
 8009000:	18c9      	adds	r1, r1, r3
 8009002:	1838      	adds	r0, r7, r0
 8009004:	330c      	adds	r3, #12
 8009006:	002a      	movs	r2, r5
 8009008:	18c0      	adds	r0, r0, r3
 800900a:	f7f9 f84b 	bl	80020a4 <d_count_templates_scopes>
 800900e:	464b      	mov	r3, r9
 8009010:	58e2      	ldr	r2, [r4, r3]
 8009012:	4643      	mov	r3, r8
 8009014:	58e3      	ldr	r3, [r4, r3]
 8009016:	469c      	mov	ip, r3
 8009018:	4641      	mov	r1, r8
 800901a:	4663      	mov	r3, ip
 800901c:	4353      	muls	r3, r2
 800901e:	5063      	str	r3, [r4, r1]
 8009020:	3104      	adds	r1, #4
 8009022:	5066      	str	r6, [r4, r1]
 8009024:	466e      	mov	r6, sp
 8009026:	2a00      	cmp	r2, #0
 8009028:	dd30      	ble.n	800908c <d_demangle_callback.constprop.22+0x2f4>
 800902a:	4669      	mov	r1, sp
 800902c:	00d2      	lsls	r2, r2, #3
 800902e:	3208      	adds	r2, #8
 8009030:	1a8a      	subs	r2, r1, r2
 8009032:	4695      	mov	sp, r2
 8009034:	2b00      	cmp	r3, #0
 8009036:	dd27      	ble.n	8009088 <d_demangle_callback.constprop.22+0x2f0>
 8009038:	4669      	mov	r1, sp
 800903a:	00db      	lsls	r3, r3, #3
 800903c:	3308      	adds	r3, #8
 800903e:	1acb      	subs	r3, r1, r3
 8009040:	469d      	mov	sp, r3
 8009042:	2396      	movs	r3, #150	; 0x96
 8009044:	005b      	lsls	r3, r3, #1
 8009046:	50e2      	str	r2, [r4, r3]
 8009048:	466a      	mov	r2, sp
 800904a:	330c      	adds	r3, #12
 800904c:	50e2      	str	r2, [r4, r3]
 800904e:	2111      	movs	r1, #17
 8009050:	002a      	movs	r2, r5
 8009052:	0020      	movs	r0, r4
 8009054:	f7fb fba2 	bl	800479c <d_print_comp>
 8009058:	2380      	movs	r3, #128	; 0x80
 800905a:	005b      	lsls	r3, r3, #1
 800905c:	58e1      	ldr	r1, [r4, r3]
 800905e:	2300      	movs	r3, #0
 8009060:	5463      	strb	r3, [r4, r1]
 8009062:	330d      	adds	r3, #13
 8009064:	33ff      	adds	r3, #255	; 0xff
 8009066:	58e2      	ldr	r2, [r4, r3]
 8009068:	3b04      	subs	r3, #4
 800906a:	58e3      	ldr	r3, [r4, r3]
 800906c:	0020      	movs	r0, r4
 800906e:	46b5      	mov	sp, r6
 8009070:	f000 f8c6 	bl	8009200 <__gcclibcxx_demangle_callback+0x24>
 8009074:	2208      	movs	r2, #8
 8009076:	23ac      	movs	r3, #172	; 0xac
 8009078:	4694      	mov	ip, r2
 800907a:	005b      	lsls	r3, r3, #1
 800907c:	44bc      	add	ip, r7
 800907e:	4463      	add	r3, ip
 8009080:	6818      	ldr	r0, [r3, #0]
 8009082:	4243      	negs	r3, r0
 8009084:	4158      	adcs	r0, r3
 8009086:	e70b      	b.n	8008ea0 <d_demangle_callback.constprop.22+0x108>
 8009088:	2301      	movs	r3, #1
 800908a:	e7d5      	b.n	8009038 <d_demangle_callback.constprop.22+0x2a0>
 800908c:	2201      	movs	r2, #1
 800908e:	e7cc      	b.n	800902a <d_demangle_callback.constprop.22+0x292>
 8009090:	7aaa      	ldrb	r2, [r5, #10]
 8009092:	2600      	movs	r6, #0
 8009094:	2a5f      	cmp	r2, #95	; 0x5f
 8009096:	d000      	beq.n	800909a <d_demangle_callback.constprop.22+0x302>
 8009098:	e6ab      	b.n	8008df2 <d_demangle_callback.constprop.22+0x5a>
 800909a:	3b49      	subs	r3, #73	; 0x49
 800909c:	001e      	movs	r6, r3
 800909e:	1e73      	subs	r3, r6, #1
 80090a0:	419e      	sbcs	r6, r3
 80090a2:	3602      	adds	r6, #2
 80090a4:	e6a5      	b.n	8008df2 <d_demangle_callback.constprop.22+0x5a>
 80090a6:	7b2b      	ldrb	r3, [r5, #12]
 80090a8:	2b5a      	cmp	r3, #90	; 0x5a
 80090aa:	d000      	beq.n	80090ae <d_demangle_callback.constprop.22+0x316>
 80090ac:	e6dd      	b.n	8008e6a <d_demangle_callback.constprop.22+0xd2>
 80090ae:	350d      	adds	r5, #13
 80090b0:	2100      	movs	r1, #0
 80090b2:	0020      	movs	r0, r4
 80090b4:	60e5      	str	r5, [r4, #12]
 80090b6:	f7fb f8e5 	bl	8004284 <d_encoding>
 80090ba:	4681      	mov	r9, r0
 80090bc:	e6de      	b.n	8008e7c <d_demangle_callback.constprop.22+0xe4>
 80090be:	464a      	mov	r2, r9
 80090c0:	2300      	movs	r3, #0
 80090c2:	6053      	str	r3, [r2, #4]
 80090c4:	2201      	movs	r2, #1
 80090c6:	6162      	str	r2, [r4, #20]
 80090c8:	2800      	cmp	r0, #0
 80090ca:	d100      	bne.n	80090ce <d_demangle_callback.constprop.22+0x336>
 80090cc:	e6d4      	b.n	8008e78 <d_demangle_callback.constprop.22+0xe0>
 80090ce:	464a      	mov	r2, r9
 80090d0:	7013      	strb	r3, [r2, #0]
 80090d2:	464b      	mov	r3, r9
 80090d4:	4642      	mov	r2, r8
 80090d6:	60d8      	str	r0, [r3, #12]
 80090d8:	609a      	str	r2, [r3, #8]
 80090da:	e6cf      	b.n	8008e7c <d_demangle_callback.constprop.22+0xe4>
 80090dc:	68e3      	ldr	r3, [r4, #12]
 80090de:	781b      	ldrb	r3, [r3, #0]
 80090e0:	e75a      	b.n	8008f98 <d_demangle_callback.constprop.22+0x200>
 80090e2:	2300      	movs	r3, #0
 80090e4:	e73f      	b.n	8008f66 <d_demangle_callback.constprop.22+0x1ce>
 80090e6:	1c86      	adds	r6, r0, #2
 80090e8:	7881      	ldrb	r1, [r0, #2]
 80090ea:	e001      	b.n	80090f0 <d_demangle_callback.constprop.22+0x358>
 80090ec:	3601      	adds	r6, #1
 80090ee:	7831      	ldrb	r1, [r6, #0]
 80090f0:	000b      	movs	r3, r1
 80090f2:	3b61      	subs	r3, #97	; 0x61
 80090f4:	061b      	lsls	r3, r3, #24
 80090f6:	0e1b      	lsrs	r3, r3, #24
 80090f8:	4599      	cmp	r9, r3
 80090fa:	d2f7      	bcs.n	80090ec <d_demangle_callback.constprop.22+0x354>
 80090fc:	295f      	cmp	r1, #95	; 0x5f
 80090fe:	d0f5      	beq.n	80090ec <d_demangle_callback.constprop.22+0x354>
 8009100:	e706      	b.n	8008f10 <d_demangle_callback.constprop.22+0x178>
 8009102:	46c0      	nop			; (mov r8, r8)
 8009104:	08026d70 	.word	0x08026d70

08009108 <__cxa_demangle>:
 8009108:	b5f0      	push	{r4, r5, r6, r7, lr}
 800910a:	46c6      	mov	lr, r8
 800910c:	b500      	push	{lr}
 800910e:	000e      	movs	r6, r1
 8009110:	b086      	sub	sp, #24
 8009112:	0017      	movs	r7, r2
 8009114:	001c      	movs	r4, r3
 8009116:	2800      	cmp	r0, #0
 8009118:	d003      	beq.n	8009122 <__cxa_demangle+0x1a>
 800911a:	2900      	cmp	r1, #0
 800911c:	d00e      	beq.n	800913c <__cxa_demangle+0x34>
 800911e:	2a00      	cmp	r2, #0
 8009120:	d10c      	bne.n	800913c <__cxa_demangle+0x34>
 8009122:	2c00      	cmp	r4, #0
 8009124:	d002      	beq.n	800912c <__cxa_demangle+0x24>
 8009126:	2303      	movs	r3, #3
 8009128:	425b      	negs	r3, r3
 800912a:	6023      	str	r3, [r4, #0]
 800912c:	2500      	movs	r5, #0
 800912e:	0028      	movs	r0, r5
 8009130:	b006      	add	sp, #24
 8009132:	bc04      	pop	{r2}
 8009134:	4690      	mov	r8, r2
 8009136:	bcf0      	pop	{r4, r5, r6, r7}
 8009138:	bc02      	pop	{r1}
 800913a:	4708      	bx	r1
 800913c:	2300      	movs	r3, #0
 800913e:	aa02      	add	r2, sp, #8
 8009140:	4925      	ldr	r1, [pc, #148]	; (80091d8 <__cxa_demangle+0xd0>)
 8009142:	9302      	str	r3, [sp, #8]
 8009144:	9303      	str	r3, [sp, #12]
 8009146:	9304      	str	r3, [sp, #16]
 8009148:	9305      	str	r3, [sp, #20]
 800914a:	f7ff fe25 	bl	8008d98 <d_demangle_callback.constprop.22>
 800914e:	2800      	cmp	r0, #0
 8009150:	d03b      	beq.n	80091ca <__cxa_demangle+0xc2>
 8009152:	9b05      	ldr	r3, [sp, #20]
 8009154:	9d02      	ldr	r5, [sp, #8]
 8009156:	9301      	str	r3, [sp, #4]
 8009158:	2b00      	cmp	r3, #0
 800915a:	d019      	beq.n	8009190 <__cxa_demangle+0x88>
 800915c:	2301      	movs	r3, #1
 800915e:	4698      	mov	r8, r3
 8009160:	2d00      	cmp	r5, #0
 8009162:	d02b      	beq.n	80091bc <__cxa_demangle+0xb4>
 8009164:	2e00      	cmp	r6, #0
 8009166:	d026      	beq.n	80091b6 <__cxa_demangle+0xae>
 8009168:	0028      	movs	r0, r5
 800916a:	f000 fac9 	bl	8009700 <strlen>
 800916e:	683b      	ldr	r3, [r7, #0]
 8009170:	4298      	cmp	r0, r3
 8009172:	d21a      	bcs.n	80091aa <__cxa_demangle+0xa2>
 8009174:	1c42      	adds	r2, r0, #1
 8009176:	0029      	movs	r1, r5
 8009178:	0030      	movs	r0, r6
 800917a:	f000 f899 	bl	80092b0 <memcpy>
 800917e:	0028      	movs	r0, r5
 8009180:	f012 fc6c 	bl	801ba5c <free>
 8009184:	0035      	movs	r5, r6
 8009186:	2c00      	cmp	r4, #0
 8009188:	d0d1      	beq.n	800912e <__cxa_demangle+0x26>
 800918a:	2300      	movs	r3, #0
 800918c:	6023      	str	r3, [r4, #0]
 800918e:	e7ce      	b.n	800912e <__cxa_demangle+0x26>
 8009190:	9b04      	ldr	r3, [sp, #16]
 8009192:	4698      	mov	r8, r3
 8009194:	2d00      	cmp	r5, #0
 8009196:	d1e5      	bne.n	8009164 <__cxa_demangle+0x5c>
 8009198:	2c00      	cmp	r4, #0
 800919a:	d0c7      	beq.n	800912c <__cxa_demangle+0x24>
 800919c:	2b01      	cmp	r3, #1
 800919e:	d00f      	beq.n	80091c0 <__cxa_demangle+0xb8>
 80091a0:	2302      	movs	r3, #2
 80091a2:	425b      	negs	r3, r3
 80091a4:	6023      	str	r3, [r4, #0]
 80091a6:	2500      	movs	r5, #0
 80091a8:	e7c1      	b.n	800912e <__cxa_demangle+0x26>
 80091aa:	0030      	movs	r0, r6
 80091ac:	f012 fc56 	bl	801ba5c <free>
 80091b0:	4643      	mov	r3, r8
 80091b2:	603b      	str	r3, [r7, #0]
 80091b4:	e7e7      	b.n	8009186 <__cxa_demangle+0x7e>
 80091b6:	2f00      	cmp	r7, #0
 80091b8:	d1fa      	bne.n	80091b0 <__cxa_demangle+0xa8>
 80091ba:	e7e4      	b.n	8009186 <__cxa_demangle+0x7e>
 80091bc:	2c00      	cmp	r4, #0
 80091be:	d0b5      	beq.n	800912c <__cxa_demangle+0x24>
 80091c0:	2301      	movs	r3, #1
 80091c2:	425b      	negs	r3, r3
 80091c4:	6023      	str	r3, [r4, #0]
 80091c6:	2500      	movs	r5, #0
 80091c8:	e7b1      	b.n	800912e <__cxa_demangle+0x26>
 80091ca:	9802      	ldr	r0, [sp, #8]
 80091cc:	f012 fc46 	bl	801ba5c <free>
 80091d0:	2c00      	cmp	r4, #0
 80091d2:	d1e5      	bne.n	80091a0 <__cxa_demangle+0x98>
 80091d4:	e7aa      	b.n	800912c <__cxa_demangle+0x24>
 80091d6:	46c0      	nop			; (mov r8, r8)
 80091d8:	08002699 	.word	0x08002699

080091dc <__gcclibcxx_demangle_callback>:
 80091dc:	b510      	push	{r4, lr}
 80091de:	2800      	cmp	r0, #0
 80091e0:	d00b      	beq.n	80091fa <__gcclibcxx_demangle_callback+0x1e>
 80091e2:	2900      	cmp	r1, #0
 80091e4:	d009      	beq.n	80091fa <__gcclibcxx_demangle_callback+0x1e>
 80091e6:	f7ff fdd7 	bl	8008d98 <d_demangle_callback.constprop.22>
 80091ea:	4243      	negs	r3, r0
 80091ec:	4158      	adcs	r0, r3
 80091ee:	2301      	movs	r3, #1
 80091f0:	4240      	negs	r0, r0
 80091f2:	4398      	bics	r0, r3
 80091f4:	bc10      	pop	{r4}
 80091f6:	bc02      	pop	{r1}
 80091f8:	4708      	bx	r1
 80091fa:	2003      	movs	r0, #3
 80091fc:	4240      	negs	r0, r0
 80091fe:	e7f9      	b.n	80091f4 <__gcclibcxx_demangle_callback+0x18>
 8009200:	4718      	bx	r3
 8009202:	46c0      	nop			; (mov r8, r8)
	...

08009210 <memchr>:
 8009210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8009214:	2a10      	cmp	r2, #16
 8009216:	db2b      	blt.n	8009270 <memchr+0x60>
 8009218:	f010 0f07 	tst.w	r0, #7
 800921c:	d008      	beq.n	8009230 <memchr+0x20>
 800921e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8009222:	3a01      	subs	r2, #1
 8009224:	428b      	cmp	r3, r1
 8009226:	d02d      	beq.n	8009284 <memchr+0x74>
 8009228:	f010 0f07 	tst.w	r0, #7
 800922c:	b342      	cbz	r2, 8009280 <memchr+0x70>
 800922e:	d1f6      	bne.n	800921e <memchr+0xe>
 8009230:	b4f0      	push	{r4, r5, r6, r7}
 8009232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8009236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800923a:	f022 0407 	bic.w	r4, r2, #7
 800923e:	f07f 0700 	mvns.w	r7, #0
 8009242:	2300      	movs	r3, #0
 8009244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8009248:	3c08      	subs	r4, #8
 800924a:	ea85 0501 	eor.w	r5, r5, r1
 800924e:	ea86 0601 	eor.w	r6, r6, r1
 8009252:	fa85 f547 	uadd8	r5, r5, r7
 8009256:	faa3 f587 	sel	r5, r3, r7
 800925a:	fa86 f647 	uadd8	r6, r6, r7
 800925e:	faa5 f687 	sel	r6, r5, r7
 8009262:	b98e      	cbnz	r6, 8009288 <memchr+0x78>
 8009264:	d1ee      	bne.n	8009244 <memchr+0x34>
 8009266:	bcf0      	pop	{r4, r5, r6, r7}
 8009268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800926c:	f002 0207 	and.w	r2, r2, #7
 8009270:	b132      	cbz	r2, 8009280 <memchr+0x70>
 8009272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8009276:	3a01      	subs	r2, #1
 8009278:	ea83 0301 	eor.w	r3, r3, r1
 800927c:	b113      	cbz	r3, 8009284 <memchr+0x74>
 800927e:	d1f8      	bne.n	8009272 <memchr+0x62>
 8009280:	2000      	movs	r0, #0
 8009282:	4770      	bx	lr
 8009284:	3801      	subs	r0, #1
 8009286:	4770      	bx	lr
 8009288:	2d00      	cmp	r5, #0
 800928a:	bf06      	itte	eq
 800928c:	4635      	moveq	r5, r6
 800928e:	3803      	subeq	r0, #3
 8009290:	3807      	subne	r0, #7
 8009292:	f015 0f01 	tst.w	r5, #1
 8009296:	d107      	bne.n	80092a8 <memchr+0x98>
 8009298:	3001      	adds	r0, #1
 800929a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800929e:	bf02      	ittt	eq
 80092a0:	3001      	addeq	r0, #1
 80092a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80092a6:	3001      	addeq	r0, #1
 80092a8:	bcf0      	pop	{r4, r5, r6, r7}
 80092aa:	3801      	subs	r0, #1
 80092ac:	4770      	bx	lr
 80092ae:	bf00      	nop

080092b0 <memcpy>:
 80092b0:	4684      	mov	ip, r0
 80092b2:	ea41 0300 	orr.w	r3, r1, r0
 80092b6:	f013 0303 	ands.w	r3, r3, #3
 80092ba:	d16d      	bne.n	8009398 <memcpy+0xe8>
 80092bc:	3a40      	subs	r2, #64	; 0x40
 80092be:	d341      	bcc.n	8009344 <memcpy+0x94>
 80092c0:	f851 3b04 	ldr.w	r3, [r1], #4
 80092c4:	f840 3b04 	str.w	r3, [r0], #4
 80092c8:	f851 3b04 	ldr.w	r3, [r1], #4
 80092cc:	f840 3b04 	str.w	r3, [r0], #4
 80092d0:	f851 3b04 	ldr.w	r3, [r1], #4
 80092d4:	f840 3b04 	str.w	r3, [r0], #4
 80092d8:	f851 3b04 	ldr.w	r3, [r1], #4
 80092dc:	f840 3b04 	str.w	r3, [r0], #4
 80092e0:	f851 3b04 	ldr.w	r3, [r1], #4
 80092e4:	f840 3b04 	str.w	r3, [r0], #4
 80092e8:	f851 3b04 	ldr.w	r3, [r1], #4
 80092ec:	f840 3b04 	str.w	r3, [r0], #4
 80092f0:	f851 3b04 	ldr.w	r3, [r1], #4
 80092f4:	f840 3b04 	str.w	r3, [r0], #4
 80092f8:	f851 3b04 	ldr.w	r3, [r1], #4
 80092fc:	f840 3b04 	str.w	r3, [r0], #4
 8009300:	f851 3b04 	ldr.w	r3, [r1], #4
 8009304:	f840 3b04 	str.w	r3, [r0], #4
 8009308:	f851 3b04 	ldr.w	r3, [r1], #4
 800930c:	f840 3b04 	str.w	r3, [r0], #4
 8009310:	f851 3b04 	ldr.w	r3, [r1], #4
 8009314:	f840 3b04 	str.w	r3, [r0], #4
 8009318:	f851 3b04 	ldr.w	r3, [r1], #4
 800931c:	f840 3b04 	str.w	r3, [r0], #4
 8009320:	f851 3b04 	ldr.w	r3, [r1], #4
 8009324:	f840 3b04 	str.w	r3, [r0], #4
 8009328:	f851 3b04 	ldr.w	r3, [r1], #4
 800932c:	f840 3b04 	str.w	r3, [r0], #4
 8009330:	f851 3b04 	ldr.w	r3, [r1], #4
 8009334:	f840 3b04 	str.w	r3, [r0], #4
 8009338:	f851 3b04 	ldr.w	r3, [r1], #4
 800933c:	f840 3b04 	str.w	r3, [r0], #4
 8009340:	3a40      	subs	r2, #64	; 0x40
 8009342:	d2bd      	bcs.n	80092c0 <memcpy+0x10>
 8009344:	3230      	adds	r2, #48	; 0x30
 8009346:	d311      	bcc.n	800936c <memcpy+0xbc>
 8009348:	f851 3b04 	ldr.w	r3, [r1], #4
 800934c:	f840 3b04 	str.w	r3, [r0], #4
 8009350:	f851 3b04 	ldr.w	r3, [r1], #4
 8009354:	f840 3b04 	str.w	r3, [r0], #4
 8009358:	f851 3b04 	ldr.w	r3, [r1], #4
 800935c:	f840 3b04 	str.w	r3, [r0], #4
 8009360:	f851 3b04 	ldr.w	r3, [r1], #4
 8009364:	f840 3b04 	str.w	r3, [r0], #4
 8009368:	3a10      	subs	r2, #16
 800936a:	d2ed      	bcs.n	8009348 <memcpy+0x98>
 800936c:	320c      	adds	r2, #12
 800936e:	d305      	bcc.n	800937c <memcpy+0xcc>
 8009370:	f851 3b04 	ldr.w	r3, [r1], #4
 8009374:	f840 3b04 	str.w	r3, [r0], #4
 8009378:	3a04      	subs	r2, #4
 800937a:	d2f9      	bcs.n	8009370 <memcpy+0xc0>
 800937c:	3204      	adds	r2, #4
 800937e:	d008      	beq.n	8009392 <memcpy+0xe2>
 8009380:	07d2      	lsls	r2, r2, #31
 8009382:	bf1c      	itt	ne
 8009384:	f811 3b01 	ldrbne.w	r3, [r1], #1
 8009388:	f800 3b01 	strbne.w	r3, [r0], #1
 800938c:	d301      	bcc.n	8009392 <memcpy+0xe2>
 800938e:	880b      	ldrh	r3, [r1, #0]
 8009390:	8003      	strh	r3, [r0, #0]
 8009392:	4660      	mov	r0, ip
 8009394:	4770      	bx	lr
 8009396:	bf00      	nop
 8009398:	2a08      	cmp	r2, #8
 800939a:	d313      	bcc.n	80093c4 <memcpy+0x114>
 800939c:	078b      	lsls	r3, r1, #30
 800939e:	d08d      	beq.n	80092bc <memcpy+0xc>
 80093a0:	f010 0303 	ands.w	r3, r0, #3
 80093a4:	d08a      	beq.n	80092bc <memcpy+0xc>
 80093a6:	f1c3 0304 	rsb	r3, r3, #4
 80093aa:	1ad2      	subs	r2, r2, r3
 80093ac:	07db      	lsls	r3, r3, #31
 80093ae:	bf1c      	itt	ne
 80093b0:	f811 3b01 	ldrbne.w	r3, [r1], #1
 80093b4:	f800 3b01 	strbne.w	r3, [r0], #1
 80093b8:	d380      	bcc.n	80092bc <memcpy+0xc>
 80093ba:	f831 3b02 	ldrh.w	r3, [r1], #2
 80093be:	f820 3b02 	strh.w	r3, [r0], #2
 80093c2:	e77b      	b.n	80092bc <memcpy+0xc>
 80093c4:	3a04      	subs	r2, #4
 80093c6:	d3d9      	bcc.n	800937c <memcpy+0xcc>
 80093c8:	3a01      	subs	r2, #1
 80093ca:	f811 3b01 	ldrb.w	r3, [r1], #1
 80093ce:	f800 3b01 	strb.w	r3, [r0], #1
 80093d2:	d2f9      	bcs.n	80093c8 <memcpy+0x118>
 80093d4:	780b      	ldrb	r3, [r1, #0]
 80093d6:	7003      	strb	r3, [r0, #0]
 80093d8:	784b      	ldrb	r3, [r1, #1]
 80093da:	7043      	strb	r3, [r0, #1]
 80093dc:	788b      	ldrb	r3, [r1, #2]
 80093de:	7083      	strb	r3, [r0, #2]
 80093e0:	4660      	mov	r0, ip
 80093e2:	4770      	bx	lr
	...
 8009400:	eba2 0003 	sub.w	r0, r2, r3
 8009404:	4770      	bx	lr
 8009406:	bf00      	nop

08009408 <strcmp>:
 8009408:	7802      	ldrb	r2, [r0, #0]
 800940a:	780b      	ldrb	r3, [r1, #0]
 800940c:	2a01      	cmp	r2, #1
 800940e:	bf28      	it	cs
 8009410:	429a      	cmpcs	r2, r3
 8009412:	d1f5      	bne.n	8009400 <memcpy+0x150>
 8009414:	e96d 4504 	strd	r4, r5, [sp, #-16]!
 8009418:	ea40 0401 	orr.w	r4, r0, r1
 800941c:	e9cd 6702 	strd	r6, r7, [sp, #8]
 8009420:	f06f 0c00 	mvn.w	ip, #0
 8009424:	ea4f 7244 	mov.w	r2, r4, lsl #29
 8009428:	b312      	cbz	r2, 8009470 <strcmp+0x68>
 800942a:	ea80 0401 	eor.w	r4, r0, r1
 800942e:	f014 0f07 	tst.w	r4, #7
 8009432:	d16a      	bne.n	800950a <strcmp+0x102>
 8009434:	f000 0407 	and.w	r4, r0, #7
 8009438:	f020 0007 	bic.w	r0, r0, #7
 800943c:	f004 0503 	and.w	r5, r4, #3
 8009440:	f021 0107 	bic.w	r1, r1, #7
 8009444:	ea4f 05c5 	mov.w	r5, r5, lsl #3
 8009448:	e8f0 2304 	ldrd	r2, r3, [r0], #16
 800944c:	f014 0f04 	tst.w	r4, #4
 8009450:	e8f1 6704 	ldrd	r6, r7, [r1], #16
 8009454:	fa0c f405 	lsl.w	r4, ip, r5
 8009458:	ea62 0204 	orn	r2, r2, r4
 800945c:	ea66 0604 	orn	r6, r6, r4
 8009460:	d00a      	beq.n	8009478 <strcmp+0x70>
 8009462:	ea63 0304 	orn	r3, r3, r4
 8009466:	4662      	mov	r2, ip
 8009468:	ea67 0704 	orn	r7, r7, r4
 800946c:	4666      	mov	r6, ip
 800946e:	e003      	b.n	8009478 <strcmp+0x70>
 8009470:	e8f0 2304 	ldrd	r2, r3, [r0], #16
 8009474:	e8f1 6704 	ldrd	r6, r7, [r1], #16
 8009478:	fa82 f54c 	uadd8	r5, r2, ip
 800947c:	ea82 0406 	eor.w	r4, r2, r6
 8009480:	faa4 f48c 	sel	r4, r4, ip
 8009484:	bb6c      	cbnz	r4, 80094e2 <strcmp+0xda>
 8009486:	fa83 f54c 	uadd8	r5, r3, ip
 800948a:	ea83 0507 	eor.w	r5, r3, r7
 800948e:	faa5 f58c 	sel	r5, r5, ip
 8009492:	b995      	cbnz	r5, 80094ba <strcmp+0xb2>
 8009494:	e950 2302 	ldrd	r2, r3, [r0, #-8]
 8009498:	e951 6702 	ldrd	r6, r7, [r1, #-8]
 800949c:	fa82 f54c 	uadd8	r5, r2, ip
 80094a0:	ea82 0406 	eor.w	r4, r2, r6
 80094a4:	faa4 f48c 	sel	r4, r4, ip
 80094a8:	fa83 f54c 	uadd8	r5, r3, ip
 80094ac:	ea83 0507 	eor.w	r5, r3, r7
 80094b0:	faa5 f58c 	sel	r5, r5, ip
 80094b4:	4325      	orrs	r5, r4
 80094b6:	d0db      	beq.n	8009470 <strcmp+0x68>
 80094b8:	b99c      	cbnz	r4, 80094e2 <strcmp+0xda>
 80094ba:	ba2d      	rev	r5, r5
 80094bc:	fab5 f485 	clz	r4, r5
 80094c0:	f024 0407 	bic.w	r4, r4, #7
 80094c4:	fa27 f104 	lsr.w	r1, r7, r4
 80094c8:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 80094cc:	fa23 f304 	lsr.w	r3, r3, r4
 80094d0:	f003 00ff 	and.w	r0, r3, #255	; 0xff
 80094d4:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80094d8:	e8fd 4504 	ldrd	r4, r5, [sp], #16
 80094dc:	eba0 0001 	sub.w	r0, r0, r1
 80094e0:	4770      	bx	lr
 80094e2:	ba24      	rev	r4, r4
 80094e4:	fab4 f484 	clz	r4, r4
 80094e8:	f024 0407 	bic.w	r4, r4, #7
 80094ec:	fa26 f104 	lsr.w	r1, r6, r4
 80094f0:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 80094f4:	fa22 f204 	lsr.w	r2, r2, r4
 80094f8:	f002 00ff 	and.w	r0, r2, #255	; 0xff
 80094fc:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8009500:	e8fd 4504 	ldrd	r4, r5, [sp], #16
 8009504:	eba0 0001 	sub.w	r0, r0, r1
 8009508:	4770      	bx	lr
 800950a:	f014 0f03 	tst.w	r4, #3
 800950e:	d13c      	bne.n	800958a <strcmp+0x182>
 8009510:	f010 0403 	ands.w	r4, r0, #3
 8009514:	d128      	bne.n	8009568 <strcmp+0x160>
 8009516:	f850 2b08 	ldr.w	r2, [r0], #8
 800951a:	f851 3b08 	ldr.w	r3, [r1], #8
 800951e:	fa82 f54c 	uadd8	r5, r2, ip
 8009522:	ea82 0503 	eor.w	r5, r2, r3
 8009526:	faa5 f58c 	sel	r5, r5, ip
 800952a:	b95d      	cbnz	r5, 8009544 <strcmp+0x13c>
 800952c:	f850 2c04 	ldr.w	r2, [r0, #-4]
 8009530:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8009534:	fa82 f54c 	uadd8	r5, r2, ip
 8009538:	ea82 0503 	eor.w	r5, r2, r3
 800953c:	faa5 f58c 	sel	r5, r5, ip
 8009540:	2d00      	cmp	r5, #0
 8009542:	d0e8      	beq.n	8009516 <strcmp+0x10e>
 8009544:	ba2d      	rev	r5, r5
 8009546:	fab5 f485 	clz	r4, r5
 800954a:	f024 0407 	bic.w	r4, r4, #7
 800954e:	fa23 f104 	lsr.w	r1, r3, r4
 8009552:	fa22 f204 	lsr.w	r2, r2, r4
 8009556:	f002 00ff 	and.w	r0, r2, #255	; 0xff
 800955a:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800955e:	e8fd 4504 	ldrd	r4, r5, [sp], #16
 8009562:	eba0 0001 	sub.w	r0, r0, r1
 8009566:	4770      	bx	lr
 8009568:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800956c:	f020 0003 	bic.w	r0, r0, #3
 8009570:	f850 2b08 	ldr.w	r2, [r0], #8
 8009574:	f021 0103 	bic.w	r1, r1, #3
 8009578:	f851 3b08 	ldr.w	r3, [r1], #8
 800957c:	fa0c f404 	lsl.w	r4, ip, r4
 8009580:	ea62 0204 	orn	r2, r2, r4
 8009584:	ea63 0304 	orn	r3, r3, r4
 8009588:	e7c9      	b.n	800951e <strcmp+0x116>
 800958a:	f010 0403 	ands.w	r4, r0, #3
 800958e:	d01a      	beq.n	80095c6 <strcmp+0x1be>
 8009590:	eba1 0104 	sub.w	r1, r1, r4
 8009594:	f020 0003 	bic.w	r0, r0, #3
 8009598:	07e4      	lsls	r4, r4, #31
 800959a:	f850 2b04 	ldr.w	r2, [r0], #4
 800959e:	d006      	beq.n	80095ae <strcmp+0x1a6>
 80095a0:	d20f      	bcs.n	80095c2 <strcmp+0x1ba>
 80095a2:	788b      	ldrb	r3, [r1, #2]
 80095a4:	fa5f f4a2 	uxtb.w	r4, r2, ror #16
 80095a8:	1ae4      	subs	r4, r4, r3
 80095aa:	d106      	bne.n	80095ba <strcmp+0x1b2>
 80095ac:	b12b      	cbz	r3, 80095ba <strcmp+0x1b2>
 80095ae:	78cb      	ldrb	r3, [r1, #3]
 80095b0:	fa5f f4b2 	uxtb.w	r4, r2, ror #24
 80095b4:	1ae4      	subs	r4, r4, r3
 80095b6:	d100      	bne.n	80095ba <strcmp+0x1b2>
 80095b8:	b91b      	cbnz	r3, 80095c2 <strcmp+0x1ba>
 80095ba:	4620      	mov	r0, r4
 80095bc:	f85d 4b10 	ldr.w	r4, [sp], #16
 80095c0:	4770      	bx	lr
 80095c2:	f101 0104 	add.w	r1, r1, #4
 80095c6:	f850 2b04 	ldr.w	r2, [r0], #4
 80095ca:	07cc      	lsls	r4, r1, #31
 80095cc:	f021 0103 	bic.w	r1, r1, #3
 80095d0:	f851 3b04 	ldr.w	r3, [r1], #4
 80095d4:	d848      	bhi.n	8009668 <strcmp+0x260>
 80095d6:	d224      	bcs.n	8009622 <strcmp+0x21a>
 80095d8:	f022 447f 	bic.w	r4, r2, #4278190080	; 0xff000000
 80095dc:	fa82 f54c 	uadd8	r5, r2, ip
 80095e0:	ea94 2513 	eors.w	r5, r4, r3, lsr #8
 80095e4:	faa5 f58c 	sel	r5, r5, ip
 80095e8:	d10a      	bne.n	8009600 <strcmp+0x1f8>
 80095ea:	b965      	cbnz	r5, 8009606 <strcmp+0x1fe>
 80095ec:	f851 3b04 	ldr.w	r3, [r1], #4
 80095f0:	ea84 0402 	eor.w	r4, r4, r2
 80095f4:	ebb4 6f03 	cmp.w	r4, r3, lsl #24
 80095f8:	d10e      	bne.n	8009618 <strcmp+0x210>
 80095fa:	f850 2b04 	ldr.w	r2, [r0], #4
 80095fe:	e7eb      	b.n	80095d8 <strcmp+0x1d0>
 8009600:	ea4f 2313 	mov.w	r3, r3, lsr #8
 8009604:	e055      	b.n	80096b2 <strcmp+0x2aa>
 8009606:	f035 457f 	bics.w	r5, r5, #4278190080	; 0xff000000
 800960a:	d14d      	bne.n	80096a8 <strcmp+0x2a0>
 800960c:	7808      	ldrb	r0, [r1, #0]
 800960e:	e8fd 4504 	ldrd	r4, r5, [sp], #16
 8009612:	f1c0 0000 	rsb	r0, r0, #0
 8009616:	4770      	bx	lr
 8009618:	ea4f 6212 	mov.w	r2, r2, lsr #24
 800961c:	f003 03ff 	and.w	r3, r3, #255	; 0xff
 8009620:	e047      	b.n	80096b2 <strcmp+0x2aa>
 8009622:	ea02 441c 	and.w	r4, r2, ip, lsr #16
 8009626:	fa82 f54c 	uadd8	r5, r2, ip
 800962a:	ea94 4513 	eors.w	r5, r4, r3, lsr #16
 800962e:	faa5 f58c 	sel	r5, r5, ip
 8009632:	d10a      	bne.n	800964a <strcmp+0x242>
 8009634:	b965      	cbnz	r5, 8009650 <strcmp+0x248>
 8009636:	f851 3b04 	ldr.w	r3, [r1], #4
 800963a:	ea84 0402 	eor.w	r4, r4, r2
 800963e:	ebb4 4f03 	cmp.w	r4, r3, lsl #16
 8009642:	d10c      	bne.n	800965e <strcmp+0x256>
 8009644:	f850 2b04 	ldr.w	r2, [r0], #4
 8009648:	e7eb      	b.n	8009622 <strcmp+0x21a>
 800964a:	ea4f 4313 	mov.w	r3, r3, lsr #16
 800964e:	e030      	b.n	80096b2 <strcmp+0x2aa>
 8009650:	ea15 451c 	ands.w	r5, r5, ip, lsr #16
 8009654:	d128      	bne.n	80096a8 <strcmp+0x2a0>
 8009656:	880b      	ldrh	r3, [r1, #0]
 8009658:	ea4f 4212 	mov.w	r2, r2, lsr #16
 800965c:	e029      	b.n	80096b2 <strcmp+0x2aa>
 800965e:	ea4f 4212 	mov.w	r2, r2, lsr #16
 8009662:	ea03 431c 	and.w	r3, r3, ip, lsr #16
 8009666:	e024      	b.n	80096b2 <strcmp+0x2aa>
 8009668:	f002 04ff 	and.w	r4, r2, #255	; 0xff
 800966c:	fa82 f54c 	uadd8	r5, r2, ip
 8009670:	ea94 6513 	eors.w	r5, r4, r3, lsr #24
 8009674:	faa5 f58c 	sel	r5, r5, ip
 8009678:	d10a      	bne.n	8009690 <strcmp+0x288>
 800967a:	b965      	cbnz	r5, 8009696 <strcmp+0x28e>
 800967c:	f851 3b04 	ldr.w	r3, [r1], #4
 8009680:	ea84 0402 	eor.w	r4, r4, r2
 8009684:	ebb4 2f03 	cmp.w	r4, r3, lsl #8
 8009688:	d109      	bne.n	800969e <strcmp+0x296>
 800968a:	f850 2b04 	ldr.w	r2, [r0], #4
 800968e:	e7eb      	b.n	8009668 <strcmp+0x260>
 8009690:	ea4f 6313 	mov.w	r3, r3, lsr #24
 8009694:	e00d      	b.n	80096b2 <strcmp+0x2aa>
 8009696:	f015 0fff 	tst.w	r5, #255	; 0xff
 800969a:	d105      	bne.n	80096a8 <strcmp+0x2a0>
 800969c:	680b      	ldr	r3, [r1, #0]
 800969e:	ea4f 2212 	mov.w	r2, r2, lsr #8
 80096a2:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 80096a6:	e004      	b.n	80096b2 <strcmp+0x2aa>
 80096a8:	f04f 0000 	mov.w	r0, #0
 80096ac:	e8fd 4504 	ldrd	r4, r5, [sp], #16
 80096b0:	4770      	bx	lr
 80096b2:	ba12      	rev	r2, r2
 80096b4:	ba1b      	rev	r3, r3
 80096b6:	fa82 f44c 	uadd8	r4, r2, ip
 80096ba:	ea82 0403 	eor.w	r4, r2, r3
 80096be:	faa4 f58c 	sel	r5, r4, ip
 80096c2:	fab5 f485 	clz	r4, r5
 80096c6:	fa02 f204 	lsl.w	r2, r2, r4
 80096ca:	fa03 f304 	lsl.w	r3, r3, r4
 80096ce:	ea4f 6012 	mov.w	r0, r2, lsr #24
 80096d2:	e8fd 4504 	ldrd	r4, r5, [sp], #16
 80096d6:	eba0 6013 	sub.w	r0, r0, r3, lsr #24
 80096da:	4770      	bx	lr
	...

08009700 <strlen>:
 8009700:	f890 f000 	pld	[r0]
 8009704:	e96d 4502 	strd	r4, r5, [sp, #-8]!
 8009708:	f020 0107 	bic.w	r1, r0, #7
 800970c:	f06f 0c00 	mvn.w	ip, #0
 8009710:	f010 0407 	ands.w	r4, r0, #7
 8009714:	f891 f020 	pld	[r1, #32]
 8009718:	f040 8049 	bne.w	80097ae <strlen+0xae>
 800971c:	f04f 0400 	mov.w	r4, #0
 8009720:	f06f 0007 	mvn.w	r0, #7
 8009724:	e9d1 2300 	ldrd	r2, r3, [r1]
 8009728:	f891 f040 	pld	[r1, #64]	; 0x40
 800972c:	f100 0008 	add.w	r0, r0, #8
 8009730:	fa82 f24c 	uadd8	r2, r2, ip
 8009734:	faa4 f28c 	sel	r2, r4, ip
 8009738:	fa83 f34c 	uadd8	r3, r3, ip
 800973c:	faa2 f38c 	sel	r3, r2, ip
 8009740:	bb4b      	cbnz	r3, 8009796 <strlen+0x96>
 8009742:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
 8009746:	fa82 f24c 	uadd8	r2, r2, ip
 800974a:	f100 0008 	add.w	r0, r0, #8
 800974e:	faa4 f28c 	sel	r2, r4, ip
 8009752:	fa83 f34c 	uadd8	r3, r3, ip
 8009756:	faa2 f38c 	sel	r3, r2, ip
 800975a:	b9e3      	cbnz	r3, 8009796 <strlen+0x96>
 800975c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
 8009760:	fa82 f24c 	uadd8	r2, r2, ip
 8009764:	f100 0008 	add.w	r0, r0, #8
 8009768:	faa4 f28c 	sel	r2, r4, ip
 800976c:	fa83 f34c 	uadd8	r3, r3, ip
 8009770:	faa2 f38c 	sel	r3, r2, ip
 8009774:	b97b      	cbnz	r3, 8009796 <strlen+0x96>
 8009776:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
 800977a:	f101 0120 	add.w	r1, r1, #32
 800977e:	fa82 f24c 	uadd8	r2, r2, ip
 8009782:	f100 0008 	add.w	r0, r0, #8
 8009786:	faa4 f28c 	sel	r2, r4, ip
 800978a:	fa83 f34c 	uadd8	r3, r3, ip
 800978e:	faa2 f38c 	sel	r3, r2, ip
 8009792:	2b00      	cmp	r3, #0
 8009794:	d0c6      	beq.n	8009724 <strlen+0x24>
 8009796:	2a00      	cmp	r2, #0
 8009798:	bf04      	itt	eq
 800979a:	3004      	addeq	r0, #4
 800979c:	461a      	moveq	r2, r3
 800979e:	ba12      	rev	r2, r2
 80097a0:	fab2 f282 	clz	r2, r2
 80097a4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
 80097a8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
 80097ac:	4770      	bx	lr
 80097ae:	e9d1 2300 	ldrd	r2, r3, [r1]
 80097b2:	f004 0503 	and.w	r5, r4, #3
 80097b6:	f1c4 0000 	rsb	r0, r4, #0
 80097ba:	ea4f 05c5 	mov.w	r5, r5, lsl #3
 80097be:	f014 0f04 	tst.w	r4, #4
 80097c2:	f891 f040 	pld	[r1, #64]	; 0x40
 80097c6:	fa0c f505 	lsl.w	r5, ip, r5
 80097ca:	ea62 0205 	orn	r2, r2, r5
 80097ce:	bf1c      	itt	ne
 80097d0:	ea63 0305 	ornne	r3, r3, r5
 80097d4:	4662      	movne	r2, ip
 80097d6:	f04f 0400 	mov.w	r4, #0
 80097da:	e7a9      	b.n	8009730 <strlen+0x30>

080097dc <__aeabi_d2iz>:
 80097dc:	ea4f 0241 	mov.w	r2, r1, lsl #1
 80097e0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 80097e4:	d215      	bcs.n	8009812 <__aeabi_d2iz+0x36>
 80097e6:	d511      	bpl.n	800980c <__aeabi_d2iz+0x30>
 80097e8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 80097ec:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 80097f0:	d912      	bls.n	8009818 <__aeabi_d2iz+0x3c>
 80097f2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 80097f6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80097fa:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 80097fe:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8009802:	fa23 f002 	lsr.w	r0, r3, r2
 8009806:	bf18      	it	ne
 8009808:	4240      	negne	r0, r0
 800980a:	4770      	bx	lr
 800980c:	f04f 0000 	mov.w	r0, #0
 8009810:	4770      	bx	lr
 8009812:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8009816:	d105      	bne.n	8009824 <__aeabi_d2iz+0x48>
 8009818:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 800981c:	bf08      	it	eq
 800981e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8009822:	4770      	bx	lr
 8009824:	f04f 0000 	mov.w	r0, #0
 8009828:	4770      	bx	lr
 800982a:	bf00      	nop

0800982c <_Konan_constructors>:
 800982c:	b510      	push	{r4, lr}
 800982e:	f240 0000 	movw	r0, #0
 8009832:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8009836:	7801      	ldrb	r1, [r0, #0]
 8009838:	2900      	cmp	r1, #0
 800983a:	bf18      	it	ne
 800983c:	bd10      	popne	{r4, pc}
 800983e:	2401      	movs	r4, #1
 8009840:	7004      	strb	r4, [r0, #0]
 8009842:	f008 f825 	bl	8011890 <_Konan_init_stdlib>
 8009846:	f240 5018 	movw	r0, #1304	; 0x518
 800984a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800984e:	7801      	ldrb	r1, [r0, #0]
 8009850:	b101      	cbz	r1, 8009854 <_Konan_constructors+0x28>
 8009852:	bd10      	pop	{r4, pc}
 8009854:	7004      	strb	r4, [r0, #0]
 8009856:	f243 20f8 	movw	r0, #13048	; 0x32f8
 800985a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800985e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009862:	f00d ba1b 	b.w	8016c9c <AppendToInitializersTail>

08009866 <Konan_main>:
 8009866:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009868:	af03      	add	r7, sp, #12
 800986a:	e92d 0700 	stmdb	sp!, {r8, r9, sl}
 800986e:	b082      	sub	sp, #8
 8009870:	468a      	mov	sl, r1
 8009872:	4605      	mov	r5, r0
 8009874:	f7ff ffda 	bl	800982c <_Konan_constructors>
 8009878:	f240 1860 	movw	r8, #352	; 0x160
 800987c:	f2c2 0800 	movt	r8, #8192	; 0x2000
 8009880:	f8d8 0000 	ldr.w	r0, [r8]
 8009884:	b9c0      	cbnz	r0, 80098b8 <Konan_main+0x52>
 8009886:	2001      	movs	r0, #1
 8009888:	2104      	movs	r1, #4
 800988a:	f011 fe43 	bl	801b514 <calloc>
 800988e:	4606      	mov	r6, r0
 8009890:	b17e      	cbz	r6, 80098b2 <Konan_main+0x4c>
 8009892:	f008 fa14 	bl	8011cbe <InitMemory>
 8009896:	6030      	str	r0, [r6, #0]
 8009898:	f240 1064 	movw	r0, #356	; 0x164
 800989c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80098a0:	6804      	ldr	r4, [r0, #0]
 80098a2:	b13c      	cbz	r4, 80098b4 <Konan_main+0x4e>
 80098a4:	6821      	ldr	r1, [r4, #0]
 80098a6:	2001      	movs	r0, #1
 80098a8:	4788      	blx	r1
 80098aa:	6864      	ldr	r4, [r4, #4]
 80098ac:	2c00      	cmp	r4, #0
 80098ae:	d1f9      	bne.n	80098a4 <Konan_main+0x3e>
 80098b0:	e000      	b.n	80098b4 <Konan_main+0x4e>
 80098b2:	2600      	movs	r6, #0
 80098b4:	f8c8 6000 	str.w	r6, [r8]
 80098b8:	2000      	movs	r0, #0
 80098ba:	f1a5 0901 	sub.w	r9, r5, #1
 80098be:	aa01      	add	r2, sp, #4
 80098c0:	9001      	str	r0, [sp, #4]
 80098c2:	f242 0080 	movw	r0, #8320	; 0x2080
 80098c6:	4649      	mov	r1, r9
 80098c8:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80098cc:	6800      	ldr	r0, [r0, #0]
 80098ce:	f00b f813 	bl	80148f8 <AllocArrayInstance>
 80098d2:	2d02      	cmp	r5, #2
 80098d4:	db11      	blt.n	80098fa <Konan_main+0x94>
 80098d6:	f10a 0604 	add.w	r6, sl, #4
 80098da:	f100 040c 	add.w	r4, r0, #12
 80098de:	f856 5b04 	ldr.w	r5, [r6], #4
 80098e2:	4628      	mov	r0, r5
 80098e4:	f7ff ff0c 	bl	8009700 <strlen>
 80098e8:	4601      	mov	r1, r0
 80098ea:	4628      	mov	r0, r5
 80098ec:	4622      	mov	r2, r4
 80098ee:	f00b f9c9 	bl	8014c84 <_ZN12_GLOBAL__N_111utf8ToUtf16EPKcjPP9ObjHeader>
 80098f2:	3404      	adds	r4, #4
 80098f4:	f1b9 0901 	subs.w	r9, r9, #1
 80098f8:	d1f1      	bne.n	80098de <Konan_main+0x78>
 80098fa:	9801      	ldr	r0, [sp, #4]
 80098fc:	f000 f826 	bl	800994c <Konan_start>
 8009900:	4604      	mov	r4, r0
 8009902:	9801      	ldr	r0, [sp, #4]
 8009904:	b128      	cbz	r0, 8009912 <Konan_main+0xac>
 8009906:	2100      	movs	r1, #0
 8009908:	2802      	cmp	r0, #2
 800990a:	9101      	str	r1, [sp, #4]
 800990c:	bf28      	it	cs
 800990e:	f00a fca2 	blcs	8014256 <_Z10ReleaseRefPK9ObjHeader>
 8009912:	f8d8 5000 	ldr.w	r5, [r8]
 8009916:	b1a5      	cbz	r5, 8009942 <Konan_main+0xdc>
 8009918:	f240 1064 	movw	r0, #356	; 0x164
 800991c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8009920:	6806      	ldr	r6, [r0, #0]
 8009922:	b12e      	cbz	r6, 8009930 <Konan_main+0xca>
 8009924:	6831      	ldr	r1, [r6, #0]
 8009926:	2000      	movs	r0, #0
 8009928:	4788      	blx	r1
 800992a:	6876      	ldr	r6, [r6, #4]
 800992c:	2e00      	cmp	r6, #0
 800992e:	d1f9      	bne.n	8009924 <Konan_main+0xbe>
 8009930:	6828      	ldr	r0, [r5, #0]
 8009932:	f009 fce5 	bl	8013300 <DeinitMemory>
 8009936:	4628      	mov	r0, r5
 8009938:	f012 f890 	bl	801ba5c <free>
 800993c:	2000      	movs	r0, #0
 800993e:	f8c8 0000 	str.w	r0, [r8]
 8009942:	4620      	mov	r0, r4
 8009944:	b002      	add	sp, #8
 8009946:	e8bd 0700 	ldmia.w	sp!, {r8, r9, sl}
 800994a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800994c <Konan_start>:
 800994c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800994e:	af03      	add	r7, sp, #12
 8009950:	f84d 8d04 	str.w	r8, [sp, #-4]!
 8009954:	b086      	sub	sp, #24
 8009956:	466e      	mov	r6, sp
 8009958:	f106 050c 	add.w	r5, r6, #12
 800995c:	2100      	movs	r1, #0
 800995e:	e9cd 1102 	strd	r1, r1, [sp, #8]
 8009962:	e9cd 1000 	strd	r1, r0, [sp]
         toggler = !toggler
         k_sleep(1000 * value);
   }
}

fun main(args: Array<String>) {
 8009966:	e9cd 1004 	strd	r1, r0, [sp, #16]
    blinky(1)
 800996a:	2001      	movs	r0, #1
 800996c:	f000 f83a 	bl	80099e4 <kfun:blinky(kotlin.Int)>
 8009970:	a804      	add	r0, sp, #16
}
 8009972:	2101      	movs	r1, #1
 8009974:	2202      	movs	r2, #2
 8009976:	f00d f876 	bl	8016a66 <LeaveFrame>
 800997a:	2400      	movs	r4, #0
 800997c:	4668      	mov	r0, sp
 800997e:	2101      	movs	r1, #1
 8009980:	2204      	movs	r2, #4
 8009982:	f00d f870 	bl	8016a66 <LeaveFrame>
 8009986:	4620      	mov	r0, r4
 8009988:	b006      	add	sp, #24
 800998a:	f85d 8b04 	ldr.w	r8, [sp], #4
 800998e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009990:	4680      	mov	r8, r0
 8009992:	a804      	add	r0, sp, #16
 8009994:	2101      	movs	r1, #1
 8009996:	2202      	movs	r2, #2
 8009998:	2401      	movs	r4, #1
 800999a:	f00d f864 	bl	8016a66 <LeaveFrame>
 800999e:	4640      	mov	r0, r8
 80099a0:	f010 fcc2 	bl	801a328 <__cxa_begin_catch>
 80099a4:	f8d0 8000 	ldr.w	r8, [r0]
 80099a8:	f106 0008 	add.w	r0, r6, #8
 80099ac:	4641      	mov	r1, r8
 80099ae:	f00a fc0f 	bl	80141d0 <UpdateRef>
 80099b2:	f010 fcf7 	bl	801a3a4 <__cxa_end_catch>
 80099b6:	4628      	mov	r0, r5
 80099b8:	4641      	mov	r1, r8
 80099ba:	f00a fc09 	bl	80141d0 <UpdateRef>
 80099be:	f241 6060 	movw	r0, #5728	; 0x1660
 80099c2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80099c6:	f00b f831 	bl	8014a2c <Kotlin_io_Console_print>
 80099ca:	9803      	ldr	r0, [sp, #12]
 80099cc:	f006 fa58 	bl	800fe80 <kfun:kotlin.Throwable.printStackTrace()>
 80099d0:	e7d4      	b.n	800997c <Konan_start+0x30>
 80099d2:	4604      	mov	r4, r0
 80099d4:	4668      	mov	r0, sp
 80099d6:	2101      	movs	r1, #1
 80099d8:	2204      	movs	r2, #4
 80099da:	f00d f844 	bl	8016a66 <LeaveFrame>
 80099de:	4620      	mov	r0, r4
 80099e0:	f7f7 fc04 	bl	80011ec <_Unwind_Resume>

080099e4 <kfun:blinky(kotlin.Int)>:
 80099e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80099e6:	b085      	sub	sp, #20
    val port = LED0_GPIO_PORT
 80099e8:	f243 25e0 	movw	r5, #13024	; 0x32e0
 80099ec:	4604      	mov	r4, r0
 80099ee:	2000      	movs	r0, #0
 80099f0:	f2c2 0500 	movt	r5, #8192	; 0x2000
fun blinky(value: Int) {
 80099f4:	9004      	str	r0, [sp, #16]
 80099f6:	466e      	mov	r6, sp
 80099f8:	e9cd 0002 	strd	r0, r0, [sp, #8]
    val port = LED0_GPIO_PORT
 80099fc:	4629      	mov	r1, r5
fun blinky(value: Int) {
 80099fe:	e9cd 0000 	strd	r0, r0, [sp]
 8009a02:	1d30      	adds	r0, r6, #4
    val port = LED0_GPIO_PORT
 8009a04:	f00a fdf1 	bl	80145ea <UpdateReturnRef>
fun blinky(value: Int) {
 8009a08:	f106 0008 	add.w	r0, r6, #8
    val port = LED0_GPIO_PORT
 8009a0c:	4629      	mov	r1, r5
 8009a0e:	f00a fbdf 	bl	80141d0 <UpdateRef>
    val dev = device_get_binding(port)
 8009a12:	9802      	ldr	r0, [sp, #8]
 8009a14:	f00d fa91 	bl	8016f3a <kfun:platform.zephyr.stm32f4_disco.device_get_binding(kotlin.String?)ValueType>
 8009a18:	4605      	mov	r5, r0
fun blinky(value: Int) {
 8009a1a:	f106 010c 	add.w	r1, r6, #12
    gpio_pin_configure(dev, led, GPIO_DIR_OUT)
 8009a1e:	4628      	mov	r0, r5
 8009a20:	f003 fb77 	bl	800d112 <kfun:konan.internal.boxCPointer(kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointed>?)konan.internal.CPointerBox?>
 8009a24:	210d      	movs	r1, #13
 8009a26:	2201      	movs	r2, #1
 8009a28:	f00d fb0a 	bl	8017040 <kfun:platform.zephyr.stm32f4_disco.gpio_pin_configure(kotlinx.cinterop.CValuesRef<platform.zephyr.stm32f4_disco.device>?;kotlin.Int;kotlin.Int)ValueType>
fun blinky(value: Int) {
 8009a2c:	3610      	adds	r6, #16
 8009a2e:	2700      	movs	r7, #0
 8009a30:	e006      	b.n	8009a40 <kfun:blinky(kotlin.Int)+0x5c>
         k_sleep(1000 * value);
 8009a32:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8009a36:	4621      	mov	r1, r4
 8009a38:	f00d f8cb 	bl	8016bd2 <Kotlin_Int_times_Int>
 8009a3c:	f00e fa73 	bl	8017f26 <platform_zephyr_stm32f4_disco_kniBridge218>
         gpio_pin_write(dev, led, if (toggler) 1 else 0);
 8009a40:	4628      	mov	r0, r5
 8009a42:	4631      	mov	r1, r6
 8009a44:	f003 fb65 	bl	800d112 <kfun:konan.internal.boxCPointer(kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointed>?)konan.internal.CPointerBox?>
 8009a48:	f007 0201 	and.w	r2, r7, #1
 8009a4c:	210d      	movs	r1, #13
 8009a4e:	f00d fb77 	bl	8017140 <kfun:platform.zephyr.stm32f4_disco.gpio_pin_write(kotlinx.cinterop.CValuesRef<platform.zephyr.stm32f4_disco.device>?;kotlin.Int;kotlin.Int)ValueType>
         toggler = !toggler
 8009a52:	4638      	mov	r0, r7
 8009a54:	f00d f879 	bl	8016b4a <Kotlin_Boolean_not>
 8009a58:	4607      	mov	r7, r0
 8009a5a:	e7ea      	b.n	8009a32 <kfun:blinky(kotlin.Int)+0x4e>
 8009a5c:	e7ff      	b.n	8009a5e <kfun:blinky(kotlin.Int)+0x7a>
 8009a5e:	4604      	mov	r4, r0
 8009a60:	4668      	mov	r0, sp
}
 8009a62:	2100      	movs	r1, #0
 8009a64:	2205      	movs	r2, #5
 8009a66:	f00c fffe 	bl	8016a66 <LeaveFrame>
 8009a6a:	4620      	mov	r0, r4
 8009a6c:	f7f7 fbbe 	bl	80011ec <_Unwind_Resume>

08009a70 <kfun:kotlin.String.toString()kotlin.String>:
 8009a70:	b5d0      	push	{r4, r6, r7, lr}
 8009a72:	af02      	add	r7, sp, #8
 8009a74:	b082      	sub	sp, #8
 8009a76:	4604      	mov	r4, r0
 8009a78:	2000      	movs	r0, #0
 8009a7a:	e9cd 0400 	strd	r0, r4, [sp]
 8009a7e:	4608      	mov	r0, r1
 8009a80:	4621      	mov	r1, r4
 8009a82:	f00a fdb2 	bl	80145ea <UpdateReturnRef>
 8009a86:	4668      	mov	r0, sp
 8009a88:	2101      	movs	r1, #1
 8009a8a:	2202      	movs	r2, #2
 8009a8c:	f00c ffeb 	bl	8016a66 <LeaveFrame>
 8009a90:	4620      	mov	r0, r4
 8009a92:	b002      	add	sp, #8
 8009a94:	bdd0      	pop	{r4, r6, r7, pc}

08009a96 <kfun:kotlin.String.<get-length>()ValueType>:
 8009a96:	b5d0      	push	{r4, r6, r7, lr}
 8009a98:	af02      	add	r7, sp, #8
 8009a9a:	b082      	sub	sp, #8
 8009a9c:	2100      	movs	r1, #0
 8009a9e:	e9cd 1000 	strd	r1, r0, [sp]
 8009aa2:	f00b fabd 	bl	8015020 <Kotlin_String_getStringLength>
 8009aa6:	4604      	mov	r4, r0
 8009aa8:	4668      	mov	r0, sp
 8009aaa:	2101      	movs	r1, #1
 8009aac:	2202      	movs	r2, #2
 8009aae:	f00c ffda 	bl	8016a66 <LeaveFrame>
 8009ab2:	4620      	mov	r0, r4
 8009ab4:	b002      	add	sp, #8
 8009ab6:	bdd0      	pop	{r4, r6, r7, pc}

08009ab8 <kfun:kotlin.Any.toString()kotlin.String>:
 8009ab8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009aba:	af03      	add	r7, sp, #12
 8009abc:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 8009ac0:	b09b      	sub	sp, #108	; 0x6c
 8009ac2:	f10d 0b04 	add.w	fp, sp, #4
 8009ac6:	4688      	mov	r8, r1
 8009ac8:	4604      	mov	r4, r0
 8009aca:	2144      	movs	r1, #68	; 0x44
 8009acc:	4658      	mov	r0, fp
 8009ace:	f011 fd13 	bl	801b4f8 <__aeabi_memclr>
 8009ad2:	4620      	mov	r0, r4
 8009ad4:	9402      	str	r4, [sp, #8]
 8009ad6:	f00d f836 	bl	8016b46 <Kotlin_Any_getTypeInfo>
 8009ada:	4604      	mov	r4, r0
 8009adc:	f242 40b0 	movw	r0, #9392	; 0x24b0
 8009ae0:	f10b 0108 	add.w	r1, fp, #8
 8009ae4:	f6c0 0002 	movt	r0, #2050	; 0x802
 8009ae8:	f00c ff07 	bl	80168fa <AllocInstance>
 8009aec:	4605      	mov	r5, r0
 8009aee:	2000      	movs	r0, #0
 8009af0:	e9cd 0518 	strd	r0, r5, [sp, #96]	; 0x60
 8009af4:	2101      	movs	r1, #1
 8009af6:	e9cd 0512 	strd	r0, r5, [sp, #72]	; 0x48
 8009afa:	a812      	add	r0, sp, #72	; 0x48
 8009afc:	2202      	movs	r2, #2
 8009afe:	f00c ffb2 	bl	8016a66 <LeaveFrame>
 8009b02:	a818      	add	r0, sp, #96	; 0x60
 8009b04:	2101      	movs	r1, #1
 8009b06:	2202      	movs	r2, #2
 8009b08:	60ac      	str	r4, [r5, #8]
 8009b0a:	f00c ffac 	bl	8016a66 <LeaveFrame>
 8009b0e:	f10b 000c 	add.w	r0, fp, #12
 8009b12:	4629      	mov	r1, r5
 8009b14:	f00a fb5c 	bl	80141d0 <UpdateRef>
 8009b18:	9c04      	ldr	r4, [sp, #16]
 8009b1a:	f64f 428e 	movw	r2, #64654	; 0xfc8e
 8009b1e:	f24b 5369 	movw	r3, #46441	; 0xb569
 8009b22:	f6c4 023e 	movt	r2, #18494	; 0x483e
 8009b26:	f6c4 13bd 	movt	r3, #18877	; 0x49bd
 8009b2a:	6820      	ldr	r0, [r4, #0]
 8009b2c:	f00d f95c 	bl	8016de8 <LookupOpenMethod>
 8009b30:	4602      	mov	r2, r0
 8009b32:	f10b 0110 	add.w	r1, fp, #16
 8009b36:	4620      	mov	r0, r4
 8009b38:	4790      	blx	r2
 8009b3a:	4601      	mov	r1, r0
 8009b3c:	f10b 0014 	add.w	r0, fp, #20
 8009b40:	f00a fb46 	bl	80141d0 <UpdateRef>
 8009b44:	9906      	ldr	r1, [sp, #24]
 8009b46:	b991      	cbnz	r1, 8009b6e <kfun:kotlin.Any.toString()kotlin.String+0xb6>
 8009b48:	9d04      	ldr	r5, [sp, #16]
 8009b4a:	f64c 32c3 	movw	r2, #52163	; 0xcbc3
 8009b4e:	f243 736c 	movw	r3, #14188	; 0x376c
 8009b52:	f2c6 42ef 	movt	r2, #25839	; 0x64ef
 8009b56:	f6c0 4355 	movt	r3, #3157	; 0xc55
 8009b5a:	f10b 0418 	add.w	r4, fp, #24
 8009b5e:	6828      	ldr	r0, [r5, #0]
 8009b60:	f00d f942 	bl	8016de8 <LookupOpenMethod>
 8009b64:	4602      	mov	r2, r0
 8009b66:	4628      	mov	r0, r5
 8009b68:	4621      	mov	r1, r4
 8009b6a:	4790      	blx	r2
 8009b6c:	4601      	mov	r1, r0
 8009b6e:	f10b 001c 	add.w	r0, fp, #28
 8009b72:	f10b 0420 	add.w	r4, fp, #32
 8009b76:	f00a fb2b 	bl	80141d0 <UpdateRef>
 8009b7a:	9808      	ldr	r0, [sp, #32]
 8009b7c:	f641 4160 	movw	r1, #7264	; 0x1c60
 8009b80:	f2c2 0100 	movt	r1, #8192	; 0x2000
 8009b84:	2800      	cmp	r0, #0
 8009b86:	bf18      	it	ne
 8009b88:	4601      	movne	r1, r0
 8009b8a:	4620      	mov	r0, r4
 8009b8c:	f00a fb20 	bl	80141d0 <UpdateRef>
 8009b90:	9802      	ldr	r0, [sp, #8]
 8009b92:	6801      	ldr	r1, [r0, #0]
 8009b94:	6c49      	ldr	r1, [r1, #68]	; 0x44
 8009b96:	4788      	blx	r1
 8009b98:	4606      	mov	r6, r0
 8009b9a:	2010      	movs	r0, #16
 8009b9c:	f000 f8dd 	bl	8009d5a <kfun:kotlin.text.checkRadix(kotlin.Int)ValueType>
 8009ba0:	4630      	mov	r0, r6
 8009ba2:	f8cd 8000 	str.w	r8, [sp]
 8009ba6:	f10b 0a30 	add.w	sl, fp, #48	; 0x30
 8009baa:	f10b 052c 	add.w	r5, fp, #44	; 0x2c
 8009bae:	f10b 0428 	add.w	r4, fp, #40	; 0x28
 8009bb2:	f10b 0824 	add.w	r8, fp, #36	; 0x24
 8009bb6:	f00d f81b 	bl	8016bf0 <Kotlin_Int_toLong>
 8009bba:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8009bbe:	2300      	movs	r3, #0
 8009bc0:	f04f 0900 	mov.w	r9, #0
 8009bc4:	f00d f840 	bl	8016c48 <Kotlin_Long_and_Long>
 8009bc8:	2210      	movs	r2, #16
 8009bca:	4643      	mov	r3, r8
 8009bcc:	f00d f8a8 	bl	8016d20 <Kotlin_Long_toStringRadix>
 8009bd0:	4601      	mov	r1, r0
 8009bd2:	4620      	mov	r0, r4
 8009bd4:	f00a fafc 	bl	80141d0 <UpdateRef>
 8009bd8:	f641 10f0 	movw	r0, #6640	; 0x19f0
 8009bdc:	4629      	mov	r1, r5
 8009bde:	f6c0 0002 	movt	r0, #2050	; 0x802
 8009be2:	f00c fe8a 	bl	80168fa <AllocInstance>
 8009be6:	4604      	mov	r4, r0
 8009be8:	210a      	movs	r1, #10
 8009bea:	e9cd 9412 	strd	r9, r4, [sp, #72]	; 0x48
 8009bee:	f000 ffb2 	bl	800ab56 <kfun:kotlin.text.StringBuilder.<init>(kotlin.Int)kotlin.text.StringBuilder>
 8009bf2:	ae12      	add	r6, sp, #72	; 0x48
 8009bf4:	2101      	movs	r1, #1
 8009bf6:	2202      	movs	r2, #2
 8009bf8:	4630      	mov	r0, r6
 8009bfa:	f00c ff34 	bl	8016a66 <LeaveFrame>
 8009bfe:	4650      	mov	r0, sl
 8009c00:	4621      	mov	r1, r4
 8009c02:	f00a fae5 	bl	80141d0 <UpdateRef>
 8009c06:	f106 080c 	add.w	r8, r6, #12
 8009c0a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8009c0c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8009c0e:	4641      	mov	r1, r8
 8009c10:	f8cd 9058 	str.w	r9, [sp, #88]	; 0x58
 8009c14:	e9cd 9412 	strd	r9, r4, [sp, #72]	; 0x48
 8009c18:	e9cd 0914 	strd	r0, r9, [sp, #80]	; 0x50
 8009c1c:	f00b fae2 	bl	80151e4 <Kotlin_String_toCharArray>
 8009c20:	3610      	adds	r6, #16
 8009c22:	4601      	mov	r1, r0
 8009c24:	4620      	mov	r0, r4
 8009c26:	4632      	mov	r2, r6
 8009c28:	f000 fab3 	bl	800a192 <kfun:kotlin.text.StringBuilder.append(kotlin.CharArray)kotlin.text.StringBuilder>
 8009c2c:	4601      	mov	r1, r0
 8009c2e:	f10b 0034 	add.w	r0, fp, #52	; 0x34
 8009c32:	f00a fcda 	bl	80145ea <UpdateReturnRef>
 8009c36:	a812      	add	r0, sp, #72	; 0x48
 8009c38:	2102      	movs	r1, #2
 8009c3a:	2205      	movs	r2, #5
 8009c3c:	f00c ff13 	bl	8016a66 <LeaveFrame>
 8009c40:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8009c42:	f241 707c 	movw	r0, #6012	; 0x177c
 8009c46:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8009c4a:	4641      	mov	r1, r8
 8009c4c:	e9cd 9915 	strd	r9, r9, [sp, #84]	; 0x54
 8009c50:	e9cd 9412 	strd	r9, r4, [sp, #72]	; 0x48
 8009c54:	9014      	str	r0, [sp, #80]	; 0x50
 8009c56:	f00b fac5 	bl	80151e4 <Kotlin_String_toCharArray>
 8009c5a:	4601      	mov	r1, r0
 8009c5c:	4620      	mov	r0, r4
 8009c5e:	4632      	mov	r2, r6
 8009c60:	f000 fa97 	bl	800a192 <kfun:kotlin.text.StringBuilder.append(kotlin.CharArray)kotlin.text.StringBuilder>
 8009c64:	4601      	mov	r1, r0
 8009c66:	f10b 0038 	add.w	r0, fp, #56	; 0x38
 8009c6a:	f00a fcbe 	bl	80145ea <UpdateReturnRef>
 8009c6e:	a812      	add	r0, sp, #72	; 0x48
 8009c70:	2102      	movs	r1, #2
 8009c72:	2205      	movs	r2, #5
 8009c74:	f00c fef7 	bl	8016a66 <LeaveFrame>
 8009c78:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8009c7a:	2500      	movs	r5, #0
 8009c7c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8009c7e:	4641      	mov	r1, r8
 8009c80:	9516      	str	r5, [sp, #88]	; 0x58
 8009c82:	e9cd 5412 	strd	r5, r4, [sp, #72]	; 0x48
 8009c86:	e9cd 0514 	strd	r0, r5, [sp, #80]	; 0x50
 8009c8a:	f00b faab 	bl	80151e4 <Kotlin_String_toCharArray>
 8009c8e:	4601      	mov	r1, r0
 8009c90:	4620      	mov	r0, r4
 8009c92:	4632      	mov	r2, r6
 8009c94:	f000 fa7d 	bl	800a192 <kfun:kotlin.text.StringBuilder.append(kotlin.CharArray)kotlin.text.StringBuilder>
 8009c98:	4601      	mov	r1, r0
 8009c9a:	f10b 003c 	add.w	r0, fp, #60	; 0x3c
 8009c9e:	f10b 0840 	add.w	r8, fp, #64	; 0x40
 8009ca2:	f00a fca2 	bl	80145ea <UpdateReturnRef>
 8009ca6:	f10d 0948 	add.w	r9, sp, #72	; 0x48
 8009caa:	2102      	movs	r1, #2
 8009cac:	2205      	movs	r2, #5
 8009cae:	4648      	mov	r0, r9
 8009cb0:	f00c fed9 	bl	8016a66 <LeaveFrame>
 8009cb4:	980d      	ldr	r0, [sp, #52]	; 0x34
 8009cb6:	ac18      	add	r4, sp, #96	; 0x60
 8009cb8:	e9cd 5514 	strd	r5, r5, [sp, #80]	; 0x50
 8009cbc:	e9cd 5012 	strd	r5, r0, [sp, #72]	; 0x48
 8009cc0:	951a      	str	r5, [sp, #104]	; 0x68
 8009cc2:	e9cd 5018 	strd	r5, r0, [sp, #96]	; 0x60
 8009cc6:	68c6      	ldr	r6, [r0, #12]
 8009cc8:	f104 0008 	add.w	r0, r4, #8
 8009ccc:	4631      	mov	r1, r6
 8009cce:	f00a fa7f 	bl	80141d0 <UpdateRef>
 8009cd2:	f109 0008 	add.w	r0, r9, #8
 8009cd6:	4631      	mov	r1, r6
 8009cd8:	f00a fc87 	bl	80145ea <UpdateReturnRef>
 8009cdc:	4620      	mov	r0, r4
 8009cde:	2101      	movs	r1, #1
 8009ce0:	2203      	movs	r2, #3
 8009ce2:	f00c fec0 	bl	8016a66 <LeaveFrame>
 8009ce6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8009ce8:	2101      	movs	r1, #1
 8009cea:	2202      	movs	r2, #2
 8009cec:	e9cd 5018 	strd	r5, r0, [sp, #96]	; 0x60
 8009cf0:	6884      	ldr	r4, [r0, #8]
 8009cf2:	a818      	add	r0, sp, #96	; 0x60
 8009cf4:	f00c feb7 	bl	8016a66 <LeaveFrame>
 8009cf8:	f109 030c 	add.w	r3, r9, #12
 8009cfc:	4630      	mov	r0, r6
 8009cfe:	2100      	movs	r1, #0
 8009d00:	4622      	mov	r2, r4
 8009d02:	f00b fa26 	bl	8015152 <Kotlin_String_fromCharArray>
 8009d06:	4604      	mov	r4, r0
 8009d08:	4640      	mov	r0, r8
 8009d0a:	4621      	mov	r1, r4
 8009d0c:	f00a fc6d 	bl	80145ea <UpdateReturnRef>
 8009d10:	4648      	mov	r0, r9
 8009d12:	2101      	movs	r1, #1
 8009d14:	2204      	movs	r2, #4
 8009d16:	f00c fea6 	bl	8016a66 <LeaveFrame>
 8009d1a:	9800      	ldr	r0, [sp, #0]
 8009d1c:	4621      	mov	r1, r4
 8009d1e:	f00a fc64 	bl	80145ea <UpdateReturnRef>
 8009d22:	a801      	add	r0, sp, #4
 8009d24:	2101      	movs	r1, #1
 8009d26:	2211      	movs	r2, #17
 8009d28:	f00c fe9d 	bl	8016a66 <LeaveFrame>
 8009d2c:	4620      	mov	r0, r4
 8009d2e:	b01b      	add	sp, #108	; 0x6c
 8009d30:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 8009d34:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009d36:	e000      	b.n	8009d3a <kfun:kotlin.Any.toString()kotlin.String+0x282>
 8009d38:	e7ff      	b.n	8009d3a <kfun:kotlin.Any.toString()kotlin.String+0x282>
 8009d3a:	4604      	mov	r4, r0
 8009d3c:	a812      	add	r0, sp, #72	; 0x48
 8009d3e:	2102      	movs	r1, #2
 8009d40:	2205      	movs	r2, #5
 8009d42:	f00c fe90 	bl	8016a66 <LeaveFrame>
 8009d46:	e000      	b.n	8009d4a <kfun:kotlin.Any.toString()kotlin.String+0x292>
 8009d48:	4604      	mov	r4, r0
 8009d4a:	a801      	add	r0, sp, #4
 8009d4c:	2101      	movs	r1, #1
 8009d4e:	2211      	movs	r2, #17
 8009d50:	f00c fe89 	bl	8016a66 <LeaveFrame>
 8009d54:	4620      	mov	r0, r4
 8009d56:	f7f7 fa49 	bl	80011ec <_Unwind_Resume>

08009d5a <kfun:kotlin.text.checkRadix(kotlin.Int)ValueType>:
 8009d5a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009d5c:	af03      	add	r7, sp, #12
 8009d5e:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 8009d62:	b09d      	sub	sp, #116	; 0x74
 8009d64:	ac01      	add	r4, sp, #4
 8009d66:	4680      	mov	r8, r0
 8009d68:	213c      	movs	r1, #60	; 0x3c
 8009d6a:	4620      	mov	r0, r4
 8009d6c:	f011 fbc4 	bl	801b4f8 <__aeabi_memclr>
 8009d70:	f240 050c 	movw	r5, #12
 8009d74:	f104 090c 	add.w	r9, r4, #12
 8009d78:	f2c2 0500 	movt	r5, #8192	; 0x2000
 8009d7c:	6828      	ldr	r0, [r5, #0]
 8009d7e:	b970      	cbnz	r0, 8009d9e <kfun:kotlin.text.checkRadix(kotlin.Int)ValueType+0x44>
 8009d80:	f240 000c 	movw	r0, #12
 8009d84:	f641 4170 	movw	r1, #7280	; 0x1c70
 8009d88:	f24b 22f3 	movw	r2, #45811	; 0xb2f3
 8009d8c:	1d23      	adds	r3, r4, #4
 8009d8e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8009d92:	f6c0 0102 	movt	r1, #2050	; 0x802
 8009d96:	f6c0 0200 	movt	r2, #2048	; 0x800
 8009d9a:	f00c fe16 	bl	80169ca <InitInstance>
 8009d9e:	f04f 0a00 	mov.w	sl, #0
 8009da2:	2101      	movs	r1, #1
 8009da4:	e9cd a010 	strd	sl, r0, [sp, #64]	; 0x40
 8009da8:	2202      	movs	r2, #2
 8009daa:	f8d0 b014 	ldr.w	fp, [r0, #20]
 8009dae:	a810      	add	r0, sp, #64	; 0x40
 8009db0:	f00c fe59 	bl	8016a66 <LeaveFrame>
 8009db4:	6828      	ldr	r0, [r5, #0]
 8009db6:	b978      	cbnz	r0, 8009dd8 <kfun:kotlin.text.checkRadix(kotlin.Int)ValueType+0x7e>
 8009db8:	f240 000c 	movw	r0, #12
 8009dbc:	f641 4170 	movw	r1, #7280	; 0x1c70
 8009dc0:	f24b 22f3 	movw	r2, #45811	; 0xb2f3
 8009dc4:	f104 0308 	add.w	r3, r4, #8
 8009dc8:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8009dcc:	f6c0 0102 	movt	r1, #2050	; 0x802
 8009dd0:	f6c0 0200 	movt	r2, #2048	; 0x800
 8009dd4:	f00c fdf9 	bl	80169ca <InitInstance>
 8009dd8:	ae10      	add	r6, sp, #64	; 0x40
 8009dda:	e9cd a010 	strd	sl, r0, [sp, #64]	; 0x40
 8009dde:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009de0:	2101      	movs	r1, #1
 8009de2:	4630      	mov	r0, r6
 8009de4:	2202      	movs	r2, #2
 8009de6:	f00c fe3e 	bl	8016a66 <LeaveFrame>
 8009dea:	4620      	mov	r0, r4
 8009dec:	e9cd aa10 	strd	sl, sl, [sp, #64]	; 0x40
 8009df0:	f00c fefd 	bl	8016bee <Kotlin_Int_toInt>
 8009df4:	f641 50a0 	movw	r0, #7584	; 0x1da0
 8009df8:	f046 0104 	orr.w	r1, r6, #4
 8009dfc:	f6c0 0002 	movt	r0, #2050	; 0x802
 8009e00:	f00c fd7b 	bl	80168fa <AllocInstance>
 8009e04:	4659      	mov	r1, fp
 8009e06:	4622      	mov	r2, r4
 8009e08:	4605      	mov	r5, r0
 8009e0a:	f001 fb06 	bl	800b41a <kfun:kotlin.ranges.IntRange.<init>(kotlin.Int;kotlin.Int)kotlin.ranges.IntRange>
 8009e0e:	4648      	mov	r0, r9
 8009e10:	4629      	mov	r1, r5
 8009e12:	f00a fbea 	bl	80145ea <UpdateReturnRef>
 8009e16:	4630      	mov	r0, r6
 8009e18:	2100      	movs	r1, #0
 8009e1a:	2202      	movs	r2, #2
 8009e1c:	f00c fe23 	bl	8016a66 <LeaveFrame>
 8009e20:	a810      	add	r0, sp, #64	; 0x40
 8009e22:	e9cd a516 	strd	sl, r5, [sp, #88]	; 0x58
 8009e26:	e9cd a510 	strd	sl, r5, [sp, #64]	; 0x40
 8009e2a:	2101      	movs	r1, #1
 8009e2c:	2202      	movs	r2, #2
 8009e2e:	692c      	ldr	r4, [r5, #16]
 8009e30:	f00c fe19 	bl	8016a66 <LeaveFrame>
 8009e34:	4544      	cmp	r4, r8
 8009e36:	dc19      	bgt.n	8009e6c <kfun:kotlin.text.checkRadix(kotlin.Int)ValueType+0x112>
 8009e38:	2000      	movs	r0, #0
 8009e3a:	2101      	movs	r1, #1
 8009e3c:	e9cd 0510 	strd	r0, r5, [sp, #64]	; 0x40
 8009e40:	a810      	add	r0, sp, #64	; 0x40
 8009e42:	2202      	movs	r2, #2
 8009e44:	68ec      	ldr	r4, [r5, #12]
 8009e46:	f00c fe0e 	bl	8016a66 <LeaveFrame>
 8009e4a:	a816      	add	r0, sp, #88	; 0x58
 8009e4c:	2101      	movs	r1, #1
 8009e4e:	2202      	movs	r2, #2
 8009e50:	f00c fe09 	bl	8016a66 <LeaveFrame>
 8009e54:	4544      	cmp	r4, r8
 8009e56:	db0e      	blt.n	8009e76 <kfun:kotlin.text.checkRadix(kotlin.Int)ValueType+0x11c>
 8009e58:	a801      	add	r0, sp, #4
 8009e5a:	2100      	movs	r1, #0
 8009e5c:	220f      	movs	r2, #15
 8009e5e:	f00c fe02 	bl	8016a66 <LeaveFrame>
 8009e62:	4640      	mov	r0, r8
 8009e64:	b01d      	add	sp, #116	; 0x74
 8009e66:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 8009e6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009e6c:	a816      	add	r0, sp, #88	; 0x58
 8009e6e:	2101      	movs	r1, #1
 8009e70:	2202      	movs	r2, #2
 8009e72:	f00c fdf8 	bl	8016a66 <LeaveFrame>
 8009e76:	a801      	add	r0, sp, #4
 8009e78:	f100 0414 	add.w	r4, r0, #20
 8009e7c:	f100 0110 	add.w	r1, r0, #16
 8009e80:	f641 10f0 	movw	r0, #6640	; 0x19f0
 8009e84:	f6c0 0002 	movt	r0, #2050	; 0x802
 8009e88:	f00c fd37 	bl	80168fa <AllocInstance>
 8009e8c:	210a      	movs	r1, #10
 8009e8e:	4605      	mov	r5, r0
 8009e90:	2600      	movs	r6, #0
 8009e92:	e9cd 6510 	strd	r6, r5, [sp, #64]	; 0x40
 8009e96:	f000 fe5e 	bl	800ab56 <kfun:kotlin.text.StringBuilder.<init>(kotlin.Int)kotlin.text.StringBuilder>
 8009e9a:	f10d 0940 	add.w	r9, sp, #64	; 0x40
 8009e9e:	2101      	movs	r1, #1
 8009ea0:	2202      	movs	r2, #2
 8009ea2:	4648      	mov	r0, r9
 8009ea4:	f00c fddf 	bl	8016a66 <LeaveFrame>
 8009ea8:	4620      	mov	r0, r4
 8009eaa:	4629      	mov	r1, r5
 8009eac:	f00a f990 	bl	80141d0 <UpdateRef>
 8009eb0:	9c06      	ldr	r4, [sp, #24]
 8009eb2:	f109 050c 	add.w	r5, r9, #12
 8009eb6:	f641 10b0 	movw	r0, #6576	; 0x19b0
 8009eba:	e9cd 6613 	strd	r6, r6, [sp, #76]	; 0x4c
 8009ebe:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8009ec2:	4629      	mov	r1, r5
 8009ec4:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
 8009ec8:	9012      	str	r0, [sp, #72]	; 0x48
 8009eca:	f00b f98b 	bl	80151e4 <Kotlin_String_toCharArray>
 8009ece:	f109 0610 	add.w	r6, r9, #16
 8009ed2:	4601      	mov	r1, r0
 8009ed4:	4620      	mov	r0, r4
 8009ed6:	4632      	mov	r2, r6
 8009ed8:	f000 f95b 	bl	800a192 <kfun:kotlin.text.StringBuilder.append(kotlin.CharArray)kotlin.text.StringBuilder>
 8009edc:	4601      	mov	r1, r0
 8009ede:	a801      	add	r0, sp, #4
 8009ee0:	f100 041c 	add.w	r4, r0, #28
 8009ee4:	3018      	adds	r0, #24
 8009ee6:	f00a fb80 	bl	80145ea <UpdateReturnRef>
 8009eea:	a810      	add	r0, sp, #64	; 0x40
 8009eec:	2102      	movs	r1, #2
 8009eee:	2205      	movs	r2, #5
 8009ef0:	f00c fdb9 	bl	8016a66 <LeaveFrame>
 8009ef4:	9806      	ldr	r0, [sp, #24]
 8009ef6:	4641      	mov	r1, r8
 8009ef8:	4622      	mov	r2, r4
 8009efa:	f000 fc54 	bl	800a7a6 <kfun:kotlin.text.StringBuilder.append(kotlin.Int)kotlin.text.StringBuilder>
 8009efe:	9c06      	ldr	r4, [sp, #24]
 8009f00:	2000      	movs	r0, #0
 8009f02:	e9cd 0013 	strd	r0, r0, [sp, #76]	; 0x4c
 8009f06:	4629      	mov	r1, r5
 8009f08:	e9cd 0410 	strd	r0, r4, [sp, #64]	; 0x40
 8009f0c:	f641 1070 	movw	r0, #6512	; 0x1970
 8009f10:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8009f14:	9012      	str	r0, [sp, #72]	; 0x48
 8009f16:	f00b f965 	bl	80151e4 <Kotlin_String_toCharArray>
 8009f1a:	4601      	mov	r1, r0
 8009f1c:	4620      	mov	r0, r4
 8009f1e:	4632      	mov	r2, r6
 8009f20:	f000 f937 	bl	800a192 <kfun:kotlin.text.StringBuilder.append(kotlin.CharArray)kotlin.text.StringBuilder>
 8009f24:	4601      	mov	r1, r0
 8009f26:	a801      	add	r0, sp, #4
 8009f28:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8009f2c:	f100 092c 	add.w	r9, r0, #44	; 0x2c
 8009f30:	3020      	adds	r0, #32
 8009f32:	9200      	str	r2, [sp, #0]
 8009f34:	f00a fb59 	bl	80145ea <UpdateReturnRef>
 8009f38:	a810      	add	r0, sp, #64	; 0x40
 8009f3a:	2102      	movs	r1, #2
 8009f3c:	2205      	movs	r2, #5
 8009f3e:	f00c fd92 	bl	8016a66 <LeaveFrame>
 8009f42:	f240 000c 	movw	r0, #12
 8009f46:	f8dd a018 	ldr.w	sl, [sp, #24]
 8009f4a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8009f4e:	6800      	ldr	r0, [r0, #0]
 8009f50:	b980      	cbnz	r0, 8009f74 <kfun:kotlin.text.checkRadix(kotlin.Int)ValueType+0x21a>
 8009f52:	a801      	add	r0, sp, #4
 8009f54:	f641 4170 	movw	r1, #7280	; 0x1c70
 8009f58:	f24b 22f3 	movw	r2, #45811	; 0xb2f3
 8009f5c:	f100 0324 	add.w	r3, r0, #36	; 0x24
 8009f60:	f240 000c 	movw	r0, #12
 8009f64:	f6c0 0102 	movt	r1, #2050	; 0x802
 8009f68:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8009f6c:	f6c0 0200 	movt	r2, #2048	; 0x800
 8009f70:	f00c fd2b 	bl	80169ca <InitInstance>
 8009f74:	2500      	movs	r5, #0
 8009f76:	2101      	movs	r1, #1
 8009f78:	e9cd 5010 	strd	r5, r0, [sp, #64]	; 0x40
 8009f7c:	2202      	movs	r2, #2
 8009f7e:	6944      	ldr	r4, [r0, #20]
 8009f80:	a810      	add	r0, sp, #64	; 0x40
 8009f82:	f00c fd70 	bl	8016a66 <LeaveFrame>
 8009f86:	f240 000c 	movw	r0, #12
 8009f8a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8009f8e:	6800      	ldr	r0, [r0, #0]
 8009f90:	b980      	cbnz	r0, 8009fb4 <kfun:kotlin.text.checkRadix(kotlin.Int)ValueType+0x25a>
 8009f92:	a801      	add	r0, sp, #4
 8009f94:	f641 4170 	movw	r1, #7280	; 0x1c70
 8009f98:	f24b 22f3 	movw	r2, #45811	; 0xb2f3
 8009f9c:	f100 0328 	add.w	r3, r0, #40	; 0x28
 8009fa0:	f240 000c 	movw	r0, #12
 8009fa4:	f6c0 0102 	movt	r1, #2050	; 0x802
 8009fa8:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8009fac:	f6c0 0200 	movt	r2, #2048	; 0x800
 8009fb0:	f00c fd0b 	bl	80169ca <InitInstance>
 8009fb4:	f10d 0b40 	add.w	fp, sp, #64	; 0x40
 8009fb8:	e9cd 5010 	strd	r5, r0, [sp, #64]	; 0x40
 8009fbc:	6a86      	ldr	r6, [r0, #40]	; 0x28
 8009fbe:	2101      	movs	r1, #1
 8009fc0:	4658      	mov	r0, fp
 8009fc2:	2202      	movs	r2, #2
 8009fc4:	f00c fd4f 	bl	8016a66 <LeaveFrame>
 8009fc8:	4630      	mov	r0, r6
 8009fca:	e9cd 5510 	strd	r5, r5, [sp, #64]	; 0x40
 8009fce:	f00c fe0e 	bl	8016bee <Kotlin_Int_toInt>
 8009fd2:	f641 50a0 	movw	r0, #7584	; 0x1da0
 8009fd6:	f04b 0104 	orr.w	r1, fp, #4
 8009fda:	f6c0 0002 	movt	r0, #2050	; 0x802
 8009fde:	f00c fc8c 	bl	80168fa <AllocInstance>
 8009fe2:	4621      	mov	r1, r4
 8009fe4:	4632      	mov	r2, r6
 8009fe6:	4680      	mov	r8, r0
 8009fe8:	f001 fa17 	bl	800b41a <kfun:kotlin.ranges.IntRange.<init>(kotlin.Int;kotlin.Int)kotlin.ranges.IntRange>
 8009fec:	4648      	mov	r0, r9
 8009fee:	4641      	mov	r1, r8
 8009ff0:	f00a fafb 	bl	80145ea <UpdateReturnRef>
 8009ff4:	4658      	mov	r0, fp
 8009ff6:	2100      	movs	r1, #0
 8009ff8:	2202      	movs	r2, #2
 8009ffa:	f00c fd34 	bl	8016a66 <LeaveFrame>
 8009ffe:	9a00      	ldr	r2, [sp, #0]
 800a000:	4650      	mov	r0, sl
 800a002:	4641      	mov	r1, r8
 800a004:	f001 f9bc 	bl	800b380 <kfun:kotlin.text.StringBuilder.append(kotlin.Any?)kotlin.text.StringBuilder>
 800a008:	a801      	add	r0, sp, #4
 800a00a:	2500      	movs	r5, #0
 800a00c:	f100 0938 	add.w	r9, r0, #56	; 0x38
 800a010:	f100 0a34 	add.w	sl, r0, #52	; 0x34
 800a014:	9806      	ldr	r0, [sp, #24]
 800a016:	f10d 0858 	add.w	r8, sp, #88	; 0x58
 800a01a:	e9cd 5512 	strd	r5, r5, [sp, #72]	; 0x48
 800a01e:	e9cd 5010 	strd	r5, r0, [sp, #64]	; 0x40
 800a022:	9518      	str	r5, [sp, #96]	; 0x60
 800a024:	e9cd 5016 	strd	r5, r0, [sp, #88]	; 0x58
 800a028:	68c6      	ldr	r6, [r0, #12]
 800a02a:	f108 0008 	add.w	r0, r8, #8
 800a02e:	4631      	mov	r1, r6
 800a030:	f00a f8ce 	bl	80141d0 <UpdateRef>
 800a034:	f10b 0008 	add.w	r0, fp, #8
 800a038:	4631      	mov	r1, r6
 800a03a:	f00a fad6 	bl	80145ea <UpdateReturnRef>
 800a03e:	4640      	mov	r0, r8
 800a040:	2101      	movs	r1, #1
 800a042:	2203      	movs	r2, #3
 800a044:	f00c fd0f 	bl	8016a66 <LeaveFrame>
 800a048:	9811      	ldr	r0, [sp, #68]	; 0x44
 800a04a:	2101      	movs	r1, #1
 800a04c:	2202      	movs	r2, #2
 800a04e:	e9cd 5016 	strd	r5, r0, [sp, #88]	; 0x58
 800a052:	6884      	ldr	r4, [r0, #8]
 800a054:	a816      	add	r0, sp, #88	; 0x58
 800a056:	f00c fd06 	bl	8016a66 <LeaveFrame>
 800a05a:	f10b 030c 	add.w	r3, fp, #12
 800a05e:	4630      	mov	r0, r6
 800a060:	2100      	movs	r1, #0
 800a062:	4622      	mov	r2, r4
 800a064:	f00b f875 	bl	8015152 <Kotlin_String_fromCharArray>
 800a068:	4606      	mov	r6, r0
 800a06a:	4650      	mov	r0, sl
 800a06c:	4631      	mov	r1, r6
 800a06e:	f00a fabc 	bl	80145ea <UpdateReturnRef>
 800a072:	4658      	mov	r0, fp
 800a074:	2101      	movs	r1, #1
 800a076:	2204      	movs	r2, #4
 800a078:	f00c fcf5 	bl	8016a66 <LeaveFrame>
 800a07c:	f241 6030 	movw	r0, #5680	; 0x1630
 800a080:	4649      	mov	r1, r9
 800a082:	f6c0 0002 	movt	r0, #2050	; 0x802
 800a086:	f00c fc38 	bl	80168fa <AllocInstance>
 800a08a:	4604      	mov	r4, r0
 800a08c:	4631      	mov	r1, r6
 800a08e:	e9cd 5410 	strd	r5, r4, [sp, #64]	; 0x40
 800a092:	9612      	str	r6, [sp, #72]	; 0x48
 800a094:	e9cd 5416 	strd	r5, r4, [sp, #88]	; 0x58
 800a098:	9618      	str	r6, [sp, #96]	; 0x60
 800a09a:	f000 fbce 	bl	800a83a <kfun:kotlin.Exception.<init>(kotlin.String?)kotlin.Exception>
 800a09e:	a81a      	add	r0, sp, #104	; 0x68
 800a0a0:	2101      	movs	r1, #1
 800a0a2:	2202      	movs	r2, #2
 800a0a4:	e9cd 541a 	strd	r5, r4, [sp, #104]	; 0x68
 800a0a8:	f00c fcdd 	bl	8016a66 <LeaveFrame>
 800a0ac:	4640      	mov	r0, r8
 800a0ae:	2102      	movs	r1, #2
 800a0b0:	2203      	movs	r2, #3
 800a0b2:	f00c fcd8 	bl	8016a66 <LeaveFrame>
 800a0b6:	a816      	add	r0, sp, #88	; 0x58
 800a0b8:	2101      	movs	r1, #1
 800a0ba:	2202      	movs	r2, #2
 800a0bc:	e9cd 5416 	strd	r5, r4, [sp, #88]	; 0x58
 800a0c0:	f00c fcd1 	bl	8016a66 <LeaveFrame>
 800a0c4:	a810      	add	r0, sp, #64	; 0x40
 800a0c6:	2102      	movs	r1, #2
 800a0c8:	2203      	movs	r2, #3
 800a0ca:	f00c fccc 	bl	8016a66 <LeaveFrame>
 800a0ce:	4620      	mov	r0, r4
 800a0d0:	f00a ff17 	bl	8014f02 <ThrowException>
 800a0d4:	e7ff      	b.n	800a0d6 <kfun:kotlin.text.checkRadix(kotlin.Int)ValueType+0x37c>
 800a0d6:	4604      	mov	r4, r0
 800a0d8:	a810      	add	r0, sp, #64	; 0x40
 800a0da:	2102      	movs	r1, #2
 800a0dc:	2205      	movs	r2, #5
 800a0de:	f00c fcc2 	bl	8016a66 <LeaveFrame>
 800a0e2:	e000      	b.n	800a0e6 <kfun:kotlin.text.checkRadix(kotlin.Int)ValueType+0x38c>
 800a0e4:	4604      	mov	r4, r0
 800a0e6:	a801      	add	r0, sp, #4
 800a0e8:	2100      	movs	r1, #0
 800a0ea:	220f      	movs	r2, #15
 800a0ec:	f00c fcbb 	bl	8016a66 <LeaveFrame>
 800a0f0:	4620      	mov	r0, r4
 800a0f2:	f7f7 f87b 	bl	80011ec <_Unwind_Resume>

0800a0f6 <kfun:kotlin.text.StringBuilder.toString()kotlin.String>:
 800a0f6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a0f8:	af03      	add	r7, sp, #12
 800a0fa:	e92d 0b00 	stmdb	sp!, {r8, r9, fp}
 800a0fe:	b088      	sub	sp, #32
 800a100:	2500      	movs	r5, #0
 800a102:	ac04      	add	r4, sp, #16
 800a104:	e9cd 5502 	strd	r5, r5, [sp, #8]
 800a108:	4688      	mov	r8, r1
 800a10a:	e9cd 5000 	strd	r5, r0, [sp]
 800a10e:	9506      	str	r5, [sp, #24]
 800a110:	e9cd 5004 	strd	r5, r0, [sp, #16]
 800a114:	68c6      	ldr	r6, [r0, #12]
 800a116:	f104 0008 	add.w	r0, r4, #8
 800a11a:	4631      	mov	r1, r6
 800a11c:	f00a f858 	bl	80141d0 <UpdateRef>
 800a120:	46e9      	mov	r9, sp
 800a122:	f109 0008 	add.w	r0, r9, #8
 800a126:	4631      	mov	r1, r6
 800a128:	f00a fa5f 	bl	80145ea <UpdateReturnRef>
 800a12c:	4620      	mov	r0, r4
 800a12e:	2101      	movs	r1, #1
 800a130:	2203      	movs	r2, #3
 800a132:	f00c fc98 	bl	8016a66 <LeaveFrame>
 800a136:	9801      	ldr	r0, [sp, #4]
 800a138:	2101      	movs	r1, #1
 800a13a:	2202      	movs	r2, #2
 800a13c:	e9cd 5004 	strd	r5, r0, [sp, #16]
 800a140:	6884      	ldr	r4, [r0, #8]
 800a142:	a804      	add	r0, sp, #16
 800a144:	f00c fc8f 	bl	8016a66 <LeaveFrame>
 800a148:	f109 030c 	add.w	r3, r9, #12
 800a14c:	4630      	mov	r0, r6
 800a14e:	2100      	movs	r1, #0
 800a150:	4622      	mov	r2, r4
 800a152:	f00a fffe 	bl	8015152 <Kotlin_String_fromCharArray>
 800a156:	4604      	mov	r4, r0
 800a158:	4640      	mov	r0, r8
 800a15a:	4621      	mov	r1, r4
 800a15c:	f00a fa45 	bl	80145ea <UpdateReturnRef>
 800a160:	4648      	mov	r0, r9
 800a162:	2101      	movs	r1, #1
 800a164:	2204      	movs	r2, #4
 800a166:	f00c fc7e 	bl	8016a66 <LeaveFrame>
 800a16a:	4620      	mov	r0, r4
 800a16c:	b008      	add	sp, #32
 800a16e:	e8bd 0b00 	ldmia.w	sp!, {r8, r9, fp}
 800a172:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a174 <kfun:kotlin.text.StringBuilder.<get-length>()ValueType>:
 800a174:	b5d0      	push	{r4, r6, r7, lr}
 800a176:	af02      	add	r7, sp, #8
 800a178:	b082      	sub	sp, #8
 800a17a:	2100      	movs	r1, #0
 800a17c:	2202      	movs	r2, #2
 800a17e:	e9cd 1000 	strd	r1, r0, [sp]
 800a182:	2101      	movs	r1, #1
 800a184:	6884      	ldr	r4, [r0, #8]
 800a186:	4668      	mov	r0, sp
 800a188:	f00c fc6d 	bl	8016a66 <LeaveFrame>
 800a18c:	4620      	mov	r0, r4
 800a18e:	b002      	add	sp, #8
 800a190:	bdd0      	pop	{r4, r6, r7, pc}

0800a192 <kfun:kotlin.text.StringBuilder.append(kotlin.CharArray)kotlin.text.StringBuilder>:
 800a192:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a194:	af03      	add	r7, sp, #12
 800a196:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 800a19a:	b08f      	sub	sp, #60	; 0x3c
 800a19c:	468b      	mov	fp, r1
 800a19e:	4604      	mov	r4, r0
 800a1a0:	4658      	mov	r0, fp
 800a1a2:	f04f 0800 	mov.w	r8, #0
 800a1a6:	9202      	str	r2, [sp, #8]
 800a1a8:	e9cd 8403 	strd	r8, r4, [sp, #12]
 800a1ac:	e9cd b805 	strd	fp, r8, [sp, #20]
 800a1b0:	e9cd 8807 	strd	r8, r8, [sp, #28]
 800a1b4:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800a1b8:	f00a fc0e 	bl	80149d8 <Kotlin_CharArray_getArrayLength>
 800a1bc:	4606      	mov	r6, r0
 800a1be:	a808      	add	r0, sp, #32
 800a1c0:	2101      	movs	r1, #1
 800a1c2:	2202      	movs	r2, #2
 800a1c4:	f00c fc4f 	bl	8016a66 <LeaveFrame>
 800a1c8:	f10d 0a20 	add.w	sl, sp, #32
 800a1cc:	e9cd 840c 	strd	r8, r4, [sp, #48]	; 0x30
 800a1d0:	e9cd 8408 	strd	r8, r4, [sp, #32]
 800a1d4:	2101      	movs	r1, #1
 800a1d6:	4650      	mov	r0, sl
 800a1d8:	2202      	movs	r2, #2
 800a1da:	68a5      	ldr	r5, [r4, #8]
 800a1dc:	f00c fc43 	bl	8016a66 <LeaveFrame>
 800a1e0:	4628      	mov	r0, r5
 800a1e2:	4631      	mov	r1, r6
 800a1e4:	f00c fcde 	bl	8016ba4 <Kotlin_Int_plus_Int>
 800a1e8:	4601      	mov	r1, r0
 800a1ea:	4620      	mov	r0, r4
 800a1ec:	f000 f88c 	bl	800a308 <kfun:kotlin.text.StringBuilder.ensureCapacity(kotlin.Int)>
 800a1f0:	a80c      	add	r0, sp, #48	; 0x30
 800a1f2:	ad03      	add	r5, sp, #12
 800a1f4:	2101      	movs	r1, #1
 800a1f6:	2202      	movs	r2, #2
 800a1f8:	f105 0910 	add.w	r9, r5, #16
 800a1fc:	f00c fc33 	bl	8016a66 <LeaveFrame>
 800a200:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 800a204:	f10a 0008 	add.w	r0, sl, #8
 800a208:	e9cd 8408 	strd	r8, r4, [sp, #32]
 800a20c:	68e4      	ldr	r4, [r4, #12]
 800a20e:	4621      	mov	r1, r4
 800a210:	f009 ffde 	bl	80141d0 <UpdateRef>
 800a214:	f105 000c 	add.w	r0, r5, #12
 800a218:	4621      	mov	r1, r4
 800a21a:	f00a f9e6 	bl	80145ea <UpdateReturnRef>
 800a21e:	4650      	mov	r0, sl
 800a220:	2101      	movs	r1, #1
 800a222:	2203      	movs	r2, #3
 800a224:	f00c fc1f 	bl	8016a66 <LeaveFrame>
 800a228:	9805      	ldr	r0, [sp, #20]
 800a22a:	e9cd 8008 	strd	r8, r0, [sp, #32]
 800a22e:	f00a fbd3 	bl	80149d8 <Kotlin_CharArray_getArrayLength>
 800a232:	4605      	mov	r5, r0
 800a234:	a808      	add	r0, sp, #32
 800a236:	2101      	movs	r1, #1
 800a238:	2202      	movs	r2, #2
 800a23a:	f00c fc14 	bl	8016a66 <LeaveFrame>
 800a23e:	9804      	ldr	r0, [sp, #16]
 800a240:	2101      	movs	r1, #1
 800a242:	2202      	movs	r2, #2
 800a244:	e9cd 8008 	strd	r8, r0, [sp, #32]
 800a248:	6886      	ldr	r6, [r0, #8]
 800a24a:	a808      	add	r0, sp, #32
 800a24c:	f00c fc0b 	bl	8016a66 <LeaveFrame>
 800a250:	4628      	mov	r0, r5
 800a252:	2100      	movs	r1, #0
 800a254:	e9cd 8b08 	strd	r8, fp, [sp, #32]
 800a258:	940a      	str	r4, [sp, #40]	; 0x28
 800a25a:	f00c fca9 	bl	8016bb0 <Kotlin_Int_minus_Int>
 800a25e:	9000      	str	r0, [sp, #0]
 800a260:	4658      	mov	r0, fp
 800a262:	2100      	movs	r1, #0
 800a264:	4622      	mov	r2, r4
 800a266:	4633      	mov	r3, r6
 800a268:	f00a fbb8 	bl	80149dc <Kotlin_CharArray_copyImpl>
 800a26c:	4650      	mov	r0, sl
 800a26e:	2102      	movs	r1, #2
 800a270:	2203      	movs	r2, #3
 800a272:	f00c fbf8 	bl	8016a66 <LeaveFrame>
 800a276:	9904      	ldr	r1, [sp, #16]
 800a278:	4648      	mov	r0, r9
 800a27a:	f009 ffa9 	bl	80141d0 <UpdateRef>
 800a27e:	9c07      	ldr	r4, [sp, #28]
 800a280:	a808      	add	r0, sp, #32
 800a282:	2101      	movs	r1, #1
 800a284:	2202      	movs	r2, #2
 800a286:	e9cd 8408 	strd	r8, r4, [sp, #32]
 800a28a:	68a5      	ldr	r5, [r4, #8]
 800a28c:	f00c fbeb 	bl	8016a66 <LeaveFrame>
 800a290:	9805      	ldr	r0, [sp, #20]
 800a292:	e9cd 8008 	strd	r8, r0, [sp, #32]
 800a296:	f00a fb9f 	bl	80149d8 <Kotlin_CharArray_getArrayLength>
 800a29a:	4606      	mov	r6, r0
 800a29c:	a808      	add	r0, sp, #32
 800a29e:	2101      	movs	r1, #1
 800a2a0:	2202      	movs	r2, #2
 800a2a2:	f00c fbe0 	bl	8016a66 <LeaveFrame>
 800a2a6:	4628      	mov	r0, r5
 800a2a8:	4631      	mov	r1, r6
 800a2aa:	f00c fc7b 	bl	8016ba4 <Kotlin_Int_plus_Int>
 800a2ae:	4605      	mov	r5, r0
 800a2b0:	e9cd 8408 	strd	r8, r4, [sp, #32]
 800a2b4:	4620      	mov	r0, r4
 800a2b6:	4629      	mov	r1, r5
 800a2b8:	f000 f826 	bl	800a308 <kfun:kotlin.text.StringBuilder.ensureCapacity(kotlin.Int)>
 800a2bc:	a808      	add	r0, sp, #32
 800a2be:	2101      	movs	r1, #1
 800a2c0:	2202      	movs	r2, #2
 800a2c2:	60a5      	str	r5, [r4, #8]
 800a2c4:	f00c fbcf 	bl	8016a66 <LeaveFrame>
 800a2c8:	9c04      	ldr	r4, [sp, #16]
 800a2ca:	9802      	ldr	r0, [sp, #8]
 800a2cc:	4621      	mov	r1, r4
 800a2ce:	f00a f98c 	bl	80145ea <UpdateReturnRef>
 800a2d2:	a803      	add	r0, sp, #12
 800a2d4:	2102      	movs	r1, #2
 800a2d6:	2205      	movs	r2, #5
 800a2d8:	f00c fbc5 	bl	8016a66 <LeaveFrame>
 800a2dc:	4620      	mov	r0, r4
 800a2de:	b00f      	add	sp, #60	; 0x3c
 800a2e0:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 800a2e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a2e6:	4604      	mov	r4, r0
 800a2e8:	a808      	add	r0, sp, #32
 800a2ea:	e001      	b.n	800a2f0 <kfun:kotlin.text.StringBuilder.append(kotlin.CharArray)kotlin.text.StringBuilder+0x15e>
 800a2ec:	4604      	mov	r4, r0
 800a2ee:	a80c      	add	r0, sp, #48	; 0x30
 800a2f0:	2101      	movs	r1, #1
 800a2f2:	2202      	movs	r2, #2
 800a2f4:	f00c fbb7 	bl	8016a66 <LeaveFrame>
 800a2f8:	a803      	add	r0, sp, #12
 800a2fa:	2102      	movs	r1, #2
 800a2fc:	2205      	movs	r2, #5
 800a2fe:	f00c fbb2 	bl	8016a66 <LeaveFrame>
 800a302:	4620      	mov	r0, r4
 800a304:	f7f6 ff72 	bl	80011ec <_Unwind_Resume>

0800a308 <kfun:kotlin.text.StringBuilder.ensureCapacity(kotlin.Int)>:
 800a308:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a30a:	af03      	add	r7, sp, #12
 800a30c:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 800a310:	b08d      	sub	sp, #52	; 0x34
 800a312:	f04f 0800 	mov.w	r8, #0
 800a316:	ae0a      	add	r6, sp, #40	; 0x28
 800a318:	e9cd 8807 	strd	r8, r8, [sp, #28]
 800a31c:	f106 0408 	add.w	r4, r6, #8
 800a320:	e9cd 8805 	strd	r8, r8, [sp, #20]
 800a324:	468a      	mov	sl, r1
 800a326:	e9cd 8003 	strd	r8, r0, [sp, #12]
 800a32a:	e9cd 8809 	strd	r8, r8, [sp, #36]	; 0x24
 800a32e:	e9cd 080b 	strd	r0, r8, [sp, #44]	; 0x2c
 800a332:	68c5      	ldr	r5, [r0, #12]
 800a334:	4620      	mov	r0, r4
 800a336:	4629      	mov	r1, r5
 800a338:	f009 ff4a 	bl	80141d0 <UpdateRef>
 800a33c:	f10d 090c 	add.w	r9, sp, #12
 800a340:	4629      	mov	r1, r5
 800a342:	f109 0008 	add.w	r0, r9, #8
 800a346:	f00a f950 	bl	80145ea <UpdateReturnRef>
 800a34a:	4630      	mov	r0, r6
 800a34c:	2101      	movs	r1, #1
 800a34e:	2203      	movs	r2, #3
 800a350:	f00c fb89 	bl	8016a66 <LeaveFrame>
 800a354:	4628      	mov	r0, r5
 800a356:	e9cd 850a 	strd	r8, r5, [sp, #40]	; 0x28
 800a35a:	f00a fb3d 	bl	80149d8 <Kotlin_CharArray_getArrayLength>
 800a35e:	4605      	mov	r5, r0
 800a360:	a80a      	add	r0, sp, #40	; 0x28
 800a362:	2101      	movs	r1, #1
 800a364:	2202      	movs	r2, #2
 800a366:	f00c fb7e 	bl	8016a66 <LeaveFrame>
 800a36a:	4555      	cmp	r5, sl
 800a36c:	da6c      	bge.n	800a448 <kfun:kotlin.text.StringBuilder.ensureCapacity(kotlin.Int)+0x140>
 800a36e:	f109 0014 	add.w	r0, r9, #20
 800a372:	9002      	str	r0, [sp, #8]
 800a374:	9804      	ldr	r0, [sp, #16]
 800a376:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 800a37a:	e9cd 800a 	strd	r8, r0, [sp, #40]	; 0x28
 800a37e:	68c5      	ldr	r5, [r0, #12]
 800a380:	4620      	mov	r0, r4
 800a382:	4629      	mov	r1, r5
 800a384:	f009 ff24 	bl	80141d0 <UpdateRef>
 800a388:	f109 000c 	add.w	r0, r9, #12
 800a38c:	4629      	mov	r1, r5
 800a38e:	f00a f92c 	bl	80145ea <UpdateReturnRef>
 800a392:	a80a      	add	r0, sp, #40	; 0x28
 800a394:	2101      	movs	r1, #1
 800a396:	2203      	movs	r2, #3
 800a398:	f00c fb65 	bl	8016a66 <LeaveFrame>
 800a39c:	4628      	mov	r0, r5
 800a39e:	e9cd 850a 	strd	r8, r5, [sp, #40]	; 0x28
 800a3a2:	f00a fb19 	bl	80149d8 <Kotlin_CharArray_getArrayLength>
 800a3a6:	4605      	mov	r5, r0
 800a3a8:	a80a      	add	r0, sp, #40	; 0x28
 800a3aa:	2101      	movs	r1, #1
 800a3ac:	2202      	movs	r2, #2
 800a3ae:	f00c fb5a 	bl	8016a66 <LeaveFrame>
 800a3b2:	4628      	mov	r0, r5
 800a3b4:	2103      	movs	r1, #3
 800a3b6:	f00c fc0c 	bl	8016bd2 <Kotlin_Int_times_Int>
 800a3ba:	2102      	movs	r1, #2
 800a3bc:	f00c fbfa 	bl	8016bb4 <Kotlin_Int_div_Int>
 800a3c0:	f8dd b010 	ldr.w	fp, [sp, #16]
 800a3c4:	4605      	mov	r5, r0
 800a3c6:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 800a3ca:	e9cd 8b0a 	strd	r8, fp, [sp, #40]	; 0x28
 800a3ce:	4658      	mov	r0, fp
 800a3d0:	f850 6f0c 	ldr.w	r6, [r0, #12]!
 800a3d4:	9001      	str	r0, [sp, #4]
 800a3d6:	4620      	mov	r0, r4
 800a3d8:	4631      	mov	r1, r6
 800a3da:	f009 fef9 	bl	80141d0 <UpdateRef>
 800a3de:	f109 0010 	add.w	r0, r9, #16
 800a3e2:	4631      	mov	r1, r6
 800a3e4:	f00a f901 	bl	80145ea <UpdateReturnRef>
 800a3e8:	a80a      	add	r0, sp, #40	; 0x28
 800a3ea:	2101      	movs	r1, #1
 800a3ec:	2203      	movs	r2, #3
 800a3ee:	f00c fb3a 	bl	8016a66 <LeaveFrame>
 800a3f2:	9802      	ldr	r0, [sp, #8]
 800a3f4:	4631      	mov	r1, r6
 800a3f6:	f009 feeb 	bl	80141d0 <UpdateRef>
 800a3fa:	9808      	ldr	r0, [sp, #32]
 800a3fc:	4555      	cmp	r5, sl
 800a3fe:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 800a402:	e9cd 800a 	strd	r8, r0, [sp, #40]	; 0x28
 800a406:	bfa8      	it	ge
 800a408:	46aa      	movge	sl, r5
 800a40a:	2100      	movs	r1, #0
 800a40c:	4652      	mov	r2, sl
 800a40e:	4623      	mov	r3, r4
 800a410:	f000 f831 	bl	800a476 <kfun:kotlin.collections.copyOfUninitializedElements@kotlin.CharArray.(kotlin.Int;kotlin.Int)kotlin.CharArray>
 800a414:	4604      	mov	r4, r0
 800a416:	a803      	add	r0, sp, #12
 800a418:	4621      	mov	r1, r4
 800a41a:	3018      	adds	r0, #24
 800a41c:	f00a f8e5 	bl	80145ea <UpdateReturnRef>
 800a420:	ad0a      	add	r5, sp, #40	; 0x28
 800a422:	2101      	movs	r1, #1
 800a424:	2203      	movs	r2, #3
 800a426:	4628      	mov	r0, r5
 800a428:	f00c fb1d 	bl	8016a66 <LeaveFrame>
 800a42c:	2000      	movs	r0, #0
 800a42e:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 800a432:	900a      	str	r0, [sp, #40]	; 0x28
 800a434:	4621      	mov	r1, r4
 800a436:	9801      	ldr	r0, [sp, #4]
 800a438:	940c      	str	r4, [sp, #48]	; 0x30
 800a43a:	f009 fec9 	bl	80141d0 <UpdateRef>
 800a43e:	4628      	mov	r0, r5
 800a440:	2102      	movs	r1, #2
 800a442:	2203      	movs	r2, #3
 800a444:	f00c fb0f 	bl	8016a66 <LeaveFrame>
 800a448:	a803      	add	r0, sp, #12
 800a44a:	2101      	movs	r1, #1
 800a44c:	2207      	movs	r2, #7
 800a44e:	f00c fb0a 	bl	8016a66 <LeaveFrame>
 800a452:	b00d      	add	sp, #52	; 0x34
 800a454:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 800a458:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a45a:	4604      	mov	r4, r0
 800a45c:	a80a      	add	r0, sp, #40	; 0x28
 800a45e:	2101      	movs	r1, #1
 800a460:	2203      	movs	r2, #3
 800a462:	f00c fb00 	bl	8016a66 <LeaveFrame>
 800a466:	a803      	add	r0, sp, #12
 800a468:	2101      	movs	r1, #1
 800a46a:	2207      	movs	r2, #7
 800a46c:	f00c fafb 	bl	8016a66 <LeaveFrame>
 800a470:	4620      	mov	r0, r4
 800a472:	f7f6 febb 	bl	80011ec <_Unwind_Resume>

0800a476 <kfun:kotlin.collections.copyOfUninitializedElements@kotlin.CharArray.(kotlin.Int;kotlin.Int)kotlin.CharArray>:
 800a476:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a478:	af03      	add	r7, sp, #12
 800a47a:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 800a47e:	b09b      	sub	sp, #108	; 0x6c
 800a480:	f10d 090c 	add.w	r9, sp, #12
 800a484:	468b      	mov	fp, r1
 800a486:	4604      	mov	r4, r0
 800a488:	212c      	movs	r1, #44	; 0x2c
 800a48a:	4648      	mov	r0, r9
 800a48c:	4698      	mov	r8, r3
 800a48e:	4692      	mov	sl, r2
 800a490:	f011 f832 	bl	801b4f8 <__aeabi_memclr>
 800a494:	4650      	mov	r0, sl
 800a496:	4659      	mov	r1, fp
 800a498:	9404      	str	r4, [sp, #16]
 800a49a:	f00c fb89 	bl	8016bb0 <Kotlin_Int_minus_Int>
 800a49e:	4601      	mov	r1, r0
 800a4a0:	f1b1 3fff 	cmp.w	r1, #4294967295	; 0xffffffff
 800a4a4:	dd61      	ble.n	800a56a <kfun:kotlin.collections.copyOfUninitializedElements@kotlin.CharArray.(kotlin.Int;kotlin.Int)kotlin.CharArray+0xf4>
 800a4a6:	f241 50b0 	movw	r0, #5552	; 0x15b0
 800a4aa:	f109 0224 	add.w	r2, r9, #36	; 0x24
 800a4ae:	f6c0 0002 	movt	r0, #2050	; 0x802
 800a4b2:	f109 0428 	add.w	r4, r9, #40	; 0x28
 800a4b6:	f00a fa1f 	bl	80148f8 <AllocArrayInstance>
 800a4ba:	4605      	mov	r5, r0
 800a4bc:	a816      	add	r0, sp, #88	; 0x58
 800a4be:	f04f 0900 	mov.w	r9, #0
 800a4c2:	2101      	movs	r1, #1
 800a4c4:	2202      	movs	r2, #2
 800a4c6:	e9cd 950e 	strd	r9, r5, [sp, #56]	; 0x38
 800a4ca:	e9cd 9516 	strd	r9, r5, [sp, #88]	; 0x58
 800a4ce:	f00c faca 	bl	8016a66 <LeaveFrame>
 800a4d2:	a816      	add	r0, sp, #88	; 0x58
 800a4d4:	2101      	movs	r1, #1
 800a4d6:	2202      	movs	r2, #2
 800a4d8:	e9cd 9516 	strd	r9, r5, [sp, #88]	; 0x58
 800a4dc:	f00c fac3 	bl	8016a66 <LeaveFrame>
 800a4e0:	a80e      	add	r0, sp, #56	; 0x38
 800a4e2:	2101      	movs	r1, #1
 800a4e4:	2202      	movs	r2, #2
 800a4e6:	f00c fabe 	bl	8016a66 <LeaveFrame>
 800a4ea:	4620      	mov	r0, r4
 800a4ec:	4629      	mov	r1, r5
 800a4ee:	f009 fe6f 	bl	80141d0 <UpdateRef>
 800a4f2:	9c04      	ldr	r4, [sp, #16]
 800a4f4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 800a4f6:	4620      	mov	r0, r4
 800a4f8:	e9cd 9416 	strd	r9, r4, [sp, #88]	; 0x58
 800a4fc:	f00a fa6c 	bl	80149d8 <Kotlin_CharArray_getArrayLength>
 800a500:	4606      	mov	r6, r0
 800a502:	a816      	add	r0, sp, #88	; 0x58
 800a504:	2101      	movs	r1, #1
 800a506:	2202      	movs	r2, #2
 800a508:	f00c faad 	bl	8016a66 <LeaveFrame>
 800a50c:	4556      	cmp	r6, sl
 800a50e:	da0a      	bge.n	800a526 <kfun:kotlin.collections.copyOfUninitializedElements@kotlin.CharArray.(kotlin.Int;kotlin.Int)kotlin.CharArray+0xb0>
 800a510:	9804      	ldr	r0, [sp, #16]
 800a512:	e9cd 9016 	strd	r9, r0, [sp, #88]	; 0x58
 800a516:	f00a fa5f 	bl	80149d8 <Kotlin_CharArray_getArrayLength>
 800a51a:	4682      	mov	sl, r0
 800a51c:	a816      	add	r0, sp, #88	; 0x58
 800a51e:	2101      	movs	r1, #1
 800a520:	2202      	movs	r2, #2
 800a522:	f00c faa0 	bl	8016a66 <LeaveFrame>
 800a526:	4650      	mov	r0, sl
 800a528:	4659      	mov	r1, fp
 800a52a:	e9cd 9413 	strd	r9, r4, [sp, #76]	; 0x4c
 800a52e:	9515      	str	r5, [sp, #84]	; 0x54
 800a530:	f00c fb3e 	bl	8016bb0 <Kotlin_Int_minus_Int>
 800a534:	9000      	str	r0, [sp, #0]
 800a536:	4620      	mov	r0, r4
 800a538:	4659      	mov	r1, fp
 800a53a:	462a      	mov	r2, r5
 800a53c:	2300      	movs	r3, #0
 800a53e:	f00a fa4d 	bl	80149dc <Kotlin_CharArray_copyImpl>
 800a542:	a813      	add	r0, sp, #76	; 0x4c
 800a544:	2102      	movs	r1, #2
 800a546:	2203      	movs	r2, #3
 800a548:	f00c fa8d 	bl	8016a66 <LeaveFrame>
 800a54c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800a54e:	4640      	mov	r0, r8
 800a550:	4621      	mov	r1, r4
 800a552:	f00a f84a 	bl	80145ea <UpdateReturnRef>
 800a556:	a803      	add	r0, sp, #12
 800a558:	2101      	movs	r1, #1
 800a55a:	220b      	movs	r2, #11
 800a55c:	f00c fa83 	bl	8016a66 <LeaveFrame>
 800a560:	4620      	mov	r0, r4
 800a562:	b01b      	add	sp, #108	; 0x6c
 800a564:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 800a568:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a56a:	f641 10f0 	movw	r0, #6640	; 0x19f0
 800a56e:	f109 0108 	add.w	r1, r9, #8
 800a572:	f6c0 0002 	movt	r0, #2050	; 0x802
 800a576:	f109 050c 	add.w	r5, r9, #12
 800a57a:	f00c f9be 	bl	80168fa <AllocInstance>
 800a57e:	210a      	movs	r1, #10
 800a580:	4604      	mov	r4, r0
 800a582:	2600      	movs	r6, #0
 800a584:	e9cd 6416 	strd	r6, r4, [sp, #88]	; 0x58
 800a588:	f000 fae5 	bl	800ab56 <kfun:kotlin.text.StringBuilder.<init>(kotlin.Int)kotlin.text.StringBuilder>
 800a58c:	f10d 0858 	add.w	r8, sp, #88	; 0x58
 800a590:	2101      	movs	r1, #1
 800a592:	2202      	movs	r2, #2
 800a594:	4640      	mov	r0, r8
 800a596:	f00c fa66 	bl	8016a66 <LeaveFrame>
 800a59a:	4628      	mov	r0, r5
 800a59c:	4621      	mov	r1, r4
 800a59e:	f009 fe17 	bl	80141d0 <UpdateRef>
 800a5a2:	9c06      	ldr	r4, [sp, #24]
 800a5a4:	a80e      	add	r0, sp, #56	; 0x38
 800a5a6:	f100 0108 	add.w	r1, r0, #8
 800a5aa:	4658      	mov	r0, fp
 800a5ac:	e9cd 6610 	strd	r6, r6, [sp, #64]	; 0x40
 800a5b0:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
 800a5b4:	9102      	str	r1, [sp, #8]
 800a5b6:	f00c fb9b 	bl	8016cf0 <Kotlin_Int_toString>
 800a5ba:	f108 010c 	add.w	r1, r8, #12
 800a5be:	961a      	str	r6, [sp, #104]	; 0x68
 800a5c0:	e9cd 6416 	strd	r6, r4, [sp, #88]	; 0x58
 800a5c4:	e9cd 0618 	strd	r0, r6, [sp, #96]	; 0x60
 800a5c8:	f00a fe0c 	bl	80151e4 <Kotlin_String_toCharArray>
 800a5cc:	4601      	mov	r1, r0
 800a5ce:	f108 0210 	add.w	r2, r8, #16
 800a5d2:	4620      	mov	r0, r4
 800a5d4:	f7ff fddd 	bl	800a192 <kfun:kotlin.text.StringBuilder.append(kotlin.CharArray)kotlin.text.StringBuilder>
 800a5d8:	4605      	mov	r5, r0
 800a5da:	a80e      	add	r0, sp, #56	; 0x38
 800a5dc:	4629      	mov	r1, r5
 800a5de:	f100 0b0c 	add.w	fp, r0, #12
 800a5e2:	f109 0410 	add.w	r4, r9, #16
 800a5e6:	4658      	mov	r0, fp
 800a5e8:	f009 ffff 	bl	80145ea <UpdateReturnRef>
 800a5ec:	f10d 0858 	add.w	r8, sp, #88	; 0x58
 800a5f0:	2102      	movs	r1, #2
 800a5f2:	2205      	movs	r2, #5
 800a5f4:	4640      	mov	r0, r8
 800a5f6:	f00c fa36 	bl	8016a66 <LeaveFrame>
 800a5fa:	4620      	mov	r0, r4
 800a5fc:	4629      	mov	r1, r5
 800a5fe:	f009 fff4 	bl	80145ea <UpdateReturnRef>
 800a602:	a80e      	add	r0, sp, #56	; 0x38
 800a604:	2101      	movs	r1, #1
 800a606:	2204      	movs	r2, #4
 800a608:	f00c fa2d 	bl	8016a66 <LeaveFrame>
 800a60c:	9d06      	ldr	r5, [sp, #24]
 800a60e:	f641 0090 	movw	r0, #6288	; 0x1890
 800a612:	f108 010c 	add.w	r1, r8, #12
 800a616:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800a61a:	e9cd 6619 	strd	r6, r6, [sp, #100]	; 0x64
 800a61e:	e9cd 6516 	strd	r6, r5, [sp, #88]	; 0x58
 800a622:	9018      	str	r0, [sp, #96]	; 0x60
 800a624:	f00a fdde 	bl	80151e4 <Kotlin_String_toCharArray>
 800a628:	4601      	mov	r1, r0
 800a62a:	f108 0210 	add.w	r2, r8, #16
 800a62e:	4628      	mov	r0, r5
 800a630:	f7ff fdaf 	bl	800a192 <kfun:kotlin.text.StringBuilder.append(kotlin.CharArray)kotlin.text.StringBuilder>
 800a634:	4601      	mov	r1, r0
 800a636:	f109 0014 	add.w	r0, r9, #20
 800a63a:	f009 ffd6 	bl	80145ea <UpdateReturnRef>
 800a63e:	ac16      	add	r4, sp, #88	; 0x58
 800a640:	2102      	movs	r1, #2
 800a642:	2205      	movs	r2, #5
 800a644:	4620      	mov	r0, r4
 800a646:	f00c fa0e 	bl	8016a66 <LeaveFrame>
 800a64a:	9d06      	ldr	r5, [sp, #24]
 800a64c:	f04f 0800 	mov.w	r8, #0
 800a650:	e9cd 8810 	strd	r8, r8, [sp, #64]	; 0x40
 800a654:	4650      	mov	r0, sl
 800a656:	e9cd 850e 	strd	r8, r5, [sp, #56]	; 0x38
 800a65a:	9902      	ldr	r1, [sp, #8]
 800a65c:	f00c fb48 	bl	8016cf0 <Kotlin_Int_toString>
 800a660:	f104 010c 	add.w	r1, r4, #12
 800a664:	f8cd 8068 	str.w	r8, [sp, #104]	; 0x68
 800a668:	e9cd 8516 	strd	r8, r5, [sp, #88]	; 0x58
 800a66c:	e9cd 0818 	strd	r0, r8, [sp, #96]	; 0x60
 800a670:	f00a fdb8 	bl	80151e4 <Kotlin_String_toCharArray>
 800a674:	4601      	mov	r1, r0
 800a676:	f104 0210 	add.w	r2, r4, #16
 800a67a:	4628      	mov	r0, r5
 800a67c:	f7ff fd89 	bl	800a192 <kfun:kotlin.text.StringBuilder.append(kotlin.CharArray)kotlin.text.StringBuilder>
 800a680:	4604      	mov	r4, r0
 800a682:	f109 0020 	add.w	r0, r9, #32
 800a686:	9001      	str	r0, [sp, #4]
 800a688:	4658      	mov	r0, fp
 800a68a:	4621      	mov	r1, r4
 800a68c:	f109 0a1c 	add.w	sl, r9, #28
 800a690:	f109 0618 	add.w	r6, r9, #24
 800a694:	f009 ffa9 	bl	80145ea <UpdateReturnRef>
 800a698:	a816      	add	r0, sp, #88	; 0x58
 800a69a:	2102      	movs	r1, #2
 800a69c:	2205      	movs	r2, #5
 800a69e:	f00c f9e2 	bl	8016a66 <LeaveFrame>
 800a6a2:	4630      	mov	r0, r6
 800a6a4:	4621      	mov	r1, r4
 800a6a6:	f009 ffa0 	bl	80145ea <UpdateReturnRef>
 800a6aa:	f10d 0938 	add.w	r9, sp, #56	; 0x38
 800a6ae:	2101      	movs	r1, #1
 800a6b0:	2204      	movs	r2, #4
 800a6b2:	4648      	mov	r0, r9
 800a6b4:	f00c f9d7 	bl	8016a66 <LeaveFrame>
 800a6b8:	9806      	ldr	r0, [sp, #24]
 800a6ba:	ac13      	add	r4, sp, #76	; 0x4c
 800a6bc:	e9cd 8810 	strd	r8, r8, [sp, #64]	; 0x40
 800a6c0:	e9cd 800e 	strd	r8, r0, [sp, #56]	; 0x38
 800a6c4:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
 800a6c8:	e9cd 8013 	strd	r8, r0, [sp, #76]	; 0x4c
 800a6cc:	68c6      	ldr	r6, [r0, #12]
 800a6ce:	f104 0008 	add.w	r0, r4, #8
 800a6d2:	4631      	mov	r1, r6
 800a6d4:	f009 fd7c 	bl	80141d0 <UpdateRef>
 800a6d8:	9802      	ldr	r0, [sp, #8]
 800a6da:	4631      	mov	r1, r6
 800a6dc:	f009 ff85 	bl	80145ea <UpdateReturnRef>
 800a6e0:	4620      	mov	r0, r4
 800a6e2:	2101      	movs	r1, #1
 800a6e4:	2203      	movs	r2, #3
 800a6e6:	f00c f9be 	bl	8016a66 <LeaveFrame>
 800a6ea:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800a6ec:	2101      	movs	r1, #1
 800a6ee:	2202      	movs	r2, #2
 800a6f0:	e9cd 8016 	strd	r8, r0, [sp, #88]	; 0x58
 800a6f4:	6885      	ldr	r5, [r0, #8]
 800a6f6:	a816      	add	r0, sp, #88	; 0x58
 800a6f8:	f00c f9b5 	bl	8016a66 <LeaveFrame>
 800a6fc:	4630      	mov	r0, r6
 800a6fe:	2100      	movs	r1, #0
 800a700:	462a      	mov	r2, r5
 800a702:	465b      	mov	r3, fp
 800a704:	f00a fd25 	bl	8015152 <Kotlin_String_fromCharArray>
 800a708:	4606      	mov	r6, r0
 800a70a:	4650      	mov	r0, sl
 800a70c:	4631      	mov	r1, r6
 800a70e:	f009 ff6c 	bl	80145ea <UpdateReturnRef>
 800a712:	4648      	mov	r0, r9
 800a714:	2101      	movs	r1, #1
 800a716:	2204      	movs	r2, #4
 800a718:	f00c f9a5 	bl	8016a66 <LeaveFrame>
 800a71c:	9901      	ldr	r1, [sp, #4]
 800a71e:	f241 6030 	movw	r0, #5680	; 0x1630
 800a722:	f6c0 0002 	movt	r0, #2050	; 0x802
 800a726:	f00c f8e8 	bl	80168fa <AllocInstance>
 800a72a:	4605      	mov	r5, r0
 800a72c:	4631      	mov	r1, r6
 800a72e:	e9cd 5617 	strd	r5, r6, [sp, #92]	; 0x5c
 800a732:	e9cd 8513 	strd	r8, r5, [sp, #76]	; 0x4c
 800a736:	e9cd 6815 	strd	r6, r8, [sp, #84]	; 0x54
 800a73a:	f000 f87e 	bl	800a83a <kfun:kotlin.Exception.<init>(kotlin.String?)kotlin.Exception>
 800a73e:	a80e      	add	r0, sp, #56	; 0x38
 800a740:	2101      	movs	r1, #1
 800a742:	2202      	movs	r2, #2
 800a744:	e9cd 850e 	strd	r8, r5, [sp, #56]	; 0x38
 800a748:	f00c f98d 	bl	8016a66 <LeaveFrame>
 800a74c:	4620      	mov	r0, r4
 800a74e:	2102      	movs	r1, #2
 800a750:	2203      	movs	r2, #3
 800a752:	f00c f988 	bl	8016a66 <LeaveFrame>
 800a756:	a80e      	add	r0, sp, #56	; 0x38
 800a758:	2101      	movs	r1, #1
 800a75a:	2202      	movs	r2, #2
 800a75c:	e9cd 850e 	strd	r8, r5, [sp, #56]	; 0x38
 800a760:	f00c f981 	bl	8016a66 <LeaveFrame>
 800a764:	a816      	add	r0, sp, #88	; 0x58
 800a766:	2102      	movs	r1, #2
 800a768:	2203      	movs	r2, #3
 800a76a:	f00c f97c 	bl	8016a66 <LeaveFrame>
 800a76e:	4628      	mov	r0, r5
 800a770:	f00a fbc7 	bl	8014f02 <ThrowException>
 800a774:	e004      	b.n	800a780 <kfun:kotlin.collections.copyOfUninitializedElements@kotlin.CharArray.(kotlin.Int;kotlin.Int)kotlin.CharArray+0x30a>
 800a776:	4604      	mov	r4, r0
 800a778:	a816      	add	r0, sp, #88	; 0x58
 800a77a:	2102      	movs	r1, #2
 800a77c:	2205      	movs	r2, #5
 800a77e:	e008      	b.n	800a792 <kfun:kotlin.collections.copyOfUninitializedElements@kotlin.CharArray.(kotlin.Int;kotlin.Int)kotlin.CharArray+0x31c>
 800a780:	4604      	mov	r4, r0
 800a782:	a816      	add	r0, sp, #88	; 0x58
 800a784:	2102      	movs	r1, #2
 800a786:	2205      	movs	r2, #5
 800a788:	f00c f96d 	bl	8016a66 <LeaveFrame>
 800a78c:	a80e      	add	r0, sp, #56	; 0x38
 800a78e:	2101      	movs	r1, #1
 800a790:	2204      	movs	r2, #4
 800a792:	f00c f968 	bl	8016a66 <LeaveFrame>
 800a796:	a803      	add	r0, sp, #12
 800a798:	2101      	movs	r1, #1
 800a79a:	220b      	movs	r2, #11
 800a79c:	f00c f963 	bl	8016a66 <LeaveFrame>
 800a7a0:	4620      	mov	r0, r4
 800a7a2:	f7f6 fd23 	bl	80011ec <_Unwind_Resume>

0800a7a6 <kfun:kotlin.text.StringBuilder.append(kotlin.Int)kotlin.text.StringBuilder>:
 800a7a6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a7a8:	af03      	add	r7, sp, #12
 800a7aa:	f84d 8d04 	str.w	r8, [sp, #-4]!
 800a7ae:	b08a      	sub	sp, #40	; 0x28
 800a7b0:	ad01      	add	r5, sp, #4
 800a7b2:	4690      	mov	r8, r2
 800a7b4:	f105 0208 	add.w	r2, r5, #8
 800a7b8:	4606      	mov	r6, r0
 800a7ba:	2400      	movs	r4, #0
 800a7bc:	4608      	mov	r0, r1
 800a7be:	4611      	mov	r1, r2
 800a7c0:	e9cd 4403 	strd	r4, r4, [sp, #12]
 800a7c4:	e9cd 4601 	strd	r4, r6, [sp, #4]
 800a7c8:	f00c fa92 	bl	8016cf0 <Kotlin_Int_toString>
 800a7cc:	9409      	str	r4, [sp, #36]	; 0x24
 800a7ce:	e9cd 4605 	strd	r4, r6, [sp, #20]
 800a7d2:	e9cd 0407 	strd	r0, r4, [sp, #28]
 800a7d6:	ac05      	add	r4, sp, #20
 800a7d8:	f104 010c 	add.w	r1, r4, #12
 800a7dc:	f00a fd02 	bl	80151e4 <Kotlin_String_toCharArray>
 800a7e0:	4601      	mov	r1, r0
 800a7e2:	f104 0210 	add.w	r2, r4, #16
 800a7e6:	4630      	mov	r0, r6
 800a7e8:	f7ff fcd3 	bl	800a192 <kfun:kotlin.text.StringBuilder.append(kotlin.CharArray)kotlin.text.StringBuilder>
 800a7ec:	4606      	mov	r6, r0
 800a7ee:	f105 000c 	add.w	r0, r5, #12
 800a7f2:	4631      	mov	r1, r6
 800a7f4:	f009 fef9 	bl	80145ea <UpdateReturnRef>
 800a7f8:	a805      	add	r0, sp, #20
 800a7fa:	2102      	movs	r1, #2
 800a7fc:	2205      	movs	r2, #5
 800a7fe:	f00c f932 	bl	8016a66 <LeaveFrame>
 800a802:	4640      	mov	r0, r8
 800a804:	4631      	mov	r1, r6
 800a806:	f009 fef0 	bl	80145ea <UpdateReturnRef>
 800a80a:	4628      	mov	r0, r5
 800a80c:	2101      	movs	r1, #1
 800a80e:	2204      	movs	r2, #4
 800a810:	f00c f929 	bl	8016a66 <LeaveFrame>
 800a814:	4630      	mov	r0, r6
 800a816:	b00a      	add	sp, #40	; 0x28
 800a818:	f85d 8b04 	ldr.w	r8, [sp], #4
 800a81c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a81e:	4604      	mov	r4, r0
 800a820:	a805      	add	r0, sp, #20
 800a822:	2102      	movs	r1, #2
 800a824:	2205      	movs	r2, #5
 800a826:	f00c f91e 	bl	8016a66 <LeaveFrame>
 800a82a:	a801      	add	r0, sp, #4
 800a82c:	2101      	movs	r1, #1
 800a82e:	2204      	movs	r2, #4
 800a830:	f00c f919 	bl	8016a66 <LeaveFrame>
 800a834:	4620      	mov	r0, r4
 800a836:	f7f6 fcd9 	bl	80011ec <_Unwind_Resume>

0800a83a <kfun:kotlin.Exception.<init>(kotlin.String?)kotlin.Exception>:
 800a83a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a83c:	af03      	add	r7, sp, #12
 800a83e:	f84d bd04 	str.w	fp, [sp, #-4]!
 800a842:	b08e      	sub	sp, #56	; 0x38
 800a844:	4604      	mov	r4, r0
 800a846:	460d      	mov	r5, r1
 800a848:	2600      	movs	r6, #0
 800a84a:	a804      	add	r0, sp, #16
 800a84c:	9401      	str	r4, [sp, #4]
 800a84e:	2101      	movs	r1, #1
 800a850:	9600      	str	r6, [sp, #0]
 800a852:	2202      	movs	r2, #2
 800a854:	e9cd 5602 	strd	r5, r6, [sp, #8]
 800a858:	960a      	str	r6, [sp, #40]	; 0x28
 800a85a:	c070      	stmia	r0!, {r4, r5, r6}
 800a85c:	a807      	add	r0, sp, #28
 800a85e:	c070      	stmia	r0!, {r4, r5, r6}
 800a860:	a80c      	add	r0, sp, #48	; 0x30
 800a862:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
 800a866:	f00c f8fe 	bl	8016a66 <LeaveFrame>
 800a86a:	f104 0008 	add.w	r0, r4, #8
 800a86e:	4629      	mov	r1, r5
 800a870:	f009 fcae 	bl	80141d0 <UpdateRef>
 800a874:	f104 0010 	add.w	r0, r4, #16
 800a878:	2100      	movs	r1, #0
 800a87a:	f009 fca9 	bl	80141d0 <UpdateRef>
 800a87e:	ad06      	add	r5, sp, #24
 800a880:	f105 0010 	add.w	r0, r5, #16
 800a884:	f00c f92c 	bl	8016ae0 <Kotlin_getCurrentStackTrace>
 800a888:	4601      	mov	r1, r0
 800a88a:	9807      	ldr	r0, [sp, #28]
 800a88c:	300c      	adds	r0, #12
 800a88e:	f009 fc9f 	bl	80141d0 <UpdateRef>
 800a892:	4628      	mov	r0, r5
 800a894:	2103      	movs	r1, #3
 800a896:	2205      	movs	r2, #5
 800a898:	f00c f8e5 	bl	8016a66 <LeaveFrame>
 800a89c:	a803      	add	r0, sp, #12
 800a89e:	2102      	movs	r1, #2
 800a8a0:	2203      	movs	r2, #3
 800a8a2:	f00c f8e0 	bl	8016a66 <LeaveFrame>
 800a8a6:	a806      	add	r0, sp, #24
 800a8a8:	2101      	movs	r1, #1
 800a8aa:	2202      	movs	r2, #2
 800a8ac:	e9cd 6406 	strd	r6, r4, [sp, #24]
 800a8b0:	f00c f8d9 	bl	8016a66 <LeaveFrame>
 800a8b4:	4668      	mov	r0, sp
 800a8b6:	2102      	movs	r1, #2
 800a8b8:	2203      	movs	r2, #3
 800a8ba:	f00c f8d4 	bl	8016a66 <LeaveFrame>
 800a8be:	b00e      	add	sp, #56	; 0x38
 800a8c0:	f85d bb04 	ldr.w	fp, [sp], #4
 800a8c4:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a8c6 <kfun:kotlin.Throwable.toString()kotlin.String>:
 800a8c6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a8c8:	af03      	add	r7, sp, #12
 800a8ca:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 800a8ce:	b097      	sub	sp, #92	; 0x5c
 800a8d0:	ad02      	add	r5, sp, #8
 800a8d2:	4688      	mov	r8, r1
 800a8d4:	4604      	mov	r4, r0
 800a8d6:	2138      	movs	r1, #56	; 0x38
 800a8d8:	4628      	mov	r0, r5
 800a8da:	f010 fe0d 	bl	801b4f8 <__aeabi_memclr>
 800a8de:	4620      	mov	r0, r4
 800a8e0:	9403      	str	r4, [sp, #12]
 800a8e2:	f00c f930 	bl	8016b46 <Kotlin_Any_getTypeInfo>
 800a8e6:	4604      	mov	r4, r0
 800a8e8:	f242 40b0 	movw	r0, #9392	; 0x24b0
 800a8ec:	f105 0108 	add.w	r1, r5, #8
 800a8f0:	f6c0 0002 	movt	r0, #2050	; 0x802
 800a8f4:	f00c f801 	bl	80168fa <AllocInstance>
 800a8f8:	f10d 0948 	add.w	r9, sp, #72	; 0x48
 800a8fc:	4606      	mov	r6, r0
 800a8fe:	2000      	movs	r0, #0
 800a900:	2101      	movs	r1, #1
 800a902:	e9cd 0610 	strd	r0, r6, [sp, #64]	; 0x40
 800a906:	2202      	movs	r2, #2
 800a908:	e9cd 0612 	strd	r0, r6, [sp, #72]	; 0x48
 800a90c:	4648      	mov	r0, r9
 800a90e:	f00c f8aa 	bl	8016a66 <LeaveFrame>
 800a912:	a810      	add	r0, sp, #64	; 0x40
 800a914:	2101      	movs	r1, #1
 800a916:	2202      	movs	r2, #2
 800a918:	60b4      	str	r4, [r6, #8]
 800a91a:	f00c f8a4 	bl	8016a66 <LeaveFrame>
 800a91e:	f105 000c 	add.w	r0, r5, #12
 800a922:	4631      	mov	r1, r6
 800a924:	f009 fc54 	bl	80141d0 <UpdateRef>
 800a928:	9c05      	ldr	r4, [sp, #20]
 800a92a:	f64f 428e 	movw	r2, #64654	; 0xfc8e
 800a92e:	f24b 5369 	movw	r3, #46441	; 0xb569
 800a932:	f6c4 023e 	movt	r2, #18494	; 0x483e
 800a936:	f6c4 13bd 	movt	r3, #18877	; 0x49bd
 800a93a:	6820      	ldr	r0, [r4, #0]
 800a93c:	f00c fa54 	bl	8016de8 <LookupOpenMethod>
 800a940:	4602      	mov	r2, r0
 800a942:	f105 0110 	add.w	r1, r5, #16
 800a946:	4620      	mov	r0, r4
 800a948:	4790      	blx	r2
 800a94a:	4601      	mov	r1, r0
 800a94c:	f105 0014 	add.w	r0, r5, #20
 800a950:	f009 fc3e 	bl	80141d0 <UpdateRef>
 800a954:	9907      	ldr	r1, [sp, #28]
 800a956:	b991      	cbnz	r1, 800a97e <kfun:kotlin.Throwable.toString()kotlin.String+0xb8>
 800a958:	9e05      	ldr	r6, [sp, #20]
 800a95a:	f64c 32c3 	movw	r2, #52163	; 0xcbc3
 800a95e:	f243 736c 	movw	r3, #14188	; 0x376c
 800a962:	f2c6 42ef 	movt	r2, #25839	; 0x64ef
 800a966:	f6c0 4355 	movt	r3, #3157	; 0xc55
 800a96a:	f105 0418 	add.w	r4, r5, #24
 800a96e:	6830      	ldr	r0, [r6, #0]
 800a970:	f00c fa3a 	bl	8016de8 <LookupOpenMethod>
 800a974:	4602      	mov	r2, r0
 800a976:	4630      	mov	r0, r6
 800a978:	4621      	mov	r1, r4
 800a97a:	4790      	blx	r2
 800a97c:	4601      	mov	r1, r0
 800a97e:	f105 001c 	add.w	r0, r5, #28
 800a982:	f105 0424 	add.w	r4, r5, #36	; 0x24
 800a986:	f105 0620 	add.w	r6, r5, #32
 800a98a:	f009 fc21 	bl	80141d0 <UpdateRef>
 800a98e:	9809      	ldr	r0, [sp, #36]	; 0x24
 800a990:	f241 71e0 	movw	r1, #6112	; 0x17e0
 800a994:	f2c2 0100 	movt	r1, #8192	; 0x2000
 800a998:	2800      	cmp	r0, #0
 800a99a:	bf18      	it	ne
 800a99c:	4601      	movne	r1, r0
 800a99e:	4630      	mov	r0, r6
 800a9a0:	f009 fc16 	bl	80141d0 <UpdateRef>
 800a9a4:	9803      	ldr	r0, [sp, #12]
 800a9a6:	6801      	ldr	r1, [r0, #0]
 800a9a8:	6d4a      	ldr	r2, [r1, #84]	; 0x54
 800a9aa:	4621      	mov	r1, r4
 800a9ac:	4790      	blx	r2
 800a9ae:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800a9b0:	2800      	cmp	r0, #0
 800a9b2:	d049      	beq.n	800aa48 <kfun:kotlin.Throwable.toString()kotlin.String+0x182>
 800a9b4:	2000      	movs	r0, #0
 800a9b6:	f8cd 8004 	str.w	r8, [sp, #4]
 800a9ba:	e9cd 0015 	strd	r0, r0, [sp, #84]	; 0x54
 800a9be:	f109 0a0c 	add.w	sl, r9, #12
 800a9c2:	e9cd 0412 	strd	r0, r4, [sp, #72]	; 0x48
 800a9c6:	f241 70c4 	movw	r0, #6084	; 0x17c4
 800a9ca:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800a9ce:	9014      	str	r0, [sp, #80]	; 0x50
 800a9d0:	4651      	mov	r1, sl
 800a9d2:	f000 f87e 	bl	800aad2 <kfun:kotlin.toString@kotlin.Any?.()kotlin.String>
 800a9d6:	4601      	mov	r1, r0
 800a9d8:	f109 0b10 	add.w	fp, r9, #16
 800a9dc:	4620      	mov	r0, r4
 800a9de:	f105 062c 	add.w	r6, r5, #44	; 0x2c
 800a9e2:	f105 0828 	add.w	r8, r5, #40	; 0x28
 800a9e6:	465a      	mov	r2, fp
 800a9e8:	f00a fc1c 	bl	8015224 <Kotlin_String_plusImpl>
 800a9ec:	4604      	mov	r4, r0
 800a9ee:	4640      	mov	r0, r8
 800a9f0:	4621      	mov	r1, r4
 800a9f2:	f009 fdfa 	bl	80145ea <UpdateReturnRef>
 800a9f6:	4648      	mov	r0, r9
 800a9f8:	2102      	movs	r1, #2
 800a9fa:	2205      	movs	r2, #5
 800a9fc:	f00c f833 	bl	8016a66 <LeaveFrame>
 800aa00:	9803      	ldr	r0, [sp, #12]
 800aa02:	6801      	ldr	r1, [r0, #0]
 800aa04:	6d4a      	ldr	r2, [r1, #84]	; 0x54
 800aa06:	4631      	mov	r1, r6
 800aa08:	4790      	blx	r2
 800aa0a:	f8dd 8004 	ldr.w	r8, [sp, #4]
 800aa0e:	f105 0130 	add.w	r1, r5, #48	; 0x30
 800aa12:	f000 f85e 	bl	800aad2 <kfun:kotlin.toString@kotlin.Any?.()kotlin.String>
 800aa16:	2100      	movs	r1, #0
 800aa18:	9116      	str	r1, [sp, #88]	; 0x58
 800aa1a:	e9cd 1412 	strd	r1, r4, [sp, #72]	; 0x48
 800aa1e:	e9cd 0114 	strd	r0, r1, [sp, #80]	; 0x50
 800aa22:	4651      	mov	r1, sl
 800aa24:	f000 f855 	bl	800aad2 <kfun:kotlin.toString@kotlin.Any?.()kotlin.String>
 800aa28:	4601      	mov	r1, r0
 800aa2a:	4620      	mov	r0, r4
 800aa2c:	465a      	mov	r2, fp
 800aa2e:	3534      	adds	r5, #52	; 0x34
 800aa30:	f00a fbf8 	bl	8015224 <Kotlin_String_plusImpl>
 800aa34:	4604      	mov	r4, r0
 800aa36:	4628      	mov	r0, r5
 800aa38:	4621      	mov	r1, r4
 800aa3a:	f009 fdd6 	bl	80145ea <UpdateReturnRef>
 800aa3e:	a812      	add	r0, sp, #72	; 0x48
 800aa40:	2102      	movs	r1, #2
 800aa42:	2205      	movs	r2, #5
 800aa44:	f00c f80f 	bl	8016a66 <LeaveFrame>
 800aa48:	4640      	mov	r0, r8
 800aa4a:	4621      	mov	r1, r4
 800aa4c:	f009 fdcd 	bl	80145ea <UpdateReturnRef>
 800aa50:	a802      	add	r0, sp, #8
 800aa52:	2101      	movs	r1, #1
 800aa54:	220e      	movs	r2, #14
 800aa56:	f00c f806 	bl	8016a66 <LeaveFrame>
 800aa5a:	4620      	mov	r0, r4
 800aa5c:	b017      	add	sp, #92	; 0x5c
 800aa5e:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 800aa62:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aa64:	e7ff      	b.n	800aa66 <kfun:kotlin.Throwable.toString()kotlin.String+0x1a0>
 800aa66:	4604      	mov	r4, r0
 800aa68:	a812      	add	r0, sp, #72	; 0x48
 800aa6a:	2102      	movs	r1, #2
 800aa6c:	2205      	movs	r2, #5
 800aa6e:	f00b fffa 	bl	8016a66 <LeaveFrame>
 800aa72:	e000      	b.n	800aa76 <kfun:kotlin.Throwable.toString()kotlin.String+0x1b0>
 800aa74:	4604      	mov	r4, r0
 800aa76:	a802      	add	r0, sp, #8
 800aa78:	2101      	movs	r1, #1
 800aa7a:	220e      	movs	r2, #14
 800aa7c:	f00b fff3 	bl	8016a66 <LeaveFrame>
 800aa80:	4620      	mov	r0, r4
 800aa82:	f7f6 fbb3 	bl	80011ec <_Unwind_Resume>

0800aa86 <kfun:kotlin.Throwable.<get-cause>()kotlin.Throwable?>:
 800aa86:	b5d0      	push	{r4, r6, r7, lr}
 800aa88:	af02      	add	r7, sp, #8
 800aa8a:	b082      	sub	sp, #8
 800aa8c:	2200      	movs	r2, #0
 800aa8e:	e9cd 2000 	strd	r2, r0, [sp]
 800aa92:	6904      	ldr	r4, [r0, #16]
 800aa94:	4608      	mov	r0, r1
 800aa96:	4621      	mov	r1, r4
 800aa98:	f009 fda7 	bl	80145ea <UpdateReturnRef>
 800aa9c:	4668      	mov	r0, sp
 800aa9e:	2101      	movs	r1, #1
 800aaa0:	2202      	movs	r2, #2
 800aaa2:	f00b ffe0 	bl	8016a66 <LeaveFrame>
 800aaa6:	4620      	mov	r0, r4
 800aaa8:	b002      	add	sp, #8
 800aaaa:	bdd0      	pop	{r4, r6, r7, pc}

0800aaac <kfun:kotlin.Throwable.<get-message>()kotlin.String?>:
 800aaac:	b5d0      	push	{r4, r6, r7, lr}
 800aaae:	af02      	add	r7, sp, #8
 800aab0:	b082      	sub	sp, #8
 800aab2:	2200      	movs	r2, #0
 800aab4:	e9cd 2000 	strd	r2, r0, [sp]
 800aab8:	6884      	ldr	r4, [r0, #8]
 800aaba:	4608      	mov	r0, r1
 800aabc:	4621      	mov	r1, r4
 800aabe:	f009 fd94 	bl	80145ea <UpdateReturnRef>
 800aac2:	4668      	mov	r0, sp
 800aac4:	2101      	movs	r1, #1
 800aac6:	2202      	movs	r2, #2
 800aac8:	f00b ffcd 	bl	8016a66 <LeaveFrame>
 800aacc:	4620      	mov	r0, r4
 800aace:	b002      	add	sp, #8
 800aad0:	bdd0      	pop	{r4, r6, r7, pc}

0800aad2 <kfun:kotlin.toString@kotlin.Any?.()kotlin.String>:
 800aad2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aad4:	af03      	add	r7, sp, #12
 800aad6:	f84d bd04 	str.w	fp, [sp, #-4]!
 800aada:	b086      	sub	sp, #24
 800aadc:	460c      	mov	r4, r1
 800aade:	4601      	mov	r1, r0
 800aae0:	466e      	mov	r6, sp
 800aae2:	f106 0008 	add.w	r0, r6, #8
 800aae6:	2500      	movs	r5, #0
 800aae8:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800aaec:	e9cd 5502 	strd	r5, r5, [sp, #8]
 800aaf0:	e9cd 5100 	strd	r5, r1, [sp]
 800aaf4:	f009 fb6c 	bl	80141d0 <UpdateRef>
 800aaf8:	9802      	ldr	r0, [sp, #8]
 800aafa:	b128      	cbz	r0, 800ab08 <kfun:kotlin.toString@kotlin.Any?.()kotlin.String+0x36>
 800aafc:	6801      	ldr	r1, [r0, #0]
 800aafe:	6c8a      	ldr	r2, [r1, #72]	; 0x48
 800ab00:	f106 010c 	add.w	r1, r6, #12
 800ab04:	4790      	blx	r2
 800ab06:	4605      	mov	r5, r0
 800ab08:	f106 0010 	add.w	r0, r6, #16
 800ab0c:	4629      	mov	r1, r5
 800ab0e:	f009 fb5f 	bl	80141d0 <UpdateRef>
 800ab12:	9d04      	ldr	r5, [sp, #16]
 800ab14:	b945      	cbnz	r5, 800ab28 <kfun:kotlin.toString@kotlin.Any?.()kotlin.String+0x56>
 800ab16:	f241 75b0 	movw	r5, #6064	; 0x17b0
 800ab1a:	f106 0014 	add.w	r0, r6, #20
 800ab1e:	f2c2 0500 	movt	r5, #8192	; 0x2000
 800ab22:	4629      	mov	r1, r5
 800ab24:	f009 fd61 	bl	80145ea <UpdateReturnRef>
 800ab28:	4620      	mov	r0, r4
 800ab2a:	4629      	mov	r1, r5
 800ab2c:	f009 fd5d 	bl	80145ea <UpdateReturnRef>
 800ab30:	4668      	mov	r0, sp
 800ab32:	2101      	movs	r1, #1
 800ab34:	2206      	movs	r2, #6
 800ab36:	f00b ff96 	bl	8016a66 <LeaveFrame>
 800ab3a:	4628      	mov	r0, r5
 800ab3c:	b006      	add	sp, #24
 800ab3e:	f85d bb04 	ldr.w	fp, [sp], #4
 800ab42:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ab44:	4604      	mov	r4, r0
 800ab46:	4668      	mov	r0, sp
 800ab48:	2101      	movs	r1, #1
 800ab4a:	2206      	movs	r2, #6
 800ab4c:	f00b ff8b 	bl	8016a66 <LeaveFrame>
 800ab50:	4620      	mov	r0, r4
 800ab52:	f7f6 fb4b 	bl	80011ec <_Unwind_Resume>

0800ab56 <kfun:kotlin.text.StringBuilder.<init>(kotlin.Int)kotlin.text.StringBuilder>:
 800ab56:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ab58:	af03      	add	r7, sp, #12
 800ab5a:	f84d 8d04 	str.w	r8, [sp, #-4]!
 800ab5e:	b08a      	sub	sp, #40	; 0x28
 800ab60:	2600      	movs	r6, #0
 800ab62:	f10d 0804 	add.w	r8, sp, #4
 800ab66:	9603      	str	r6, [sp, #12]
 800ab68:	f108 0208 	add.w	r2, r8, #8
 800ab6c:	e9cd 6001 	strd	r6, r0, [sp, #4]
 800ab70:	f241 50b0 	movw	r0, #5552	; 0x15b0
 800ab74:	f6c0 0002 	movt	r0, #2050	; 0x802
 800ab78:	f009 febe 	bl	80148f8 <AllocArrayInstance>
 800ab7c:	4605      	mov	r5, r0
 800ab7e:	a804      	add	r0, sp, #16
 800ab80:	2101      	movs	r1, #1
 800ab82:	2202      	movs	r2, #2
 800ab84:	e9cd 6508 	strd	r6, r5, [sp, #32]
 800ab88:	e9cd 6504 	strd	r6, r5, [sp, #16]
 800ab8c:	f00b ff6b 	bl	8016a66 <LeaveFrame>
 800ab90:	a804      	add	r0, sp, #16
 800ab92:	2101      	movs	r1, #1
 800ab94:	2202      	movs	r2, #2
 800ab96:	e9cd 6504 	strd	r6, r5, [sp, #16]
 800ab9a:	f00b ff64 	bl	8016a66 <LeaveFrame>
 800ab9e:	a808      	add	r0, sp, #32
 800aba0:	2101      	movs	r1, #1
 800aba2:	2202      	movs	r2, #2
 800aba4:	f00b ff5f 	bl	8016a66 <LeaveFrame>
 800aba8:	9c02      	ldr	r4, [sp, #8]
 800abaa:	a808      	add	r0, sp, #32
 800abac:	2101      	movs	r1, #1
 800abae:	2202      	movs	r2, #2
 800abb0:	e9cd 6404 	strd	r6, r4, [sp, #16]
 800abb4:	9506      	str	r5, [sp, #24]
 800abb6:	e9cd 6408 	strd	r6, r4, [sp, #32]
 800abba:	f00b ff54 	bl	8016a66 <LeaveFrame>
 800abbe:	f104 000c 	add.w	r0, r4, #12
 800abc2:	4629      	mov	r1, r5
 800abc4:	f009 fb04 	bl	80141d0 <UpdateRef>
 800abc8:	a804      	add	r0, sp, #16
 800abca:	2102      	movs	r1, #2
 800abcc:	2203      	movs	r2, #3
 800abce:	60a6      	str	r6, [r4, #8]
 800abd0:	f00b ff49 	bl	8016a66 <LeaveFrame>
 800abd4:	4640      	mov	r0, r8
 800abd6:	2101      	movs	r1, #1
 800abd8:	2203      	movs	r2, #3
 800abda:	f00b ff44 	bl	8016a66 <LeaveFrame>
 800abde:	b00a      	add	sp, #40	; 0x28
 800abe0:	f85d 8b04 	ldr.w	r8, [sp], #4
 800abe4:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800abe6 <kfun:kotlin.text.StringBuilder.append(kotlin.Char)kotlin.text.StringBuilder>:
 800abe6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800abe8:	af03      	add	r7, sp, #12
 800abea:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 800abee:	b08b      	sub	sp, #44	; 0x2c
 800abf0:	ac08      	add	r4, sp, #32
 800abf2:	4606      	mov	r6, r0
 800abf4:	f04f 0b00 	mov.w	fp, #0
 800abf8:	9201      	str	r2, [sp, #4]
 800abfa:	4689      	mov	r9, r1
 800abfc:	e9cd bb04 	strd	fp, fp, [sp, #16]
 800ac00:	e9cd b602 	strd	fp, r6, [sp, #8]
 800ac04:	4620      	mov	r0, r4
 800ac06:	e9cd b606 	strd	fp, r6, [sp, #24]
 800ac0a:	2101      	movs	r1, #1
 800ac0c:	e9cd b608 	strd	fp, r6, [sp, #32]
 800ac10:	2202      	movs	r2, #2
 800ac12:	68b5      	ldr	r5, [r6, #8]
 800ac14:	f00b ff27 	bl	8016a66 <LeaveFrame>
 800ac18:	4628      	mov	r0, r5
 800ac1a:	2101      	movs	r1, #1
 800ac1c:	f00b ffc2 	bl	8016ba4 <Kotlin_Int_plus_Int>
 800ac20:	4601      	mov	r1, r0
 800ac22:	4630      	mov	r0, r6
 800ac24:	f7ff fb70 	bl	800a308 <kfun:kotlin.text.StringBuilder.ensureCapacity(kotlin.Int)>
 800ac28:	a806      	add	r0, sp, #24
 800ac2a:	f10d 0808 	add.w	r8, sp, #8
 800ac2e:	2101      	movs	r1, #1
 800ac30:	2202      	movs	r2, #2
 800ac32:	f108 050c 	add.w	r5, r8, #12
 800ac36:	f00b ff16 	bl	8016a66 <LeaveFrame>
 800ac3a:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800ac3e:	f104 0008 	add.w	r0, r4, #8
 800ac42:	e9cd b608 	strd	fp, r6, [sp, #32]
 800ac46:	f8d6 a00c 	ldr.w	sl, [r6, #12]
 800ac4a:	4651      	mov	r1, sl
 800ac4c:	f009 fac0 	bl	80141d0 <UpdateRef>
 800ac50:	f108 0008 	add.w	r0, r8, #8
 800ac54:	4651      	mov	r1, sl
 800ac56:	f009 fcc8 	bl	80145ea <UpdateReturnRef>
 800ac5a:	4620      	mov	r0, r4
 800ac5c:	2101      	movs	r1, #1
 800ac5e:	2203      	movs	r2, #3
 800ac60:	f00b ff01 	bl	8016a66 <LeaveFrame>
 800ac64:	9903      	ldr	r1, [sp, #12]
 800ac66:	4628      	mov	r0, r5
 800ac68:	f009 fab2 	bl	80141d0 <UpdateRef>
 800ac6c:	9805      	ldr	r0, [sp, #20]
 800ac6e:	2101      	movs	r1, #1
 800ac70:	2202      	movs	r2, #2
 800ac72:	e9cd b008 	strd	fp, r0, [sp, #32]
 800ac76:	6884      	ldr	r4, [r0, #8]
 800ac78:	a808      	add	r0, sp, #32
 800ac7a:	f00b fef4 	bl	8016a66 <LeaveFrame>
 800ac7e:	4620      	mov	r0, r4
 800ac80:	9d05      	ldr	r5, [sp, #20]
 800ac82:	f00b ffa8 	bl	8016bd6 <Kotlin_Int_inc>
 800ac86:	4606      	mov	r6, r0
 800ac88:	e9cd b508 	strd	fp, r5, [sp, #32]
 800ac8c:	4628      	mov	r0, r5
 800ac8e:	4631      	mov	r1, r6
 800ac90:	f7ff fb3a 	bl	800a308 <kfun:kotlin.text.StringBuilder.ensureCapacity(kotlin.Int)>
 800ac94:	a808      	add	r0, sp, #32
 800ac96:	2101      	movs	r1, #1
 800ac98:	2202      	movs	r2, #2
 800ac9a:	60ae      	str	r6, [r5, #8]
 800ac9c:	f00b fee3 	bl	8016a66 <LeaveFrame>
 800aca0:	fa1f f289 	uxth.w	r2, r9
 800aca4:	4650      	mov	r0, sl
 800aca6:	4621      	mov	r1, r4
 800aca8:	f009 fe1a 	bl	80148e0 <Kotlin_CharArray_set>
 800acac:	9c03      	ldr	r4, [sp, #12]
 800acae:	9801      	ldr	r0, [sp, #4]
 800acb0:	4621      	mov	r1, r4
 800acb2:	f009 fc9a 	bl	80145ea <UpdateReturnRef>
 800acb6:	a802      	add	r0, sp, #8
 800acb8:	2101      	movs	r1, #1
 800acba:	2204      	movs	r2, #4
 800acbc:	f00b fed3 	bl	8016a66 <LeaveFrame>
 800acc0:	4620      	mov	r0, r4
 800acc2:	b00b      	add	sp, #44	; 0x2c
 800acc4:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 800acc8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800acca:	4604      	mov	r4, r0
 800accc:	a808      	add	r0, sp, #32
 800acce:	e001      	b.n	800acd4 <kfun:kotlin.text.StringBuilder.append(kotlin.Char)kotlin.text.StringBuilder+0xee>
 800acd0:	4604      	mov	r4, r0
 800acd2:	a806      	add	r0, sp, #24
 800acd4:	2101      	movs	r1, #1
 800acd6:	2202      	movs	r2, #2
 800acd8:	f00b fec5 	bl	8016a66 <LeaveFrame>
 800acdc:	a802      	add	r0, sp, #8
 800acde:	2101      	movs	r1, #1
 800ace0:	2204      	movs	r2, #4
 800ace2:	f00b fec0 	bl	8016a66 <LeaveFrame>
 800ace6:	4620      	mov	r0, r4
 800ace8:	f7f6 fa80 	bl	80011ec <_Unwind_Resume>

0800acec <kfun:kotlin.text.StringBuilder.subSequence(kotlin.Int;kotlin.Int)kotlin.CharSequence>:
 800acec:	b5f0      	push	{r4, r5, r6, r7, lr}
 800acee:	af03      	add	r7, sp, #12
 800acf0:	f84d bd04 	str.w	fp, [sp, #-4]!
 800acf4:	b084      	sub	sp, #16
 800acf6:	461c      	mov	r4, r3
 800acf8:	2300      	movs	r3, #0
 800acfa:	ad01      	add	r5, sp, #4
 800acfc:	9303      	str	r3, [sp, #12]
 800acfe:	e9cd 3001 	strd	r3, r0, [sp, #4]
 800ad02:	f105 0308 	add.w	r3, r5, #8
 800ad06:	f000 fa25 	bl	800b154 <kfun:kotlin.text.StringBuilder.substring(kotlin.Int;kotlin.Int)kotlin.String>
 800ad0a:	4606      	mov	r6, r0
 800ad0c:	4620      	mov	r0, r4
 800ad0e:	4631      	mov	r1, r6
 800ad10:	f009 fc6b 	bl	80145ea <UpdateReturnRef>
 800ad14:	4628      	mov	r0, r5
 800ad16:	2101      	movs	r1, #1
 800ad18:	2203      	movs	r2, #3
 800ad1a:	f00b fea4 	bl	8016a66 <LeaveFrame>
 800ad1e:	4630      	mov	r0, r6
 800ad20:	b004      	add	sp, #16
 800ad22:	f85d bb04 	ldr.w	fp, [sp], #4
 800ad26:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ad28 <kfun:kotlin.text.StringBuilder.append(kotlin.CharSequence?;kotlin.Int;kotlin.Int)kotlin.text.StringBuilder>:
 800ad28:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ad2a:	af03      	add	r7, sp, #12
 800ad2c:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 800ad30:	b093      	sub	sp, #76	; 0x4c
 800ad32:	f04f 0800 	mov.w	r8, #0
 800ad36:	f10d 0a10 	add.w	sl, sp, #16
 800ad3a:	e9cd 880a 	strd	r8, r8, [sp, #40]	; 0x28
 800ad3e:	461e      	mov	r6, r3
 800ad40:	e9cd 8808 	strd	r8, r8, [sp, #32]
 800ad44:	4691      	mov	r9, r2
 800ad46:	e9cd 8004 	strd	r8, r0, [sp, #16]
 800ad4a:	f10a 000c 	add.w	r0, sl, #12
 800ad4e:	e9cd 1806 	strd	r1, r8, [sp, #24]
 800ad52:	f009 fa3d 	bl	80141d0 <UpdateRef>
 800ad56:	9807      	ldr	r0, [sp, #28]
 800ad58:	f241 71b0 	movw	r1, #6064	; 0x17b0
 800ad5c:	f2c2 0100 	movt	r1, #8192	; 0x2000
 800ad60:	2800      	cmp	r0, #0
 800ad62:	bf18      	it	ne
 800ad64:	4601      	movne	r1, r0
 800ad66:	f10a 0010 	add.w	r0, sl, #16
 800ad6a:	f009 fa31 	bl	80141d0 <UpdateRef>
 800ad6e:	f1b9 0f00 	cmp.w	r9, #0
 800ad72:	bfa8      	it	ge
 800ad74:	454e      	cmpge	r6, r9
 800ad76:	f2c0 80a2 	blt.w	800aebe <kfun:kotlin.text.StringBuilder.append(kotlin.CharSequence?;kotlin.Int;kotlin.Int)kotlin.text.StringBuilder+0x196>
 800ad7a:	9c08      	ldr	r4, [sp, #32]
 800ad7c:	f24f 22e7 	movw	r2, #62183	; 0xf2e7
 800ad80:	f640 3378 	movw	r3, #2936	; 0xb78
 800ad84:	f2c1 62a8 	movt	r2, #5800	; 0x16a8
 800ad88:	f2cb 5336 	movt	r3, #46390	; 0xb536
 800ad8c:	6820      	ldr	r0, [r4, #0]
 800ad8e:	f00c f82b 	bl	8016de8 <LookupOpenMethod>
 800ad92:	4601      	mov	r1, r0
 800ad94:	4620      	mov	r0, r4
 800ad96:	4788      	blx	r1
 800ad98:	4548      	cmp	r0, r9
 800ad9a:	f2c0 8090 	blt.w	800aebe <kfun:kotlin.text.StringBuilder.append(kotlin.CharSequence?;kotlin.Int;kotlin.Int)kotlin.text.StringBuilder+0x196>
 800ad9e:	4630      	mov	r0, r6
 800ada0:	4649      	mov	r1, r9
 800ada2:	9c05      	ldr	r4, [sp, #20]
 800ada4:	f00b ff04 	bl	8016bb0 <Kotlin_Int_minus_Int>
 800ada8:	4680      	mov	r8, r0
 800adaa:	2000      	movs	r0, #0
 800adac:	e9cd 040e 	strd	r0, r4, [sp, #56]	; 0x38
 800adb0:	2101      	movs	r1, #1
 800adb2:	e9cd 0410 	strd	r0, r4, [sp, #64]	; 0x40
 800adb6:	a810      	add	r0, sp, #64	; 0x40
 800adb8:	2202      	movs	r2, #2
 800adba:	f8d4 b008 	ldr.w	fp, [r4, #8]
 800adbe:	4605      	mov	r5, r0
 800adc0:	f00b fe51 	bl	8016a66 <LeaveFrame>
 800adc4:	4658      	mov	r0, fp
 800adc6:	4641      	mov	r1, r8
 800adc8:	f00b feec 	bl	8016ba4 <Kotlin_Int_plus_Int>
 800adcc:	4601      	mov	r1, r0
 800adce:	4620      	mov	r0, r4
 800add0:	f7ff fa9a 	bl	800a308 <kfun:kotlin.text.StringBuilder.ensureCapacity(kotlin.Int)>
 800add4:	a80e      	add	r0, sp, #56	; 0x38
 800add6:	2101      	movs	r1, #1
 800add8:	2202      	movs	r2, #2
 800adda:	f00b fe44 	bl	8016a66 <LeaveFrame>
 800adde:	9c05      	ldr	r4, [sp, #20]
 800ade0:	45b1      	cmp	r9, r6
 800ade2:	da5e      	bge.n	800aea2 <kfun:kotlin.text.StringBuilder.append(kotlin.CharSequence?;kotlin.Int;kotlin.Int)kotlin.text.StringBuilder+0x17a>
 800ade4:	f10a 001c 	add.w	r0, sl, #28
 800ade8:	9003      	str	r0, [sp, #12]
 800adea:	f10a 0018 	add.w	r0, sl, #24
 800adee:	46aa      	mov	sl, r5
 800adf0:	9002      	str	r0, [sp, #8]
 800adf2:	f10a 0008 	add.w	r0, sl, #8
 800adf6:	e9cd 6000 	strd	r6, r0, [sp]
 800adfa:	2600      	movs	r6, #0
 800adfc:	464d      	mov	r5, r9
 800adfe:	9612      	str	r6, [sp, #72]	; 0x48
 800ae00:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
 800ae04:	f8d4 b00c 	ldr.w	fp, [r4, #12]
 800ae08:	9801      	ldr	r0, [sp, #4]
 800ae0a:	4659      	mov	r1, fp
 800ae0c:	f009 f9e0 	bl	80141d0 <UpdateRef>
 800ae10:	9802      	ldr	r0, [sp, #8]
 800ae12:	4659      	mov	r1, fp
 800ae14:	f009 fbe9 	bl	80145ea <UpdateReturnRef>
 800ae18:	4650      	mov	r0, sl
 800ae1a:	2101      	movs	r1, #1
 800ae1c:	2203      	movs	r2, #3
 800ae1e:	f00b fe22 	bl	8016a66 <LeaveFrame>
 800ae22:	9905      	ldr	r1, [sp, #20]
 800ae24:	9803      	ldr	r0, [sp, #12]
 800ae26:	f009 f9d3 	bl	80141d0 <UpdateRef>
 800ae2a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800ae2c:	2101      	movs	r1, #1
 800ae2e:	2202      	movs	r2, #2
 800ae30:	e9cd 6010 	strd	r6, r0, [sp, #64]	; 0x40
 800ae34:	f8d0 8008 	ldr.w	r8, [r0, #8]
 800ae38:	4650      	mov	r0, sl
 800ae3a:	f00b fe14 	bl	8016a66 <LeaveFrame>
 800ae3e:	4640      	mov	r0, r8
 800ae40:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800ae42:	f00b fec8 	bl	8016bd6 <Kotlin_Int_inc>
 800ae46:	46d1      	mov	r9, sl
 800ae48:	4682      	mov	sl, r0
 800ae4a:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
 800ae4e:	4620      	mov	r0, r4
 800ae50:	4651      	mov	r1, sl
 800ae52:	f7ff fa59 	bl	800a308 <kfun:kotlin.text.StringBuilder.ensureCapacity(kotlin.Int)>
 800ae56:	4648      	mov	r0, r9
 800ae58:	2101      	movs	r1, #1
 800ae5a:	2202      	movs	r2, #2
 800ae5c:	f8c4 a008 	str.w	sl, [r4, #8]
 800ae60:	f00b fe01 	bl	8016a66 <LeaveFrame>
 800ae64:	9c08      	ldr	r4, [sp, #32]
 800ae66:	f642 4212 	movw	r2, #11282	; 0x2c12
 800ae6a:	f24b 03b0 	movw	r3, #45232	; 0xb0b0
 800ae6e:	f2c1 6238 	movt	r2, #5688	; 0x1638
 800ae72:	f6c5 4353 	movt	r3, #23635	; 0x5c53
 800ae76:	6820      	ldr	r0, [r4, #0]
 800ae78:	f00b ffb6 	bl	8016de8 <LookupOpenMethod>
 800ae7c:	4602      	mov	r2, r0
 800ae7e:	4620      	mov	r0, r4
 800ae80:	4629      	mov	r1, r5
 800ae82:	4790      	blx	r2
 800ae84:	4604      	mov	r4, r0
 800ae86:	46ca      	mov	sl, r9
 800ae88:	4628      	mov	r0, r5
 800ae8a:	f00b fea4 	bl	8016bd6 <Kotlin_Int_inc>
 800ae8e:	4681      	mov	r9, r0
 800ae90:	b2a2      	uxth	r2, r4
 800ae92:	4658      	mov	r0, fp
 800ae94:	4641      	mov	r1, r8
 800ae96:	f009 fd23 	bl	80148e0 <Kotlin_CharArray_set>
 800ae9a:	9e00      	ldr	r6, [sp, #0]
 800ae9c:	9c05      	ldr	r4, [sp, #20]
 800ae9e:	45b1      	cmp	r9, r6
 800aea0:	dbab      	blt.n	800adfa <kfun:kotlin.text.StringBuilder.append(kotlin.CharSequence?;kotlin.Int;kotlin.Int)kotlin.text.StringBuilder+0xd2>
 800aea2:	68b8      	ldr	r0, [r7, #8]
 800aea4:	4621      	mov	r1, r4
 800aea6:	f009 fba0 	bl	80145ea <UpdateReturnRef>
 800aeaa:	a804      	add	r0, sp, #16
 800aeac:	2102      	movs	r1, #2
 800aeae:	2208      	movs	r2, #8
 800aeb0:	f00b fdd9 	bl	8016a66 <LeaveFrame>
 800aeb4:	4620      	mov	r0, r4
 800aeb6:	b013      	add	sp, #76	; 0x4c
 800aeb8:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 800aebc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aebe:	f641 3030 	movw	r0, #6960	; 0x1b30
 800aec2:	f10a 0114 	add.w	r1, sl, #20
 800aec6:	f6c0 0002 	movt	r0, #2050	; 0x802
 800aeca:	f00b fd16 	bl	80168fa <AllocInstance>
 800aece:	4604      	mov	r4, r0
 800aed0:	e9cd 840c 	strd	r8, r4, [sp, #48]	; 0x30
 800aed4:	e9cd 840e 	strd	r8, r4, [sp, #56]	; 0x38
 800aed8:	f000 f8f7 	bl	800b0ca <kfun:kotlin.Exception.<init>()kotlin.Exception>
 800aedc:	a810      	add	r0, sp, #64	; 0x40
 800aede:	2101      	movs	r1, #1
 800aee0:	2202      	movs	r2, #2
 800aee2:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
 800aee6:	f00b fdbe 	bl	8016a66 <LeaveFrame>
 800aeea:	a80e      	add	r0, sp, #56	; 0x38
 800aeec:	2101      	movs	r1, #1
 800aeee:	2202      	movs	r2, #2
 800aef0:	f00b fdb9 	bl	8016a66 <LeaveFrame>
 800aef4:	a810      	add	r0, sp, #64	; 0x40
 800aef6:	2101      	movs	r1, #1
 800aef8:	2202      	movs	r2, #2
 800aefa:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
 800aefe:	f00b fdb2 	bl	8016a66 <LeaveFrame>
 800af02:	a80c      	add	r0, sp, #48	; 0x30
 800af04:	2101      	movs	r1, #1
 800af06:	2202      	movs	r2, #2
 800af08:	f00b fdad 	bl	8016a66 <LeaveFrame>
 800af0c:	4620      	mov	r0, r4
 800af0e:	f009 fff8 	bl	8014f02 <ThrowException>
 800af12:	4604      	mov	r4, r0
 800af14:	a80e      	add	r0, sp, #56	; 0x38
 800af16:	e004      	b.n	800af22 <kfun:kotlin.text.StringBuilder.append(kotlin.CharSequence?;kotlin.Int;kotlin.Int)kotlin.text.StringBuilder+0x1fa>
 800af18:	e7ff      	b.n	800af1a <kfun:kotlin.text.StringBuilder.append(kotlin.CharSequence?;kotlin.Int;kotlin.Int)kotlin.text.StringBuilder+0x1f2>
 800af1a:	4604      	mov	r4, r0
 800af1c:	e005      	b.n	800af2a <kfun:kotlin.text.StringBuilder.append(kotlin.CharSequence?;kotlin.Int;kotlin.Int)kotlin.text.StringBuilder+0x202>
 800af1e:	4604      	mov	r4, r0
 800af20:	a810      	add	r0, sp, #64	; 0x40
 800af22:	2101      	movs	r1, #1
 800af24:	2202      	movs	r2, #2
 800af26:	f00b fd9e 	bl	8016a66 <LeaveFrame>
 800af2a:	a804      	add	r0, sp, #16
 800af2c:	2102      	movs	r1, #2
 800af2e:	2208      	movs	r2, #8
 800af30:	f00b fd99 	bl	8016a66 <LeaveFrame>
 800af34:	4620      	mov	r0, r4
 800af36:	f7f6 f959 	bl	80011ec <_Unwind_Resume>

0800af3a <kfun:kotlin.text.StringBuilder.append(kotlin.CharSequence?)kotlin.text.StringBuilder>:
 800af3a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800af3c:	af03      	add	r7, sp, #12
 800af3e:	f84d 8d04 	str.w	r8, [sp, #-4]!
 800af42:	b088      	sub	sp, #32
 800af44:	4690      	mov	r8, r2
 800af46:	2200      	movs	r2, #0
 800af48:	ac02      	add	r4, sp, #8
 800af4a:	e9cd 2206 	strd	r2, r2, [sp, #24]
 800af4e:	e9cd 2002 	strd	r2, r0, [sp, #8]
 800af52:	f104 000c 	add.w	r0, r4, #12
 800af56:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800af5a:	f009 f939 	bl	80141d0 <UpdateRef>
 800af5e:	9805      	ldr	r0, [sp, #20]
 800af60:	f241 71b0 	movw	r1, #6064	; 0x17b0
 800af64:	f2c2 0100 	movt	r1, #8192	; 0x2000
 800af68:	2800      	cmp	r0, #0
 800af6a:	bf18      	it	ne
 800af6c:	4601      	movne	r1, r0
 800af6e:	f104 0010 	add.w	r0, r4, #16
 800af72:	f009 f92d 	bl	80141d0 <UpdateRef>
 800af76:	9e06      	ldr	r6, [sp, #24]
 800af78:	f24f 22e7 	movw	r2, #62183	; 0xf2e7
 800af7c:	f640 3378 	movw	r3, #2936	; 0xb78
 800af80:	f2c1 62a8 	movt	r2, #5800	; 0x16a8
 800af84:	f2cb 5336 	movt	r3, #46390	; 0xb536
 800af88:	9d03      	ldr	r5, [sp, #12]
 800af8a:	6830      	ldr	r0, [r6, #0]
 800af8c:	f00b ff2c 	bl	8016de8 <LookupOpenMethod>
 800af90:	4601      	mov	r1, r0
 800af92:	4630      	mov	r0, r6
 800af94:	4788      	blx	r1
 800af96:	4603      	mov	r3, r0
 800af98:	f104 0014 	add.w	r0, r4, #20
 800af9c:	9000      	str	r0, [sp, #0]
 800af9e:	4628      	mov	r0, r5
 800afa0:	4631      	mov	r1, r6
 800afa2:	2200      	movs	r2, #0
 800afa4:	f7ff fec0 	bl	800ad28 <kfun:kotlin.text.StringBuilder.append(kotlin.CharSequence?;kotlin.Int;kotlin.Int)kotlin.text.StringBuilder>
 800afa8:	4605      	mov	r5, r0
 800afaa:	4640      	mov	r0, r8
 800afac:	4629      	mov	r1, r5
 800afae:	f009 fb1c 	bl	80145ea <UpdateReturnRef>
 800afb2:	a802      	add	r0, sp, #8
 800afb4:	2102      	movs	r1, #2
 800afb6:	2206      	movs	r2, #6
 800afb8:	f00b fd55 	bl	8016a66 <LeaveFrame>
 800afbc:	4628      	mov	r0, r5
 800afbe:	b008      	add	sp, #32
 800afc0:	f85d 8b04 	ldr.w	r8, [sp], #4
 800afc4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800afc6:	4604      	mov	r4, r0
 800afc8:	a802      	add	r0, sp, #8
 800afca:	2102      	movs	r1, #2
 800afcc:	2206      	movs	r2, #6
 800afce:	f00b fd4a 	bl	8016a66 <LeaveFrame>
 800afd2:	4620      	mov	r0, r4
 800afd4:	f7f6 f90a 	bl	80011ec <_Unwind_Resume>

0800afd8 <kfun:kotlin.text.StringBuilder.get(kotlin.Int)ValueType>:
 800afd8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800afda:	af03      	add	r7, sp, #12
 800afdc:	e92d 0b00 	stmdb	sp!, {r8, r9, fp}
 800afe0:	b088      	sub	sp, #32
 800afe2:	460c      	mov	r4, r1
 800afe4:	a903      	add	r1, sp, #12
 800afe6:	f101 0908 	add.w	r9, r1, #8
 800afea:	4605      	mov	r5, r0
 800afec:	2000      	movs	r0, #0
 800afee:	2c00      	cmp	r4, #0
 800aff0:	e9cd 0500 	strd	r0, r5, [sp]
 800aff4:	e9cd 0002 	strd	r0, r0, [sp, #8]
 800aff8:	e9cd 5004 	strd	r5, r0, [sp, #16]
 800affc:	db33      	blt.n	800b066 <kfun:kotlin.text.StringBuilder.get(kotlin.Int)ValueType+0x8e>
 800affe:	e9cd 0506 	strd	r0, r5, [sp, #24]
 800b002:	a806      	add	r0, sp, #24
 800b004:	2101      	movs	r1, #1
 800b006:	2202      	movs	r2, #2
 800b008:	68ae      	ldr	r6, [r5, #8]
 800b00a:	f00b fd2c 	bl	8016a66 <LeaveFrame>
 800b00e:	42a6      	cmp	r6, r4
 800b010:	dd29      	ble.n	800b066 <kfun:kotlin.text.StringBuilder.get(kotlin.Int)ValueType+0x8e>
 800b012:	f10d 080c 	add.w	r8, sp, #12
 800b016:	2101      	movs	r1, #1
 800b018:	2203      	movs	r2, #3
 800b01a:	4640      	mov	r0, r8
 800b01c:	f00b fd23 	bl	8016a66 <LeaveFrame>
 800b020:	2000      	movs	r0, #0
 800b022:	9005      	str	r0, [sp, #20]
 800b024:	e9cd 0503 	strd	r0, r5, [sp, #12]
 800b028:	4648      	mov	r0, r9
 800b02a:	68ed      	ldr	r5, [r5, #12]
 800b02c:	4629      	mov	r1, r5
 800b02e:	f009 f8cf 	bl	80141d0 <UpdateRef>
 800b032:	466e      	mov	r6, sp
 800b034:	f106 0008 	add.w	r0, r6, #8
 800b038:	4629      	mov	r1, r5
 800b03a:	f009 fad6 	bl	80145ea <UpdateReturnRef>
 800b03e:	4640      	mov	r0, r8
 800b040:	2101      	movs	r1, #1
 800b042:	2203      	movs	r2, #3
 800b044:	f00b fd0f 	bl	8016a66 <LeaveFrame>
 800b048:	4628      	mov	r0, r5
 800b04a:	4621      	mov	r1, r4
 800b04c:	f009 fc3c 	bl	80148c8 <Kotlin_CharArray_get>
 800b050:	4604      	mov	r4, r0
 800b052:	4630      	mov	r0, r6
 800b054:	2101      	movs	r1, #1
 800b056:	2203      	movs	r2, #3
 800b058:	f00b fd05 	bl	8016a66 <LeaveFrame>
 800b05c:	4620      	mov	r0, r4
 800b05e:	b008      	add	sp, #32
 800b060:	e8bd 0b00 	ldmia.w	sp!, {r8, r9, fp}
 800b064:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b066:	f641 3030 	movw	r0, #6960	; 0x1b30
 800b06a:	4649      	mov	r1, r9
 800b06c:	f6c0 0002 	movt	r0, #2050	; 0x802
 800b070:	f00b fc43 	bl	80168fa <AllocInstance>
 800b074:	4604      	mov	r4, r0
 800b076:	f000 f803 	bl	800b080 <kfun:kotlin.IndexOutOfBoundsException.<init>()kotlin.IndexOutOfBoundsException>
 800b07a:	4620      	mov	r0, r4
 800b07c:	f009 ff41 	bl	8014f02 <ThrowException>

0800b080 <kfun:kotlin.IndexOutOfBoundsException.<init>()kotlin.IndexOutOfBoundsException>:
 800b080:	b5b0      	push	{r4, r5, r7, lr}
 800b082:	af02      	add	r7, sp, #8
 800b084:	b086      	sub	sp, #24
 800b086:	4604      	mov	r4, r0
 800b088:	2500      	movs	r5, #0
 800b08a:	e9cd 5400 	strd	r5, r4, [sp]
 800b08e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 800b092:	f000 f81a 	bl	800b0ca <kfun:kotlin.Exception.<init>()kotlin.Exception>
 800b096:	a804      	add	r0, sp, #16
 800b098:	2101      	movs	r1, #1
 800b09a:	2202      	movs	r2, #2
 800b09c:	e9cd 5404 	strd	r5, r4, [sp, #16]
 800b0a0:	f00b fce1 	bl	8016a66 <LeaveFrame>
 800b0a4:	a802      	add	r0, sp, #8
 800b0a6:	2101      	movs	r1, #1
 800b0a8:	2202      	movs	r2, #2
 800b0aa:	f00b fcdc 	bl	8016a66 <LeaveFrame>
 800b0ae:	a804      	add	r0, sp, #16
 800b0b0:	2101      	movs	r1, #1
 800b0b2:	2202      	movs	r2, #2
 800b0b4:	e9cd 5404 	strd	r5, r4, [sp, #16]
 800b0b8:	f00b fcd5 	bl	8016a66 <LeaveFrame>
 800b0bc:	4668      	mov	r0, sp
 800b0be:	2101      	movs	r1, #1
 800b0c0:	2202      	movs	r2, #2
 800b0c2:	f00b fcd0 	bl	8016a66 <LeaveFrame>
 800b0c6:	b006      	add	sp, #24
 800b0c8:	bdb0      	pop	{r4, r5, r7, pc}

0800b0ca <kfun:kotlin.Exception.<init>()kotlin.Exception>:
 800b0ca:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b0cc:	af03      	add	r7, sp, #12
 800b0ce:	f84d bd04 	str.w	fp, [sp, #-4]!
 800b0d2:	b08c      	sub	sp, #48	; 0x30
 800b0d4:	4604      	mov	r4, r0
 800b0d6:	a80a      	add	r0, sp, #40	; 0x28
 800b0d8:	2600      	movs	r6, #0
 800b0da:	2101      	movs	r1, #1
 800b0dc:	2202      	movs	r2, #2
 800b0de:	e9cd 6400 	strd	r6, r4, [sp]
 800b0e2:	e9cd 6402 	strd	r6, r4, [sp, #8]
 800b0e6:	9608      	str	r6, [sp, #32]
 800b0e8:	e9cd 6404 	strd	r6, r4, [sp, #16]
 800b0ec:	e9cd 6606 	strd	r6, r6, [sp, #24]
 800b0f0:	e9cd 640a 	strd	r6, r4, [sp, #40]	; 0x28
 800b0f4:	f00b fcb7 	bl	8016a66 <LeaveFrame>
 800b0f8:	f104 0008 	add.w	r0, r4, #8
 800b0fc:	2100      	movs	r1, #0
 800b0fe:	f009 f867 	bl	80141d0 <UpdateRef>
 800b102:	f104 0010 	add.w	r0, r4, #16
 800b106:	2100      	movs	r1, #0
 800b108:	f009 f862 	bl	80141d0 <UpdateRef>
 800b10c:	ad04      	add	r5, sp, #16
 800b10e:	f105 0010 	add.w	r0, r5, #16
 800b112:	f00b fce5 	bl	8016ae0 <Kotlin_getCurrentStackTrace>
 800b116:	4601      	mov	r1, r0
 800b118:	9805      	ldr	r0, [sp, #20]
 800b11a:	300c      	adds	r0, #12
 800b11c:	f009 f858 	bl	80141d0 <UpdateRef>
 800b120:	4628      	mov	r0, r5
 800b122:	2103      	movs	r1, #3
 800b124:	2205      	movs	r2, #5
 800b126:	f00b fc9e 	bl	8016a66 <LeaveFrame>
 800b12a:	a802      	add	r0, sp, #8
 800b12c:	2101      	movs	r1, #1
 800b12e:	2202      	movs	r2, #2
 800b130:	f00b fc99 	bl	8016a66 <LeaveFrame>
 800b134:	a804      	add	r0, sp, #16
 800b136:	2101      	movs	r1, #1
 800b138:	2202      	movs	r2, #2
 800b13a:	e9cd 6404 	strd	r6, r4, [sp, #16]
 800b13e:	f00b fc92 	bl	8016a66 <LeaveFrame>
 800b142:	4668      	mov	r0, sp
 800b144:	2101      	movs	r1, #1
 800b146:	2202      	movs	r2, #2
 800b148:	f00b fc8d 	bl	8016a66 <LeaveFrame>
 800b14c:	b00c      	add	sp, #48	; 0x30
 800b14e:	f85d bb04 	ldr.w	fp, [sp], #4
 800b152:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b154 <kfun:kotlin.text.StringBuilder.substring(kotlin.Int;kotlin.Int)kotlin.String>:
 800b154:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b156:	af03      	add	r7, sp, #12
 800b158:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 800b15c:	b08f      	sub	sp, #60	; 0x3c
 800b15e:	460d      	mov	r5, r1
 800b160:	a905      	add	r1, sp, #20
 800b162:	f101 0908 	add.w	r9, r1, #8
 800b166:	4604      	mov	r4, r0
 800b168:	2000      	movs	r0, #0
 800b16a:	4698      	mov	r8, r3
 800b16c:	4693      	mov	fp, r2
 800b16e:	2d00      	cmp	r5, #0
 800b170:	e9cd 0003 	strd	r0, r0, [sp, #12]
 800b174:	e9cd 0401 	strd	r0, r4, [sp, #4]
 800b178:	9007      	str	r0, [sp, #28]
 800b17a:	e9cd 0405 	strd	r0, r4, [sp, #20]
 800b17e:	db59      	blt.n	800b234 <kfun:kotlin.text.StringBuilder.substring(kotlin.Int;kotlin.Int)kotlin.String+0xe0>
 800b180:	e9cd 040c 	strd	r0, r4, [sp, #48]	; 0x30
 800b184:	a80c      	add	r0, sp, #48	; 0x30
 800b186:	2101      	movs	r1, #1
 800b188:	2202      	movs	r2, #2
 800b18a:	68a6      	ldr	r6, [r4, #8]
 800b18c:	f00b fc6b 	bl	8016a66 <LeaveFrame>
 800b190:	42ae      	cmp	r6, r5
 800b192:	db4f      	blt.n	800b234 <kfun:kotlin.text.StringBuilder.substring(kotlin.Int;kotlin.Int)kotlin.String+0xe0>
 800b194:	a805      	add	r0, sp, #20
 800b196:	2101      	movs	r1, #1
 800b198:	2203      	movs	r2, #3
 800b19a:	f8cd 8000 	str.w	r8, [sp]
 800b19e:	f00b fc62 	bl	8016a66 <LeaveFrame>
 800b1a2:	f04f 0800 	mov.w	r8, #0
 800b1a6:	45ab      	cmp	fp, r5
 800b1a8:	f8cd 801c 	str.w	r8, [sp, #28]
 800b1ac:	e9cd 8405 	strd	r8, r4, [sp, #20]
 800b1b0:	db4d      	blt.n	800b24e <kfun:kotlin.text.StringBuilder.substring(kotlin.Int;kotlin.Int)kotlin.String+0xfa>
 800b1b2:	a80c      	add	r0, sp, #48	; 0x30
 800b1b4:	e9cd 840c 	strd	r8, r4, [sp, #48]	; 0x30
 800b1b8:	2101      	movs	r1, #1
 800b1ba:	2202      	movs	r2, #2
 800b1bc:	68a6      	ldr	r6, [r4, #8]
 800b1be:	f00b fc52 	bl	8016a66 <LeaveFrame>
 800b1c2:	455e      	cmp	r6, fp
 800b1c4:	db43      	blt.n	800b24e <kfun:kotlin.text.StringBuilder.substring(kotlin.Int;kotlin.Int)kotlin.String+0xfa>
 800b1c6:	f10d 0814 	add.w	r8, sp, #20
 800b1ca:	a801      	add	r0, sp, #4
 800b1cc:	f100 0a0c 	add.w	sl, r0, #12
 800b1d0:	f100 0608 	add.w	r6, r0, #8
 800b1d4:	4640      	mov	r0, r8
 800b1d6:	2101      	movs	r1, #1
 800b1d8:	2203      	movs	r2, #3
 800b1da:	f00b fc44 	bl	8016a66 <LeaveFrame>
 800b1de:	2000      	movs	r0, #0
 800b1e0:	9007      	str	r0, [sp, #28]
 800b1e2:	e9cd 0405 	strd	r0, r4, [sp, #20]
 800b1e6:	4648      	mov	r0, r9
 800b1e8:	68e4      	ldr	r4, [r4, #12]
 800b1ea:	4621      	mov	r1, r4
 800b1ec:	f008 fff0 	bl	80141d0 <UpdateRef>
 800b1f0:	4630      	mov	r0, r6
 800b1f2:	4621      	mov	r1, r4
 800b1f4:	f009 f9f9 	bl	80145ea <UpdateReturnRef>
 800b1f8:	4640      	mov	r0, r8
 800b1fa:	2101      	movs	r1, #1
 800b1fc:	2203      	movs	r2, #3
 800b1fe:	f00b fc32 	bl	8016a66 <LeaveFrame>
 800b202:	4658      	mov	r0, fp
 800b204:	4629      	mov	r1, r5
 800b206:	f00b fcd3 	bl	8016bb0 <Kotlin_Int_minus_Int>
 800b20a:	4602      	mov	r2, r0
 800b20c:	4620      	mov	r0, r4
 800b20e:	4629      	mov	r1, r5
 800b210:	4653      	mov	r3, sl
 800b212:	f009 ff9e 	bl	8015152 <Kotlin_String_fromCharArray>
 800b216:	4604      	mov	r4, r0
 800b218:	9800      	ldr	r0, [sp, #0]
 800b21a:	4621      	mov	r1, r4
 800b21c:	f009 f9e5 	bl	80145ea <UpdateReturnRef>
 800b220:	a801      	add	r0, sp, #4
 800b222:	2101      	movs	r1, #1
 800b224:	2204      	movs	r2, #4
 800b226:	f00b fc1e 	bl	8016a66 <LeaveFrame>
 800b22a:	4620      	mov	r0, r4
 800b22c:	b00f      	add	sp, #60	; 0x3c
 800b22e:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 800b232:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b234:	f641 3030 	movw	r0, #6960	; 0x1b30
 800b238:	4649      	mov	r1, r9
 800b23a:	f6c0 0002 	movt	r0, #2050	; 0x802
 800b23e:	f00b fb5c 	bl	80168fa <AllocInstance>
 800b242:	4604      	mov	r4, r0
 800b244:	f7ff ff1c 	bl	800b080 <kfun:kotlin.IndexOutOfBoundsException.<init>()kotlin.IndexOutOfBoundsException>
 800b248:	4620      	mov	r0, r4
 800b24a:	f009 fe5a 	bl	8014f02 <ThrowException>
 800b24e:	f641 3030 	movw	r0, #6960	; 0x1b30
 800b252:	4649      	mov	r1, r9
 800b254:	f6c0 0002 	movt	r0, #2050	; 0x802
 800b258:	f00b fb4f 	bl	80168fa <AllocInstance>
 800b25c:	4604      	mov	r4, r0
 800b25e:	e9cd 8408 	strd	r8, r4, [sp, #32]
 800b262:	e9cd 840a 	strd	r8, r4, [sp, #40]	; 0x28
 800b266:	f7ff ff30 	bl	800b0ca <kfun:kotlin.Exception.<init>()kotlin.Exception>
 800b26a:	a80c      	add	r0, sp, #48	; 0x30
 800b26c:	2101      	movs	r1, #1
 800b26e:	2202      	movs	r2, #2
 800b270:	e9cd 840c 	strd	r8, r4, [sp, #48]	; 0x30
 800b274:	f00b fbf7 	bl	8016a66 <LeaveFrame>
 800b278:	a80a      	add	r0, sp, #40	; 0x28
 800b27a:	2101      	movs	r1, #1
 800b27c:	2202      	movs	r2, #2
 800b27e:	f00b fbf2 	bl	8016a66 <LeaveFrame>
 800b282:	a80c      	add	r0, sp, #48	; 0x30
 800b284:	2101      	movs	r1, #1
 800b286:	2202      	movs	r2, #2
 800b288:	e9cd 840c 	strd	r8, r4, [sp, #48]	; 0x30
 800b28c:	f00b fbeb 	bl	8016a66 <LeaveFrame>
 800b290:	a808      	add	r0, sp, #32
 800b292:	2101      	movs	r1, #1
 800b294:	2202      	movs	r2, #2
 800b296:	f00b fbe6 	bl	8016a66 <LeaveFrame>
 800b29a:	4620      	mov	r0, r4
 800b29c:	f009 fe31 	bl	8014f02 <ThrowException>

0800b2a0 <kfun:kotlin.ranges.IntRange.contains(kotlin.Int)ValueType>:
 800b2a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b2a2:	af03      	add	r7, sp, #12
 800b2a4:	f84d 8d04 	str.w	r8, [sp, #-4]!
 800b2a8:	b084      	sub	sp, #16
 800b2aa:	4606      	mov	r6, r0
 800b2ac:	2400      	movs	r4, #0
 800b2ae:	a802      	add	r0, sp, #8
 800b2b0:	4688      	mov	r8, r1
 800b2b2:	e9cd 4600 	strd	r4, r6, [sp]
 800b2b6:	2101      	movs	r1, #1
 800b2b8:	e9cd 4602 	strd	r4, r6, [sp, #8]
 800b2bc:	2202      	movs	r2, #2
 800b2be:	6935      	ldr	r5, [r6, #16]
 800b2c0:	f00b fbd1 	bl	8016a66 <LeaveFrame>
 800b2c4:	4545      	cmp	r5, r8
 800b2c6:	dc0a      	bgt.n	800b2de <kfun:kotlin.ranges.IntRange.contains(kotlin.Int)ValueType+0x3e>
 800b2c8:	a802      	add	r0, sp, #8
 800b2ca:	e9cd 4602 	strd	r4, r6, [sp, #8]
 800b2ce:	2101      	movs	r1, #1
 800b2d0:	2202      	movs	r2, #2
 800b2d2:	68f5      	ldr	r5, [r6, #12]
 800b2d4:	f00b fbc7 	bl	8016a66 <LeaveFrame>
 800b2d8:	4545      	cmp	r5, r8
 800b2da:	bfa8      	it	ge
 800b2dc:	2401      	movge	r4, #1
 800b2de:	4668      	mov	r0, sp
 800b2e0:	2101      	movs	r1, #1
 800b2e2:	2202      	movs	r2, #2
 800b2e4:	f00b fbbf 	bl	8016a66 <LeaveFrame>
 800b2e8:	4620      	mov	r0, r4
 800b2ea:	b004      	add	sp, #16
 800b2ec:	f85d 8b04 	ldr.w	r8, [sp], #4
 800b2f0:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b2f2 <kfun:kotlin.Char.Companion.<init>()kotlin.Char.Companion>:
 800b2f2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b2f4:	af03      	add	r7, sp, #12
 800b2f6:	f84d 8d04 	str.w	r8, [sp, #-4]!
 800b2fa:	b084      	sub	sp, #16
 800b2fc:	4604      	mov	r4, r0
 800b2fe:	a802      	add	r0, sp, #8
 800b300:	2500      	movs	r5, #0
 800b302:	2101      	movs	r1, #1
 800b304:	2202      	movs	r2, #2
 800b306:	e9cd 5400 	strd	r5, r4, [sp]
 800b30a:	e9cd 5402 	strd	r5, r4, [sp, #8]
 800b30e:	f04f 0802 	mov.w	r8, #2
 800b312:	f00b fba8 	bl	8016a66 <LeaveFrame>
 800b316:	f64d 30ff 	movw	r0, #56319	; 0xdbff
 800b31a:	f44f 4658 	mov.w	r6, #55296	; 0xd800
 800b31e:	8320      	strh	r0, [r4, #24]
 800b320:	f44f 405c 	mov.w	r0, #56320	; 0xdc00
 800b324:	8266      	strh	r6, [r4, #18]
 800b326:	2101      	movs	r1, #1
 800b328:	84a0      	strh	r0, [r4, #36]	; 0x24
 800b32a:	f46f 5010 	mvn.w	r0, #9216	; 0x2400
 800b32e:	f500 6080 	add.w	r0, r0, #1024	; 0x400
 800b332:	8220      	strh	r0, [r4, #16]
 800b334:	a802      	add	r0, sp, #8
 800b336:	2202      	movs	r2, #2
 800b338:	e9cd 5402 	strd	r5, r4, [sp, #8]
 800b33c:	f00b fb93 	bl	8016a66 <LeaveFrame>
 800b340:	a802      	add	r0, sp, #8
 800b342:	8426      	strh	r6, [r4, #32]
 800b344:	e9cd 5402 	strd	r5, r4, [sp, #8]
 800b348:	2101      	movs	r1, #1
 800b34a:	2202      	movs	r2, #2
 800b34c:	8a26      	ldrh	r6, [r4, #16]
 800b34e:	f00b fb8a 	bl	8016a66 <LeaveFrame>
 800b352:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800b356:	f44f 3080 	mov.w	r0, #65536	; 0x10000
 800b35a:	f2c0 0110 	movt	r1, #16
 800b35e:	8466      	strh	r6, [r4, #34]	; 0x22
 800b360:	61e5      	str	r5, [r4, #28]
 800b362:	2202      	movs	r2, #2
 800b364:	e9c4 1002 	strd	r1, r0, [r4, #8]
 800b368:	2024      	movs	r0, #36	; 0x24
 800b36a:	f8c4 8014 	str.w	r8, [r4, #20]
 800b36e:	2101      	movs	r1, #1
 800b370:	62a0      	str	r0, [r4, #40]	; 0x28
 800b372:	4668      	mov	r0, sp
 800b374:	f00b fb77 	bl	8016a66 <LeaveFrame>
 800b378:	b004      	add	sp, #16
 800b37a:	f85d 8b04 	ldr.w	r8, [sp], #4
 800b37e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b380 <kfun:kotlin.text.StringBuilder.append(kotlin.Any?)kotlin.text.StringBuilder>:
 800b380:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b382:	af03      	add	r7, sp, #12
 800b384:	f84d 8d04 	str.w	r8, [sp, #-4]!
 800b388:	b08a      	sub	sp, #40	; 0x28
 800b38a:	2400      	movs	r4, #0
 800b38c:	4690      	mov	r8, r2
 800b38e:	4606      	mov	r6, r0
 800b390:	9404      	str	r4, [sp, #16]
 800b392:	e9cd 4600 	strd	r4, r6, [sp]
 800b396:	e9cd 1402 	strd	r1, r4, [sp, #8]
 800b39a:	466d      	mov	r5, sp
 800b39c:	f105 020c 	add.w	r2, r5, #12
 800b3a0:	4608      	mov	r0, r1
 800b3a2:	4611      	mov	r1, r2
 800b3a4:	f7ff fb95 	bl	800aad2 <kfun:kotlin.toString@kotlin.Any?.()kotlin.String>
 800b3a8:	9409      	str	r4, [sp, #36]	; 0x24
 800b3aa:	e9cd 4605 	strd	r4, r6, [sp, #20]
 800b3ae:	e9cd 0407 	strd	r0, r4, [sp, #28]
 800b3b2:	ac05      	add	r4, sp, #20
 800b3b4:	f104 010c 	add.w	r1, r4, #12
 800b3b8:	f009 ff14 	bl	80151e4 <Kotlin_String_toCharArray>
 800b3bc:	4601      	mov	r1, r0
 800b3be:	f104 0210 	add.w	r2, r4, #16
 800b3c2:	4630      	mov	r0, r6
 800b3c4:	f7fe fee5 	bl	800a192 <kfun:kotlin.text.StringBuilder.append(kotlin.CharArray)kotlin.text.StringBuilder>
 800b3c8:	4606      	mov	r6, r0
 800b3ca:	f105 0010 	add.w	r0, r5, #16
 800b3ce:	4631      	mov	r1, r6
 800b3d0:	f009 f90b 	bl	80145ea <UpdateReturnRef>
 800b3d4:	a805      	add	r0, sp, #20
 800b3d6:	2102      	movs	r1, #2
 800b3d8:	2205      	movs	r2, #5
 800b3da:	f00b fb44 	bl	8016a66 <LeaveFrame>
 800b3de:	4640      	mov	r0, r8
 800b3e0:	4631      	mov	r1, r6
 800b3e2:	f009 f902 	bl	80145ea <UpdateReturnRef>
 800b3e6:	4628      	mov	r0, r5
 800b3e8:	2102      	movs	r1, #2
 800b3ea:	2205      	movs	r2, #5
 800b3ec:	f00b fb3b 	bl	8016a66 <LeaveFrame>
 800b3f0:	4630      	mov	r0, r6
 800b3f2:	b00a      	add	sp, #40	; 0x28
 800b3f4:	f85d 8b04 	ldr.w	r8, [sp], #4
 800b3f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b3fa:	4604      	mov	r4, r0
 800b3fc:	a805      	add	r0, sp, #20
 800b3fe:	2102      	movs	r1, #2
 800b400:	2205      	movs	r2, #5
 800b402:	f00b fb30 	bl	8016a66 <LeaveFrame>
 800b406:	e000      	b.n	800b40a <kfun:kotlin.text.StringBuilder.append(kotlin.Any?)kotlin.text.StringBuilder+0x8a>
 800b408:	4604      	mov	r4, r0
 800b40a:	4668      	mov	r0, sp
 800b40c:	2102      	movs	r1, #2
 800b40e:	2205      	movs	r2, #5
 800b410:	f00b fb29 	bl	8016a66 <LeaveFrame>
 800b414:	4620      	mov	r0, r4
 800b416:	f7f5 fee9 	bl	80011ec <_Unwind_Resume>

0800b41a <kfun:kotlin.ranges.IntRange.<init>(kotlin.Int;kotlin.Int)kotlin.ranges.IntRange>:
 800b41a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b41c:	af03      	add	r7, sp, #12
 800b41e:	e92d 0b00 	stmdb	sp!, {r8, r9, fp}
 800b422:	b088      	sub	sp, #32
 800b424:	4604      	mov	r4, r0
 800b426:	a806      	add	r0, sp, #24
 800b428:	4691      	mov	r9, r2
 800b42a:	460e      	mov	r6, r1
 800b42c:	2500      	movs	r5, #0
 800b42e:	2101      	movs	r1, #1
 800b430:	2202      	movs	r2, #2
 800b432:	e9cd 5400 	strd	r5, r4, [sp]
 800b436:	e9cd 5403 	strd	r5, r4, [sp, #12]
 800b43a:	f04f 0801 	mov.w	r8, #1
 800b43e:	e9cd 5505 	strd	r5, r5, [sp, #20]
 800b442:	9407      	str	r4, [sp, #28]
 800b444:	f00b fb0f 	bl	8016a66 <LeaveFrame>
 800b448:	4630      	mov	r0, r6
 800b44a:	6126      	str	r6, [r4, #16]
 800b44c:	f00b fbcf 	bl	8016bee <Kotlin_Int_toInt>
 800b450:	4648      	mov	r0, r9
 800b452:	f00b fbcc 	bl	8016bee <Kotlin_Int_toInt>
 800b456:	4631      	mov	r1, r6
 800b458:	2201      	movs	r2, #1
 800b45a:	e9cd 5506 	strd	r5, r5, [sp, #24]
 800b45e:	f000 f81d 	bl	800b49c <kfun:kotlin.internal.differenceModulo#internal>
 800b462:	4601      	mov	r1, r0
 800b464:	4648      	mov	r0, r9
 800b466:	f00b fba3 	bl	8016bb0 <Kotlin_Int_minus_Int>
 800b46a:	4605      	mov	r5, r0
 800b46c:	a806      	add	r0, sp, #24
 800b46e:	2100      	movs	r1, #0
 800b470:	2202      	movs	r2, #2
 800b472:	f00b faf8 	bl	8016a66 <LeaveFrame>
 800b476:	4628      	mov	r0, r5
 800b478:	f00b fbb9 	bl	8016bee <Kotlin_Int_toInt>
 800b47c:	a803      	add	r0, sp, #12
 800b47e:	2101      	movs	r1, #1
 800b480:	2203      	movs	r2, #3
 800b482:	e9c4 8502 	strd	r8, r5, [r4, #8]
 800b486:	f00b faee 	bl	8016a66 <LeaveFrame>
 800b48a:	4668      	mov	r0, sp
 800b48c:	2101      	movs	r1, #1
 800b48e:	2202      	movs	r2, #2
 800b490:	f00b fae9 	bl	8016a66 <LeaveFrame>
 800b494:	b008      	add	sp, #32
 800b496:	e8bd 0b00 	ldmia.w	sp!, {r8, r9, fp}
 800b49a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b49c <kfun:kotlin.internal.differenceModulo#internal>:
 800b49c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b49e:	af03      	add	r7, sp, #12
 800b4a0:	f84d bd04 	str.w	fp, [sp, #-4]!
 800b4a4:	4614      	mov	r4, r2
 800b4a6:	460e      	mov	r6, r1
 800b4a8:	4621      	mov	r1, r4
 800b4aa:	f00b fb8d 	bl	8016bc8 <Kotlin_Int_mod_Int>
 800b4ae:	4605      	mov	r5, r0
 800b4b0:	f1b5 3fff 	cmp.w	r5, #4294967295	; 0xffffffff
 800b4b4:	dc04      	bgt.n	800b4c0 <kfun:kotlin.internal.differenceModulo#internal+0x24>
 800b4b6:	4628      	mov	r0, r5
 800b4b8:	4621      	mov	r1, r4
 800b4ba:	f00b fb73 	bl	8016ba4 <Kotlin_Int_plus_Int>
 800b4be:	4605      	mov	r5, r0
 800b4c0:	4630      	mov	r0, r6
 800b4c2:	4621      	mov	r1, r4
 800b4c4:	f00b fb80 	bl	8016bc8 <Kotlin_Int_mod_Int>
 800b4c8:	4601      	mov	r1, r0
 800b4ca:	f1b1 3fff 	cmp.w	r1, #4294967295	; 0xffffffff
 800b4ce:	dc04      	bgt.n	800b4da <kfun:kotlin.internal.differenceModulo#internal+0x3e>
 800b4d0:	4608      	mov	r0, r1
 800b4d2:	4621      	mov	r1, r4
 800b4d4:	f00b fb66 	bl	8016ba4 <Kotlin_Int_plus_Int>
 800b4d8:	4601      	mov	r1, r0
 800b4da:	4628      	mov	r0, r5
 800b4dc:	f00b fb68 	bl	8016bb0 <Kotlin_Int_minus_Int>
 800b4e0:	4621      	mov	r1, r4
 800b4e2:	f00b fb71 	bl	8016bc8 <Kotlin_Int_mod_Int>
 800b4e6:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 800b4ea:	dd02      	ble.n	800b4f2 <kfun:kotlin.internal.differenceModulo#internal+0x56>
 800b4ec:	f85d bb04 	ldr.w	fp, [sp], #4
 800b4f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b4f2:	4621      	mov	r1, r4
 800b4f4:	f85d bb04 	ldr.w	fp, [sp], #4
 800b4f8:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800b4fc:	f00b bb52 	b.w	8016ba4 <Kotlin_Int_plus_Int>

0800b500 <kfun:kotlin.ranges.IntRange.hashCode()ValueType>:
 800b500:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b502:	af03      	add	r7, sp, #12
 800b504:	f84d 8d04 	str.w	r8, [sp, #-4]!
 800b508:	b086      	sub	sp, #24
 800b50a:	4604      	mov	r4, r0
 800b50c:	2600      	movs	r6, #0
 800b50e:	a804      	add	r0, sp, #16
 800b510:	e9cd 6400 	strd	r6, r4, [sp]
 800b514:	e9cd 6402 	strd	r6, r4, [sp, #8]
 800b518:	2101      	movs	r1, #1
 800b51a:	e9cd 6404 	strd	r6, r4, [sp, #16]
 800b51e:	2202      	movs	r2, #2
 800b520:	f8d4 8010 	ldr.w	r8, [r4, #16]
 800b524:	f00b fa9f 	bl	8016a66 <LeaveFrame>
 800b528:	a804      	add	r0, sp, #16
 800b52a:	e9cd 6404 	strd	r6, r4, [sp, #16]
 800b52e:	2101      	movs	r1, #1
 800b530:	2202      	movs	r2, #2
 800b532:	68e5      	ldr	r5, [r4, #12]
 800b534:	f00b fa97 	bl	8016a66 <LeaveFrame>
 800b538:	a802      	add	r0, sp, #8
 800b53a:	2101      	movs	r1, #1
 800b53c:	2202      	movs	r2, #2
 800b53e:	f00b fa92 	bl	8016a66 <LeaveFrame>
 800b542:	45a8      	cmp	r8, r5
 800b544:	dd02      	ble.n	800b54c <kfun:kotlin.ranges.IntRange.hashCode()ValueType+0x4c>
 800b546:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 800b54a:	e017      	b.n	800b57c <kfun:kotlin.ranges.IntRange.hashCode()ValueType+0x7c>
 800b54c:	a804      	add	r0, sp, #16
 800b54e:	e9cd 6404 	strd	r6, r4, [sp, #16]
 800b552:	2101      	movs	r1, #1
 800b554:	2202      	movs	r2, #2
 800b556:	6925      	ldr	r5, [r4, #16]
 800b558:	f00b fa85 	bl	8016a66 <LeaveFrame>
 800b55c:	a804      	add	r0, sp, #16
 800b55e:	e9cd 6404 	strd	r6, r4, [sp, #16]
 800b562:	2101      	movs	r1, #1
 800b564:	2202      	movs	r2, #2
 800b566:	68e4      	ldr	r4, [r4, #12]
 800b568:	f00b fa7d 	bl	8016a66 <LeaveFrame>
 800b56c:	201f      	movs	r0, #31
 800b56e:	4629      	mov	r1, r5
 800b570:	f00b fb2f 	bl	8016bd2 <Kotlin_Int_times_Int>
 800b574:	4621      	mov	r1, r4
 800b576:	f00b fb15 	bl	8016ba4 <Kotlin_Int_plus_Int>
 800b57a:	4604      	mov	r4, r0
 800b57c:	4668      	mov	r0, sp
 800b57e:	2101      	movs	r1, #1
 800b580:	2202      	movs	r2, #2
 800b582:	f00b fa70 	bl	8016a66 <LeaveFrame>
 800b586:	4620      	mov	r0, r4
 800b588:	b006      	add	sp, #24
 800b58a:	f85d 8b04 	ldr.w	r8, [sp], #4
 800b58e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b590 <kfun:kotlin.ranges.IntRange.toString()kotlin.String>:
 800b590:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b592:	af03      	add	r7, sp, #12
 800b594:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 800b598:	b091      	sub	sp, #68	; 0x44
 800b59a:	2600      	movs	r6, #0
 800b59c:	4688      	mov	r8, r1
 800b59e:	e9cd 6606 	strd	r6, r6, [sp, #24]
 800b5a2:	46ea      	mov	sl, sp
 800b5a4:	e9cd 6604 	strd	r6, r6, [sp, #16]
 800b5a8:	f10a 0108 	add.w	r1, sl, #8
 800b5ac:	e9cd 6602 	strd	r6, r6, [sp, #8]
 800b5b0:	e9cd 6000 	strd	r6, r0, [sp]
 800b5b4:	f641 10f0 	movw	r0, #6640	; 0x19f0
 800b5b8:	f6c0 0002 	movt	r0, #2050	; 0x802
 800b5bc:	f00b f99d 	bl	80168fa <AllocInstance>
 800b5c0:	4604      	mov	r4, r0
 800b5c2:	210a      	movs	r1, #10
 800b5c4:	e9cd 6408 	strd	r6, r4, [sp, #32]
 800b5c8:	f7ff fac5 	bl	800ab56 <kfun:kotlin.text.StringBuilder.<init>(kotlin.Int)kotlin.text.StringBuilder>
 800b5cc:	a808      	add	r0, sp, #32
 800b5ce:	2101      	movs	r1, #1
 800b5d0:	2202      	movs	r2, #2
 800b5d2:	f00b fa48 	bl	8016a66 <LeaveFrame>
 800b5d6:	f10a 000c 	add.w	r0, sl, #12
 800b5da:	4621      	mov	r1, r4
 800b5dc:	f008 fdf8 	bl	80141d0 <UpdateRef>
 800b5e0:	9801      	ldr	r0, [sp, #4]
 800b5e2:	f10d 0920 	add.w	r9, sp, #32
 800b5e6:	9d03      	ldr	r5, [sp, #12]
 800b5e8:	2101      	movs	r1, #1
 800b5ea:	2202      	movs	r2, #2
 800b5ec:	e9cd 6008 	strd	r6, r0, [sp, #32]
 800b5f0:	6904      	ldr	r4, [r0, #16]
 800b5f2:	4648      	mov	r0, r9
 800b5f4:	f00b fa37 	bl	8016a66 <LeaveFrame>
 800b5f8:	f10a 0210 	add.w	r2, sl, #16
 800b5fc:	4628      	mov	r0, r5
 800b5fe:	4621      	mov	r1, r4
 800b600:	f7ff f8d1 	bl	800a7a6 <kfun:kotlin.text.StringBuilder.append(kotlin.Int)kotlin.text.StringBuilder>
 800b604:	9d03      	ldr	r5, [sp, #12]
 800b606:	f641 3034 	movw	r0, #6964	; 0x1b34
 800b60a:	f109 010c 	add.w	r1, r9, #12
 800b60e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800b612:	e9cd 660b 	strd	r6, r6, [sp, #44]	; 0x2c
 800b616:	e9cd 6508 	strd	r6, r5, [sp, #32]
 800b61a:	900a      	str	r0, [sp, #40]	; 0x28
 800b61c:	f009 fde2 	bl	80151e4 <Kotlin_String_toCharArray>
 800b620:	4601      	mov	r1, r0
 800b622:	f109 0210 	add.w	r2, r9, #16
 800b626:	4628      	mov	r0, r5
 800b628:	f7fe fdb3 	bl	800a192 <kfun:kotlin.text.StringBuilder.append(kotlin.CharArray)kotlin.text.StringBuilder>
 800b62c:	4601      	mov	r1, r0
 800b62e:	f10a 0014 	add.w	r0, sl, #20
 800b632:	f10a 0b18 	add.w	fp, sl, #24
 800b636:	f008 ffd8 	bl	80145ea <UpdateReturnRef>
 800b63a:	a808      	add	r0, sp, #32
 800b63c:	2102      	movs	r1, #2
 800b63e:	2205      	movs	r2, #5
 800b640:	f00b fa11 	bl	8016a66 <LeaveFrame>
 800b644:	9801      	ldr	r0, [sp, #4]
 800b646:	2600      	movs	r6, #0
 800b648:	f10d 0920 	add.w	r9, sp, #32
 800b64c:	9c03      	ldr	r4, [sp, #12]
 800b64e:	2101      	movs	r1, #1
 800b650:	2202      	movs	r2, #2
 800b652:	e9cd 6008 	strd	r6, r0, [sp, #32]
 800b656:	68c5      	ldr	r5, [r0, #12]
 800b658:	4648      	mov	r0, r9
 800b65a:	f00b fa04 	bl	8016a66 <LeaveFrame>
 800b65e:	4620      	mov	r0, r4
 800b660:	4629      	mov	r1, r5
 800b662:	465a      	mov	r2, fp
 800b664:	f7ff f89f 	bl	800a7a6 <kfun:kotlin.text.StringBuilder.append(kotlin.Int)kotlin.text.StringBuilder>
 800b668:	9803      	ldr	r0, [sp, #12]
 800b66a:	ad0e      	add	r5, sp, #56	; 0x38
 800b66c:	e9cd 660a 	strd	r6, r6, [sp, #40]	; 0x28
 800b670:	f10a 0a1c 	add.w	sl, sl, #28
 800b674:	e9cd 6008 	strd	r6, r0, [sp, #32]
 800b678:	9610      	str	r6, [sp, #64]	; 0x40
 800b67a:	e9cd 600e 	strd	r6, r0, [sp, #56]	; 0x38
 800b67e:	68c4      	ldr	r4, [r0, #12]
 800b680:	f105 0008 	add.w	r0, r5, #8
 800b684:	4621      	mov	r1, r4
 800b686:	f008 fda3 	bl	80141d0 <UpdateRef>
 800b68a:	f109 0008 	add.w	r0, r9, #8
 800b68e:	4621      	mov	r1, r4
 800b690:	f008 ffab 	bl	80145ea <UpdateReturnRef>
 800b694:	4628      	mov	r0, r5
 800b696:	2101      	movs	r1, #1
 800b698:	2203      	movs	r2, #3
 800b69a:	f00b f9e4 	bl	8016a66 <LeaveFrame>
 800b69e:	9809      	ldr	r0, [sp, #36]	; 0x24
 800b6a0:	2101      	movs	r1, #1
 800b6a2:	2202      	movs	r2, #2
 800b6a4:	e9cd 600e 	strd	r6, r0, [sp, #56]	; 0x38
 800b6a8:	6885      	ldr	r5, [r0, #8]
 800b6aa:	a80e      	add	r0, sp, #56	; 0x38
 800b6ac:	f00b f9db 	bl	8016a66 <LeaveFrame>
 800b6b0:	f109 030c 	add.w	r3, r9, #12
 800b6b4:	4620      	mov	r0, r4
 800b6b6:	2100      	movs	r1, #0
 800b6b8:	462a      	mov	r2, r5
 800b6ba:	f009 fd4a 	bl	8015152 <Kotlin_String_fromCharArray>
 800b6be:	4604      	mov	r4, r0
 800b6c0:	4650      	mov	r0, sl
 800b6c2:	4621      	mov	r1, r4
 800b6c4:	f008 ff91 	bl	80145ea <UpdateReturnRef>
 800b6c8:	4648      	mov	r0, r9
 800b6ca:	2101      	movs	r1, #1
 800b6cc:	2204      	movs	r2, #4
 800b6ce:	f00b f9ca 	bl	8016a66 <LeaveFrame>
 800b6d2:	4640      	mov	r0, r8
 800b6d4:	4621      	mov	r1, r4
 800b6d6:	f008 ff88 	bl	80145ea <UpdateReturnRef>
 800b6da:	4668      	mov	r0, sp
 800b6dc:	2101      	movs	r1, #1
 800b6de:	2208      	movs	r2, #8
 800b6e0:	f00b f9c1 	bl	8016a66 <LeaveFrame>
 800b6e4:	4620      	mov	r0, r4
 800b6e6:	b011      	add	sp, #68	; 0x44
 800b6e8:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 800b6ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b6ee:	4604      	mov	r4, r0
 800b6f0:	a808      	add	r0, sp, #32
 800b6f2:	2102      	movs	r1, #2
 800b6f4:	2205      	movs	r2, #5
 800b6f6:	f00b f9b6 	bl	8016a66 <LeaveFrame>
 800b6fa:	e000      	b.n	800b6fe <kfun:kotlin.ranges.IntRange.toString()kotlin.String+0x16e>
 800b6fc:	4604      	mov	r4, r0
 800b6fe:	4668      	mov	r0, sp
 800b700:	2101      	movs	r1, #1
 800b702:	2208      	movs	r2, #8
 800b704:	f00b f9af 	bl	8016a66 <LeaveFrame>
 800b708:	4620      	mov	r0, r4
 800b70a:	f7f5 fd6f 	bl	80011ec <_Unwind_Resume>

0800b70e <kfun:kotlin.ranges.IntRange.equals(kotlin.Any?)ValueType>:
 800b70e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b710:	af03      	add	r7, sp, #12
 800b712:	e92d 0b00 	stmdb	sp!, {r8, r9, fp}
 800b716:	b088      	sub	sp, #32
 800b718:	460c      	mov	r4, r1
 800b71a:	4605      	mov	r5, r0
 800b71c:	2600      	movs	r6, #0
 800b71e:	2c00      	cmp	r4, #0
 800b720:	9502      	str	r5, [sp, #8]
 800b722:	9601      	str	r6, [sp, #4]
 800b724:	9403      	str	r4, [sp, #12]
 800b726:	d06a      	beq.n	800b7fe <kfun:kotlin.ranges.IntRange.equals(kotlin.Any?)ValueType+0xf0>
 800b728:	f641 51a0 	movw	r1, #7584	; 0x1da0
 800b72c:	4620      	mov	r0, r4
 800b72e:	f6c0 0102 	movt	r1, #2050	; 0x802
 800b732:	f009 fc21 	bl	8014f78 <IsInstance>
 800b736:	07c0      	lsls	r0, r0, #31
 800b738:	f04f 0600 	mov.w	r6, #0
 800b73c:	d05f      	beq.n	800b7fe <kfun:kotlin.ranges.IntRange.equals(kotlin.Any?)ValueType+0xf0>
 800b73e:	a806      	add	r0, sp, #24
 800b740:	e9cd 6504 	strd	r6, r5, [sp, #16]
 800b744:	e9cd 6506 	strd	r6, r5, [sp, #24]
 800b748:	2101      	movs	r1, #1
 800b74a:	2202      	movs	r2, #2
 800b74c:	f8d5 8010 	ldr.w	r8, [r5, #16]
 800b750:	f00b f989 	bl	8016a66 <LeaveFrame>
 800b754:	a806      	add	r0, sp, #24
 800b756:	e9cd 6506 	strd	r6, r5, [sp, #24]
 800b75a:	2101      	movs	r1, #1
 800b75c:	2202      	movs	r2, #2
 800b75e:	68ee      	ldr	r6, [r5, #12]
 800b760:	f00b f981 	bl	8016a66 <LeaveFrame>
 800b764:	a804      	add	r0, sp, #16
 800b766:	2101      	movs	r1, #1
 800b768:	2202      	movs	r2, #2
 800b76a:	f00b f97c 	bl	8016a66 <LeaveFrame>
 800b76e:	45b0      	cmp	r8, r6
 800b770:	dd1d      	ble.n	800b7ae <kfun:kotlin.ranges.IntRange.equals(kotlin.Any?)ValueType+0xa0>
 800b772:	f04f 0800 	mov.w	r8, #0
 800b776:	a806      	add	r0, sp, #24
 800b778:	e9cd 8404 	strd	r8, r4, [sp, #16]
 800b77c:	2101      	movs	r1, #1
 800b77e:	e9cd 8406 	strd	r8, r4, [sp, #24]
 800b782:	2202      	movs	r2, #2
 800b784:	f8d4 9010 	ldr.w	r9, [r4, #16]
 800b788:	2601      	movs	r6, #1
 800b78a:	f00b f96c 	bl	8016a66 <LeaveFrame>
 800b78e:	a806      	add	r0, sp, #24
 800b790:	e9cd 8406 	strd	r8, r4, [sp, #24]
 800b794:	2101      	movs	r1, #1
 800b796:	2202      	movs	r2, #2
 800b798:	f8d4 800c 	ldr.w	r8, [r4, #12]
 800b79c:	f00b f963 	bl	8016a66 <LeaveFrame>
 800b7a0:	a804      	add	r0, sp, #16
 800b7a2:	2101      	movs	r1, #1
 800b7a4:	2202      	movs	r2, #2
 800b7a6:	f00b f95e 	bl	8016a66 <LeaveFrame>
 800b7aa:	45c1      	cmp	r9, r8
 800b7ac:	dc27      	bgt.n	800b7fe <kfun:kotlin.ranges.IntRange.equals(kotlin.Any?)ValueType+0xf0>
 800b7ae:	2600      	movs	r6, #0
 800b7b0:	a806      	add	r0, sp, #24
 800b7b2:	e9cd 6506 	strd	r6, r5, [sp, #24]
 800b7b6:	2101      	movs	r1, #1
 800b7b8:	2202      	movs	r2, #2
 800b7ba:	f8d5 8010 	ldr.w	r8, [r5, #16]
 800b7be:	f00b f952 	bl	8016a66 <LeaveFrame>
 800b7c2:	a806      	add	r0, sp, #24
 800b7c4:	e9cd 6406 	strd	r6, r4, [sp, #24]
 800b7c8:	2101      	movs	r1, #1
 800b7ca:	2202      	movs	r2, #2
 800b7cc:	f8d4 9010 	ldr.w	r9, [r4, #16]
 800b7d0:	f00b f949 	bl	8016a66 <LeaveFrame>
 800b7d4:	45c8      	cmp	r8, r9
 800b7d6:	d112      	bne.n	800b7fe <kfun:kotlin.ranges.IntRange.equals(kotlin.Any?)ValueType+0xf0>
 800b7d8:	a806      	add	r0, sp, #24
 800b7da:	e9cd 6506 	strd	r6, r5, [sp, #24]
 800b7de:	2101      	movs	r1, #1
 800b7e0:	2202      	movs	r2, #2
 800b7e2:	68ed      	ldr	r5, [r5, #12]
 800b7e4:	f00b f93f 	bl	8016a66 <LeaveFrame>
 800b7e8:	a806      	add	r0, sp, #24
 800b7ea:	e9cd 6406 	strd	r6, r4, [sp, #24]
 800b7ee:	2101      	movs	r1, #1
 800b7f0:	2202      	movs	r2, #2
 800b7f2:	68e4      	ldr	r4, [r4, #12]
 800b7f4:	f00b f937 	bl	8016a66 <LeaveFrame>
 800b7f8:	42a5      	cmp	r5, r4
 800b7fa:	bf08      	it	eq
 800b7fc:	2601      	moveq	r6, #1
 800b7fe:	a801      	add	r0, sp, #4
 800b800:	2102      	movs	r1, #2
 800b802:	2203      	movs	r2, #3
 800b804:	f00b f92f 	bl	8016a66 <LeaveFrame>
 800b808:	4630      	mov	r0, r6
 800b80a:	b008      	add	sp, #32
 800b80c:	e8bd 0b00 	ldmia.w	sp!, {r8, r9, fp}
 800b810:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b812 <kfun:kotlin.ranges.IntProgression.iterator()kotlin.collections.IntIterator>:
 800b812:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b814:	af03      	add	r7, sp, #12
 800b816:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 800b81a:	b08b      	sub	sp, #44	; 0x2c
 800b81c:	4605      	mov	r5, r0
 800b81e:	2400      	movs	r4, #0
 800b820:	a808      	add	r0, sp, #32
 800b822:	4688      	mov	r8, r1
 800b824:	9403      	str	r4, [sp, #12]
 800b826:	2101      	movs	r1, #1
 800b828:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800b82c:	2202      	movs	r2, #2
 800b82e:	e9cd 4508 	strd	r4, r5, [sp, #32]
 800b832:	f8d5 9010 	ldr.w	r9, [r5, #16]
 800b836:	f00b f916 	bl	8016a66 <LeaveFrame>
 800b83a:	a808      	add	r0, sp, #32
 800b83c:	e9cd 4508 	strd	r4, r5, [sp, #32]
 800b840:	2101      	movs	r1, #1
 800b842:	2202      	movs	r2, #2
 800b844:	f8d5 a00c 	ldr.w	sl, [r5, #12]
 800b848:	f00b f90d 	bl	8016a66 <LeaveFrame>
 800b84c:	a808      	add	r0, sp, #32
 800b84e:	e9cd 4508 	strd	r4, r5, [sp, #32]
 800b852:	2101      	movs	r1, #1
 800b854:	2202      	movs	r2, #2
 800b856:	f8d5 b008 	ldr.w	fp, [r5, #8]
 800b85a:	f00b f904 	bl	8016a66 <LeaveFrame>
 800b85e:	a801      	add	r0, sp, #4
 800b860:	f100 0108 	add.w	r1, r0, #8
 800b864:	f641 60f0 	movw	r0, #7920	; 0x1ef0
 800b868:	f6c0 0002 	movt	r0, #2050	; 0x802
 800b86c:	f00b f845 	bl	80168fa <AllocInstance>
 800b870:	4605      	mov	r5, r0
 800b872:	a808      	add	r0, sp, #32
 800b874:	2101      	movs	r1, #1
 800b876:	2202      	movs	r2, #2
 800b878:	e9cd 4504 	strd	r4, r5, [sp, #16]
 800b87c:	e9cd 4506 	strd	r4, r5, [sp, #24]
 800b880:	e9cd 4508 	strd	r4, r5, [sp, #32]
 800b884:	f00b f8ef 	bl	8016a66 <LeaveFrame>
 800b888:	a806      	add	r0, sp, #24
 800b88a:	2101      	movs	r1, #1
 800b88c:	2202      	movs	r2, #2
 800b88e:	f00b f8ea 	bl	8016a66 <LeaveFrame>
 800b892:	a808      	add	r0, sp, #32
 800b894:	2101      	movs	r1, #1
 800b896:	2202      	movs	r2, #2
 800b898:	e9c5 ba04 	strd	fp, sl, [r5, #16]
 800b89c:	e9cd 4508 	strd	r4, r5, [sp, #32]
 800b8a0:	f00b f8e1 	bl	8016a66 <LeaveFrame>
 800b8a4:	45d1      	cmp	r9, sl
 800b8a6:	f04f 0000 	mov.w	r0, #0
 800b8aa:	f04f 0600 	mov.w	r6, #0
 800b8ae:	bfd8      	it	le
 800b8b0:	2001      	movle	r0, #1
 800b8b2:	bfa8      	it	ge
 800b8b4:	2601      	movge	r6, #1
 800b8b6:	f1bb 0f00 	cmp.w	fp, #0
 800b8ba:	bfc8      	it	gt
 800b8bc:	4606      	movgt	r6, r0
 800b8be:	a808      	add	r0, sp, #32
 800b8c0:	2101      	movs	r1, #1
 800b8c2:	2202      	movs	r2, #2
 800b8c4:	722e      	strb	r6, [r5, #8]
 800b8c6:	e9cd 4508 	strd	r4, r5, [sp, #32]
 800b8ca:	f00b f8cc 	bl	8016a66 <LeaveFrame>
 800b8ce:	b946      	cbnz	r6, 800b8e2 <kfun:kotlin.ranges.IntProgression.iterator()kotlin.collections.IntIterator+0xd0>
 800b8d0:	a808      	add	r0, sp, #32
 800b8d2:	e9cd 4508 	strd	r4, r5, [sp, #32]
 800b8d6:	2101      	movs	r1, #1
 800b8d8:	2202      	movs	r2, #2
 800b8da:	f8d5 9014 	ldr.w	r9, [r5, #20]
 800b8de:	f00b f8c2 	bl	8016a66 <LeaveFrame>
 800b8e2:	a804      	add	r0, sp, #16
 800b8e4:	2101      	movs	r1, #1
 800b8e6:	2202      	movs	r2, #2
 800b8e8:	f8c5 900c 	str.w	r9, [r5, #12]
 800b8ec:	f00b f8bb 	bl	8016a66 <LeaveFrame>
 800b8f0:	4640      	mov	r0, r8
 800b8f2:	4629      	mov	r1, r5
 800b8f4:	f008 fe79 	bl	80145ea <UpdateReturnRef>
 800b8f8:	a801      	add	r0, sp, #4
 800b8fa:	2101      	movs	r1, #1
 800b8fc:	2203      	movs	r2, #3
 800b8fe:	f00b f8b2 	bl	8016a66 <LeaveFrame>
 800b902:	4628      	mov	r0, r5
 800b904:	b00b      	add	sp, #44	; 0x2c
 800b906:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 800b90a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b90c <kfun:kotlin.ranges.IntRange.isEmpty()ValueType>:
 800b90c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b90e:	af03      	add	r7, sp, #12
 800b910:	f84d bd04 	str.w	fp, [sp, #-4]!
 800b914:	b084      	sub	sp, #16
 800b916:	4605      	mov	r5, r0
 800b918:	2400      	movs	r4, #0
 800b91a:	a802      	add	r0, sp, #8
 800b91c:	e9cd 4500 	strd	r4, r5, [sp]
 800b920:	e9cd 4502 	strd	r4, r5, [sp, #8]
 800b924:	2101      	movs	r1, #1
 800b926:	2202      	movs	r2, #2
 800b928:	692e      	ldr	r6, [r5, #16]
 800b92a:	f00b f89c 	bl	8016a66 <LeaveFrame>
 800b92e:	a802      	add	r0, sp, #8
 800b930:	e9cd 4502 	strd	r4, r5, [sp, #8]
 800b934:	2101      	movs	r1, #1
 800b936:	2202      	movs	r2, #2
 800b938:	68ed      	ldr	r5, [r5, #12]
 800b93a:	f00b f894 	bl	8016a66 <LeaveFrame>
 800b93e:	4668      	mov	r0, sp
 800b940:	2101      	movs	r1, #1
 800b942:	2202      	movs	r2, #2
 800b944:	f00b f88f 	bl	8016a66 <LeaveFrame>
 800b948:	42ae      	cmp	r6, r5
 800b94a:	bfc8      	it	gt
 800b94c:	2401      	movgt	r4, #1
 800b94e:	4620      	mov	r0, r4
 800b950:	b004      	add	sp, #16
 800b952:	f85d bb04 	ldr.w	fp, [sp], #4
 800b956:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b958 <kfun:kotlin.ranges.IntProgressionIterator.nextInt#internal>:
 800b958:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b95a:	af03      	add	r7, sp, #12
 800b95c:	e92d 0b00 	stmdb	sp!, {r8, r9, fp}
 800b960:	b08a      	sub	sp, #40	; 0x28
 800b962:	4605      	mov	r5, r0
 800b964:	2400      	movs	r4, #0
 800b966:	a808      	add	r0, sp, #32
 800b968:	e9cd 4402 	strd	r4, r4, [sp, #8]
 800b96c:	e9cd 4500 	strd	r4, r5, [sp]
 800b970:	2101      	movs	r1, #1
 800b972:	e9cd 4508 	strd	r4, r5, [sp, #32]
 800b976:	2202      	movs	r2, #2
 800b978:	f8d5 800c 	ldr.w	r8, [r5, #12]
 800b97c:	f00b f873 	bl	8016a66 <LeaveFrame>
 800b980:	a808      	add	r0, sp, #32
 800b982:	e9cd 4508 	strd	r4, r5, [sp, #32]
 800b986:	2101      	movs	r1, #1
 800b988:	2202      	movs	r2, #2
 800b98a:	696e      	ldr	r6, [r5, #20]
 800b98c:	f00b f86b 	bl	8016a66 <LeaveFrame>
 800b990:	46e9      	mov	r9, sp
 800b992:	45b0      	cmp	r8, r6
 800b994:	d112      	bne.n	800b9bc <kfun:kotlin.ranges.IntProgressionIterator.nextInt#internal+0x64>
 800b996:	a808      	add	r0, sp, #32
 800b998:	e9cd 4508 	strd	r4, r5, [sp, #32]
 800b99c:	2101      	movs	r1, #1
 800b99e:	2202      	movs	r2, #2
 800b9a0:	7a2d      	ldrb	r5, [r5, #8]
 800b9a2:	f00b f860 	bl	8016a66 <LeaveFrame>
 800b9a6:	4628      	mov	r0, r5
 800b9a8:	f00b f8cf 	bl	8016b4a <Kotlin_Boolean_not>
 800b9ac:	07c0      	lsls	r0, r0, #31
 800b9ae:	d133      	bne.n	800ba18 <kfun:kotlin.ranges.IntProgressionIterator.nextInt#internal+0xc0>
 800b9b0:	9801      	ldr	r0, [sp, #4]
 800b9b2:	2100      	movs	r1, #0
 800b9b4:	e9cd 1008 	strd	r1, r0, [sp, #32]
 800b9b8:	7201      	strb	r1, [r0, #8]
 800b9ba:	e01e      	b.n	800b9fa <kfun:kotlin.ranges.IntProgressionIterator.nextInt#internal+0xa2>
 800b9bc:	f109 000c 	add.w	r0, r9, #12
 800b9c0:	4629      	mov	r1, r5
 800b9c2:	f008 fc05 	bl	80141d0 <UpdateRef>
 800b9c6:	9d03      	ldr	r5, [sp, #12]
 800b9c8:	a808      	add	r0, sp, #32
 800b9ca:	2101      	movs	r1, #1
 800b9cc:	2202      	movs	r2, #2
 800b9ce:	e9cd 4508 	strd	r4, r5, [sp, #32]
 800b9d2:	f8d5 900c 	ldr.w	r9, [r5, #12]
 800b9d6:	f00b f846 	bl	8016a66 <LeaveFrame>
 800b9da:	9801      	ldr	r0, [sp, #4]
 800b9dc:	2101      	movs	r1, #1
 800b9de:	2202      	movs	r2, #2
 800b9e0:	e9cd 4008 	strd	r4, r0, [sp, #32]
 800b9e4:	6906      	ldr	r6, [r0, #16]
 800b9e6:	a808      	add	r0, sp, #32
 800b9e8:	f00b f83d 	bl	8016a66 <LeaveFrame>
 800b9ec:	4648      	mov	r0, r9
 800b9ee:	4631      	mov	r1, r6
 800b9f0:	f00b f8d8 	bl	8016ba4 <Kotlin_Int_plus_Int>
 800b9f4:	e9cd 4508 	strd	r4, r5, [sp, #32]
 800b9f8:	60e8      	str	r0, [r5, #12]
 800b9fa:	a808      	add	r0, sp, #32
 800b9fc:	2101      	movs	r1, #1
 800b9fe:	2202      	movs	r2, #2
 800ba00:	f00b f831 	bl	8016a66 <LeaveFrame>
 800ba04:	4668      	mov	r0, sp
 800ba06:	2101      	movs	r1, #1
 800ba08:	2204      	movs	r2, #4
 800ba0a:	f00b f82c 	bl	8016a66 <LeaveFrame>
 800ba0e:	4640      	mov	r0, r8
 800ba10:	b00a      	add	sp, #40	; 0x28
 800ba12:	e8bd 0b00 	ldmia.w	sp!, {r8, r9, fp}
 800ba16:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ba18:	f242 0050 	movw	r0, #8272	; 0x2050
 800ba1c:	f109 0108 	add.w	r1, r9, #8
 800ba20:	f6c0 0002 	movt	r0, #2050	; 0x802
 800ba24:	f00a ff69 	bl	80168fa <AllocInstance>
 800ba28:	4604      	mov	r4, r0
 800ba2a:	2500      	movs	r5, #0
 800ba2c:	e9cd 5404 	strd	r5, r4, [sp, #16]
 800ba30:	e9cd 5406 	strd	r5, r4, [sp, #24]
 800ba34:	f7ff fb49 	bl	800b0ca <kfun:kotlin.Exception.<init>()kotlin.Exception>
 800ba38:	a808      	add	r0, sp, #32
 800ba3a:	2101      	movs	r1, #1
 800ba3c:	2202      	movs	r2, #2
 800ba3e:	e9cd 5408 	strd	r5, r4, [sp, #32]
 800ba42:	f00b f810 	bl	8016a66 <LeaveFrame>
 800ba46:	a806      	add	r0, sp, #24
 800ba48:	2101      	movs	r1, #1
 800ba4a:	2202      	movs	r2, #2
 800ba4c:	f00b f80b 	bl	8016a66 <LeaveFrame>
 800ba50:	a808      	add	r0, sp, #32
 800ba52:	2101      	movs	r1, #1
 800ba54:	2202      	movs	r2, #2
 800ba56:	e9cd 5408 	strd	r5, r4, [sp, #32]
 800ba5a:	f00b f804 	bl	8016a66 <LeaveFrame>
 800ba5e:	a804      	add	r0, sp, #16
 800ba60:	2101      	movs	r1, #1
 800ba62:	2202      	movs	r2, #2
 800ba64:	f00a ffff 	bl	8016a66 <LeaveFrame>
 800ba68:	4620      	mov	r0, r4
 800ba6a:	f009 fa4a 	bl	8014f02 <ThrowException>
 800ba6e:	4604      	mov	r4, r0
 800ba70:	4668      	mov	r0, sp
 800ba72:	2101      	movs	r1, #1
 800ba74:	2204      	movs	r2, #4
 800ba76:	f00a fff6 	bl	8016a66 <LeaveFrame>
 800ba7a:	4620      	mov	r0, r4
 800ba7c:	f7f5 fbb6 	bl	80011ec <_Unwind_Resume>

0800ba80 <kfun:kotlin.ranges.IntProgressionIterator.hasNext#internal>:
 800ba80:	b5d0      	push	{r4, r6, r7, lr}
 800ba82:	af02      	add	r7, sp, #8
 800ba84:	b084      	sub	sp, #16
 800ba86:	2100      	movs	r1, #0
 800ba88:	2202      	movs	r2, #2
 800ba8a:	e9cd 1000 	strd	r1, r0, [sp]
 800ba8e:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800ba92:	2101      	movs	r1, #1
 800ba94:	7a04      	ldrb	r4, [r0, #8]
 800ba96:	a802      	add	r0, sp, #8
 800ba98:	f00a ffe5 	bl	8016a66 <LeaveFrame>
 800ba9c:	4668      	mov	r0, sp
 800ba9e:	2101      	movs	r1, #1
 800baa0:	2202      	movs	r2, #2
 800baa2:	f00a ffe0 	bl	8016a66 <LeaveFrame>
 800baa6:	4620      	mov	r0, r4
 800baa8:	b004      	add	sp, #16
 800baaa:	bdd0      	pop	{r4, r6, r7, pc}

0800baac <kfun:kotlin.collections.IntIterator.next()ValueType>:
 800baac:	b5d0      	push	{r4, r6, r7, lr}
 800baae:	af02      	add	r7, sp, #8
 800bab0:	b082      	sub	sp, #8
 800bab2:	2100      	movs	r1, #0
 800bab4:	e9cd 1000 	strd	r1, r0, [sp]
 800bab8:	6801      	ldr	r1, [r0, #0]
 800baba:	6d09      	ldr	r1, [r1, #80]	; 0x50
 800babc:	4788      	blx	r1
 800babe:	4604      	mov	r4, r0
 800bac0:	4668      	mov	r0, sp
 800bac2:	2101      	movs	r1, #1
 800bac4:	2202      	movs	r2, #2
 800bac6:	f00a ffce 	bl	8016a66 <LeaveFrame>
 800baca:	4620      	mov	r0, r4
 800bacc:	b002      	add	sp, #8
 800bace:	bdd0      	pop	{r4, r6, r7, pc}
 800bad0:	4604      	mov	r4, r0
 800bad2:	4668      	mov	r0, sp
 800bad4:	2101      	movs	r1, #1
 800bad6:	2202      	movs	r2, #2
 800bad8:	f00a ffc5 	bl	8016a66 <LeaveFrame>
 800badc:	4620      	mov	r0, r4
 800bade:	f7f5 fb85 	bl	80011ec <_Unwind_Resume>

0800bae2 <kfun:kotlin.collections.IntIterator.$<bridge-UN>next()ValueType()kotlin.Any?>:
 800bae2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bae4:	af03      	add	r7, sp, #12
 800bae6:	e92d 0b00 	stmdb	sp!, {r8, r9, fp}
 800baea:	b08c      	sub	sp, #48	; 0x30
 800baec:	2400      	movs	r4, #0
 800baee:	4688      	mov	r8, r1
 800baf0:	9403      	str	r4, [sp, #12]
 800baf2:	e9cd 4001 	strd	r4, r0, [sp, #4]
 800baf6:	e9cd 400a 	strd	r4, r0, [sp, #40]	; 0x28
 800bafa:	6801      	ldr	r1, [r0, #0]
 800bafc:	6d09      	ldr	r1, [r1, #80]	; 0x50
 800bafe:	4788      	blx	r1
 800bb00:	4606      	mov	r6, r0
 800bb02:	a80a      	add	r0, sp, #40	; 0x28
 800bb04:	2101      	movs	r1, #1
 800bb06:	2202      	movs	r2, #2
 800bb08:	f00a ffad 	bl	8016a66 <LeaveFrame>
 800bb0c:	f10d 0910 	add.w	r9, sp, #16
 800bb10:	f242 1040 	movw	r0, #8512	; 0x2140
 800bb14:	f049 0104 	orr.w	r1, r9, #4
 800bb18:	f6c0 0002 	movt	r0, #2050	; 0x802
 800bb1c:	e9cd 4404 	strd	r4, r4, [sp, #16]
 800bb20:	f00a feeb 	bl	80168fa <AllocInstance>
 800bb24:	4605      	mov	r5, r0
 800bb26:	a80a      	add	r0, sp, #40	; 0x28
 800bb28:	2101      	movs	r1, #1
 800bb2a:	2202      	movs	r2, #2
 800bb2c:	e9cd 4506 	strd	r4, r5, [sp, #24]
 800bb30:	e9cd 4508 	strd	r4, r5, [sp, #32]
 800bb34:	e9cd 450a 	strd	r4, r5, [sp, #40]	; 0x28
 800bb38:	f00a ff95 	bl	8016a66 <LeaveFrame>
 800bb3c:	a808      	add	r0, sp, #32
 800bb3e:	2101      	movs	r1, #1
 800bb40:	2202      	movs	r2, #2
 800bb42:	f00a ff90 	bl	8016a66 <LeaveFrame>
 800bb46:	a806      	add	r0, sp, #24
 800bb48:	2101      	movs	r1, #1
 800bb4a:	2202      	movs	r2, #2
 800bb4c:	60ae      	str	r6, [r5, #8]
 800bb4e:	f00a ff8a 	bl	8016a66 <LeaveFrame>
 800bb52:	ae01      	add	r6, sp, #4
 800bb54:	4629      	mov	r1, r5
 800bb56:	f106 0008 	add.w	r0, r6, #8
 800bb5a:	f008 fd46 	bl	80145ea <UpdateReturnRef>
 800bb5e:	4648      	mov	r0, r9
 800bb60:	2100      	movs	r1, #0
 800bb62:	2202      	movs	r2, #2
 800bb64:	f00a ff7f 	bl	8016a66 <LeaveFrame>
 800bb68:	4640      	mov	r0, r8
 800bb6a:	4629      	mov	r1, r5
 800bb6c:	f008 fd3d 	bl	80145ea <UpdateReturnRef>
 800bb70:	4630      	mov	r0, r6
 800bb72:	2101      	movs	r1, #1
 800bb74:	2203      	movs	r2, #3
 800bb76:	f00a ff76 	bl	8016a66 <LeaveFrame>
 800bb7a:	4628      	mov	r0, r5
 800bb7c:	b00c      	add	sp, #48	; 0x30
 800bb7e:	e8bd 0b00 	ldmia.w	sp!, {r8, r9, fp}
 800bb82:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bb84:	4604      	mov	r4, r0
 800bb86:	a80a      	add	r0, sp, #40	; 0x28
 800bb88:	2101      	movs	r1, #1
 800bb8a:	2202      	movs	r2, #2
 800bb8c:	f00a ff6b 	bl	8016a66 <LeaveFrame>
 800bb90:	a801      	add	r0, sp, #4
 800bb92:	2101      	movs	r1, #1
 800bb94:	2203      	movs	r2, #3
 800bb96:	f00a ff66 	bl	8016a66 <LeaveFrame>
 800bb9a:	4620      	mov	r0, r4
 800bb9c:	f7f5 fb26 	bl	80011ec <_Unwind_Resume>

0800bba0 <kfun:konan.internal.IntBox.hashCode()ValueType>:
 800bba0:	b5d0      	push	{r4, r6, r7, lr}
 800bba2:	af02      	add	r7, sp, #8
 800bba4:	b084      	sub	sp, #16
 800bba6:	2100      	movs	r1, #0
 800bba8:	2202      	movs	r2, #2
 800bbaa:	e9cd 1000 	strd	r1, r0, [sp]
 800bbae:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800bbb2:	2101      	movs	r1, #1
 800bbb4:	6884      	ldr	r4, [r0, #8]
 800bbb6:	a802      	add	r0, sp, #8
 800bbb8:	f00a ff55 	bl	8016a66 <LeaveFrame>
 800bbbc:	4668      	mov	r0, sp
 800bbbe:	2101      	movs	r1, #1
 800bbc0:	2202      	movs	r2, #2
 800bbc2:	f00a ff50 	bl	8016a66 <LeaveFrame>
 800bbc6:	4620      	mov	r0, r4
 800bbc8:	b004      	add	sp, #16
 800bbca:	bdd0      	pop	{r4, r6, r7, pc}

0800bbcc <kfun:konan.internal.IntBox.toString()kotlin.String>:
 800bbcc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bbce:	af03      	add	r7, sp, #12
 800bbd0:	f84d bd04 	str.w	fp, [sp, #-4]!
 800bbd4:	b086      	sub	sp, #24
 800bbd6:	460c      	mov	r4, r1
 800bbd8:	2100      	movs	r1, #0
 800bbda:	e9cd 1001 	strd	r1, r0, [sp, #4]
 800bbde:	2202      	movs	r2, #2
 800bbe0:	e9cd 1103 	strd	r1, r1, [sp, #12]
 800bbe4:	2101      	movs	r1, #1
 800bbe6:	9005      	str	r0, [sp, #20]
 800bbe8:	6885      	ldr	r5, [r0, #8]
 800bbea:	a804      	add	r0, sp, #16
 800bbec:	f00a ff3b 	bl	8016a66 <LeaveFrame>
 800bbf0:	ae01      	add	r6, sp, #4
 800bbf2:	4628      	mov	r0, r5
 800bbf4:	f106 0108 	add.w	r1, r6, #8
 800bbf8:	f00b f87a 	bl	8016cf0 <Kotlin_Int_toString>
 800bbfc:	4605      	mov	r5, r0
 800bbfe:	4620      	mov	r0, r4
 800bc00:	4629      	mov	r1, r5
 800bc02:	f008 fcf2 	bl	80145ea <UpdateReturnRef>
 800bc06:	4630      	mov	r0, r6
 800bc08:	2101      	movs	r1, #1
 800bc0a:	2203      	movs	r2, #3
 800bc0c:	f00a ff2b 	bl	8016a66 <LeaveFrame>
 800bc10:	4628      	mov	r0, r5
 800bc12:	b006      	add	sp, #24
 800bc14:	f85d bb04 	ldr.w	fp, [sp], #4
 800bc18:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800bc1a <kfun:konan.internal.IntBox.equals(kotlin.Any?)ValueType>:
 800bc1a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bc1c:	af03      	add	r7, sp, #12
 800bc1e:	f84d bd04 	str.w	fp, [sp, #-4]!
 800bc22:	b086      	sub	sp, #24
 800bc24:	460d      	mov	r5, r1
 800bc26:	4606      	mov	r6, r0
 800bc28:	2400      	movs	r4, #0
 800bc2a:	2d00      	cmp	r5, #0
 800bc2c:	9602      	str	r6, [sp, #8]
 800bc2e:	9401      	str	r4, [sp, #4]
 800bc30:	9503      	str	r5, [sp, #12]
 800bc32:	d01d      	beq.n	800bc70 <kfun:konan.internal.IntBox.equals(kotlin.Any?)ValueType+0x56>
 800bc34:	f242 1140 	movw	r1, #8512	; 0x2140
 800bc38:	4628      	mov	r0, r5
 800bc3a:	f6c0 0102 	movt	r1, #2050	; 0x802
 800bc3e:	f009 f99b 	bl	8014f78 <IsInstance>
 800bc42:	07c0      	lsls	r0, r0, #31
 800bc44:	f04f 0400 	mov.w	r4, #0
 800bc48:	d012      	beq.n	800bc70 <kfun:konan.internal.IntBox.equals(kotlin.Any?)ValueType+0x56>
 800bc4a:	a804      	add	r0, sp, #16
 800bc4c:	e9cd 4604 	strd	r4, r6, [sp, #16]
 800bc50:	2101      	movs	r1, #1
 800bc52:	2202      	movs	r2, #2
 800bc54:	68b6      	ldr	r6, [r6, #8]
 800bc56:	f00a ff06 	bl	8016a66 <LeaveFrame>
 800bc5a:	a804      	add	r0, sp, #16
 800bc5c:	e9cd 4504 	strd	r4, r5, [sp, #16]
 800bc60:	2101      	movs	r1, #1
 800bc62:	2202      	movs	r2, #2
 800bc64:	68ad      	ldr	r5, [r5, #8]
 800bc66:	f00a fefe 	bl	8016a66 <LeaveFrame>
 800bc6a:	42ae      	cmp	r6, r5
 800bc6c:	bf08      	it	eq
 800bc6e:	2401      	moveq	r4, #1
 800bc70:	a801      	add	r0, sp, #4
 800bc72:	2102      	movs	r1, #2
 800bc74:	2203      	movs	r2, #3
 800bc76:	f00a fef6 	bl	8016a66 <LeaveFrame>
 800bc7a:	4620      	mov	r0, r4
 800bc7c:	b006      	add	sp, #24
 800bc7e:	f85d bb04 	ldr.w	fp, [sp], #4
 800bc82:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800bc84 <kfun:konan.internal.IntBox.toChar()ValueType>:
 800bc84:	b5d0      	push	{r4, r6, r7, lr}
 800bc86:	af02      	add	r7, sp, #8
 800bc88:	b084      	sub	sp, #16
 800bc8a:	2100      	movs	r1, #0
 800bc8c:	2202      	movs	r2, #2
 800bc8e:	e9cd 1000 	strd	r1, r0, [sp]
 800bc92:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800bc96:	2101      	movs	r1, #1
 800bc98:	6884      	ldr	r4, [r0, #8]
 800bc9a:	a802      	add	r0, sp, #8
 800bc9c:	f00a fee3 	bl	8016a66 <LeaveFrame>
 800bca0:	4620      	mov	r0, r4
 800bca2:	f00a ffa0 	bl	8016be6 <Kotlin_Int_toChar>
 800bca6:	4604      	mov	r4, r0
 800bca8:	4668      	mov	r0, sp
 800bcaa:	2101      	movs	r1, #1
 800bcac:	2202      	movs	r2, #2
 800bcae:	f00a feda 	bl	8016a66 <LeaveFrame>
 800bcb2:	4620      	mov	r0, r4
 800bcb4:	b004      	add	sp, #16
 800bcb6:	bdd0      	pop	{r4, r6, r7, pc}

0800bcb8 <kfun:konan.internal.IntBox.toFloat()ValueType>:
 800bcb8:	b5d0      	push	{r4, r6, r7, lr}
 800bcba:	af02      	add	r7, sp, #8
 800bcbc:	b084      	sub	sp, #16
 800bcbe:	2100      	movs	r1, #0
 800bcc0:	2202      	movs	r2, #2
 800bcc2:	e9cd 1000 	strd	r1, r0, [sp]
 800bcc6:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800bcca:	2101      	movs	r1, #1
 800bccc:	6884      	ldr	r4, [r0, #8]
 800bcce:	a802      	add	r0, sp, #8
 800bcd0:	f00a fec9 	bl	8016a66 <LeaveFrame>
 800bcd4:	4620      	mov	r0, r4
 800bcd6:	f00a ff8d 	bl	8016bf4 <Kotlin_Int_toFloat>
 800bcda:	4604      	mov	r4, r0
 800bcdc:	4668      	mov	r0, sp
 800bcde:	2101      	movs	r1, #1
 800bce0:	2202      	movs	r2, #2
 800bce2:	f00a fec0 	bl	8016a66 <LeaveFrame>
 800bce6:	4620      	mov	r0, r4
 800bce8:	b004      	add	sp, #16
 800bcea:	bdd0      	pop	{r4, r6, r7, pc}

0800bcec <kfun:konan.internal.IntBox.toShort()ValueType>:
 800bcec:	b5d0      	push	{r4, r6, r7, lr}
 800bcee:	af02      	add	r7, sp, #8
 800bcf0:	b084      	sub	sp, #16
 800bcf2:	2100      	movs	r1, #0
 800bcf4:	2202      	movs	r2, #2
 800bcf6:	e9cd 1000 	strd	r1, r0, [sp]
 800bcfa:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800bcfe:	2101      	movs	r1, #1
 800bd00:	6884      	ldr	r4, [r0, #8]
 800bd02:	a802      	add	r0, sp, #8
 800bd04:	f00a feaf 	bl	8016a66 <LeaveFrame>
 800bd08:	4620      	mov	r0, r4
 800bd0a:	f00a ff6e 	bl	8016bea <Kotlin_Int_toShort>
 800bd0e:	4604      	mov	r4, r0
 800bd10:	4668      	mov	r0, sp
 800bd12:	2101      	movs	r1, #1
 800bd14:	2202      	movs	r2, #2
 800bd16:	f00a fea6 	bl	8016a66 <LeaveFrame>
 800bd1a:	4620      	mov	r0, r4
 800bd1c:	b004      	add	sp, #16
 800bd1e:	bdd0      	pop	{r4, r6, r7, pc}

0800bd20 <kfun:konan.internal.IntBox.toLong()ValueType>:
 800bd20:	b5b0      	push	{r4, r5, r7, lr}
 800bd22:	af02      	add	r7, sp, #8
 800bd24:	b084      	sub	sp, #16
 800bd26:	2100      	movs	r1, #0
 800bd28:	2202      	movs	r2, #2
 800bd2a:	e9cd 1000 	strd	r1, r0, [sp]
 800bd2e:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800bd32:	2101      	movs	r1, #1
 800bd34:	6884      	ldr	r4, [r0, #8]
 800bd36:	a802      	add	r0, sp, #8
 800bd38:	f00a fe95 	bl	8016a66 <LeaveFrame>
 800bd3c:	4620      	mov	r0, r4
 800bd3e:	f00a ff57 	bl	8016bf0 <Kotlin_Int_toLong>
 800bd42:	4604      	mov	r4, r0
 800bd44:	460d      	mov	r5, r1
 800bd46:	4668      	mov	r0, sp
 800bd48:	2101      	movs	r1, #1
 800bd4a:	2202      	movs	r2, #2
 800bd4c:	f00a fe8b 	bl	8016a66 <LeaveFrame>
 800bd50:	4620      	mov	r0, r4
 800bd52:	4629      	mov	r1, r5
 800bd54:	b004      	add	sp, #16
 800bd56:	bdb0      	pop	{r4, r5, r7, pc}

0800bd58 <kfun:konan.internal.IntBox.toByte()ValueType>:
 800bd58:	b5d0      	push	{r4, r6, r7, lr}
 800bd5a:	af02      	add	r7, sp, #8
 800bd5c:	b084      	sub	sp, #16
 800bd5e:	2100      	movs	r1, #0
 800bd60:	2202      	movs	r2, #2
 800bd62:	e9cd 1000 	strd	r1, r0, [sp]
 800bd66:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800bd6a:	2101      	movs	r1, #1
 800bd6c:	6884      	ldr	r4, [r0, #8]
 800bd6e:	a802      	add	r0, sp, #8
 800bd70:	f00a fe79 	bl	8016a66 <LeaveFrame>
 800bd74:	4620      	mov	r0, r4
 800bd76:	f00a ff34 	bl	8016be2 <Kotlin_Int_toByte>
 800bd7a:	4604      	mov	r4, r0
 800bd7c:	4668      	mov	r0, sp
 800bd7e:	2101      	movs	r1, #1
 800bd80:	2202      	movs	r2, #2
 800bd82:	f00a fe70 	bl	8016a66 <LeaveFrame>
 800bd86:	4620      	mov	r0, r4
 800bd88:	b004      	add	sp, #16
 800bd8a:	bdd0      	pop	{r4, r6, r7, pc}

0800bd8c <kfun:konan.internal.IntBox.toDouble()ValueType>:
 800bd8c:	b5b0      	push	{r4, r5, r7, lr}
 800bd8e:	af02      	add	r7, sp, #8
 800bd90:	b084      	sub	sp, #16
 800bd92:	2100      	movs	r1, #0
 800bd94:	2202      	movs	r2, #2
 800bd96:	e9cd 1000 	strd	r1, r0, [sp]
 800bd9a:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800bd9e:	2101      	movs	r1, #1
 800bda0:	6884      	ldr	r4, [r0, #8]
 800bda2:	a802      	add	r0, sp, #8
 800bda4:	f00a fe5f 	bl	8016a66 <LeaveFrame>
 800bda8:	4620      	mov	r0, r4
 800bdaa:	f00a ff2a 	bl	8016c02 <Kotlin_Int_toDouble>
 800bdae:	4604      	mov	r4, r0
 800bdb0:	460d      	mov	r5, r1
 800bdb2:	4668      	mov	r0, sp
 800bdb4:	2101      	movs	r1, #1
 800bdb6:	2202      	movs	r2, #2
 800bdb8:	f00a fe55 	bl	8016a66 <LeaveFrame>
 800bdbc:	4620      	mov	r0, r4
 800bdbe:	4629      	mov	r1, r5
 800bdc0:	b004      	add	sp, #16
 800bdc2:	bdb0      	pop	{r4, r5, r7, pc}

0800bdc4 <kfun:konan.internal.IntBox.toInt()ValueType>:
 800bdc4:	b5d0      	push	{r4, r6, r7, lr}
 800bdc6:	af02      	add	r7, sp, #8
 800bdc8:	b084      	sub	sp, #16
 800bdca:	2100      	movs	r1, #0
 800bdcc:	2202      	movs	r2, #2
 800bdce:	e9cd 1000 	strd	r1, r0, [sp]
 800bdd2:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800bdd6:	2101      	movs	r1, #1
 800bdd8:	6884      	ldr	r4, [r0, #8]
 800bdda:	a802      	add	r0, sp, #8
 800bddc:	f00a fe43 	bl	8016a66 <LeaveFrame>
 800bde0:	4620      	mov	r0, r4
 800bde2:	f00a ff04 	bl	8016bee <Kotlin_Int_toInt>
 800bde6:	4668      	mov	r0, sp
 800bde8:	2101      	movs	r1, #1
 800bdea:	2202      	movs	r2, #2
 800bdec:	f00a fe3b 	bl	8016a66 <LeaveFrame>
 800bdf0:	4620      	mov	r0, r4
 800bdf2:	b004      	add	sp, #16
 800bdf4:	bdd0      	pop	{r4, r6, r7, pc}

0800bdf6 <kfun:konan.internal.IntBox.compareTo(kotlin.Int)ValueType>:
 800bdf6:	b5b0      	push	{r4, r5, r7, lr}
 800bdf8:	af02      	add	r7, sp, #8
 800bdfa:	b084      	sub	sp, #16
 800bdfc:	460c      	mov	r4, r1
 800bdfe:	2100      	movs	r1, #0
 800be00:	e9cd 1000 	strd	r1, r0, [sp]
 800be04:	2202      	movs	r2, #2
 800be06:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800be0a:	2101      	movs	r1, #1
 800be0c:	6885      	ldr	r5, [r0, #8]
 800be0e:	a802      	add	r0, sp, #8
 800be10:	f00a fe29 	bl	8016a66 <LeaveFrame>
 800be14:	4628      	mov	r0, r5
 800be16:	4621      	mov	r1, r4
 800be18:	f00a feb9 	bl	8016b8e <Kotlin_Int_compareTo_Int>
 800be1c:	4604      	mov	r4, r0
 800be1e:	4668      	mov	r0, sp
 800be20:	2101      	movs	r1, #1
 800be22:	2202      	movs	r2, #2
 800be24:	f00a fe1f 	bl	8016a66 <LeaveFrame>
 800be28:	4620      	mov	r0, r4
 800be2a:	b004      	add	sp, #16
 800be2c:	bdb0      	pop	{r4, r5, r7, pc}

0800be2e <kfun:konan.internal.IntBox.$<bridge-NNU>compareTo(kotlin.Int)ValueType(kotlin.Any?)ValueType>:
 800be2e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800be30:	af03      	add	r7, sp, #12
 800be32:	f84d bd04 	str.w	fp, [sp, #-4]!
 800be36:	b088      	sub	sp, #32
 800be38:	4604      	mov	r4, r0
 800be3a:	2600      	movs	r6, #0
 800be3c:	9402      	str	r4, [sp, #8]
 800be3e:	a806      	add	r0, sp, #24
 800be40:	9601      	str	r6, [sp, #4]
 800be42:	2202      	movs	r2, #2
 800be44:	9103      	str	r1, [sp, #12]
 800be46:	e9cd 6106 	strd	r6, r1, [sp, #24]
 800be4a:	688d      	ldr	r5, [r1, #8]
 800be4c:	2101      	movs	r1, #1
 800be4e:	f00a fe0a 	bl	8016a66 <LeaveFrame>
 800be52:	a806      	add	r0, sp, #24
 800be54:	e9cd 6404 	strd	r6, r4, [sp, #16]
 800be58:	e9cd 6406 	strd	r6, r4, [sp, #24]
 800be5c:	2101      	movs	r1, #1
 800be5e:	2202      	movs	r2, #2
 800be60:	68a4      	ldr	r4, [r4, #8]
 800be62:	f00a fe00 	bl	8016a66 <LeaveFrame>
 800be66:	4620      	mov	r0, r4
 800be68:	4629      	mov	r1, r5
 800be6a:	f00a fe90 	bl	8016b8e <Kotlin_Int_compareTo_Int>
 800be6e:	4604      	mov	r4, r0
 800be70:	a804      	add	r0, sp, #16
 800be72:	2101      	movs	r1, #1
 800be74:	2202      	movs	r2, #2
 800be76:	f00a fdf6 	bl	8016a66 <LeaveFrame>
 800be7a:	a801      	add	r0, sp, #4
 800be7c:	2102      	movs	r1, #2
 800be7e:	2203      	movs	r2, #3
 800be80:	f00a fdf1 	bl	8016a66 <LeaveFrame>
 800be84:	4620      	mov	r0, r4
 800be86:	b008      	add	sp, #32
 800be88:	f85d bb04 	ldr.w	fp, [sp], #4
 800be8c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800be8e <kfun:kotlin.ranges.IntRange.$<bridge-NNU>contains(kotlin.Int)ValueType(kotlin.Any?)ValueType>:
 800be8e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800be90:	af03      	add	r7, sp, #12
 800be92:	f84d 8d04 	str.w	r8, [sp, #-4]!
 800be96:	b088      	sub	sp, #32
 800be98:	4605      	mov	r5, r0
 800be9a:	2400      	movs	r4, #0
 800be9c:	9502      	str	r5, [sp, #8]
 800be9e:	a806      	add	r0, sp, #24
 800bea0:	9401      	str	r4, [sp, #4]
 800bea2:	2202      	movs	r2, #2
 800bea4:	9103      	str	r1, [sp, #12]
 800bea6:	e9cd 4106 	strd	r4, r1, [sp, #24]
 800beaa:	f8d1 8008 	ldr.w	r8, [r1, #8]
 800beae:	2101      	movs	r1, #1
 800beb0:	f00a fdd9 	bl	8016a66 <LeaveFrame>
 800beb4:	a806      	add	r0, sp, #24
 800beb6:	e9cd 4504 	strd	r4, r5, [sp, #16]
 800beba:	e9cd 4506 	strd	r4, r5, [sp, #24]
 800bebe:	2101      	movs	r1, #1
 800bec0:	2202      	movs	r2, #2
 800bec2:	692e      	ldr	r6, [r5, #16]
 800bec4:	f00a fdcf 	bl	8016a66 <LeaveFrame>
 800bec8:	4546      	cmp	r6, r8
 800beca:	dc0a      	bgt.n	800bee2 <kfun:kotlin.ranges.IntRange.$<bridge-NNU>contains(kotlin.Int)ValueType(kotlin.Any?)ValueType+0x54>
 800becc:	a806      	add	r0, sp, #24
 800bece:	e9cd 4506 	strd	r4, r5, [sp, #24]
 800bed2:	2101      	movs	r1, #1
 800bed4:	2202      	movs	r2, #2
 800bed6:	68ed      	ldr	r5, [r5, #12]
 800bed8:	f00a fdc5 	bl	8016a66 <LeaveFrame>
 800bedc:	4545      	cmp	r5, r8
 800bede:	bfa8      	it	ge
 800bee0:	2401      	movge	r4, #1
 800bee2:	a804      	add	r0, sp, #16
 800bee4:	2101      	movs	r1, #1
 800bee6:	2202      	movs	r2, #2
 800bee8:	f00a fdbd 	bl	8016a66 <LeaveFrame>
 800beec:	a801      	add	r0, sp, #4
 800beee:	2102      	movs	r1, #2
 800bef0:	2203      	movs	r2, #3
 800bef2:	f00a fdb8 	bl	8016a66 <LeaveFrame>
 800bef6:	4620      	mov	r0, r4
 800bef8:	b008      	add	sp, #32
 800befa:	f85d 8b04 	ldr.w	r8, [sp], #4
 800befe:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800bf00 <kfun:kotlin.ranges.IntRange.$<bridge-UN><get-start>()ValueType()kotlin.Any?>:
 800bf00:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bf02:	af03      	add	r7, sp, #12
 800bf04:	e92d 0b00 	stmdb	sp!, {r8, r9, fp}
 800bf08:	b08c      	sub	sp, #48	; 0x30
 800bf0a:	2600      	movs	r6, #0
 800bf0c:	4688      	mov	r8, r1
 800bf0e:	9603      	str	r6, [sp, #12]
 800bf10:	2101      	movs	r1, #1
 800bf12:	e9cd 6001 	strd	r6, r0, [sp, #4]
 800bf16:	2202      	movs	r2, #2
 800bf18:	e9cd 6008 	strd	r6, r0, [sp, #32]
 800bf1c:	e9cd 600a 	strd	r6, r0, [sp, #40]	; 0x28
 800bf20:	6904      	ldr	r4, [r0, #16]
 800bf22:	a80a      	add	r0, sp, #40	; 0x28
 800bf24:	f00a fd9f 	bl	8016a66 <LeaveFrame>
 800bf28:	a808      	add	r0, sp, #32
 800bf2a:	2101      	movs	r1, #1
 800bf2c:	2202      	movs	r2, #2
 800bf2e:	f00a fd9a 	bl	8016a66 <LeaveFrame>
 800bf32:	f10d 0910 	add.w	r9, sp, #16
 800bf36:	f242 1040 	movw	r0, #8512	; 0x2140
 800bf3a:	f049 0104 	orr.w	r1, r9, #4
 800bf3e:	f6c0 0002 	movt	r0, #2050	; 0x802
 800bf42:	e9cd 6604 	strd	r6, r6, [sp, #16]
 800bf46:	f00a fcd8 	bl	80168fa <AllocInstance>
 800bf4a:	4605      	mov	r5, r0
 800bf4c:	a80a      	add	r0, sp, #40	; 0x28
 800bf4e:	2101      	movs	r1, #1
 800bf50:	2202      	movs	r2, #2
 800bf52:	e9cd 6506 	strd	r6, r5, [sp, #24]
 800bf56:	e9cd 6508 	strd	r6, r5, [sp, #32]
 800bf5a:	e9cd 650a 	strd	r6, r5, [sp, #40]	; 0x28
 800bf5e:	f00a fd82 	bl	8016a66 <LeaveFrame>
 800bf62:	a808      	add	r0, sp, #32
 800bf64:	2101      	movs	r1, #1
 800bf66:	2202      	movs	r2, #2
 800bf68:	f00a fd7d 	bl	8016a66 <LeaveFrame>
 800bf6c:	a806      	add	r0, sp, #24
 800bf6e:	2101      	movs	r1, #1
 800bf70:	2202      	movs	r2, #2
 800bf72:	60ac      	str	r4, [r5, #8]
 800bf74:	f00a fd77 	bl	8016a66 <LeaveFrame>
 800bf78:	ac01      	add	r4, sp, #4
 800bf7a:	4629      	mov	r1, r5
 800bf7c:	f104 0008 	add.w	r0, r4, #8
 800bf80:	f008 fb33 	bl	80145ea <UpdateReturnRef>
 800bf84:	4648      	mov	r0, r9
 800bf86:	2100      	movs	r1, #0
 800bf88:	2202      	movs	r2, #2
 800bf8a:	f00a fd6c 	bl	8016a66 <LeaveFrame>
 800bf8e:	4640      	mov	r0, r8
 800bf90:	4629      	mov	r1, r5
 800bf92:	f008 fb2a 	bl	80145ea <UpdateReturnRef>
 800bf96:	4620      	mov	r0, r4
 800bf98:	2101      	movs	r1, #1
 800bf9a:	2203      	movs	r2, #3
 800bf9c:	f00a fd63 	bl	8016a66 <LeaveFrame>
 800bfa0:	4628      	mov	r0, r5
 800bfa2:	b00c      	add	sp, #48	; 0x30
 800bfa4:	e8bd 0b00 	ldmia.w	sp!, {r8, r9, fp}
 800bfa8:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800bfaa <kfun:kotlin.ranges.IntRange.<get-start>()ValueType>:
 800bfaa:	b5d0      	push	{r4, r6, r7, lr}
 800bfac:	af02      	add	r7, sp, #8
 800bfae:	b084      	sub	sp, #16
 800bfb0:	2100      	movs	r1, #0
 800bfb2:	2202      	movs	r2, #2
 800bfb4:	e9cd 1000 	strd	r1, r0, [sp]
 800bfb8:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800bfbc:	2101      	movs	r1, #1
 800bfbe:	6904      	ldr	r4, [r0, #16]
 800bfc0:	a802      	add	r0, sp, #8
 800bfc2:	f00a fd50 	bl	8016a66 <LeaveFrame>
 800bfc6:	4668      	mov	r0, sp
 800bfc8:	2101      	movs	r1, #1
 800bfca:	2202      	movs	r2, #2
 800bfcc:	f00a fd4b 	bl	8016a66 <LeaveFrame>
 800bfd0:	4620      	mov	r0, r4
 800bfd2:	b004      	add	sp, #16
 800bfd4:	bdd0      	pop	{r4, r6, r7, pc}

0800bfd6 <kfun:kotlin.ranges.IntRange.$<bridge-UN><get-endInclusive>()ValueType()kotlin.Any?>:
 800bfd6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bfd8:	af03      	add	r7, sp, #12
 800bfda:	e92d 0b00 	stmdb	sp!, {r8, r9, fp}
 800bfde:	b08c      	sub	sp, #48	; 0x30
 800bfe0:	2600      	movs	r6, #0
 800bfe2:	4688      	mov	r8, r1
 800bfe4:	9603      	str	r6, [sp, #12]
 800bfe6:	2101      	movs	r1, #1
 800bfe8:	e9cd 6001 	strd	r6, r0, [sp, #4]
 800bfec:	2202      	movs	r2, #2
 800bfee:	e9cd 6008 	strd	r6, r0, [sp, #32]
 800bff2:	e9cd 600a 	strd	r6, r0, [sp, #40]	; 0x28
 800bff6:	68c4      	ldr	r4, [r0, #12]
 800bff8:	a80a      	add	r0, sp, #40	; 0x28
 800bffa:	f00a fd34 	bl	8016a66 <LeaveFrame>
 800bffe:	a808      	add	r0, sp, #32
 800c000:	2101      	movs	r1, #1
 800c002:	2202      	movs	r2, #2
 800c004:	f00a fd2f 	bl	8016a66 <LeaveFrame>
 800c008:	f10d 0910 	add.w	r9, sp, #16
 800c00c:	f242 1040 	movw	r0, #8512	; 0x2140
 800c010:	f049 0104 	orr.w	r1, r9, #4
 800c014:	f6c0 0002 	movt	r0, #2050	; 0x802
 800c018:	e9cd 6604 	strd	r6, r6, [sp, #16]
 800c01c:	f00a fc6d 	bl	80168fa <AllocInstance>
 800c020:	4605      	mov	r5, r0
 800c022:	a80a      	add	r0, sp, #40	; 0x28
 800c024:	2101      	movs	r1, #1
 800c026:	2202      	movs	r2, #2
 800c028:	e9cd 6506 	strd	r6, r5, [sp, #24]
 800c02c:	e9cd 6508 	strd	r6, r5, [sp, #32]
 800c030:	e9cd 650a 	strd	r6, r5, [sp, #40]	; 0x28
 800c034:	f00a fd17 	bl	8016a66 <LeaveFrame>
 800c038:	a808      	add	r0, sp, #32
 800c03a:	2101      	movs	r1, #1
 800c03c:	2202      	movs	r2, #2
 800c03e:	f00a fd12 	bl	8016a66 <LeaveFrame>
 800c042:	a806      	add	r0, sp, #24
 800c044:	2101      	movs	r1, #1
 800c046:	2202      	movs	r2, #2
 800c048:	60ac      	str	r4, [r5, #8]
 800c04a:	f00a fd0c 	bl	8016a66 <LeaveFrame>
 800c04e:	ac01      	add	r4, sp, #4
 800c050:	4629      	mov	r1, r5
 800c052:	f104 0008 	add.w	r0, r4, #8
 800c056:	f008 fac8 	bl	80145ea <UpdateReturnRef>
 800c05a:	4648      	mov	r0, r9
 800c05c:	2100      	movs	r1, #0
 800c05e:	2202      	movs	r2, #2
 800c060:	f00a fd01 	bl	8016a66 <LeaveFrame>
 800c064:	4640      	mov	r0, r8
 800c066:	4629      	mov	r1, r5
 800c068:	f008 fabf 	bl	80145ea <UpdateReturnRef>
 800c06c:	4620      	mov	r0, r4
 800c06e:	2101      	movs	r1, #1
 800c070:	2203      	movs	r2, #3
 800c072:	f00a fcf8 	bl	8016a66 <LeaveFrame>
 800c076:	4628      	mov	r0, r5
 800c078:	b00c      	add	sp, #48	; 0x30
 800c07a:	e8bd 0b00 	ldmia.w	sp!, {r8, r9, fp}
 800c07e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c080 <kfun:kotlin.ranges.IntRange.<get-endInclusive>()ValueType>:
 800c080:	b5d0      	push	{r4, r6, r7, lr}
 800c082:	af02      	add	r7, sp, #8
 800c084:	b084      	sub	sp, #16
 800c086:	2100      	movs	r1, #0
 800c088:	2202      	movs	r2, #2
 800c08a:	e9cd 1000 	strd	r1, r0, [sp]
 800c08e:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800c092:	2101      	movs	r1, #1
 800c094:	68c4      	ldr	r4, [r0, #12]
 800c096:	a802      	add	r0, sp, #8
 800c098:	f00a fce5 	bl	8016a66 <LeaveFrame>
 800c09c:	4668      	mov	r0, sp
 800c09e:	2101      	movs	r1, #1
 800c0a0:	2202      	movs	r2, #2
 800c0a2:	f00a fce0 	bl	8016a66 <LeaveFrame>
 800c0a6:	4620      	mov	r0, r4
 800c0a8:	b004      	add	sp, #16
 800c0aa:	bdd0      	pop	{r4, r6, r7, pc}

0800c0ac <kfun:kotlin.ranges.IntProgression.hashCode()ValueType>:
 800c0ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c0ae:	af03      	add	r7, sp, #12
 800c0b0:	f84d 8d04 	str.w	r8, [sp, #-4]!
 800c0b4:	b084      	sub	sp, #16
 800c0b6:	4604      	mov	r4, r0
 800c0b8:	2000      	movs	r0, #0
 800c0ba:	e9cd 0400 	strd	r0, r4, [sp]
 800c0be:	6820      	ldr	r0, [r4, #0]
 800c0c0:	6d41      	ldr	r1, [r0, #84]	; 0x54
 800c0c2:	4620      	mov	r0, r4
 800c0c4:	4788      	blx	r1
 800c0c6:	07c0      	lsls	r0, r0, #31
 800c0c8:	d002      	beq.n	800c0d0 <kfun:kotlin.ranges.IntProgression.hashCode()ValueType+0x24>
 800c0ca:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 800c0ce:	e028      	b.n	800c122 <kfun:kotlin.ranges.IntProgression.hashCode()ValueType+0x76>
 800c0d0:	2500      	movs	r5, #0
 800c0d2:	a802      	add	r0, sp, #8
 800c0d4:	e9cd 5402 	strd	r5, r4, [sp, #8]
 800c0d8:	2101      	movs	r1, #1
 800c0da:	2202      	movs	r2, #2
 800c0dc:	f8d4 8010 	ldr.w	r8, [r4, #16]
 800c0e0:	f00a fcc1 	bl	8016a66 <LeaveFrame>
 800c0e4:	a802      	add	r0, sp, #8
 800c0e6:	e9cd 5402 	strd	r5, r4, [sp, #8]
 800c0ea:	2101      	movs	r1, #1
 800c0ec:	2202      	movs	r2, #2
 800c0ee:	68e6      	ldr	r6, [r4, #12]
 800c0f0:	f00a fcb9 	bl	8016a66 <LeaveFrame>
 800c0f4:	a802      	add	r0, sp, #8
 800c0f6:	e9cd 5402 	strd	r5, r4, [sp, #8]
 800c0fa:	2101      	movs	r1, #1
 800c0fc:	2202      	movs	r2, #2
 800c0fe:	68a4      	ldr	r4, [r4, #8]
 800c100:	f00a fcb1 	bl	8016a66 <LeaveFrame>
 800c104:	201f      	movs	r0, #31
 800c106:	4641      	mov	r1, r8
 800c108:	f00a fd63 	bl	8016bd2 <Kotlin_Int_times_Int>
 800c10c:	4631      	mov	r1, r6
 800c10e:	f00a fd49 	bl	8016ba4 <Kotlin_Int_plus_Int>
 800c112:	4601      	mov	r1, r0
 800c114:	201f      	movs	r0, #31
 800c116:	f00a fd5c 	bl	8016bd2 <Kotlin_Int_times_Int>
 800c11a:	4621      	mov	r1, r4
 800c11c:	f00a fd42 	bl	8016ba4 <Kotlin_Int_plus_Int>
 800c120:	4604      	mov	r4, r0
 800c122:	4668      	mov	r0, sp
 800c124:	2101      	movs	r1, #1
 800c126:	2202      	movs	r2, #2
 800c128:	f00a fc9d 	bl	8016a66 <LeaveFrame>
 800c12c:	4620      	mov	r0, r4
 800c12e:	b004      	add	sp, #16
 800c130:	f85d 8b04 	ldr.w	r8, [sp], #4
 800c134:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c136:	4604      	mov	r4, r0
 800c138:	4668      	mov	r0, sp
 800c13a:	2101      	movs	r1, #1
 800c13c:	2202      	movs	r2, #2
 800c13e:	f00a fc92 	bl	8016a66 <LeaveFrame>
 800c142:	4620      	mov	r0, r4
 800c144:	f7f5 f852 	bl	80011ec <_Unwind_Resume>

0800c148 <kfun:kotlin.ranges.IntProgression.toString()kotlin.String>:
 800c148:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c14a:	af03      	add	r7, sp, #12
 800c14c:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 800c150:	b09b      	sub	sp, #108	; 0x6c
 800c152:	46e9      	mov	r9, sp
 800c154:	4688      	mov	r8, r1
 800c156:	4604      	mov	r4, r0
 800c158:	4648      	mov	r0, r9
 800c15a:	2148      	movs	r1, #72	; 0x48
 800c15c:	f00f f9cc 	bl	801b4f8 <__aeabi_memclr>
 800c160:	2600      	movs	r6, #0
 800c162:	a812      	add	r0, sp, #72	; 0x48
 800c164:	9401      	str	r4, [sp, #4]
 800c166:	2101      	movs	r1, #1
 800c168:	e9cd 6412 	strd	r6, r4, [sp, #72]	; 0x48
 800c16c:	2202      	movs	r2, #2
 800c16e:	68a4      	ldr	r4, [r4, #8]
 800c170:	f00a fc79 	bl	8016a66 <LeaveFrame>
 800c174:	2c01      	cmp	r4, #1
 800c176:	f2c0 8090 	blt.w	800c29a <kfun:kotlin.ranges.IntProgression.toString()kotlin.String+0x152>
 800c17a:	f641 10f0 	movw	r0, #6640	; 0x19f0
 800c17e:	f109 0108 	add.w	r1, r9, #8
 800c182:	f6c0 0002 	movt	r0, #2050	; 0x802
 800c186:	f109 040c 	add.w	r4, r9, #12
 800c18a:	f00a fbb6 	bl	80168fa <AllocInstance>
 800c18e:	4605      	mov	r5, r0
 800c190:	210a      	movs	r1, #10
 800c192:	e9cd 6512 	strd	r6, r5, [sp, #72]	; 0x48
 800c196:	f7fe fcde 	bl	800ab56 <kfun:kotlin.text.StringBuilder.<init>(kotlin.Int)kotlin.text.StringBuilder>
 800c19a:	a812      	add	r0, sp, #72	; 0x48
 800c19c:	2101      	movs	r1, #1
 800c19e:	2202      	movs	r2, #2
 800c1a0:	f00a fc61 	bl	8016a66 <LeaveFrame>
 800c1a4:	4620      	mov	r0, r4
 800c1a6:	4629      	mov	r1, r5
 800c1a8:	f008 f812 	bl	80141d0 <UpdateRef>
 800c1ac:	9801      	ldr	r0, [sp, #4]
 800c1ae:	ad12      	add	r5, sp, #72	; 0x48
 800c1b0:	9c03      	ldr	r4, [sp, #12]
 800c1b2:	2101      	movs	r1, #1
 800c1b4:	2202      	movs	r2, #2
 800c1b6:	e9cd 6012 	strd	r6, r0, [sp, #72]	; 0x48
 800c1ba:	6906      	ldr	r6, [r0, #16]
 800c1bc:	4628      	mov	r0, r5
 800c1be:	f00a fc52 	bl	8016a66 <LeaveFrame>
 800c1c2:	f109 0210 	add.w	r2, r9, #16
 800c1c6:	4620      	mov	r0, r4
 800c1c8:	4631      	mov	r1, r6
 800c1ca:	f7fe faec 	bl	800a7a6 <kfun:kotlin.text.StringBuilder.append(kotlin.Int)kotlin.text.StringBuilder>
 800c1ce:	f105 0b0c 	add.w	fp, r5, #12
 800c1d2:	9e03      	ldr	r6, [sp, #12]
 800c1d4:	f641 3034 	movw	r0, #6964	; 0x1b34
 800c1d8:	2400      	movs	r4, #0
 800c1da:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800c1de:	4659      	mov	r1, fp
 800c1e0:	e9cd 4415 	strd	r4, r4, [sp, #84]	; 0x54
 800c1e4:	e9cd 4612 	strd	r4, r6, [sp, #72]	; 0x48
 800c1e8:	9014      	str	r0, [sp, #80]	; 0x50
 800c1ea:	f008 fffb 	bl	80151e4 <Kotlin_String_toCharArray>
 800c1ee:	f105 0a10 	add.w	sl, r5, #16
 800c1f2:	4601      	mov	r1, r0
 800c1f4:	4630      	mov	r0, r6
 800c1f6:	4652      	mov	r2, sl
 800c1f8:	f7fd ffcb 	bl	800a192 <kfun:kotlin.text.StringBuilder.append(kotlin.CharArray)kotlin.text.StringBuilder>
 800c1fc:	4601      	mov	r1, r0
 800c1fe:	f109 0014 	add.w	r0, r9, #20
 800c202:	f109 0518 	add.w	r5, r9, #24
 800c206:	f008 f9f0 	bl	80145ea <UpdateReturnRef>
 800c20a:	a812      	add	r0, sp, #72	; 0x48
 800c20c:	2102      	movs	r1, #2
 800c20e:	2205      	movs	r2, #5
 800c210:	f00a fc29 	bl	8016a66 <LeaveFrame>
 800c214:	9801      	ldr	r0, [sp, #4]
 800c216:	2101      	movs	r1, #1
 800c218:	9e03      	ldr	r6, [sp, #12]
 800c21a:	2202      	movs	r2, #2
 800c21c:	e9cd 4012 	strd	r4, r0, [sp, #72]	; 0x48
 800c220:	68c4      	ldr	r4, [r0, #12]
 800c222:	a812      	add	r0, sp, #72	; 0x48
 800c224:	f00a fc1f 	bl	8016a66 <LeaveFrame>
 800c228:	4630      	mov	r0, r6
 800c22a:	4621      	mov	r1, r4
 800c22c:	462a      	mov	r2, r5
 800c22e:	f7fe faba 	bl	800a7a6 <kfun:kotlin.text.StringBuilder.append(kotlin.Int)kotlin.text.StringBuilder>
 800c232:	9c03      	ldr	r4, [sp, #12]
 800c234:	f641 4010 	movw	r0, #7184	; 0x1c10
 800c238:	2600      	movs	r6, #0
 800c23a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800c23e:	4659      	mov	r1, fp
 800c240:	e9cd 6615 	strd	r6, r6, [sp, #84]	; 0x54
 800c244:	e9cd 6412 	strd	r6, r4, [sp, #72]	; 0x48
 800c248:	9014      	str	r0, [sp, #80]	; 0x50
 800c24a:	f008 ffcb 	bl	80151e4 <Kotlin_String_toCharArray>
 800c24e:	4601      	mov	r1, r0
 800c250:	4620      	mov	r0, r4
 800c252:	4652      	mov	r2, sl
 800c254:	f7fd ff9d 	bl	800a192 <kfun:kotlin.text.StringBuilder.append(kotlin.CharArray)kotlin.text.StringBuilder>
 800c258:	4601      	mov	r1, r0
 800c25a:	f109 001c 	add.w	r0, r9, #28
 800c25e:	f109 0420 	add.w	r4, r9, #32
 800c262:	f008 f9c2 	bl	80145ea <UpdateReturnRef>
 800c266:	a812      	add	r0, sp, #72	; 0x48
 800c268:	2102      	movs	r1, #2
 800c26a:	2205      	movs	r2, #5
 800c26c:	f00a fbfb 	bl	8016a66 <LeaveFrame>
 800c270:	9801      	ldr	r0, [sp, #4]
 800c272:	f10d 0a48 	add.w	sl, sp, #72	; 0x48
 800c276:	9d03      	ldr	r5, [sp, #12]
 800c278:	2101      	movs	r1, #1
 800c27a:	2202      	movs	r2, #2
 800c27c:	e9cd 6012 	strd	r6, r0, [sp, #72]	; 0x48
 800c280:	6886      	ldr	r6, [r0, #8]
 800c282:	4650      	mov	r0, sl
 800c284:	f00a fbef 	bl	8016a66 <LeaveFrame>
 800c288:	4628      	mov	r0, r5
 800c28a:	4631      	mov	r1, r6
 800c28c:	4622      	mov	r2, r4
 800c28e:	f7fe fa8a 	bl	800a7a6 <kfun:kotlin.text.StringBuilder.append(kotlin.Int)kotlin.text.StringBuilder>
 800c292:	f109 0924 	add.w	r9, r9, #36	; 0x24
 800c296:	9803      	ldr	r0, [sp, #12]
 800c298:	e091      	b.n	800c3be <kfun:kotlin.ranges.IntProgression.toString()kotlin.String+0x276>
 800c29a:	f641 10f0 	movw	r0, #6640	; 0x19f0
 800c29e:	f109 0128 	add.w	r1, r9, #40	; 0x28
 800c2a2:	f6c0 0002 	movt	r0, #2050	; 0x802
 800c2a6:	f109 042c 	add.w	r4, r9, #44	; 0x2c
 800c2aa:	f00a fb26 	bl	80168fa <AllocInstance>
 800c2ae:	4605      	mov	r5, r0
 800c2b0:	210a      	movs	r1, #10
 800c2b2:	e9cd 6512 	strd	r6, r5, [sp, #72]	; 0x48
 800c2b6:	f7fe fc4e 	bl	800ab56 <kfun:kotlin.text.StringBuilder.<init>(kotlin.Int)kotlin.text.StringBuilder>
 800c2ba:	a812      	add	r0, sp, #72	; 0x48
 800c2bc:	2101      	movs	r1, #1
 800c2be:	2202      	movs	r2, #2
 800c2c0:	f00a fbd1 	bl	8016a66 <LeaveFrame>
 800c2c4:	4620      	mov	r0, r4
 800c2c6:	4629      	mov	r1, r5
 800c2c8:	f007 ff82 	bl	80141d0 <UpdateRef>
 800c2cc:	9801      	ldr	r0, [sp, #4]
 800c2ce:	ad12      	add	r5, sp, #72	; 0x48
 800c2d0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800c2d2:	2101      	movs	r1, #1
 800c2d4:	2202      	movs	r2, #2
 800c2d6:	e9cd 6012 	strd	r6, r0, [sp, #72]	; 0x48
 800c2da:	6906      	ldr	r6, [r0, #16]
 800c2dc:	4628      	mov	r0, r5
 800c2de:	f00a fbc2 	bl	8016a66 <LeaveFrame>
 800c2e2:	f109 0230 	add.w	r2, r9, #48	; 0x30
 800c2e6:	4620      	mov	r0, r4
 800c2e8:	4631      	mov	r1, r6
 800c2ea:	f7fe fa5c 	bl	800a7a6 <kfun:kotlin.text.StringBuilder.append(kotlin.Int)kotlin.text.StringBuilder>
 800c2ee:	f105 0b0c 	add.w	fp, r5, #12
 800c2f2:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800c2f4:	f641 30f0 	movw	r0, #7152	; 0x1bf0
 800c2f8:	2400      	movs	r4, #0
 800c2fa:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800c2fe:	4659      	mov	r1, fp
 800c300:	e9cd 4415 	strd	r4, r4, [sp, #84]	; 0x54
 800c304:	e9cd 4612 	strd	r4, r6, [sp, #72]	; 0x48
 800c308:	9014      	str	r0, [sp, #80]	; 0x50
 800c30a:	f008 ff6b 	bl	80151e4 <Kotlin_String_toCharArray>
 800c30e:	f105 0a10 	add.w	sl, r5, #16
 800c312:	4601      	mov	r1, r0
 800c314:	4630      	mov	r0, r6
 800c316:	4652      	mov	r2, sl
 800c318:	f7fd ff3b 	bl	800a192 <kfun:kotlin.text.StringBuilder.append(kotlin.CharArray)kotlin.text.StringBuilder>
 800c31c:	4601      	mov	r1, r0
 800c31e:	f109 0034 	add.w	r0, r9, #52	; 0x34
 800c322:	f109 0538 	add.w	r5, r9, #56	; 0x38
 800c326:	f008 f960 	bl	80145ea <UpdateReturnRef>
 800c32a:	a812      	add	r0, sp, #72	; 0x48
 800c32c:	2102      	movs	r1, #2
 800c32e:	2205      	movs	r2, #5
 800c330:	f00a fb99 	bl	8016a66 <LeaveFrame>
 800c334:	9801      	ldr	r0, [sp, #4]
 800c336:	2101      	movs	r1, #1
 800c338:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800c33a:	2202      	movs	r2, #2
 800c33c:	e9cd 4012 	strd	r4, r0, [sp, #72]	; 0x48
 800c340:	68c4      	ldr	r4, [r0, #12]
 800c342:	a812      	add	r0, sp, #72	; 0x48
 800c344:	f00a fb8f 	bl	8016a66 <LeaveFrame>
 800c348:	4630      	mov	r0, r6
 800c34a:	4621      	mov	r1, r4
 800c34c:	462a      	mov	r2, r5
 800c34e:	f7fe fa2a 	bl	800a7a6 <kfun:kotlin.text.StringBuilder.append(kotlin.Int)kotlin.text.StringBuilder>
 800c352:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800c354:	f641 4010 	movw	r0, #7184	; 0x1c10
 800c358:	2600      	movs	r6, #0
 800c35a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800c35e:	4659      	mov	r1, fp
 800c360:	e9cd 6615 	strd	r6, r6, [sp, #84]	; 0x54
 800c364:	e9cd 6412 	strd	r6, r4, [sp, #72]	; 0x48
 800c368:	9014      	str	r0, [sp, #80]	; 0x50
 800c36a:	f008 ff3b 	bl	80151e4 <Kotlin_String_toCharArray>
 800c36e:	4601      	mov	r1, r0
 800c370:	4620      	mov	r0, r4
 800c372:	4652      	mov	r2, sl
 800c374:	f7fd ff0d 	bl	800a192 <kfun:kotlin.text.StringBuilder.append(kotlin.CharArray)kotlin.text.StringBuilder>
 800c378:	4601      	mov	r1, r0
 800c37a:	f109 003c 	add.w	r0, r9, #60	; 0x3c
 800c37e:	f109 0440 	add.w	r4, r9, #64	; 0x40
 800c382:	f008 f932 	bl	80145ea <UpdateReturnRef>
 800c386:	a812      	add	r0, sp, #72	; 0x48
 800c388:	2102      	movs	r1, #2
 800c38a:	2205      	movs	r2, #5
 800c38c:	f00a fb6b 	bl	8016a66 <LeaveFrame>
 800c390:	9801      	ldr	r0, [sp, #4]
 800c392:	f10d 0a48 	add.w	sl, sp, #72	; 0x48
 800c396:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800c398:	2101      	movs	r1, #1
 800c39a:	2202      	movs	r2, #2
 800c39c:	e9cd 6012 	strd	r6, r0, [sp, #72]	; 0x48
 800c3a0:	6886      	ldr	r6, [r0, #8]
 800c3a2:	4650      	mov	r0, sl
 800c3a4:	f00a fb5f 	bl	8016a66 <LeaveFrame>
 800c3a8:	4630      	mov	r0, r6
 800c3aa:	f00a fc16 	bl	8016bda <Kotlin_Int_unaryMinus>
 800c3ae:	4601      	mov	r1, r0
 800c3b0:	4628      	mov	r0, r5
 800c3b2:	4622      	mov	r2, r4
 800c3b4:	f7fe f9f7 	bl	800a7a6 <kfun:kotlin.text.StringBuilder.append(kotlin.Int)kotlin.text.StringBuilder>
 800c3b8:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800c3ba:	f109 0944 	add.w	r9, r9, #68	; 0x44
 800c3be:	2400      	movs	r4, #0
 800c3c0:	ae18      	add	r6, sp, #96	; 0x60
 800c3c2:	9415      	str	r4, [sp, #84]	; 0x54
 800c3c4:	9414      	str	r4, [sp, #80]	; 0x50
 800c3c6:	9412      	str	r4, [sp, #72]	; 0x48
 800c3c8:	941a      	str	r4, [sp, #104]	; 0x68
 800c3ca:	9418      	str	r4, [sp, #96]	; 0x60
 800c3cc:	9013      	str	r0, [sp, #76]	; 0x4c
 800c3ce:	9019      	str	r0, [sp, #100]	; 0x64
 800c3d0:	68c5      	ldr	r5, [r0, #12]
 800c3d2:	f106 0008 	add.w	r0, r6, #8
 800c3d6:	4629      	mov	r1, r5
 800c3d8:	f007 fefa 	bl	80141d0 <UpdateRef>
 800c3dc:	f10a 0008 	add.w	r0, sl, #8
 800c3e0:	4629      	mov	r1, r5
 800c3e2:	f008 f902 	bl	80145ea <UpdateReturnRef>
 800c3e6:	4630      	mov	r0, r6
 800c3e8:	2101      	movs	r1, #1
 800c3ea:	2203      	movs	r2, #3
 800c3ec:	f00a fb3b 	bl	8016a66 <LeaveFrame>
 800c3f0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800c3f2:	2101      	movs	r1, #1
 800c3f4:	9418      	str	r4, [sp, #96]	; 0x60
 800c3f6:	2202      	movs	r2, #2
 800c3f8:	9019      	str	r0, [sp, #100]	; 0x64
 800c3fa:	6886      	ldr	r6, [r0, #8]
 800c3fc:	a818      	add	r0, sp, #96	; 0x60
 800c3fe:	f00a fb32 	bl	8016a66 <LeaveFrame>
 800c402:	f10a 030c 	add.w	r3, sl, #12
 800c406:	4628      	mov	r0, r5
 800c408:	2100      	movs	r1, #0
 800c40a:	4632      	mov	r2, r6
 800c40c:	f008 fea1 	bl	8015152 <Kotlin_String_fromCharArray>
 800c410:	4605      	mov	r5, r0
 800c412:	4648      	mov	r0, r9
 800c414:	4629      	mov	r1, r5
 800c416:	f008 f8e8 	bl	80145ea <UpdateReturnRef>
 800c41a:	4650      	mov	r0, sl
 800c41c:	2101      	movs	r1, #1
 800c41e:	2204      	movs	r2, #4
 800c420:	f00a fb21 	bl	8016a66 <LeaveFrame>
 800c424:	4640      	mov	r0, r8
 800c426:	4629      	mov	r1, r5
 800c428:	f008 f8df 	bl	80145ea <UpdateReturnRef>
 800c42c:	4668      	mov	r0, sp
 800c42e:	2101      	movs	r1, #1
 800c430:	2212      	movs	r2, #18
 800c432:	f00a fb18 	bl	8016a66 <LeaveFrame>
 800c436:	4628      	mov	r0, r5
 800c438:	b01b      	add	sp, #108	; 0x6c
 800c43a:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 800c43e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c440:	e001      	b.n	800c446 <kfun:kotlin.ranges.IntProgression.toString()kotlin.String+0x2fe>
 800c442:	e000      	b.n	800c446 <kfun:kotlin.ranges.IntProgression.toString()kotlin.String+0x2fe>
 800c444:	e7ff      	b.n	800c446 <kfun:kotlin.ranges.IntProgression.toString()kotlin.String+0x2fe>
 800c446:	4604      	mov	r4, r0
 800c448:	a812      	add	r0, sp, #72	; 0x48
 800c44a:	2102      	movs	r1, #2
 800c44c:	2205      	movs	r2, #5
 800c44e:	f00a fb0a 	bl	8016a66 <LeaveFrame>
 800c452:	e000      	b.n	800c456 <kfun:kotlin.ranges.IntProgression.toString()kotlin.String+0x30e>
 800c454:	4604      	mov	r4, r0
 800c456:	4668      	mov	r0, sp
 800c458:	2101      	movs	r1, #1
 800c45a:	2212      	movs	r2, #18
 800c45c:	f00a fb03 	bl	8016a66 <LeaveFrame>
 800c460:	4620      	mov	r0, r4
 800c462:	f7f4 fec3 	bl	80011ec <_Unwind_Resume>

0800c466 <kfun:kotlin.ranges.IntProgression.equals(kotlin.Any?)ValueType>:
 800c466:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c468:	af03      	add	r7, sp, #12
 800c46a:	e92d 0b00 	stmdb	sp!, {r8, r9, fp}
 800c46e:	b086      	sub	sp, #24
 800c470:	460c      	mov	r4, r1
 800c472:	4606      	mov	r6, r0
 800c474:	2500      	movs	r5, #0
 800c476:	2c00      	cmp	r4, #0
 800c478:	9602      	str	r6, [sp, #8]
 800c47a:	9501      	str	r5, [sp, #4]
 800c47c:	9403      	str	r4, [sp, #12]
 800c47e:	d055      	beq.n	800c52c <kfun:kotlin.ranges.IntProgression.equals(kotlin.Any?)ValueType+0xc6>
 800c480:	f242 31c0 	movw	r1, #9152	; 0x23c0
 800c484:	4620      	mov	r0, r4
 800c486:	f6c0 0102 	movt	r1, #2050	; 0x802
 800c48a:	f008 fd75 	bl	8014f78 <IsInstance>
 800c48e:	07c0      	lsls	r0, r0, #31
 800c490:	d101      	bne.n	800c496 <kfun:kotlin.ranges.IntProgression.equals(kotlin.Any?)ValueType+0x30>
 800c492:	2500      	movs	r5, #0
 800c494:	e04a      	b.n	800c52c <kfun:kotlin.ranges.IntProgression.equals(kotlin.Any?)ValueType+0xc6>
 800c496:	6830      	ldr	r0, [r6, #0]
 800c498:	6d41      	ldr	r1, [r0, #84]	; 0x54
 800c49a:	4630      	mov	r0, r6
 800c49c:	4788      	blx	r1
 800c49e:	07c0      	lsls	r0, r0, #31
 800c4a0:	d007      	beq.n	800c4b2 <kfun:kotlin.ranges.IntProgression.equals(kotlin.Any?)ValueType+0x4c>
 800c4a2:	6820      	ldr	r0, [r4, #0]
 800c4a4:	6d41      	ldr	r1, [r0, #84]	; 0x54
 800c4a6:	4620      	mov	r0, r4
 800c4a8:	4788      	blx	r1
 800c4aa:	07c0      	lsls	r0, r0, #31
 800c4ac:	d001      	beq.n	800c4b2 <kfun:kotlin.ranges.IntProgression.equals(kotlin.Any?)ValueType+0x4c>
 800c4ae:	2501      	movs	r5, #1
 800c4b0:	e03c      	b.n	800c52c <kfun:kotlin.ranges.IntProgression.equals(kotlin.Any?)ValueType+0xc6>
 800c4b2:	2500      	movs	r5, #0
 800c4b4:	a804      	add	r0, sp, #16
 800c4b6:	e9cd 5604 	strd	r5, r6, [sp, #16]
 800c4ba:	2101      	movs	r1, #1
 800c4bc:	2202      	movs	r2, #2
 800c4be:	f8d6 8010 	ldr.w	r8, [r6, #16]
 800c4c2:	f00a fad0 	bl	8016a66 <LeaveFrame>
 800c4c6:	a804      	add	r0, sp, #16
 800c4c8:	e9cd 5404 	strd	r5, r4, [sp, #16]
 800c4cc:	2101      	movs	r1, #1
 800c4ce:	2202      	movs	r2, #2
 800c4d0:	f8d4 9010 	ldr.w	r9, [r4, #16]
 800c4d4:	f00a fac7 	bl	8016a66 <LeaveFrame>
 800c4d8:	45c8      	cmp	r8, r9
 800c4da:	d127      	bne.n	800c52c <kfun:kotlin.ranges.IntProgression.equals(kotlin.Any?)ValueType+0xc6>
 800c4dc:	a804      	add	r0, sp, #16
 800c4de:	e9cd 5604 	strd	r5, r6, [sp, #16]
 800c4e2:	2101      	movs	r1, #1
 800c4e4:	2202      	movs	r2, #2
 800c4e6:	f8d6 800c 	ldr.w	r8, [r6, #12]
 800c4ea:	f00a fabc 	bl	8016a66 <LeaveFrame>
 800c4ee:	a804      	add	r0, sp, #16
 800c4f0:	e9cd 5404 	strd	r5, r4, [sp, #16]
 800c4f4:	2101      	movs	r1, #1
 800c4f6:	2202      	movs	r2, #2
 800c4f8:	f8d4 900c 	ldr.w	r9, [r4, #12]
 800c4fc:	f00a fab3 	bl	8016a66 <LeaveFrame>
 800c500:	45c8      	cmp	r8, r9
 800c502:	d113      	bne.n	800c52c <kfun:kotlin.ranges.IntProgression.equals(kotlin.Any?)ValueType+0xc6>
 800c504:	2500      	movs	r5, #0
 800c506:	a804      	add	r0, sp, #16
 800c508:	e9cd 5604 	strd	r5, r6, [sp, #16]
 800c50c:	2101      	movs	r1, #1
 800c50e:	2202      	movs	r2, #2
 800c510:	68b6      	ldr	r6, [r6, #8]
 800c512:	f00a faa8 	bl	8016a66 <LeaveFrame>
 800c516:	a804      	add	r0, sp, #16
 800c518:	e9cd 5404 	strd	r5, r4, [sp, #16]
 800c51c:	2101      	movs	r1, #1
 800c51e:	2202      	movs	r2, #2
 800c520:	68a4      	ldr	r4, [r4, #8]
 800c522:	f00a faa0 	bl	8016a66 <LeaveFrame>
 800c526:	42a6      	cmp	r6, r4
 800c528:	bf08      	it	eq
 800c52a:	2501      	moveq	r5, #1
 800c52c:	a801      	add	r0, sp, #4
 800c52e:	2102      	movs	r1, #2
 800c530:	2203      	movs	r2, #3
 800c532:	f00a fa98 	bl	8016a66 <LeaveFrame>
 800c536:	4628      	mov	r0, r5
 800c538:	b006      	add	sp, #24
 800c53a:	e8bd 0b00 	ldmia.w	sp!, {r8, r9, fp}
 800c53e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c540:	4604      	mov	r4, r0
 800c542:	a801      	add	r0, sp, #4
 800c544:	2102      	movs	r1, #2
 800c546:	2203      	movs	r2, #3
 800c548:	f00a fa8d 	bl	8016a66 <LeaveFrame>
 800c54c:	4620      	mov	r0, r4
 800c54e:	f7f4 fe4d 	bl	80011ec <_Unwind_Resume>

0800c552 <kfun:kotlin.ranges.IntProgression.isEmpty()ValueType>:
 800c552:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c554:	af03      	add	r7, sp, #12
 800c556:	f84d bd04 	str.w	fp, [sp, #-4]!
 800c55a:	b084      	sub	sp, #16
 800c55c:	4605      	mov	r5, r0
 800c55e:	2400      	movs	r4, #0
 800c560:	a802      	add	r0, sp, #8
 800c562:	e9cd 4500 	strd	r4, r5, [sp]
 800c566:	e9cd 4502 	strd	r4, r5, [sp, #8]
 800c56a:	2101      	movs	r1, #1
 800c56c:	2202      	movs	r2, #2
 800c56e:	68ae      	ldr	r6, [r5, #8]
 800c570:	f00a fa79 	bl	8016a66 <LeaveFrame>
 800c574:	2e01      	cmp	r6, #1
 800c576:	db13      	blt.n	800c5a0 <kfun:kotlin.ranges.IntProgression.isEmpty()ValueType+0x4e>
 800c578:	a802      	add	r0, sp, #8
 800c57a:	e9cd 4502 	strd	r4, r5, [sp, #8]
 800c57e:	2101      	movs	r1, #1
 800c580:	2202      	movs	r2, #2
 800c582:	692e      	ldr	r6, [r5, #16]
 800c584:	f00a fa6f 	bl	8016a66 <LeaveFrame>
 800c588:	a802      	add	r0, sp, #8
 800c58a:	e9cd 4502 	strd	r4, r5, [sp, #8]
 800c58e:	2101      	movs	r1, #1
 800c590:	2202      	movs	r2, #2
 800c592:	68ed      	ldr	r5, [r5, #12]
 800c594:	f00a fa67 	bl	8016a66 <LeaveFrame>
 800c598:	42ae      	cmp	r6, r5
 800c59a:	bfc8      	it	gt
 800c59c:	2401      	movgt	r4, #1
 800c59e:	e012      	b.n	800c5c6 <kfun:kotlin.ranges.IntProgression.isEmpty()ValueType+0x74>
 800c5a0:	a802      	add	r0, sp, #8
 800c5a2:	e9cd 4502 	strd	r4, r5, [sp, #8]
 800c5a6:	2101      	movs	r1, #1
 800c5a8:	2202      	movs	r2, #2
 800c5aa:	692e      	ldr	r6, [r5, #16]
 800c5ac:	f00a fa5b 	bl	8016a66 <LeaveFrame>
 800c5b0:	a802      	add	r0, sp, #8
 800c5b2:	e9cd 4502 	strd	r4, r5, [sp, #8]
 800c5b6:	2101      	movs	r1, #1
 800c5b8:	2202      	movs	r2, #2
 800c5ba:	68ed      	ldr	r5, [r5, #12]
 800c5bc:	f00a fa53 	bl	8016a66 <LeaveFrame>
 800c5c0:	42ae      	cmp	r6, r5
 800c5c2:	bfb8      	it	lt
 800c5c4:	2401      	movlt	r4, #1
 800c5c6:	4668      	mov	r0, sp
 800c5c8:	2101      	movs	r1, #1
 800c5ca:	2202      	movs	r2, #2
 800c5cc:	f00a fa4b 	bl	8016a66 <LeaveFrame>
 800c5d0:	4620      	mov	r0, r4
 800c5d2:	b004      	add	sp, #16
 800c5d4:	f85d bb04 	ldr.w	fp, [sp], #4
 800c5d8:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c5da <kfun:konan.internal.KClassImpl.hashCode()ValueType>:
 800c5da:	b5b0      	push	{r4, r5, r7, lr}
 800c5dc:	af02      	add	r7, sp, #8
 800c5de:	b084      	sub	sp, #16
 800c5e0:	2100      	movs	r1, #0
 800c5e2:	2202      	movs	r2, #2
 800c5e4:	e9cd 1000 	strd	r1, r0, [sp]
 800c5e8:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800c5ec:	2101      	movs	r1, #1
 800c5ee:	6884      	ldr	r4, [r0, #8]
 800c5f0:	a802      	add	r0, sp, #8
 800c5f2:	f00a fa38 	bl	8016a66 <LeaveFrame>
 800c5f6:	17e5      	asrs	r5, r4, #31
 800c5f8:	4620      	mov	r0, r4
 800c5fa:	4629      	mov	r1, r5
 800c5fc:	2220      	movs	r2, #32
 800c5fe:	f00a fb39 	bl	8016c74 <Kotlin_Long_ushr_Int>
 800c602:	4622      	mov	r2, r4
 800c604:	462b      	mov	r3, r5
 800c606:	f00a fb1c 	bl	8016c42 <Kotlin_Long_xor_Long>
 800c60a:	f00a fb46 	bl	8016c9a <Kotlin_Long_toInt>
 800c60e:	4604      	mov	r4, r0
 800c610:	4668      	mov	r0, sp
 800c612:	2101      	movs	r1, #1
 800c614:	2202      	movs	r2, #2
 800c616:	f00a fa26 	bl	8016a66 <LeaveFrame>
 800c61a:	4620      	mov	r0, r4
 800c61c:	b004      	add	sp, #16
 800c61e:	bdb0      	pop	{r4, r5, r7, pc}

0800c620 <kfun:konan.internal.KClassImpl.equals(kotlin.Any?)ValueType>:
 800c620:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c622:	af03      	add	r7, sp, #12
 800c624:	f84d bd04 	str.w	fp, [sp, #-4]!
 800c628:	b086      	sub	sp, #24
 800c62a:	460d      	mov	r5, r1
 800c62c:	4606      	mov	r6, r0
 800c62e:	2400      	movs	r4, #0
 800c630:	2d00      	cmp	r5, #0
 800c632:	9602      	str	r6, [sp, #8]
 800c634:	9401      	str	r4, [sp, #4]
 800c636:	9503      	str	r5, [sp, #12]
 800c638:	d01d      	beq.n	800c676 <kfun:konan.internal.KClassImpl.equals(kotlin.Any?)ValueType+0x56>
 800c63a:	f242 41b0 	movw	r1, #9392	; 0x24b0
 800c63e:	4628      	mov	r0, r5
 800c640:	f6c0 0102 	movt	r1, #2050	; 0x802
 800c644:	f008 fc98 	bl	8014f78 <IsInstance>
 800c648:	07c0      	lsls	r0, r0, #31
 800c64a:	f04f 0400 	mov.w	r4, #0
 800c64e:	d012      	beq.n	800c676 <kfun:konan.internal.KClassImpl.equals(kotlin.Any?)ValueType+0x56>
 800c650:	a804      	add	r0, sp, #16
 800c652:	e9cd 4604 	strd	r4, r6, [sp, #16]
 800c656:	2101      	movs	r1, #1
 800c658:	2202      	movs	r2, #2
 800c65a:	68b6      	ldr	r6, [r6, #8]
 800c65c:	f00a fa03 	bl	8016a66 <LeaveFrame>
 800c660:	a804      	add	r0, sp, #16
 800c662:	e9cd 4504 	strd	r4, r5, [sp, #16]
 800c666:	2101      	movs	r1, #1
 800c668:	2202      	movs	r2, #2
 800c66a:	68ad      	ldr	r5, [r5, #8]
 800c66c:	f00a f9fb 	bl	8016a66 <LeaveFrame>
 800c670:	42ae      	cmp	r6, r5
 800c672:	bf08      	it	eq
 800c674:	2401      	moveq	r4, #1
 800c676:	a801      	add	r0, sp, #4
 800c678:	2102      	movs	r1, #2
 800c67a:	2203      	movs	r2, #3
 800c67c:	f00a f9f3 	bl	8016a66 <LeaveFrame>
 800c680:	4620      	mov	r0, r4
 800c682:	b006      	add	sp, #24
 800c684:	f85d bb04 	ldr.w	fp, [sp], #4
 800c688:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c68a <kfun:konan.internal.KClassImpl.<get-simpleName>()kotlin.String?>:
 800c68a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c68c:	af03      	add	r7, sp, #12
 800c68e:	f84d 8d04 	str.w	r8, [sp, #-4]!
 800c692:	b08a      	sub	sp, #40	; 0x28
 800c694:	2500      	movs	r5, #0
 800c696:	4688      	mov	r8, r1
 800c698:	e9cd 5506 	strd	r5, r5, [sp, #24]
 800c69c:	2101      	movs	r1, #1
 800c69e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800c6a2:	2202      	movs	r2, #2
 800c6a4:	e9cd 5002 	strd	r5, r0, [sp, #8]
 800c6a8:	e9cd 5008 	strd	r5, r0, [sp, #32]
 800c6ac:	6886      	ldr	r6, [r0, #8]
 800c6ae:	a808      	add	r0, sp, #32
 800c6b0:	f00a f9d9 	bl	8016a66 <LeaveFrame>
 800c6b4:	ac02      	add	r4, sp, #8
 800c6b6:	4630      	mov	r0, r6
 800c6b8:	f104 0108 	add.w	r1, r4, #8
 800c6bc:	f00a fc34 	bl	8016f28 <Kotlin_TypeInfo_getRelativeName>
 800c6c0:	4601      	mov	r1, r0
 800c6c2:	f104 000c 	add.w	r0, r4, #12
 800c6c6:	f007 fd83 	bl	80141d0 <UpdateRef>
 800c6ca:	9905      	ldr	r1, [sp, #20]
 800c6cc:	b181      	cbz	r1, 800c6f0 <kfun:konan.internal.KClassImpl.<get-simpleName>()kotlin.String?+0x66>
 800c6ce:	f104 0010 	add.w	r0, r4, #16
 800c6d2:	f007 fd7d 	bl	80141d0 <UpdateRef>
 800c6d6:	9806      	ldr	r0, [sp, #24]
 800c6d8:	f104 0114 	add.w	r1, r4, #20
 800c6dc:	9100      	str	r1, [sp, #0]
 800c6de:	f641 41c8 	movw	r1, #7368	; 0x1cc8
 800c6e2:	2200      	movs	r2, #0
 800c6e4:	f2c2 0100 	movt	r1, #8192	; 0x2000
 800c6e8:	2302      	movs	r3, #2
 800c6ea:	f000 f990 	bl	800ca0e <kfun:kotlin.text.substringAfterLast$default@kotlin.String.(kotlin.String;kotlin.String;kotlin.Int)kotlin.String>
 800c6ee:	4605      	mov	r5, r0
 800c6f0:	4640      	mov	r0, r8
 800c6f2:	4629      	mov	r1, r5
 800c6f4:	f007 ff79 	bl	80145ea <UpdateReturnRef>
 800c6f8:	a802      	add	r0, sp, #8
 800c6fa:	2101      	movs	r1, #1
 800c6fc:	2206      	movs	r2, #6
 800c6fe:	f00a f9b2 	bl	8016a66 <LeaveFrame>
 800c702:	4628      	mov	r0, r5
 800c704:	b00a      	add	sp, #40	; 0x28
 800c706:	f85d 8b04 	ldr.w	r8, [sp], #4
 800c70a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c70c:	4604      	mov	r4, r0
 800c70e:	a802      	add	r0, sp, #8
 800c710:	2101      	movs	r1, #1
 800c712:	2206      	movs	r2, #6
 800c714:	f00a f9a7 	bl	8016a66 <LeaveFrame>
 800c718:	4620      	mov	r0, r4
 800c71a:	f7f4 fd67 	bl	80011ec <_Unwind_Resume>

0800c71e <kfun:konan.internal.KClassImpl.<get-qualifiedName>()kotlin.String?>:
 800c71e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c720:	af03      	add	r7, sp, #12
 800c722:	e92d 0700 	stmdb	sp!, {r8, r9, sl}
 800c726:	b09a      	sub	sp, #104	; 0x68
 800c728:	f10d 0a04 	add.w	sl, sp, #4
 800c72c:	4688      	mov	r8, r1
 800c72e:	4606      	mov	r6, r0
 800c730:	213c      	movs	r1, #60	; 0x3c
 800c732:	4650      	mov	r0, sl
 800c734:	f00e fee0 	bl	801b4f8 <__aeabi_memclr>
 800c738:	2400      	movs	r4, #0
 800c73a:	a810      	add	r0, sp, #64	; 0x40
 800c73c:	9602      	str	r6, [sp, #8]
 800c73e:	2101      	movs	r1, #1
 800c740:	e9cd 4610 	strd	r4, r6, [sp, #64]	; 0x40
 800c744:	2202      	movs	r2, #2
 800c746:	68b6      	ldr	r6, [r6, #8]
 800c748:	f00a f98d 	bl	8016a66 <LeaveFrame>
 800c74c:	f10a 0108 	add.w	r1, sl, #8
 800c750:	4630      	mov	r0, r6
 800c752:	f00a fbe0 	bl	8016f16 <Kotlin_TypeInfo_getPackageName>
 800c756:	4601      	mov	r1, r0
 800c758:	f10a 000c 	add.w	r0, sl, #12
 800c75c:	f007 fd38 	bl	80141d0 <UpdateRef>
 800c760:	9904      	ldr	r1, [sp, #16]
 800c762:	2900      	cmp	r1, #0
 800c764:	f000 80d8 	beq.w	800c918 <kfun:konan.internal.KClassImpl.<get-qualifiedName>()kotlin.String?+0x1fa>
 800c768:	f10a 0010 	add.w	r0, sl, #16
 800c76c:	f10a 0618 	add.w	r6, sl, #24
 800c770:	f007 fd2e 	bl	80141d0 <UpdateRef>
 800c774:	9802      	ldr	r0, [sp, #8]
 800c776:	2101      	movs	r1, #1
 800c778:	2202      	movs	r2, #2
 800c77a:	e9cd 4010 	strd	r4, r0, [sp, #64]	; 0x40
 800c77e:	6884      	ldr	r4, [r0, #8]
 800c780:	a810      	add	r0, sp, #64	; 0x40
 800c782:	f00a f970 	bl	8016a66 <LeaveFrame>
 800c786:	f10a 0114 	add.w	r1, sl, #20
 800c78a:	4620      	mov	r0, r4
 800c78c:	f00a fbcc 	bl	8016f28 <Kotlin_TypeInfo_getRelativeName>
 800c790:	4601      	mov	r1, r0
 800c792:	4630      	mov	r0, r6
 800c794:	f007 fd1c 	bl	80141d0 <UpdateRef>
 800c798:	9907      	ldr	r1, [sp, #28]
 800c79a:	2900      	cmp	r1, #0
 800c79c:	f000 80ca 	beq.w	800c934 <kfun:konan.internal.KClassImpl.<get-qualifiedName>()kotlin.String?+0x216>
 800c7a0:	f10a 0020 	add.w	r0, sl, #32
 800c7a4:	f007 fd14 	bl	80141d0 <UpdateRef>
 800c7a8:	9c05      	ldr	r4, [sp, #20]
 800c7aa:	f24f 22e7 	movw	r2, #62183	; 0xf2e7
 800c7ae:	f640 3378 	movw	r3, #2936	; 0xb78
 800c7b2:	f2c1 62a8 	movt	r2, #5800	; 0x16a8
 800c7b6:	f2cb 5336 	movt	r3, #46390	; 0xb536
 800c7ba:	6820      	ldr	r0, [r4, #0]
 800c7bc:	f00a fb14 	bl	8016de8 <LookupOpenMethod>
 800c7c0:	4601      	mov	r1, r0
 800c7c2:	4620      	mov	r0, r4
 800c7c4:	4788      	blx	r1
 800c7c6:	2800      	cmp	r0, #0
 800c7c8:	f000 80a5 	beq.w	800c916 <kfun:konan.internal.KClassImpl.<get-qualifiedName>()kotlin.String?+0x1f8>
 800c7cc:	f641 10f0 	movw	r0, #6640	; 0x19f0
 800c7d0:	f10a 0124 	add.w	r1, sl, #36	; 0x24
 800c7d4:	f6c0 0002 	movt	r0, #2050	; 0x802
 800c7d8:	f10a 0928 	add.w	r9, sl, #40	; 0x28
 800c7dc:	f00a f88d 	bl	80168fa <AllocInstance>
 800c7e0:	210a      	movs	r1, #10
 800c7e2:	4606      	mov	r6, r0
 800c7e4:	2500      	movs	r5, #0
 800c7e6:	e9cd 5610 	strd	r5, r6, [sp, #64]	; 0x40
 800c7ea:	f7fe f9b4 	bl	800ab56 <kfun:kotlin.text.StringBuilder.<init>(kotlin.Int)kotlin.text.StringBuilder>
 800c7ee:	ac10      	add	r4, sp, #64	; 0x40
 800c7f0:	2101      	movs	r1, #1
 800c7f2:	2202      	movs	r2, #2
 800c7f4:	4620      	mov	r0, r4
 800c7f6:	f00a f936 	bl	8016a66 <LeaveFrame>
 800c7fa:	4648      	mov	r0, r9
 800c7fc:	4631      	mov	r1, r6
 800c7fe:	f007 fce7 	bl	80141d0 <UpdateRef>
 800c802:	f104 090c 	add.w	r9, r4, #12
 800c806:	9805      	ldr	r0, [sp, #20]
 800c808:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800c80a:	4649      	mov	r1, r9
 800c80c:	9514      	str	r5, [sp, #80]	; 0x50
 800c80e:	e9cd 5610 	strd	r5, r6, [sp, #64]	; 0x40
 800c812:	e9cd 0512 	strd	r0, r5, [sp, #72]	; 0x48
 800c816:	f008 fce5 	bl	80151e4 <Kotlin_String_toCharArray>
 800c81a:	3410      	adds	r4, #16
 800c81c:	4601      	mov	r1, r0
 800c81e:	4630      	mov	r0, r6
 800c820:	4622      	mov	r2, r4
 800c822:	f7fd fcb6 	bl	800a192 <kfun:kotlin.text.StringBuilder.append(kotlin.CharArray)kotlin.text.StringBuilder>
 800c826:	4601      	mov	r1, r0
 800c828:	f10a 002c 	add.w	r0, sl, #44	; 0x2c
 800c82c:	f007 fedd 	bl	80145ea <UpdateReturnRef>
 800c830:	a810      	add	r0, sp, #64	; 0x40
 800c832:	2102      	movs	r1, #2
 800c834:	2205      	movs	r2, #5
 800c836:	f00a f916 	bl	8016a66 <LeaveFrame>
 800c83a:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800c83c:	f641 40c8 	movw	r0, #7368	; 0x1cc8
 800c840:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800c844:	4649      	mov	r1, r9
 800c846:	e9cd 5513 	strd	r5, r5, [sp, #76]	; 0x4c
 800c84a:	e9cd 5610 	strd	r5, r6, [sp, #64]	; 0x40
 800c84e:	9012      	str	r0, [sp, #72]	; 0x48
 800c850:	f008 fcc8 	bl	80151e4 <Kotlin_String_toCharArray>
 800c854:	4601      	mov	r1, r0
 800c856:	4630      	mov	r0, r6
 800c858:	4622      	mov	r2, r4
 800c85a:	f7fd fc9a 	bl	800a192 <kfun:kotlin.text.StringBuilder.append(kotlin.CharArray)kotlin.text.StringBuilder>
 800c85e:	4601      	mov	r1, r0
 800c860:	f10a 0030 	add.w	r0, sl, #48	; 0x30
 800c864:	f007 fec1 	bl	80145ea <UpdateReturnRef>
 800c868:	a810      	add	r0, sp, #64	; 0x40
 800c86a:	2102      	movs	r1, #2
 800c86c:	2205      	movs	r2, #5
 800c86e:	f00a f8fa 	bl	8016a66 <LeaveFrame>
 800c872:	9809      	ldr	r0, [sp, #36]	; 0x24
 800c874:	2500      	movs	r5, #0
 800c876:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800c878:	4649      	mov	r1, r9
 800c87a:	9514      	str	r5, [sp, #80]	; 0x50
 800c87c:	e9cd 5610 	strd	r5, r6, [sp, #64]	; 0x40
 800c880:	e9cd 0512 	strd	r0, r5, [sp, #72]	; 0x48
 800c884:	f008 fcae 	bl	80151e4 <Kotlin_String_toCharArray>
 800c888:	4601      	mov	r1, r0
 800c88a:	4630      	mov	r0, r6
 800c88c:	4622      	mov	r2, r4
 800c88e:	f7fd fc80 	bl	800a192 <kfun:kotlin.text.StringBuilder.append(kotlin.CharArray)kotlin.text.StringBuilder>
 800c892:	4601      	mov	r1, r0
 800c894:	f10a 0034 	add.w	r0, sl, #52	; 0x34
 800c898:	f10a 0938 	add.w	r9, sl, #56	; 0x38
 800c89c:	f007 fea5 	bl	80145ea <UpdateReturnRef>
 800c8a0:	f10d 0a40 	add.w	sl, sp, #64	; 0x40
 800c8a4:	2102      	movs	r1, #2
 800c8a6:	2205      	movs	r2, #5
 800c8a8:	4650      	mov	r0, sl
 800c8aa:	f00a f8dc 	bl	8016a66 <LeaveFrame>
 800c8ae:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800c8b0:	ae16      	add	r6, sp, #88	; 0x58
 800c8b2:	e9cd 5512 	strd	r5, r5, [sp, #72]	; 0x48
 800c8b6:	e9cd 5010 	strd	r5, r0, [sp, #64]	; 0x40
 800c8ba:	9518      	str	r5, [sp, #96]	; 0x60
 800c8bc:	e9cd 5016 	strd	r5, r0, [sp, #88]	; 0x58
 800c8c0:	68c4      	ldr	r4, [r0, #12]
 800c8c2:	f106 0008 	add.w	r0, r6, #8
 800c8c6:	4621      	mov	r1, r4
 800c8c8:	f007 fc82 	bl	80141d0 <UpdateRef>
 800c8cc:	f10a 0008 	add.w	r0, sl, #8
 800c8d0:	4621      	mov	r1, r4
 800c8d2:	f007 fe8a 	bl	80145ea <UpdateReturnRef>
 800c8d6:	4630      	mov	r0, r6
 800c8d8:	2101      	movs	r1, #1
 800c8da:	2203      	movs	r2, #3
 800c8dc:	f00a f8c3 	bl	8016a66 <LeaveFrame>
 800c8e0:	9811      	ldr	r0, [sp, #68]	; 0x44
 800c8e2:	2101      	movs	r1, #1
 800c8e4:	2202      	movs	r2, #2
 800c8e6:	e9cd 5016 	strd	r5, r0, [sp, #88]	; 0x58
 800c8ea:	6886      	ldr	r6, [r0, #8]
 800c8ec:	a816      	add	r0, sp, #88	; 0x58
 800c8ee:	f00a f8ba 	bl	8016a66 <LeaveFrame>
 800c8f2:	f10a 030c 	add.w	r3, sl, #12
 800c8f6:	4620      	mov	r0, r4
 800c8f8:	2100      	movs	r1, #0
 800c8fa:	4632      	mov	r2, r6
 800c8fc:	f008 fc29 	bl	8015152 <Kotlin_String_fromCharArray>
 800c900:	4604      	mov	r4, r0
 800c902:	4648      	mov	r0, r9
 800c904:	4621      	mov	r1, r4
 800c906:	f007 fe70 	bl	80145ea <UpdateReturnRef>
 800c90a:	4650      	mov	r0, sl
 800c90c:	2101      	movs	r1, #1
 800c90e:	2204      	movs	r2, #4
 800c910:	f00a f8a9 	bl	8016a66 <LeaveFrame>
 800c914:	e000      	b.n	800c918 <kfun:konan.internal.KClassImpl.<get-qualifiedName>()kotlin.String?+0x1fa>
 800c916:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800c918:	4640      	mov	r0, r8
 800c91a:	4621      	mov	r1, r4
 800c91c:	f007 fe65 	bl	80145ea <UpdateReturnRef>
 800c920:	a801      	add	r0, sp, #4
 800c922:	2101      	movs	r1, #1
 800c924:	220f      	movs	r2, #15
 800c926:	f00a f89e 	bl	8016a66 <LeaveFrame>
 800c92a:	4620      	mov	r0, r4
 800c92c:	b01a      	add	sp, #104	; 0x68
 800c92e:	e8bd 0700 	ldmia.w	sp!, {r8, r9, sl}
 800c932:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c934:	f000 f83a 	bl	800c9ac <ThrowNullPointerException>
 800c938:	e000      	b.n	800c93c <kfun:konan.internal.KClassImpl.<get-qualifiedName>()kotlin.String?+0x21e>
 800c93a:	e7ff      	b.n	800c93c <kfun:konan.internal.KClassImpl.<get-qualifiedName>()kotlin.String?+0x21e>
 800c93c:	4604      	mov	r4, r0
 800c93e:	a810      	add	r0, sp, #64	; 0x40
 800c940:	2102      	movs	r1, #2
 800c942:	2205      	movs	r2, #5
 800c944:	f00a f88f 	bl	8016a66 <LeaveFrame>
 800c948:	e000      	b.n	800c94c <kfun:konan.internal.KClassImpl.<get-qualifiedName>()kotlin.String?+0x22e>
 800c94a:	4604      	mov	r4, r0
 800c94c:	a801      	add	r0, sp, #4
 800c94e:	2101      	movs	r1, #1
 800c950:	220f      	movs	r2, #15
 800c952:	f00a f888 	bl	8016a66 <LeaveFrame>
 800c956:	4620      	mov	r0, r4
 800c958:	f7f4 fc48 	bl	80011ec <_Unwind_Resume>

0800c95c <kfun:konan.internal.KClassImpl.isInstance(kotlin.Any?)ValueType>:
 800c95c:	b5b0      	push	{r4, r5, r7, lr}
 800c95e:	af02      	add	r7, sp, #8
 800c960:	b086      	sub	sp, #24
 800c962:	460d      	mov	r5, r1
 800c964:	2400      	movs	r4, #0
 800c966:	2d00      	cmp	r5, #0
 800c968:	9002      	str	r0, [sp, #8]
 800c96a:	9401      	str	r4, [sp, #4]
 800c96c:	9503      	str	r5, [sp, #12]
 800c96e:	d00c      	beq.n	800c98a <kfun:konan.internal.KClassImpl.isInstance(kotlin.Any?)ValueType+0x2e>
 800c970:	e9cd 4004 	strd	r4, r0, [sp, #16]
 800c974:	2101      	movs	r1, #1
 800c976:	6884      	ldr	r4, [r0, #8]
 800c978:	a804      	add	r0, sp, #16
 800c97a:	2202      	movs	r2, #2
 800c97c:	f00a f873 	bl	8016a66 <LeaveFrame>
 800c980:	4628      	mov	r0, r5
 800c982:	4621      	mov	r1, r4
 800c984:	f00a fa9a 	bl	8016ebc <Kotlin_TypeInfo_isInstance>
 800c988:	4604      	mov	r4, r0
 800c98a:	a801      	add	r0, sp, #4
 800c98c:	2102      	movs	r1, #2
 800c98e:	2203      	movs	r2, #3
 800c990:	f00a f869 	bl	8016a66 <LeaveFrame>
 800c994:	4620      	mov	r0, r4
 800c996:	b006      	add	sp, #24
 800c998:	bdb0      	pop	{r4, r5, r7, pc}
 800c99a:	4604      	mov	r4, r0
 800c99c:	a801      	add	r0, sp, #4
 800c99e:	2102      	movs	r1, #2
 800c9a0:	2203      	movs	r2, #3
 800c9a2:	f00a f860 	bl	8016a66 <LeaveFrame>
 800c9a6:	4620      	mov	r0, r4
 800c9a8:	f7f4 fc20 	bl	80011ec <_Unwind_Resume>

0800c9ac <ThrowNullPointerException>:
 800c9ac:	b5b0      	push	{r4, r5, r7, lr}
 800c9ae:	af02      	add	r7, sp, #8
 800c9b0:	b088      	sub	sp, #32
 800c9b2:	4668      	mov	r0, sp
 800c9b4:	f040 0104 	orr.w	r1, r0, #4
 800c9b8:	f242 5080 	movw	r0, #9600	; 0x2580
 800c9bc:	2500      	movs	r5, #0
 800c9be:	f6c0 0002 	movt	r0, #2050	; 0x802
 800c9c2:	e9cd 5500 	strd	r5, r5, [sp]
 800c9c6:	f009 ff98 	bl	80168fa <AllocInstance>
 800c9ca:	4604      	mov	r4, r0
 800c9cc:	e9cd 5402 	strd	r5, r4, [sp, #8]
 800c9d0:	e9cd 5404 	strd	r5, r4, [sp, #16]
 800c9d4:	f7fe fb79 	bl	800b0ca <kfun:kotlin.Exception.<init>()kotlin.Exception>
 800c9d8:	a806      	add	r0, sp, #24
 800c9da:	2101      	movs	r1, #1
 800c9dc:	2202      	movs	r2, #2
 800c9de:	e9cd 5406 	strd	r5, r4, [sp, #24]
 800c9e2:	f00a f840 	bl	8016a66 <LeaveFrame>
 800c9e6:	a804      	add	r0, sp, #16
 800c9e8:	2101      	movs	r1, #1
 800c9ea:	2202      	movs	r2, #2
 800c9ec:	f00a f83b 	bl	8016a66 <LeaveFrame>
 800c9f0:	a806      	add	r0, sp, #24
 800c9f2:	2101      	movs	r1, #1
 800c9f4:	2202      	movs	r2, #2
 800c9f6:	e9cd 5406 	strd	r5, r4, [sp, #24]
 800c9fa:	f00a f834 	bl	8016a66 <LeaveFrame>
 800c9fe:	a802      	add	r0, sp, #8
 800ca00:	2101      	movs	r1, #1
 800ca02:	2202      	movs	r2, #2
 800ca04:	f00a f82f 	bl	8016a66 <LeaveFrame>
 800ca08:	4620      	mov	r0, r4
 800ca0a:	f008 fa7a 	bl	8014f02 <ThrowException>

0800ca0e <kfun:kotlin.text.substringAfterLast$default@kotlin.String.(kotlin.String;kotlin.String;kotlin.Int)kotlin.String>:
 800ca0e:	b5b0      	push	{r4, r5, r7, lr}
 800ca10:	af02      	add	r7, sp, #8
 800ca12:	b088      	sub	sp, #32
 800ca14:	461c      	mov	r4, r3
 800ca16:	2300      	movs	r3, #0
 800ca18:	e9cd 3306 	strd	r3, r3, [sp, #24]
 800ca1c:	ad01      	add	r5, sp, #4
 800ca1e:	e9cd 3001 	strd	r3, r0, [sp, #4]
 800ca22:	a803      	add	r0, sp, #12
 800ca24:	c00e      	stmia	r0!, {r1, r2, r3}
 800ca26:	f105 0010 	add.w	r0, r5, #16
 800ca2a:	f007 fbd1 	bl	80141d0 <UpdateRef>
 800ca2e:	4620      	mov	r0, r4
 800ca30:	2102      	movs	r1, #2
 800ca32:	f00a f8d4 	bl	8016bde <Kotlin_Int_and_Int>
 800ca36:	2800      	cmp	r0, #0
 800ca38:	f105 0104 	add.w	r1, r5, #4
 800ca3c:	bf08      	it	eq
 800ca3e:	f105 010c 	addeq.w	r1, r5, #12
 800ca42:	f105 0014 	add.w	r0, r5, #20
 800ca46:	6809      	ldr	r1, [r1, #0]
 800ca48:	f007 fbc2 	bl	80141d0 <UpdateRef>
 800ca4c:	9802      	ldr	r0, [sp, #8]
 800ca4e:	e9dd 1205 	ldrd	r1, r2, [sp, #20]
 800ca52:	f105 0318 	add.w	r3, r5, #24
 800ca56:	f000 f816 	bl	800ca86 <kfun:kotlin.text.substringAfterLast@kotlin.String.(kotlin.String;kotlin.String)kotlin.String>
 800ca5a:	4604      	mov	r4, r0
 800ca5c:	68b8      	ldr	r0, [r7, #8]
 800ca5e:	4621      	mov	r1, r4
 800ca60:	f007 fdc3 	bl	80145ea <UpdateReturnRef>
 800ca64:	a801      	add	r0, sp, #4
 800ca66:	2103      	movs	r1, #3
 800ca68:	2207      	movs	r2, #7
 800ca6a:	f009 fffc 	bl	8016a66 <LeaveFrame>
 800ca6e:	4620      	mov	r0, r4
 800ca70:	b008      	add	sp, #32
 800ca72:	bdb0      	pop	{r4, r5, r7, pc}
 800ca74:	4604      	mov	r4, r0
 800ca76:	a801      	add	r0, sp, #4
 800ca78:	2103      	movs	r1, #3
 800ca7a:	2207      	movs	r2, #7
 800ca7c:	f009 fff3 	bl	8016a66 <LeaveFrame>
 800ca80:	4620      	mov	r0, r4
 800ca82:	f7f4 fbb3 	bl	80011ec <_Unwind_Resume>

0800ca86 <kfun:kotlin.text.substringAfterLast@kotlin.String.(kotlin.String;kotlin.String)kotlin.String>:
 800ca86:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ca88:	af03      	add	r7, sp, #12
 800ca8a:	e92d 0700 	stmdb	sp!, {r8, r9, sl}
 800ca8e:	b088      	sub	sp, #32
 800ca90:	4605      	mov	r5, r0
 800ca92:	2000      	movs	r0, #0
 800ca94:	4698      	mov	r8, r3
 800ca96:	4616      	mov	r6, r2
 800ca98:	460c      	mov	r4, r1
 800ca9a:	9005      	str	r0, [sp, #20]
 800ca9c:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800caa0:	e9cd 4603 	strd	r4, r6, [sp, #12]
 800caa4:	2006      	movs	r0, #6
 800caa6:	2200      	movs	r2, #0
 800caa8:	9000      	str	r0, [sp, #0]
 800caaa:	4628      	mov	r0, r5
 800caac:	2300      	movs	r3, #0
 800caae:	f000 f846 	bl	800cb3e <kfun:kotlin.text.lastIndexOf$default@kotlin.CharSequence.(kotlin.String;kotlin.Int;kotlin.Boolean;kotlin.Int)ValueType>
 800cab2:	4681      	mov	r9, r0
 800cab4:	f119 0001 	adds.w	r0, r9, #1
 800cab8:	d02a      	beq.n	800cb10 <kfun:kotlin.text.substringAfterLast@kotlin.String.(kotlin.String;kotlin.String)kotlin.String+0x8a>
 800caba:	a801      	add	r0, sp, #4
 800cabc:	2600      	movs	r6, #0
 800cabe:	f100 0a10 	add.w	sl, r0, #16
 800cac2:	4620      	mov	r0, r4
 800cac4:	e9cd 6406 	strd	r6, r4, [sp, #24]
 800cac8:	f008 faaa 	bl	8015020 <Kotlin_String_getStringLength>
 800cacc:	4604      	mov	r4, r0
 800cace:	a806      	add	r0, sp, #24
 800cad0:	2101      	movs	r1, #1
 800cad2:	2202      	movs	r2, #2
 800cad4:	f009 ffc7 	bl	8016a66 <LeaveFrame>
 800cad8:	4628      	mov	r0, r5
 800cada:	e9cd 6506 	strd	r6, r5, [sp, #24]
 800cade:	f008 fa9f 	bl	8015020 <Kotlin_String_getStringLength>
 800cae2:	4606      	mov	r6, r0
 800cae4:	a806      	add	r0, sp, #24
 800cae6:	2101      	movs	r1, #1
 800cae8:	2202      	movs	r2, #2
 800caea:	f009 ffbc 	bl	8016a66 <LeaveFrame>
 800caee:	4648      	mov	r0, r9
 800caf0:	4621      	mov	r1, r4
 800caf2:	f00a f857 	bl	8016ba4 <Kotlin_Int_plus_Int>
 800caf6:	4601      	mov	r1, r0
 800caf8:	4628      	mov	r0, r5
 800cafa:	4632      	mov	r2, r6
 800cafc:	4653      	mov	r3, sl
 800cafe:	f009 fe53 	bl	80167a8 <Kotlin_String_subSequence>
 800cb02:	f241 31b0 	movw	r1, #5040	; 0x13b0
 800cb06:	4606      	mov	r6, r0
 800cb08:	f6c0 0102 	movt	r1, #2050	; 0x802
 800cb0c:	f00a f9a6 	bl	8016e5c <CheckInstance>
 800cb10:	4640      	mov	r0, r8
 800cb12:	4631      	mov	r1, r6
 800cb14:	f007 fd69 	bl	80145ea <UpdateReturnRef>
 800cb18:	a801      	add	r0, sp, #4
 800cb1a:	2103      	movs	r1, #3
 800cb1c:	2205      	movs	r2, #5
 800cb1e:	f009 ffa2 	bl	8016a66 <LeaveFrame>
 800cb22:	4630      	mov	r0, r6
 800cb24:	b008      	add	sp, #32
 800cb26:	e8bd 0700 	ldmia.w	sp!, {r8, r9, sl}
 800cb2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cb2c:	4604      	mov	r4, r0
 800cb2e:	a801      	add	r0, sp, #4
 800cb30:	2103      	movs	r1, #3
 800cb32:	2205      	movs	r2, #5
 800cb34:	f009 ff97 	bl	8016a66 <LeaveFrame>
 800cb38:	4620      	mov	r0, r4
 800cb3a:	f7f4 fb57 	bl	80011ec <_Unwind_Resume>

0800cb3e <kfun:kotlin.text.lastIndexOf$default@kotlin.CharSequence.(kotlin.String;kotlin.Int;kotlin.Boolean;kotlin.Int)ValueType>:
 800cb3e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cb40:	af03      	add	r7, sp, #12
 800cb42:	e92d 0b00 	stmdb	sp!, {r8, r9, fp}
 800cb46:	b08a      	sub	sp, #40	; 0x28
 800cb48:	2600      	movs	r6, #0
 800cb4a:	4698      	mov	r8, r3
 800cb4c:	e9cd 6002 	strd	r6, r0, [sp, #8]
 800cb50:	a802      	add	r0, sp, #8
 800cb52:	300c      	adds	r0, #12
 800cb54:	4691      	mov	r9, r2
 800cb56:	e9cd 1604 	strd	r1, r6, [sp, #16]
 800cb5a:	f007 fb39 	bl	80141d0 <UpdateRef>
 800cb5e:	68bd      	ldr	r5, [r7, #8]
 800cb60:	2102      	movs	r1, #2
 800cb62:	4628      	mov	r0, r5
 800cb64:	f00a f83b 	bl	8016bde <Kotlin_Int_and_Int>
 800cb68:	b1c8      	cbz	r0, 800cb9e <kfun:kotlin.text.lastIndexOf$default@kotlin.CharSequence.(kotlin.String;kotlin.Int;kotlin.Boolean;kotlin.Int)ValueType+0x60>
 800cb6a:	9c03      	ldr	r4, [sp, #12]
 800cb6c:	f24f 22e7 	movw	r2, #62183	; 0xf2e7
 800cb70:	f640 3378 	movw	r3, #2936	; 0xb78
 800cb74:	f2c1 62a8 	movt	r2, #5800	; 0x16a8
 800cb78:	f2cb 5336 	movt	r3, #46390	; 0xb536
 800cb7c:	e9cd 6406 	strd	r6, r4, [sp, #24]
 800cb80:	6820      	ldr	r0, [r4, #0]
 800cb82:	f00a f931 	bl	8016de8 <LookupOpenMethod>
 800cb86:	4601      	mov	r1, r0
 800cb88:	4620      	mov	r0, r4
 800cb8a:	4788      	blx	r1
 800cb8c:	2101      	movs	r1, #1
 800cb8e:	f00a f80f 	bl	8016bb0 <Kotlin_Int_minus_Int>
 800cb92:	4681      	mov	r9, r0
 800cb94:	a806      	add	r0, sp, #24
 800cb96:	2101      	movs	r1, #1
 800cb98:	2202      	movs	r2, #2
 800cb9a:	f009 ff64 	bl	8016a66 <LeaveFrame>
 800cb9e:	4628      	mov	r0, r5
 800cba0:	2104      	movs	r1, #4
 800cba2:	f00a f81c 	bl	8016bde <Kotlin_Int_and_Int>
 800cba6:	9d03      	ldr	r5, [sp, #12]
 800cba8:	2800      	cmp	r0, #0
 800cbaa:	9c05      	ldr	r4, [sp, #20]
 800cbac:	9408      	str	r4, [sp, #32]
 800cbae:	e9cd 6506 	strd	r6, r5, [sp, #24]
 800cbb2:	bf08      	it	eq
 800cbb4:	2601      	moveq	r6, #1
 800cbb6:	ea06 0608 	and.w	r6, r6, r8
 800cbba:	b14d      	cbz	r5, 800cbd0 <kfun:kotlin.text.lastIndexOf$default@kotlin.CharSequence.(kotlin.String;kotlin.Int;kotlin.Boolean;kotlin.Int)ValueType+0x92>
 800cbbc:	b946      	cbnz	r6, 800cbd0 <kfun:kotlin.text.lastIndexOf$default@kotlin.CharSequence.(kotlin.String;kotlin.Int;kotlin.Boolean;kotlin.Int)ValueType+0x92>
 800cbbe:	f241 31b0 	movw	r1, #5040	; 0x13b0
 800cbc2:	4628      	mov	r0, r5
 800cbc4:	f6c0 0102 	movt	r1, #2050	; 0x802
 800cbc8:	f008 f9d6 	bl	8014f78 <IsInstance>
 800cbcc:	07c0      	lsls	r0, r0, #31
 800cbce:	d10a      	bne.n	800cbe6 <kfun:kotlin.text.lastIndexOf$default@kotlin.CharSequence.(kotlin.String;kotlin.Int;kotlin.Boolean;kotlin.Int)ValueType+0xa8>
 800cbd0:	2001      	movs	r0, #1
 800cbd2:	4621      	mov	r1, r4
 800cbd4:	e9cd 6000 	strd	r6, r0, [sp]
 800cbd8:	4628      	mov	r0, r5
 800cbda:	464a      	mov	r2, r9
 800cbdc:	2300      	movs	r3, #0
 800cbde:	f000 f82a 	bl	800cc36 <kfun:kotlin.text.indexOf#internal>
 800cbe2:	4604      	mov	r4, r0
 800cbe4:	e005      	b.n	800cbf2 <kfun:kotlin.text.lastIndexOf$default@kotlin.CharSequence.(kotlin.String;kotlin.Int;kotlin.Boolean;kotlin.Int)ValueType+0xb4>
 800cbe6:	4628      	mov	r0, r5
 800cbe8:	4621      	mov	r1, r4
 800cbea:	464a      	mov	r2, r9
 800cbec:	f008 fd69 	bl	80156c2 <Kotlin_String_lastIndexOfString>
 800cbf0:	4604      	mov	r4, r0
 800cbf2:	a806      	add	r0, sp, #24
 800cbf4:	2102      	movs	r1, #2
 800cbf6:	2203      	movs	r2, #3
 800cbf8:	f009 ff35 	bl	8016a66 <LeaveFrame>
 800cbfc:	a802      	add	r0, sp, #8
 800cbfe:	2102      	movs	r1, #2
 800cc00:	2204      	movs	r2, #4
 800cc02:	f009 ff30 	bl	8016a66 <LeaveFrame>
 800cc06:	4620      	mov	r0, r4
 800cc08:	b00a      	add	sp, #40	; 0x28
 800cc0a:	e8bd 0b00 	ldmia.w	sp!, {r8, r9, fp}
 800cc0e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cc10:	4604      	mov	r4, r0
 800cc12:	a806      	add	r0, sp, #24
 800cc14:	2101      	movs	r1, #1
 800cc16:	2202      	movs	r2, #2
 800cc18:	e003      	b.n	800cc22 <kfun:kotlin.text.lastIndexOf$default@kotlin.CharSequence.(kotlin.String;kotlin.Int;kotlin.Boolean;kotlin.Int)ValueType+0xe4>
 800cc1a:	4604      	mov	r4, r0
 800cc1c:	a806      	add	r0, sp, #24
 800cc1e:	2102      	movs	r1, #2
 800cc20:	2203      	movs	r2, #3
 800cc22:	f009 ff20 	bl	8016a66 <LeaveFrame>
 800cc26:	a802      	add	r0, sp, #8
 800cc28:	2102      	movs	r1, #2
 800cc2a:	2204      	movs	r2, #4
 800cc2c:	f009 ff1b 	bl	8016a66 <LeaveFrame>
 800cc30:	4620      	mov	r0, r4
 800cc32:	f7f4 fadb 	bl	80011ec <_Unwind_Resume>

0800cc36 <kfun:kotlin.text.indexOf#internal>:
 800cc36:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cc38:	af03      	add	r7, sp, #12
 800cc3a:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 800cc3e:	b08f      	sub	sp, #60	; 0x3c
 800cc40:	f10d 0a08 	add.w	sl, sp, #8
 800cc44:	460c      	mov	r4, r1
 800cc46:	4606      	mov	r6, r0
 800cc48:	2128      	movs	r1, #40	; 0x28
 800cc4a:	4650      	mov	r0, sl
 800cc4c:	461d      	mov	r5, r3
 800cc4e:	4693      	mov	fp, r2
 800cc50:	f00e fc52 	bl	801b4f8 <__aeabi_memclr>
 800cc54:	e9cd 6403 	strd	r6, r4, [sp, #12]
 800cc58:	68f8      	ldr	r0, [r7, #12]
 800cc5a:	f009 ff76 	bl	8016b4a <Kotlin_Boolean_not>
 800cc5e:	f640 3978 	movw	r9, #2936	; 0xb78
 800cc62:	f24f 21e7 	movw	r1, #62183	; 0xf2e7
 800cc66:	07c0      	lsls	r0, r0, #31
 800cc68:	f2cb 5936 	movt	r9, #46390	; 0xb536
 800cc6c:	f2c1 61a8 	movt	r1, #5800	; 0x16a8
 800cc70:	d034      	beq.n	800ccdc <kfun:kotlin.text.indexOf#internal+0xa6>
 800cc72:	6830      	ldr	r0, [r6, #0]
 800cc74:	460a      	mov	r2, r1
 800cc76:	464b      	mov	r3, r9
 800cc78:	f00a f8b6 	bl	8016de8 <LookupOpenMethod>
 800cc7c:	4601      	mov	r1, r0
 800cc7e:	4630      	mov	r0, r6
 800cc80:	4788      	blx	r1
 800cc82:	f04f 0900 	mov.w	r9, #0
 800cc86:	42a8      	cmp	r0, r5
 800cc88:	e9cd 990c 	strd	r9, r9, [sp, #48]	; 0x30
 800cc8c:	bfb8      	it	lt
 800cc8e:	4605      	movlt	r5, r0
 800cc90:	4628      	mov	r0, r5
 800cc92:	f10a 060c 	add.w	r6, sl, #12
 800cc96:	f009 ffaa 	bl	8016bee <Kotlin_Int_toInt>
 800cc9a:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 800cc9e:	f641 50a0 	movw	r0, #7584	; 0x1da0
 800cca2:	f048 0104 	orr.w	r1, r8, #4
 800cca6:	f6c0 0002 	movt	r0, #2050	; 0x802
 800ccaa:	f009 fe26 	bl	80168fa <AllocInstance>
 800ccae:	f1bb 0f00 	cmp.w	fp, #0
 800ccb2:	462a      	mov	r2, r5
 800ccb4:	bfd8      	it	le
 800ccb6:	46cb      	movle	fp, r9
 800ccb8:	f640 3978 	movw	r9, #2936	; 0xb78
 800ccbc:	4659      	mov	r1, fp
 800ccbe:	4604      	mov	r4, r0
 800ccc0:	f2cb 5936 	movt	r9, #46390	; 0xb536
 800ccc4:	f7fe fba9 	bl	800b41a <kfun:kotlin.ranges.IntRange.<init>(kotlin.Int;kotlin.Int)kotlin.ranges.IntRange>
 800ccc8:	4630      	mov	r0, r6
 800ccca:	4621      	mov	r1, r4
 800cccc:	f007 fc8d 	bl	80145ea <UpdateReturnRef>
 800ccd0:	4640      	mov	r0, r8
 800ccd2:	2100      	movs	r1, #0
 800ccd4:	2202      	movs	r2, #2
 800ccd6:	f009 fec6 	bl	8016a66 <LeaveFrame>
 800ccda:	e021      	b.n	800cd20 <kfun:kotlin.text.indexOf#internal+0xea>
 800ccdc:	2400      	movs	r4, #0
 800ccde:	460a      	mov	r2, r1
 800cce0:	e9cd 460c 	strd	r4, r6, [sp, #48]	; 0x30
 800cce4:	464b      	mov	r3, r9
 800cce6:	6830      	ldr	r0, [r6, #0]
 800cce8:	f00a f87e 	bl	8016de8 <LookupOpenMethod>
 800ccec:	4601      	mov	r1, r0
 800ccee:	4630      	mov	r0, r6
 800ccf0:	4788      	blx	r1
 800ccf2:	2101      	movs	r1, #1
 800ccf4:	f10a 0810 	add.w	r8, sl, #16
 800ccf8:	f009 ff5a 	bl	8016bb0 <Kotlin_Int_minus_Int>
 800ccfc:	4606      	mov	r6, r0
 800ccfe:	a80c      	add	r0, sp, #48	; 0x30
 800cd00:	2101      	movs	r1, #1
 800cd02:	2202      	movs	r2, #2
 800cd04:	f009 feaf 	bl	8016a66 <LeaveFrame>
 800cd08:	2d00      	cmp	r5, #0
 800cd0a:	4642      	mov	r2, r8
 800cd0c:	bfc8      	it	gt
 800cd0e:	462c      	movgt	r4, r5
 800cd10:	455e      	cmp	r6, fp
 800cd12:	bfa8      	it	ge
 800cd14:	465e      	movge	r6, fp
 800cd16:	4621      	mov	r1, r4
 800cd18:	4630      	mov	r0, r6
 800cd1a:	f000 f8af 	bl	800ce7c <kfun:kotlin.ranges.downTo@kotlin.Int.(kotlin.Int)kotlin.ranges.IntProgression>
 800cd1e:	4604      	mov	r4, r0
 800cd20:	f10a 0014 	add.w	r0, sl, #20
 800cd24:	4621      	mov	r1, r4
 800cd26:	f8d7 8008 	ldr.w	r8, [r7, #8]
 800cd2a:	f007 fa51 	bl	80141d0 <UpdateRef>
 800cd2e:	9803      	ldr	r0, [sp, #12]
 800cd30:	b150      	cbz	r0, 800cd48 <kfun:kotlin.text.indexOf#internal+0x112>
 800cd32:	f241 31b0 	movw	r1, #5040	; 0x13b0
 800cd36:	f6c0 0102 	movt	r1, #2050	; 0x802
 800cd3a:	f008 f91d 	bl	8014f78 <IsInstance>
 800cd3e:	07c0      	lsls	r0, r0, #31
 800cd40:	bf1c      	itt	ne
 800cd42:	9804      	ldrne	r0, [sp, #16]
 800cd44:	2800      	cmpne	r0, #0
 800cd46:	d138      	bne.n	800cdba <kfun:kotlin.text.indexOf#internal+0x184>
 800cd48:	9807      	ldr	r0, [sp, #28]
 800cd4a:	6801      	ldr	r1, [r0, #0]
 800cd4c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800cd4e:	f10a 0120 	add.w	r1, sl, #32
 800cd52:	4790      	blx	r2
 800cd54:	4601      	mov	r1, r0
 800cd56:	f10a 0024 	add.w	r0, sl, #36	; 0x24
 800cd5a:	f007 fa39 	bl	80141d0 <UpdateRef>
 800cd5e:	f04f 0b00 	mov.w	fp, #0
 800cd62:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
 800cd66:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800cd68:	6801      	ldr	r1, [r0, #0]
 800cd6a:	6d49      	ldr	r1, [r1, #84]	; 0x54
 800cd6c:	4788      	blx	r1
 800cd6e:	07c0      	lsls	r0, r0, #31
 800cd70:	d064      	beq.n	800ce3c <kfun:kotlin.text.indexOf#internal+0x206>
 800cd72:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800cd74:	e9cd b00c 	strd	fp, r0, [sp, #48]	; 0x30
 800cd78:	6801      	ldr	r1, [r0, #0]
 800cd7a:	6d09      	ldr	r1, [r1, #80]	; 0x50
 800cd7c:	4788      	blx	r1
 800cd7e:	4606      	mov	r6, r0
 800cd80:	4650      	mov	r0, sl
 800cd82:	2101      	movs	r1, #1
 800cd84:	2202      	movs	r2, #2
 800cd86:	f009 fe6e 	bl	8016a66 <LeaveFrame>
 800cd8a:	e9dd 5403 	ldrd	r5, r4, [sp, #12]
 800cd8e:	f24f 22e7 	movw	r2, #62183	; 0xf2e7
 800cd92:	6820      	ldr	r0, [r4, #0]
 800cd94:	f2c1 62a8 	movt	r2, #5800	; 0x16a8
 800cd98:	464b      	mov	r3, r9
 800cd9a:	f00a f825 	bl	8016de8 <LookupOpenMethod>
 800cd9e:	4601      	mov	r1, r0
 800cda0:	4620      	mov	r0, r4
 800cda2:	4788      	blx	r1
 800cda4:	e9cd 0800 	strd	r0, r8, [sp]
 800cda8:	4620      	mov	r0, r4
 800cdaa:	2100      	movs	r1, #0
 800cdac:	462a      	mov	r2, r5
 800cdae:	4633      	mov	r3, r6
 800cdb0:	f000 f8df 	bl	800cf72 <kfun:kotlin.text.regionMatchesImpl#internal>
 800cdb4:	07c0      	lsls	r0, r0, #31
 800cdb6:	d0d6      	beq.n	800cd66 <kfun:kotlin.text.indexOf#internal+0x130>
 800cdb8:	e042      	b.n	800ce40 <kfun:kotlin.text.indexOf#internal+0x20a>
 800cdba:	f241 31b0 	movw	r1, #5040	; 0x13b0
 800cdbe:	f6c0 0102 	movt	r1, #2050	; 0x802
 800cdc2:	f008 f8d9 	bl	8014f78 <IsInstance>
 800cdc6:	07c0      	lsls	r0, r0, #31
 800cdc8:	9807      	ldr	r0, [sp, #28]
 800cdca:	6801      	ldr	r1, [r0, #0]
 800cdcc:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800cdce:	d0be      	beq.n	800cd4e <kfun:kotlin.text.indexOf#internal+0x118>
 800cdd0:	f10a 0118 	add.w	r1, sl, #24
 800cdd4:	4790      	blx	r2
 800cdd6:	4601      	mov	r1, r0
 800cdd8:	f10a 001c 	add.w	r0, sl, #28
 800cddc:	f007 f9f8 	bl	80141d0 <UpdateRef>
 800cde0:	f04f 0b00 	mov.w	fp, #0
 800cde4:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
 800cde8:	9809      	ldr	r0, [sp, #36]	; 0x24
 800cdea:	6801      	ldr	r1, [r0, #0]
 800cdec:	6d49      	ldr	r1, [r1, #84]	; 0x54
 800cdee:	4788      	blx	r1
 800cdf0:	07c0      	lsls	r0, r0, #31
 800cdf2:	d023      	beq.n	800ce3c <kfun:kotlin.text.indexOf#internal+0x206>
 800cdf4:	9809      	ldr	r0, [sp, #36]	; 0x24
 800cdf6:	e9cd b00c 	strd	fp, r0, [sp, #48]	; 0x30
 800cdfa:	6801      	ldr	r1, [r0, #0]
 800cdfc:	6d09      	ldr	r1, [r1, #80]	; 0x50
 800cdfe:	4788      	blx	r1
 800ce00:	4606      	mov	r6, r0
 800ce02:	4650      	mov	r0, sl
 800ce04:	2101      	movs	r1, #1
 800ce06:	2202      	movs	r2, #2
 800ce08:	f009 fe2d 	bl	8016a66 <LeaveFrame>
 800ce0c:	e9dd 5403 	ldrd	r5, r4, [sp, #12]
 800ce10:	f24f 22e7 	movw	r2, #62183	; 0xf2e7
 800ce14:	6820      	ldr	r0, [r4, #0]
 800ce16:	f2c1 62a8 	movt	r2, #5800	; 0x16a8
 800ce1a:	464b      	mov	r3, r9
 800ce1c:	f009 ffe4 	bl	8016de8 <LookupOpenMethod>
 800ce20:	4601      	mov	r1, r0
 800ce22:	4620      	mov	r0, r4
 800ce24:	4788      	blx	r1
 800ce26:	e9cd 0800 	strd	r0, r8, [sp]
 800ce2a:	4620      	mov	r0, r4
 800ce2c:	2100      	movs	r1, #0
 800ce2e:	462a      	mov	r2, r5
 800ce30:	4633      	mov	r3, r6
 800ce32:	f008 fa80 	bl	8015336 <Kotlin_String_regionMatches>
 800ce36:	07c0      	lsls	r0, r0, #31
 800ce38:	d0d6      	beq.n	800cde8 <kfun:kotlin.text.indexOf#internal+0x1b2>
 800ce3a:	e001      	b.n	800ce40 <kfun:kotlin.text.indexOf#internal+0x20a>
 800ce3c:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
 800ce40:	a802      	add	r0, sp, #8
 800ce42:	2102      	movs	r1, #2
 800ce44:	220a      	movs	r2, #10
 800ce46:	f009 fe0e 	bl	8016a66 <LeaveFrame>
 800ce4a:	4630      	mov	r0, r6
 800ce4c:	b00f      	add	sp, #60	; 0x3c
 800ce4e:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 800ce52:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ce54:	e002      	b.n	800ce5c <kfun:kotlin.text.indexOf#internal+0x226>
 800ce56:	e008      	b.n	800ce6a <kfun:kotlin.text.indexOf#internal+0x234>
 800ce58:	e000      	b.n	800ce5c <kfun:kotlin.text.indexOf#internal+0x226>
 800ce5a:	e006      	b.n	800ce6a <kfun:kotlin.text.indexOf#internal+0x234>
 800ce5c:	4604      	mov	r4, r0
 800ce5e:	a80c      	add	r0, sp, #48	; 0x30
 800ce60:	2101      	movs	r1, #1
 800ce62:	2202      	movs	r2, #2
 800ce64:	f009 fdff 	bl	8016a66 <LeaveFrame>
 800ce68:	e000      	b.n	800ce6c <kfun:kotlin.text.indexOf#internal+0x236>
 800ce6a:	4604      	mov	r4, r0
 800ce6c:	a802      	add	r0, sp, #8
 800ce6e:	2102      	movs	r1, #2
 800ce70:	220a      	movs	r2, #10
 800ce72:	f009 fdf8 	bl	8016a66 <LeaveFrame>
 800ce76:	4620      	mov	r0, r4
 800ce78:	f7f4 f9b8 	bl	80011ec <_Unwind_Resume>

0800ce7c <kfun:kotlin.ranges.downTo@kotlin.Int.(kotlin.Int)kotlin.ranges.IntProgression>:
 800ce7c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ce7e:	af03      	add	r7, sp, #12
 800ce80:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 800ce84:	b08d      	sub	sp, #52	; 0x34
 800ce86:	4605      	mov	r5, r0
 800ce88:	f240 0010 	movw	r0, #16
 800ce8c:	2400      	movs	r4, #0
 800ce8e:	9200      	str	r2, [sp, #0]
 800ce90:	9403      	str	r4, [sp, #12]
 800ce92:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800ce96:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800ce9a:	468b      	mov	fp, r1
 800ce9c:	6800      	ldr	r0, [r0, #0]
 800ce9e:	a901      	add	r1, sp, #4
 800cea0:	f101 0a08 	add.w	sl, r1, #8
 800cea4:	b970      	cbnz	r0, 800cec4 <kfun:kotlin.ranges.downTo@kotlin.Int.(kotlin.Int)kotlin.ranges.IntProgression+0x48>
 800cea6:	f240 0010 	movw	r0, #16
 800ceaa:	f24d 02eb 	movw	r2, #53483	; 0xd0eb
 800ceae:	1d0b      	adds	r3, r1, #4
 800ceb0:	f242 6170 	movw	r1, #9840	; 0x2670
 800ceb4:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800ceb8:	f6c0 0102 	movt	r1, #2050	; 0x802
 800cebc:	f6c0 0200 	movt	r2, #2048	; 0x800
 800cec0:	f009 fd83 	bl	80169ca <InitInstance>
 800cec4:	f10d 0910 	add.w	r9, sp, #16
 800cec8:	9406      	str	r4, [sp, #24]
 800ceca:	e9cd 4004 	strd	r4, r0, [sp, #16]
 800cece:	f242 30c0 	movw	r0, #9152	; 0x23c0
 800ced2:	f109 0108 	add.w	r1, r9, #8
 800ced6:	f6c0 0002 	movt	r0, #2050	; 0x802
 800ceda:	f009 fd0e 	bl	80168fa <AllocInstance>
 800cede:	4606      	mov	r6, r0
 800cee0:	a80a      	add	r0, sp, #40	; 0x28
 800cee2:	2101      	movs	r1, #1
 800cee4:	2202      	movs	r2, #2
 800cee6:	e9cd 4607 	strd	r4, r6, [sp, #28]
 800ceea:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800ceee:	960b      	str	r6, [sp, #44]	; 0x2c
 800cef0:	f009 fdb9 	bl	8016a66 <LeaveFrame>
 800cef4:	4628      	mov	r0, r5
 800cef6:	6135      	str	r5, [r6, #16]
 800cef8:	f009 fe79 	bl	8016bee <Kotlin_Int_toInt>
 800cefc:	4658      	mov	r0, fp
 800cefe:	f009 fe76 	bl	8016bee <Kotlin_Int_toInt>
 800cf02:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800cf06:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 800cf0a:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
 800cf0e:	f009 fe64 	bl	8016bda <Kotlin_Int_unaryMinus>
 800cf12:	4602      	mov	r2, r0
 800cf14:	4628      	mov	r0, r5
 800cf16:	4659      	mov	r1, fp
 800cf18:	f7fe fac0 	bl	800b49c <kfun:kotlin.internal.differenceModulo#internal>
 800cf1c:	4601      	mov	r1, r0
 800cf1e:	4658      	mov	r0, fp
 800cf20:	f009 fe40 	bl	8016ba4 <Kotlin_Int_plus_Int>
 800cf24:	4604      	mov	r4, r0
 800cf26:	a80a      	add	r0, sp, #40	; 0x28
 800cf28:	2100      	movs	r1, #0
 800cf2a:	2202      	movs	r2, #2
 800cf2c:	f009 fd9b 	bl	8016a66 <LeaveFrame>
 800cf30:	4620      	mov	r0, r4
 800cf32:	f009 fe5c 	bl	8016bee <Kotlin_Int_toInt>
 800cf36:	a807      	add	r0, sp, #28
 800cf38:	2101      	movs	r1, #1
 800cf3a:	2203      	movs	r2, #3
 800cf3c:	e9c6 8402 	strd	r8, r4, [r6, #8]
 800cf40:	f009 fd91 	bl	8016a66 <LeaveFrame>
 800cf44:	4650      	mov	r0, sl
 800cf46:	4631      	mov	r1, r6
 800cf48:	f007 fb4f 	bl	80145ea <UpdateReturnRef>
 800cf4c:	4648      	mov	r0, r9
 800cf4e:	2101      	movs	r1, #1
 800cf50:	2203      	movs	r2, #3
 800cf52:	f009 fd88 	bl	8016a66 <LeaveFrame>
 800cf56:	9800      	ldr	r0, [sp, #0]
 800cf58:	4631      	mov	r1, r6
 800cf5a:	f007 fb46 	bl	80145ea <UpdateReturnRef>
 800cf5e:	a801      	add	r0, sp, #4
 800cf60:	2100      	movs	r1, #0
 800cf62:	2203      	movs	r2, #3
 800cf64:	f009 fd7f 	bl	8016a66 <LeaveFrame>
 800cf68:	4630      	mov	r0, r6
 800cf6a:	b00d      	add	sp, #52	; 0x34
 800cf6c:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 800cf70:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800cf72 <kfun:kotlin.text.regionMatchesImpl#internal>:
 800cf72:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cf74:	af03      	add	r7, sp, #12
 800cf76:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 800cf7a:	b089      	sub	sp, #36	; 0x24
 800cf7c:	4683      	mov	fp, r0
 800cf7e:	461d      	mov	r5, r3
 800cf80:	460e      	mov	r6, r1
 800cf82:	ea45 0006 	orr.w	r0, r5, r6
 800cf86:	4614      	mov	r4, r2
 800cf88:	f04f 0900 	mov.w	r9, #0
 800cf8c:	2800      	cmp	r0, #0
 800cf8e:	f8cd b01c 	str.w	fp, [sp, #28]
 800cf92:	f8cd 9018 	str.w	r9, [sp, #24]
 800cf96:	9408      	str	r4, [sp, #32]
 800cf98:	db26      	blt.n	800cfe8 <kfun:kotlin.text.regionMatchesImpl#internal+0x76>
 800cf9a:	f24f 29e7 	movw	r9, #62183	; 0xf2e7
 800cf9e:	f640 3a78 	movw	sl, #2936	; 0xb78
 800cfa2:	f8db 0000 	ldr.w	r0, [fp]
 800cfa6:	f2c1 69a8 	movt	r9, #5800	; 0x16a8
 800cfaa:	f2cb 5a36 	movt	sl, #46390	; 0xb536
 800cfae:	464a      	mov	r2, r9
 800cfb0:	4653      	mov	r3, sl
 800cfb2:	f009 ff19 	bl	8016de8 <LookupOpenMethod>
 800cfb6:	4601      	mov	r1, r0
 800cfb8:	4658      	mov	r0, fp
 800cfba:	4788      	blx	r1
 800cfbc:	f8d7 8008 	ldr.w	r8, [r7, #8]
 800cfc0:	4641      	mov	r1, r8
 800cfc2:	f009 fdf5 	bl	8016bb0 <Kotlin_Int_minus_Int>
 800cfc6:	42b0      	cmp	r0, r6
 800cfc8:	db0c      	blt.n	800cfe4 <kfun:kotlin.text.regionMatchesImpl#internal+0x72>
 800cfca:	6820      	ldr	r0, [r4, #0]
 800cfcc:	464a      	mov	r2, r9
 800cfce:	4653      	mov	r3, sl
 800cfd0:	f009 ff0a 	bl	8016de8 <LookupOpenMethod>
 800cfd4:	4601      	mov	r1, r0
 800cfd6:	4620      	mov	r0, r4
 800cfd8:	4788      	blx	r1
 800cfda:	4641      	mov	r1, r8
 800cfdc:	f009 fde8 	bl	8016bb0 <Kotlin_Int_minus_Int>
 800cfe0:	42a8      	cmp	r0, r5
 800cfe2:	da0b      	bge.n	800cffc <kfun:kotlin.text.regionMatchesImpl#internal+0x8a>
 800cfe4:	f04f 0900 	mov.w	r9, #0
 800cfe8:	a806      	add	r0, sp, #24
 800cfea:	2102      	movs	r1, #2
 800cfec:	2203      	movs	r2, #3
 800cfee:	f009 fd3a 	bl	8016a66 <LeaveFrame>
 800cff2:	4648      	mov	r0, r9
 800cff4:	b009      	add	sp, #36	; 0x24
 800cff6:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 800cffa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cffc:	a802      	add	r0, sp, #8
 800cffe:	2101      	movs	r1, #1
 800d000:	c070      	stmia	r0!, {r4, r5, r6}
 800d002:	4640      	mov	r0, r8
 800d004:	f04f 0901 	mov.w	r9, #1
 800d008:	f009 fdd2 	bl	8016bb0 <Kotlin_Int_minus_Int>
 800d00c:	4601      	mov	r1, r0
 800d00e:	2000      	movs	r0, #0
 800d010:	460a      	mov	r2, r1
 800d012:	f04f 0a00 	mov.w	sl, #0
 800d016:	9201      	str	r2, [sp, #4]
 800d018:	f009 fdb9 	bl	8016b8e <Kotlin_Int_compareTo_Int>
 800d01c:	2800      	cmp	r0, #0
 800d01e:	dce3      	bgt.n	800cfe8 <kfun:kotlin.text.regionMatchesImpl#internal+0x76>
 800d020:	9c02      	ldr	r4, [sp, #8]
 800d022:	4650      	mov	r0, sl
 800d024:	2101      	movs	r1, #1
 800d026:	f009 fdbd 	bl	8016ba4 <Kotlin_Int_plus_Int>
 800d02a:	9005      	str	r0, [sp, #20]
 800d02c:	4651      	mov	r1, sl
 800d02e:	9804      	ldr	r0, [sp, #16]
 800d030:	f009 fdb8 	bl	8016ba4 <Kotlin_Int_plus_Int>
 800d034:	f642 4912 	movw	r9, #11282	; 0x2c12
 800d038:	f24b 08b0 	movw	r8, #45232	; 0xb0b0
 800d03c:	4605      	mov	r5, r0
 800d03e:	f8db 0000 	ldr.w	r0, [fp]
 800d042:	f2c1 6938 	movt	r9, #5688	; 0x1638
 800d046:	f6c5 4853 	movt	r8, #23635	; 0x5c53
 800d04a:	464a      	mov	r2, r9
 800d04c:	4643      	mov	r3, r8
 800d04e:	f009 fecb 	bl	8016de8 <LookupOpenMethod>
 800d052:	4602      	mov	r2, r0
 800d054:	4658      	mov	r0, fp
 800d056:	4629      	mov	r1, r5
 800d058:	4790      	blx	r2
 800d05a:	4605      	mov	r5, r0
 800d05c:	9803      	ldr	r0, [sp, #12]
 800d05e:	4651      	mov	r1, sl
 800d060:	f009 fda0 	bl	8016ba4 <Kotlin_Int_plus_Int>
 800d064:	4606      	mov	r6, r0
 800d066:	6820      	ldr	r0, [r4, #0]
 800d068:	464a      	mov	r2, r9
 800d06a:	4643      	mov	r3, r8
 800d06c:	f009 febc 	bl	8016de8 <LookupOpenMethod>
 800d070:	4602      	mov	r2, r0
 800d072:	4620      	mov	r0, r4
 800d074:	4631      	mov	r1, r6
 800d076:	4790      	blx	r2
 800d078:	fa1f f880 	uxth.w	r8, r0
 800d07c:	b2ad      	uxth	r5, r5
 800d07e:	4545      	cmp	r5, r8
 800d080:	d101      	bne.n	800d086 <kfun:kotlin.text.regionMatchesImpl#internal+0x114>
 800d082:	2001      	movs	r0, #1
 800d084:	e01b      	b.n	800d0be <kfun:kotlin.text.regionMatchesImpl#internal+0x14c>
 800d086:	68f8      	ldr	r0, [r7, #12]
 800d088:	f009 fd5f 	bl	8016b4a <Kotlin_Boolean_not>
 800d08c:	07c0      	lsls	r0, r0, #31
 800d08e:	d001      	beq.n	800d094 <kfun:kotlin.text.regionMatchesImpl#internal+0x122>
 800d090:	2000      	movs	r0, #0
 800d092:	e014      	b.n	800d0be <kfun:kotlin.text.regionMatchesImpl#internal+0x14c>
 800d094:	4628      	mov	r0, r5
 800d096:	f008 fab1 	bl	80155fc <Kotlin_Char_toUpperCase>
 800d09a:	4606      	mov	r6, r0
 800d09c:	4640      	mov	r0, r8
 800d09e:	f008 faad 	bl	80155fc <Kotlin_Char_toUpperCase>
 800d0a2:	4286      	cmp	r6, r0
 800d0a4:	d0ed      	beq.n	800d082 <kfun:kotlin.text.regionMatchesImpl#internal+0x110>
 800d0a6:	4628      	mov	r0, r5
 800d0a8:	f008 fa47 	bl	801553a <Kotlin_Char_toLowerCase>
 800d0ac:	4605      	mov	r5, r0
 800d0ae:	4640      	mov	r0, r8
 800d0b0:	f008 fa43 	bl	801553a <Kotlin_Char_toLowerCase>
 800d0b4:	4285      	cmp	r5, r0
 800d0b6:	f04f 0000 	mov.w	r0, #0
 800d0ba:	bf08      	it	eq
 800d0bc:	2001      	moveq	r0, #1
 800d0be:	f009 fd44 	bl	8016b4a <Kotlin_Boolean_not>
 800d0c2:	07c0      	lsls	r0, r0, #31
 800d0c4:	d18e      	bne.n	800cfe4 <kfun:kotlin.text.regionMatchesImpl#internal+0x72>
 800d0c6:	9801      	ldr	r0, [sp, #4]
 800d0c8:	f04f 0901 	mov.w	r9, #1
 800d0cc:	4582      	cmp	sl, r0
 800d0ce:	f8dd a014 	ldr.w	sl, [sp, #20]
 800d0d2:	d1a6      	bne.n	800d022 <kfun:kotlin.text.regionMatchesImpl#internal+0xb0>
 800d0d4:	e788      	b.n	800cfe8 <kfun:kotlin.text.regionMatchesImpl#internal+0x76>
 800d0d6:	e7ff      	b.n	800d0d8 <kfun:kotlin.text.regionMatchesImpl#internal+0x166>
 800d0d8:	4604      	mov	r4, r0
 800d0da:	a806      	add	r0, sp, #24
 800d0dc:	2102      	movs	r1, #2
 800d0de:	2203      	movs	r2, #3
 800d0e0:	f009 fcc1 	bl	8016a66 <LeaveFrame>
 800d0e4:	4620      	mov	r0, r4
 800d0e6:	f7f4 f881 	bl	80011ec <_Unwind_Resume>

0800d0ea <kfun:kotlin.ranges.IntProgression.Companion.<init>()kotlin.ranges.IntProgression.Companion>:
 800d0ea:	b580      	push	{r7, lr}
 800d0ec:	466f      	mov	r7, sp
 800d0ee:	b084      	sub	sp, #16
 800d0f0:	2100      	movs	r1, #0
 800d0f2:	2202      	movs	r2, #2
 800d0f4:	e9cd 1000 	strd	r1, r0, [sp]
 800d0f8:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800d0fc:	a802      	add	r0, sp, #8
 800d0fe:	2101      	movs	r1, #1
 800d100:	f009 fcb1 	bl	8016a66 <LeaveFrame>
 800d104:	4668      	mov	r0, sp
 800d106:	2101      	movs	r1, #1
 800d108:	2202      	movs	r2, #2
 800d10a:	f009 fcac 	bl	8016a66 <LeaveFrame>
 800d10e:	b004      	add	sp, #16
 800d110:	bd80      	pop	{r7, pc}

0800d112 <kfun:konan.internal.boxCPointer(kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointed>?)konan.internal.CPointerBox?>:
 800d112:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d114:	af03      	add	r7, sp, #12
 800d116:	f84d 8d04 	str.w	r8, [sp, #-4]!
 800d11a:	b088      	sub	sp, #32
 800d11c:	4606      	mov	r6, r0
 800d11e:	2500      	movs	r5, #0
 800d120:	4688      	mov	r8, r1
 800d122:	2e00      	cmp	r6, #0
 800d124:	e9cd 5500 	strd	r5, r5, [sp]
 800d128:	d020      	beq.n	800d16c <kfun:konan.internal.boxCPointer(kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointed>?)konan.internal.CPointerBox?+0x5a>
 800d12a:	4668      	mov	r0, sp
 800d12c:	f040 0104 	orr.w	r1, r0, #4
 800d130:	f642 7020 	movw	r0, #12064	; 0x2f20
 800d134:	f6c0 0002 	movt	r0, #2050	; 0x802
 800d138:	f009 fbdf 	bl	80168fa <AllocInstance>
 800d13c:	4604      	mov	r4, r0
 800d13e:	a806      	add	r0, sp, #24
 800d140:	2101      	movs	r1, #1
 800d142:	2202      	movs	r2, #2
 800d144:	e9cd 5402 	strd	r5, r4, [sp, #8]
 800d148:	e9cd 5404 	strd	r5, r4, [sp, #16]
 800d14c:	e9cd 5406 	strd	r5, r4, [sp, #24]
 800d150:	f009 fc89 	bl	8016a66 <LeaveFrame>
 800d154:	a804      	add	r0, sp, #16
 800d156:	2101      	movs	r1, #1
 800d158:	2202      	movs	r2, #2
 800d15a:	f009 fc84 	bl	8016a66 <LeaveFrame>
 800d15e:	a802      	add	r0, sp, #8
 800d160:	2101      	movs	r1, #1
 800d162:	2202      	movs	r2, #2
 800d164:	60a6      	str	r6, [r4, #8]
 800d166:	f009 fc7e 	bl	8016a66 <LeaveFrame>
 800d16a:	4625      	mov	r5, r4
 800d16c:	4640      	mov	r0, r8
 800d16e:	4629      	mov	r1, r5
 800d170:	f007 fa3b 	bl	80145ea <UpdateReturnRef>
 800d174:	4668      	mov	r0, sp
 800d176:	2100      	movs	r1, #0
 800d178:	2202      	movs	r2, #2
 800d17a:	f009 fc74 	bl	8016a66 <LeaveFrame>
 800d17e:	4628      	mov	r0, r5
 800d180:	b008      	add	sp, #32
 800d182:	f85d 8b04 	ldr.w	r8, [sp], #4
 800d186:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d188 <kfun:konan.internal.CPointerBox.hashCode()ValueType>:
 800d188:	b5b0      	push	{r4, r5, r7, lr}
 800d18a:	af02      	add	r7, sp, #8
 800d18c:	b084      	sub	sp, #16
 800d18e:	2100      	movs	r1, #0
 800d190:	2202      	movs	r2, #2
 800d192:	e9cd 1000 	strd	r1, r0, [sp]
 800d196:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800d19a:	2101      	movs	r1, #1
 800d19c:	6884      	ldr	r4, [r0, #8]
 800d19e:	a802      	add	r0, sp, #8
 800d1a0:	f009 fc61 	bl	8016a66 <LeaveFrame>
 800d1a4:	17e5      	asrs	r5, r4, #31
 800d1a6:	4620      	mov	r0, r4
 800d1a8:	4629      	mov	r1, r5
 800d1aa:	2220      	movs	r2, #32
 800d1ac:	f009 fd62 	bl	8016c74 <Kotlin_Long_ushr_Int>
 800d1b0:	4622      	mov	r2, r4
 800d1b2:	462b      	mov	r3, r5
 800d1b4:	f009 fd45 	bl	8016c42 <Kotlin_Long_xor_Long>
 800d1b8:	f009 fd6f 	bl	8016c9a <Kotlin_Long_toInt>
 800d1bc:	4604      	mov	r4, r0
 800d1be:	4668      	mov	r0, sp
 800d1c0:	2101      	movs	r1, #1
 800d1c2:	2202      	movs	r2, #2
 800d1c4:	f009 fc4f 	bl	8016a66 <LeaveFrame>
 800d1c8:	4620      	mov	r0, r4
 800d1ca:	b004      	add	sp, #16
 800d1cc:	bdb0      	pop	{r4, r5, r7, pc}

0800d1ce <kfun:konan.internal.CPointerBox.toString()kotlin.String>:
 800d1ce:	b5b0      	push	{r4, r5, r7, lr}
 800d1d0:	af02      	add	r7, sp, #8
 800d1d2:	b086      	sub	sp, #24
 800d1d4:	460c      	mov	r4, r1
 800d1d6:	2100      	movs	r1, #0
 800d1d8:	e9cd 1001 	strd	r1, r0, [sp, #4]
 800d1dc:	2202      	movs	r2, #2
 800d1de:	e9cd 1103 	strd	r1, r1, [sp, #12]
 800d1e2:	2101      	movs	r1, #1
 800d1e4:	9005      	str	r0, [sp, #20]
 800d1e6:	6885      	ldr	r5, [r0, #8]
 800d1e8:	a804      	add	r0, sp, #16
 800d1ea:	f009 fc3c 	bl	8016a66 <LeaveFrame>
 800d1ee:	a801      	add	r0, sp, #4
 800d1f0:	f100 0108 	add.w	r1, r0, #8
 800d1f4:	4628      	mov	r0, r5
 800d1f6:	f000 f86e 	bl	800d2d6 <kfun:kotlinx.cinterop.CPointer.toString()kotlin.String>
 800d1fa:	4605      	mov	r5, r0
 800d1fc:	4620      	mov	r0, r4
 800d1fe:	4629      	mov	r1, r5
 800d200:	f007 f9f3 	bl	80145ea <UpdateReturnRef>
 800d204:	a801      	add	r0, sp, #4
 800d206:	2101      	movs	r1, #1
 800d208:	2203      	movs	r2, #3
 800d20a:	f009 fc2c 	bl	8016a66 <LeaveFrame>
 800d20e:	4628      	mov	r0, r5
 800d210:	b006      	add	sp, #24
 800d212:	bdb0      	pop	{r4, r5, r7, pc}
 800d214:	4604      	mov	r4, r0
 800d216:	a801      	add	r0, sp, #4
 800d218:	2101      	movs	r1, #1
 800d21a:	2203      	movs	r2, #3
 800d21c:	f009 fc23 	bl	8016a66 <LeaveFrame>
 800d220:	4620      	mov	r0, r4
 800d222:	f7f3 ffe3 	bl	80011ec <_Unwind_Resume>

0800d226 <kfun:konan.internal.CPointerBox.equals(kotlin.Any?)ValueType>:
 800d226:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d228:	af03      	add	r7, sp, #12
 800d22a:	f84d bd04 	str.w	fp, [sp, #-4]!
 800d22e:	b086      	sub	sp, #24
 800d230:	460d      	mov	r5, r1
 800d232:	4606      	mov	r6, r0
 800d234:	2400      	movs	r4, #0
 800d236:	2d00      	cmp	r5, #0
 800d238:	9602      	str	r6, [sp, #8]
 800d23a:	9401      	str	r4, [sp, #4]
 800d23c:	9503      	str	r5, [sp, #12]
 800d23e:	d01d      	beq.n	800d27c <kfun:konan.internal.CPointerBox.equals(kotlin.Any?)ValueType+0x56>
 800d240:	f642 7120 	movw	r1, #12064	; 0x2f20
 800d244:	4628      	mov	r0, r5
 800d246:	f6c0 0102 	movt	r1, #2050	; 0x802
 800d24a:	f007 fe95 	bl	8014f78 <IsInstance>
 800d24e:	07c0      	lsls	r0, r0, #31
 800d250:	f04f 0400 	mov.w	r4, #0
 800d254:	d012      	beq.n	800d27c <kfun:konan.internal.CPointerBox.equals(kotlin.Any?)ValueType+0x56>
 800d256:	a804      	add	r0, sp, #16
 800d258:	e9cd 4604 	strd	r4, r6, [sp, #16]
 800d25c:	2101      	movs	r1, #1
 800d25e:	2202      	movs	r2, #2
 800d260:	68b6      	ldr	r6, [r6, #8]
 800d262:	f009 fc00 	bl	8016a66 <LeaveFrame>
 800d266:	a804      	add	r0, sp, #16
 800d268:	e9cd 4504 	strd	r4, r5, [sp, #16]
 800d26c:	2101      	movs	r1, #1
 800d26e:	2202      	movs	r2, #2
 800d270:	68ad      	ldr	r5, [r5, #8]
 800d272:	f009 fbf8 	bl	8016a66 <LeaveFrame>
 800d276:	42ae      	cmp	r6, r5
 800d278:	bf08      	it	eq
 800d27a:	2401      	moveq	r4, #1
 800d27c:	a801      	add	r0, sp, #4
 800d27e:	2102      	movs	r1, #2
 800d280:	2203      	movs	r2, #3
 800d282:	f009 fbf0 	bl	8016a66 <LeaveFrame>
 800d286:	4620      	mov	r0, r4
 800d288:	b006      	add	sp, #24
 800d28a:	f85d bb04 	ldr.w	fp, [sp], #4
 800d28e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d290 <kfun:konan.internal.CPointerBox.getPointer(kotlinx.cinterop.AutofreeScope)ValueType>:
 800d290:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d292:	af03      	add	r7, sp, #12
 800d294:	f84d bd04 	str.w	fp, [sp, #-4]!
 800d298:	b086      	sub	sp, #24
 800d29a:	460c      	mov	r4, r1
 800d29c:	2600      	movs	r6, #0
 800d29e:	9002      	str	r0, [sp, #8]
 800d2a0:	2101      	movs	r1, #1
 800d2a2:	9601      	str	r6, [sp, #4]
 800d2a4:	2202      	movs	r2, #2
 800d2a6:	e9cd 4603 	strd	r4, r6, [sp, #12]
 800d2aa:	9005      	str	r0, [sp, #20]
 800d2ac:	6885      	ldr	r5, [r0, #8]
 800d2ae:	a804      	add	r0, sp, #16
 800d2b0:	f009 fbd9 	bl	8016a66 <LeaveFrame>
 800d2b4:	a804      	add	r0, sp, #16
 800d2b6:	2101      	movs	r1, #1
 800d2b8:	2202      	movs	r2, #2
 800d2ba:	e9cd 6404 	strd	r6, r4, [sp, #16]
 800d2be:	f009 fbd2 	bl	8016a66 <LeaveFrame>
 800d2c2:	a801      	add	r0, sp, #4
 800d2c4:	2102      	movs	r1, #2
 800d2c6:	2203      	movs	r2, #3
 800d2c8:	f009 fbcd 	bl	8016a66 <LeaveFrame>
 800d2cc:	4628      	mov	r0, r5
 800d2ce:	b006      	add	sp, #24
 800d2d0:	f85d bb04 	ldr.w	fp, [sp], #4
 800d2d4:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d2d6 <kfun:kotlinx.cinterop.CPointer.toString()kotlin.String>:
 800d2d6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d2d8:	af03      	add	r7, sp, #12
 800d2da:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 800d2de:	b097      	sub	sp, #92	; 0x5c
 800d2e0:	f10d 0810 	add.w	r8, sp, #16
 800d2e4:	e9cd 1000 	strd	r1, r0, [sp]
 800d2e8:	f641 10f0 	movw	r0, #6640	; 0x19f0
 800d2ec:	f108 0104 	add.w	r1, r8, #4
 800d2f0:	f04f 0900 	mov.w	r9, #0
 800d2f4:	f6c0 0002 	movt	r0, #2050	; 0x802
 800d2f8:	e9cd 9902 	strd	r9, r9, [sp, #8]
 800d2fc:	e9cd 990a 	strd	r9, r9, [sp, #40]	; 0x28
 800d300:	e9cd 9908 	strd	r9, r9, [sp, #32]
 800d304:	e9cd 9906 	strd	r9, r9, [sp, #24]
 800d308:	e9cd 9904 	strd	r9, r9, [sp, #16]
 800d30c:	f009 faf5 	bl	80168fa <AllocInstance>
 800d310:	4604      	mov	r4, r0
 800d312:	210a      	movs	r1, #10
 800d314:	e9cd 940c 	strd	r9, r4, [sp, #48]	; 0x30
 800d318:	f7fd fc1d 	bl	800ab56 <kfun:kotlin.text.StringBuilder.<init>(kotlin.Int)kotlin.text.StringBuilder>
 800d31c:	ad0c      	add	r5, sp, #48	; 0x30
 800d31e:	2101      	movs	r1, #1
 800d320:	2202      	movs	r2, #2
 800d322:	4628      	mov	r0, r5
 800d324:	f009 fb9f 	bl	8016a66 <LeaveFrame>
 800d328:	f108 0008 	add.w	r0, r8, #8
 800d32c:	4621      	mov	r1, r4
 800d32e:	f006 ff4f 	bl	80141d0 <UpdateRef>
 800d332:	9c06      	ldr	r4, [sp, #24]
 800d334:	f105 0b0c 	add.w	fp, r5, #12
 800d338:	f242 1050 	movw	r0, #8528	; 0x2150
 800d33c:	e9cd 990f 	strd	r9, r9, [sp, #60]	; 0x3c
 800d340:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800d344:	4659      	mov	r1, fp
 800d346:	e9cd 940c 	strd	r9, r4, [sp, #48]	; 0x30
 800d34a:	900e      	str	r0, [sp, #56]	; 0x38
 800d34c:	f007 ff4a 	bl	80151e4 <Kotlin_String_toCharArray>
 800d350:	f105 0a10 	add.w	sl, r5, #16
 800d354:	4601      	mov	r1, r0
 800d356:	4620      	mov	r0, r4
 800d358:	4652      	mov	r2, sl
 800d35a:	f7fc ff1a 	bl	800a192 <kfun:kotlin.text.StringBuilder.append(kotlin.CharArray)kotlin.text.StringBuilder>
 800d35e:	4601      	mov	r1, r0
 800d360:	f108 000c 	add.w	r0, r8, #12
 800d364:	f007 f941 	bl	80145ea <UpdateReturnRef>
 800d368:	a80c      	add	r0, sp, #48	; 0x30
 800d36a:	2102      	movs	r1, #2
 800d36c:	2205      	movs	r2, #5
 800d36e:	f009 fb7a 	bl	8016a66 <LeaveFrame>
 800d372:	ac12      	add	r4, sp, #72	; 0x48
 800d374:	f642 70d0 	movw	r0, #12240	; 0x2fd0
 800d378:	f044 0104 	orr.w	r1, r4, #4
 800d37c:	f6c0 0002 	movt	r0, #2050	; 0x802
 800d380:	9d06      	ldr	r5, [sp, #24]
 800d382:	e9cd 9912 	strd	r9, r9, [sp, #72]	; 0x48
 800d386:	f009 fab8 	bl	80168fa <AllocInstance>
 800d38a:	4606      	mov	r6, r0
 800d38c:	a80c      	add	r0, sp, #48	; 0x30
 800d38e:	2101      	movs	r1, #1
 800d390:	2202      	movs	r2, #2
 800d392:	e9cd 9614 	strd	r9, r6, [sp, #80]	; 0x50
 800d396:	e9cd 960c 	strd	r9, r6, [sp, #48]	; 0x30
 800d39a:	f009 fb64 	bl	8016a66 <LeaveFrame>
 800d39e:	f10d 0950 	add.w	r9, sp, #80	; 0x50
 800d3a2:	9801      	ldr	r0, [sp, #4]
 800d3a4:	60b0      	str	r0, [r6, #8]
 800d3a6:	2101      	movs	r1, #1
 800d3a8:	4648      	mov	r0, r9
 800d3aa:	2202      	movs	r2, #2
 800d3ac:	f009 fb5b 	bl	8016a66 <LeaveFrame>
 800d3b0:	f108 0010 	add.w	r0, r8, #16
 800d3b4:	4631      	mov	r1, r6
 800d3b6:	f007 f918 	bl	80145ea <UpdateReturnRef>
 800d3ba:	4620      	mov	r0, r4
 800d3bc:	2100      	movs	r1, #0
 800d3be:	2202      	movs	r2, #2
 800d3c0:	f009 fb51 	bl	8016a66 <LeaveFrame>
 800d3c4:	f108 0214 	add.w	r2, r8, #20
 800d3c8:	4628      	mov	r0, r5
 800d3ca:	4631      	mov	r1, r6
 800d3cc:	f7fd ffd8 	bl	800b380 <kfun:kotlin.text.StringBuilder.append(kotlin.Any?)kotlin.text.StringBuilder>
 800d3d0:	9c06      	ldr	r4, [sp, #24]
 800d3d2:	f242 1010 	movw	r0, #8464	; 0x2110
 800d3d6:	2600      	movs	r6, #0
 800d3d8:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800d3dc:	4659      	mov	r1, fp
 800d3de:	e9cd 660f 	strd	r6, r6, [sp, #60]	; 0x3c
 800d3e2:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
 800d3e6:	900e      	str	r0, [sp, #56]	; 0x38
 800d3e8:	f007 fefc 	bl	80151e4 <Kotlin_String_toCharArray>
 800d3ec:	4601      	mov	r1, r0
 800d3ee:	4620      	mov	r0, r4
 800d3f0:	4652      	mov	r2, sl
 800d3f2:	f7fc fece 	bl	800a192 <kfun:kotlin.text.StringBuilder.append(kotlin.CharArray)kotlin.text.StringBuilder>
 800d3f6:	4601      	mov	r1, r0
 800d3f8:	f108 0018 	add.w	r0, r8, #24
 800d3fc:	aa02      	add	r2, sp, #8
 800d3fe:	f108 0b1c 	add.w	fp, r8, #28
 800d402:	f042 0a04 	orr.w	sl, r2, #4
 800d406:	f007 f8f0 	bl	80145ea <UpdateReturnRef>
 800d40a:	ad0c      	add	r5, sp, #48	; 0x30
 800d40c:	2102      	movs	r1, #2
 800d40e:	2205      	movs	r2, #5
 800d410:	4628      	mov	r0, r5
 800d412:	f009 fb28 	bl	8016a66 <LeaveFrame>
 800d416:	9806      	ldr	r0, [sp, #24]
 800d418:	e9cd 660e 	strd	r6, r6, [sp, #56]	; 0x38
 800d41c:	e9cd 600c 	strd	r6, r0, [sp, #48]	; 0x30
 800d420:	9616      	str	r6, [sp, #88]	; 0x58
 800d422:	e9cd 6014 	strd	r6, r0, [sp, #80]	; 0x50
 800d426:	68c4      	ldr	r4, [r0, #12]
 800d428:	f109 0008 	add.w	r0, r9, #8
 800d42c:	4621      	mov	r1, r4
 800d42e:	f006 fecf 	bl	80141d0 <UpdateRef>
 800d432:	f105 0008 	add.w	r0, r5, #8
 800d436:	4621      	mov	r1, r4
 800d438:	f007 f8d7 	bl	80145ea <UpdateReturnRef>
 800d43c:	4648      	mov	r0, r9
 800d43e:	2101      	movs	r1, #1
 800d440:	2203      	movs	r2, #3
 800d442:	f009 fb10 	bl	8016a66 <LeaveFrame>
 800d446:	980d      	ldr	r0, [sp, #52]	; 0x34
 800d448:	2101      	movs	r1, #1
 800d44a:	2202      	movs	r2, #2
 800d44c:	e9cd 6014 	strd	r6, r0, [sp, #80]	; 0x50
 800d450:	6886      	ldr	r6, [r0, #8]
 800d452:	a814      	add	r0, sp, #80	; 0x50
 800d454:	f009 fb07 	bl	8016a66 <LeaveFrame>
 800d458:	f105 030c 	add.w	r3, r5, #12
 800d45c:	4620      	mov	r0, r4
 800d45e:	2100      	movs	r1, #0
 800d460:	4632      	mov	r2, r6
 800d462:	f007 fe76 	bl	8015152 <Kotlin_String_fromCharArray>
 800d466:	4604      	mov	r4, r0
 800d468:	4658      	mov	r0, fp
 800d46a:	4621      	mov	r1, r4
 800d46c:	f007 f8bd 	bl	80145ea <UpdateReturnRef>
 800d470:	4628      	mov	r0, r5
 800d472:	2101      	movs	r1, #1
 800d474:	2204      	movs	r2, #4
 800d476:	f009 faf6 	bl	8016a66 <LeaveFrame>
 800d47a:	4650      	mov	r0, sl
 800d47c:	4621      	mov	r1, r4
 800d47e:	f007 f8b4 	bl	80145ea <UpdateReturnRef>
 800d482:	a804      	add	r0, sp, #16
 800d484:	2100      	movs	r1, #0
 800d486:	2208      	movs	r2, #8
 800d488:	f009 faed 	bl	8016a66 <LeaveFrame>
 800d48c:	9800      	ldr	r0, [sp, #0]
 800d48e:	4621      	mov	r1, r4
 800d490:	f007 f8ab 	bl	80145ea <UpdateReturnRef>
 800d494:	a802      	add	r0, sp, #8
 800d496:	2100      	movs	r1, #0
 800d498:	2202      	movs	r2, #2
 800d49a:	f009 fae4 	bl	8016a66 <LeaveFrame>
 800d49e:	4620      	mov	r0, r4
 800d4a0:	b017      	add	sp, #92	; 0x5c
 800d4a2:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 800d4a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d4a8:	e001      	b.n	800d4ae <kfun:kotlinx.cinterop.CPointer.toString()kotlin.String+0x1d8>
 800d4aa:	4604      	mov	r4, r0
 800d4ac:	e005      	b.n	800d4ba <kfun:kotlinx.cinterop.CPointer.toString()kotlin.String+0x1e4>
 800d4ae:	4604      	mov	r4, r0
 800d4b0:	a80c      	add	r0, sp, #48	; 0x30
 800d4b2:	2102      	movs	r1, #2
 800d4b4:	2205      	movs	r2, #5
 800d4b6:	f009 fad6 	bl	8016a66 <LeaveFrame>
 800d4ba:	a804      	add	r0, sp, #16
 800d4bc:	2100      	movs	r1, #0
 800d4be:	2208      	movs	r2, #8
 800d4c0:	f009 fad1 	bl	8016a66 <LeaveFrame>
 800d4c4:	a802      	add	r0, sp, #8
 800d4c6:	2100      	movs	r1, #0
 800d4c8:	2202      	movs	r2, #2
 800d4ca:	f009 facc 	bl	8016a66 <LeaveFrame>
 800d4ce:	4620      	mov	r0, r4
 800d4d0:	f7f3 fe8c 	bl	80011ec <_Unwind_Resume>

0800d4d4 <kfun:konan.internal.NativePtrBox.hashCode()ValueType>:
 800d4d4:	b5b0      	push	{r4, r5, r7, lr}
 800d4d6:	af02      	add	r7, sp, #8
 800d4d8:	b084      	sub	sp, #16
 800d4da:	2100      	movs	r1, #0
 800d4dc:	2202      	movs	r2, #2
 800d4de:	e9cd 1000 	strd	r1, r0, [sp]
 800d4e2:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800d4e6:	2101      	movs	r1, #1
 800d4e8:	6884      	ldr	r4, [r0, #8]
 800d4ea:	a802      	add	r0, sp, #8
 800d4ec:	f009 fabb 	bl	8016a66 <LeaveFrame>
 800d4f0:	17e5      	asrs	r5, r4, #31
 800d4f2:	4620      	mov	r0, r4
 800d4f4:	4629      	mov	r1, r5
 800d4f6:	2220      	movs	r2, #32
 800d4f8:	f009 fbbc 	bl	8016c74 <Kotlin_Long_ushr_Int>
 800d4fc:	4622      	mov	r2, r4
 800d4fe:	462b      	mov	r3, r5
 800d500:	f009 fb9f 	bl	8016c42 <Kotlin_Long_xor_Long>
 800d504:	f009 fbc9 	bl	8016c9a <Kotlin_Long_toInt>
 800d508:	4604      	mov	r4, r0
 800d50a:	4668      	mov	r0, sp
 800d50c:	2101      	movs	r1, #1
 800d50e:	2202      	movs	r2, #2
 800d510:	f009 faa9 	bl	8016a66 <LeaveFrame>
 800d514:	4620      	mov	r0, r4
 800d516:	b004      	add	sp, #16
 800d518:	bdb0      	pop	{r4, r5, r7, pc}

0800d51a <kfun:konan.internal.NativePtrBox.toString()kotlin.String>:
 800d51a:	b5b0      	push	{r4, r5, r7, lr}
 800d51c:	af02      	add	r7, sp, #8
 800d51e:	b086      	sub	sp, #24
 800d520:	460c      	mov	r4, r1
 800d522:	2100      	movs	r1, #0
 800d524:	e9cd 1001 	strd	r1, r0, [sp, #4]
 800d528:	2202      	movs	r2, #2
 800d52a:	e9cd 1103 	strd	r1, r1, [sp, #12]
 800d52e:	2101      	movs	r1, #1
 800d530:	9005      	str	r0, [sp, #20]
 800d532:	6885      	ldr	r5, [r0, #8]
 800d534:	a804      	add	r0, sp, #16
 800d536:	f009 fa96 	bl	8016a66 <LeaveFrame>
 800d53a:	a801      	add	r0, sp, #4
 800d53c:	f100 0108 	add.w	r1, r0, #8
 800d540:	4628      	mov	r0, r5
 800d542:	f000 f84b 	bl	800d5dc <kfun:konan.internal.NativePtr.toString()kotlin.String>
 800d546:	4605      	mov	r5, r0
 800d548:	4620      	mov	r0, r4
 800d54a:	4629      	mov	r1, r5
 800d54c:	f007 f84d 	bl	80145ea <UpdateReturnRef>
 800d550:	a801      	add	r0, sp, #4
 800d552:	2101      	movs	r1, #1
 800d554:	2203      	movs	r2, #3
 800d556:	f009 fa86 	bl	8016a66 <LeaveFrame>
 800d55a:	4628      	mov	r0, r5
 800d55c:	b006      	add	sp, #24
 800d55e:	bdb0      	pop	{r4, r5, r7, pc}
 800d560:	4604      	mov	r4, r0
 800d562:	a801      	add	r0, sp, #4
 800d564:	2101      	movs	r1, #1
 800d566:	2203      	movs	r2, #3
 800d568:	f009 fa7d 	bl	8016a66 <LeaveFrame>
 800d56c:	4620      	mov	r0, r4
 800d56e:	f7f3 fe3d 	bl	80011ec <_Unwind_Resume>

0800d572 <kfun:konan.internal.NativePtrBox.equals(kotlin.Any?)ValueType>:
 800d572:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d574:	af03      	add	r7, sp, #12
 800d576:	f84d bd04 	str.w	fp, [sp, #-4]!
 800d57a:	b086      	sub	sp, #24
 800d57c:	460d      	mov	r5, r1
 800d57e:	4606      	mov	r6, r0
 800d580:	2400      	movs	r4, #0
 800d582:	2d00      	cmp	r5, #0
 800d584:	9602      	str	r6, [sp, #8]
 800d586:	9401      	str	r4, [sp, #4]
 800d588:	9503      	str	r5, [sp, #12]
 800d58a:	d01d      	beq.n	800d5c8 <kfun:konan.internal.NativePtrBox.equals(kotlin.Any?)ValueType+0x56>
 800d58c:	f642 71d0 	movw	r1, #12240	; 0x2fd0
 800d590:	4628      	mov	r0, r5
 800d592:	f6c0 0102 	movt	r1, #2050	; 0x802
 800d596:	f007 fcef 	bl	8014f78 <IsInstance>
 800d59a:	07c0      	lsls	r0, r0, #31
 800d59c:	f04f 0400 	mov.w	r4, #0
 800d5a0:	d012      	beq.n	800d5c8 <kfun:konan.internal.NativePtrBox.equals(kotlin.Any?)ValueType+0x56>
 800d5a2:	a804      	add	r0, sp, #16
 800d5a4:	e9cd 4604 	strd	r4, r6, [sp, #16]
 800d5a8:	2101      	movs	r1, #1
 800d5aa:	2202      	movs	r2, #2
 800d5ac:	68b6      	ldr	r6, [r6, #8]
 800d5ae:	f009 fa5a 	bl	8016a66 <LeaveFrame>
 800d5b2:	a804      	add	r0, sp, #16
 800d5b4:	e9cd 4504 	strd	r4, r5, [sp, #16]
 800d5b8:	2101      	movs	r1, #1
 800d5ba:	2202      	movs	r2, #2
 800d5bc:	68ad      	ldr	r5, [r5, #8]
 800d5be:	f009 fa52 	bl	8016a66 <LeaveFrame>
 800d5c2:	42ae      	cmp	r6, r5
 800d5c4:	bf08      	it	eq
 800d5c6:	2401      	moveq	r4, #1
 800d5c8:	a801      	add	r0, sp, #4
 800d5ca:	2102      	movs	r1, #2
 800d5cc:	2203      	movs	r2, #3
 800d5ce:	f009 fa4a 	bl	8016a66 <LeaveFrame>
 800d5d2:	4620      	mov	r0, r4
 800d5d4:	b006      	add	sp, #24
 800d5d6:	f85d bb04 	ldr.w	fp, [sp], #4
 800d5da:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d5dc <kfun:konan.internal.NativePtr.toString()kotlin.String>:
 800d5dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d5de:	af03      	add	r7, sp, #12
 800d5e0:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 800d5e4:	b091      	sub	sp, #68	; 0x44
 800d5e6:	f10d 0b04 	add.w	fp, sp, #4
 800d5ea:	9100      	str	r1, [sp, #0]
 800d5ec:	4681      	mov	r9, r0
 800d5ee:	f641 10f0 	movw	r0, #6640	; 0x19f0
 800d5f2:	f10b 0104 	add.w	r1, fp, #4
 800d5f6:	2500      	movs	r5, #0
 800d5f8:	f6c0 0002 	movt	r0, #2050	; 0x802
 800d5fc:	9507      	str	r5, [sp, #28]
 800d5fe:	e9cd 5505 	strd	r5, r5, [sp, #20]
 800d602:	e9cd 5503 	strd	r5, r5, [sp, #12]
 800d606:	e9cd 5501 	strd	r5, r5, [sp, #4]
 800d60a:	f009 f976 	bl	80168fa <AllocInstance>
 800d60e:	4604      	mov	r4, r0
 800d610:	210a      	movs	r1, #10
 800d612:	e9cd 5408 	strd	r5, r4, [sp, #32]
 800d616:	f7fd fa9e 	bl	800ab56 <kfun:kotlin.text.StringBuilder.<init>(kotlin.Int)kotlin.text.StringBuilder>
 800d61a:	f10d 0820 	add.w	r8, sp, #32
 800d61e:	2101      	movs	r1, #1
 800d620:	2202      	movs	r2, #2
 800d622:	4640      	mov	r0, r8
 800d624:	f009 fa1f 	bl	8016a66 <LeaveFrame>
 800d628:	f10b 0008 	add.w	r0, fp, #8
 800d62c:	4621      	mov	r1, r4
 800d62e:	f006 fdcf 	bl	80141d0 <UpdateRef>
 800d632:	9e03      	ldr	r6, [sp, #12]
 800d634:	f108 040c 	add.w	r4, r8, #12
 800d638:	f242 1020 	movw	r0, #8480	; 0x2120
 800d63c:	e9cd 550b 	strd	r5, r5, [sp, #44]	; 0x2c
 800d640:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800d644:	4621      	mov	r1, r4
 800d646:	e9cd 5608 	strd	r5, r6, [sp, #32]
 800d64a:	900a      	str	r0, [sp, #40]	; 0x28
 800d64c:	f007 fdca 	bl	80151e4 <Kotlin_String_toCharArray>
 800d650:	f108 0a10 	add.w	sl, r8, #16
 800d654:	4601      	mov	r1, r0
 800d656:	4630      	mov	r0, r6
 800d658:	4652      	mov	r2, sl
 800d65a:	f7fc fd9a 	bl	800a192 <kfun:kotlin.text.StringBuilder.append(kotlin.CharArray)kotlin.text.StringBuilder>
 800d65e:	4601      	mov	r1, r0
 800d660:	f10b 000c 	add.w	r0, fp, #12
 800d664:	f006 ffc1 	bl	80145ea <UpdateReturnRef>
 800d668:	a808      	add	r0, sp, #32
 800d66a:	2102      	movs	r1, #2
 800d66c:	2205      	movs	r2, #5
 800d66e:	f009 f9fa 	bl	8016a66 <LeaveFrame>
 800d672:	9d03      	ldr	r5, [sp, #12]
 800d674:	2010      	movs	r0, #16
 800d676:	f7fc fb70 	bl	8009d5a <kfun:kotlin.text.checkRadix(kotlin.Int)ValueType>
 800d67a:	f10b 0310 	add.w	r3, fp, #16
 800d67e:	ea4f 71e9 	mov.w	r1, r9, asr #31
 800d682:	4648      	mov	r0, r9
 800d684:	2210      	movs	r2, #16
 800d686:	f009 fb4b 	bl	8016d20 <Kotlin_Long_toStringRadix>
 800d68a:	f04f 0800 	mov.w	r8, #0
 800d68e:	4621      	mov	r1, r4
 800d690:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 800d694:	e9cd 080a 	strd	r0, r8, [sp, #40]	; 0x28
 800d698:	e9cd 8508 	strd	r8, r5, [sp, #32]
 800d69c:	f007 fda2 	bl	80151e4 <Kotlin_String_toCharArray>
 800d6a0:	4601      	mov	r1, r0
 800d6a2:	4628      	mov	r0, r5
 800d6a4:	4652      	mov	r2, sl
 800d6a6:	f7fc fd74 	bl	800a192 <kfun:kotlin.text.StringBuilder.append(kotlin.CharArray)kotlin.text.StringBuilder>
 800d6aa:	4601      	mov	r1, r0
 800d6ac:	f10b 0014 	add.w	r0, fp, #20
 800d6b0:	f10b 0918 	add.w	r9, fp, #24
 800d6b4:	f006 ff99 	bl	80145ea <UpdateReturnRef>
 800d6b8:	ac08      	add	r4, sp, #32
 800d6ba:	2102      	movs	r1, #2
 800d6bc:	2205      	movs	r2, #5
 800d6be:	4620      	mov	r0, r4
 800d6c0:	f009 f9d1 	bl	8016a66 <LeaveFrame>
 800d6c4:	9803      	ldr	r0, [sp, #12]
 800d6c6:	ad0e      	add	r5, sp, #56	; 0x38
 800d6c8:	e9cd 880a 	strd	r8, r8, [sp, #40]	; 0x28
 800d6cc:	e9cd 8008 	strd	r8, r0, [sp, #32]
 800d6d0:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 800d6d4:	e9cd 800e 	strd	r8, r0, [sp, #56]	; 0x38
 800d6d8:	68c6      	ldr	r6, [r0, #12]
 800d6da:	f105 0008 	add.w	r0, r5, #8
 800d6de:	4631      	mov	r1, r6
 800d6e0:	f006 fd76 	bl	80141d0 <UpdateRef>
 800d6e4:	f104 0008 	add.w	r0, r4, #8
 800d6e8:	4631      	mov	r1, r6
 800d6ea:	f006 ff7e 	bl	80145ea <UpdateReturnRef>
 800d6ee:	4628      	mov	r0, r5
 800d6f0:	2101      	movs	r1, #1
 800d6f2:	2203      	movs	r2, #3
 800d6f4:	f009 f9b7 	bl	8016a66 <LeaveFrame>
 800d6f8:	9809      	ldr	r0, [sp, #36]	; 0x24
 800d6fa:	2101      	movs	r1, #1
 800d6fc:	2202      	movs	r2, #2
 800d6fe:	e9cd 800e 	strd	r8, r0, [sp, #56]	; 0x38
 800d702:	6885      	ldr	r5, [r0, #8]
 800d704:	a80e      	add	r0, sp, #56	; 0x38
 800d706:	f009 f9ae 	bl	8016a66 <LeaveFrame>
 800d70a:	f104 030c 	add.w	r3, r4, #12
 800d70e:	4630      	mov	r0, r6
 800d710:	2100      	movs	r1, #0
 800d712:	462a      	mov	r2, r5
 800d714:	f007 fd1d 	bl	8015152 <Kotlin_String_fromCharArray>
 800d718:	4605      	mov	r5, r0
 800d71a:	4648      	mov	r0, r9
 800d71c:	4629      	mov	r1, r5
 800d71e:	f006 ff64 	bl	80145ea <UpdateReturnRef>
 800d722:	4620      	mov	r0, r4
 800d724:	2101      	movs	r1, #1
 800d726:	2204      	movs	r2, #4
 800d728:	f009 f99d 	bl	8016a66 <LeaveFrame>
 800d72c:	9800      	ldr	r0, [sp, #0]
 800d72e:	4629      	mov	r1, r5
 800d730:	f006 ff5b 	bl	80145ea <UpdateReturnRef>
 800d734:	a801      	add	r0, sp, #4
 800d736:	2100      	movs	r1, #0
 800d738:	2207      	movs	r2, #7
 800d73a:	f009 f994 	bl	8016a66 <LeaveFrame>
 800d73e:	4628      	mov	r0, r5
 800d740:	b011      	add	sp, #68	; 0x44
 800d742:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 800d746:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d748:	e001      	b.n	800d74e <kfun:konan.internal.NativePtr.toString()kotlin.String+0x172>
 800d74a:	4604      	mov	r4, r0
 800d74c:	e005      	b.n	800d75a <kfun:konan.internal.NativePtr.toString()kotlin.String+0x17e>
 800d74e:	4604      	mov	r4, r0
 800d750:	a808      	add	r0, sp, #32
 800d752:	2102      	movs	r1, #2
 800d754:	2205      	movs	r2, #5
 800d756:	f009 f986 	bl	8016a66 <LeaveFrame>
 800d75a:	a801      	add	r0, sp, #4
 800d75c:	2100      	movs	r1, #0
 800d75e:	2207      	movs	r2, #7
 800d760:	f009 f981 	bl	8016a66 <LeaveFrame>
 800d764:	4620      	mov	r0, r4
 800d766:	f7f3 fd41 	bl	80011ec <_Unwind_Resume>

0800d76a <kfun:kotlin.IteratorImpl.hasNext#internal>:
 800d76a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d76c:	af03      	add	r7, sp, #12
 800d76e:	f84d 8d04 	str.w	r8, [sp, #-4]!
 800d772:	b086      	sub	sp, #24
 800d774:	4605      	mov	r5, r0
 800d776:	2400      	movs	r4, #0
 800d778:	a804      	add	r0, sp, #16
 800d77a:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800d77e:	e9cd 4403 	strd	r4, r4, [sp, #12]
 800d782:	2101      	movs	r1, #1
 800d784:	9505      	str	r5, [sp, #20]
 800d786:	2202      	movs	r2, #2
 800d788:	f8d5 8008 	ldr.w	r8, [r5, #8]
 800d78c:	f009 f96b 	bl	8016a66 <LeaveFrame>
 800d790:	e9cd 4504 	strd	r4, r5, [sp, #16]
 800d794:	ae01      	add	r6, sp, #4
 800d796:	68ed      	ldr	r5, [r5, #12]
 800d798:	f106 0008 	add.w	r0, r6, #8
 800d79c:	4629      	mov	r1, r5
 800d79e:	f006 ff24 	bl	80145ea <UpdateReturnRef>
 800d7a2:	a804      	add	r0, sp, #16
 800d7a4:	2101      	movs	r1, #1
 800d7a6:	2202      	movs	r2, #2
 800d7a8:	f009 f95d 	bl	8016a66 <LeaveFrame>
 800d7ac:	4628      	mov	r0, r5
 800d7ae:	e9cd 4504 	strd	r4, r5, [sp, #16]
 800d7b2:	f007 f86e 	bl	8014892 <Kotlin_Array_getArrayLength>
 800d7b6:	4605      	mov	r5, r0
 800d7b8:	a804      	add	r0, sp, #16
 800d7ba:	2101      	movs	r1, #1
 800d7bc:	2202      	movs	r2, #2
 800d7be:	f009 f952 	bl	8016a66 <LeaveFrame>
 800d7c2:	4630      	mov	r0, r6
 800d7c4:	2101      	movs	r1, #1
 800d7c6:	2203      	movs	r2, #3
 800d7c8:	f009 f94d 	bl	8016a66 <LeaveFrame>
 800d7cc:	45a8      	cmp	r8, r5
 800d7ce:	bfb8      	it	lt
 800d7d0:	2401      	movlt	r4, #1
 800d7d2:	4620      	mov	r0, r4
 800d7d4:	b006      	add	sp, #24
 800d7d6:	f85d 8b04 	ldr.w	r8, [sp], #4
 800d7da:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d7dc <kfun:kotlin.IteratorImpl.next#internal>:
 800d7dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d7de:	af03      	add	r7, sp, #12
 800d7e0:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 800d7e4:	b097      	sub	sp, #92	; 0x5c
 800d7e6:	f10d 0a08 	add.w	sl, sp, #8
 800d7ea:	9101      	str	r1, [sp, #4]
 800d7ec:	4604      	mov	r4, r0
 800d7ee:	2128      	movs	r1, #40	; 0x28
 800d7f0:	4650      	mov	r0, sl
 800d7f2:	f00d fe81 	bl	801b4f8 <__aeabi_memclr>
 800d7f6:	2600      	movs	r6, #0
 800d7f8:	a810      	add	r0, sp, #64	; 0x40
 800d7fa:	9403      	str	r4, [sp, #12]
 800d7fc:	2101      	movs	r1, #1
 800d7fe:	960e      	str	r6, [sp, #56]	; 0x38
 800d800:	2202      	movs	r2, #2
 800d802:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
 800d806:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
 800d80a:	f8d4 8008 	ldr.w	r8, [r4, #8]
 800d80e:	f009 f92a 	bl	8016a66 <LeaveFrame>
 800d812:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
 800d816:	f10d 0b30 	add.w	fp, sp, #48	; 0x30
 800d81a:	68e5      	ldr	r5, [r4, #12]
 800d81c:	f10b 0908 	add.w	r9, fp, #8
 800d820:	4648      	mov	r0, r9
 800d822:	4629      	mov	r1, r5
 800d824:	f006 fee1 	bl	80145ea <UpdateReturnRef>
 800d828:	a810      	add	r0, sp, #64	; 0x40
 800d82a:	2101      	movs	r1, #1
 800d82c:	2202      	movs	r2, #2
 800d82e:	f009 f91a 	bl	8016a66 <LeaveFrame>
 800d832:	4628      	mov	r0, r5
 800d834:	e9cd 6510 	strd	r6, r5, [sp, #64]	; 0x40
 800d838:	f007 f82b 	bl	8014892 <Kotlin_Array_getArrayLength>
 800d83c:	4605      	mov	r5, r0
 800d83e:	a810      	add	r0, sp, #64	; 0x40
 800d840:	2101      	movs	r1, #1
 800d842:	2202      	movs	r2, #2
 800d844:	f009 f90f 	bl	8016a66 <LeaveFrame>
 800d848:	4658      	mov	r0, fp
 800d84a:	2101      	movs	r1, #1
 800d84c:	2203      	movs	r2, #3
 800d84e:	f009 f90a 	bl	8016a66 <LeaveFrame>
 800d852:	45a8      	cmp	r8, r5
 800d854:	bfb8      	it	lt
 800d856:	2601      	movlt	r6, #1
 800d858:	4630      	mov	r0, r6
 800d85a:	f009 f976 	bl	8016b4a <Kotlin_Boolean_not>
 800d85e:	07c0      	lsls	r0, r0, #31
 800d860:	d13f      	bne.n	800d8e2 <kfun:kotlin.IteratorImpl.next#internal+0x106>
 800d862:	f04f 0900 	mov.w	r9, #0
 800d866:	f10a 001c 	add.w	r0, sl, #28
 800d86a:	e9cd 9410 	strd	r9, r4, [sp, #64]	; 0x40
 800d86e:	f10a 0824 	add.w	r8, sl, #36	; 0x24
 800d872:	68e4      	ldr	r4, [r4, #12]
 800d874:	f10a 0520 	add.w	r5, sl, #32
 800d878:	4621      	mov	r1, r4
 800d87a:	f006 feb6 	bl	80145ea <UpdateReturnRef>
 800d87e:	a810      	add	r0, sp, #64	; 0x40
 800d880:	2101      	movs	r1, #1
 800d882:	2202      	movs	r2, #2
 800d884:	f009 f8ef 	bl	8016a66 <LeaveFrame>
 800d888:	9903      	ldr	r1, [sp, #12]
 800d88a:	4628      	mov	r0, r5
 800d88c:	f006 fca0 	bl	80141d0 <UpdateRef>
 800d890:	980a      	ldr	r0, [sp, #40]	; 0x28
 800d892:	2101      	movs	r1, #1
 800d894:	2202      	movs	r2, #2
 800d896:	e9cd 9010 	strd	r9, r0, [sp, #64]	; 0x40
 800d89a:	6885      	ldr	r5, [r0, #8]
 800d89c:	a810      	add	r0, sp, #64	; 0x40
 800d89e:	f009 f8e2 	bl	8016a66 <LeaveFrame>
 800d8a2:	4628      	mov	r0, r5
 800d8a4:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800d8a6:	f009 f996 	bl	8016bd6 <Kotlin_Int_inc>
 800d8aa:	e9cd 9610 	strd	r9, r6, [sp, #64]	; 0x40
 800d8ae:	2101      	movs	r1, #1
 800d8b0:	60b0      	str	r0, [r6, #8]
 800d8b2:	a810      	add	r0, sp, #64	; 0x40
 800d8b4:	2202      	movs	r2, #2
 800d8b6:	f009 f8d6 	bl	8016a66 <LeaveFrame>
 800d8ba:	4620      	mov	r0, r4
 800d8bc:	4629      	mov	r1, r5
 800d8be:	4642      	mov	r2, r8
 800d8c0:	f006 fe82 	bl	80145c8 <Kotlin_Array_get>
 800d8c4:	4604      	mov	r4, r0
 800d8c6:	9801      	ldr	r0, [sp, #4]
 800d8c8:	4621      	mov	r1, r4
 800d8ca:	f006 fe8e 	bl	80145ea <UpdateReturnRef>
 800d8ce:	a802      	add	r0, sp, #8
 800d8d0:	2101      	movs	r1, #1
 800d8d2:	220a      	movs	r2, #10
 800d8d4:	f009 f8c7 	bl	8016a66 <LeaveFrame>
 800d8d8:	4620      	mov	r0, r4
 800d8da:	b017      	add	sp, #92	; 0x5c
 800d8dc:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 800d8e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d8e2:	f641 10f0 	movw	r0, #6640	; 0x19f0
 800d8e6:	f10a 0108 	add.w	r1, sl, #8
 800d8ea:	f6c0 0002 	movt	r0, #2050	; 0x802
 800d8ee:	f10a 0610 	add.w	r6, sl, #16
 800d8f2:	f10a 040c 	add.w	r4, sl, #12
 800d8f6:	f009 f800 	bl	80168fa <AllocInstance>
 800d8fa:	210a      	movs	r1, #10
 800d8fc:	4605      	mov	r5, r0
 800d8fe:	f04f 0800 	mov.w	r8, #0
 800d902:	e9cd 8510 	strd	r8, r5, [sp, #64]	; 0x40
 800d906:	f7fd f926 	bl	800ab56 <kfun:kotlin.text.StringBuilder.<init>(kotlin.Int)kotlin.text.StringBuilder>
 800d90a:	a810      	add	r0, sp, #64	; 0x40
 800d90c:	2101      	movs	r1, #1
 800d90e:	2202      	movs	r2, #2
 800d910:	f009 f8a9 	bl	8016a66 <LeaveFrame>
 800d914:	4620      	mov	r0, r4
 800d916:	4629      	mov	r1, r5
 800d918:	f006 fc5a 	bl	80141d0 <UpdateRef>
 800d91c:	9803      	ldr	r0, [sp, #12]
 800d91e:	f10d 0b40 	add.w	fp, sp, #64	; 0x40
 800d922:	9d05      	ldr	r5, [sp, #20]
 800d924:	2101      	movs	r1, #1
 800d926:	2202      	movs	r2, #2
 800d928:	e9cd 8010 	strd	r8, r0, [sp, #64]	; 0x40
 800d92c:	6884      	ldr	r4, [r0, #8]
 800d92e:	4658      	mov	r0, fp
 800d930:	f009 f899 	bl	8016a66 <LeaveFrame>
 800d934:	4628      	mov	r0, r5
 800d936:	4621      	mov	r1, r4
 800d938:	4632      	mov	r2, r6
 800d93a:	f7fc ff34 	bl	800a7a6 <kfun:kotlin.text.StringBuilder.append(kotlin.Int)kotlin.text.StringBuilder>
 800d93e:	f10a 0018 	add.w	r0, sl, #24
 800d942:	9001      	str	r0, [sp, #4]
 800d944:	9805      	ldr	r0, [sp, #20]
 800d946:	f10a 0614 	add.w	r6, sl, #20
 800d94a:	e9cd 8812 	strd	r8, r8, [sp, #72]	; 0x48
 800d94e:	e9cd 8010 	strd	r8, r0, [sp, #64]	; 0x40
 800d952:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 800d956:	e9cd 800c 	strd	r8, r0, [sp, #48]	; 0x30
 800d95a:	68c5      	ldr	r5, [r0, #12]
 800d95c:	4648      	mov	r0, r9
 800d95e:	4629      	mov	r1, r5
 800d960:	f006 fc36 	bl	80141d0 <UpdateRef>
 800d964:	f10b 0008 	add.w	r0, fp, #8
 800d968:	4629      	mov	r1, r5
 800d96a:	f006 fe3e 	bl	80145ea <UpdateReturnRef>
 800d96e:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 800d972:	2101      	movs	r1, #1
 800d974:	2203      	movs	r2, #3
 800d976:	4648      	mov	r0, r9
 800d978:	f009 f875 	bl	8016a66 <LeaveFrame>
 800d97c:	9811      	ldr	r0, [sp, #68]	; 0x44
 800d97e:	2101      	movs	r1, #1
 800d980:	2202      	movs	r2, #2
 800d982:	e9cd 800c 	strd	r8, r0, [sp, #48]	; 0x30
 800d986:	6884      	ldr	r4, [r0, #8]
 800d988:	a80c      	add	r0, sp, #48	; 0x30
 800d98a:	f009 f86c 	bl	8016a66 <LeaveFrame>
 800d98e:	f10b 030c 	add.w	r3, fp, #12
 800d992:	4628      	mov	r0, r5
 800d994:	2100      	movs	r1, #0
 800d996:	4622      	mov	r2, r4
 800d998:	f007 fbdb 	bl	8015152 <Kotlin_String_fromCharArray>
 800d99c:	4605      	mov	r5, r0
 800d99e:	4630      	mov	r0, r6
 800d9a0:	4629      	mov	r1, r5
 800d9a2:	f006 fe22 	bl	80145ea <UpdateReturnRef>
 800d9a6:	4658      	mov	r0, fp
 800d9a8:	2101      	movs	r1, #1
 800d9aa:	2204      	movs	r2, #4
 800d9ac:	f009 f85b 	bl	8016a66 <LeaveFrame>
 800d9b0:	9901      	ldr	r1, [sp, #4]
 800d9b2:	f242 0050 	movw	r0, #8272	; 0x2050
 800d9b6:	f6c0 0002 	movt	r0, #2050	; 0x802
 800d9ba:	f008 ff9e 	bl	80168fa <AllocInstance>
 800d9be:	4604      	mov	r4, r0
 800d9c0:	4629      	mov	r1, r5
 800d9c2:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
 800d9c6:	9512      	str	r5, [sp, #72]	; 0x48
 800d9c8:	e9cd 840c 	strd	r8, r4, [sp, #48]	; 0x30
 800d9cc:	950e      	str	r5, [sp, #56]	; 0x38
 800d9ce:	f7fc ff34 	bl	800a83a <kfun:kotlin.Exception.<init>(kotlin.String?)kotlin.Exception>
 800d9d2:	a814      	add	r0, sp, #80	; 0x50
 800d9d4:	2101      	movs	r1, #1
 800d9d6:	2202      	movs	r2, #2
 800d9d8:	e9cd 8414 	strd	r8, r4, [sp, #80]	; 0x50
 800d9dc:	f009 f843 	bl	8016a66 <LeaveFrame>
 800d9e0:	4648      	mov	r0, r9
 800d9e2:	2102      	movs	r1, #2
 800d9e4:	2203      	movs	r2, #3
 800d9e6:	f009 f83e 	bl	8016a66 <LeaveFrame>
 800d9ea:	a80c      	add	r0, sp, #48	; 0x30
 800d9ec:	2101      	movs	r1, #1
 800d9ee:	2202      	movs	r2, #2
 800d9f0:	e9cd 840c 	strd	r8, r4, [sp, #48]	; 0x30
 800d9f4:	f009 f837 	bl	8016a66 <LeaveFrame>
 800d9f8:	a810      	add	r0, sp, #64	; 0x40
 800d9fa:	2102      	movs	r1, #2
 800d9fc:	2203      	movs	r2, #3
 800d9fe:	f009 f832 	bl	8016a66 <LeaveFrame>
 800da02:	4620      	mov	r0, r4
 800da04:	f007 fa7d 	bl	8014f02 <ThrowException>
 800da08:	4604      	mov	r4, r0
 800da0a:	a802      	add	r0, sp, #8
 800da0c:	2101      	movs	r1, #1
 800da0e:	220a      	movs	r2, #10
 800da10:	f009 f829 	bl	8016a66 <LeaveFrame>
 800da14:	4620      	mov	r0, r4
 800da16:	f7f3 fbe9 	bl	80011ec <_Unwind_Resume>

0800da1a <kfun:kotlinx.cinterop.nativeMemUtils.<init>()kotlinx.cinterop.nativeMemUtils>:
 800da1a:	b580      	push	{r7, lr}
 800da1c:	466f      	mov	r7, sp
 800da1e:	b084      	sub	sp, #16
 800da20:	2100      	movs	r1, #0
 800da22:	2202      	movs	r2, #2
 800da24:	e9cd 1000 	strd	r1, r0, [sp]
 800da28:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800da2c:	a802      	add	r0, sp, #8
 800da2e:	2101      	movs	r1, #1
 800da30:	f009 f819 	bl	8016a66 <LeaveFrame>
 800da34:	4668      	mov	r0, sp
 800da36:	2101      	movs	r1, #1
 800da38:	2202      	movs	r2, #2
 800da3a:	f009 f814 	bl	8016a66 <LeaveFrame>
 800da3e:	b004      	add	sp, #16
 800da40:	bd80      	pop	{r7, pc}

0800da42 <kfun:kotlinx.cinterop.CValues.equals(kotlin.Any?)ValueType>:
 800da42:	b5f0      	push	{r4, r5, r6, r7, lr}
 800da44:	af03      	add	r7, sp, #12
 800da46:	f84d bd04 	str.w	fp, [sp, #-4]!
 800da4a:	b08a      	sub	sp, #40	; 0x28
 800da4c:	4604      	mov	r4, r0
 800da4e:	2000      	movs	r0, #0
 800da50:	428c      	cmp	r4, r1
 800da52:	9007      	str	r0, [sp, #28]
 800da54:	e9cd 0005 	strd	r0, r0, [sp, #20]
 800da58:	e9cd 0401 	strd	r0, r4, [sp, #4]
 800da5c:	e9cd 1003 	strd	r1, r0, [sp, #12]
 800da60:	d00c      	beq.n	800da7c <kfun:kotlinx.cinterop.CValues.equals(kotlin.Any?)ValueType+0x3a>
 800da62:	b149      	cbz	r1, 800da78 <kfun:kotlinx.cinterop.CValues.equals(kotlin.Any?)ValueType+0x36>
 800da64:	f642 0280 	movw	r2, #10368	; 0x2880
 800da68:	4608      	mov	r0, r1
 800da6a:	f6c0 0202 	movt	r2, #2050	; 0x802
 800da6e:	4611      	mov	r1, r2
 800da70:	f007 fa82 	bl	8014f78 <IsInstance>
 800da74:	07c0      	lsls	r0, r0, #31
 800da76:	d103      	bne.n	800da80 <kfun:kotlinx.cinterop.CValues.equals(kotlin.Any?)ValueType+0x3e>
 800da78:	2400      	movs	r4, #0
 800da7a:	e05f      	b.n	800db3c <kfun:kotlinx.cinterop.CValues.equals(kotlin.Any?)ValueType+0xfa>
 800da7c:	2401      	movs	r4, #1
 800da7e:	e05d      	b.n	800db3c <kfun:kotlinx.cinterop.CValues.equals(kotlin.Any?)ValueType+0xfa>
 800da80:	ad01      	add	r5, sp, #4
 800da82:	f105 010c 	add.w	r1, r5, #12
 800da86:	4620      	mov	r0, r4
 800da88:	f000 f86b 	bl	800db62 <kfun:kotlinx.cinterop.getBytes@kotlinx.cinterop.CValues<#GENERIC_kotlinx.cinterop.CVariable>.()Generic>
 800da8c:	4601      	mov	r1, r0
 800da8e:	f105 0010 	add.w	r0, r5, #16
 800da92:	f105 0414 	add.w	r4, r5, #20
 800da96:	f006 fb9b 	bl	80141d0 <UpdateRef>
 800da9a:	9803      	ldr	r0, [sp, #12]
 800da9c:	4621      	mov	r1, r4
 800da9e:	f000 f860 	bl	800db62 <kfun:kotlinx.cinterop.getBytes@kotlinx.cinterop.CValues<#GENERIC_kotlinx.cinterop.CVariable>.()Generic>
 800daa2:	4601      	mov	r1, r0
 800daa4:	f105 0018 	add.w	r0, r5, #24
 800daa8:	f006 fb92 	bl	80141d0 <UpdateRef>
 800daac:	9805      	ldr	r0, [sp, #20]
 800daae:	2400      	movs	r4, #0
 800dab0:	e9cd 4008 	strd	r4, r0, [sp, #32]
 800dab4:	f006 ff06 	bl	80148c4 <Kotlin_ByteArray_getArrayLength>
 800dab8:	4605      	mov	r5, r0
 800daba:	a808      	add	r0, sp, #32
 800dabc:	2101      	movs	r1, #1
 800dabe:	2202      	movs	r2, #2
 800dac0:	f008 ffd1 	bl	8016a66 <LeaveFrame>
 800dac4:	9807      	ldr	r0, [sp, #28]
 800dac6:	e9cd 4008 	strd	r4, r0, [sp, #32]
 800daca:	f006 fefb 	bl	80148c4 <Kotlin_ByteArray_getArrayLength>
 800dace:	4606      	mov	r6, r0
 800dad0:	a808      	add	r0, sp, #32
 800dad2:	2101      	movs	r1, #1
 800dad4:	2202      	movs	r2, #2
 800dad6:	f008 ffc6 	bl	8016a66 <LeaveFrame>
 800dada:	42b5      	cmp	r5, r6
 800dadc:	d12e      	bne.n	800db3c <kfun:kotlinx.cinterop.CValues.equals(kotlin.Any?)ValueType+0xfa>
 800dade:	9805      	ldr	r0, [sp, #20]
 800dae0:	e9cd 4008 	strd	r4, r0, [sp, #32]
 800dae4:	f006 feee 	bl	80148c4 <Kotlin_ByteArray_getArrayLength>
 800dae8:	4605      	mov	r5, r0
 800daea:	a808      	add	r0, sp, #32
 800daec:	2101      	movs	r1, #1
 800daee:	2202      	movs	r2, #2
 800daf0:	2401      	movs	r4, #1
 800daf2:	f008 ffb8 	bl	8016a66 <LeaveFrame>
 800daf6:	4628      	mov	r0, r5
 800daf8:	2101      	movs	r1, #1
 800dafa:	f009 f859 	bl	8016bb0 <Kotlin_Int_minus_Int>
 800dafe:	4605      	mov	r5, r0
 800db00:	2000      	movs	r0, #0
 800db02:	4629      	mov	r1, r5
 800db04:	f009 f843 	bl	8016b8e <Kotlin_Int_compareTo_Int>
 800db08:	2800      	cmp	r0, #0
 800db0a:	dc17      	bgt.n	800db3c <kfun:kotlinx.cinterop.CValues.equals(kotlin.Any?)ValueType+0xfa>
 800db0c:	2600      	movs	r6, #0
 800db0e:	9805      	ldr	r0, [sp, #20]
 800db10:	4631      	mov	r1, r6
 800db12:	f006 fec0 	bl	8014896 <Kotlin_ByteArray_get>
 800db16:	f009 f82b 	bl	8016b70 <Kotlin_Byte_toInt>
 800db1a:	4604      	mov	r4, r0
 800db1c:	9807      	ldr	r0, [sp, #28]
 800db1e:	4631      	mov	r1, r6
 800db20:	f006 feb9 	bl	8014896 <Kotlin_ByteArray_get>
 800db24:	f009 f824 	bl	8016b70 <Kotlin_Byte_toInt>
 800db28:	4284      	cmp	r4, r0
 800db2a:	d1a5      	bne.n	800da78 <kfun:kotlinx.cinterop.CValues.equals(kotlin.Any?)ValueType+0x36>
 800db2c:	4630      	mov	r0, r6
 800db2e:	2101      	movs	r1, #1
 800db30:	2401      	movs	r4, #1
 800db32:	f009 f837 	bl	8016ba4 <Kotlin_Int_plus_Int>
 800db36:	42ae      	cmp	r6, r5
 800db38:	4606      	mov	r6, r0
 800db3a:	d1e8      	bne.n	800db0e <kfun:kotlinx.cinterop.CValues.equals(kotlin.Any?)ValueType+0xcc>
 800db3c:	a801      	add	r0, sp, #4
 800db3e:	2102      	movs	r1, #2
 800db40:	2207      	movs	r2, #7
 800db42:	f008 ff90 	bl	8016a66 <LeaveFrame>
 800db46:	4620      	mov	r0, r4
 800db48:	b00a      	add	sp, #40	; 0x28
 800db4a:	f85d bb04 	ldr.w	fp, [sp], #4
 800db4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800db50:	4604      	mov	r4, r0
 800db52:	a801      	add	r0, sp, #4
 800db54:	2102      	movs	r1, #2
 800db56:	2207      	movs	r2, #7
 800db58:	f008 ff85 	bl	8016a66 <LeaveFrame>
 800db5c:	4620      	mov	r0, r4
 800db5e:	f7f3 fb45 	bl	80011ec <_Unwind_Resume>

0800db62 <kfun:kotlinx.cinterop.getBytes@kotlinx.cinterop.CValues<#GENERIC_kotlinx.cinterop.CVariable>.()Generic>:
 800db62:	b5f0      	push	{r4, r5, r6, r7, lr}
 800db64:	af03      	add	r7, sp, #12
 800db66:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 800db6a:	b093      	sub	sp, #76	; 0x4c
 800db6c:	46e9      	mov	r9, sp
 800db6e:	4688      	mov	r8, r1
 800db70:	4604      	mov	r4, r0
 800db72:	4648      	mov	r0, r9
 800db74:	2130      	movs	r1, #48	; 0x30
 800db76:	f00d fcbf 	bl	801b4f8 <__aeabi_memclr>
 800db7a:	f243 40d0 	movw	r0, #13520	; 0x34d0
 800db7e:	f109 0108 	add.w	r1, r9, #8
 800db82:	f6c0 0002 	movt	r0, #2050	; 0x802
 800db86:	9401      	str	r4, [sp, #4]
 800db88:	f008 feb7 	bl	80168fa <AllocInstance>
 800db8c:	4604      	mov	r4, r0
 800db8e:	2000      	movs	r0, #0
 800db90:	900e      	str	r0, [sp, #56]	; 0x38
 800db92:	f109 060c 	add.w	r6, r9, #12
 800db96:	e9cd 040c 	strd	r0, r4, [sp, #48]	; 0x30
 800db9a:	f240 0048 	movw	r0, #72	; 0x48
 800db9e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800dba2:	6803      	ldr	r3, [r0, #0]
 800dba4:	4620      	mov	r0, r4
 800dba6:	b993      	cbnz	r3, 800dbce <kfun:kotlinx.cinterop.getBytes@kotlinx.cinterop.CValues<#GENERIC_kotlinx.cinterop.CVariable>.()Generic+0x6c>
 800dba8:	a80c      	add	r0, sp, #48	; 0x30
 800dbaa:	f243 11b0 	movw	r1, #12720	; 0x31b0
 800dbae:	f24e 0271 	movw	r2, #57457	; 0xe071
 800dbb2:	f100 0308 	add.w	r3, r0, #8
 800dbb6:	f240 0048 	movw	r0, #72	; 0x48
 800dbba:	f6c0 0102 	movt	r1, #2050	; 0x802
 800dbbe:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800dbc2:	f6c0 0200 	movt	r2, #2048	; 0x800
 800dbc6:	f008 ff00 	bl	80169ca <InitInstance>
 800dbca:	4603      	mov	r3, r0
 800dbcc:	980d      	ldr	r0, [sp, #52]	; 0x34
 800dbce:	2100      	movs	r1, #0
 800dbd0:	2201      	movs	r2, #1
 800dbd2:	f04f 0b00 	mov.w	fp, #0
 800dbd6:	f000 f9e7 	bl	800dfa8 <kfun:kotlinx.cinterop.ArenaBase.<init>(kotlinx.cinterop.NativeFreeablePlacement;kotlin.Int;konan.internal.DefaultConstructorMarker)kotlinx.cinterop.ArenaBase>
 800dbda:	a80c      	add	r0, sp, #48	; 0x30
 800dbdc:	2101      	movs	r1, #1
 800dbde:	2203      	movs	r2, #3
 800dbe0:	f008 ff41 	bl	8016a66 <LeaveFrame>
 800dbe4:	4630      	mov	r0, r6
 800dbe6:	4621      	mov	r1, r4
 800dbe8:	f006 faf2 	bl	80141d0 <UpdateRef>
 800dbec:	9801      	ldr	r0, [sp, #4]
 800dbee:	6801      	ldr	r1, [r0, #0]
 800dbf0:	6d49      	ldr	r1, [r1, #84]	; 0x54
 800dbf2:	4788      	blx	r1
 800dbf4:	4601      	mov	r1, r0
 800dbf6:	f642 50b0 	movw	r0, #11696	; 0x2db0
 800dbfa:	f109 0218 	add.w	r2, r9, #24
 800dbfe:	f6c0 0002 	movt	r0, #2050	; 0x802
 800dc02:	f109 0a24 	add.w	sl, r9, #36	; 0x24
 800dc06:	f109 061c 	add.w	r6, r9, #28
 800dc0a:	f006 fe75 	bl	80148f8 <AllocArrayInstance>
 800dc0e:	4605      	mov	r5, r0
 800dc10:	a80c      	add	r0, sp, #48	; 0x30
 800dc12:	2101      	movs	r1, #1
 800dc14:	2202      	movs	r2, #2
 800dc16:	e9cd b510 	strd	fp, r5, [sp, #64]	; 0x40
 800dc1a:	e9cd b50c 	strd	fp, r5, [sp, #48]	; 0x30
 800dc1e:	f008 ff22 	bl	8016a66 <LeaveFrame>
 800dc22:	a80c      	add	r0, sp, #48	; 0x30
 800dc24:	2101      	movs	r1, #1
 800dc26:	2202      	movs	r2, #2
 800dc28:	e9cd b50c 	strd	fp, r5, [sp, #48]	; 0x30
 800dc2c:	f008 ff1b 	bl	8016a66 <LeaveFrame>
 800dc30:	a810      	add	r0, sp, #64	; 0x40
 800dc32:	2101      	movs	r1, #1
 800dc34:	2202      	movs	r2, #2
 800dc36:	f008 ff16 	bl	8016a66 <LeaveFrame>
 800dc3a:	4630      	mov	r0, r6
 800dc3c:	4629      	mov	r1, r5
 800dc3e:	f006 fac7 	bl	80141d0 <UpdateRef>
 800dc42:	f240 0038 	movw	r0, #56	; 0x38
 800dc46:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800dc4a:	f8d0 b000 	ldr.w	fp, [r0]
 800dc4e:	f1bb 0f00 	cmp.w	fp, #0
 800dc52:	d110      	bne.n	800dc76 <kfun:kotlinx.cinterop.getBytes@kotlinx.cinterop.CValues<#GENERIC_kotlinx.cinterop.CVariable>.()Generic+0x114>
 800dc54:	f240 0038 	movw	r0, #56	; 0x38
 800dc58:	f243 1130 	movw	r1, #12592	; 0x3130
 800dc5c:	f64d 221b 	movw	r2, #55835	; 0xda1b
 800dc60:	f109 0320 	add.w	r3, r9, #32
 800dc64:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800dc68:	f6c0 0102 	movt	r1, #2050	; 0x802
 800dc6c:	f6c0 0200 	movt	r2, #2048	; 0x800
 800dc70:	f008 feab 	bl	80169ca <InitInstance>
 800dc74:	4683      	mov	fp, r0
 800dc76:	9c03      	ldr	r4, [sp, #12]
 800dc78:	2600      	movs	r6, #0
 800dc7a:	4650      	mov	r0, sl
 800dc7c:	9d01      	ldr	r5, [sp, #4]
 800dc7e:	4621      	mov	r1, r4
 800dc80:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
 800dc84:	f006 fcb1 	bl	80145ea <UpdateReturnRef>
 800dc88:	a80c      	add	r0, sp, #48	; 0x30
 800dc8a:	2101      	movs	r1, #1
 800dc8c:	2202      	movs	r2, #2
 800dc8e:	f008 feea 	bl	8016a66 <LeaveFrame>
 800dc92:	e9cd 650c 	strd	r6, r5, [sp, #48]	; 0x30
 800dc96:	940e      	str	r4, [sp, #56]	; 0x38
 800dc98:	6828      	ldr	r0, [r5, #0]
 800dc9a:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800dc9c:	4628      	mov	r0, r5
 800dc9e:	4621      	mov	r1, r4
 800dca0:	4790      	blx	r2
 800dca2:	4604      	mov	r4, r0
 800dca4:	a80c      	add	r0, sp, #48	; 0x30
 800dca6:	2102      	movs	r1, #2
 800dca8:	2203      	movs	r2, #3
 800dcaa:	f008 fedc 	bl	8016a66 <LeaveFrame>
 800dcae:	2c00      	cmp	r4, #0
 800dcb0:	e9cd 660c 	strd	r6, r6, [sp, #48]	; 0x30
 800dcb4:	d02f      	beq.n	800dd16 <kfun:kotlinx.cinterop.getBytes@kotlinx.cinterop.CValues<#GENERIC_kotlinx.cinterop.CVariable>.()Generic+0x1b4>
 800dcb6:	a80c      	add	r0, sp, #48	; 0x30
 800dcb8:	2100      	movs	r1, #0
 800dcba:	2202      	movs	r2, #2
 800dcbc:	f109 092c 	add.w	r9, r9, #44	; 0x2c
 800dcc0:	2500      	movs	r5, #0
 800dcc2:	f008 fed0 	bl	8016a66 <LeaveFrame>
 800dcc6:	9e07      	ldr	r6, [sp, #28]
 800dcc8:	4630      	mov	r0, r6
 800dcca:	e9cd 560c 	strd	r5, r6, [sp, #48]	; 0x30
 800dcce:	f006 fdf9 	bl	80148c4 <Kotlin_ByteArray_getArrayLength>
 800dcd2:	4605      	mov	r5, r0
 800dcd4:	a80c      	add	r0, sp, #48	; 0x30
 800dcd6:	2101      	movs	r1, #1
 800dcd8:	2202      	movs	r2, #2
 800dcda:	f008 fec4 	bl	8016a66 <LeaveFrame>
 800dcde:	4658      	mov	r0, fp
 800dce0:	4621      	mov	r1, r4
 800dce2:	4632      	mov	r2, r6
 800dce4:	462b      	mov	r3, r5
 800dce6:	f000 f841 	bl	800dd6c <kfun:kotlinx.cinterop.nativeMemUtils.getByteArray(kotlinx.cinterop.NativePointed;kotlin.ByteArray;kotlin.Int)>
 800dcea:	9907      	ldr	r1, [sp, #28]
 800dcec:	4648      	mov	r0, r9
 800dcee:	f006 fa6f 	bl	80141d0 <UpdateRef>
 800dcf2:	9803      	ldr	r0, [sp, #12]
 800dcf4:	f000 f899 	bl	800de2a <kfun:kotlinx.cinterop.ArenaBase.clearImpl()>
 800dcf8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800dcfa:	4640      	mov	r0, r8
 800dcfc:	4621      	mov	r1, r4
 800dcfe:	f006 fc74 	bl	80145ea <UpdateReturnRef>
 800dd02:	4668      	mov	r0, sp
 800dd04:	2101      	movs	r1, #1
 800dd06:	220c      	movs	r2, #12
 800dd08:	f008 fead 	bl	8016a66 <LeaveFrame>
 800dd0c:	4620      	mov	r0, r4
 800dd0e:	b013      	add	sp, #76	; 0x4c
 800dd10:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 800dd14:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dd16:	f7fe fe49 	bl	800c9ac <ThrowNullPointerException>
 800dd1a:	4604      	mov	r4, r0
 800dd1c:	a80c      	add	r0, sp, #48	; 0x30
 800dd1e:	2102      	movs	r1, #2
 800dd20:	2203      	movs	r2, #3
 800dd22:	f008 fea0 	bl	8016a66 <LeaveFrame>
 800dd26:	e000      	b.n	800dd2a <kfun:kotlinx.cinterop.getBytes@kotlinx.cinterop.CValues<#GENERIC_kotlinx.cinterop.CVariable>.()Generic+0x1c8>
 800dd28:	4604      	mov	r4, r0
 800dd2a:	4620      	mov	r0, r4
 800dd2c:	f109 0514 	add.w	r5, r9, #20
 800dd30:	f109 0610 	add.w	r6, r9, #16
 800dd34:	f00c faf8 	bl	801a328 <__cxa_begin_catch>
 800dd38:	6804      	ldr	r4, [r0, #0]
 800dd3a:	4630      	mov	r0, r6
 800dd3c:	4621      	mov	r1, r4
 800dd3e:	f006 fa47 	bl	80141d0 <UpdateRef>
 800dd42:	f00c fb2f 	bl	801a3a4 <__cxa_end_catch>
 800dd46:	4628      	mov	r0, r5
 800dd48:	4621      	mov	r1, r4
 800dd4a:	f006 fa41 	bl	80141d0 <UpdateRef>
 800dd4e:	9803      	ldr	r0, [sp, #12]
 800dd50:	f000 f86b 	bl	800de2a <kfun:kotlinx.cinterop.ArenaBase.clearImpl()>
 800dd54:	9805      	ldr	r0, [sp, #20]
 800dd56:	f007 f8d4 	bl	8014f02 <ThrowException>
 800dd5a:	4604      	mov	r4, r0
 800dd5c:	4668      	mov	r0, sp
 800dd5e:	2101      	movs	r1, #1
 800dd60:	220c      	movs	r2, #12
 800dd62:	f008 fe80 	bl	8016a66 <LeaveFrame>
 800dd66:	4620      	mov	r0, r4
 800dd68:	f7f3 fa40 	bl	80011ec <_Unwind_Resume>

0800dd6c <kfun:kotlinx.cinterop.nativeMemUtils.getByteArray(kotlinx.cinterop.NativePointed;kotlin.ByteArray;kotlin.Int)>:
 800dd6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dd6e:	af03      	add	r7, sp, #12
 800dd70:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 800dd74:	b08b      	sub	sp, #44	; 0x2c
 800dd76:	460e      	mov	r6, r1
 800dd78:	2100      	movs	r1, #0
 800dd7a:	469a      	mov	sl, r3
 800dd7c:	4615      	mov	r5, r2
 800dd7e:	2e00      	cmp	r6, #0
 800dd80:	e9cd 1106 	strd	r1, r1, [sp, #24]
 800dd84:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800dd88:	e9cd 5104 	strd	r5, r1, [sp, #16]
 800dd8c:	d04b      	beq.n	800de26 <kfun:kotlinx.cinterop.nativeMemUtils.getByteArray(kotlinx.cinterop.NativePointed;kotlin.ByteArray;kotlin.Int)+0xba>
 800dd8e:	a808      	add	r0, sp, #32
 800dd90:	e9cd 1108 	strd	r1, r1, [sp, #32]
 800dd94:	2100      	movs	r1, #0
 800dd96:	2202      	movs	r2, #2
 800dd98:	f008 fe65 	bl	8016a66 <LeaveFrame>
 800dd9c:	f1ba 0f01 	cmp.w	sl, #1
 800dda0:	db38      	blt.n	800de14 <kfun:kotlinx.cinterop.nativeMemUtils.getByteArray(kotlinx.cinterop.NativePointed;kotlin.ByteArray;kotlin.Int)+0xa8>
 800dda2:	a808      	add	r0, sp, #32
 800dda4:	f04f 0800 	mov.w	r8, #0
 800dda8:	f04f 0b00 	mov.w	fp, #0
 800ddac:	f040 0004 	orr.w	r0, r0, #4
 800ddb0:	9001      	str	r0, [sp, #4]
 800ddb2:	4658      	mov	r0, fp
 800ddb4:	f008 ff1c 	bl	8016bf0 <Kotlin_Int_toLong>
 800ddb8:	2201      	movs	r2, #1
 800ddba:	f008 ff2f 	bl	8016c1c <Kotlin_Long_times_Int>
 800ddbe:	1834      	adds	r4, r6, r0
 800ddc0:	d031      	beq.n	800de26 <kfun:kotlinx.cinterop.nativeMemUtils.getByteArray(kotlinx.cinterop.NativePointed;kotlin.ByteArray;kotlin.Int)+0xba>
 800ddc2:	f240 0038 	movw	r0, #56	; 0x38
 800ddc6:	e9cd 8808 	strd	r8, r8, [sp, #32]
 800ddca:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800ddce:	6800      	ldr	r0, [r0, #0]
 800ddd0:	b970      	cbnz	r0, 800ddf0 <kfun:kotlinx.cinterop.nativeMemUtils.getByteArray(kotlinx.cinterop.NativePointed;kotlin.ByteArray;kotlin.Int)+0x84>
 800ddd2:	9b01      	ldr	r3, [sp, #4]
 800ddd4:	f240 0038 	movw	r0, #56	; 0x38
 800ddd8:	f243 1130 	movw	r1, #12592	; 0x3130
 800dddc:	f64d 221b 	movw	r2, #55835	; 0xda1b
 800dde0:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800dde4:	f6c0 0102 	movt	r1, #2050	; 0x802
 800dde8:	f6c0 0200 	movt	r2, #2048	; 0x800
 800ddec:	f008 fded 	bl	80169ca <InitInstance>
 800ddf0:	a808      	add	r0, sp, #32
 800ddf2:	2100      	movs	r1, #0
 800ddf4:	2202      	movs	r2, #2
 800ddf6:	f994 9000 	ldrsb.w	r9, [r4]
 800ddfa:	f008 fe34 	bl	8016a66 <LeaveFrame>
 800ddfe:	4628      	mov	r0, r5
 800de00:	4659      	mov	r1, fp
 800de02:	464a      	mov	r2, r9
 800de04:	f006 fd53 	bl	80148ae <Kotlin_ByteArray_set>
 800de08:	4658      	mov	r0, fp
 800de0a:	f008 fee4 	bl	8016bd6 <Kotlin_Int_inc>
 800de0e:	4683      	mov	fp, r0
 800de10:	45d3      	cmp	fp, sl
 800de12:	dbce      	blt.n	800ddb2 <kfun:kotlinx.cinterop.nativeMemUtils.getByteArray(kotlinx.cinterop.NativePointed;kotlin.ByteArray;kotlin.Int)+0x46>
 800de14:	a802      	add	r0, sp, #8
 800de16:	2102      	movs	r1, #2
 800de18:	2206      	movs	r2, #6
 800de1a:	f008 fe24 	bl	8016a66 <LeaveFrame>
 800de1e:	b00b      	add	sp, #44	; 0x2c
 800de20:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 800de24:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800de26:	f7fe fdc1 	bl	800c9ac <ThrowNullPointerException>

0800de2a <kfun:kotlinx.cinterop.ArenaBase.clearImpl()>:
 800de2a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800de2c:	af03      	add	r7, sp, #12
 800de2e:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 800de32:	b08f      	sub	sp, #60	; 0x3c
 800de34:	2600      	movs	r6, #0
 800de36:	4604      	mov	r4, r0
 800de38:	e9cd 6604 	strd	r6, r6, [sp, #16]
 800de3c:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 800de40:	e9cd 6402 	strd	r6, r4, [sp, #8]
 800de44:	f108 0008 	add.w	r0, r8, #8
 800de48:	960a      	str	r6, [sp, #40]	; 0x28
 800de4a:	e9cd 6608 	strd	r6, r6, [sp, #32]
 800de4e:	e9cd 6406 	strd	r6, r4, [sp, #24]
 800de52:	960e      	str	r6, [sp, #56]	; 0x38
 800de54:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
 800de58:	68a5      	ldr	r5, [r4, #8]
 800de5a:	4629      	mov	r1, r5
 800de5c:	f006 f9b8 	bl	80141d0 <UpdateRef>
 800de60:	f10d 0918 	add.w	r9, sp, #24
 800de64:	4629      	mov	r1, r5
 800de66:	f109 0008 	add.w	r0, r9, #8
 800de6a:	f006 fbbe 	bl	80145ea <UpdateReturnRef>
 800de6e:	4640      	mov	r0, r8
 800de70:	2101      	movs	r1, #1
 800de72:	2203      	movs	r2, #3
 800de74:	f008 fdf7 	bl	8016a66 <LeaveFrame>
 800de78:	f109 000c 	add.w	r0, r9, #12
 800de7c:	4629      	mov	r1, r5
 800de7e:	f006 f9a7 	bl	80141d0 <UpdateRef>
 800de82:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800de84:	b1f5      	cbz	r5, 800dec4 <kfun:kotlinx.cinterop.ArenaBase.clearImpl()+0x9a>
 800de86:	6828      	ldr	r0, [r5, #0]
 800de88:	f64f 62f7 	movw	r2, #65271	; 0xfef7
 800de8c:	f645 1390 	movw	r3, #22928	; 0x5990
 800de90:	f2c1 422b 	movt	r2, #5163	; 0x142b
 800de94:	f2c3 03df 	movt	r3, #12511	; 0x30df
 800de98:	f008 ffa6 	bl	8016de8 <LookupOpenMethod>
 800de9c:	4602      	mov	r2, r0
 800de9e:	f109 0110 	add.w	r1, r9, #16
 800dea2:	4628      	mov	r0, r5
 800dea4:	4790      	blx	r2
 800dea6:	9807      	ldr	r0, [sp, #28]
 800dea8:	2100      	movs	r1, #0
 800deaa:	900d      	str	r0, [sp, #52]	; 0x34
 800deac:	3008      	adds	r0, #8
 800deae:	910c      	str	r1, [sp, #48]	; 0x30
 800deb0:	910e      	str	r1, [sp, #56]	; 0x38
 800deb2:	2100      	movs	r1, #0
 800deb4:	f006 f98c 	bl	80141d0 <UpdateRef>
 800deb8:	a80c      	add	r0, sp, #48	; 0x30
 800deba:	2102      	movs	r1, #2
 800debc:	2203      	movs	r2, #3
 800debe:	f008 fdd2 	bl	8016a66 <LeaveFrame>
 800dec2:	9c03      	ldr	r4, [sp, #12]
 800dec4:	a806      	add	r0, sp, #24
 800dec6:	2101      	movs	r1, #1
 800dec8:	2205      	movs	r2, #5
 800deca:	f008 fdcc 	bl	8016a66 <LeaveFrame>
 800dece:	a806      	add	r0, sp, #24
 800ded0:	e9cd 6406 	strd	r6, r4, [sp, #24]
 800ded4:	2101      	movs	r1, #1
 800ded6:	2202      	movs	r2, #2
 800ded8:	f8d4 a010 	ldr.w	sl, [r4, #16]
 800dedc:	f008 fdc3 	bl	8016a66 <LeaveFrame>
 800dee0:	f1ba 0f00 	cmp.w	sl, #0
 800dee4:	d044      	beq.n	800df70 <kfun:kotlinx.cinterop.ArenaBase.clearImpl()+0x146>
 800dee6:	a802      	add	r0, sp, #8
 800dee8:	f240 0b38 	movw	fp, #56	; 0x38
 800deec:	f100 050c 	add.w	r5, r0, #12
 800def0:	ae06      	add	r6, sp, #24
 800def2:	f2c2 0b00 	movt	fp, #8192	; 0x2000
 800def6:	f04f 0900 	mov.w	r9, #0
 800defa:	3008      	adds	r0, #8
 800defc:	9001      	str	r0, [sp, #4]
 800defe:	f8db 0000 	ldr.w	r0, [fp]
 800df02:	b958      	cbnz	r0, 800df1c <kfun:kotlinx.cinterop.ArenaBase.clearImpl()+0xf2>
 800df04:	9b01      	ldr	r3, [sp, #4]
 800df06:	f243 1130 	movw	r1, #12592	; 0x3130
 800df0a:	f64d 221b 	movw	r2, #55835	; 0xda1b
 800df0e:	4658      	mov	r0, fp
 800df10:	f6c0 0102 	movt	r1, #2050	; 0x802
 800df14:	f6c0 0200 	movt	r2, #2048	; 0x800
 800df18:	f008 fd57 	bl	80169ca <InitInstance>
 800df1c:	9803      	ldr	r0, [sp, #12]
 800df1e:	f8da 4000 	ldr.w	r4, [sl]
 800df22:	e9cd 9006 	strd	r9, r0, [sp, #24]
 800df26:	f8d0 800c 	ldr.w	r8, [r0, #12]
 800df2a:	4628      	mov	r0, r5
 800df2c:	4641      	mov	r1, r8
 800df2e:	f006 fb5c 	bl	80145ea <UpdateReturnRef>
 800df32:	4630      	mov	r0, r6
 800df34:	2101      	movs	r1, #1
 800df36:	2202      	movs	r2, #2
 800df38:	f008 fd95 	bl	8016a66 <LeaveFrame>
 800df3c:	e9cd 9806 	strd	r9, r8, [sp, #24]
 800df40:	f24b 1297 	movw	r2, #45463	; 0xb197
 800df44:	f8d8 0000 	ldr.w	r0, [r8]
 800df48:	f243 2303 	movw	r3, #12803	; 0x3203
 800df4c:	f6ce 7233 	movt	r2, #61235	; 0xef33
 800df50:	f2c0 73a8 	movt	r3, #1960	; 0x7a8
 800df54:	f008 ff48 	bl	8016de8 <LookupOpenMethod>
 800df58:	4602      	mov	r2, r0
 800df5a:	4640      	mov	r0, r8
 800df5c:	4651      	mov	r1, sl
 800df5e:	4790      	blx	r2
 800df60:	4630      	mov	r0, r6
 800df62:	2101      	movs	r1, #1
 800df64:	2202      	movs	r2, #2
 800df66:	f008 fd7e 	bl	8016a66 <LeaveFrame>
 800df6a:	2c00      	cmp	r4, #0
 800df6c:	46a2      	mov	sl, r4
 800df6e:	d1c6      	bne.n	800defe <kfun:kotlinx.cinterop.ArenaBase.clearImpl()+0xd4>
 800df70:	a802      	add	r0, sp, #8
 800df72:	2101      	movs	r1, #1
 800df74:	2204      	movs	r2, #4
 800df76:	f008 fd76 	bl	8016a66 <LeaveFrame>
 800df7a:	b00f      	add	sp, #60	; 0x3c
 800df7c:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 800df80:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800df82:	4604      	mov	r4, r0
 800df84:	a806      	add	r0, sp, #24
 800df86:	2101      	movs	r1, #1
 800df88:	2205      	movs	r2, #5
 800df8a:	e003      	b.n	800df94 <kfun:kotlinx.cinterop.ArenaBase.clearImpl()+0x16a>
 800df8c:	4604      	mov	r4, r0
 800df8e:	a806      	add	r0, sp, #24
 800df90:	2101      	movs	r1, #1
 800df92:	2202      	movs	r2, #2
 800df94:	f008 fd67 	bl	8016a66 <LeaveFrame>
 800df98:	a802      	add	r0, sp, #8
 800df9a:	2101      	movs	r1, #1
 800df9c:	2204      	movs	r2, #4
 800df9e:	f008 fd62 	bl	8016a66 <LeaveFrame>
 800dfa2:	4620      	mov	r0, r4
 800dfa4:	f7f3 f922 	bl	80011ec <_Unwind_Resume>

0800dfa8 <kfun:kotlinx.cinterop.ArenaBase.<init>(kotlinx.cinterop.NativeFreeablePlacement;kotlin.Int;konan.internal.DefaultConstructorMarker)kotlinx.cinterop.ArenaBase>:
 800dfa8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dfaa:	af03      	add	r7, sp, #12
 800dfac:	f84d bd04 	str.w	fp, [sp, #-4]!
 800dfb0:	b090      	sub	sp, #64	; 0x40
 800dfb2:	2600      	movs	r6, #0
 800dfb4:	460c      	mov	r4, r1
 800dfb6:	e9cd 6605 	strd	r6, r6, [sp, #20]
 800dfba:	2101      	movs	r1, #1
 800dfbc:	e9cd 6001 	strd	r6, r0, [sp, #4]
 800dfc0:	4610      	mov	r0, r2
 800dfc2:	e9cd 4303 	strd	r4, r3, [sp, #12]
 800dfc6:	f008 fe0a 	bl	8016bde <Kotlin_Int_and_Int>
 800dfca:	a901      	add	r1, sp, #4
 800dfcc:	2800      	cmp	r0, #0
 800dfce:	f101 0514 	add.w	r5, r1, #20
 800dfd2:	d016      	beq.n	800e002 <kfun:kotlinx.cinterop.ArenaBase.<init>(kotlinx.cinterop.NativeFreeablePlacement;kotlin.Int;konan.internal.DefaultConstructorMarker)kotlinx.cinterop.ArenaBase+0x5a>
 800dfd4:	f240 0034 	movw	r0, #52	; 0x34
 800dfd8:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800dfdc:	6804      	ldr	r4, [r0, #0]
 800dfde:	b984      	cbnz	r4, 800e002 <kfun:kotlinx.cinterop.ArenaBase.<init>(kotlinx.cinterop.NativeFreeablePlacement;kotlin.Int;konan.internal.DefaultConstructorMarker)kotlinx.cinterop.ArenaBase+0x5a>
 800dfe0:	f240 0034 	movw	r0, #52	; 0x34
 800dfe4:	f24e 0299 	movw	r2, #57497	; 0xe099
 800dfe8:	f101 0310 	add.w	r3, r1, #16
 800dfec:	f243 2130 	movw	r1, #12848	; 0x3230
 800dff0:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800dff4:	f6c0 0102 	movt	r1, #2050	; 0x802
 800dff8:	f6c0 0200 	movt	r2, #2048	; 0x800
 800dffc:	f008 fce5 	bl	80169ca <InitInstance>
 800e000:	4604      	mov	r4, r0
 800e002:	4628      	mov	r0, r5
 800e004:	4621      	mov	r1, r4
 800e006:	f006 f8e3 	bl	80141d0 <UpdateRef>
 800e00a:	9d02      	ldr	r5, [sp, #8]
 800e00c:	a80e      	add	r0, sp, #56	; 0x38
 800e00e:	9c06      	ldr	r4, [sp, #24]
 800e010:	2101      	movs	r1, #1
 800e012:	2202      	movs	r2, #2
 800e014:	e9cd 6507 	strd	r6, r5, [sp, #28]
 800e018:	e9cd 4609 	strd	r4, r6, [sp, #36]	; 0x24
 800e01c:	e9cd 560b 	strd	r5, r6, [sp, #44]	; 0x2c
 800e020:	e9cd 560d 	strd	r5, r6, [sp, #52]	; 0x34
 800e024:	950f      	str	r5, [sp, #60]	; 0x3c
 800e026:	f008 fd1e 	bl	8016a66 <LeaveFrame>
 800e02a:	f105 0008 	add.w	r0, r5, #8
 800e02e:	2100      	movs	r1, #0
 800e030:	f006 f8ce 	bl	80141d0 <UpdateRef>
 800e034:	a80c      	add	r0, sp, #48	; 0x30
 800e036:	2101      	movs	r1, #1
 800e038:	2202      	movs	r2, #2
 800e03a:	f008 fd14 	bl	8016a66 <LeaveFrame>
 800e03e:	a80a      	add	r0, sp, #40	; 0x28
 800e040:	2101      	movs	r1, #1
 800e042:	2202      	movs	r2, #2
 800e044:	f008 fd0f 	bl	8016a66 <LeaveFrame>
 800e048:	f105 000c 	add.w	r0, r5, #12
 800e04c:	4621      	mov	r1, r4
 800e04e:	f006 f8bf 	bl	80141d0 <UpdateRef>
 800e052:	a807      	add	r0, sp, #28
 800e054:	2102      	movs	r1, #2
 800e056:	2203      	movs	r2, #3
 800e058:	612e      	str	r6, [r5, #16]
 800e05a:	f008 fd04 	bl	8016a66 <LeaveFrame>
 800e05e:	a801      	add	r0, sp, #4
 800e060:	2103      	movs	r1, #3
 800e062:	2206      	movs	r2, #6
 800e064:	f008 fcff 	bl	8016a66 <LeaveFrame>
 800e068:	b010      	add	sp, #64	; 0x40
 800e06a:	f85d bb04 	ldr.w	fp, [sp], #4
 800e06e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e070 <kfun:konan.internal.DefaultConstructorMarker.<init>()konan.internal.DefaultConstructorMarker>:
 800e070:	b580      	push	{r7, lr}
 800e072:	466f      	mov	r7, sp
 800e074:	b084      	sub	sp, #16
 800e076:	2100      	movs	r1, #0
 800e078:	2202      	movs	r2, #2
 800e07a:	e9cd 1000 	strd	r1, r0, [sp]
 800e07e:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800e082:	a802      	add	r0, sp, #8
 800e084:	2101      	movs	r1, #1
 800e086:	f008 fcee 	bl	8016a66 <LeaveFrame>
 800e08a:	4668      	mov	r0, sp
 800e08c:	2101      	movs	r1, #1
 800e08e:	2202      	movs	r2, #2
 800e090:	f008 fce9 	bl	8016a66 <LeaveFrame>
 800e094:	b004      	add	sp, #16
 800e096:	bd80      	pop	{r7, pc}

0800e098 <kfun:kotlinx.cinterop.nativeHeap.<init>()kotlinx.cinterop.nativeHeap>:
 800e098:	b580      	push	{r7, lr}
 800e09a:	466f      	mov	r7, sp
 800e09c:	b084      	sub	sp, #16
 800e09e:	2100      	movs	r1, #0
 800e0a0:	2202      	movs	r2, #2
 800e0a2:	e9cd 1000 	strd	r1, r0, [sp]
 800e0a6:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800e0aa:	a802      	add	r0, sp, #8
 800e0ac:	2101      	movs	r1, #1
 800e0ae:	f008 fcda 	bl	8016a66 <LeaveFrame>
 800e0b2:	4668      	mov	r0, sp
 800e0b4:	2101      	movs	r1, #1
 800e0b6:	2202      	movs	r2, #2
 800e0b8:	f008 fcd5 	bl	8016a66 <LeaveFrame>
 800e0bc:	b004      	add	sp, #16
 800e0be:	bd80      	pop	{r7, pc}

0800e0c0 <kfun:kotlinx.cinterop.nativeHeap.free(konan.internal.NativePtr)>:
 800e0c0:	b5b0      	push	{r4, r5, r7, lr}
 800e0c2:	af02      	add	r7, sp, #8
 800e0c4:	b086      	sub	sp, #24
 800e0c6:	2500      	movs	r5, #0
 800e0c8:	460c      	mov	r4, r1
 800e0ca:	9503      	str	r5, [sp, #12]
 800e0cc:	e9cd 5001 	strd	r5, r0, [sp, #4]
 800e0d0:	f240 0038 	movw	r0, #56	; 0x38
 800e0d4:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800e0d8:	6800      	ldr	r0, [r0, #0]
 800e0da:	b980      	cbnz	r0, 800e0fe <kfun:kotlinx.cinterop.nativeHeap.free(konan.internal.NativePtr)+0x3e>
 800e0dc:	a801      	add	r0, sp, #4
 800e0de:	f243 1130 	movw	r1, #12592	; 0x3130
 800e0e2:	f64d 221b 	movw	r2, #55835	; 0xda1b
 800e0e6:	f100 0308 	add.w	r3, r0, #8
 800e0ea:	f240 0038 	movw	r0, #56	; 0x38
 800e0ee:	f6c0 0102 	movt	r1, #2050	; 0x802
 800e0f2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800e0f6:	f6c0 0200 	movt	r2, #2048	; 0x800
 800e0fa:	f008 fc66 	bl	80169ca <InitInstance>
 800e0fe:	e9cd 5004 	strd	r5, r0, [sp, #16]
 800e102:	4620      	mov	r0, r4
 800e104:	f008 fd1d 	bl	8016b42 <Kotlin_interop_free>
 800e108:	a804      	add	r0, sp, #16
 800e10a:	2101      	movs	r1, #1
 800e10c:	2202      	movs	r2, #2
 800e10e:	f008 fcaa 	bl	8016a66 <LeaveFrame>
 800e112:	a801      	add	r0, sp, #4
 800e114:	2101      	movs	r1, #1
 800e116:	2203      	movs	r2, #3
 800e118:	f008 fca5 	bl	8016a66 <LeaveFrame>
 800e11c:	b006      	add	sp, #24
 800e11e:	bdb0      	pop	{r4, r5, r7, pc}

0800e120 <kfun:kotlinx.cinterop.nativeHeap.alloc(kotlin.Long;kotlin.Int)ValueType>:
 800e120:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e122:	af03      	add	r7, sp, #12
 800e124:	f84d bd04 	str.w	fp, [sp, #-4]!
 800e128:	b084      	sub	sp, #16
 800e12a:	2100      	movs	r1, #0
 800e12c:	68be      	ldr	r6, [r7, #8]
 800e12e:	9103      	str	r1, [sp, #12]
 800e130:	461c      	mov	r4, r3
 800e132:	e9cd 1001 	strd	r1, r0, [sp, #4]
 800e136:	f240 0038 	movw	r0, #56	; 0x38
 800e13a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800e13e:	4615      	mov	r5, r2
 800e140:	6800      	ldr	r0, [r0, #0]
 800e142:	b980      	cbnz	r0, 800e166 <kfun:kotlinx.cinterop.nativeHeap.alloc(kotlin.Long;kotlin.Int)ValueType+0x46>
 800e144:	a801      	add	r0, sp, #4
 800e146:	f243 1130 	movw	r1, #12592	; 0x3130
 800e14a:	f64d 221b 	movw	r2, #55835	; 0xda1b
 800e14e:	f100 0308 	add.w	r3, r0, #8
 800e152:	f240 0038 	movw	r0, #56	; 0x38
 800e156:	f6c0 0102 	movt	r1, #2050	; 0x802
 800e15a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800e15e:	f6c0 0200 	movt	r2, #2048	; 0x800
 800e162:	f008 fc32 	bl	80169ca <InitInstance>
 800e166:	462a      	mov	r2, r5
 800e168:	4623      	mov	r3, r4
 800e16a:	9600      	str	r6, [sp, #0]
 800e16c:	f000 f840 	bl	800e1f0 <kfun:kotlinx.cinterop.nativeMemUtils.alloc(kotlin.Long;kotlin.Int)ValueType>
 800e170:	4604      	mov	r4, r0
 800e172:	a801      	add	r0, sp, #4
 800e174:	2101      	movs	r1, #1
 800e176:	2203      	movs	r2, #3
 800e178:	f008 fc75 	bl	8016a66 <LeaveFrame>
 800e17c:	4620      	mov	r0, r4
 800e17e:	b004      	add	sp, #16
 800e180:	f85d bb04 	ldr.w	fp, [sp], #4
 800e184:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e186 <kfun:kotlinx.cinterop.NativePlacement.alloc(kotlin.Int;kotlin.Int)ValueType>:
 800e186:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e188:	af03      	add	r7, sp, #12
 800e18a:	f84d 8d04 	str.w	r8, [sp, #-4]!
 800e18e:	b084      	sub	sp, #16
 800e190:	4605      	mov	r5, r0
 800e192:	2000      	movs	r0, #0
 800e194:	e9cd 0502 	strd	r0, r5, [sp, #8]
 800e198:	4608      	mov	r0, r1
 800e19a:	4690      	mov	r8, r2
 800e19c:	f008 fd28 	bl	8016bf0 <Kotlin_Int_toLong>
 800e1a0:	4606      	mov	r6, r0
 800e1a2:	6828      	ldr	r0, [r5, #0]
 800e1a4:	f641 329d 	movw	r2, #7069	; 0x1b9d
 800e1a8:	f64d 33b1 	movw	r3, #56241	; 0xdbb1
 800e1ac:	f2cc 02a8 	movt	r2, #49320	; 0xc0a8
 800e1b0:	f6c3 33d6 	movt	r3, #15318	; 0x3bd6
 800e1b4:	460c      	mov	r4, r1
 800e1b6:	f008 fe17 	bl	8016de8 <LookupOpenMethod>
 800e1ba:	4601      	mov	r1, r0
 800e1bc:	4628      	mov	r0, r5
 800e1be:	4632      	mov	r2, r6
 800e1c0:	4623      	mov	r3, r4
 800e1c2:	f8cd 8000 	str.w	r8, [sp]
 800e1c6:	4788      	blx	r1
 800e1c8:	4604      	mov	r4, r0
 800e1ca:	a802      	add	r0, sp, #8
 800e1cc:	2101      	movs	r1, #1
 800e1ce:	2202      	movs	r2, #2
 800e1d0:	f008 fc49 	bl	8016a66 <LeaveFrame>
 800e1d4:	4620      	mov	r0, r4
 800e1d6:	b004      	add	sp, #16
 800e1d8:	f85d 8b04 	ldr.w	r8, [sp], #4
 800e1dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e1de:	4604      	mov	r4, r0
 800e1e0:	a802      	add	r0, sp, #8
 800e1e2:	2101      	movs	r1, #1
 800e1e4:	2202      	movs	r2, #2
 800e1e6:	f008 fc3e 	bl	8016a66 <LeaveFrame>
 800e1ea:	4620      	mov	r0, r4
 800e1ec:	f7f2 fffe 	bl	80011ec <_Unwind_Resume>

0800e1f0 <kfun:kotlinx.cinterop.nativeMemUtils.alloc(kotlin.Long;kotlin.Int)ValueType>:
 800e1f0:	b5b0      	push	{r4, r5, r7, lr}
 800e1f2:	af02      	add	r7, sp, #8
 800e1f4:	b08a      	sub	sp, #40	; 0x28
 800e1f6:	68bc      	ldr	r4, [r7, #8]
 800e1f8:	2500      	movs	r5, #0
 800e1fa:	9503      	str	r5, [sp, #12]
 800e1fc:	4619      	mov	r1, r3
 800e1fe:	e9cd 5001 	strd	r5, r0, [sp, #4]
 800e202:	4610      	mov	r0, r2
 800e204:	4622      	mov	r2, r4
 800e206:	f008 fc82 	bl	8016b0e <Kotlin_interop_malloc>
 800e20a:	4604      	mov	r4, r0
 800e20c:	b174      	cbz	r4, 800e22c <kfun:kotlinx.cinterop.nativeMemUtils.alloc(kotlin.Long;kotlin.Int)ValueType+0x3c>
 800e20e:	a804      	add	r0, sp, #16
 800e210:	2100      	movs	r1, #0
 800e212:	2202      	movs	r2, #2
 800e214:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800e218:	f008 fc25 	bl	8016a66 <LeaveFrame>
 800e21c:	a801      	add	r0, sp, #4
 800e21e:	2101      	movs	r1, #1
 800e220:	2203      	movs	r2, #3
 800e222:	f008 fc20 	bl	8016a66 <LeaveFrame>
 800e226:	4620      	mov	r0, r4
 800e228:	b00a      	add	sp, #40	; 0x28
 800e22a:	bdb0      	pop	{r4, r5, r7, pc}
 800e22c:	a801      	add	r0, sp, #4
 800e22e:	f100 0108 	add.w	r1, r0, #8
 800e232:	f243 20f0 	movw	r0, #13040	; 0x32f0
 800e236:	f6c0 0002 	movt	r0, #2050	; 0x802
 800e23a:	f008 fb5e 	bl	80168fa <AllocInstance>
 800e23e:	f242 2160 	movw	r1, #8800	; 0x2260
 800e242:	4604      	mov	r4, r0
 800e244:	f2c2 0100 	movt	r1, #8192	; 0x2000
 800e248:	e9cd 5404 	strd	r5, r4, [sp, #16]
 800e24c:	9106      	str	r1, [sp, #24]
 800e24e:	f000 f80f 	bl	800e270 <kfun:kotlin.Error.<init>(kotlin.String?)kotlin.Error>
 800e252:	a808      	add	r0, sp, #32
 800e254:	2101      	movs	r1, #1
 800e256:	2202      	movs	r2, #2
 800e258:	e9cd 5408 	strd	r5, r4, [sp, #32]
 800e25c:	f008 fc03 	bl	8016a66 <LeaveFrame>
 800e260:	a804      	add	r0, sp, #16
 800e262:	2102      	movs	r1, #2
 800e264:	2203      	movs	r2, #3
 800e266:	f008 fbfe 	bl	8016a66 <LeaveFrame>
 800e26a:	4620      	mov	r0, r4
 800e26c:	f006 fe49 	bl	8014f02 <ThrowException>

0800e270 <kfun:kotlin.Error.<init>(kotlin.String?)kotlin.Error>:
 800e270:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e272:	af03      	add	r7, sp, #12
 800e274:	f84d bd04 	str.w	fp, [sp, #-4]!
 800e278:	b08e      	sub	sp, #56	; 0x38
 800e27a:	4604      	mov	r4, r0
 800e27c:	460d      	mov	r5, r1
 800e27e:	2600      	movs	r6, #0
 800e280:	a804      	add	r0, sp, #16
 800e282:	9401      	str	r4, [sp, #4]
 800e284:	2101      	movs	r1, #1
 800e286:	9600      	str	r6, [sp, #0]
 800e288:	2202      	movs	r2, #2
 800e28a:	e9cd 5602 	strd	r5, r6, [sp, #8]
 800e28e:	960a      	str	r6, [sp, #40]	; 0x28
 800e290:	c070      	stmia	r0!, {r4, r5, r6}
 800e292:	a807      	add	r0, sp, #28
 800e294:	c070      	stmia	r0!, {r4, r5, r6}
 800e296:	a80c      	add	r0, sp, #48	; 0x30
 800e298:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
 800e29c:	f008 fbe3 	bl	8016a66 <LeaveFrame>
 800e2a0:	f104 0008 	add.w	r0, r4, #8
 800e2a4:	4629      	mov	r1, r5
 800e2a6:	f005 ff93 	bl	80141d0 <UpdateRef>
 800e2aa:	f104 0010 	add.w	r0, r4, #16
 800e2ae:	2100      	movs	r1, #0
 800e2b0:	f005 ff8e 	bl	80141d0 <UpdateRef>
 800e2b4:	ad06      	add	r5, sp, #24
 800e2b6:	f105 0010 	add.w	r0, r5, #16
 800e2ba:	f008 fc11 	bl	8016ae0 <Kotlin_getCurrentStackTrace>
 800e2be:	4601      	mov	r1, r0
 800e2c0:	9807      	ldr	r0, [sp, #28]
 800e2c2:	300c      	adds	r0, #12
 800e2c4:	f005 ff84 	bl	80141d0 <UpdateRef>
 800e2c8:	4628      	mov	r0, r5
 800e2ca:	2103      	movs	r1, #3
 800e2cc:	2205      	movs	r2, #5
 800e2ce:	f008 fbca 	bl	8016a66 <LeaveFrame>
 800e2d2:	a803      	add	r0, sp, #12
 800e2d4:	2102      	movs	r1, #2
 800e2d6:	2203      	movs	r2, #3
 800e2d8:	f008 fbc5 	bl	8016a66 <LeaveFrame>
 800e2dc:	a806      	add	r0, sp, #24
 800e2de:	2101      	movs	r1, #1
 800e2e0:	2202      	movs	r2, #2
 800e2e2:	e9cd 6406 	strd	r6, r4, [sp, #24]
 800e2e6:	f008 fbbe 	bl	8016a66 <LeaveFrame>
 800e2ea:	4668      	mov	r0, sp
 800e2ec:	2102      	movs	r1, #2
 800e2ee:	2203      	movs	r2, #3
 800e2f0:	f008 fbb9 	bl	8016a66 <LeaveFrame>
 800e2f4:	b00e      	add	sp, #56	; 0x38
 800e2f6:	f85d bb04 	ldr.w	fp, [sp], #4
 800e2fa:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e2fc <kfun:kotlinx.cinterop.ArenaBase.alloc(kotlin.Long;kotlin.Int)ValueType>:
 800e2fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e2fe:	af03      	add	r7, sp, #12
 800e300:	e92d 0b00 	stmdb	sp!, {r8, r9, fp}
 800e304:	b088      	sub	sp, #32
 800e306:	2100      	movs	r1, #0
 800e308:	f10d 0908 	add.w	r9, sp, #8
 800e30c:	e9cd 1104 	strd	r1, r1, [sp, #16]
 800e310:	4698      	mov	r8, r3
 800e312:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800e316:	4616      	mov	r6, r2
 800e318:	e9cd 1006 	strd	r1, r0, [sp, #24]
 800e31c:	68c5      	ldr	r5, [r0, #12]
 800e31e:	f109 0008 	add.w	r0, r9, #8
 800e322:	4629      	mov	r1, r5
 800e324:	f006 f961 	bl	80145ea <UpdateReturnRef>
 800e328:	a806      	add	r0, sp, #24
 800e32a:	2101      	movs	r1, #1
 800e32c:	2202      	movs	r2, #2
 800e32e:	f008 fb9a 	bl	8016a66 <LeaveFrame>
 800e332:	68bc      	ldr	r4, [r7, #8]
 800e334:	4632      	mov	r2, r6
 800e336:	4643      	mov	r3, r8
 800e338:	2c04      	cmp	r4, #4
 800e33a:	bfd8      	it	le
 800e33c:	2404      	movle	r4, #4
 800e33e:	4620      	mov	r0, r4
 800e340:	f008 fc32 	bl	8016ba8 <Kotlin_Int_plus_Long>
 800e344:	4606      	mov	r6, r0
 800e346:	6828      	ldr	r0, [r5, #0]
 800e348:	f641 329d 	movw	r2, #7069	; 0x1b9d
 800e34c:	f64d 33b1 	movw	r3, #56241	; 0xdbb1
 800e350:	f2cc 02a8 	movt	r2, #49320	; 0xc0a8
 800e354:	f6c3 33d6 	movt	r3, #15318	; 0x3bd6
 800e358:	4688      	mov	r8, r1
 800e35a:	f008 fd45 	bl	8016de8 <LookupOpenMethod>
 800e35e:	4601      	mov	r1, r0
 800e360:	4628      	mov	r0, r5
 800e362:	4632      	mov	r2, r6
 800e364:	4643      	mov	r3, r8
 800e366:	9400      	str	r4, [sp, #0]
 800e368:	4788      	blx	r1
 800e36a:	4605      	mov	r5, r0
 800e36c:	f240 0038 	movw	r0, #56	; 0x38
 800e370:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800e374:	6800      	ldr	r0, [r0, #0]
 800e376:	b978      	cbnz	r0, 800e398 <kfun:kotlinx.cinterop.ArenaBase.alloc(kotlin.Long;kotlin.Int)ValueType+0x9c>
 800e378:	f240 0038 	movw	r0, #56	; 0x38
 800e37c:	f243 1130 	movw	r1, #12592	; 0x3130
 800e380:	f64d 221b 	movw	r2, #55835	; 0xda1b
 800e384:	f109 030c 	add.w	r3, r9, #12
 800e388:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800e38c:	f6c0 0102 	movt	r1, #2050	; 0x802
 800e390:	f6c0 0200 	movt	r2, #2048	; 0x800
 800e394:	f008 fb19 	bl	80169ca <InitInstance>
 800e398:	9803      	ldr	r0, [sp, #12]
 800e39a:	f04f 0800 	mov.w	r8, #0
 800e39e:	2101      	movs	r1, #1
 800e3a0:	2202      	movs	r2, #2
 800e3a2:	e9cd 8006 	strd	r8, r0, [sp, #24]
 800e3a6:	6906      	ldr	r6, [r0, #16]
 800e3a8:	a806      	add	r0, sp, #24
 800e3aa:	f008 fb5c 	bl	8016a66 <LeaveFrame>
 800e3ae:	602e      	str	r6, [r5, #0]
 800e3b0:	2101      	movs	r1, #1
 800e3b2:	9803      	ldr	r0, [sp, #12]
 800e3b4:	2202      	movs	r2, #2
 800e3b6:	e9cd 8006 	strd	r8, r0, [sp, #24]
 800e3ba:	6105      	str	r5, [r0, #16]
 800e3bc:	a806      	add	r0, sp, #24
 800e3be:	f008 fb52 	bl	8016a66 <LeaveFrame>
 800e3c2:	4620      	mov	r0, r4
 800e3c4:	f008 fc14 	bl	8016bf0 <Kotlin_Int_toLong>
 800e3c8:	182c      	adds	r4, r5, r0
 800e3ca:	e9cd 8806 	strd	r8, r8, [sp, #24]
 800e3ce:	d00e      	beq.n	800e3ee <kfun:kotlinx.cinterop.ArenaBase.alloc(kotlin.Long;kotlin.Int)ValueType+0xf2>
 800e3d0:	a806      	add	r0, sp, #24
 800e3d2:	2100      	movs	r1, #0
 800e3d4:	2202      	movs	r2, #2
 800e3d6:	f008 fb46 	bl	8016a66 <LeaveFrame>
 800e3da:	a802      	add	r0, sp, #8
 800e3dc:	2101      	movs	r1, #1
 800e3de:	2204      	movs	r2, #4
 800e3e0:	f008 fb41 	bl	8016a66 <LeaveFrame>
 800e3e4:	4620      	mov	r0, r4
 800e3e6:	b008      	add	sp, #32
 800e3e8:	e8bd 0b00 	ldmia.w	sp!, {r8, r9, fp}
 800e3ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e3ee:	f7fe fadd 	bl	800c9ac <ThrowNullPointerException>
 800e3f2:	4604      	mov	r4, r0
 800e3f4:	a802      	add	r0, sp, #8
 800e3f6:	2101      	movs	r1, #1
 800e3f8:	2204      	movs	r2, #4
 800e3fa:	f008 fb34 	bl	8016a66 <LeaveFrame>
 800e3fe:	4620      	mov	r0, r4
 800e400:	f7f2 fef4 	bl	80011ec <_Unwind_Resume>

0800e404 <kfun:kotlinx.cinterop.CValues.hashCode()ValueType>:
 800e404:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e406:	af03      	add	r7, sp, #12
 800e408:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 800e40c:	b091      	sub	sp, #68	; 0x44
 800e40e:	2400      	movs	r4, #0
 800e410:	46eb      	mov	fp, sp
 800e412:	9404      	str	r4, [sp, #16]
 800e414:	e9cd 4402 	strd	r4, r4, [sp, #8]
 800e418:	9400      	str	r4, [sp, #0]
 800e41a:	9001      	str	r0, [sp, #4]
 800e41c:	f10b 0108 	add.w	r1, fp, #8
 800e420:	f7ff fb9f 	bl	800db62 <kfun:kotlinx.cinterop.getBytes@kotlinx.cinterop.CValues<#GENERIC_kotlinx.cinterop.CVariable>.()Generic>
 800e424:	4605      	mov	r5, r0
 800e426:	f10d 0814 	add.w	r8, sp, #20
 800e42a:	f243 60b0 	movw	r0, #14000	; 0x36b0
 800e42e:	f108 0108 	add.w	r1, r8, #8
 800e432:	f6c0 0002 	movt	r0, #2050	; 0x802
 800e436:	9407      	str	r4, [sp, #28]
 800e438:	f10b 0a10 	add.w	sl, fp, #16
 800e43c:	e9cd 4505 	strd	r4, r5, [sp, #20]
 800e440:	f008 fa5b 	bl	80168fa <AllocInstance>
 800e444:	4606      	mov	r6, r0
 800e446:	a80e      	add	r0, sp, #56	; 0x38
 800e448:	2101      	movs	r1, #1
 800e44a:	2202      	movs	r2, #2
 800e44c:	e9cd 4608 	strd	r4, r6, [sp, #32]
 800e450:	950a      	str	r5, [sp, #40]	; 0x28
 800e452:	e9cd 460c 	strd	r4, r6, [sp, #48]	; 0x30
 800e456:	e9cd 460e 	strd	r4, r6, [sp, #56]	; 0x38
 800e45a:	f008 fb04 	bl	8016a66 <LeaveFrame>
 800e45e:	a80c      	add	r0, sp, #48	; 0x30
 800e460:	2101      	movs	r1, #1
 800e462:	2202      	movs	r2, #2
 800e464:	f008 faff 	bl	8016a66 <LeaveFrame>
 800e468:	f106 000c 	add.w	r0, r6, #12
 800e46c:	4629      	mov	r1, r5
 800e46e:	f005 feaf 	bl	80141d0 <UpdateRef>
 800e472:	f10d 0920 	add.w	r9, sp, #32
 800e476:	2102      	movs	r1, #2
 800e478:	2203      	movs	r2, #3
 800e47a:	60b4      	str	r4, [r6, #8]
 800e47c:	4648      	mov	r0, r9
 800e47e:	f008 faf2 	bl	8016a66 <LeaveFrame>
 800e482:	f10b 000c 	add.w	r0, fp, #12
 800e486:	4631      	mov	r1, r6
 800e488:	f006 f8af 	bl	80145ea <UpdateReturnRef>
 800e48c:	4640      	mov	r0, r8
 800e48e:	2101      	movs	r1, #1
 800e490:	2203      	movs	r2, #3
 800e492:	f008 fae8 	bl	8016a66 <LeaveFrame>
 800e496:	4650      	mov	r0, sl
 800e498:	4631      	mov	r1, r6
 800e49a:	f005 fe99 	bl	80141d0 <UpdateRef>
 800e49e:	2500      	movs	r5, #0
 800e4a0:	e00c      	b.n	800e4bc <kfun:kotlinx.cinterop.CValues.hashCode()ValueType+0xb8>
 800e4a2:	4648      	mov	r0, r9
 800e4a4:	2101      	movs	r1, #1
 800e4a6:	2202      	movs	r2, #2
 800e4a8:	f008 fadd 	bl	8016a66 <LeaveFrame>
 800e4ac:	4628      	mov	r0, r5
 800e4ae:	211f      	movs	r1, #31
 800e4b0:	f008 fb8f 	bl	8016bd2 <Kotlin_Int_times_Int>
 800e4b4:	b271      	sxtb	r1, r6
 800e4b6:	f008 fb73 	bl	8016ba0 <Kotlin_Int_plus_Byte>
 800e4ba:	4605      	mov	r5, r0
 800e4bc:	9804      	ldr	r0, [sp, #16]
 800e4be:	6801      	ldr	r1, [r0, #0]
 800e4c0:	6d49      	ldr	r1, [r1, #84]	; 0x54
 800e4c2:	4788      	blx	r1
 800e4c4:	07c0      	lsls	r0, r0, #31
 800e4c6:	d007      	beq.n	800e4d8 <kfun:kotlinx.cinterop.CValues.hashCode()ValueType+0xd4>
 800e4c8:	9804      	ldr	r0, [sp, #16]
 800e4ca:	e9cd 4008 	strd	r4, r0, [sp, #32]
 800e4ce:	6801      	ldr	r1, [r0, #0]
 800e4d0:	6d09      	ldr	r1, [r1, #80]	; 0x50
 800e4d2:	4788      	blx	r1
 800e4d4:	4606      	mov	r6, r0
 800e4d6:	e7e4      	b.n	800e4a2 <kfun:kotlinx.cinterop.CValues.hashCode()ValueType+0x9e>
 800e4d8:	4668      	mov	r0, sp
 800e4da:	2101      	movs	r1, #1
 800e4dc:	2205      	movs	r2, #5
 800e4de:	f008 fac2 	bl	8016a66 <LeaveFrame>
 800e4e2:	4628      	mov	r0, r5
 800e4e4:	b011      	add	sp, #68	; 0x44
 800e4e6:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 800e4ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e4ec:	e006      	b.n	800e4fc <kfun:kotlinx.cinterop.CValues.hashCode()ValueType+0xf8>
 800e4ee:	4604      	mov	r4, r0
 800e4f0:	a808      	add	r0, sp, #32
 800e4f2:	2101      	movs	r1, #1
 800e4f4:	2202      	movs	r2, #2
 800e4f6:	f008 fab6 	bl	8016a66 <LeaveFrame>
 800e4fa:	e000      	b.n	800e4fe <kfun:kotlinx.cinterop.CValues.hashCode()ValueType+0xfa>
 800e4fc:	4604      	mov	r4, r0
 800e4fe:	4668      	mov	r0, sp
 800e500:	2101      	movs	r1, #1
 800e502:	2205      	movs	r2, #5
 800e504:	f008 faaf 	bl	8016a66 <LeaveFrame>
 800e508:	4620      	mov	r0, r4
 800e50a:	f7f2 fe6f 	bl	80011ec <_Unwind_Resume>

0800e50e <kfun:kotlin.collections.ByteIterator.next()ValueType>:
 800e50e:	b5d0      	push	{r4, r6, r7, lr}
 800e510:	af02      	add	r7, sp, #8
 800e512:	b082      	sub	sp, #8
 800e514:	2100      	movs	r1, #0
 800e516:	e9cd 1000 	strd	r1, r0, [sp]
 800e51a:	6801      	ldr	r1, [r0, #0]
 800e51c:	6d09      	ldr	r1, [r1, #80]	; 0x50
 800e51e:	4788      	blx	r1
 800e520:	4604      	mov	r4, r0
 800e522:	4668      	mov	r0, sp
 800e524:	2101      	movs	r1, #1
 800e526:	2202      	movs	r2, #2
 800e528:	f008 fa9d 	bl	8016a66 <LeaveFrame>
 800e52c:	4620      	mov	r0, r4
 800e52e:	b002      	add	sp, #8
 800e530:	bdd0      	pop	{r4, r6, r7, pc}
 800e532:	4604      	mov	r4, r0
 800e534:	4668      	mov	r0, sp
 800e536:	2101      	movs	r1, #1
 800e538:	2202      	movs	r2, #2
 800e53a:	f008 fa94 	bl	8016a66 <LeaveFrame>
 800e53e:	4620      	mov	r0, r4
 800e540:	f7f2 fe54 	bl	80011ec <_Unwind_Resume>

0800e544 <kfun:kotlin.ByteIteratorImpl.nextByte#internal>:
 800e544:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e546:	af03      	add	r7, sp, #12
 800e548:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 800e54c:	b095      	sub	sp, #84	; 0x54
 800e54e:	f10d 0904 	add.w	r9, sp, #4
 800e552:	4606      	mov	r6, r0
 800e554:	2124      	movs	r1, #36	; 0x24
 800e556:	4648      	mov	r0, r9
 800e558:	f00c ffce 	bl	801b4f8 <__aeabi_memclr>
 800e55c:	2400      	movs	r4, #0
 800e55e:	a80e      	add	r0, sp, #56	; 0x38
 800e560:	9602      	str	r6, [sp, #8]
 800e562:	2101      	movs	r1, #1
 800e564:	940c      	str	r4, [sp, #48]	; 0x30
 800e566:	2202      	movs	r2, #2
 800e568:	e9cd 460a 	strd	r4, r6, [sp, #40]	; 0x28
 800e56c:	e9cd 460e 	strd	r4, r6, [sp, #56]	; 0x38
 800e570:	f8d6 b008 	ldr.w	fp, [r6, #8]
 800e574:	f008 fa77 	bl	8016a66 <LeaveFrame>
 800e578:	e9cd 460e 	strd	r4, r6, [sp, #56]	; 0x38
 800e57c:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 800e580:	68f5      	ldr	r5, [r6, #12]
 800e582:	f108 0a08 	add.w	sl, r8, #8
 800e586:	4650      	mov	r0, sl
 800e588:	4629      	mov	r1, r5
 800e58a:	f006 f82e 	bl	80145ea <UpdateReturnRef>
 800e58e:	a80e      	add	r0, sp, #56	; 0x38
 800e590:	2101      	movs	r1, #1
 800e592:	2202      	movs	r2, #2
 800e594:	f008 fa67 	bl	8016a66 <LeaveFrame>
 800e598:	4628      	mov	r0, r5
 800e59a:	e9cd 450e 	strd	r4, r5, [sp, #56]	; 0x38
 800e59e:	f006 f991 	bl	80148c4 <Kotlin_ByteArray_getArrayLength>
 800e5a2:	4605      	mov	r5, r0
 800e5a4:	a80e      	add	r0, sp, #56	; 0x38
 800e5a6:	2101      	movs	r1, #1
 800e5a8:	2202      	movs	r2, #2
 800e5aa:	f008 fa5c 	bl	8016a66 <LeaveFrame>
 800e5ae:	4640      	mov	r0, r8
 800e5b0:	2101      	movs	r1, #1
 800e5b2:	2203      	movs	r2, #3
 800e5b4:	f008 fa57 	bl	8016a66 <LeaveFrame>
 800e5b8:	45ab      	cmp	fp, r5
 800e5ba:	bfb8      	it	lt
 800e5bc:	2401      	movlt	r4, #1
 800e5be:	4620      	mov	r0, r4
 800e5c0:	f008 fac3 	bl	8016b4a <Kotlin_Boolean_not>
 800e5c4:	07c0      	lsls	r0, r0, #31
 800e5c6:	d138      	bne.n	800e63a <kfun:kotlin.ByteIteratorImpl.nextByte#internal+0xf6>
 800e5c8:	f04f 0800 	mov.w	r8, #0
 800e5cc:	f109 001c 	add.w	r0, r9, #28
 800e5d0:	e9cd 860e 	strd	r8, r6, [sp, #56]	; 0x38
 800e5d4:	f109 0520 	add.w	r5, r9, #32
 800e5d8:	68f4      	ldr	r4, [r6, #12]
 800e5da:	4621      	mov	r1, r4
 800e5dc:	f006 f805 	bl	80145ea <UpdateReturnRef>
 800e5e0:	a80e      	add	r0, sp, #56	; 0x38
 800e5e2:	2101      	movs	r1, #1
 800e5e4:	2202      	movs	r2, #2
 800e5e6:	f008 fa3e 	bl	8016a66 <LeaveFrame>
 800e5ea:	9902      	ldr	r1, [sp, #8]
 800e5ec:	4628      	mov	r0, r5
 800e5ee:	f005 fdef 	bl	80141d0 <UpdateRef>
 800e5f2:	9809      	ldr	r0, [sp, #36]	; 0x24
 800e5f4:	2101      	movs	r1, #1
 800e5f6:	2202      	movs	r2, #2
 800e5f8:	e9cd 800e 	strd	r8, r0, [sp, #56]	; 0x38
 800e5fc:	6885      	ldr	r5, [r0, #8]
 800e5fe:	a80e      	add	r0, sp, #56	; 0x38
 800e600:	f008 fa31 	bl	8016a66 <LeaveFrame>
 800e604:	4628      	mov	r0, r5
 800e606:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800e608:	f008 fae5 	bl	8016bd6 <Kotlin_Int_inc>
 800e60c:	e9cd 860e 	strd	r8, r6, [sp, #56]	; 0x38
 800e610:	2101      	movs	r1, #1
 800e612:	60b0      	str	r0, [r6, #8]
 800e614:	a80e      	add	r0, sp, #56	; 0x38
 800e616:	2202      	movs	r2, #2
 800e618:	f008 fa25 	bl	8016a66 <LeaveFrame>
 800e61c:	4620      	mov	r0, r4
 800e61e:	4629      	mov	r1, r5
 800e620:	f006 f939 	bl	8014896 <Kotlin_ByteArray_get>
 800e624:	4604      	mov	r4, r0
 800e626:	a801      	add	r0, sp, #4
 800e628:	2101      	movs	r1, #1
 800e62a:	2209      	movs	r2, #9
 800e62c:	f008 fa1b 	bl	8016a66 <LeaveFrame>
 800e630:	4620      	mov	r0, r4
 800e632:	b015      	add	sp, #84	; 0x54
 800e634:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 800e638:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e63a:	f641 10f0 	movw	r0, #6640	; 0x19f0
 800e63e:	f109 0108 	add.w	r1, r9, #8
 800e642:	f6c0 0002 	movt	r0, #2050	; 0x802
 800e646:	f109 0410 	add.w	r4, r9, #16
 800e64a:	f109 060c 	add.w	r6, r9, #12
 800e64e:	f008 f954 	bl	80168fa <AllocInstance>
 800e652:	210a      	movs	r1, #10
 800e654:	4605      	mov	r5, r0
 800e656:	f04f 0800 	mov.w	r8, #0
 800e65a:	e9cd 850e 	strd	r8, r5, [sp, #56]	; 0x38
 800e65e:	f7fc fa7a 	bl	800ab56 <kfun:kotlin.text.StringBuilder.<init>(kotlin.Int)kotlin.text.StringBuilder>
 800e662:	a80e      	add	r0, sp, #56	; 0x38
 800e664:	2101      	movs	r1, #1
 800e666:	2202      	movs	r2, #2
 800e668:	f008 f9fd 	bl	8016a66 <LeaveFrame>
 800e66c:	4630      	mov	r0, r6
 800e66e:	4629      	mov	r1, r5
 800e670:	f005 fdae 	bl	80141d0 <UpdateRef>
 800e674:	9802      	ldr	r0, [sp, #8]
 800e676:	f10d 0b38 	add.w	fp, sp, #56	; 0x38
 800e67a:	9d04      	ldr	r5, [sp, #16]
 800e67c:	2101      	movs	r1, #1
 800e67e:	2202      	movs	r2, #2
 800e680:	e9cd 800e 	strd	r8, r0, [sp, #56]	; 0x38
 800e684:	6886      	ldr	r6, [r0, #8]
 800e686:	4658      	mov	r0, fp
 800e688:	f008 f9ed 	bl	8016a66 <LeaveFrame>
 800e68c:	4628      	mov	r0, r5
 800e68e:	4631      	mov	r1, r6
 800e690:	4622      	mov	r2, r4
 800e692:	f7fc f888 	bl	800a7a6 <kfun:kotlin.text.StringBuilder.append(kotlin.Int)kotlin.text.StringBuilder>
 800e696:	9804      	ldr	r0, [sp, #16]
 800e698:	f109 0518 	add.w	r5, r9, #24
 800e69c:	e9cd 8810 	strd	r8, r8, [sp, #64]	; 0x40
 800e6a0:	f109 0914 	add.w	r9, r9, #20
 800e6a4:	e9cd 800e 	strd	r8, r0, [sp, #56]	; 0x38
 800e6a8:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 800e6ac:	e9cd 800a 	strd	r8, r0, [sp, #40]	; 0x28
 800e6b0:	68c4      	ldr	r4, [r0, #12]
 800e6b2:	4650      	mov	r0, sl
 800e6b4:	4621      	mov	r1, r4
 800e6b6:	f005 fd8b 	bl	80141d0 <UpdateRef>
 800e6ba:	f10b 0008 	add.w	r0, fp, #8
 800e6be:	4621      	mov	r1, r4
 800e6c0:	f005 ff93 	bl	80145ea <UpdateReturnRef>
 800e6c4:	f10d 0a28 	add.w	sl, sp, #40	; 0x28
 800e6c8:	2101      	movs	r1, #1
 800e6ca:	2203      	movs	r2, #3
 800e6cc:	4650      	mov	r0, sl
 800e6ce:	f008 f9ca 	bl	8016a66 <LeaveFrame>
 800e6d2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800e6d4:	2101      	movs	r1, #1
 800e6d6:	2202      	movs	r2, #2
 800e6d8:	e9cd 800a 	strd	r8, r0, [sp, #40]	; 0x28
 800e6dc:	6886      	ldr	r6, [r0, #8]
 800e6de:	a80a      	add	r0, sp, #40	; 0x28
 800e6e0:	f008 f9c1 	bl	8016a66 <LeaveFrame>
 800e6e4:	f10b 030c 	add.w	r3, fp, #12
 800e6e8:	4620      	mov	r0, r4
 800e6ea:	2100      	movs	r1, #0
 800e6ec:	4632      	mov	r2, r6
 800e6ee:	f006 fd30 	bl	8015152 <Kotlin_String_fromCharArray>
 800e6f2:	4606      	mov	r6, r0
 800e6f4:	4648      	mov	r0, r9
 800e6f6:	4631      	mov	r1, r6
 800e6f8:	f005 ff77 	bl	80145ea <UpdateReturnRef>
 800e6fc:	4658      	mov	r0, fp
 800e6fe:	2101      	movs	r1, #1
 800e700:	2204      	movs	r2, #4
 800e702:	f008 f9b0 	bl	8016a66 <LeaveFrame>
 800e706:	f242 0050 	movw	r0, #8272	; 0x2050
 800e70a:	4629      	mov	r1, r5
 800e70c:	f6c0 0002 	movt	r0, #2050	; 0x802
 800e710:	f008 f8f3 	bl	80168fa <AllocInstance>
 800e714:	4604      	mov	r4, r0
 800e716:	4631      	mov	r1, r6
 800e718:	e9cd 840e 	strd	r8, r4, [sp, #56]	; 0x38
 800e71c:	9610      	str	r6, [sp, #64]	; 0x40
 800e71e:	e9cd 840a 	strd	r8, r4, [sp, #40]	; 0x28
 800e722:	960c      	str	r6, [sp, #48]	; 0x30
 800e724:	f7fc f889 	bl	800a83a <kfun:kotlin.Exception.<init>(kotlin.String?)kotlin.Exception>
 800e728:	a812      	add	r0, sp, #72	; 0x48
 800e72a:	2101      	movs	r1, #1
 800e72c:	2202      	movs	r2, #2
 800e72e:	e9cd 8412 	strd	r8, r4, [sp, #72]	; 0x48
 800e732:	f008 f998 	bl	8016a66 <LeaveFrame>
 800e736:	4650      	mov	r0, sl
 800e738:	2102      	movs	r1, #2
 800e73a:	2203      	movs	r2, #3
 800e73c:	f008 f993 	bl	8016a66 <LeaveFrame>
 800e740:	a80a      	add	r0, sp, #40	; 0x28
 800e742:	2101      	movs	r1, #1
 800e744:	2202      	movs	r2, #2
 800e746:	e9cd 840a 	strd	r8, r4, [sp, #40]	; 0x28
 800e74a:	f008 f98c 	bl	8016a66 <LeaveFrame>
 800e74e:	a80e      	add	r0, sp, #56	; 0x38
 800e750:	2102      	movs	r1, #2
 800e752:	2203      	movs	r2, #3
 800e754:	f008 f987 	bl	8016a66 <LeaveFrame>
 800e758:	4620      	mov	r0, r4
 800e75a:	f006 fbd2 	bl	8014f02 <ThrowException>
 800e75e:	4604      	mov	r4, r0
 800e760:	a801      	add	r0, sp, #4
 800e762:	2101      	movs	r1, #1
 800e764:	2209      	movs	r2, #9
 800e766:	f008 f97e 	bl	8016a66 <LeaveFrame>
 800e76a:	4620      	mov	r0, r4
 800e76c:	f7f2 fd3e 	bl	80011ec <_Unwind_Resume>

0800e770 <kfun:kotlin.ByteIteratorImpl.hasNext#internal>:
 800e770:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e772:	af03      	add	r7, sp, #12
 800e774:	f84d 8d04 	str.w	r8, [sp, #-4]!
 800e778:	b086      	sub	sp, #24
 800e77a:	4605      	mov	r5, r0
 800e77c:	2400      	movs	r4, #0
 800e77e:	a804      	add	r0, sp, #16
 800e780:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800e784:	e9cd 4403 	strd	r4, r4, [sp, #12]
 800e788:	2101      	movs	r1, #1
 800e78a:	9505      	str	r5, [sp, #20]
 800e78c:	2202      	movs	r2, #2
 800e78e:	f8d5 8008 	ldr.w	r8, [r5, #8]
 800e792:	f008 f968 	bl	8016a66 <LeaveFrame>
 800e796:	e9cd 4504 	strd	r4, r5, [sp, #16]
 800e79a:	ae01      	add	r6, sp, #4
 800e79c:	68ed      	ldr	r5, [r5, #12]
 800e79e:	f106 0008 	add.w	r0, r6, #8
 800e7a2:	4629      	mov	r1, r5
 800e7a4:	f005 ff21 	bl	80145ea <UpdateReturnRef>
 800e7a8:	a804      	add	r0, sp, #16
 800e7aa:	2101      	movs	r1, #1
 800e7ac:	2202      	movs	r2, #2
 800e7ae:	f008 f95a 	bl	8016a66 <LeaveFrame>
 800e7b2:	4628      	mov	r0, r5
 800e7b4:	e9cd 4504 	strd	r4, r5, [sp, #16]
 800e7b8:	f006 f884 	bl	80148c4 <Kotlin_ByteArray_getArrayLength>
 800e7bc:	4605      	mov	r5, r0
 800e7be:	a804      	add	r0, sp, #16
 800e7c0:	2101      	movs	r1, #1
 800e7c2:	2202      	movs	r2, #2
 800e7c4:	f008 f94f 	bl	8016a66 <LeaveFrame>
 800e7c8:	4630      	mov	r0, r6
 800e7ca:	2101      	movs	r1, #1
 800e7cc:	2203      	movs	r2, #3
 800e7ce:	f008 f94a 	bl	8016a66 <LeaveFrame>
 800e7d2:	45a8      	cmp	r8, r5
 800e7d4:	bfb8      	it	lt
 800e7d6:	2401      	movlt	r4, #1
 800e7d8:	4620      	mov	r0, r4
 800e7da:	b006      	add	sp, #24
 800e7dc:	f85d 8b04 	ldr.w	r8, [sp], #4
 800e7e0:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e7e2 <kfun:kotlin.collections.ByteIterator.$<bridge-UN>next()ValueType()kotlin.Any?>:
 800e7e2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e7e4:	af03      	add	r7, sp, #12
 800e7e6:	e92d 0b00 	stmdb	sp!, {r8, r9, fp}
 800e7ea:	b08c      	sub	sp, #48	; 0x30
 800e7ec:	2400      	movs	r4, #0
 800e7ee:	4688      	mov	r8, r1
 800e7f0:	9403      	str	r4, [sp, #12]
 800e7f2:	e9cd 4001 	strd	r4, r0, [sp, #4]
 800e7f6:	e9cd 400a 	strd	r4, r0, [sp, #40]	; 0x28
 800e7fa:	6801      	ldr	r1, [r0, #0]
 800e7fc:	6d09      	ldr	r1, [r1, #80]	; 0x50
 800e7fe:	4788      	blx	r1
 800e800:	4606      	mov	r6, r0
 800e802:	a80a      	add	r0, sp, #40	; 0x28
 800e804:	2101      	movs	r1, #1
 800e806:	2202      	movs	r2, #2
 800e808:	f008 f92d 	bl	8016a66 <LeaveFrame>
 800e80c:	f10d 0910 	add.w	r9, sp, #16
 800e810:	f243 70a0 	movw	r0, #14240	; 0x37a0
 800e814:	f049 0104 	orr.w	r1, r9, #4
 800e818:	f6c0 0002 	movt	r0, #2050	; 0x802
 800e81c:	e9cd 4404 	strd	r4, r4, [sp, #16]
 800e820:	f008 f86b 	bl	80168fa <AllocInstance>
 800e824:	4605      	mov	r5, r0
 800e826:	a80a      	add	r0, sp, #40	; 0x28
 800e828:	2101      	movs	r1, #1
 800e82a:	2202      	movs	r2, #2
 800e82c:	e9cd 4506 	strd	r4, r5, [sp, #24]
 800e830:	e9cd 4508 	strd	r4, r5, [sp, #32]
 800e834:	e9cd 450a 	strd	r4, r5, [sp, #40]	; 0x28
 800e838:	f008 f915 	bl	8016a66 <LeaveFrame>
 800e83c:	a808      	add	r0, sp, #32
 800e83e:	2101      	movs	r1, #1
 800e840:	2202      	movs	r2, #2
 800e842:	f008 f910 	bl	8016a66 <LeaveFrame>
 800e846:	a806      	add	r0, sp, #24
 800e848:	2101      	movs	r1, #1
 800e84a:	2202      	movs	r2, #2
 800e84c:	722e      	strb	r6, [r5, #8]
 800e84e:	f008 f90a 	bl	8016a66 <LeaveFrame>
 800e852:	ae01      	add	r6, sp, #4
 800e854:	4629      	mov	r1, r5
 800e856:	f106 0008 	add.w	r0, r6, #8
 800e85a:	f005 fec6 	bl	80145ea <UpdateReturnRef>
 800e85e:	4648      	mov	r0, r9
 800e860:	2100      	movs	r1, #0
 800e862:	2202      	movs	r2, #2
 800e864:	f008 f8ff 	bl	8016a66 <LeaveFrame>
 800e868:	4640      	mov	r0, r8
 800e86a:	4629      	mov	r1, r5
 800e86c:	f005 febd 	bl	80145ea <UpdateReturnRef>
 800e870:	4630      	mov	r0, r6
 800e872:	2101      	movs	r1, #1
 800e874:	2203      	movs	r2, #3
 800e876:	f008 f8f6 	bl	8016a66 <LeaveFrame>
 800e87a:	4628      	mov	r0, r5
 800e87c:	b00c      	add	sp, #48	; 0x30
 800e87e:	e8bd 0b00 	ldmia.w	sp!, {r8, r9, fp}
 800e882:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e884:	4604      	mov	r4, r0
 800e886:	a80a      	add	r0, sp, #40	; 0x28
 800e888:	2101      	movs	r1, #1
 800e88a:	2202      	movs	r2, #2
 800e88c:	f008 f8eb 	bl	8016a66 <LeaveFrame>
 800e890:	a801      	add	r0, sp, #4
 800e892:	2101      	movs	r1, #1
 800e894:	2203      	movs	r2, #3
 800e896:	f008 f8e6 	bl	8016a66 <LeaveFrame>
 800e89a:	4620      	mov	r0, r4
 800e89c:	f7f2 fca6 	bl	80011ec <_Unwind_Resume>

0800e8a0 <kfun:konan.internal.ByteBox.hashCode()ValueType>:
 800e8a0:	b5d0      	push	{r4, r6, r7, lr}
 800e8a2:	af02      	add	r7, sp, #8
 800e8a4:	b084      	sub	sp, #16
 800e8a6:	2100      	movs	r1, #0
 800e8a8:	2202      	movs	r2, #2
 800e8aa:	e9cd 1000 	strd	r1, r0, [sp]
 800e8ae:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800e8b2:	2101      	movs	r1, #1
 800e8b4:	f990 4008 	ldrsb.w	r4, [r0, #8]
 800e8b8:	a802      	add	r0, sp, #8
 800e8ba:	f008 f8d4 	bl	8016a66 <LeaveFrame>
 800e8be:	4620      	mov	r0, r4
 800e8c0:	f008 f956 	bl	8016b70 <Kotlin_Byte_toInt>
 800e8c4:	4604      	mov	r4, r0
 800e8c6:	4668      	mov	r0, sp
 800e8c8:	2101      	movs	r1, #1
 800e8ca:	2202      	movs	r2, #2
 800e8cc:	f008 f8cb 	bl	8016a66 <LeaveFrame>
 800e8d0:	4620      	mov	r0, r4
 800e8d2:	b004      	add	sp, #16
 800e8d4:	bdd0      	pop	{r4, r6, r7, pc}

0800e8d6 <kfun:konan.internal.ByteBox.toString()kotlin.String>:
 800e8d6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e8d8:	af03      	add	r7, sp, #12
 800e8da:	f84d bd04 	str.w	fp, [sp, #-4]!
 800e8de:	b086      	sub	sp, #24
 800e8e0:	460c      	mov	r4, r1
 800e8e2:	2100      	movs	r1, #0
 800e8e4:	e9cd 1001 	strd	r1, r0, [sp, #4]
 800e8e8:	2202      	movs	r2, #2
 800e8ea:	e9cd 1103 	strd	r1, r1, [sp, #12]
 800e8ee:	2101      	movs	r1, #1
 800e8f0:	9005      	str	r0, [sp, #20]
 800e8f2:	f990 5008 	ldrsb.w	r5, [r0, #8]
 800e8f6:	a804      	add	r0, sp, #16
 800e8f8:	f008 f8b5 	bl	8016a66 <LeaveFrame>
 800e8fc:	ae01      	add	r6, sp, #4
 800e8fe:	4628      	mov	r0, r5
 800e900:	f106 0108 	add.w	r1, r6, #8
 800e904:	f008 f9dc 	bl	8016cc0 <Kotlin_Byte_toString>
 800e908:	4605      	mov	r5, r0
 800e90a:	4620      	mov	r0, r4
 800e90c:	4629      	mov	r1, r5
 800e90e:	f005 fe6c 	bl	80145ea <UpdateReturnRef>
 800e912:	4630      	mov	r0, r6
 800e914:	2101      	movs	r1, #1
 800e916:	2203      	movs	r2, #3
 800e918:	f008 f8a5 	bl	8016a66 <LeaveFrame>
 800e91c:	4628      	mov	r0, r5
 800e91e:	b006      	add	sp, #24
 800e920:	f85d bb04 	ldr.w	fp, [sp], #4
 800e924:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e926 <kfun:konan.internal.ByteBox.equals(kotlin.Any?)ValueType>:
 800e926:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e928:	af03      	add	r7, sp, #12
 800e92a:	f84d bd04 	str.w	fp, [sp, #-4]!
 800e92e:	b086      	sub	sp, #24
 800e930:	460d      	mov	r5, r1
 800e932:	4606      	mov	r6, r0
 800e934:	2400      	movs	r4, #0
 800e936:	2d00      	cmp	r5, #0
 800e938:	9602      	str	r6, [sp, #8]
 800e93a:	9401      	str	r4, [sp, #4]
 800e93c:	9503      	str	r5, [sp, #12]
 800e93e:	d026      	beq.n	800e98e <kfun:konan.internal.ByteBox.equals(kotlin.Any?)ValueType+0x68>
 800e940:	f243 71a0 	movw	r1, #14240	; 0x37a0
 800e944:	4628      	mov	r0, r5
 800e946:	f6c0 0102 	movt	r1, #2050	; 0x802
 800e94a:	f006 fb15 	bl	8014f78 <IsInstance>
 800e94e:	07c0      	lsls	r0, r0, #31
 800e950:	f04f 0400 	mov.w	r4, #0
 800e954:	d01b      	beq.n	800e98e <kfun:konan.internal.ByteBox.equals(kotlin.Any?)ValueType+0x68>
 800e956:	a804      	add	r0, sp, #16
 800e958:	e9cd 4604 	strd	r4, r6, [sp, #16]
 800e95c:	2101      	movs	r1, #1
 800e95e:	2202      	movs	r2, #2
 800e960:	f996 6008 	ldrsb.w	r6, [r6, #8]
 800e964:	f008 f87f 	bl	8016a66 <LeaveFrame>
 800e968:	a804      	add	r0, sp, #16
 800e96a:	e9cd 4504 	strd	r4, r5, [sp, #16]
 800e96e:	2101      	movs	r1, #1
 800e970:	2202      	movs	r2, #2
 800e972:	f995 5008 	ldrsb.w	r5, [r5, #8]
 800e976:	f008 f876 	bl	8016a66 <LeaveFrame>
 800e97a:	4630      	mov	r0, r6
 800e97c:	f008 f8f8 	bl	8016b70 <Kotlin_Byte_toInt>
 800e980:	4606      	mov	r6, r0
 800e982:	4628      	mov	r0, r5
 800e984:	f008 f8f4 	bl	8016b70 <Kotlin_Byte_toInt>
 800e988:	4286      	cmp	r6, r0
 800e98a:	bf08      	it	eq
 800e98c:	2401      	moveq	r4, #1
 800e98e:	a801      	add	r0, sp, #4
 800e990:	2102      	movs	r1, #2
 800e992:	2203      	movs	r2, #3
 800e994:	f008 f867 	bl	8016a66 <LeaveFrame>
 800e998:	4620      	mov	r0, r4
 800e99a:	b006      	add	sp, #24
 800e99c:	f85d bb04 	ldr.w	fp, [sp], #4
 800e9a0:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e9a2 <kfun:konan.internal.ByteBox.toChar()ValueType>:
 800e9a2:	b5d0      	push	{r4, r6, r7, lr}
 800e9a4:	af02      	add	r7, sp, #8
 800e9a6:	b084      	sub	sp, #16
 800e9a8:	2100      	movs	r1, #0
 800e9aa:	2202      	movs	r2, #2
 800e9ac:	e9cd 1000 	strd	r1, r0, [sp]
 800e9b0:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800e9b4:	2101      	movs	r1, #1
 800e9b6:	f990 4008 	ldrsb.w	r4, [r0, #8]
 800e9ba:	a802      	add	r0, sp, #8
 800e9bc:	f008 f853 	bl	8016a66 <LeaveFrame>
 800e9c0:	4620      	mov	r0, r4
 800e9c2:	f008 f8d2 	bl	8016b6a <Kotlin_Byte_toChar>
 800e9c6:	4604      	mov	r4, r0
 800e9c8:	4668      	mov	r0, sp
 800e9ca:	2101      	movs	r1, #1
 800e9cc:	2202      	movs	r2, #2
 800e9ce:	f008 f84a 	bl	8016a66 <LeaveFrame>
 800e9d2:	4620      	mov	r0, r4
 800e9d4:	b004      	add	sp, #16
 800e9d6:	bdd0      	pop	{r4, r6, r7, pc}

0800e9d8 <kfun:konan.internal.ByteBox.toFloat()ValueType>:
 800e9d8:	b5d0      	push	{r4, r6, r7, lr}
 800e9da:	af02      	add	r7, sp, #8
 800e9dc:	b084      	sub	sp, #16
 800e9de:	2100      	movs	r1, #0
 800e9e0:	2202      	movs	r2, #2
 800e9e2:	e9cd 1000 	strd	r1, r0, [sp]
 800e9e6:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800e9ea:	2101      	movs	r1, #1
 800e9ec:	f990 4008 	ldrsb.w	r4, [r0, #8]
 800e9f0:	a802      	add	r0, sp, #8
 800e9f2:	f008 f838 	bl	8016a66 <LeaveFrame>
 800e9f6:	4620      	mov	r0, r4
 800e9f8:	f008 f8bd 	bl	8016b76 <Kotlin_Byte_toFloat>
 800e9fc:	4604      	mov	r4, r0
 800e9fe:	4668      	mov	r0, sp
 800ea00:	2101      	movs	r1, #1
 800ea02:	2202      	movs	r2, #2
 800ea04:	f008 f82f 	bl	8016a66 <LeaveFrame>
 800ea08:	4620      	mov	r0, r4
 800ea0a:	b004      	add	sp, #16
 800ea0c:	bdd0      	pop	{r4, r6, r7, pc}

0800ea0e <kfun:konan.internal.ByteBox.toShort()ValueType>:
 800ea0e:	b5d0      	push	{r4, r6, r7, lr}
 800ea10:	af02      	add	r7, sp, #8
 800ea12:	b084      	sub	sp, #16
 800ea14:	2100      	movs	r1, #0
 800ea16:	2202      	movs	r2, #2
 800ea18:	e9cd 1000 	strd	r1, r0, [sp]
 800ea1c:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800ea20:	2101      	movs	r1, #1
 800ea22:	f990 4008 	ldrsb.w	r4, [r0, #8]
 800ea26:	a802      	add	r0, sp, #8
 800ea28:	f008 f81d 	bl	8016a66 <LeaveFrame>
 800ea2c:	4620      	mov	r0, r4
 800ea2e:	f008 f89e 	bl	8016b6e <Kotlin_Byte_toShort>
 800ea32:	4604      	mov	r4, r0
 800ea34:	4668      	mov	r0, sp
 800ea36:	2101      	movs	r1, #1
 800ea38:	2202      	movs	r2, #2
 800ea3a:	f008 f814 	bl	8016a66 <LeaveFrame>
 800ea3e:	4620      	mov	r0, r4
 800ea40:	b004      	add	sp, #16
 800ea42:	bdd0      	pop	{r4, r6, r7, pc}

0800ea44 <kfun:konan.internal.ByteBox.toLong()ValueType>:
 800ea44:	b5b0      	push	{r4, r5, r7, lr}
 800ea46:	af02      	add	r7, sp, #8
 800ea48:	b084      	sub	sp, #16
 800ea4a:	2100      	movs	r1, #0
 800ea4c:	2202      	movs	r2, #2
 800ea4e:	e9cd 1000 	strd	r1, r0, [sp]
 800ea52:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800ea56:	2101      	movs	r1, #1
 800ea58:	f990 4008 	ldrsb.w	r4, [r0, #8]
 800ea5c:	a802      	add	r0, sp, #8
 800ea5e:	f008 f802 	bl	8016a66 <LeaveFrame>
 800ea62:	4620      	mov	r0, r4
 800ea64:	f008 f885 	bl	8016b72 <Kotlin_Byte_toLong>
 800ea68:	4604      	mov	r4, r0
 800ea6a:	460d      	mov	r5, r1
 800ea6c:	4668      	mov	r0, sp
 800ea6e:	2101      	movs	r1, #1
 800ea70:	2202      	movs	r2, #2
 800ea72:	f007 fff8 	bl	8016a66 <LeaveFrame>
 800ea76:	4620      	mov	r0, r4
 800ea78:	4629      	mov	r1, r5
 800ea7a:	b004      	add	sp, #16
 800ea7c:	bdb0      	pop	{r4, r5, r7, pc}

0800ea7e <kfun:konan.internal.ByteBox.toByte()ValueType>:
 800ea7e:	b5d0      	push	{r4, r6, r7, lr}
 800ea80:	af02      	add	r7, sp, #8
 800ea82:	b084      	sub	sp, #16
 800ea84:	2100      	movs	r1, #0
 800ea86:	2202      	movs	r2, #2
 800ea88:	e9cd 1000 	strd	r1, r0, [sp]
 800ea8c:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800ea90:	2101      	movs	r1, #1
 800ea92:	f990 4008 	ldrsb.w	r4, [r0, #8]
 800ea96:	a802      	add	r0, sp, #8
 800ea98:	f007 ffe5 	bl	8016a66 <LeaveFrame>
 800ea9c:	4620      	mov	r0, r4
 800ea9e:	f008 f863 	bl	8016b68 <Kotlin_Byte_toByte>
 800eaa2:	4668      	mov	r0, sp
 800eaa4:	2101      	movs	r1, #1
 800eaa6:	2202      	movs	r2, #2
 800eaa8:	f007 ffdd 	bl	8016a66 <LeaveFrame>
 800eaac:	4620      	mov	r0, r4
 800eaae:	b004      	add	sp, #16
 800eab0:	bdd0      	pop	{r4, r6, r7, pc}

0800eab2 <kfun:konan.internal.ByteBox.toDouble()ValueType>:
 800eab2:	b5b0      	push	{r4, r5, r7, lr}
 800eab4:	af02      	add	r7, sp, #8
 800eab6:	b084      	sub	sp, #16
 800eab8:	2100      	movs	r1, #0
 800eaba:	2202      	movs	r2, #2
 800eabc:	e9cd 1000 	strd	r1, r0, [sp]
 800eac0:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800eac4:	2101      	movs	r1, #1
 800eac6:	f990 4008 	ldrsb.w	r4, [r0, #8]
 800eaca:	a802      	add	r0, sp, #8
 800eacc:	f007 ffcb 	bl	8016a66 <LeaveFrame>
 800ead0:	4620      	mov	r0, r4
 800ead2:	f008 f857 	bl	8016b84 <Kotlin_Byte_toDouble>
 800ead6:	4604      	mov	r4, r0
 800ead8:	460d      	mov	r5, r1
 800eada:	4668      	mov	r0, sp
 800eadc:	2101      	movs	r1, #1
 800eade:	2202      	movs	r2, #2
 800eae0:	f007 ffc1 	bl	8016a66 <LeaveFrame>
 800eae4:	4620      	mov	r0, r4
 800eae6:	4629      	mov	r1, r5
 800eae8:	b004      	add	sp, #16
 800eaea:	bdb0      	pop	{r4, r5, r7, pc}

0800eaec <kfun:konan.internal.ByteBox.toInt()ValueType>:
 800eaec:	b5d0      	push	{r4, r6, r7, lr}
 800eaee:	af02      	add	r7, sp, #8
 800eaf0:	b084      	sub	sp, #16
 800eaf2:	2100      	movs	r1, #0
 800eaf4:	2202      	movs	r2, #2
 800eaf6:	e9cd 1000 	strd	r1, r0, [sp]
 800eafa:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800eafe:	2101      	movs	r1, #1
 800eb00:	f990 4008 	ldrsb.w	r4, [r0, #8]
 800eb04:	a802      	add	r0, sp, #8
 800eb06:	f007 ffae 	bl	8016a66 <LeaveFrame>
 800eb0a:	4620      	mov	r0, r4
 800eb0c:	f008 f830 	bl	8016b70 <Kotlin_Byte_toInt>
 800eb10:	4604      	mov	r4, r0
 800eb12:	4668      	mov	r0, sp
 800eb14:	2101      	movs	r1, #1
 800eb16:	2202      	movs	r2, #2
 800eb18:	f007 ffa5 	bl	8016a66 <LeaveFrame>
 800eb1c:	4620      	mov	r0, r4
 800eb1e:	b004      	add	sp, #16
 800eb20:	bdd0      	pop	{r4, r6, r7, pc}

0800eb22 <kfun:konan.internal.ByteBox.compareTo(kotlin.Byte)ValueType>:
 800eb22:	b5b0      	push	{r4, r5, r7, lr}
 800eb24:	af02      	add	r7, sp, #8
 800eb26:	b084      	sub	sp, #16
 800eb28:	460c      	mov	r4, r1
 800eb2a:	2100      	movs	r1, #0
 800eb2c:	e9cd 1000 	strd	r1, r0, [sp]
 800eb30:	2202      	movs	r2, #2
 800eb32:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800eb36:	2101      	movs	r1, #1
 800eb38:	f990 5008 	ldrsb.w	r5, [r0, #8]
 800eb3c:	a802      	add	r0, sp, #8
 800eb3e:	f007 ff92 	bl	8016a66 <LeaveFrame>
 800eb42:	b261      	sxtb	r1, r4
 800eb44:	4628      	mov	r0, r5
 800eb46:	f008 f806 	bl	8016b56 <Kotlin_Byte_compareTo_Byte>
 800eb4a:	4604      	mov	r4, r0
 800eb4c:	4668      	mov	r0, sp
 800eb4e:	2101      	movs	r1, #1
 800eb50:	2202      	movs	r2, #2
 800eb52:	f007 ff88 	bl	8016a66 <LeaveFrame>
 800eb56:	4620      	mov	r0, r4
 800eb58:	b004      	add	sp, #16
 800eb5a:	bdb0      	pop	{r4, r5, r7, pc}

0800eb5c <kfun:konan.internal.ByteBox.$<bridge-NNU>compareTo(kotlin.Byte)ValueType(kotlin.Any?)ValueType>:
 800eb5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800eb5e:	af03      	add	r7, sp, #12
 800eb60:	f84d bd04 	str.w	fp, [sp, #-4]!
 800eb64:	b088      	sub	sp, #32
 800eb66:	4604      	mov	r4, r0
 800eb68:	2600      	movs	r6, #0
 800eb6a:	9402      	str	r4, [sp, #8]
 800eb6c:	a806      	add	r0, sp, #24
 800eb6e:	9601      	str	r6, [sp, #4]
 800eb70:	2202      	movs	r2, #2
 800eb72:	9103      	str	r1, [sp, #12]
 800eb74:	e9cd 6106 	strd	r6, r1, [sp, #24]
 800eb78:	f991 5008 	ldrsb.w	r5, [r1, #8]
 800eb7c:	2101      	movs	r1, #1
 800eb7e:	f007 ff72 	bl	8016a66 <LeaveFrame>
 800eb82:	a806      	add	r0, sp, #24
 800eb84:	e9cd 6404 	strd	r6, r4, [sp, #16]
 800eb88:	e9cd 6406 	strd	r6, r4, [sp, #24]
 800eb8c:	2101      	movs	r1, #1
 800eb8e:	2202      	movs	r2, #2
 800eb90:	f994 4008 	ldrsb.w	r4, [r4, #8]
 800eb94:	f007 ff67 	bl	8016a66 <LeaveFrame>
 800eb98:	4620      	mov	r0, r4
 800eb9a:	4629      	mov	r1, r5
 800eb9c:	f007 ffdb 	bl	8016b56 <Kotlin_Byte_compareTo_Byte>
 800eba0:	4604      	mov	r4, r0
 800eba2:	a804      	add	r0, sp, #16
 800eba4:	2101      	movs	r1, #1
 800eba6:	2202      	movs	r2, #2
 800eba8:	f007 ff5d 	bl	8016a66 <LeaveFrame>
 800ebac:	a801      	add	r0, sp, #4
 800ebae:	2102      	movs	r1, #2
 800ebb0:	2203      	movs	r2, #3
 800ebb2:	f007 ff58 	bl	8016a66 <LeaveFrame>
 800ebb6:	4620      	mov	r0, r4
 800ebb8:	b008      	add	sp, #32
 800ebba:	f85d bb04 	ldr.w	fp, [sp], #4
 800ebbe:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ebc0 <kfun:kotlinx.cinterop.CVariable.Type.<init>(kotlin.Long;kotlin.Int)kotlinx.cinterop.CVariable.Type>:
 800ebc0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ebc2:	af03      	add	r7, sp, #12
 800ebc4:	f84d 8d04 	str.w	r8, [sp, #-4]!
 800ebc8:	b08e      	sub	sp, #56	; 0x38
 800ebca:	4605      	mov	r5, r0
 800ebcc:	a808      	add	r0, sp, #32
 800ebce:	4616      	mov	r6, r2
 800ebd0:	2400      	movs	r4, #0
 800ebd2:	2101      	movs	r1, #1
 800ebd4:	2202      	movs	r2, #2
 800ebd6:	9404      	str	r4, [sp, #16]
 800ebd8:	4698      	mov	r8, r3
 800ebda:	e9cd 4402 	strd	r4, r4, [sp, #8]
 800ebde:	e9cd 4500 	strd	r4, r5, [sp]
 800ebe2:	e9cd 4508 	strd	r4, r5, [sp, #32]
 800ebe6:	f007 ff3e 	bl	8016a66 <LeaveFrame>
 800ebea:	68b8      	ldr	r0, [r7, #8]
 800ebec:	2101      	movs	r1, #1
 800ebee:	e9c5 6804 	strd	r6, r8, [r5, #16]
 800ebf2:	2202      	movs	r2, #2
 800ebf4:	60a8      	str	r0, [r5, #8]
 800ebf6:	a808      	add	r0, sp, #32
 800ebf8:	e9cd 4508 	strd	r4, r5, [sp, #32]
 800ebfc:	f007 ff33 	bl	8016a66 <LeaveFrame>
 800ec00:	a808      	add	r0, sp, #32
 800ec02:	e9cd 4508 	strd	r4, r5, [sp, #32]
 800ec06:	2101      	movs	r1, #1
 800ec08:	2202      	movs	r2, #2
 800ec0a:	68ad      	ldr	r5, [r5, #8]
 800ec0c:	f007 ff2b 	bl	8016a66 <LeaveFrame>
 800ec10:	4630      	mov	r0, r6
 800ec12:	4641      	mov	r1, r8
 800ec14:	462a      	mov	r2, r5
 800ec16:	f007 fff9 	bl	8016c0c <Kotlin_Long_mod_Int>
 800ec1a:	4308      	orrs	r0, r1
 800ec1c:	bf08      	it	eq
 800ec1e:	2401      	moveq	r4, #1
 800ec20:	4620      	mov	r0, r4
 800ec22:	f007 ff92 	bl	8016b4a <Kotlin_Boolean_not>
 800ec26:	07c0      	lsls	r0, r0, #31
 800ec28:	d108      	bne.n	800ec3c <kfun:kotlinx.cinterop.CVariable.Type.<init>(kotlin.Long;kotlin.Int)kotlinx.cinterop.CVariable.Type+0x7c>
 800ec2a:	4668      	mov	r0, sp
 800ec2c:	2101      	movs	r1, #1
 800ec2e:	2205      	movs	r2, #5
 800ec30:	f007 ff19 	bl	8016a66 <LeaveFrame>
 800ec34:	b00e      	add	sp, #56	; 0x38
 800ec36:	f85d 8b04 	ldr.w	r8, [sp], #4
 800ec3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ec3c:	466e      	mov	r6, sp
 800ec3e:	f242 3190 	movw	r1, #9104	; 0x2390
 800ec42:	f106 0008 	add.w	r0, r6, #8
 800ec46:	f2c2 0100 	movt	r1, #8192	; 0x2000
 800ec4a:	f106 040c 	add.w	r4, r6, #12
 800ec4e:	f005 fabf 	bl	80141d0 <UpdateRef>
 800ec52:	9802      	ldr	r0, [sp, #8]
 800ec54:	6801      	ldr	r1, [r0, #0]
 800ec56:	6c8a      	ldr	r2, [r1, #72]	; 0x48
 800ec58:	4621      	mov	r1, r4
 800ec5a:	4790      	blx	r2
 800ec5c:	4605      	mov	r5, r0
 800ec5e:	f241 6030 	movw	r0, #5680	; 0x1630
 800ec62:	f106 0110 	add.w	r1, r6, #16
 800ec66:	f6c0 0002 	movt	r0, #2050	; 0x802
 800ec6a:	f007 fe46 	bl	80168fa <AllocInstance>
 800ec6e:	4604      	mov	r4, r0
 800ec70:	4629      	mov	r1, r5
 800ec72:	2600      	movs	r6, #0
 800ec74:	9406      	str	r4, [sp, #24]
 800ec76:	9605      	str	r6, [sp, #20]
 800ec78:	e9cd 5607 	strd	r5, r6, [sp, #28]
 800ec7c:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
 800ec80:	f7fb fddb 	bl	800a83a <kfun:kotlin.Exception.<init>(kotlin.String?)kotlin.Exception>
 800ec84:	a80c      	add	r0, sp, #48	; 0x30
 800ec86:	2101      	movs	r1, #1
 800ec88:	2202      	movs	r2, #2
 800ec8a:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
 800ec8e:	f007 feea 	bl	8016a66 <LeaveFrame>
 800ec92:	a808      	add	r0, sp, #32
 800ec94:	2102      	movs	r1, #2
 800ec96:	2203      	movs	r2, #3
 800ec98:	f007 fee5 	bl	8016a66 <LeaveFrame>
 800ec9c:	a808      	add	r0, sp, #32
 800ec9e:	2101      	movs	r1, #1
 800eca0:	2202      	movs	r2, #2
 800eca2:	e9cd 6408 	strd	r6, r4, [sp, #32]
 800eca6:	f007 fede 	bl	8016a66 <LeaveFrame>
 800ecaa:	a805      	add	r0, sp, #20
 800ecac:	2102      	movs	r1, #2
 800ecae:	2203      	movs	r2, #3
 800ecb0:	f007 fed9 	bl	8016a66 <LeaveFrame>
 800ecb4:	4620      	mov	r0, r4
 800ecb6:	f006 f924 	bl	8014f02 <ThrowException>
 800ecba:	4604      	mov	r4, r0
 800ecbc:	4668      	mov	r0, sp
 800ecbe:	2101      	movs	r1, #1
 800ecc0:	2205      	movs	r2, #5
 800ecc2:	f007 fed0 	bl	8016a66 <LeaveFrame>
 800ecc6:	4620      	mov	r0, r4
 800ecc8:	f7f2 fa90 	bl	80011ec <_Unwind_Resume>

0800eccc <kfun:kotlinx.cinterop.ByteVarOf.Companion.<init>()kotlinx.cinterop.ByteVarOf.Companion>:
 800eccc:	b5b0      	push	{r4, r5, r7, lr}
 800ecce:	af02      	add	r7, sp, #8
 800ecd0:	b086      	sub	sp, #24
 800ecd2:	4604      	mov	r4, r0
 800ecd4:	2000      	movs	r0, #0
 800ecd6:	e9cd 0402 	strd	r0, r4, [sp, #8]
 800ecda:	2501      	movs	r5, #1
 800ecdc:	e9cd 0404 	strd	r0, r4, [sp, #16]
 800ece0:	2001      	movs	r0, #1
 800ece2:	f007 ff85 	bl	8016bf0 <Kotlin_Int_toLong>
 800ece6:	4602      	mov	r2, r0
 800ece8:	4620      	mov	r0, r4
 800ecea:	460b      	mov	r3, r1
 800ecec:	9500      	str	r5, [sp, #0]
 800ecee:	f7ff ff67 	bl	800ebc0 <kfun:kotlinx.cinterop.CVariable.Type.<init>(kotlin.Long;kotlin.Int)kotlinx.cinterop.CVariable.Type>
 800ecf2:	a804      	add	r0, sp, #16
 800ecf4:	2101      	movs	r1, #1
 800ecf6:	2202      	movs	r2, #2
 800ecf8:	f007 feb5 	bl	8016a66 <LeaveFrame>
 800ecfc:	a802      	add	r0, sp, #8
 800ecfe:	2101      	movs	r1, #1
 800ed00:	2202      	movs	r2, #2
 800ed02:	f007 feb0 	bl	8016a66 <LeaveFrame>
 800ed06:	b006      	add	sp, #24
 800ed08:	bdb0      	pop	{r4, r5, r7, pc}
 800ed0a:	4604      	mov	r4, r0
 800ed0c:	a804      	add	r0, sp, #16
 800ed0e:	2101      	movs	r1, #1
 800ed10:	2202      	movs	r2, #2
 800ed12:	f007 fea8 	bl	8016a66 <LeaveFrame>
 800ed16:	a802      	add	r0, sp, #8
 800ed18:	2101      	movs	r1, #1
 800ed1a:	2202      	movs	r2, #2
 800ed1c:	f007 fea3 	bl	8016a66 <LeaveFrame>
 800ed20:	4620      	mov	r0, r4
 800ed22:	f7f2 fa63 	bl	80011ec <_Unwind_Resume>

0800ed26 <kfun:konan.internal.KFunctionImpl.hashCode()ValueType>:
 800ed26:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ed28:	af03      	add	r7, sp, #12
 800ed2a:	f84d 8d04 	str.w	r8, [sp, #-4]!
 800ed2e:	b086      	sub	sp, #24
 800ed30:	2400      	movs	r4, #0
 800ed32:	46e8      	mov	r8, sp
 800ed34:	e9cd 4402 	strd	r4, r4, [sp, #8]
 800ed38:	e9cd 4000 	strd	r4, r0, [sp]
 800ed3c:	e9cd 4004 	strd	r4, r0, [sp, #16]
 800ed40:	6945      	ldr	r5, [r0, #20]
 800ed42:	f108 0008 	add.w	r0, r8, #8
 800ed46:	4629      	mov	r1, r5
 800ed48:	f005 fc4f 	bl	80145ea <UpdateReturnRef>
 800ed4c:	a804      	add	r0, sp, #16
 800ed4e:	2101      	movs	r1, #1
 800ed50:	2202      	movs	r2, #2
 800ed52:	f007 fe88 	bl	8016a66 <LeaveFrame>
 800ed56:	4628      	mov	r0, r5
 800ed58:	f006 fd30 	bl	80157bc <Kotlin_String_hashCode>
 800ed5c:	4605      	mov	r5, r0
 800ed5e:	9801      	ldr	r0, [sp, #4]
 800ed60:	2101      	movs	r1, #1
 800ed62:	2202      	movs	r2, #2
 800ed64:	e9cd 4004 	strd	r4, r0, [sp, #16]
 800ed68:	7c06      	ldrb	r6, [r0, #16]
 800ed6a:	a804      	add	r0, sp, #16
 800ed6c:	f007 fe7b 	bl	8016a66 <LeaveFrame>
 800ed70:	4628      	mov	r0, r5
 800ed72:	211f      	movs	r1, #31
 800ed74:	f007 ff2d 	bl	8016bd2 <Kotlin_Int_times_Int>
 800ed78:	4631      	mov	r1, r6
 800ed7a:	f007 ff13 	bl	8016ba4 <Kotlin_Int_plus_Int>
 800ed7e:	211f      	movs	r1, #31
 800ed80:	f007 ff27 	bl	8016bd2 <Kotlin_Int_times_Int>
 800ed84:	4605      	mov	r5, r0
 800ed86:	9801      	ldr	r0, [sp, #4]
 800ed88:	e9cd 4004 	strd	r4, r0, [sp, #16]
 800ed8c:	68c6      	ldr	r6, [r0, #12]
 800ed8e:	f108 000c 	add.w	r0, r8, #12
 800ed92:	4631      	mov	r1, r6
 800ed94:	f005 fc29 	bl	80145ea <UpdateReturnRef>
 800ed98:	a804      	add	r0, sp, #16
 800ed9a:	2101      	movs	r1, #1
 800ed9c:	2202      	movs	r2, #2
 800ed9e:	f007 fe62 	bl	8016a66 <LeaveFrame>
 800eda2:	2e00      	cmp	r6, #0
 800eda4:	e9cd 4604 	strd	r4, r6, [sp, #16]
 800eda8:	d004      	beq.n	800edb4 <kfun:konan.internal.KFunctionImpl.hashCode()ValueType+0x8e>
 800edaa:	6830      	ldr	r0, [r6, #0]
 800edac:	6c41      	ldr	r1, [r0, #68]	; 0x44
 800edae:	4630      	mov	r0, r6
 800edb0:	4788      	blx	r1
 800edb2:	4604      	mov	r4, r0
 800edb4:	a804      	add	r0, sp, #16
 800edb6:	2101      	movs	r1, #1
 800edb8:	2202      	movs	r2, #2
 800edba:	f007 fe54 	bl	8016a66 <LeaveFrame>
 800edbe:	4628      	mov	r0, r5
 800edc0:	4621      	mov	r1, r4
 800edc2:	f007 feef 	bl	8016ba4 <Kotlin_Int_plus_Int>
 800edc6:	4604      	mov	r4, r0
 800edc8:	4668      	mov	r0, sp
 800edca:	2101      	movs	r1, #1
 800edcc:	2204      	movs	r2, #4
 800edce:	f007 fe4a 	bl	8016a66 <LeaveFrame>
 800edd2:	4620      	mov	r0, r4
 800edd4:	b006      	add	sp, #24
 800edd6:	f85d 8b04 	ldr.w	r8, [sp], #4
 800edda:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eddc:	4604      	mov	r4, r0
 800edde:	a804      	add	r0, sp, #16
 800ede0:	2101      	movs	r1, #1
 800ede2:	2202      	movs	r2, #2
 800ede4:	f007 fe3f 	bl	8016a66 <LeaveFrame>
 800ede8:	4668      	mov	r0, sp
 800edea:	2101      	movs	r1, #1
 800edec:	2204      	movs	r2, #4
 800edee:	f007 fe3a 	bl	8016a66 <LeaveFrame>
 800edf2:	4620      	mov	r0, r4
 800edf4:	f7f2 f9fa 	bl	80011ec <_Unwind_Resume>

0800edf8 <kfun:konan.internal.KFunctionImpl.toString()kotlin.String>:
 800edf8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800edfa:	af03      	add	r7, sp, #12
 800edfc:	e92d 0700 	stmdb	sp!, {r8, r9, sl}
 800ee00:	b08c      	sub	sp, #48	; 0x30
 800ee02:	2400      	movs	r4, #0
 800ee04:	4688      	mov	r8, r1
 800ee06:	e9cd 4405 	strd	r4, r4, [sp, #20]
 800ee0a:	f10d 0a04 	add.w	sl, sp, #4
 800ee0e:	e9cd 4403 	strd	r4, r4, [sp, #12]
 800ee12:	9401      	str	r4, [sp, #4]
 800ee14:	9002      	str	r0, [sp, #8]
 800ee16:	6801      	ldr	r1, [r0, #0]
 800ee18:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800ee1a:	f10a 0108 	add.w	r1, sl, #8
 800ee1e:	4790      	blx	r2
 800ee20:	f242 4180 	movw	r1, #9344	; 0x2480
 800ee24:	9008      	str	r0, [sp, #32]
 800ee26:	f2c2 0100 	movt	r1, #8192	; 0x2000
 800ee2a:	2900      	cmp	r1, #0
 800ee2c:	9109      	str	r1, [sp, #36]	; 0x24
 800ee2e:	9407      	str	r4, [sp, #28]
 800ee30:	bf08      	it	eq
 800ee32:	2401      	moveq	r4, #1
 800ee34:	b138      	cbz	r0, 800ee46 <kfun:konan.internal.KFunctionImpl.toString()kotlin.String+0x4e>
 800ee36:	6801      	ldr	r1, [r0, #0]
 800ee38:	6cca      	ldr	r2, [r1, #76]	; 0x4c
 800ee3a:	f242 4180 	movw	r1, #9344	; 0x2480
 800ee3e:	f2c2 0100 	movt	r1, #8192	; 0x2000
 800ee42:	4790      	blx	r2
 800ee44:	4604      	mov	r4, r0
 800ee46:	ad07      	add	r5, sp, #28
 800ee48:	2102      	movs	r1, #2
 800ee4a:	2203      	movs	r2, #3
 800ee4c:	4628      	mov	r0, r5
 800ee4e:	f007 fe0a 	bl	8016a66 <LeaveFrame>
 800ee52:	07e0      	lsls	r0, r4, #31
 800ee54:	d006      	beq.n	800ee64 <kfun:konan.internal.KFunctionImpl.toString()kotlin.String+0x6c>
 800ee56:	f242 4430 	movw	r4, #9264	; 0x2430
 800ee5a:	f105 060c 	add.w	r6, r5, #12
 800ee5e:	f2c2 0400 	movt	r4, #8192	; 0x2000
 800ee62:	e029      	b.n	800eeb8 <kfun:konan.internal.KFunctionImpl.toString()kotlin.String+0xc0>
 800ee64:	9802      	ldr	r0, [sp, #8]
 800ee66:	f10a 010c 	add.w	r1, sl, #12
 800ee6a:	6802      	ldr	r2, [r0, #0]
 800ee6c:	6d12      	ldr	r2, [r2, #80]	; 0x50
 800ee6e:	4790      	blx	r2
 800ee70:	2100      	movs	r1, #0
 800ee72:	f105 060c 	add.w	r6, r5, #12
 800ee76:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 800ee7a:	9107      	str	r1, [sp, #28]
 800ee7c:	f242 4160 	movw	r1, #9312	; 0x2460
 800ee80:	f2c2 0100 	movt	r1, #8192	; 0x2000
 800ee84:	9108      	str	r1, [sp, #32]
 800ee86:	9009      	str	r0, [sp, #36]	; 0x24
 800ee88:	4631      	mov	r1, r6
 800ee8a:	f7fb fe22 	bl	800aad2 <kfun:kotlin.toString@kotlin.Any?.()kotlin.String>
 800ee8e:	4601      	mov	r1, r0
 800ee90:	f242 4060 	movw	r0, #9312	; 0x2460
 800ee94:	f105 0210 	add.w	r2, r5, #16
 800ee98:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800ee9c:	f10a 0910 	add.w	r9, sl, #16
 800eea0:	f006 f9c0 	bl	8015224 <Kotlin_String_plusImpl>
 800eea4:	4604      	mov	r4, r0
 800eea6:	4648      	mov	r0, r9
 800eea8:	4621      	mov	r1, r4
 800eeaa:	f005 fb9e 	bl	80145ea <UpdateReturnRef>
 800eeae:	4628      	mov	r0, r5
 800eeb0:	2102      	movs	r1, #2
 800eeb2:	2205      	movs	r2, #5
 800eeb4:	f007 fdd7 	bl	8016a66 <LeaveFrame>
 800eeb8:	2000      	movs	r0, #0
 800eeba:	e9c5 0000 	strd	r0, r0, [r5]
 800eebe:	e9c5 0002 	strd	r0, r0, [r5, #8]
 800eec2:	6128      	str	r0, [r5, #16]
 800eec4:	f242 30d0 	movw	r0, #9168	; 0x23d0
 800eec8:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800eecc:	9408      	str	r4, [sp, #32]
 800eece:	9009      	str	r0, [sp, #36]	; 0x24
 800eed0:	4631      	mov	r1, r6
 800eed2:	f7fb fdfe 	bl	800aad2 <kfun:kotlin.toString@kotlin.Any?.()kotlin.String>
 800eed6:	4601      	mov	r1, r0
 800eed8:	f105 0210 	add.w	r2, r5, #16
 800eedc:	4620      	mov	r0, r4
 800eede:	f10a 0614 	add.w	r6, sl, #20
 800eee2:	f006 f99f 	bl	8015224 <Kotlin_String_plusImpl>
 800eee6:	4604      	mov	r4, r0
 800eee8:	4630      	mov	r0, r6
 800eeea:	4621      	mov	r1, r4
 800eeec:	f005 fb7d 	bl	80145ea <UpdateReturnRef>
 800eef0:	4628      	mov	r0, r5
 800eef2:	2102      	movs	r1, #2
 800eef4:	2205      	movs	r2, #5
 800eef6:	f007 fdb6 	bl	8016a66 <LeaveFrame>
 800eefa:	4640      	mov	r0, r8
 800eefc:	4621      	mov	r1, r4
 800eefe:	f005 fb74 	bl	80145ea <UpdateReturnRef>
 800ef02:	a801      	add	r0, sp, #4
 800ef04:	2101      	movs	r1, #1
 800ef06:	2206      	movs	r2, #6
 800ef08:	f007 fdad 	bl	8016a66 <LeaveFrame>
 800ef0c:	4620      	mov	r0, r4
 800ef0e:	b00c      	add	sp, #48	; 0x30
 800ef10:	e8bd 0700 	ldmia.w	sp!, {r8, r9, sl}
 800ef14:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ef16:	4604      	mov	r4, r0
 800ef18:	a807      	add	r0, sp, #28
 800ef1a:	e008      	b.n	800ef2e <kfun:konan.internal.KFunctionImpl.toString()kotlin.String+0x136>
 800ef1c:	4604      	mov	r4, r0
 800ef1e:	a807      	add	r0, sp, #28
 800ef20:	2102      	movs	r1, #2
 800ef22:	2203      	movs	r2, #3
 800ef24:	f007 fd9f 	bl	8016a66 <LeaveFrame>
 800ef28:	e007      	b.n	800ef3a <kfun:konan.internal.KFunctionImpl.toString()kotlin.String+0x142>
 800ef2a:	4604      	mov	r4, r0
 800ef2c:	4628      	mov	r0, r5
 800ef2e:	2102      	movs	r1, #2
 800ef30:	2205      	movs	r2, #5
 800ef32:	f007 fd98 	bl	8016a66 <LeaveFrame>
 800ef36:	e000      	b.n	800ef3a <kfun:konan.internal.KFunctionImpl.toString()kotlin.String+0x142>
 800ef38:	4604      	mov	r4, r0
 800ef3a:	a801      	add	r0, sp, #4
 800ef3c:	2101      	movs	r1, #1
 800ef3e:	2206      	movs	r2, #6
 800ef40:	f007 fd91 	bl	8016a66 <LeaveFrame>
 800ef44:	4620      	mov	r0, r4
 800ef46:	f7f2 f951 	bl	80011ec <_Unwind_Resume>

0800ef4a <kfun:konan.internal.KFunctionImpl.equals(kotlin.Any?)ValueType>:
 800ef4a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ef4c:	af03      	add	r7, sp, #12
 800ef4e:	e92d 0b00 	stmdb	sp!, {r8, r9, fp}
 800ef52:	b08c      	sub	sp, #48	; 0x30
 800ef54:	2400      	movs	r4, #0
 800ef56:	4605      	mov	r5, r0
 800ef58:	2900      	cmp	r1, #0
 800ef5a:	9407      	str	r4, [sp, #28]
 800ef5c:	e9cd 4405 	strd	r4, r4, [sp, #20]
 800ef60:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800ef64:	e9cd 1403 	strd	r1, r4, [sp, #12]
 800ef68:	f000 808a 	beq.w	800f080 <kfun:konan.internal.KFunctionImpl.equals(kotlin.Any?)ValueType+0x136>
 800ef6c:	f643 02e0 	movw	r2, #14560	; 0x38e0
 800ef70:	4608      	mov	r0, r1
 800ef72:	f6c0 0202 	movt	r2, #2050	; 0x802
 800ef76:	4611      	mov	r1, r2
 800ef78:	f005 fffe 	bl	8014f78 <IsInstance>
 800ef7c:	07c0      	lsls	r0, r0, #31
 800ef7e:	f04f 0400 	mov.w	r4, #0
 800ef82:	d07d      	beq.n	800f080 <kfun:konan.internal.KFunctionImpl.equals(kotlin.Any?)ValueType+0x136>
 800ef84:	e9cd 4508 	strd	r4, r5, [sp, #32]
 800ef88:	f10d 0904 	add.w	r9, sp, #4
 800ef8c:	696d      	ldr	r5, [r5, #20]
 800ef8e:	f109 000c 	add.w	r0, r9, #12
 800ef92:	f109 0810 	add.w	r8, r9, #16
 800ef96:	4629      	mov	r1, r5
 800ef98:	f005 fb27 	bl	80145ea <UpdateReturnRef>
 800ef9c:	a808      	add	r0, sp, #32
 800ef9e:	2101      	movs	r1, #1
 800efa0:	2202      	movs	r2, #2
 800efa2:	f007 fd60 	bl	8016a66 <LeaveFrame>
 800efa6:	9803      	ldr	r0, [sp, #12]
 800efa8:	e9cd 4008 	strd	r4, r0, [sp, #32]
 800efac:	6946      	ldr	r6, [r0, #20]
 800efae:	4640      	mov	r0, r8
 800efb0:	4631      	mov	r1, r6
 800efb2:	f005 fb1a 	bl	80145ea <UpdateReturnRef>
 800efb6:	a808      	add	r0, sp, #32
 800efb8:	2101      	movs	r1, #1
 800efba:	2202      	movs	r2, #2
 800efbc:	f007 fd53 	bl	8016a66 <LeaveFrame>
 800efc0:	a808      	add	r0, sp, #32
 800efc2:	2d00      	cmp	r5, #0
 800efc4:	c070      	stmia	r0!, {r4, r5, r6}
 800efc6:	d049      	beq.n	800f05c <kfun:konan.internal.KFunctionImpl.equals(kotlin.Any?)ValueType+0x112>
 800efc8:	6828      	ldr	r0, [r5, #0]
 800efca:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 800efcc:	4628      	mov	r0, r5
 800efce:	4631      	mov	r1, r6
 800efd0:	4790      	blx	r2
 800efd2:	4604      	mov	r4, r0
 800efd4:	a808      	add	r0, sp, #32
 800efd6:	2102      	movs	r1, #2
 800efd8:	2203      	movs	r2, #3
 800efda:	f007 fd44 	bl	8016a66 <LeaveFrame>
 800efde:	07e0      	lsls	r0, r4, #31
 800efe0:	d043      	beq.n	800f06a <kfun:konan.internal.KFunctionImpl.equals(kotlin.Any?)ValueType+0x120>
 800efe2:	9802      	ldr	r0, [sp, #8]
 800efe4:	2400      	movs	r4, #0
 800efe6:	2101      	movs	r1, #1
 800efe8:	2202      	movs	r2, #2
 800efea:	e9cd 4008 	strd	r4, r0, [sp, #32]
 800efee:	7c05      	ldrb	r5, [r0, #16]
 800eff0:	a808      	add	r0, sp, #32
 800eff2:	f007 fd38 	bl	8016a66 <LeaveFrame>
 800eff6:	9803      	ldr	r0, [sp, #12]
 800eff8:	2101      	movs	r1, #1
 800effa:	2202      	movs	r2, #2
 800effc:	e9cd 4008 	strd	r4, r0, [sp, #32]
 800f000:	7c06      	ldrb	r6, [r0, #16]
 800f002:	a808      	add	r0, sp, #32
 800f004:	f007 fd2f 	bl	8016a66 <LeaveFrame>
 800f008:	42b5      	cmp	r5, r6
 800f00a:	d139      	bne.n	800f080 <kfun:konan.internal.KFunctionImpl.equals(kotlin.Any?)ValueType+0x136>
 800f00c:	9902      	ldr	r1, [sp, #8]
 800f00e:	f109 0014 	add.w	r0, r9, #20
 800f012:	f109 0818 	add.w	r8, r9, #24
 800f016:	e9cd 4108 	strd	r4, r1, [sp, #32]
 800f01a:	68cd      	ldr	r5, [r1, #12]
 800f01c:	4629      	mov	r1, r5
 800f01e:	f005 fae4 	bl	80145ea <UpdateReturnRef>
 800f022:	a808      	add	r0, sp, #32
 800f024:	2101      	movs	r1, #1
 800f026:	2202      	movs	r2, #2
 800f028:	f007 fd1d 	bl	8016a66 <LeaveFrame>
 800f02c:	9803      	ldr	r0, [sp, #12]
 800f02e:	e9cd 4008 	strd	r4, r0, [sp, #32]
 800f032:	68c6      	ldr	r6, [r0, #12]
 800f034:	4640      	mov	r0, r8
 800f036:	4631      	mov	r1, r6
 800f038:	f005 fad7 	bl	80145ea <UpdateReturnRef>
 800f03c:	a808      	add	r0, sp, #32
 800f03e:	2101      	movs	r1, #1
 800f040:	2202      	movs	r2, #2
 800f042:	f007 fd10 	bl	8016a66 <LeaveFrame>
 800f046:	a808      	add	r0, sp, #32
 800f048:	2d00      	cmp	r5, #0
 800f04a:	c070      	stmia	r0!, {r4, r5, r6}
 800f04c:	d00f      	beq.n	800f06e <kfun:konan.internal.KFunctionImpl.equals(kotlin.Any?)ValueType+0x124>
 800f04e:	6828      	ldr	r0, [r5, #0]
 800f050:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 800f052:	4628      	mov	r0, r5
 800f054:	4631      	mov	r1, r6
 800f056:	4790      	blx	r2
 800f058:	4604      	mov	r4, r0
 800f05a:	e00c      	b.n	800f076 <kfun:konan.internal.KFunctionImpl.equals(kotlin.Any?)ValueType+0x12c>
 800f05c:	a808      	add	r0, sp, #32
 800f05e:	2102      	movs	r1, #2
 800f060:	2203      	movs	r2, #3
 800f062:	f007 fd00 	bl	8016a66 <LeaveFrame>
 800f066:	2e00      	cmp	r6, #0
 800f068:	d0bb      	beq.n	800efe2 <kfun:konan.internal.KFunctionImpl.equals(kotlin.Any?)ValueType+0x98>
 800f06a:	2400      	movs	r4, #0
 800f06c:	e008      	b.n	800f080 <kfun:konan.internal.KFunctionImpl.equals(kotlin.Any?)ValueType+0x136>
 800f06e:	2400      	movs	r4, #0
 800f070:	2e00      	cmp	r6, #0
 800f072:	bf08      	it	eq
 800f074:	2401      	moveq	r4, #1
 800f076:	a808      	add	r0, sp, #32
 800f078:	2102      	movs	r1, #2
 800f07a:	2203      	movs	r2, #3
 800f07c:	f007 fcf3 	bl	8016a66 <LeaveFrame>
 800f080:	a801      	add	r0, sp, #4
 800f082:	2102      	movs	r1, #2
 800f084:	2207      	movs	r2, #7
 800f086:	f007 fcee 	bl	8016a66 <LeaveFrame>
 800f08a:	4620      	mov	r0, r4
 800f08c:	b00c      	add	sp, #48	; 0x30
 800f08e:	e8bd 0b00 	ldmia.w	sp!, {r8, r9, fp}
 800f092:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f094:	e7ff      	b.n	800f096 <kfun:konan.internal.KFunctionImpl.equals(kotlin.Any?)ValueType+0x14c>
 800f096:	4604      	mov	r4, r0
 800f098:	a808      	add	r0, sp, #32
 800f09a:	2102      	movs	r1, #2
 800f09c:	2203      	movs	r2, #3
 800f09e:	f007 fce2 	bl	8016a66 <LeaveFrame>
 800f0a2:	a801      	add	r0, sp, #4
 800f0a4:	2102      	movs	r1, #2
 800f0a6:	2207      	movs	r2, #7
 800f0a8:	f007 fcdd 	bl	8016a66 <LeaveFrame>
 800f0ac:	4620      	mov	r0, r4
 800f0ae:	f7f2 f89d 	bl	80011ec <_Unwind_Resume>

0800f0b2 <kfun:konan.internal.KFunctionImpl.<get-name>()kotlin.String>:
 800f0b2:	b5d0      	push	{r4, r6, r7, lr}
 800f0b4:	af02      	add	r7, sp, #8
 800f0b6:	b082      	sub	sp, #8
 800f0b8:	2200      	movs	r2, #0
 800f0ba:	e9cd 2000 	strd	r2, r0, [sp]
 800f0be:	6884      	ldr	r4, [r0, #8]
 800f0c0:	4608      	mov	r0, r1
 800f0c2:	4621      	mov	r1, r4
 800f0c4:	f005 fa91 	bl	80145ea <UpdateReturnRef>
 800f0c8:	4668      	mov	r0, sp
 800f0ca:	2101      	movs	r1, #1
 800f0cc:	2202      	movs	r2, #2
 800f0ce:	f007 fcca 	bl	8016a66 <LeaveFrame>
 800f0d2:	4620      	mov	r0, r4
 800f0d4:	b002      	add	sp, #8
 800f0d6:	bdd0      	pop	{r4, r6, r7, pc}

0800f0d8 <kfun:kotlinx.cinterop.nativeMemUtils.putByteArray(kotlin.ByteArray;kotlinx.cinterop.NativePointed;kotlin.Int)>:
 800f0d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f0da:	af03      	add	r7, sp, #12
 800f0dc:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 800f0e0:	b08b      	sub	sp, #44	; 0x2c
 800f0e2:	4615      	mov	r5, r2
 800f0e4:	460e      	mov	r6, r1
 800f0e6:	2100      	movs	r1, #0
 800f0e8:	461c      	mov	r4, r3
 800f0ea:	2d00      	cmp	r5, #0
 800f0ec:	e9cd 1106 	strd	r1, r1, [sp, #24]
 800f0f0:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800f0f4:	e9cd 6104 	strd	r6, r1, [sp, #16]
 800f0f8:	d04b      	beq.n	800f192 <kfun:kotlinx.cinterop.nativeMemUtils.putByteArray(kotlin.ByteArray;kotlinx.cinterop.NativePointed;kotlin.Int)+0xba>
 800f0fa:	a808      	add	r0, sp, #32
 800f0fc:	e9cd 1108 	strd	r1, r1, [sp, #32]
 800f100:	2100      	movs	r1, #0
 800f102:	2202      	movs	r2, #2
 800f104:	f007 fcaf 	bl	8016a66 <LeaveFrame>
 800f108:	2c01      	cmp	r4, #1
 800f10a:	db39      	blt.n	800f180 <kfun:kotlinx.cinterop.nativeMemUtils.putByteArray(kotlin.ByteArray;kotlinx.cinterop.NativePointed;kotlin.Int)+0xa8>
 800f10c:	a808      	add	r0, sp, #32
 800f10e:	f04f 0800 	mov.w	r8, #0
 800f112:	f04f 0b00 	mov.w	fp, #0
 800f116:	f040 0004 	orr.w	r0, r0, #4
 800f11a:	9001      	str	r0, [sp, #4]
 800f11c:	4630      	mov	r0, r6
 800f11e:	4659      	mov	r1, fp
 800f120:	f005 fbb9 	bl	8014896 <Kotlin_ByteArray_get>
 800f124:	4681      	mov	r9, r0
 800f126:	4658      	mov	r0, fp
 800f128:	f007 fd62 	bl	8016bf0 <Kotlin_Int_toLong>
 800f12c:	2201      	movs	r2, #1
 800f12e:	f007 fd75 	bl	8016c1c <Kotlin_Long_times_Int>
 800f132:	eb15 0a00 	adds.w	sl, r5, r0
 800f136:	d02c      	beq.n	800f192 <kfun:kotlinx.cinterop.nativeMemUtils.putByteArray(kotlin.ByteArray;kotlinx.cinterop.NativePointed;kotlin.Int)+0xba>
 800f138:	f240 0038 	movw	r0, #56	; 0x38
 800f13c:	e9cd 8808 	strd	r8, r8, [sp, #32]
 800f140:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800f144:	6800      	ldr	r0, [r0, #0]
 800f146:	b970      	cbnz	r0, 800f166 <kfun:kotlinx.cinterop.nativeMemUtils.putByteArray(kotlin.ByteArray;kotlinx.cinterop.NativePointed;kotlin.Int)+0x8e>
 800f148:	9b01      	ldr	r3, [sp, #4]
 800f14a:	f240 0038 	movw	r0, #56	; 0x38
 800f14e:	f243 1130 	movw	r1, #12592	; 0x3130
 800f152:	f64d 221b 	movw	r2, #55835	; 0xda1b
 800f156:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800f15a:	f6c0 0102 	movt	r1, #2050	; 0x802
 800f15e:	f6c0 0200 	movt	r2, #2048	; 0x800
 800f162:	f007 fc32 	bl	80169ca <InitInstance>
 800f166:	a808      	add	r0, sp, #32
 800f168:	2100      	movs	r1, #0
 800f16a:	2202      	movs	r2, #2
 800f16c:	f88a 9000 	strb.w	r9, [sl]
 800f170:	f007 fc79 	bl	8016a66 <LeaveFrame>
 800f174:	4658      	mov	r0, fp
 800f176:	f007 fd2e 	bl	8016bd6 <Kotlin_Int_inc>
 800f17a:	4683      	mov	fp, r0
 800f17c:	45a3      	cmp	fp, r4
 800f17e:	dbcd      	blt.n	800f11c <kfun:kotlinx.cinterop.nativeMemUtils.putByteArray(kotlin.ByteArray;kotlinx.cinterop.NativePointed;kotlin.Int)+0x44>
 800f180:	a802      	add	r0, sp, #8
 800f182:	2102      	movs	r1, #2
 800f184:	2206      	movs	r2, #6
 800f186:	f007 fc6e 	bl	8016a66 <LeaveFrame>
 800f18a:	b00b      	add	sp, #44	; 0x2c
 800f18c:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 800f190:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f192:	f7fd fc0b 	bl	800c9ac <ThrowNullPointerException>

0800f196 <kfun:kotlinx.cinterop.<get-cstr>@kotlin.String.()kotlinx.cinterop.CValues<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>>:
 800f196:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f198:	af03      	add	r7, sp, #12
 800f19a:	e92d 0700 	stmdb	sp!, {r8, r9, sl}
 800f19e:	b090      	sub	sp, #64	; 0x40
 800f1a0:	f10d 091c 	add.w	r9, sp, #28
 800f1a4:	4688      	mov	r8, r1
 800f1a6:	2600      	movs	r6, #0
 800f1a8:	f109 0108 	add.w	r1, r9, #8
 800f1ac:	e9cd 6604 	strd	r6, r6, [sp, #16]
 800f1b0:	2200      	movs	r2, #0
 800f1b2:	e9cd 6002 	strd	r6, r0, [sp, #8]
 800f1b6:	2303      	movs	r3, #3
 800f1b8:	e9cd 6606 	strd	r6, r6, [sp, #24]
 800f1bc:	e9cd 0608 	strd	r0, r6, [sp, #32]
 800f1c0:	9100      	str	r1, [sp, #0]
 800f1c2:	2100      	movs	r1, #0
 800f1c4:	f000 f966 	bl	800f494 <kfun:kotlin.text.toUtf8$default@kotlin.String.(kotlin.Int;kotlin.Int;kotlin.Int)kotlin.ByteArray>
 800f1c8:	f10d 0a08 	add.w	sl, sp, #8
 800f1cc:	4604      	mov	r4, r0
 800f1ce:	f10a 0008 	add.w	r0, sl, #8
 800f1d2:	4621      	mov	r1, r4
 800f1d4:	f005 fa09 	bl	80145ea <UpdateReturnRef>
 800f1d8:	4648      	mov	r0, r9
 800f1da:	2101      	movs	r1, #1
 800f1dc:	2203      	movs	r2, #3
 800f1de:	f007 fc42 	bl	8016a66 <LeaveFrame>
 800f1e2:	f10a 000c 	add.w	r0, sl, #12
 800f1e6:	4621      	mov	r1, r4
 800f1e8:	f004 fff2 	bl	80141d0 <UpdateRef>
 800f1ec:	f643 30b0 	movw	r0, #15280	; 0x3bb0
 800f1f0:	f10a 0110 	add.w	r1, sl, #16
 800f1f4:	f6c0 0002 	movt	r0, #2050	; 0x802
 800f1f8:	9d05      	ldr	r5, [sp, #20]
 800f1fa:	f007 fb7e 	bl	80168fa <AllocInstance>
 800f1fe:	4604      	mov	r4, r0
 800f200:	f104 0008 	add.w	r0, r4, #8
 800f204:	4629      	mov	r1, r5
 800f206:	e9cd 6407 	strd	r6, r4, [sp, #28]
 800f20a:	9509      	str	r5, [sp, #36]	; 0x24
 800f20c:	f004 ffe0 	bl	80141d0 <UpdateRef>
 800f210:	a80e      	add	r0, sp, #56	; 0x38
 800f212:	2101      	movs	r1, #1
 800f214:	2202      	movs	r2, #2
 800f216:	e9cd 640a 	strd	r6, r4, [sp, #40]	; 0x28
 800f21a:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
 800f21e:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
 800f222:	f007 fc20 	bl	8016a66 <LeaveFrame>
 800f226:	a80c      	add	r0, sp, #48	; 0x30
 800f228:	2101      	movs	r1, #1
 800f22a:	2202      	movs	r2, #2
 800f22c:	f007 fc1b 	bl	8016a66 <LeaveFrame>
 800f230:	a80a      	add	r0, sp, #40	; 0x28
 800f232:	2101      	movs	r1, #1
 800f234:	2202      	movs	r2, #2
 800f236:	f007 fc16 	bl	8016a66 <LeaveFrame>
 800f23a:	4648      	mov	r0, r9
 800f23c:	2102      	movs	r1, #2
 800f23e:	2203      	movs	r2, #3
 800f240:	f007 fc11 	bl	8016a66 <LeaveFrame>
 800f244:	4640      	mov	r0, r8
 800f246:	4621      	mov	r1, r4
 800f248:	f005 f9cf 	bl	80145ea <UpdateReturnRef>
 800f24c:	4650      	mov	r0, sl
 800f24e:	2101      	movs	r1, #1
 800f250:	2205      	movs	r2, #5
 800f252:	f007 fc08 	bl	8016a66 <LeaveFrame>
 800f256:	4620      	mov	r0, r4
 800f258:	b010      	add	sp, #64	; 0x40
 800f25a:	e8bd 0700 	ldmia.w	sp!, {r8, r9, sl}
 800f25e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f260 <kfun:kotlinx.cinterop.<get-cstr>.object-1.getPointer#internal>:
 800f260:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f262:	af03      	add	r7, sp, #12
 800f264:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 800f268:	b08f      	sub	sp, #60	; 0x3c
 800f26a:	f10d 0808 	add.w	r8, sp, #8
 800f26e:	4689      	mov	r9, r1
 800f270:	4604      	mov	r4, r0
 800f272:	2128      	movs	r1, #40	; 0x28
 800f274:	4640      	mov	r0, r8
 800f276:	f00c f93f 	bl	801b4f8 <__aeabi_memclr>
 800f27a:	e9cd 4903 	strd	r4, r9, [sp, #12]
 800f27e:	2500      	movs	r5, #0
 800f280:	68a0      	ldr	r0, [r4, #8]
 800f282:	e9cd 500c 	strd	r5, r0, [sp, #48]	; 0x30
 800f286:	f005 fb1d 	bl	80148c4 <Kotlin_ByteArray_getArrayLength>
 800f28a:	4604      	mov	r4, r0
 800f28c:	a80c      	add	r0, sp, #48	; 0x30
 800f28e:	2101      	movs	r1, #1
 800f290:	2202      	movs	r2, #2
 800f292:	f007 fbe8 	bl	8016a66 <LeaveFrame>
 800f296:	4620      	mov	r0, r4
 800f298:	2101      	movs	r1, #1
 800f29a:	f007 fc83 	bl	8016ba4 <Kotlin_Int_plus_Int>
 800f29e:	f007 fca7 	bl	8016bf0 <Kotlin_Int_toLong>
 800f2a2:	f240 0b18 	movw	fp, #24
 800f2a6:	4682      	mov	sl, r0
 800f2a8:	f2c2 0b00 	movt	fp, #8192	; 0x2000
 800f2ac:	460e      	mov	r6, r1
 800f2ae:	f8db 0000 	ldr.w	r0, [fp]
 800f2b2:	b978      	cbnz	r0, 800f2d4 <kfun:kotlinx.cinterop.<get-cstr>.object-1.getPointer#internal+0x74>
 800f2b4:	f240 0018 	movw	r0, #24
 800f2b8:	f643 2170 	movw	r1, #14960	; 0x3a70
 800f2bc:	f64e 42cd 	movw	r2, #60621	; 0xeccd
 800f2c0:	f108 030c 	add.w	r3, r8, #12
 800f2c4:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800f2c8:	f6c0 0102 	movt	r1, #2050	; 0x802
 800f2cc:	f6c0 0200 	movt	r2, #2048	; 0x800
 800f2d0:	f007 fb7b 	bl	80169ca <InitInstance>
 800f2d4:	e9cd 500c 	strd	r5, r0, [sp, #48]	; 0x30
 800f2d8:	2101      	movs	r1, #1
 800f2da:	e9d0 5404 	ldrd	r5, r4, [r0, #16]
 800f2de:	a80c      	add	r0, sp, #48	; 0x30
 800f2e0:	2202      	movs	r2, #2
 800f2e2:	f007 fbc0 	bl	8016a66 <LeaveFrame>
 800f2e6:	4628      	mov	r0, r5
 800f2e8:	4621      	mov	r1, r4
 800f2ea:	4652      	mov	r2, sl
 800f2ec:	4633      	mov	r3, r6
 800f2ee:	f007 fc9e 	bl	8016c2e <Kotlin_Long_times_Long>
 800f2f2:	4606      	mov	r6, r0
 800f2f4:	f8db 0000 	ldr.w	r0, [fp]
 800f2f8:	460c      	mov	r4, r1
 800f2fa:	b978      	cbnz	r0, 800f31c <kfun:kotlinx.cinterop.<get-cstr>.object-1.getPointer#internal+0xbc>
 800f2fc:	f240 0018 	movw	r0, #24
 800f300:	f643 2170 	movw	r1, #14960	; 0x3a70
 800f304:	f64e 42cd 	movw	r2, #60621	; 0xeccd
 800f308:	f108 0310 	add.w	r3, r8, #16
 800f30c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800f310:	f6c0 0102 	movt	r1, #2050	; 0x802
 800f314:	f6c0 0200 	movt	r2, #2048	; 0x800
 800f318:	f007 fb57 	bl	80169ca <InitInstance>
 800f31c:	2100      	movs	r1, #0
 800f31e:	2202      	movs	r2, #2
 800f320:	e9cd 100c 	strd	r1, r0, [sp, #48]	; 0x30
 800f324:	2101      	movs	r1, #1
 800f326:	6885      	ldr	r5, [r0, #8]
 800f328:	a80c      	add	r0, sp, #48	; 0x30
 800f32a:	f007 fb9c 	bl	8016a66 <LeaveFrame>
 800f32e:	f8d9 0000 	ldr.w	r0, [r9]
 800f332:	f641 329d 	movw	r2, #7069	; 0x1b9d
 800f336:	f64d 33b1 	movw	r3, #56241	; 0xdbb1
 800f33a:	f2cc 02a8 	movt	r2, #49320	; 0xc0a8
 800f33e:	f6c3 33d6 	movt	r3, #15318	; 0x3bd6
 800f342:	f007 fd51 	bl	8016de8 <LookupOpenMethod>
 800f346:	4601      	mov	r1, r0
 800f348:	4648      	mov	r0, r9
 800f34a:	4632      	mov	r2, r6
 800f34c:	4623      	mov	r3, r4
 800f34e:	9500      	str	r5, [sp, #0]
 800f350:	4788      	blx	r1
 800f352:	4681      	mov	r9, r0
 800f354:	f1b9 0f00 	cmp.w	r9, #0
 800f358:	d073      	beq.n	800f442 <kfun:kotlinx.cinterop.<get-cstr>.object-1.getPointer#internal+0x1e2>
 800f35a:	a80c      	add	r0, sp, #48	; 0x30
 800f35c:	f04f 0b00 	mov.w	fp, #0
 800f360:	2100      	movs	r1, #0
 800f362:	2202      	movs	r2, #2
 800f364:	e9cd bb0c 	strd	fp, fp, [sp, #48]	; 0x30
 800f368:	f007 fb7d 	bl	8016a66 <LeaveFrame>
 800f36c:	f240 0a38 	movw	sl, #56	; 0x38
 800f370:	f2c2 0a00 	movt	sl, #8192	; 0x2000
 800f374:	f8da 4000 	ldr.w	r4, [sl]
 800f378:	b984      	cbnz	r4, 800f39c <kfun:kotlinx.cinterop.<get-cstr>.object-1.getPointer#internal+0x13c>
 800f37a:	f240 0038 	movw	r0, #56	; 0x38
 800f37e:	f243 1130 	movw	r1, #12592	; 0x3130
 800f382:	f64d 221b 	movw	r2, #55835	; 0xda1b
 800f386:	f108 0318 	add.w	r3, r8, #24
 800f38a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800f38e:	f6c0 0102 	movt	r1, #2050	; 0x802
 800f392:	f6c0 0200 	movt	r2, #2048	; 0x800
 800f396:	f007 fb18 	bl	80169ca <InitInstance>
 800f39a:	4604      	mov	r4, r0
 800f39c:	9803      	ldr	r0, [sp, #12]
 800f39e:	6886      	ldr	r6, [r0, #8]
 800f3a0:	4630      	mov	r0, r6
 800f3a2:	e9cd b60c 	strd	fp, r6, [sp, #48]	; 0x30
 800f3a6:	f005 fa8d 	bl	80148c4 <Kotlin_ByteArray_getArrayLength>
 800f3aa:	4605      	mov	r5, r0
 800f3ac:	a80c      	add	r0, sp, #48	; 0x30
 800f3ae:	2101      	movs	r1, #1
 800f3b0:	2202      	movs	r2, #2
 800f3b2:	f007 fb58 	bl	8016a66 <LeaveFrame>
 800f3b6:	4620      	mov	r0, r4
 800f3b8:	4631      	mov	r1, r6
 800f3ba:	464a      	mov	r2, r9
 800f3bc:	462b      	mov	r3, r5
 800f3be:	f7ff fe8b 	bl	800f0d8 <kfun:kotlinx.cinterop.nativeMemUtils.putByteArray(kotlin.ByteArray;kotlinx.cinterop.NativePointed;kotlin.Int)>
 800f3c2:	9803      	ldr	r0, [sp, #12]
 800f3c4:	6880      	ldr	r0, [r0, #8]
 800f3c6:	e9cd b00c 	strd	fp, r0, [sp, #48]	; 0x30
 800f3ca:	f005 fa7b 	bl	80148c4 <Kotlin_ByteArray_getArrayLength>
 800f3ce:	ae0c      	add	r6, sp, #48	; 0x30
 800f3d0:	4605      	mov	r5, r0
 800f3d2:	2101      	movs	r1, #1
 800f3d4:	2202      	movs	r2, #2
 800f3d6:	4630      	mov	r0, r6
 800f3d8:	f007 fb45 	bl	8016a66 <LeaveFrame>
 800f3dc:	2000      	movs	r0, #0
 800f3de:	f007 fc00 	bl	8016be2 <Kotlin_Int_toByte>
 800f3e2:	4604      	mov	r4, r0
 800f3e4:	4628      	mov	r0, r5
 800f3e6:	f007 fc03 	bl	8016bf0 <Kotlin_Int_toLong>
 800f3ea:	2201      	movs	r2, #1
 800f3ec:	f007 fc16 	bl	8016c1c <Kotlin_Long_times_Int>
 800f3f0:	eb19 0500 	adds.w	r5, r9, r0
 800f3f4:	d025      	beq.n	800f442 <kfun:kotlinx.cinterop.<get-cstr>.object-1.getPointer#internal+0x1e2>
 800f3f6:	2000      	movs	r0, #0
 800f3f8:	e9cd 000c 	strd	r0, r0, [sp, #48]	; 0x30
 800f3fc:	f8da 0000 	ldr.w	r0, [sl]
 800f400:	b978      	cbnz	r0, 800f422 <kfun:kotlinx.cinterop.<get-cstr>.object-1.getPointer#internal+0x1c2>
 800f402:	f240 0038 	movw	r0, #56	; 0x38
 800f406:	f243 1130 	movw	r1, #12592	; 0x3130
 800f40a:	f64d 221b 	movw	r2, #55835	; 0xda1b
 800f40e:	f046 0304 	orr.w	r3, r6, #4
 800f412:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800f416:	f6c0 0102 	movt	r1, #2050	; 0x802
 800f41a:	f6c0 0200 	movt	r2, #2048	; 0x800
 800f41e:	f007 fad4 	bl	80169ca <InitInstance>
 800f422:	a80c      	add	r0, sp, #48	; 0x30
 800f424:	2100      	movs	r1, #0
 800f426:	2202      	movs	r2, #2
 800f428:	702c      	strb	r4, [r5, #0]
 800f42a:	f007 fb1c 	bl	8016a66 <LeaveFrame>
 800f42e:	a802      	add	r0, sp, #8
 800f430:	2102      	movs	r1, #2
 800f432:	220a      	movs	r2, #10
 800f434:	f007 fb17 	bl	8016a66 <LeaveFrame>
 800f438:	4648      	mov	r0, r9
 800f43a:	b00f      	add	sp, #60	; 0x3c
 800f43c:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 800f440:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f442:	f7fd fab3 	bl	800c9ac <ThrowNullPointerException>
 800f446:	4604      	mov	r4, r0
 800f448:	a802      	add	r0, sp, #8
 800f44a:	2102      	movs	r1, #2
 800f44c:	220a      	movs	r2, #10
 800f44e:	f007 fb0a 	bl	8016a66 <LeaveFrame>
 800f452:	4620      	mov	r0, r4
 800f454:	f7f1 feca 	bl	80011ec <_Unwind_Resume>

0800f458 <kfun:kotlinx.cinterop.<get-cstr>.object-1.<get-size>#internal>:
 800f458:	b5d0      	push	{r4, r6, r7, lr}
 800f45a:	af02      	add	r7, sp, #8
 800f45c:	b084      	sub	sp, #16
 800f45e:	2100      	movs	r1, #0
 800f460:	e9cd 1000 	strd	r1, r0, [sp]
 800f464:	6880      	ldr	r0, [r0, #8]
 800f466:	e9cd 1002 	strd	r1, r0, [sp, #8]
 800f46a:	f005 fa2b 	bl	80148c4 <Kotlin_ByteArray_getArrayLength>
 800f46e:	4604      	mov	r4, r0
 800f470:	a802      	add	r0, sp, #8
 800f472:	2101      	movs	r1, #1
 800f474:	2202      	movs	r2, #2
 800f476:	f007 faf6 	bl	8016a66 <LeaveFrame>
 800f47a:	4620      	mov	r0, r4
 800f47c:	2101      	movs	r1, #1
 800f47e:	f007 fb91 	bl	8016ba4 <Kotlin_Int_plus_Int>
 800f482:	4604      	mov	r4, r0
 800f484:	4668      	mov	r0, sp
 800f486:	2101      	movs	r1, #1
 800f488:	2202      	movs	r2, #2
 800f48a:	f007 faec 	bl	8016a66 <LeaveFrame>
 800f48e:	4620      	mov	r0, r4
 800f490:	b004      	add	sp, #16
 800f492:	bdd0      	pop	{r4, r6, r7, pc}

0800f494 <kfun:kotlin.text.toUtf8$default@kotlin.String.(kotlin.Int;kotlin.Int;kotlin.Int)kotlin.ByteArray>:
 800f494:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f496:	af03      	add	r7, sp, #12
 800f498:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 800f49c:	b087      	sub	sp, #28
 800f49e:	461e      	mov	r6, r3
 800f4a0:	460c      	mov	r4, r1
 800f4a2:	4605      	mov	r5, r0
 800f4a4:	f04f 0b00 	mov.w	fp, #0
 800f4a8:	4630      	mov	r0, r6
 800f4aa:	2101      	movs	r1, #1
 800f4ac:	f8cd b00c 	str.w	fp, [sp, #12]
 800f4b0:	4692      	mov	sl, r2
 800f4b2:	e9cd b501 	strd	fp, r5, [sp, #4]
 800f4b6:	f007 fb92 	bl	8016bde <Kotlin_Int_and_Int>
 800f4ba:	2800      	cmp	r0, #0
 800f4bc:	4630      	mov	r0, r6
 800f4be:	f04f 0102 	mov.w	r1, #2
 800f4c2:	bf18      	it	ne
 800f4c4:	465c      	movne	r4, fp
 800f4c6:	f007 fb8a 	bl	8016bde <Kotlin_Int_and_Int>
 800f4ca:	a901      	add	r1, sp, #4
 800f4cc:	f8d7 8008 	ldr.w	r8, [r7, #8]
 800f4d0:	f101 0908 	add.w	r9, r1, #8
 800f4d4:	b158      	cbz	r0, 800f4ee <kfun:kotlin.text.toUtf8$default@kotlin.String.(kotlin.Int;kotlin.Int;kotlin.Int)kotlin.ByteArray+0x5a>
 800f4d6:	4628      	mov	r0, r5
 800f4d8:	e9cd b504 	strd	fp, r5, [sp, #16]
 800f4dc:	f005 fda0 	bl	8015020 <Kotlin_String_getStringLength>
 800f4e0:	4682      	mov	sl, r0
 800f4e2:	a804      	add	r0, sp, #16
 800f4e4:	2101      	movs	r1, #1
 800f4e6:	2202      	movs	r2, #2
 800f4e8:	f007 fabd 	bl	8016a66 <LeaveFrame>
 800f4ec:	9d02      	ldr	r5, [sp, #8]
 800f4ee:	ae04      	add	r6, sp, #16
 800f4f0:	4628      	mov	r0, r5
 800f4f2:	f106 0308 	add.w	r3, r6, #8
 800f4f6:	4621      	mov	r1, r4
 800f4f8:	4652      	mov	r2, sl
 800f4fa:	f8cd b018 	str.w	fp, [sp, #24]
 800f4fe:	e9cd b504 	strd	fp, r5, [sp, #16]
 800f502:	f005 fd8f 	bl	8015024 <Kotlin_String_toUtf8>
 800f506:	4604      	mov	r4, r0
 800f508:	4648      	mov	r0, r9
 800f50a:	4621      	mov	r1, r4
 800f50c:	f005 f86d 	bl	80145ea <UpdateReturnRef>
 800f510:	4630      	mov	r0, r6
 800f512:	2101      	movs	r1, #1
 800f514:	2203      	movs	r2, #3
 800f516:	f007 faa6 	bl	8016a66 <LeaveFrame>
 800f51a:	4640      	mov	r0, r8
 800f51c:	4621      	mov	r1, r4
 800f51e:	f005 f864 	bl	80145ea <UpdateReturnRef>
 800f522:	a801      	add	r0, sp, #4
 800f524:	2101      	movs	r1, #1
 800f526:	2203      	movs	r2, #3
 800f528:	f007 fa9d 	bl	8016a66 <LeaveFrame>
 800f52c:	4620      	mov	r0, r4
 800f52e:	b007      	add	sp, #28
 800f530:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 800f534:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f536 <kfun:kotlin.text.regex.AbstractCharClass.CachedCharClass.<get-posValue>#internal>:
 800f536:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f538:	af03      	add	r7, sp, #12
 800f53a:	f84d bd04 	str.w	fp, [sp, #-4]!
 800f53e:	b086      	sub	sp, #24
 800f540:	460c      	mov	r4, r1
 800f542:	2100      	movs	r1, #0
 800f544:	e9cd 1104 	strd	r1, r1, [sp, #16]
 800f548:	466e      	mov	r6, sp
 800f54a:	e9cd 1102 	strd	r1, r1, [sp, #8]
 800f54e:	e9cd 1000 	strd	r1, r0, [sp]
 800f552:	68c1      	ldr	r1, [r0, #12]
 800f554:	f106 0008 	add.w	r0, r6, #8
 800f558:	f004 fe3a 	bl	80141d0 <UpdateRef>
 800f55c:	f240 104c 	movw	r0, #332	; 0x14c
 800f560:	f106 020c 	add.w	r2, r6, #12
 800f564:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800f568:	2102      	movs	r1, #2
 800f56a:	6800      	ldr	r0, [r0, #0]
 800f56c:	f005 f82c 	bl	80145c8 <Kotlin_Array_get>
 800f570:	4601      	mov	r1, r0
 800f572:	f106 0010 	add.w	r0, r6, #16
 800f576:	f004 fe2b 	bl	80141d0 <UpdateRef>
 800f57a:	9d02      	ldr	r5, [sp, #8]
 800f57c:	f64c 22d0 	movw	r2, #51920	; 0xcad0
 800f580:	f242 53a1 	movw	r3, #9633	; 0x25a1
 800f584:	f6c5 12cc 	movt	r2, #22988	; 0x59cc
 800f588:	f6c8 33a1 	movt	r3, #35745	; 0x8ba1
 800f58c:	6828      	ldr	r0, [r5, #0]
 800f58e:	f007 fc2b 	bl	8016de8 <LookupOpenMethod>
 800f592:	4602      	mov	r2, r0
 800f594:	f106 0114 	add.w	r1, r6, #20
 800f598:	4628      	mov	r0, r5
 800f59a:	4790      	blx	r2
 800f59c:	4605      	mov	r5, r0
 800f59e:	4620      	mov	r0, r4
 800f5a0:	4629      	mov	r1, r5
 800f5a2:	f005 f822 	bl	80145ea <UpdateReturnRef>
 800f5a6:	4668      	mov	r0, sp
 800f5a8:	2101      	movs	r1, #1
 800f5aa:	2206      	movs	r2, #6
 800f5ac:	f007 fa5b 	bl	8016a66 <LeaveFrame>
 800f5b0:	4628      	mov	r0, r5
 800f5b2:	b006      	add	sp, #24
 800f5b4:	f85d bb04 	ldr.w	fp, [sp], #4
 800f5b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f5ba:	4604      	mov	r4, r0
 800f5bc:	4668      	mov	r0, sp
 800f5be:	2101      	movs	r1, #1
 800f5c0:	2206      	movs	r2, #6
 800f5c2:	f007 fa50 	bl	8016a66 <LeaveFrame>
 800f5c6:	4620      	mov	r0, r4
 800f5c8:	f7f1 fe10 	bl	80011ec <_Unwind_Resume>

0800f5cc <kfun:kotlin.text.regex.AbstractCharClass.CachedCharClass.<get-negValue>#internal>:
 800f5cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f5ce:	af03      	add	r7, sp, #12
 800f5d0:	f84d bd04 	str.w	fp, [sp, #-4]!
 800f5d4:	b086      	sub	sp, #24
 800f5d6:	460c      	mov	r4, r1
 800f5d8:	2100      	movs	r1, #0
 800f5da:	e9cd 1104 	strd	r1, r1, [sp, #16]
 800f5de:	466e      	mov	r6, sp
 800f5e0:	e9cd 1102 	strd	r1, r1, [sp, #8]
 800f5e4:	e9cd 1000 	strd	r1, r0, [sp]
 800f5e8:	6881      	ldr	r1, [r0, #8]
 800f5ea:	f106 0008 	add.w	r0, r6, #8
 800f5ee:	f004 fdef 	bl	80141d0 <UpdateRef>
 800f5f2:	f240 104c 	movw	r0, #332	; 0x14c
 800f5f6:	f106 020c 	add.w	r2, r6, #12
 800f5fa:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800f5fe:	2103      	movs	r1, #3
 800f600:	6800      	ldr	r0, [r0, #0]
 800f602:	f004 ffe1 	bl	80145c8 <Kotlin_Array_get>
 800f606:	4601      	mov	r1, r0
 800f608:	f106 0010 	add.w	r0, r6, #16
 800f60c:	f004 fde0 	bl	80141d0 <UpdateRef>
 800f610:	9d02      	ldr	r5, [sp, #8]
 800f612:	f64c 22d0 	movw	r2, #51920	; 0xcad0
 800f616:	f242 53a1 	movw	r3, #9633	; 0x25a1
 800f61a:	f6c5 12cc 	movt	r2, #22988	; 0x59cc
 800f61e:	f6c8 33a1 	movt	r3, #35745	; 0x8ba1
 800f622:	6828      	ldr	r0, [r5, #0]
 800f624:	f007 fbe0 	bl	8016de8 <LookupOpenMethod>
 800f628:	4602      	mov	r2, r0
 800f62a:	f106 0114 	add.w	r1, r6, #20
 800f62e:	4628      	mov	r0, r5
 800f630:	4790      	blx	r2
 800f632:	4605      	mov	r5, r0
 800f634:	4620      	mov	r0, r4
 800f636:	4629      	mov	r1, r5
 800f638:	f004 ffd7 	bl	80145ea <UpdateReturnRef>
 800f63c:	4668      	mov	r0, sp
 800f63e:	2101      	movs	r1, #1
 800f640:	2206      	movs	r2, #6
 800f642:	f007 fa10 	bl	8016a66 <LeaveFrame>
 800f646:	4628      	mov	r0, r5
 800f648:	b006      	add	sp, #24
 800f64a:	f85d bb04 	ldr.w	fp, [sp], #4
 800f64e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f650:	4604      	mov	r4, r0
 800f652:	4668      	mov	r0, sp
 800f654:	2101      	movs	r1, #1
 800f656:	2206      	movs	r2, #6
 800f658:	f007 fa05 	bl	8016a66 <LeaveFrame>
 800f65c:	4620      	mov	r0, r4
 800f65e:	f7f1 fdc5 	bl	80011ec <_Unwind_Resume>

0800f662 <kfun:kotlin.text.regex.AbstractCharClass.<get-surrogates>#internal>:
 800f662:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f664:	af03      	add	r7, sp, #12
 800f666:	f84d bd04 	str.w	fp, [sp, #-4]!
 800f66a:	b086      	sub	sp, #24
 800f66c:	460c      	mov	r4, r1
 800f66e:	2100      	movs	r1, #0
 800f670:	e9cd 1104 	strd	r1, r1, [sp, #16]
 800f674:	466e      	mov	r6, sp
 800f676:	e9cd 1102 	strd	r1, r1, [sp, #8]
 800f67a:	e9cd 1000 	strd	r1, r0, [sp]
 800f67e:	6941      	ldr	r1, [r0, #20]
 800f680:	f106 0008 	add.w	r0, r6, #8
 800f684:	f004 fda4 	bl	80141d0 <UpdateRef>
 800f688:	f240 104c 	movw	r0, #332	; 0x14c
 800f68c:	f106 020c 	add.w	r2, r6, #12
 800f690:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800f694:	2100      	movs	r1, #0
 800f696:	6800      	ldr	r0, [r0, #0]
 800f698:	f004 ff96 	bl	80145c8 <Kotlin_Array_get>
 800f69c:	4601      	mov	r1, r0
 800f69e:	f106 0010 	add.w	r0, r6, #16
 800f6a2:	f004 fd95 	bl	80141d0 <UpdateRef>
 800f6a6:	9d02      	ldr	r5, [sp, #8]
 800f6a8:	f64c 22d0 	movw	r2, #51920	; 0xcad0
 800f6ac:	f242 53a1 	movw	r3, #9633	; 0x25a1
 800f6b0:	f6c5 12cc 	movt	r2, #22988	; 0x59cc
 800f6b4:	f6c8 33a1 	movt	r3, #35745	; 0x8ba1
 800f6b8:	6828      	ldr	r0, [r5, #0]
 800f6ba:	f007 fb95 	bl	8016de8 <LookupOpenMethod>
 800f6be:	4602      	mov	r2, r0
 800f6c0:	f106 0114 	add.w	r1, r6, #20
 800f6c4:	4628      	mov	r0, r5
 800f6c6:	4790      	blx	r2
 800f6c8:	4605      	mov	r5, r0
 800f6ca:	4620      	mov	r0, r4
 800f6cc:	4629      	mov	r1, r5
 800f6ce:	f004 ff8c 	bl	80145ea <UpdateReturnRef>
 800f6d2:	4668      	mov	r0, sp
 800f6d4:	2101      	movs	r1, #1
 800f6d6:	2206      	movs	r2, #6
 800f6d8:	f007 f9c5 	bl	8016a66 <LeaveFrame>
 800f6dc:	4628      	mov	r0, r5
 800f6de:	b006      	add	sp, #24
 800f6e0:	f85d bb04 	ldr.w	fp, [sp], #4
 800f6e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f6e6:	4604      	mov	r4, r0
 800f6e8:	4668      	mov	r0, sp
 800f6ea:	2101      	movs	r1, #1
 800f6ec:	2206      	movs	r2, #6
 800f6ee:	f007 f9ba 	bl	8016a66 <LeaveFrame>
 800f6f2:	4620      	mov	r0, r4
 800f6f4:	f7f1 fd7a 	bl	80011ec <_Unwind_Resume>

0800f6f8 <kfun:kotlin.text.regex.AbstractCharClass.<get-withoutSurrogates>#internal>:
 800f6f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f6fa:	af03      	add	r7, sp, #12
 800f6fc:	f84d bd04 	str.w	fp, [sp, #-4]!
 800f700:	b086      	sub	sp, #24
 800f702:	460c      	mov	r4, r1
 800f704:	2100      	movs	r1, #0
 800f706:	e9cd 1104 	strd	r1, r1, [sp, #16]
 800f70a:	466e      	mov	r6, sp
 800f70c:	e9cd 1102 	strd	r1, r1, [sp, #8]
 800f710:	e9cd 1000 	strd	r1, r0, [sp]
 800f714:	6981      	ldr	r1, [r0, #24]
 800f716:	f106 0008 	add.w	r0, r6, #8
 800f71a:	f004 fd59 	bl	80141d0 <UpdateRef>
 800f71e:	f240 104c 	movw	r0, #332	; 0x14c
 800f722:	f106 020c 	add.w	r2, r6, #12
 800f726:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800f72a:	2101      	movs	r1, #1
 800f72c:	6800      	ldr	r0, [r0, #0]
 800f72e:	f004 ff4b 	bl	80145c8 <Kotlin_Array_get>
 800f732:	4601      	mov	r1, r0
 800f734:	f106 0010 	add.w	r0, r6, #16
 800f738:	f004 fd4a 	bl	80141d0 <UpdateRef>
 800f73c:	9d02      	ldr	r5, [sp, #8]
 800f73e:	f64c 22d0 	movw	r2, #51920	; 0xcad0
 800f742:	f242 53a1 	movw	r3, #9633	; 0x25a1
 800f746:	f6c5 12cc 	movt	r2, #22988	; 0x59cc
 800f74a:	f6c8 33a1 	movt	r3, #35745	; 0x8ba1
 800f74e:	6828      	ldr	r0, [r5, #0]
 800f750:	f007 fb4a 	bl	8016de8 <LookupOpenMethod>
 800f754:	4602      	mov	r2, r0
 800f756:	f106 0114 	add.w	r1, r6, #20
 800f75a:	4628      	mov	r0, r5
 800f75c:	4790      	blx	r2
 800f75e:	4605      	mov	r5, r0
 800f760:	4620      	mov	r0, r4
 800f762:	4629      	mov	r1, r5
 800f764:	f004 ff41 	bl	80145ea <UpdateReturnRef>
 800f768:	4668      	mov	r0, sp
 800f76a:	2101      	movs	r1, #1
 800f76c:	2206      	movs	r2, #6
 800f76e:	f007 f97a 	bl	8016a66 <LeaveFrame>
 800f772:	4628      	mov	r0, r5
 800f774:	b006      	add	sp, #24
 800f776:	f85d bb04 	ldr.w	fp, [sp], #4
 800f77a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f77c:	4604      	mov	r4, r0
 800f77e:	4668      	mov	r0, sp
 800f780:	2101      	movs	r1, #1
 800f782:	2206      	movs	r2, #6
 800f784:	f007 f96f 	bl	8016a66 <LeaveFrame>
 800f788:	4620      	mov	r0, r4
 800f78a:	f7f1 fd2f 	bl	80011ec <_Unwind_Resume>

0800f78e <kfun:kotlin.text.regex.HangulDecomposedCharSet.<get-decomposedCharUTF16>#internal>:
 800f78e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f790:	af03      	add	r7, sp, #12
 800f792:	f84d bd04 	str.w	fp, [sp, #-4]!
 800f796:	b086      	sub	sp, #24
 800f798:	460c      	mov	r4, r1
 800f79a:	2100      	movs	r1, #0
 800f79c:	e9cd 1104 	strd	r1, r1, [sp, #16]
 800f7a0:	466e      	mov	r6, sp
 800f7a2:	e9cd 1102 	strd	r1, r1, [sp, #8]
 800f7a6:	e9cd 1000 	strd	r1, r0, [sp]
 800f7aa:	6981      	ldr	r1, [r0, #24]
 800f7ac:	f106 0008 	add.w	r0, r6, #8
 800f7b0:	f004 fd0e 	bl	80141d0 <UpdateRef>
 800f7b4:	f240 1050 	movw	r0, #336	; 0x150
 800f7b8:	f106 020c 	add.w	r2, r6, #12
 800f7bc:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800f7c0:	2100      	movs	r1, #0
 800f7c2:	6800      	ldr	r0, [r0, #0]
 800f7c4:	f004 ff00 	bl	80145c8 <Kotlin_Array_get>
 800f7c8:	4601      	mov	r1, r0
 800f7ca:	f106 0010 	add.w	r0, r6, #16
 800f7ce:	f004 fcff 	bl	80141d0 <UpdateRef>
 800f7d2:	9d02      	ldr	r5, [sp, #8]
 800f7d4:	f64c 22d0 	movw	r2, #51920	; 0xcad0
 800f7d8:	f242 53a1 	movw	r3, #9633	; 0x25a1
 800f7dc:	f6c5 12cc 	movt	r2, #22988	; 0x59cc
 800f7e0:	f6c8 33a1 	movt	r3, #35745	; 0x8ba1
 800f7e4:	6828      	ldr	r0, [r5, #0]
 800f7e6:	f007 faff 	bl	8016de8 <LookupOpenMethod>
 800f7ea:	4602      	mov	r2, r0
 800f7ec:	f106 0114 	add.w	r1, r6, #20
 800f7f0:	4628      	mov	r0, r5
 800f7f2:	4790      	blx	r2
 800f7f4:	4605      	mov	r5, r0
 800f7f6:	4620      	mov	r0, r4
 800f7f8:	4629      	mov	r1, r5
 800f7fa:	f004 fef6 	bl	80145ea <UpdateReturnRef>
 800f7fe:	4668      	mov	r0, sp
 800f800:	2101      	movs	r1, #1
 800f802:	2206      	movs	r2, #6
 800f804:	f007 f92f 	bl	8016a66 <LeaveFrame>
 800f808:	4628      	mov	r0, r5
 800f80a:	b006      	add	sp, #24
 800f80c:	f85d bb04 	ldr.w	fp, [sp], #4
 800f810:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f812:	4604      	mov	r4, r0
 800f814:	4668      	mov	r0, sp
 800f816:	2101      	movs	r1, #1
 800f818:	2206      	movs	r2, #6
 800f81a:	f007 f924 	bl	8016a66 <LeaveFrame>
 800f81e:	4620      	mov	r0, r4
 800f820:	f7f1 fce4 	bl	80011ec <_Unwind_Resume>

0800f824 <kfun:konan.internal.KProperty1Impl.<get-name>()kotlin.String>:
 800f824:	b5d0      	push	{r4, r6, r7, lr}
 800f826:	af02      	add	r7, sp, #8
 800f828:	b082      	sub	sp, #8
 800f82a:	2200      	movs	r2, #0
 800f82c:	e9cd 2000 	strd	r2, r0, [sp]
 800f830:	6884      	ldr	r4, [r0, #8]
 800f832:	4608      	mov	r0, r1
 800f834:	4621      	mov	r1, r4
 800f836:	f004 fed8 	bl	80145ea <UpdateReturnRef>
 800f83a:	4668      	mov	r0, sp
 800f83c:	2101      	movs	r1, #1
 800f83e:	2202      	movs	r2, #2
 800f840:	f007 f911 	bl	8016a66 <LeaveFrame>
 800f844:	4620      	mov	r0, r4
 800f846:	b002      	add	sp, #8
 800f848:	bdd0      	pop	{r4, r6, r7, pc}

0800f84a <kfun:konan.internal.KProperty1Impl.get(#GENERIC)#GENERIC>:
 800f84a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f84c:	af03      	add	r7, sp, #12
 800f84e:	f84d 8d04 	str.w	r8, [sp, #-4]!
 800f852:	b088      	sub	sp, #32
 800f854:	4690      	mov	r8, r2
 800f856:	2200      	movs	r2, #0
 800f858:	e9cd 2001 	strd	r2, r0, [sp, #4]
 800f85c:	ac01      	add	r4, sp, #4
 800f85e:	e9cd 1203 	strd	r1, r2, [sp, #12]
 800f862:	e9cd 2205 	strd	r2, r2, [sp, #20]
 800f866:	9007      	str	r0, [sp, #28]
 800f868:	68c5      	ldr	r5, [r0, #12]
 800f86a:	f104 000c 	add.w	r0, r4, #12
 800f86e:	4629      	mov	r1, r5
 800f870:	f004 febb 	bl	80145ea <UpdateReturnRef>
 800f874:	a806      	add	r0, sp, #24
 800f876:	2101      	movs	r1, #1
 800f878:	2202      	movs	r2, #2
 800f87a:	f007 f8f4 	bl	8016a66 <LeaveFrame>
 800f87e:	6828      	ldr	r0, [r5, #0]
 800f880:	f24e 3241 	movw	r2, #58177	; 0xe341
 800f884:	f24a 4364 	movw	r3, #42084	; 0xa464
 800f888:	f2c1 02ae 	movt	r2, #4270	; 0x10ae
 800f88c:	f6c3 13a9 	movt	r3, #14761	; 0x39a9
 800f890:	9e03      	ldr	r6, [sp, #12]
 800f892:	f007 faa9 	bl	8016de8 <LookupOpenMethod>
 800f896:	4603      	mov	r3, r0
 800f898:	f104 0210 	add.w	r2, r4, #16
 800f89c:	4628      	mov	r0, r5
 800f89e:	4631      	mov	r1, r6
 800f8a0:	4798      	blx	r3
 800f8a2:	4605      	mov	r5, r0
 800f8a4:	4640      	mov	r0, r8
 800f8a6:	4629      	mov	r1, r5
 800f8a8:	f004 fe9f 	bl	80145ea <UpdateReturnRef>
 800f8ac:	a801      	add	r0, sp, #4
 800f8ae:	2102      	movs	r1, #2
 800f8b0:	2205      	movs	r2, #5
 800f8b2:	f007 f8d8 	bl	8016a66 <LeaveFrame>
 800f8b6:	4628      	mov	r0, r5
 800f8b8:	b008      	add	sp, #32
 800f8ba:	f85d 8b04 	ldr.w	r8, [sp], #4
 800f8be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f8c0:	4604      	mov	r4, r0
 800f8c2:	a801      	add	r0, sp, #4
 800f8c4:	2102      	movs	r1, #2
 800f8c6:	2205      	movs	r2, #5
 800f8c8:	f007 f8cd 	bl	8016a66 <LeaveFrame>
 800f8cc:	4620      	mov	r0, r4
 800f8ce:	f7f1 fc8d 	bl	80011ec <_Unwind_Resume>

0800f8d2 <kfun:konan.internal.KProperty1Impl.invoke(#GENERIC)#GENERIC>:
 800f8d2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f8d4:	af03      	add	r7, sp, #12
 800f8d6:	f84d 8d04 	str.w	r8, [sp, #-4]!
 800f8da:	b088      	sub	sp, #32
 800f8dc:	4690      	mov	r8, r2
 800f8de:	2200      	movs	r2, #0
 800f8e0:	e9cd 2001 	strd	r2, r0, [sp, #4]
 800f8e4:	ac01      	add	r4, sp, #4
 800f8e6:	e9cd 1203 	strd	r1, r2, [sp, #12]
 800f8ea:	e9cd 2205 	strd	r2, r2, [sp, #20]
 800f8ee:	9007      	str	r0, [sp, #28]
 800f8f0:	68c5      	ldr	r5, [r0, #12]
 800f8f2:	f104 000c 	add.w	r0, r4, #12
 800f8f6:	4629      	mov	r1, r5
 800f8f8:	f004 fe77 	bl	80145ea <UpdateReturnRef>
 800f8fc:	a806      	add	r0, sp, #24
 800f8fe:	2101      	movs	r1, #1
 800f900:	2202      	movs	r2, #2
 800f902:	f007 f8b0 	bl	8016a66 <LeaveFrame>
 800f906:	6828      	ldr	r0, [r5, #0]
 800f908:	f24e 3241 	movw	r2, #58177	; 0xe341
 800f90c:	f24a 4364 	movw	r3, #42084	; 0xa464
 800f910:	f2c1 02ae 	movt	r2, #4270	; 0x10ae
 800f914:	f6c3 13a9 	movt	r3, #14761	; 0x39a9
 800f918:	9e03      	ldr	r6, [sp, #12]
 800f91a:	f007 fa65 	bl	8016de8 <LookupOpenMethod>
 800f91e:	4603      	mov	r3, r0
 800f920:	f104 0210 	add.w	r2, r4, #16
 800f924:	4628      	mov	r0, r5
 800f926:	4631      	mov	r1, r6
 800f928:	4798      	blx	r3
 800f92a:	4605      	mov	r5, r0
 800f92c:	4640      	mov	r0, r8
 800f92e:	4629      	mov	r1, r5
 800f930:	f004 fe5b 	bl	80145ea <UpdateReturnRef>
 800f934:	a801      	add	r0, sp, #4
 800f936:	2102      	movs	r1, #2
 800f938:	2205      	movs	r2, #5
 800f93a:	f007 f894 	bl	8016a66 <LeaveFrame>
 800f93e:	4628      	mov	r0, r5
 800f940:	b008      	add	sp, #32
 800f942:	f85d 8b04 	ldr.w	r8, [sp], #4
 800f946:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f948:	4604      	mov	r4, r0
 800f94a:	a801      	add	r0, sp, #4
 800f94c:	2102      	movs	r1, #2
 800f94e:	2205      	movs	r2, #5
 800f950:	f007 f889 	bl	8016a66 <LeaveFrame>
 800f954:	4620      	mov	r0, r4
 800f956:	f7f1 fc49 	bl	80011ec <_Unwind_Resume>

0800f95a <kfun:konan.internal.KProperty1Impl.equals(kotlin.Any?)ValueType>:
 800f95a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f95c:	af03      	add	r7, sp, #12
 800f95e:	f84d 8d04 	str.w	r8, [sp, #-4]!
 800f962:	b08e      	sub	sp, #56	; 0x38
 800f964:	ac01      	add	r4, sp, #4
 800f966:	460d      	mov	r5, r1
 800f968:	4606      	mov	r6, r0
 800f96a:	2124      	movs	r1, #36	; 0x24
 800f96c:	4620      	mov	r0, r4
 800f96e:	f00b fdc3 	bl	801b4f8 <__aeabi_memclr>
 800f972:	f104 000c 	add.w	r0, r4, #12
 800f976:	4629      	mov	r1, r5
 800f978:	e9cd 6502 	strd	r6, r5, [sp, #8]
 800f97c:	f004 fc28 	bl	80141d0 <UpdateRef>
 800f980:	9e04      	ldr	r6, [sp, #16]
 800f982:	f104 0510 	add.w	r5, r4, #16
 800f986:	b166      	cbz	r6, 800f9a2 <kfun:konan.internal.KProperty1Impl.equals(kotlin.Any?)ValueType+0x48>
 800f988:	f643 4170 	movw	r1, #15472	; 0x3c70
 800f98c:	4630      	mov	r0, r6
 800f98e:	f6c0 0102 	movt	r1, #2050	; 0x802
 800f992:	f005 faf1 	bl	8014f78 <IsInstance>
 800f996:	f000 0001 	and.w	r0, r0, #1
 800f99a:	4240      	negs	r0, r0
 800f99c:	ea00 0106 	and.w	r1, r0, r6
 800f9a0:	e000      	b.n	800f9a4 <kfun:konan.internal.KProperty1Impl.equals(kotlin.Any?)ValueType+0x4a>
 800f9a2:	2100      	movs	r1, #0
 800f9a4:	4628      	mov	r0, r5
 800f9a6:	f004 fc13 	bl	80141d0 <UpdateRef>
 800f9aa:	9805      	ldr	r0, [sp, #20]
 800f9ac:	2800      	cmp	r0, #0
 800f9ae:	d051      	beq.n	800fa54 <kfun:konan.internal.KProperty1Impl.equals(kotlin.Any?)ValueType+0xfa>
 800f9b0:	9802      	ldr	r0, [sp, #8]
 800f9b2:	f104 0114 	add.w	r1, r4, #20
 800f9b6:	6802      	ldr	r2, [r0, #0]
 800f9b8:	6d92      	ldr	r2, [r2, #88]	; 0x58
 800f9ba:	4790      	blx	r2
 800f9bc:	4605      	mov	r5, r0
 800f9be:	9805      	ldr	r0, [sp, #20]
 800f9c0:	f104 0118 	add.w	r1, r4, #24
 800f9c4:	6802      	ldr	r2, [r0, #0]
 800f9c6:	6d92      	ldr	r2, [r2, #88]	; 0x58
 800f9c8:	4790      	blx	r2
 800f9ca:	4606      	mov	r6, r0
 800f9cc:	2d00      	cmp	r5, #0
 800f9ce:	f04f 0000 	mov.w	r0, #0
 800f9d2:	950b      	str	r5, [sp, #44]	; 0x2c
 800f9d4:	900a      	str	r0, [sp, #40]	; 0x28
 800f9d6:	960c      	str	r6, [sp, #48]	; 0x30
 800f9d8:	d035      	beq.n	800fa46 <kfun:konan.internal.KProperty1Impl.equals(kotlin.Any?)ValueType+0xec>
 800f9da:	6828      	ldr	r0, [r5, #0]
 800f9dc:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 800f9de:	4628      	mov	r0, r5
 800f9e0:	4631      	mov	r1, r6
 800f9e2:	4790      	blx	r2
 800f9e4:	4605      	mov	r5, r0
 800f9e6:	a80a      	add	r0, sp, #40	; 0x28
 800f9e8:	2102      	movs	r1, #2
 800f9ea:	2203      	movs	r2, #3
 800f9ec:	f007 f83b 	bl	8016a66 <LeaveFrame>
 800f9f0:	07e8      	lsls	r0, r5, #31
 800f9f2:	d02f      	beq.n	800fa54 <kfun:konan.internal.KProperty1Impl.equals(kotlin.Any?)ValueType+0xfa>
 800f9f4:	9902      	ldr	r1, [sp, #8]
 800f9f6:	f104 0820 	add.w	r8, r4, #32
 800f9fa:	f104 001c 	add.w	r0, r4, #28
 800f9fe:	2400      	movs	r4, #0
 800fa00:	e9cd 410a 	strd	r4, r1, [sp, #40]	; 0x28
 800fa04:	68cd      	ldr	r5, [r1, #12]
 800fa06:	4629      	mov	r1, r5
 800fa08:	f004 fdef 	bl	80145ea <UpdateReturnRef>
 800fa0c:	a80a      	add	r0, sp, #40	; 0x28
 800fa0e:	2101      	movs	r1, #1
 800fa10:	2202      	movs	r2, #2
 800fa12:	f007 f828 	bl	8016a66 <LeaveFrame>
 800fa16:	9805      	ldr	r0, [sp, #20]
 800fa18:	e9cd 400a 	strd	r4, r0, [sp, #40]	; 0x28
 800fa1c:	68c6      	ldr	r6, [r0, #12]
 800fa1e:	4640      	mov	r0, r8
 800fa20:	4631      	mov	r1, r6
 800fa22:	f004 fde2 	bl	80145ea <UpdateReturnRef>
 800fa26:	a80a      	add	r0, sp, #40	; 0x28
 800fa28:	2101      	movs	r1, #1
 800fa2a:	2202      	movs	r2, #2
 800fa2c:	f007 f81b 	bl	8016a66 <LeaveFrame>
 800fa30:	a80a      	add	r0, sp, #40	; 0x28
 800fa32:	2d00      	cmp	r5, #0
 800fa34:	c070      	stmia	r0!, {r4, r5, r6}
 800fa36:	d00f      	beq.n	800fa58 <kfun:konan.internal.KProperty1Impl.equals(kotlin.Any?)ValueType+0xfe>
 800fa38:	6828      	ldr	r0, [r5, #0]
 800fa3a:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 800fa3c:	4628      	mov	r0, r5
 800fa3e:	4631      	mov	r1, r6
 800fa40:	4790      	blx	r2
 800fa42:	4604      	mov	r4, r0
 800fa44:	e00b      	b.n	800fa5e <kfun:konan.internal.KProperty1Impl.equals(kotlin.Any?)ValueType+0x104>
 800fa46:	a80a      	add	r0, sp, #40	; 0x28
 800fa48:	2102      	movs	r1, #2
 800fa4a:	2203      	movs	r2, #3
 800fa4c:	f007 f80b 	bl	8016a66 <LeaveFrame>
 800fa50:	2e00      	cmp	r6, #0
 800fa52:	d0cf      	beq.n	800f9f4 <kfun:konan.internal.KProperty1Impl.equals(kotlin.Any?)ValueType+0x9a>
 800fa54:	2400      	movs	r4, #0
 800fa56:	e007      	b.n	800fa68 <kfun:konan.internal.KProperty1Impl.equals(kotlin.Any?)ValueType+0x10e>
 800fa58:	2e00      	cmp	r6, #0
 800fa5a:	bf08      	it	eq
 800fa5c:	2401      	moveq	r4, #1
 800fa5e:	a80a      	add	r0, sp, #40	; 0x28
 800fa60:	2102      	movs	r1, #2
 800fa62:	2203      	movs	r2, #3
 800fa64:	f006 ffff 	bl	8016a66 <LeaveFrame>
 800fa68:	a801      	add	r0, sp, #4
 800fa6a:	2102      	movs	r1, #2
 800fa6c:	2209      	movs	r2, #9
 800fa6e:	f006 fffa 	bl	8016a66 <LeaveFrame>
 800fa72:	4620      	mov	r0, r4
 800fa74:	b00e      	add	sp, #56	; 0x38
 800fa76:	f85d 8b04 	ldr.w	r8, [sp], #4
 800fa7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fa7c:	e7ff      	b.n	800fa7e <kfun:konan.internal.KProperty1Impl.equals(kotlin.Any?)ValueType+0x124>
 800fa7e:	4604      	mov	r4, r0
 800fa80:	a80a      	add	r0, sp, #40	; 0x28
 800fa82:	2102      	movs	r1, #2
 800fa84:	2203      	movs	r2, #3
 800fa86:	f006 ffee 	bl	8016a66 <LeaveFrame>
 800fa8a:	e000      	b.n	800fa8e <kfun:konan.internal.KProperty1Impl.equals(kotlin.Any?)ValueType+0x134>
 800fa8c:	4604      	mov	r4, r0
 800fa8e:	a801      	add	r0, sp, #4
 800fa90:	2102      	movs	r1, #2
 800fa92:	2209      	movs	r2, #9
 800fa94:	f006 ffe7 	bl	8016a66 <LeaveFrame>
 800fa98:	4620      	mov	r0, r4
 800fa9a:	f7f1 fba7 	bl	80011ec <_Unwind_Resume>

0800fa9e <kfun:konan.internal.KProperty1Impl.hashCode()ValueType>:
 800fa9e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800faa0:	af03      	add	r7, sp, #12
 800faa2:	f84d bd04 	str.w	fp, [sp, #-4]!
 800faa6:	b086      	sub	sp, #24
 800faa8:	2500      	movs	r5, #0
 800faaa:	e9cd 5502 	strd	r5, r5, [sp, #8]
 800faae:	e9cd 5000 	strd	r5, r0, [sp]
 800fab2:	6801      	ldr	r1, [r0, #0]
 800fab4:	6d8a      	ldr	r2, [r1, #88]	; 0x58
 800fab6:	466e      	mov	r6, sp
 800fab8:	f106 0108 	add.w	r1, r6, #8
 800fabc:	4790      	blx	r2
 800fabe:	f005 fe7d 	bl	80157bc <Kotlin_String_hashCode>
 800fac2:	4604      	mov	r4, r0
 800fac4:	9801      	ldr	r0, [sp, #4]
 800fac6:	e9cd 5004 	strd	r5, r0, [sp, #16]
 800faca:	68c5      	ldr	r5, [r0, #12]
 800facc:	f106 000c 	add.w	r0, r6, #12
 800fad0:	4629      	mov	r1, r5
 800fad2:	f004 fd8a 	bl	80145ea <UpdateReturnRef>
 800fad6:	a804      	add	r0, sp, #16
 800fad8:	2101      	movs	r1, #1
 800fada:	2202      	movs	r2, #2
 800fadc:	f006 ffc3 	bl	8016a66 <LeaveFrame>
 800fae0:	6828      	ldr	r0, [r5, #0]
 800fae2:	f246 521a 	movw	r2, #25882	; 0x651a
 800fae6:	f642 031a 	movw	r3, #10266	; 0x281a
 800faea:	f2c7 02f9 	movt	r2, #28921	; 0x70f9
 800faee:	f6cd 2306 	movt	r3, #55814	; 0xda06
 800faf2:	f007 f979 	bl	8016de8 <LookupOpenMethod>
 800faf6:	4601      	mov	r1, r0
 800faf8:	4628      	mov	r0, r5
 800fafa:	4788      	blx	r1
 800fafc:	4605      	mov	r5, r0
 800fafe:	4620      	mov	r0, r4
 800fb00:	211f      	movs	r1, #31
 800fb02:	f007 f866 	bl	8016bd2 <Kotlin_Int_times_Int>
 800fb06:	4629      	mov	r1, r5
 800fb08:	f007 f84c 	bl	8016ba4 <Kotlin_Int_plus_Int>
 800fb0c:	4604      	mov	r4, r0
 800fb0e:	4668      	mov	r0, sp
 800fb10:	2101      	movs	r1, #1
 800fb12:	2204      	movs	r2, #4
 800fb14:	f006 ffa7 	bl	8016a66 <LeaveFrame>
 800fb18:	4620      	mov	r0, r4
 800fb1a:	b006      	add	sp, #24
 800fb1c:	f85d bb04 	ldr.w	fp, [sp], #4
 800fb20:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fb22:	4604      	mov	r4, r0
 800fb24:	4668      	mov	r0, sp
 800fb26:	2101      	movs	r1, #1
 800fb28:	2204      	movs	r2, #4
 800fb2a:	f006 ff9c 	bl	8016a66 <LeaveFrame>
 800fb2e:	4620      	mov	r0, r4
 800fb30:	f7f1 fb5c 	bl	80011ec <_Unwind_Resume>

0800fb34 <kfun:konan.internal.KProperty1Impl.toString()kotlin.String>:
 800fb34:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fb36:	af03      	add	r7, sp, #12
 800fb38:	e92d 0700 	stmdb	sp!, {r8, r9, sl}
 800fb3c:	b094      	sub	sp, #80	; 0x50
 800fb3e:	f10d 0904 	add.w	r9, sp, #4
 800fb42:	4688      	mov	r8, r1
 800fb44:	4604      	mov	r4, r0
 800fb46:	2124      	movs	r1, #36	; 0x24
 800fb48:	4648      	mov	r0, r9
 800fb4a:	f00b fcd5 	bl	801b4f8 <__aeabi_memclr>
 800fb4e:	f641 10f0 	movw	r0, #6640	; 0x19f0
 800fb52:	f109 0108 	add.w	r1, r9, #8
 800fb56:	f6c0 0002 	movt	r0, #2050	; 0x802
 800fb5a:	9402      	str	r4, [sp, #8]
 800fb5c:	f006 fecd 	bl	80168fa <AllocInstance>
 800fb60:	210a      	movs	r1, #10
 800fb62:	4604      	mov	r4, r0
 800fb64:	2500      	movs	r5, #0
 800fb66:	e9cd 540a 	strd	r5, r4, [sp, #40]	; 0x28
 800fb6a:	f7fa fff4 	bl	800ab56 <kfun:kotlin.text.StringBuilder.<init>(kotlin.Int)kotlin.text.StringBuilder>
 800fb6e:	f10d 0a28 	add.w	sl, sp, #40	; 0x28
 800fb72:	2101      	movs	r1, #1
 800fb74:	2202      	movs	r2, #2
 800fb76:	4650      	mov	r0, sl
 800fb78:	f006 ff75 	bl	8016a66 <LeaveFrame>
 800fb7c:	f109 000c 	add.w	r0, r9, #12
 800fb80:	4621      	mov	r1, r4
 800fb82:	f004 fb25 	bl	80141d0 <UpdateRef>
 800fb86:	9e04      	ldr	r6, [sp, #16]
 800fb88:	f10a 040c 	add.w	r4, sl, #12
 800fb8c:	f242 50b0 	movw	r0, #9648	; 0x25b0
 800fb90:	e9cd 550d 	strd	r5, r5, [sp, #52]	; 0x34
 800fb94:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800fb98:	4621      	mov	r1, r4
 800fb9a:	e9cd 560a 	strd	r5, r6, [sp, #40]	; 0x28
 800fb9e:	900c      	str	r0, [sp, #48]	; 0x30
 800fba0:	f005 fb20 	bl	80151e4 <Kotlin_String_toCharArray>
 800fba4:	f10a 0a10 	add.w	sl, sl, #16
 800fba8:	4601      	mov	r1, r0
 800fbaa:	4630      	mov	r0, r6
 800fbac:	4652      	mov	r2, sl
 800fbae:	f7fa faf0 	bl	800a192 <kfun:kotlin.text.StringBuilder.append(kotlin.CharArray)kotlin.text.StringBuilder>
 800fbb2:	4601      	mov	r1, r0
 800fbb4:	f109 0010 	add.w	r0, r9, #16
 800fbb8:	f004 fd17 	bl	80145ea <UpdateReturnRef>
 800fbbc:	a80a      	add	r0, sp, #40	; 0x28
 800fbbe:	2102      	movs	r1, #2
 800fbc0:	2205      	movs	r2, #5
 800fbc2:	f006 ff50 	bl	8016a66 <LeaveFrame>
 800fbc6:	9802      	ldr	r0, [sp, #8]
 800fbc8:	9d04      	ldr	r5, [sp, #16]
 800fbca:	6801      	ldr	r1, [r0, #0]
 800fbcc:	6d8a      	ldr	r2, [r1, #88]	; 0x58
 800fbce:	f109 0114 	add.w	r1, r9, #20
 800fbd2:	4790      	blx	r2
 800fbd4:	2600      	movs	r6, #0
 800fbd6:	4621      	mov	r1, r4
 800fbd8:	960e      	str	r6, [sp, #56]	; 0x38
 800fbda:	e9cd 650a 	strd	r6, r5, [sp, #40]	; 0x28
 800fbde:	e9cd 060c 	strd	r0, r6, [sp, #48]	; 0x30
 800fbe2:	f005 faff 	bl	80151e4 <Kotlin_String_toCharArray>
 800fbe6:	4601      	mov	r1, r0
 800fbe8:	4628      	mov	r0, r5
 800fbea:	4652      	mov	r2, sl
 800fbec:	f7fa fad1 	bl	800a192 <kfun:kotlin.text.StringBuilder.append(kotlin.CharArray)kotlin.text.StringBuilder>
 800fbf0:	4601      	mov	r1, r0
 800fbf2:	f109 0018 	add.w	r0, r9, #24
 800fbf6:	f004 fcf8 	bl	80145ea <UpdateReturnRef>
 800fbfa:	a80a      	add	r0, sp, #40	; 0x28
 800fbfc:	2102      	movs	r1, #2
 800fbfe:	2205      	movs	r2, #5
 800fc00:	f006 ff31 	bl	8016a66 <LeaveFrame>
 800fc04:	9d04      	ldr	r5, [sp, #16]
 800fc06:	f242 30d0 	movw	r0, #9168	; 0x23d0
 800fc0a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800fc0e:	4621      	mov	r1, r4
 800fc10:	e9cd 660d 	strd	r6, r6, [sp, #52]	; 0x34
 800fc14:	e9cd 650a 	strd	r6, r5, [sp, #40]	; 0x28
 800fc18:	900c      	str	r0, [sp, #48]	; 0x30
 800fc1a:	f005 fae3 	bl	80151e4 <Kotlin_String_toCharArray>
 800fc1e:	4601      	mov	r1, r0
 800fc20:	4628      	mov	r0, r5
 800fc22:	4652      	mov	r2, sl
 800fc24:	f7fa fab5 	bl	800a192 <kfun:kotlin.text.StringBuilder.append(kotlin.CharArray)kotlin.text.StringBuilder>
 800fc28:	4601      	mov	r1, r0
 800fc2a:	f109 001c 	add.w	r0, r9, #28
 800fc2e:	f109 0a20 	add.w	sl, r9, #32
 800fc32:	f004 fcda 	bl	80145ea <UpdateReturnRef>
 800fc36:	f10d 0928 	add.w	r9, sp, #40	; 0x28
 800fc3a:	2102      	movs	r1, #2
 800fc3c:	2205      	movs	r2, #5
 800fc3e:	4648      	mov	r0, r9
 800fc40:	f006 ff11 	bl	8016a66 <LeaveFrame>
 800fc44:	9804      	ldr	r0, [sp, #16]
 800fc46:	2500      	movs	r5, #0
 800fc48:	e9cd 550c 	strd	r5, r5, [sp, #48]	; 0x30
 800fc4c:	ac10      	add	r4, sp, #64	; 0x40
 800fc4e:	e9cd 500a 	strd	r5, r0, [sp, #40]	; 0x28
 800fc52:	9512      	str	r5, [sp, #72]	; 0x48
 800fc54:	e9cd 5010 	strd	r5, r0, [sp, #64]	; 0x40
 800fc58:	68c6      	ldr	r6, [r0, #12]
 800fc5a:	f104 0008 	add.w	r0, r4, #8
 800fc5e:	4631      	mov	r1, r6
 800fc60:	f004 fab6 	bl	80141d0 <UpdateRef>
 800fc64:	f109 0008 	add.w	r0, r9, #8
 800fc68:	4631      	mov	r1, r6
 800fc6a:	f004 fcbe 	bl	80145ea <UpdateReturnRef>
 800fc6e:	4620      	mov	r0, r4
 800fc70:	2101      	movs	r1, #1
 800fc72:	2203      	movs	r2, #3
 800fc74:	f006 fef7 	bl	8016a66 <LeaveFrame>
 800fc78:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800fc7a:	2101      	movs	r1, #1
 800fc7c:	2202      	movs	r2, #2
 800fc7e:	e9cd 5010 	strd	r5, r0, [sp, #64]	; 0x40
 800fc82:	6884      	ldr	r4, [r0, #8]
 800fc84:	a810      	add	r0, sp, #64	; 0x40
 800fc86:	f006 feee 	bl	8016a66 <LeaveFrame>
 800fc8a:	f109 030c 	add.w	r3, r9, #12
 800fc8e:	4630      	mov	r0, r6
 800fc90:	2100      	movs	r1, #0
 800fc92:	4622      	mov	r2, r4
 800fc94:	f005 fa5d 	bl	8015152 <Kotlin_String_fromCharArray>
 800fc98:	4604      	mov	r4, r0
 800fc9a:	4650      	mov	r0, sl
 800fc9c:	4621      	mov	r1, r4
 800fc9e:	f004 fca4 	bl	80145ea <UpdateReturnRef>
 800fca2:	4648      	mov	r0, r9
 800fca4:	2101      	movs	r1, #1
 800fca6:	2204      	movs	r2, #4
 800fca8:	f006 fedd 	bl	8016a66 <LeaveFrame>
 800fcac:	4640      	mov	r0, r8
 800fcae:	4621      	mov	r1, r4
 800fcb0:	f004 fc9b 	bl	80145ea <UpdateReturnRef>
 800fcb4:	a801      	add	r0, sp, #4
 800fcb6:	2101      	movs	r1, #1
 800fcb8:	2209      	movs	r2, #9
 800fcba:	f006 fed4 	bl	8016a66 <LeaveFrame>
 800fcbe:	4620      	mov	r0, r4
 800fcc0:	b014      	add	sp, #80	; 0x50
 800fcc2:	e8bd 0700 	ldmia.w	sp!, {r8, r9, sl}
 800fcc6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fcc8:	e002      	b.n	800fcd0 <kfun:konan.internal.KProperty1Impl.toString()kotlin.String+0x19c>
 800fcca:	e001      	b.n	800fcd0 <kfun:konan.internal.KProperty1Impl.toString()kotlin.String+0x19c>
 800fccc:	4604      	mov	r4, r0
 800fcce:	e005      	b.n	800fcdc <kfun:konan.internal.KProperty1Impl.toString()kotlin.String+0x1a8>
 800fcd0:	4604      	mov	r4, r0
 800fcd2:	a80a      	add	r0, sp, #40	; 0x28
 800fcd4:	2102      	movs	r1, #2
 800fcd6:	2205      	movs	r2, #5
 800fcd8:	f006 fec5 	bl	8016a66 <LeaveFrame>
 800fcdc:	a801      	add	r0, sp, #4
 800fcde:	2101      	movs	r1, #1
 800fce0:	2209      	movs	r2, #9
 800fce2:	f006 fec0 	bl	8016a66 <LeaveFrame>
 800fce6:	4620      	mov	r0, r4
 800fce8:	f7f1 fa80 	bl	80011ec <_Unwind_Resume>

0800fcec <ThrowArrayIndexOutOfBoundsException>:
 800fcec:	b5b0      	push	{r4, r5, r7, lr}
 800fcee:	af02      	add	r7, sp, #8
 800fcf0:	b08a      	sub	sp, #40	; 0x28
 800fcf2:	4668      	mov	r0, sp
 800fcf4:	f040 0104 	orr.w	r1, r0, #4
 800fcf8:	f643 5080 	movw	r0, #15744	; 0x3d80
 800fcfc:	2500      	movs	r5, #0
 800fcfe:	f6c0 0002 	movt	r0, #2050	; 0x802
 800fd02:	e9cd 5500 	strd	r5, r5, [sp]
 800fd06:	f006 fdf8 	bl	80168fa <AllocInstance>
 800fd0a:	4604      	mov	r4, r0
 800fd0c:	e9cd 5402 	strd	r5, r4, [sp, #8]
 800fd10:	e9cd 5404 	strd	r5, r4, [sp, #16]
 800fd14:	e9cd 5406 	strd	r5, r4, [sp, #24]
 800fd18:	f7fb f9d7 	bl	800b0ca <kfun:kotlin.Exception.<init>()kotlin.Exception>
 800fd1c:	a808      	add	r0, sp, #32
 800fd1e:	2101      	movs	r1, #1
 800fd20:	2202      	movs	r2, #2
 800fd22:	e9cd 5408 	strd	r5, r4, [sp, #32]
 800fd26:	f006 fe9e 	bl	8016a66 <LeaveFrame>
 800fd2a:	a806      	add	r0, sp, #24
 800fd2c:	2101      	movs	r1, #1
 800fd2e:	2202      	movs	r2, #2
 800fd30:	f006 fe99 	bl	8016a66 <LeaveFrame>
 800fd34:	a808      	add	r0, sp, #32
 800fd36:	2101      	movs	r1, #1
 800fd38:	2202      	movs	r2, #2
 800fd3a:	e9cd 5408 	strd	r5, r4, [sp, #32]
 800fd3e:	f006 fe92 	bl	8016a66 <LeaveFrame>
 800fd42:	a804      	add	r0, sp, #16
 800fd44:	2101      	movs	r1, #1
 800fd46:	2202      	movs	r2, #2
 800fd48:	f006 fe8d 	bl	8016a66 <LeaveFrame>
 800fd4c:	a808      	add	r0, sp, #32
 800fd4e:	2101      	movs	r1, #1
 800fd50:	2202      	movs	r2, #2
 800fd52:	e9cd 5408 	strd	r5, r4, [sp, #32]
 800fd56:	f006 fe86 	bl	8016a66 <LeaveFrame>
 800fd5a:	a802      	add	r0, sp, #8
 800fd5c:	2101      	movs	r1, #1
 800fd5e:	2202      	movs	r2, #2
 800fd60:	f006 fe81 	bl	8016a66 <LeaveFrame>
 800fd64:	4620      	mov	r0, r4
 800fd66:	f005 f8cc 	bl	8014f02 <ThrowException>

0800fd6a <ThrowClassCastException>:
 800fd6a:	b5b0      	push	{r4, r5, r7, lr}
 800fd6c:	af02      	add	r7, sp, #8
 800fd6e:	b088      	sub	sp, #32
 800fd70:	4668      	mov	r0, sp
 800fd72:	f040 0104 	orr.w	r1, r0, #4
 800fd76:	f642 6030 	movw	r0, #11824	; 0x2e30
 800fd7a:	2500      	movs	r5, #0
 800fd7c:	f6c0 0002 	movt	r0, #2050	; 0x802
 800fd80:	e9cd 5500 	strd	r5, r5, [sp]
 800fd84:	f006 fdb9 	bl	80168fa <AllocInstance>
 800fd88:	4604      	mov	r4, r0
 800fd8a:	e9cd 5402 	strd	r5, r4, [sp, #8]
 800fd8e:	e9cd 5404 	strd	r5, r4, [sp, #16]
 800fd92:	f7fb f99a 	bl	800b0ca <kfun:kotlin.Exception.<init>()kotlin.Exception>
 800fd96:	a806      	add	r0, sp, #24
 800fd98:	2101      	movs	r1, #1
 800fd9a:	2202      	movs	r2, #2
 800fd9c:	e9cd 5406 	strd	r5, r4, [sp, #24]
 800fda0:	f006 fe61 	bl	8016a66 <LeaveFrame>
 800fda4:	a804      	add	r0, sp, #16
 800fda6:	2101      	movs	r1, #1
 800fda8:	2202      	movs	r2, #2
 800fdaa:	f006 fe5c 	bl	8016a66 <LeaveFrame>
 800fdae:	a806      	add	r0, sp, #24
 800fdb0:	2101      	movs	r1, #1
 800fdb2:	2202      	movs	r2, #2
 800fdb4:	e9cd 5406 	strd	r5, r4, [sp, #24]
 800fdb8:	f006 fe55 	bl	8016a66 <LeaveFrame>
 800fdbc:	a802      	add	r0, sp, #8
 800fdbe:	2101      	movs	r1, #1
 800fdc0:	2202      	movs	r2, #2
 800fdc2:	f006 fe50 	bl	8016a66 <LeaveFrame>
 800fdc6:	4620      	mov	r0, r4
 800fdc8:	f005 f89b 	bl	8014f02 <ThrowException>

0800fdcc <ThrowArithmeticException>:
 800fdcc:	b5b0      	push	{r4, r5, r7, lr}
 800fdce:	af02      	add	r7, sp, #8
 800fdd0:	b088      	sub	sp, #32
 800fdd2:	4668      	mov	r0, sp
 800fdd4:	f040 0104 	orr.w	r1, r0, #4
 800fdd8:	f643 6070 	movw	r0, #15984	; 0x3e70
 800fddc:	2500      	movs	r5, #0
 800fdde:	f6c0 0002 	movt	r0, #2050	; 0x802
 800fde2:	e9cd 5500 	strd	r5, r5, [sp]
 800fde6:	f006 fd88 	bl	80168fa <AllocInstance>
 800fdea:	4604      	mov	r4, r0
 800fdec:	e9cd 5402 	strd	r5, r4, [sp, #8]
 800fdf0:	e9cd 5404 	strd	r5, r4, [sp, #16]
 800fdf4:	f7fb f969 	bl	800b0ca <kfun:kotlin.Exception.<init>()kotlin.Exception>
 800fdf8:	a806      	add	r0, sp, #24
 800fdfa:	2101      	movs	r1, #1
 800fdfc:	2202      	movs	r2, #2
 800fdfe:	e9cd 5406 	strd	r5, r4, [sp, #24]
 800fe02:	f006 fe30 	bl	8016a66 <LeaveFrame>
 800fe06:	a804      	add	r0, sp, #16
 800fe08:	2101      	movs	r1, #1
 800fe0a:	2202      	movs	r2, #2
 800fe0c:	f006 fe2b 	bl	8016a66 <LeaveFrame>
 800fe10:	a806      	add	r0, sp, #24
 800fe12:	2101      	movs	r1, #1
 800fe14:	2202      	movs	r2, #2
 800fe16:	e9cd 5406 	strd	r5, r4, [sp, #24]
 800fe1a:	f006 fe24 	bl	8016a66 <LeaveFrame>
 800fe1e:	a802      	add	r0, sp, #8
 800fe20:	2101      	movs	r1, #1
 800fe22:	2202      	movs	r2, #2
 800fe24:	f006 fe1f 	bl	8016a66 <LeaveFrame>
 800fe28:	4620      	mov	r0, r4
 800fe2a:	f005 f86a 	bl	8014f02 <ThrowException>

0800fe2e <PrintThrowable>:
 800fe2e:	b5d0      	push	{r4, r6, r7, lr}
 800fe30:	af02      	add	r7, sp, #8
 800fe32:	b086      	sub	sp, #24
 800fe34:	2100      	movs	r1, #0
 800fe36:	e9cd 1000 	strd	r1, r0, [sp]
 800fe3a:	9105      	str	r1, [sp, #20]
 800fe3c:	e9cd 1003 	strd	r1, r0, [sp, #12]
 800fe40:	a903      	add	r1, sp, #12
 800fe42:	3108      	adds	r1, #8
 800fe44:	f7fa fe45 	bl	800aad2 <kfun:kotlin.toString@kotlin.Any?.()kotlin.String>
 800fe48:	f004 ff0e 	bl	8014c68 <Kotlin_io_Console_println>
 800fe4c:	a803      	add	r0, sp, #12
 800fe4e:	2101      	movs	r1, #1
 800fe50:	2203      	movs	r2, #3
 800fe52:	f006 fe08 	bl	8016a66 <LeaveFrame>
 800fe56:	4668      	mov	r0, sp
 800fe58:	2101      	movs	r1, #1
 800fe5a:	2202      	movs	r2, #2
 800fe5c:	f006 fe03 	bl	8016a66 <LeaveFrame>
 800fe60:	b006      	add	sp, #24
 800fe62:	bdd0      	pop	{r4, r6, r7, pc}
 800fe64:	4604      	mov	r4, r0
 800fe66:	a803      	add	r0, sp, #12
 800fe68:	2101      	movs	r1, #1
 800fe6a:	2203      	movs	r2, #3
 800fe6c:	f006 fdfb 	bl	8016a66 <LeaveFrame>
 800fe70:	4668      	mov	r0, sp
 800fe72:	2101      	movs	r1, #1
 800fe74:	2202      	movs	r2, #2
 800fe76:	f006 fdf6 	bl	8016a66 <LeaveFrame>
 800fe7a:	4620      	mov	r0, r4
 800fe7c:	f7f1 f9b6 	bl	80011ec <_Unwind_Resume>

0800fe80 <kfun:kotlin.Throwable.printStackTrace()>:
 800fe80:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fe82:	af03      	add	r7, sp, #12
 800fe84:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 800fe88:	b099      	sub	sp, #100	; 0x64
 800fe8a:	ae04      	add	r6, sp, #16
 800fe8c:	4604      	mov	r4, r0
 800fe8e:	212c      	movs	r1, #44	; 0x2c
 800fe90:	4630      	mov	r0, r6
 800fe92:	f00b fb31 	bl	801b4f8 <__aeabi_memclr>
 800fe96:	9405      	str	r4, [sp, #20]
 800fe98:	6820      	ldr	r0, [r4, #0]
 800fe9a:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800fe9c:	f106 0108 	add.w	r1, r6, #8
 800fea0:	4620      	mov	r0, r4
 800fea2:	4790      	blx	r2
 800fea4:	f106 0128 	add.w	r1, r6, #40	; 0x28
 800fea8:	9100      	str	r1, [sp, #0]
 800feaa:	f106 0124 	add.w	r1, r6, #36	; 0x24
 800feae:	9101      	str	r1, [sp, #4]
 800feb0:	f106 0120 	add.w	r1, r6, #32
 800feb4:	9102      	str	r1, [sp, #8]
 800feb6:	f106 011c 	add.w	r1, r6, #28
 800feba:	9103      	str	r1, [sp, #12]
 800febc:	f106 0a18 	add.w	sl, r6, #24
 800fec0:	f106 0814 	add.w	r8, r6, #20
 800fec4:	f004 fed0 	bl	8014c68 <Kotlin_io_Console_println>
 800fec8:	9805      	ldr	r0, [sp, #20]
 800feca:	f04f 0900 	mov.w	r9, #0
 800fece:	e9cd 9014 	strd	r9, r0, [sp, #80]	; 0x50
 800fed2:	68c4      	ldr	r4, [r0, #12]
 800fed4:	f106 000c 	add.w	r0, r6, #12
 800fed8:	4621      	mov	r1, r4
 800feda:	f004 fb86 	bl	80145ea <UpdateReturnRef>
 800fede:	a814      	add	r0, sp, #80	; 0x50
 800fee0:	2101      	movs	r1, #1
 800fee2:	2202      	movs	r2, #2
 800fee4:	f006 fdbf 	bl	8016a66 <LeaveFrame>
 800fee8:	f10d 0b3c 	add.w	fp, sp, #60	; 0x3c
 800feec:	f243 0060 	movw	r0, #12384	; 0x3060
 800fef0:	f10b 0108 	add.w	r1, fp, #8
 800fef4:	f6c0 0002 	movt	r0, #2050	; 0x802
 800fef8:	f8cd 9044 	str.w	r9, [sp, #68]	; 0x44
 800fefc:	e9cd 940f 	strd	r9, r4, [sp, #60]	; 0x3c
 800ff00:	f006 fcfb 	bl	80168fa <AllocInstance>
 800ff04:	4605      	mov	r5, r0
 800ff06:	a812      	add	r0, sp, #72	; 0x48
 800ff08:	2101      	movs	r1, #1
 800ff0a:	2202      	movs	r2, #2
 800ff0c:	e9cd 9514 	strd	r9, r5, [sp, #80]	; 0x50
 800ff10:	9416      	str	r4, [sp, #88]	; 0x58
 800ff12:	e9cd 9512 	strd	r9, r5, [sp, #72]	; 0x48
 800ff16:	f006 fda6 	bl	8016a66 <LeaveFrame>
 800ff1a:	f105 000c 	add.w	r0, r5, #12
 800ff1e:	4621      	mov	r1, r4
 800ff20:	f004 f956 	bl	80141d0 <UpdateRef>
 800ff24:	ac14      	add	r4, sp, #80	; 0x50
 800ff26:	2102      	movs	r1, #2
 800ff28:	2203      	movs	r2, #3
 800ff2a:	f8c5 9008 	str.w	r9, [r5, #8]
 800ff2e:	4620      	mov	r0, r4
 800ff30:	f006 fd99 	bl	8016a66 <LeaveFrame>
 800ff34:	f106 0010 	add.w	r0, r6, #16
 800ff38:	4629      	mov	r1, r5
 800ff3a:	f004 fb56 	bl	80145ea <UpdateReturnRef>
 800ff3e:	4658      	mov	r0, fp
 800ff40:	2101      	movs	r1, #1
 800ff42:	2203      	movs	r2, #3
 800ff44:	f006 fd8f 	bl	8016a66 <LeaveFrame>
 800ff48:	4640      	mov	r0, r8
 800ff4a:	4629      	mov	r1, r5
 800ff4c:	f004 f940 	bl	80141d0 <UpdateRef>
 800ff50:	f241 454b 	movw	r5, #5195	; 0x144b
 800ff54:	f242 6bc0 	movw	fp, #9920	; 0x26c0
 800ff58:	f104 0610 	add.w	r6, r4, #16
 800ff5c:	f104 080c 	add.w	r8, r4, #12
 800ff60:	f6c4 756d 	movt	r5, #20333	; 0x4f6d
 800ff64:	f2c2 0b00 	movt	fp, #8192	; 0x2000
 800ff68:	e010      	b.n	800ff8c <kfun:kotlin.Throwable.printStackTrace()+0x10c>
 800ff6a:	4658      	mov	r0, fp
 800ff6c:	4632      	mov	r2, r6
 800ff6e:	f005 f959 	bl	8015224 <Kotlin_String_plusImpl>
 800ff72:	4604      	mov	r4, r0
 800ff74:	9802      	ldr	r0, [sp, #8]
 800ff76:	4621      	mov	r1, r4
 800ff78:	f004 fb37 	bl	80145ea <UpdateReturnRef>
 800ff7c:	a814      	add	r0, sp, #80	; 0x50
 800ff7e:	2102      	movs	r1, #2
 800ff80:	2205      	movs	r2, #5
 800ff82:	f006 fd70 	bl	8016a66 <LeaveFrame>
 800ff86:	4620      	mov	r0, r4
 800ff88:	f004 fe6e 	bl	8014c68 <Kotlin_io_Console_println>
 800ff8c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800ff8e:	f24e 0226 	movw	r2, #57382	; 0xe026
 800ff92:	f2ce 124c 	movt	r2, #57676	; 0xe14c
 800ff96:	462b      	mov	r3, r5
 800ff98:	6820      	ldr	r0, [r4, #0]
 800ff9a:	f006 ff25 	bl	8016de8 <LookupOpenMethod>
 800ff9e:	4601      	mov	r1, r0
 800ffa0:	4620      	mov	r0, r4
 800ffa2:	4788      	blx	r1
 800ffa4:	07c0      	lsls	r0, r0, #31
 800ffa6:	d01f      	beq.n	800ffe8 <kfun:kotlin.Throwable.printStackTrace()+0x168>
 800ffa8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800ffaa:	f246 02d1 	movw	r2, #24785	; 0x60d1
 800ffae:	f243 039f 	movw	r3, #12447	; 0x309f
 800ffb2:	f6c4 22b5 	movt	r2, #19125	; 0x4ab5
 800ffb6:	f2c7 0312 	movt	r3, #28690	; 0x7012
 800ffba:	6820      	ldr	r0, [r4, #0]
 800ffbc:	f006 ff14 	bl	8016de8 <LookupOpenMethod>
 800ffc0:	4602      	mov	r2, r0
 800ffc2:	4620      	mov	r0, r4
 800ffc4:	4651      	mov	r1, sl
 800ffc6:	4790      	blx	r2
 800ffc8:	4601      	mov	r1, r0
 800ffca:	9803      	ldr	r0, [sp, #12]
 800ffcc:	f004 f900 	bl	80141d0 <UpdateRef>
 800ffd0:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800ffd2:	f8cd 9060 	str.w	r9, [sp, #96]	; 0x60
 800ffd6:	e9cd 9b14 	strd	r9, fp, [sp, #80]	; 0x50
 800ffda:	e9cd 0916 	strd	r0, r9, [sp, #88]	; 0x58
 800ffde:	4641      	mov	r1, r8
 800ffe0:	f7fa fd77 	bl	800aad2 <kfun:kotlin.toString@kotlin.Any?.()kotlin.String>
 800ffe4:	4601      	mov	r1, r0
 800ffe6:	e7c0      	b.n	800ff6a <kfun:kotlin.Throwable.printStackTrace()+0xea>
 800ffe8:	9805      	ldr	r0, [sp, #20]
 800ffea:	6801      	ldr	r1, [r0, #0]
 800ffec:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800ffee:	9901      	ldr	r1, [sp, #4]
 800fff0:	4790      	blx	r2
 800fff2:	4601      	mov	r1, r0
 800fff4:	9800      	ldr	r0, [sp, #0]
 800fff6:	f004 f8eb 	bl	80141d0 <UpdateRef>
 800fffa:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800fffc:	b194      	cbz	r4, 8010024 <kfun:kotlin.Throwable.printStackTrace()+0x1a4>
 800fffe:	9805      	ldr	r0, [sp, #20]
 8010000:	2100      	movs	r1, #0
 8010002:	9415      	str	r4, [sp, #84]	; 0x54
 8010004:	9114      	str	r1, [sp, #80]	; 0x50
 8010006:	9016      	str	r0, [sp, #88]	; 0x58
 8010008:	f242 6090 	movw	r0, #9872	; 0x2690
 801000c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010010:	f004 fd0c 	bl	8014a2c <Kotlin_io_Console_print>
 8010014:	4620      	mov	r0, r4
 8010016:	f7ff ff33 	bl	800fe80 <kfun:kotlin.Throwable.printStackTrace()>
 801001a:	a814      	add	r0, sp, #80	; 0x50
 801001c:	2102      	movs	r1, #2
 801001e:	2203      	movs	r2, #3
 8010020:	f006 fd21 	bl	8016a66 <LeaveFrame>
 8010024:	a804      	add	r0, sp, #16
 8010026:	2101      	movs	r1, #1
 8010028:	220b      	movs	r2, #11
 801002a:	f006 fd1c 	bl	8016a66 <LeaveFrame>
 801002e:	b019      	add	sp, #100	; 0x64
 8010030:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 8010034:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010036:	4604      	mov	r4, r0
 8010038:	a814      	add	r0, sp, #80	; 0x50
 801003a:	2102      	movs	r1, #2
 801003c:	2203      	movs	r2, #3
 801003e:	f006 fd12 	bl	8016a66 <LeaveFrame>
 8010042:	e008      	b.n	8010056 <kfun:kotlin.Throwable.printStackTrace()+0x1d6>
 8010044:	e006      	b.n	8010054 <kfun:kotlin.Throwable.printStackTrace()+0x1d4>
 8010046:	4604      	mov	r4, r0
 8010048:	a814      	add	r0, sp, #80	; 0x50
 801004a:	2102      	movs	r1, #2
 801004c:	2205      	movs	r2, #5
 801004e:	f006 fd0a 	bl	8016a66 <LeaveFrame>
 8010052:	e000      	b.n	8010056 <kfun:kotlin.Throwable.printStackTrace()+0x1d6>
 8010054:	4604      	mov	r4, r0
 8010056:	a804      	add	r0, sp, #16
 8010058:	2101      	movs	r1, #1
 801005a:	220b      	movs	r2, #11
 801005c:	f006 fd03 	bl	8016a66 <LeaveFrame>
 8010060:	4620      	mov	r0, r4
 8010062:	f7f1 f8c3 	bl	80011ec <_Unwind_Resume>

08010066 <TheEmptyString>:
 8010066:	b5d0      	push	{r4, r6, r7, lr}
 8010068:	af02      	add	r7, sp, #8
 801006a:	f242 44f8 	movw	r4, #9464	; 0x24f8
 801006e:	f2c2 0400 	movt	r4, #8192	; 0x2000
 8010072:	4621      	mov	r1, r4
 8010074:	f004 fab9 	bl	80145ea <UpdateReturnRef>
 8010078:	4620      	mov	r0, r4
 801007a:	bdd0      	pop	{r4, r6, r7, pc}

0801007c <__unnamed_2>:
 801007c:	b580      	push	{r7, lr}
 801007e:	b160      	cbz	r0, 801009a <__unnamed_2+0x1e>
 8010080:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010084:	2100      	movs	r1, #0
 8010086:	2220      	movs	r2, #32
 8010088:	f006 fde1 	bl	8016c4e <Kotlin_Long_shl_Int>
 801008c:	f240 1240 	movw	r2, #320	; 0x140
 8010090:	f2c2 0200 	movt	r2, #8192	; 0x2000
 8010094:	e9c2 0100 	strd	r0, r1, [r2]
 8010098:	bd80      	pop	{r7, pc}
 801009a:	f240 00a0 	movw	r0, #160	; 0xa0
 801009e:	2100      	movs	r1, #0
 80100a0:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80100a4:	f004 f894 	bl	80141d0 <UpdateRef>
 80100a8:	f240 0008 	movw	r0, #8
 80100ac:	2100      	movs	r1, #0
 80100ae:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80100b2:	f004 f88d 	bl	80141d0 <UpdateRef>
 80100b6:	f240 0004 	movw	r0, #4
 80100ba:	2100      	movs	r1, #0
 80100bc:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80100c0:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80100c4:	f004 b884 	b.w	80141d0 <UpdateRef>

080100c8 <__unnamed_3>:
 80100c8:	2800      	cmp	r0, #0
 80100ca:	bf18      	it	ne
 80100cc:	4770      	bxne	lr
 80100ce:	f240 0008 	movw	r0, #8
 80100d2:	2100      	movs	r1, #0
 80100d4:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80100d8:	f004 b87a 	b.w	80141d0 <UpdateRef>

080100dc <__unnamed_4>:
 80100dc:	2800      	cmp	r0, #0
 80100de:	bf18      	it	ne
 80100e0:	4770      	bxne	lr
 80100e2:	b580      	push	{r7, lr}
 80100e4:	f240 0014 	movw	r0, #20
 80100e8:	2100      	movs	r1, #0
 80100ea:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80100ee:	f004 f86f 	bl	80141d0 <UpdateRef>
 80100f2:	f240 0018 	movw	r0, #24
 80100f6:	2100      	movs	r1, #0
 80100f8:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80100fc:	f004 f868 	bl	80141d0 <UpdateRef>
 8010100:	f240 001c 	movw	r0, #28
 8010104:	2100      	movs	r1, #0
 8010106:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801010a:	f004 f861 	bl	80141d0 <UpdateRef>
 801010e:	f240 0020 	movw	r0, #32
 8010112:	2100      	movs	r1, #0
 8010114:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010118:	f004 f85a 	bl	80141d0 <UpdateRef>
 801011c:	f240 0024 	movw	r0, #36	; 0x24
 8010120:	2100      	movs	r1, #0
 8010122:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010126:	f004 f853 	bl	80141d0 <UpdateRef>
 801012a:	f240 0028 	movw	r0, #40	; 0x28
 801012e:	2100      	movs	r1, #0
 8010130:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010134:	f004 f84c 	bl	80141d0 <UpdateRef>
 8010138:	f240 002c 	movw	r0, #44	; 0x2c
 801013c:	2100      	movs	r1, #0
 801013e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010142:	f004 f845 	bl	80141d0 <UpdateRef>
 8010146:	f240 0038 	movw	r0, #56	; 0x38
 801014a:	2100      	movs	r1, #0
 801014c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010150:	f004 f83e 	bl	80141d0 <UpdateRef>
 8010154:	f240 0030 	movw	r0, #48	; 0x30
 8010158:	2100      	movs	r1, #0
 801015a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801015e:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8010162:	f004 b835 	b.w	80141d0 <UpdateRef>

08010166 <__unnamed_5>:
 8010166:	2800      	cmp	r0, #0
 8010168:	bf18      	it	ne
 801016a:	4770      	bxne	lr
 801016c:	b580      	push	{r7, lr}
 801016e:	f240 0034 	movw	r0, #52	; 0x34
 8010172:	2100      	movs	r1, #0
 8010174:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010178:	f004 f82a 	bl	80141d0 <UpdateRef>
 801017c:	f240 0038 	movw	r0, #56	; 0x38
 8010180:	2100      	movs	r1, #0
 8010182:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010186:	f004 f823 	bl	80141d0 <UpdateRef>
 801018a:	f240 0030 	movw	r0, #48	; 0x30
 801018e:	2100      	movs	r1, #0
 8010190:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010194:	f004 f81c 	bl	80141d0 <UpdateRef>
 8010198:	f240 0018 	movw	r0, #24
 801019c:	2100      	movs	r1, #0
 801019e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80101a2:	f004 f815 	bl	80141d0 <UpdateRef>
 80101a6:	f240 0028 	movw	r0, #40	; 0x28
 80101aa:	2100      	movs	r1, #0
 80101ac:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80101b0:	f004 f80e 	bl	80141d0 <UpdateRef>
 80101b4:	f240 001c 	movw	r0, #28
 80101b8:	2100      	movs	r1, #0
 80101ba:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80101be:	f004 f807 	bl	80141d0 <UpdateRef>
 80101c2:	f240 0020 	movw	r0, #32
 80101c6:	2100      	movs	r1, #0
 80101c8:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80101cc:	f004 f800 	bl	80141d0 <UpdateRef>
 80101d0:	f240 0024 	movw	r0, #36	; 0x24
 80101d4:	2100      	movs	r1, #0
 80101d6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80101da:	f003 fff9 	bl	80141d0 <UpdateRef>
 80101de:	f240 002c 	movw	r0, #44	; 0x2c
 80101e2:	2100      	movs	r1, #0
 80101e4:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80101e8:	f003 fff2 	bl	80141d0 <UpdateRef>
 80101ec:	f240 0048 	movw	r0, #72	; 0x48
 80101f0:	2100      	movs	r1, #0
 80101f2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80101f6:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80101fa:	f003 bfe9 	b.w	80141d0 <UpdateRef>

080101fe <__unnamed_6>:
 80101fe:	2800      	cmp	r0, #0
 8010200:	bf18      	it	ne
 8010202:	4770      	bxne	lr
 8010204:	b580      	push	{r7, lr}
 8010206:	f240 0018 	movw	r0, #24
 801020a:	2100      	movs	r1, #0
 801020c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010210:	f003 ffde 	bl	80141d0 <UpdateRef>
 8010214:	f240 001c 	movw	r0, #28
 8010218:	2100      	movs	r1, #0
 801021a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801021e:	f003 ffd7 	bl	80141d0 <UpdateRef>
 8010222:	f240 0020 	movw	r0, #32
 8010226:	2100      	movs	r1, #0
 8010228:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801022c:	f003 ffd0 	bl	80141d0 <UpdateRef>
 8010230:	f240 0024 	movw	r0, #36	; 0x24
 8010234:	2100      	movs	r1, #0
 8010236:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801023a:	f003 ffc9 	bl	80141d0 <UpdateRef>
 801023e:	f240 0028 	movw	r0, #40	; 0x28
 8010242:	2100      	movs	r1, #0
 8010244:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010248:	f003 ffc2 	bl	80141d0 <UpdateRef>
 801024c:	f240 002c 	movw	r0, #44	; 0x2c
 8010250:	2100      	movs	r1, #0
 8010252:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010256:	f003 ffbb 	bl	80141d0 <UpdateRef>
 801025a:	f240 0030 	movw	r0, #48	; 0x30
 801025e:	2100      	movs	r1, #0
 8010260:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010264:	f003 ffb4 	bl	80141d0 <UpdateRef>
 8010268:	f240 0038 	movw	r0, #56	; 0x38
 801026c:	2100      	movs	r1, #0
 801026e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010272:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8010276:	f003 bfab 	b.w	80141d0 <UpdateRef>

0801027a <__unnamed_7>:
 801027a:	2800      	cmp	r0, #0
 801027c:	bf18      	it	ne
 801027e:	4770      	bxne	lr
 8010280:	f240 0038 	movw	r0, #56	; 0x38
 8010284:	2100      	movs	r1, #0
 8010286:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801028a:	f003 bfa1 	b.w	80141d0 <UpdateRef>

0801028e <__unnamed_8>:
 801028e:	2800      	cmp	r0, #0
 8010290:	bf18      	it	ne
 8010292:	4770      	bxne	lr
 8010294:	b580      	push	{r7, lr}
 8010296:	f240 003c 	movw	r0, #60	; 0x3c
 801029a:	2100      	movs	r1, #0
 801029c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80102a0:	f003 ff96 	bl	80141d0 <UpdateRef>
 80102a4:	f240 0040 	movw	r0, #64	; 0x40
 80102a8:	2100      	movs	r1, #0
 80102aa:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80102ae:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80102b2:	f003 bf8d 	b.w	80141d0 <UpdateRef>

080102b6 <__unnamed_9>:
 80102b6:	2800      	cmp	r0, #0
 80102b8:	bf18      	it	ne
 80102ba:	4770      	bxne	lr
 80102bc:	f240 0038 	movw	r0, #56	; 0x38
 80102c0:	2100      	movs	r1, #0
 80102c2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80102c6:	f003 bf83 	b.w	80141d0 <UpdateRef>

080102ca <__unnamed_10>:
 80102ca:	2800      	cmp	r0, #0
 80102cc:	bf18      	it	ne
 80102ce:	4770      	bxne	lr
 80102d0:	b580      	push	{r7, lr}
 80102d2:	f240 0038 	movw	r0, #56	; 0x38
 80102d6:	2100      	movs	r1, #0
 80102d8:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80102dc:	f003 ff78 	bl	80141d0 <UpdateRef>
 80102e0:	f240 0024 	movw	r0, #36	; 0x24
 80102e4:	2100      	movs	r1, #0
 80102e6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80102ea:	f003 ff71 	bl	80141d0 <UpdateRef>
 80102ee:	f240 0030 	movw	r0, #48	; 0x30
 80102f2:	2100      	movs	r1, #0
 80102f4:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80102f8:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80102fc:	f003 bf68 	b.w	80141d0 <UpdateRef>

08010300 <__unnamed_11>:
 8010300:	2800      	cmp	r0, #0
 8010302:	bf18      	it	ne
 8010304:	4770      	bxne	lr
 8010306:	f240 000c 	movw	r0, #12
 801030a:	2100      	movs	r1, #0
 801030c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010310:	f003 bf5e 	b.w	80141d0 <UpdateRef>

08010314 <__unnamed_12>:
 8010314:	2800      	cmp	r0, #0
 8010316:	bf18      	it	ne
 8010318:	4770      	bxne	lr
 801031a:	b580      	push	{r7, lr}
 801031c:	f240 0044 	movw	r0, #68	; 0x44
 8010320:	2100      	movs	r1, #0
 8010322:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010326:	f003 ff53 	bl	80141d0 <UpdateRef>
 801032a:	f240 00d8 	movw	r0, #216	; 0xd8
 801032e:	2100      	movs	r1, #0
 8010330:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010334:	f003 ff4c 	bl	80141d0 <UpdateRef>
 8010338:	f240 0058 	movw	r0, #88	; 0x58
 801033c:	2100      	movs	r1, #0
 801033e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010342:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8010346:	f003 bf43 	b.w	80141d0 <UpdateRef>

0801034a <__unnamed_13>:
 801034a:	2800      	cmp	r0, #0
 801034c:	bf18      	it	ne
 801034e:	4770      	bxne	lr
 8010350:	f240 0048 	movw	r0, #72	; 0x48
 8010354:	2100      	movs	r1, #0
 8010356:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801035a:	f003 bf39 	b.w	80141d0 <UpdateRef>

0801035e <__unnamed_14>:
 801035e:	2800      	cmp	r0, #0
 8010360:	bf18      	it	ne
 8010362:	4770      	bxne	lr
 8010364:	b580      	push	{r7, lr}
 8010366:	f240 004c 	movw	r0, #76	; 0x4c
 801036a:	2100      	movs	r1, #0
 801036c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010370:	f003 ff2e 	bl	80141d0 <UpdateRef>
 8010374:	f240 0094 	movw	r0, #148	; 0x94
 8010378:	2100      	movs	r1, #0
 801037a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801037e:	f003 ff27 	bl	80141d0 <UpdateRef>
 8010382:	f240 00a0 	movw	r0, #160	; 0xa0
 8010386:	2100      	movs	r1, #0
 8010388:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801038c:	f003 ff20 	bl	80141d0 <UpdateRef>
 8010390:	f240 009c 	movw	r0, #156	; 0x9c
 8010394:	2100      	movs	r1, #0
 8010396:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801039a:	f003 ff19 	bl	80141d0 <UpdateRef>
 801039e:	f240 0054 	movw	r0, #84	; 0x54
 80103a2:	2100      	movs	r1, #0
 80103a4:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80103a8:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80103ac:	f003 bf10 	b.w	80141d0 <UpdateRef>

080103b0 <__unnamed_15>:
 80103b0:	2800      	cmp	r0, #0
 80103b2:	bf18      	it	ne
 80103b4:	4770      	bxne	lr
 80103b6:	f240 0050 	movw	r0, #80	; 0x50
 80103ba:	2100      	movs	r1, #0
 80103bc:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80103c0:	f003 bf06 	b.w	80141d0 <UpdateRef>

080103c4 <__unnamed_16>:
 80103c4:	2800      	cmp	r0, #0
 80103c6:	bf18      	it	ne
 80103c8:	4770      	bxne	lr
 80103ca:	b580      	push	{r7, lr}
 80103cc:	f240 0054 	movw	r0, #84	; 0x54
 80103d0:	2100      	movs	r1, #0
 80103d2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80103d6:	f003 fefb 	bl	80141d0 <UpdateRef>
 80103da:	f240 0098 	movw	r0, #152	; 0x98
 80103de:	2100      	movs	r1, #0
 80103e0:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80103e4:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80103e8:	f003 bef2 	b.w	80141d0 <UpdateRef>

080103ec <__unnamed_17>:
 80103ec:	2800      	cmp	r0, #0
 80103ee:	bf18      	it	ne
 80103f0:	4770      	bxne	lr
 80103f2:	f240 0058 	movw	r0, #88	; 0x58
 80103f6:	2100      	movs	r1, #0
 80103f8:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80103fc:	f003 bee8 	b.w	80141d0 <UpdateRef>

08010400 <__unnamed_18>:
 8010400:	2800      	cmp	r0, #0
 8010402:	bf18      	it	ne
 8010404:	4770      	bxne	lr
 8010406:	f240 005c 	movw	r0, #92	; 0x5c
 801040a:	2100      	movs	r1, #0
 801040c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010410:	f003 bede 	b.w	80141d0 <UpdateRef>

08010414 <__unnamed_19>:
 8010414:	2800      	cmp	r0, #0
 8010416:	bf18      	it	ne
 8010418:	4770      	bxne	lr
 801041a:	f240 0060 	movw	r0, #96	; 0x60
 801041e:	2100      	movs	r1, #0
 8010420:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010424:	f003 bed4 	b.w	80141d0 <UpdateRef>

08010428 <__unnamed_20>:
 8010428:	2800      	cmp	r0, #0
 801042a:	bf18      	it	ne
 801042c:	4770      	bxne	lr
 801042e:	b580      	push	{r7, lr}
 8010430:	f240 0060 	movw	r0, #96	; 0x60
 8010434:	2100      	movs	r1, #0
 8010436:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801043a:	f003 fec9 	bl	80141d0 <UpdateRef>
 801043e:	f240 1010 	movw	r0, #272	; 0x110
 8010442:	2100      	movs	r1, #0
 8010444:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010448:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 801044c:	f003 bec0 	b.w	80141d0 <UpdateRef>

08010450 <__unnamed_21>:
 8010450:	2800      	cmp	r0, #0
 8010452:	bf18      	it	ne
 8010454:	4770      	bxne	lr
 8010456:	b580      	push	{r7, lr}
 8010458:	f240 0064 	movw	r0, #100	; 0x64
 801045c:	2100      	movs	r1, #0
 801045e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010462:	f003 feb5 	bl	80141d0 <UpdateRef>
 8010466:	f240 0060 	movw	r0, #96	; 0x60
 801046a:	2100      	movs	r1, #0
 801046c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010470:	f003 feae 	bl	80141d0 <UpdateRef>
 8010474:	f240 0068 	movw	r0, #104	; 0x68
 8010478:	2100      	movs	r1, #0
 801047a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801047e:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8010482:	f003 bea5 	b.w	80141d0 <UpdateRef>

08010486 <__unnamed_22>:
 8010486:	2800      	cmp	r0, #0
 8010488:	bf18      	it	ne
 801048a:	4770      	bxne	lr
 801048c:	f240 006c 	movw	r0, #108	; 0x6c
 8010490:	2100      	movs	r1, #0
 8010492:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010496:	f003 be9b 	b.w	80141d0 <UpdateRef>

0801049a <__unnamed_23>:
 801049a:	2800      	cmp	r0, #0
 801049c:	bf18      	it	ne
 801049e:	4770      	bxne	lr
 80104a0:	f240 0070 	movw	r0, #112	; 0x70
 80104a4:	2100      	movs	r1, #0
 80104a6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80104aa:	f003 be91 	b.w	80141d0 <UpdateRef>

080104ae <__unnamed_24>:
 80104ae:	2800      	cmp	r0, #0
 80104b0:	bf18      	it	ne
 80104b2:	4770      	bxne	lr
 80104b4:	f240 0074 	movw	r0, #116	; 0x74
 80104b8:	2100      	movs	r1, #0
 80104ba:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80104be:	f003 be87 	b.w	80141d0 <UpdateRef>

080104c2 <__unnamed_25>:
 80104c2:	2800      	cmp	r0, #0
 80104c4:	bf18      	it	ne
 80104c6:	4770      	bxne	lr
 80104c8:	b580      	push	{r7, lr}
 80104ca:	f240 00a0 	movw	r0, #160	; 0xa0
 80104ce:	2100      	movs	r1, #0
 80104d0:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80104d4:	f003 fe7c 	bl	80141d0 <UpdateRef>
 80104d8:	f240 0094 	movw	r0, #148	; 0x94
 80104dc:	2100      	movs	r1, #0
 80104de:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80104e2:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80104e6:	f003 be73 	b.w	80141d0 <UpdateRef>

080104ea <__unnamed_26>:
 80104ea:	2800      	cmp	r0, #0
 80104ec:	bf18      	it	ne
 80104ee:	4770      	bxne	lr
 80104f0:	f240 0078 	movw	r0, #120	; 0x78
 80104f4:	2100      	movs	r1, #0
 80104f6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80104fa:	f003 be69 	b.w	80141d0 <UpdateRef>

080104fe <__unnamed_27>:
 80104fe:	2800      	cmp	r0, #0
 8010500:	bf18      	it	ne
 8010502:	4770      	bxne	lr
 8010504:	f240 000c 	movw	r0, #12
 8010508:	2100      	movs	r1, #0
 801050a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801050e:	f003 be5f 	b.w	80141d0 <UpdateRef>

08010512 <__unnamed_28>:
 8010512:	2800      	cmp	r0, #0
 8010514:	bf18      	it	ne
 8010516:	4770      	bxne	lr
 8010518:	f240 007c 	movw	r0, #124	; 0x7c
 801051c:	2100      	movs	r1, #0
 801051e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010522:	f003 be55 	b.w	80141d0 <UpdateRef>

08010526 <__unnamed_29>:
 8010526:	2800      	cmp	r0, #0
 8010528:	bf18      	it	ne
 801052a:	4770      	bxne	lr
 801052c:	f240 0080 	movw	r0, #128	; 0x80
 8010530:	2100      	movs	r1, #0
 8010532:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010536:	f003 be4b 	b.w	80141d0 <UpdateRef>

0801053a <__unnamed_30>:
 801053a:	2800      	cmp	r0, #0
 801053c:	bf18      	it	ne
 801053e:	4770      	bxne	lr
 8010540:	b580      	push	{r7, lr}
 8010542:	f240 0084 	movw	r0, #132	; 0x84
 8010546:	2100      	movs	r1, #0
 8010548:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801054c:	f003 fe40 	bl	80141d0 <UpdateRef>
 8010550:	f240 0088 	movw	r0, #136	; 0x88
 8010554:	2100      	movs	r1, #0
 8010556:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801055a:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 801055e:	f003 be37 	b.w	80141d0 <UpdateRef>

08010562 <__unnamed_31>:
 8010562:	2800      	cmp	r0, #0
 8010564:	bf18      	it	ne
 8010566:	4770      	bxne	lr
 8010568:	b580      	push	{r7, lr}
 801056a:	f240 00a0 	movw	r0, #160	; 0xa0
 801056e:	2100      	movs	r1, #0
 8010570:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010574:	f003 fe2c 	bl	80141d0 <UpdateRef>
 8010578:	f240 009c 	movw	r0, #156	; 0x9c
 801057c:	2100      	movs	r1, #0
 801057e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010582:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8010586:	f003 be23 	b.w	80141d0 <UpdateRef>

0801058a <__unnamed_32>:
 801058a:	2800      	cmp	r0, #0
 801058c:	bf18      	it	ne
 801058e:	4770      	bxne	lr
 8010590:	b580      	push	{r7, lr}
 8010592:	f240 008c 	movw	r0, #140	; 0x8c
 8010596:	2100      	movs	r1, #0
 8010598:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801059c:	f003 fe18 	bl	80141d0 <UpdateRef>
 80105a0:	f240 0090 	movw	r0, #144	; 0x90
 80105a4:	2100      	movs	r1, #0
 80105a6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80105aa:	f003 fe11 	bl	80141d0 <UpdateRef>
 80105ae:	f240 0094 	movw	r0, #148	; 0x94
 80105b2:	2100      	movs	r1, #0
 80105b4:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80105b8:	f003 fe0a 	bl	80141d0 <UpdateRef>
 80105bc:	f240 0098 	movw	r0, #152	; 0x98
 80105c0:	2100      	movs	r1, #0
 80105c2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80105c6:	f003 fe03 	bl	80141d0 <UpdateRef>
 80105ca:	f240 009c 	movw	r0, #156	; 0x9c
 80105ce:	2100      	movs	r1, #0
 80105d0:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80105d4:	f003 fdfc 	bl	80141d0 <UpdateRef>
 80105d8:	f240 005c 	movw	r0, #92	; 0x5c
 80105dc:	2100      	movs	r1, #0
 80105de:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80105e2:	f003 fdf5 	bl	80141d0 <UpdateRef>
 80105e6:	f240 00a0 	movw	r0, #160	; 0xa0
 80105ea:	2100      	movs	r1, #0
 80105ec:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80105f0:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80105f4:	f003 bdec 	b.w	80141d0 <UpdateRef>

080105f8 <__unnamed_33>:
 80105f8:	2800      	cmp	r0, #0
 80105fa:	bf18      	it	ne
 80105fc:	4770      	bxne	lr
 80105fe:	f240 00a4 	movw	r0, #164	; 0xa4
 8010602:	2100      	movs	r1, #0
 8010604:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010608:	f003 bde2 	b.w	80141d0 <UpdateRef>

0801060c <__unnamed_34>:
 801060c:	2800      	cmp	r0, #0
 801060e:	bf18      	it	ne
 8010610:	4770      	bxne	lr
 8010612:	b580      	push	{r7, lr}
 8010614:	f240 00a8 	movw	r0, #168	; 0xa8
 8010618:	2100      	movs	r1, #0
 801061a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801061e:	f003 fdd7 	bl	80141d0 <UpdateRef>
 8010622:	f240 00ac 	movw	r0, #172	; 0xac
 8010626:	2100      	movs	r1, #0
 8010628:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801062c:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8010630:	f003 bdce 	b.w	80141d0 <UpdateRef>

08010634 <__unnamed_35>:
 8010634:	2800      	cmp	r0, #0
 8010636:	bf18      	it	ne
 8010638:	4770      	bxne	lr
 801063a:	f240 00b0 	movw	r0, #176	; 0xb0
 801063e:	2100      	movs	r1, #0
 8010640:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010644:	f003 bdc4 	b.w	80141d0 <UpdateRef>

08010648 <__unnamed_36>:
 8010648:	2800      	cmp	r0, #0
 801064a:	bf18      	it	ne
 801064c:	4770      	bxne	lr
 801064e:	f240 00b4 	movw	r0, #180	; 0xb4
 8010652:	2100      	movs	r1, #0
 8010654:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010658:	f003 bdba 	b.w	80141d0 <UpdateRef>

0801065c <__unnamed_37>:
 801065c:	2800      	cmp	r0, #0
 801065e:	bf18      	it	ne
 8010660:	4770      	bxne	lr
 8010662:	f240 00b8 	movw	r0, #184	; 0xb8
 8010666:	2100      	movs	r1, #0
 8010668:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801066c:	f003 bdb0 	b.w	80141d0 <UpdateRef>

08010670 <__unnamed_38>:
 8010670:	2800      	cmp	r0, #0
 8010672:	bf18      	it	ne
 8010674:	4770      	bxne	lr
 8010676:	b580      	push	{r7, lr}
 8010678:	f240 00bc 	movw	r0, #188	; 0xbc
 801067c:	2100      	movs	r1, #0
 801067e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010682:	f003 fda5 	bl	80141d0 <UpdateRef>
 8010686:	f240 00c0 	movw	r0, #192	; 0xc0
 801068a:	2100      	movs	r1, #0
 801068c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010690:	f003 fd9e 	bl	80141d0 <UpdateRef>
 8010694:	f240 00a0 	movw	r0, #160	; 0xa0
 8010698:	2100      	movs	r1, #0
 801069a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801069e:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80106a2:	f003 bd95 	b.w	80141d0 <UpdateRef>

080106a6 <__unnamed_39>:
 80106a6:	2800      	cmp	r0, #0
 80106a8:	bf18      	it	ne
 80106aa:	4770      	bxne	lr
 80106ac:	f240 00c4 	movw	r0, #196	; 0xc4
 80106b0:	2100      	movs	r1, #0
 80106b2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80106b6:	f003 bd8b 	b.w	80141d0 <UpdateRef>

080106ba <__unnamed_40>:
 80106ba:	2800      	cmp	r0, #0
 80106bc:	bf18      	it	ne
 80106be:	4770      	bxne	lr
 80106c0:	b580      	push	{r7, lr}
 80106c2:	f240 00c8 	movw	r0, #200	; 0xc8
 80106c6:	2100      	movs	r1, #0
 80106c8:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80106cc:	f003 fd80 	bl	80141d0 <UpdateRef>
 80106d0:	f240 00cc 	movw	r0, #204	; 0xcc
 80106d4:	2100      	movs	r1, #0
 80106d6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80106da:	f003 fd79 	bl	80141d0 <UpdateRef>
 80106de:	f240 00c0 	movw	r0, #192	; 0xc0
 80106e2:	2100      	movs	r1, #0
 80106e4:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80106e8:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80106ec:	f003 bd70 	b.w	80141d0 <UpdateRef>

080106f0 <__unnamed_41>:
 80106f0:	2800      	cmp	r0, #0
 80106f2:	bf18      	it	ne
 80106f4:	4770      	bxne	lr
 80106f6:	b580      	push	{r7, lr}
 80106f8:	f240 00cc 	movw	r0, #204	; 0xcc
 80106fc:	2100      	movs	r1, #0
 80106fe:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010702:	f003 fd65 	bl	80141d0 <UpdateRef>
 8010706:	f240 00bc 	movw	r0, #188	; 0xbc
 801070a:	2100      	movs	r1, #0
 801070c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010710:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8010714:	f003 bd5c 	b.w	80141d0 <UpdateRef>

08010718 <__unnamed_42>:
 8010718:	2800      	cmp	r0, #0
 801071a:	bf18      	it	ne
 801071c:	4770      	bxne	lr
 801071e:	b580      	push	{r7, lr}
 8010720:	f240 00bc 	movw	r0, #188	; 0xbc
 8010724:	2100      	movs	r1, #0
 8010726:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801072a:	f003 fd51 	bl	80141d0 <UpdateRef>
 801072e:	f240 00b4 	movw	r0, #180	; 0xb4
 8010732:	2100      	movs	r1, #0
 8010734:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010738:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 801073c:	f003 bd48 	b.w	80141d0 <UpdateRef>

08010740 <__unnamed_43>:
 8010740:	2800      	cmp	r0, #0
 8010742:	bf18      	it	ne
 8010744:	4770      	bxne	lr
 8010746:	b580      	push	{r7, lr}
 8010748:	f240 00d0 	movw	r0, #208	; 0xd0
 801074c:	2100      	movs	r1, #0
 801074e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010752:	f003 fd3d 	bl	80141d0 <UpdateRef>
 8010756:	f240 00d4 	movw	r0, #212	; 0xd4
 801075a:	2100      	movs	r1, #0
 801075c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010760:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8010764:	f003 bd34 	b.w	80141d0 <UpdateRef>

08010768 <__unnamed_44>:
 8010768:	2800      	cmp	r0, #0
 801076a:	bf18      	it	ne
 801076c:	4770      	bxne	lr
 801076e:	f240 00d8 	movw	r0, #216	; 0xd8
 8010772:	2100      	movs	r1, #0
 8010774:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010778:	f003 bd2a 	b.w	80141d0 <UpdateRef>

0801077c <__unnamed_45>:
 801077c:	2800      	cmp	r0, #0
 801077e:	bf18      	it	ne
 8010780:	4770      	bxne	lr
 8010782:	b580      	push	{r7, lr}
 8010784:	f240 00dc 	movw	r0, #220	; 0xdc
 8010788:	2100      	movs	r1, #0
 801078a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801078e:	f003 fd1f 	bl	80141d0 <UpdateRef>
 8010792:	f240 00d8 	movw	r0, #216	; 0xd8
 8010796:	2100      	movs	r1, #0
 8010798:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801079c:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80107a0:	f003 bd16 	b.w	80141d0 <UpdateRef>

080107a4 <__unnamed_46>:
 80107a4:	2800      	cmp	r0, #0
 80107a6:	bf18      	it	ne
 80107a8:	4770      	bxne	lr
 80107aa:	f240 00dc 	movw	r0, #220	; 0xdc
 80107ae:	2100      	movs	r1, #0
 80107b0:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80107b4:	f003 bd0c 	b.w	80141d0 <UpdateRef>

080107b8 <__unnamed_47>:
 80107b8:	b5b0      	push	{r4, r5, r7, lr}
 80107ba:	b084      	sub	sp, #16
 80107bc:	2500      	movs	r5, #0
 80107be:	2800      	cmp	r0, #0
 80107c0:	e9cd 5500 	strd	r5, r5, [sp]
 80107c4:	d014      	beq.n	80107f0 <__unnamed_47+0x38>
 80107c6:	4668      	mov	r0, sp
 80107c8:	f040 0104 	orr.w	r1, r0, #4
 80107cc:	f241 5030 	movw	r0, #5424	; 0x1530
 80107d0:	f6c0 0002 	movt	r0, #2050	; 0x802
 80107d4:	f006 f891 	bl	80168fa <AllocInstance>
 80107d8:	4604      	mov	r4, r0
 80107da:	a802      	add	r0, sp, #8
 80107dc:	2101      	movs	r1, #1
 80107de:	2202      	movs	r2, #2
 80107e0:	e9cd 5402 	strd	r5, r4, [sp, #8]
 80107e4:	f006 f93f 	bl	8016a66 <LeaveFrame>
 80107e8:	f240 1048 	movw	r0, #328	; 0x148
 80107ec:	4621      	mov	r1, r4
 80107ee:	e002      	b.n	80107f6 <__unnamed_47+0x3e>
 80107f0:	f240 1048 	movw	r0, #328	; 0x148
 80107f4:	2100      	movs	r1, #0
 80107f6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80107fa:	f003 fce9 	bl	80141d0 <UpdateRef>
 80107fe:	4668      	mov	r0, sp
 8010800:	2100      	movs	r1, #0
 8010802:	2202      	movs	r2, #2
 8010804:	f006 f92f 	bl	8016a66 <LeaveFrame>
 8010808:	b004      	add	sp, #16
 801080a:	bdb0      	pop	{r4, r5, r7, pc}

0801080c <__unnamed_48>:
 801080c:	2800      	cmp	r0, #0
 801080e:	bf18      	it	ne
 8010810:	4770      	bxne	lr
 8010812:	b580      	push	{r7, lr}
 8010814:	f240 00a0 	movw	r0, #160	; 0xa0
 8010818:	2100      	movs	r1, #0
 801081a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801081e:	f003 fcd7 	bl	80141d0 <UpdateRef>
 8010822:	f240 0094 	movw	r0, #148	; 0x94
 8010826:	2100      	movs	r1, #0
 8010828:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801082c:	f003 fcd0 	bl	80141d0 <UpdateRef>
 8010830:	f240 0098 	movw	r0, #152	; 0x98
 8010834:	2100      	movs	r1, #0
 8010836:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801083a:	f003 fcc9 	bl	80141d0 <UpdateRef>
 801083e:	f240 009c 	movw	r0, #156	; 0x9c
 8010842:	2100      	movs	r1, #0
 8010844:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010848:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 801084c:	f003 bcc0 	b.w	80141d0 <UpdateRef>

08010850 <__unnamed_49>:
 8010850:	2800      	cmp	r0, #0
 8010852:	bf18      	it	ne
 8010854:	4770      	bxne	lr
 8010856:	f240 00e0 	movw	r0, #224	; 0xe0
 801085a:	2100      	movs	r1, #0
 801085c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010860:	f003 bcb6 	b.w	80141d0 <UpdateRef>

08010864 <__unnamed_50>:
 8010864:	2800      	cmp	r0, #0
 8010866:	bf18      	it	ne
 8010868:	4770      	bxne	lr
 801086a:	b580      	push	{r7, lr}
 801086c:	f240 00e4 	movw	r0, #228	; 0xe4
 8010870:	2100      	movs	r1, #0
 8010872:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010876:	f003 fcab 	bl	80141d0 <UpdateRef>
 801087a:	f240 0010 	movw	r0, #16
 801087e:	2100      	movs	r1, #0
 8010880:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010884:	f003 fca4 	bl	80141d0 <UpdateRef>
 8010888:	f240 00e8 	movw	r0, #232	; 0xe8
 801088c:	2100      	movs	r1, #0
 801088e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010892:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8010896:	f003 bc9b 	b.w	80141d0 <UpdateRef>

0801089a <__unnamed_51>:
 801089a:	2800      	cmp	r0, #0
 801089c:	bf18      	it	ne
 801089e:	4770      	bxne	lr
 80108a0:	b580      	push	{r7, lr}
 80108a2:	f240 00ec 	movw	r0, #236	; 0xec
 80108a6:	2100      	movs	r1, #0
 80108a8:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80108ac:	f003 fc90 	bl	80141d0 <UpdateRef>
 80108b0:	f240 00f0 	movw	r0, #240	; 0xf0
 80108b4:	2100      	movs	r1, #0
 80108b6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80108ba:	f003 fc89 	bl	80141d0 <UpdateRef>
 80108be:	f240 00f4 	movw	r0, #244	; 0xf4
 80108c2:	2100      	movs	r1, #0
 80108c4:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80108c8:	f003 fc82 	bl	80141d0 <UpdateRef>
 80108cc:	f240 0010 	movw	r0, #16
 80108d0:	2100      	movs	r1, #0
 80108d2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80108d6:	f003 fc7b 	bl	80141d0 <UpdateRef>
 80108da:	f240 00e8 	movw	r0, #232	; 0xe8
 80108de:	2100      	movs	r1, #0
 80108e0:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80108e4:	f003 fc74 	bl	80141d0 <UpdateRef>
 80108e8:	f240 00e4 	movw	r0, #228	; 0xe4
 80108ec:	2100      	movs	r1, #0
 80108ee:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80108f2:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80108f6:	f003 bc6b 	b.w	80141d0 <UpdateRef>

080108fa <__unnamed_52>:
 80108fa:	2800      	cmp	r0, #0
 80108fc:	bf18      	it	ne
 80108fe:	4770      	bxne	lr
 8010900:	b580      	push	{r7, lr}
 8010902:	f240 00ec 	movw	r0, #236	; 0xec
 8010906:	2100      	movs	r1, #0
 8010908:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801090c:	f003 fc60 	bl	80141d0 <UpdateRef>
 8010910:	f240 0094 	movw	r0, #148	; 0x94
 8010914:	2100      	movs	r1, #0
 8010916:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801091a:	f003 fc59 	bl	80141d0 <UpdateRef>
 801091e:	f240 00f0 	movw	r0, #240	; 0xf0
 8010922:	2100      	movs	r1, #0
 8010924:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010928:	f003 fc52 	bl	80141d0 <UpdateRef>
 801092c:	f240 0098 	movw	r0, #152	; 0x98
 8010930:	2100      	movs	r1, #0
 8010932:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010936:	f003 fc4b 	bl	80141d0 <UpdateRef>
 801093a:	f240 00f4 	movw	r0, #244	; 0xf4
 801093e:	2100      	movs	r1, #0
 8010940:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010944:	f003 fc44 	bl	80141d0 <UpdateRef>
 8010948:	f240 00e8 	movw	r0, #232	; 0xe8
 801094c:	2100      	movs	r1, #0
 801094e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010952:	f003 fc3d 	bl	80141d0 <UpdateRef>
 8010956:	f240 00e4 	movw	r0, #228	; 0xe4
 801095a:	2100      	movs	r1, #0
 801095c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010960:	f003 fc36 	bl	80141d0 <UpdateRef>
 8010964:	f240 008c 	movw	r0, #140	; 0x8c
 8010968:	2100      	movs	r1, #0
 801096a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801096e:	f003 fc2f 	bl	80141d0 <UpdateRef>
 8010972:	f240 0090 	movw	r0, #144	; 0x90
 8010976:	2100      	movs	r1, #0
 8010978:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801097c:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8010980:	f003 bc26 	b.w	80141d0 <UpdateRef>

08010984 <__unnamed_53>:
 8010984:	2800      	cmp	r0, #0
 8010986:	bf18      	it	ne
 8010988:	4770      	bxne	lr
 801098a:	b580      	push	{r7, lr}
 801098c:	f240 00f8 	movw	r0, #248	; 0xf8
 8010990:	2100      	movs	r1, #0
 8010992:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010996:	f003 fc1b 	bl	80141d0 <UpdateRef>
 801099a:	f240 00bc 	movw	r0, #188	; 0xbc
 801099e:	2100      	movs	r1, #0
 80109a0:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80109a4:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80109a8:	f003 bc12 	b.w	80141d0 <UpdateRef>

080109ac <__unnamed_54>:
 80109ac:	2800      	cmp	r0, #0
 80109ae:	bf18      	it	ne
 80109b0:	4770      	bxne	lr
 80109b2:	f240 1054 	movw	r0, #340	; 0x154
 80109b6:	2100      	movs	r1, #0
 80109b8:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80109bc:	f003 bc08 	b.w	80141d0 <UpdateRef>

080109c0 <__unnamed_55>:
 80109c0:	2800      	cmp	r0, #0
 80109c2:	bf18      	it	ne
 80109c4:	4770      	bxne	lr
 80109c6:	f240 00fc 	movw	r0, #252	; 0xfc
 80109ca:	2100      	movs	r1, #0
 80109cc:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80109d0:	f003 bbfe 	b.w	80141d0 <UpdateRef>

080109d4 <__unnamed_56>:
 80109d4:	2800      	cmp	r0, #0
 80109d6:	bf18      	it	ne
 80109d8:	4770      	bxne	lr
 80109da:	f240 00fc 	movw	r0, #252	; 0xfc
 80109de:	2100      	movs	r1, #0
 80109e0:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80109e4:	f003 bbf4 	b.w	80141d0 <UpdateRef>

080109e8 <__unnamed_57>:
 80109e8:	2800      	cmp	r0, #0
 80109ea:	bf18      	it	ne
 80109ec:	4770      	bxne	lr
 80109ee:	b580      	push	{r7, lr}
 80109f0:	f240 1000 	movw	r0, #256	; 0x100
 80109f4:	2100      	movs	r1, #0
 80109f6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80109fa:	f003 fbe9 	bl	80141d0 <UpdateRef>
 80109fe:	f240 000c 	movw	r0, #12
 8010a02:	2100      	movs	r1, #0
 8010a04:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010a08:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8010a0c:	f003 bbe0 	b.w	80141d0 <UpdateRef>

08010a10 <__unnamed_58>:
 8010a10:	2800      	cmp	r0, #0
 8010a12:	bf18      	it	ne
 8010a14:	4770      	bxne	lr
 8010a16:	b580      	push	{r7, lr}
 8010a18:	f240 1000 	movw	r0, #256	; 0x100
 8010a1c:	2100      	movs	r1, #0
 8010a1e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010a22:	f003 fbd5 	bl	80141d0 <UpdateRef>
 8010a26:	f240 1004 	movw	r0, #260	; 0x104
 8010a2a:	2100      	movs	r1, #0
 8010a2c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010a30:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8010a34:	f003 bbcc 	b.w	80141d0 <UpdateRef>

08010a38 <__unnamed_59>:
 8010a38:	2800      	cmp	r0, #0
 8010a3a:	bf18      	it	ne
 8010a3c:	4770      	bxne	lr
 8010a3e:	b580      	push	{r7, lr}
 8010a40:	f240 1008 	movw	r0, #264	; 0x108
 8010a44:	2100      	movs	r1, #0
 8010a46:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010a4a:	f003 fbc1 	bl	80141d0 <UpdateRef>
 8010a4e:	f240 1030 	movw	r0, #304	; 0x130
 8010a52:	2100      	movs	r1, #0
 8010a54:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010a58:	f003 fbba 	bl	80141d0 <UpdateRef>
 8010a5c:	f240 0048 	movw	r0, #72	; 0x48
 8010a60:	2100      	movs	r1, #0
 8010a62:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010a66:	f003 fbb3 	bl	80141d0 <UpdateRef>
 8010a6a:	f240 100c 	movw	r0, #268	; 0x10c
 8010a6e:	2100      	movs	r1, #0
 8010a70:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010a74:	f003 fbac 	bl	80141d0 <UpdateRef>
 8010a78:	f240 1010 	movw	r0, #272	; 0x110
 8010a7c:	2100      	movs	r1, #0
 8010a7e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010a82:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8010a86:	f003 bba3 	b.w	80141d0 <UpdateRef>

08010a8a <__unnamed_60>:
 8010a8a:	2800      	cmp	r0, #0
 8010a8c:	bf18      	it	ne
 8010a8e:	4770      	bxne	lr
 8010a90:	b580      	push	{r7, lr}
 8010a92:	f240 004c 	movw	r0, #76	; 0x4c
 8010a96:	2100      	movs	r1, #0
 8010a98:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010a9c:	f003 fb98 	bl	80141d0 <UpdateRef>
 8010aa0:	f240 008c 	movw	r0, #140	; 0x8c
 8010aa4:	2100      	movs	r1, #0
 8010aa6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010aaa:	f003 fb91 	bl	80141d0 <UpdateRef>
 8010aae:	f240 0090 	movw	r0, #144	; 0x90
 8010ab2:	2100      	movs	r1, #0
 8010ab4:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010ab8:	f003 fb8a 	bl	80141d0 <UpdateRef>
 8010abc:	f240 0094 	movw	r0, #148	; 0x94
 8010ac0:	2100      	movs	r1, #0
 8010ac2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010ac6:	f003 fb83 	bl	80141d0 <UpdateRef>
 8010aca:	f240 0098 	movw	r0, #152	; 0x98
 8010ace:	2100      	movs	r1, #0
 8010ad0:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010ad4:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8010ad8:	f003 bb7a 	b.w	80141d0 <UpdateRef>

08010adc <__unnamed_61>:
 8010adc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ae0:	b0a9      	sub	sp, #164	; 0xa4
 8010ae2:	ac05      	add	r4, sp, #20
 8010ae4:	4605      	mov	r5, r0
 8010ae6:	2164      	movs	r1, #100	; 0x64
 8010ae8:	4620      	mov	r0, r4
 8010aea:	f00a fd05 	bl	801b4f8 <__aeabi_memclr>
 8010aee:	2d00      	cmp	r5, #0
 8010af0:	f000 8226 	beq.w	8010f40 <__unnamed_61+0x464>
 8010af4:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8010af8:	9004      	str	r0, [sp, #16]
 8010afa:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8010afe:	9003      	str	r0, [sp, #12]
 8010b00:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8010b04:	9002      	str	r0, [sp, #8]
 8010b06:	f104 0018 	add.w	r0, r4, #24
 8010b0a:	9001      	str	r0, [sp, #4]
 8010b0c:	f244 20c0 	movw	r0, #17088	; 0x42c0
 8010b10:	1d21      	adds	r1, r4, #4
 8010b12:	f6c0 0002 	movt	r0, #2050	; 0x802
 8010b16:	f104 080c 	add.w	r8, r4, #12
 8010b1a:	f005 feee 	bl	80168fa <AllocInstance>
 8010b1e:	f642 7610 	movw	r6, #12048	; 0x2f10
 8010b22:	f642 6520 	movw	r5, #11808	; 0x2e20
 8010b26:	4607      	mov	r7, r0
 8010b28:	a826      	add	r0, sp, #152	; 0x98
 8010b2a:	f04f 0900 	mov.w	r9, #0
 8010b2e:	f2c2 0600 	movt	r6, #8192	; 0x2000
 8010b32:	f2c2 0500 	movt	r5, #8192	; 0x2000
 8010b36:	2101      	movs	r1, #1
 8010b38:	2202      	movs	r2, #2
 8010b3a:	e9cd 9724 	strd	r9, r7, [sp, #144]	; 0x90
 8010b3e:	e9cd 971e 	strd	r9, r7, [sp, #120]	; 0x78
 8010b42:	9620      	str	r6, [sp, #128]	; 0x80
 8010b44:	e9cd 5921 	strd	r5, r9, [sp, #132]	; 0x84
 8010b48:	e9cd 9726 	strd	r9, r7, [sp, #152]	; 0x98
 8010b4c:	f005 ff8b 	bl	8016a66 <LeaveFrame>
 8010b50:	f107 0008 	add.w	r0, r7, #8
 8010b54:	4631      	mov	r1, r6
 8010b56:	f003 fb3b 	bl	80141d0 <UpdateRef>
 8010b5a:	f107 0014 	add.w	r0, r7, #20
 8010b5e:	4629      	mov	r1, r5
 8010b60:	f003 fb36 	bl	80141d0 <UpdateRef>
 8010b64:	f107 000c 	add.w	r0, r7, #12
 8010b68:	2100      	movs	r1, #0
 8010b6a:	f887 9010 	strb.w	r9, [r7, #16]
 8010b6e:	f003 fb2f 	bl	80141d0 <UpdateRef>
 8010b72:	f10d 0b78 	add.w	fp, sp, #120	; 0x78
 8010b76:	2104      	movs	r1, #4
 8010b78:	2205      	movs	r2, #5
 8010b7a:	4658      	mov	r0, fp
 8010b7c:	f005 ff73 	bl	8016a66 <LeaveFrame>
 8010b80:	a824      	add	r0, sp, #144	; 0x90
 8010b82:	2101      	movs	r1, #1
 8010b84:	2202      	movs	r2, #2
 8010b86:	f005 ff6e 	bl	8016a66 <LeaveFrame>
 8010b8a:	f643 4070 	movw	r0, #15472	; 0x3c70
 8010b8e:	f104 0108 	add.w	r1, r4, #8
 8010b92:	f6c0 0002 	movt	r0, #2050	; 0x802
 8010b96:	f005 feb0 	bl	80168fa <AllocInstance>
 8010b9a:	4606      	mov	r6, r0
 8010b9c:	f642 6500 	movw	r5, #11776	; 0x2e00
 8010ba0:	a826      	add	r0, sp, #152	; 0x98
 8010ba2:	f2c2 0500 	movt	r5, #8192	; 0x2000
 8010ba6:	2101      	movs	r1, #1
 8010ba8:	2202      	movs	r2, #2
 8010baa:	e9cd 961e 	strd	r9, r6, [sp, #120]	; 0x78
 8010bae:	e9cd 5720 	strd	r5, r7, [sp, #128]	; 0x80
 8010bb2:	e9cd 9626 	strd	r9, r6, [sp, #152]	; 0x98
 8010bb6:	f005 ff56 	bl	8016a66 <LeaveFrame>
 8010bba:	f106 0008 	add.w	r0, r6, #8
 8010bbe:	4629      	mov	r1, r5
 8010bc0:	f003 fb06 	bl	80141d0 <UpdateRef>
 8010bc4:	f106 000c 	add.w	r0, r6, #12
 8010bc8:	4639      	mov	r1, r7
 8010bca:	f003 fb01 	bl	80141d0 <UpdateRef>
 8010bce:	f10d 0a78 	add.w	sl, sp, #120	; 0x78
 8010bd2:	2103      	movs	r1, #3
 8010bd4:	2204      	movs	r2, #4
 8010bd6:	4650      	mov	r0, sl
 8010bd8:	f005 ff45 	bl	8016a66 <LeaveFrame>
 8010bdc:	4640      	mov	r0, r8
 8010bde:	4631      	mov	r1, r6
 8010be0:	f003 faf6 	bl	80141d0 <UpdateRef>
 8010be4:	f244 10a0 	movw	r0, #16800	; 0x41a0
 8010be8:	f104 0110 	add.w	r1, r4, #16
 8010bec:	f6c0 0002 	movt	r0, #2050	; 0x802
 8010bf0:	f005 fe83 	bl	80168fa <AllocInstance>
 8010bf4:	4606      	mov	r6, r0
 8010bf6:	f642 5580 	movw	r5, #11648	; 0x2d80
 8010bfa:	f642 4790 	movw	r7, #11408	; 0x2c90
 8010bfe:	a826      	add	r0, sp, #152	; 0x98
 8010c00:	f2c2 0500 	movt	r5, #8192	; 0x2000
 8010c04:	f2c2 0700 	movt	r7, #8192	; 0x2000
 8010c08:	2101      	movs	r1, #1
 8010c0a:	2202      	movs	r2, #2
 8010c0c:	e9cd 9624 	strd	r9, r6, [sp, #144]	; 0x90
 8010c10:	e9cd 961e 	strd	r9, r6, [sp, #120]	; 0x78
 8010c14:	9520      	str	r5, [sp, #128]	; 0x80
 8010c16:	e9cd 7921 	strd	r7, r9, [sp, #132]	; 0x84
 8010c1a:	e9cd 9626 	strd	r9, r6, [sp, #152]	; 0x98
 8010c1e:	f005 ff22 	bl	8016a66 <LeaveFrame>
 8010c22:	f106 0008 	add.w	r0, r6, #8
 8010c26:	4629      	mov	r1, r5
 8010c28:	f003 fad2 	bl	80141d0 <UpdateRef>
 8010c2c:	f106 0014 	add.w	r0, r6, #20
 8010c30:	4639      	mov	r1, r7
 8010c32:	f003 facd 	bl	80141d0 <UpdateRef>
 8010c36:	f106 000c 	add.w	r0, r6, #12
 8010c3a:	2100      	movs	r1, #0
 8010c3c:	f886 9010 	strb.w	r9, [r6, #16]
 8010c40:	f003 fac6 	bl	80141d0 <UpdateRef>
 8010c44:	4658      	mov	r0, fp
 8010c46:	2104      	movs	r1, #4
 8010c48:	2205      	movs	r2, #5
 8010c4a:	f005 ff0c 	bl	8016a66 <LeaveFrame>
 8010c4e:	a824      	add	r0, sp, #144	; 0x90
 8010c50:	2101      	movs	r1, #1
 8010c52:	2202      	movs	r2, #2
 8010c54:	f005 ff07 	bl	8016a66 <LeaveFrame>
 8010c58:	f643 4070 	movw	r0, #15472	; 0x3c70
 8010c5c:	f104 0114 	add.w	r1, r4, #20
 8010c60:	f6c0 0002 	movt	r0, #2050	; 0x802
 8010c64:	4680      	mov	r8, r0
 8010c66:	f005 fe48 	bl	80168fa <AllocInstance>
 8010c6a:	4607      	mov	r7, r0
 8010c6c:	f642 4560 	movw	r5, #11360	; 0x2c60
 8010c70:	a826      	add	r0, sp, #152	; 0x98
 8010c72:	f2c2 0500 	movt	r5, #8192	; 0x2000
 8010c76:	2101      	movs	r1, #1
 8010c78:	2202      	movs	r2, #2
 8010c7a:	e9cd 971e 	strd	r9, r7, [sp, #120]	; 0x78
 8010c7e:	e9cd 5620 	strd	r5, r6, [sp, #128]	; 0x80
 8010c82:	e9cd 9726 	strd	r9, r7, [sp, #152]	; 0x98
 8010c86:	f005 feee 	bl	8016a66 <LeaveFrame>
 8010c8a:	f107 0008 	add.w	r0, r7, #8
 8010c8e:	4629      	mov	r1, r5
 8010c90:	f003 fa9e 	bl	80141d0 <UpdateRef>
 8010c94:	f107 000c 	add.w	r0, r7, #12
 8010c98:	4631      	mov	r1, r6
 8010c9a:	f003 fa99 	bl	80141d0 <UpdateRef>
 8010c9e:	4650      	mov	r0, sl
 8010ca0:	2103      	movs	r1, #3
 8010ca2:	2204      	movs	r2, #4
 8010ca4:	f005 fedf 	bl	8016a66 <LeaveFrame>
 8010ca8:	9801      	ldr	r0, [sp, #4]
 8010caa:	4639      	mov	r1, r7
 8010cac:	f003 fa90 	bl	80141d0 <UpdateRef>
 8010cb0:	f244 0080 	movw	r0, #16512	; 0x4080
 8010cb4:	f104 011c 	add.w	r1, r4, #28
 8010cb8:	f6c0 0002 	movt	r0, #2050	; 0x802
 8010cbc:	f005 fe1d 	bl	80168fa <AllocInstance>
 8010cc0:	4605      	mov	r5, r0
 8010cc2:	f642 4600 	movw	r6, #11264	; 0x2c00
 8010cc6:	f642 27b0 	movw	r7, #10928	; 0x2ab0
 8010cca:	a826      	add	r0, sp, #152	; 0x98
 8010ccc:	f2c2 0600 	movt	r6, #8192	; 0x2000
 8010cd0:	f2c2 0700 	movt	r7, #8192	; 0x2000
 8010cd4:	2101      	movs	r1, #1
 8010cd6:	2202      	movs	r2, #2
 8010cd8:	e9cd 9524 	strd	r9, r5, [sp, #144]	; 0x90
 8010cdc:	e9cd 951e 	strd	r9, r5, [sp, #120]	; 0x78
 8010ce0:	9620      	str	r6, [sp, #128]	; 0x80
 8010ce2:	e9cd 7921 	strd	r7, r9, [sp, #132]	; 0x84
 8010ce6:	e9cd 9526 	strd	r9, r5, [sp, #152]	; 0x98
 8010cea:	f005 febc 	bl	8016a66 <LeaveFrame>
 8010cee:	f105 0008 	add.w	r0, r5, #8
 8010cf2:	4631      	mov	r1, r6
 8010cf4:	f003 fa6c 	bl	80141d0 <UpdateRef>
 8010cf8:	f105 0014 	add.w	r0, r5, #20
 8010cfc:	4639      	mov	r1, r7
 8010cfe:	f003 fa67 	bl	80141d0 <UpdateRef>
 8010d02:	f105 000c 	add.w	r0, r5, #12
 8010d06:	2100      	movs	r1, #0
 8010d08:	f885 9010 	strb.w	r9, [r5, #16]
 8010d0c:	f003 fa60 	bl	80141d0 <UpdateRef>
 8010d10:	4658      	mov	r0, fp
 8010d12:	2104      	movs	r1, #4
 8010d14:	2205      	movs	r2, #5
 8010d16:	f005 fea6 	bl	8016a66 <LeaveFrame>
 8010d1a:	a824      	add	r0, sp, #144	; 0x90
 8010d1c:	2101      	movs	r1, #1
 8010d1e:	2202      	movs	r2, #2
 8010d20:	f005 fea1 	bl	8016a66 <LeaveFrame>
 8010d24:	f104 0120 	add.w	r1, r4, #32
 8010d28:	4640      	mov	r0, r8
 8010d2a:	f005 fde6 	bl	80168fa <AllocInstance>
 8010d2e:	4606      	mov	r6, r0
 8010d30:	f642 2790 	movw	r7, #10896	; 0x2a90
 8010d34:	a826      	add	r0, sp, #152	; 0x98
 8010d36:	f2c2 0700 	movt	r7, #8192	; 0x2000
 8010d3a:	2101      	movs	r1, #1
 8010d3c:	2202      	movs	r2, #2
 8010d3e:	e9cd 961e 	strd	r9, r6, [sp, #120]	; 0x78
 8010d42:	e9cd 7520 	strd	r7, r5, [sp, #128]	; 0x80
 8010d46:	e9cd 9626 	strd	r9, r6, [sp, #152]	; 0x98
 8010d4a:	f005 fe8c 	bl	8016a66 <LeaveFrame>
 8010d4e:	f106 0008 	add.w	r0, r6, #8
 8010d52:	4639      	mov	r1, r7
 8010d54:	f003 fa3c 	bl	80141d0 <UpdateRef>
 8010d58:	f106 000c 	add.w	r0, r6, #12
 8010d5c:	4629      	mov	r1, r5
 8010d5e:	f003 fa37 	bl	80141d0 <UpdateRef>
 8010d62:	4650      	mov	r0, sl
 8010d64:	2103      	movs	r1, #3
 8010d66:	2204      	movs	r2, #4
 8010d68:	f005 fe7d 	bl	8016a66 <LeaveFrame>
 8010d6c:	9802      	ldr	r0, [sp, #8]
 8010d6e:	4631      	mov	r1, r6
 8010d70:	f003 fa2e 	bl	80141d0 <UpdateRef>
 8010d74:	f643 7060 	movw	r0, #16224	; 0x3f60
 8010d78:	f104 0128 	add.w	r1, r4, #40	; 0x28
 8010d7c:	f6c0 0002 	movt	r0, #2050	; 0x802
 8010d80:	f005 fdbb 	bl	80168fa <AllocInstance>
 8010d84:	4605      	mov	r5, r0
 8010d86:	f642 2630 	movw	r6, #10800	; 0x2a30
 8010d8a:	f642 07e0 	movw	r7, #10464	; 0x28e0
 8010d8e:	a826      	add	r0, sp, #152	; 0x98
 8010d90:	f2c2 0600 	movt	r6, #8192	; 0x2000
 8010d94:	f2c2 0700 	movt	r7, #8192	; 0x2000
 8010d98:	2101      	movs	r1, #1
 8010d9a:	2202      	movs	r2, #2
 8010d9c:	e9cd 9524 	strd	r9, r5, [sp, #144]	; 0x90
 8010da0:	e9cd 951e 	strd	r9, r5, [sp, #120]	; 0x78
 8010da4:	9620      	str	r6, [sp, #128]	; 0x80
 8010da6:	e9cd 7921 	strd	r7, r9, [sp, #132]	; 0x84
 8010daa:	e9cd 9526 	strd	r9, r5, [sp, #152]	; 0x98
 8010dae:	f005 fe5a 	bl	8016a66 <LeaveFrame>
 8010db2:	f105 0008 	add.w	r0, r5, #8
 8010db6:	4631      	mov	r1, r6
 8010db8:	f003 fa0a 	bl	80141d0 <UpdateRef>
 8010dbc:	f105 0014 	add.w	r0, r5, #20
 8010dc0:	4639      	mov	r1, r7
 8010dc2:	f003 fa05 	bl	80141d0 <UpdateRef>
 8010dc6:	f105 000c 	add.w	r0, r5, #12
 8010dca:	2100      	movs	r1, #0
 8010dcc:	f885 9010 	strb.w	r9, [r5, #16]
 8010dd0:	f003 f9fe 	bl	80141d0 <UpdateRef>
 8010dd4:	4658      	mov	r0, fp
 8010dd6:	2104      	movs	r1, #4
 8010dd8:	2205      	movs	r2, #5
 8010dda:	f005 fe44 	bl	8016a66 <LeaveFrame>
 8010dde:	a824      	add	r0, sp, #144	; 0x90
 8010de0:	2101      	movs	r1, #1
 8010de2:	2202      	movs	r2, #2
 8010de4:	f005 fe3f 	bl	8016a66 <LeaveFrame>
 8010de8:	f104 012c 	add.w	r1, r4, #44	; 0x2c
 8010dec:	4640      	mov	r0, r8
 8010dee:	f005 fd84 	bl	80168fa <AllocInstance>
 8010df2:	4606      	mov	r6, r0
 8010df4:	f642 07c0 	movw	r7, #10432	; 0x28c0
 8010df8:	a826      	add	r0, sp, #152	; 0x98
 8010dfa:	f2c2 0700 	movt	r7, #8192	; 0x2000
 8010dfe:	2101      	movs	r1, #1
 8010e00:	2202      	movs	r2, #2
 8010e02:	e9cd 961e 	strd	r9, r6, [sp, #120]	; 0x78
 8010e06:	e9cd 7520 	strd	r7, r5, [sp, #128]	; 0x80
 8010e0a:	e9cd 9626 	strd	r9, r6, [sp, #152]	; 0x98
 8010e0e:	f005 fe2a 	bl	8016a66 <LeaveFrame>
 8010e12:	f106 0008 	add.w	r0, r6, #8
 8010e16:	4639      	mov	r1, r7
 8010e18:	f003 f9da 	bl	80141d0 <UpdateRef>
 8010e1c:	f106 000c 	add.w	r0, r6, #12
 8010e20:	4629      	mov	r1, r5
 8010e22:	f003 f9d5 	bl	80141d0 <UpdateRef>
 8010e26:	4650      	mov	r0, sl
 8010e28:	2103      	movs	r1, #3
 8010e2a:	2204      	movs	r2, #4
 8010e2c:	f005 fe1b 	bl	8016a66 <LeaveFrame>
 8010e30:	9803      	ldr	r0, [sp, #12]
 8010e32:	4631      	mov	r1, r6
 8010e34:	f003 f9cc 	bl	80141d0 <UpdateRef>
 8010e38:	f642 5530 	movw	r5, #11568	; 0x2d30
 8010e3c:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8010e40:	f6c0 0502 	movt	r5, #2050	; 0x802
 8010e44:	2104      	movs	r1, #4
 8010e46:	4628      	mov	r0, r5
 8010e48:	f003 fd56 	bl	80148f8 <AllocArrayInstance>
 8010e4c:	4606      	mov	r6, r0
 8010e4e:	a81e      	add	r0, sp, #120	; 0x78
 8010e50:	2101      	movs	r1, #1
 8010e52:	2202      	movs	r2, #2
 8010e54:	e9cd 9626 	strd	r9, r6, [sp, #152]	; 0x98
 8010e58:	e9cd 961e 	strd	r9, r6, [sp, #120]	; 0x78
 8010e5c:	f005 fe03 	bl	8016a66 <LeaveFrame>
 8010e60:	a81e      	add	r0, sp, #120	; 0x78
 8010e62:	2101      	movs	r1, #1
 8010e64:	2202      	movs	r2, #2
 8010e66:	e9cd 961e 	strd	r9, r6, [sp, #120]	; 0x78
 8010e6a:	f005 fdfc 	bl	8016a66 <LeaveFrame>
 8010e6e:	a826      	add	r0, sp, #152	; 0x98
 8010e70:	2101      	movs	r1, #1
 8010e72:	2202      	movs	r2, #2
 8010e74:	f005 fdf7 	bl	8016a66 <LeaveFrame>
 8010e78:	9804      	ldr	r0, [sp, #16]
 8010e7a:	4631      	mov	r1, r6
 8010e7c:	f003 f9a8 	bl	80141d0 <UpdateRef>
 8010e80:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010e82:	f104 003c 	add.w	r0, r4, #60	; 0x3c
 8010e86:	4631      	mov	r1, r6
 8010e88:	f003 f9a2 	bl	80141d0 <UpdateRef>
 8010e8c:	9f08      	ldr	r7, [sp, #32]
 8010e8e:	f104 0040 	add.w	r0, r4, #64	; 0x40
 8010e92:	4639      	mov	r1, r7
 8010e94:	f003 f99c 	bl	80141d0 <UpdateRef>
 8010e98:	4630      	mov	r0, r6
 8010e9a:	2100      	movs	r1, #0
 8010e9c:	463a      	mov	r2, r7
 8010e9e:	f003 fcab 	bl	80147f8 <Kotlin_Array_set>
 8010ea2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010ea4:	f104 0044 	add.w	r0, r4, #68	; 0x44
 8010ea8:	4631      	mov	r1, r6
 8010eaa:	f003 f991 	bl	80141d0 <UpdateRef>
 8010eae:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8010eb0:	f104 0048 	add.w	r0, r4, #72	; 0x48
 8010eb4:	4639      	mov	r1, r7
 8010eb6:	f003 f98b 	bl	80141d0 <UpdateRef>
 8010eba:	4630      	mov	r0, r6
 8010ebc:	2101      	movs	r1, #1
 8010ebe:	463a      	mov	r2, r7
 8010ec0:	f003 fc9a 	bl	80147f8 <Kotlin_Array_set>
 8010ec4:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010ec6:	f104 004c 	add.w	r0, r4, #76	; 0x4c
 8010eca:	4631      	mov	r1, r6
 8010ecc:	f003 f980 	bl	80141d0 <UpdateRef>
 8010ed0:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8010ed2:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8010ed6:	4639      	mov	r1, r7
 8010ed8:	f003 f97a 	bl	80141d0 <UpdateRef>
 8010edc:	4630      	mov	r0, r6
 8010ede:	2102      	movs	r1, #2
 8010ee0:	463a      	mov	r2, r7
 8010ee2:	f003 fc89 	bl	80147f8 <Kotlin_Array_set>
 8010ee6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010ee8:	f104 0054 	add.w	r0, r4, #84	; 0x54
 8010eec:	4631      	mov	r1, r6
 8010eee:	f003 f96f 	bl	80141d0 <UpdateRef>
 8010ef2:	9f11      	ldr	r7, [sp, #68]	; 0x44
 8010ef4:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8010ef8:	4639      	mov	r1, r7
 8010efa:	f003 f969 	bl	80141d0 <UpdateRef>
 8010efe:	4630      	mov	r0, r6
 8010f00:	2103      	movs	r1, #3
 8010f02:	463a      	mov	r2, r7
 8010f04:	f003 fc78 	bl	80147f8 <Kotlin_Array_set>
 8010f08:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010f0a:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8010f0e:	4631      	mov	r1, r6
 8010f10:	f003 f95e 	bl	80141d0 <UpdateRef>
 8010f14:	4630      	mov	r0, r6
 8010f16:	4629      	mov	r1, r5
 8010f18:	e9cd 961e 	strd	r9, r6, [sp, #120]	; 0x78
 8010f1c:	f005 ff9e 	bl	8016e5c <CheckInstance>
 8010f20:	f104 0060 	add.w	r0, r4, #96	; 0x60
 8010f24:	4631      	mov	r1, r6
 8010f26:	f003 fb60 	bl	80145ea <UpdateReturnRef>
 8010f2a:	a81e      	add	r0, sp, #120	; 0x78
 8010f2c:	2101      	movs	r1, #1
 8010f2e:	2202      	movs	r2, #2
 8010f30:	f005 fd99 	bl	8016a66 <LeaveFrame>
 8010f34:	f240 104c 	movw	r0, #332	; 0x14c
 8010f38:	4631      	mov	r1, r6
 8010f3a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010f3e:	e019      	b.n	8010f74 <__unnamed_61+0x498>
 8010f40:	f240 104c 	movw	r0, #332	; 0x14c
 8010f44:	2100      	movs	r1, #0
 8010f46:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010f4a:	f003 f941 	bl	80141d0 <UpdateRef>
 8010f4e:	f240 1014 	movw	r0, #276	; 0x114
 8010f52:	2100      	movs	r1, #0
 8010f54:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010f58:	f003 f93a 	bl	80141d0 <UpdateRef>
 8010f5c:	f240 000c 	movw	r0, #12
 8010f60:	2100      	movs	r1, #0
 8010f62:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010f66:	f003 f933 	bl	80141d0 <UpdateRef>
 8010f6a:	f240 0048 	movw	r0, #72	; 0x48
 8010f6e:	2100      	movs	r1, #0
 8010f70:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8010f74:	f003 f92c 	bl	80141d0 <UpdateRef>
 8010f78:	a805      	add	r0, sp, #20
 8010f7a:	2100      	movs	r1, #0
 8010f7c:	2219      	movs	r2, #25
 8010f7e:	f005 fd72 	bl	8016a66 <LeaveFrame>
 8010f82:	b029      	add	sp, #164	; 0xa4
 8010f84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010f88 <kfun:kotlin.text.regex.$KPROPERTIES.$<get-negValue>$3.invoke#internal>:
 8010f88:	b5b0      	push	{r4, r5, r7, lr}
 8010f8a:	af02      	add	r7, sp, #8
 8010f8c:	b084      	sub	sp, #16
 8010f8e:	4614      	mov	r4, r2
 8010f90:	2200      	movs	r2, #0
 8010f92:	e9cd 2000 	strd	r2, r0, [sp]
 8010f96:	e9cd 1202 	strd	r1, r2, [sp, #8]
 8010f9a:	4668      	mov	r0, sp
 8010f9c:	f100 020c 	add.w	r2, r0, #12
 8010fa0:	4608      	mov	r0, r1
 8010fa2:	4611      	mov	r1, r2
 8010fa4:	f7fe fb12 	bl	800f5cc <kfun:kotlin.text.regex.AbstractCharClass.CachedCharClass.<get-negValue>#internal>
 8010fa8:	4605      	mov	r5, r0
 8010faa:	4620      	mov	r0, r4
 8010fac:	4629      	mov	r1, r5
 8010fae:	f003 fb1c 	bl	80145ea <UpdateReturnRef>
 8010fb2:	4668      	mov	r0, sp
 8010fb4:	2102      	movs	r1, #2
 8010fb6:	2204      	movs	r2, #4
 8010fb8:	f005 fd55 	bl	8016a66 <LeaveFrame>
 8010fbc:	4628      	mov	r0, r5
 8010fbe:	b004      	add	sp, #16
 8010fc0:	bdb0      	pop	{r4, r5, r7, pc}
 8010fc2:	4604      	mov	r4, r0
 8010fc4:	4668      	mov	r0, sp
 8010fc6:	2102      	movs	r1, #2
 8010fc8:	2204      	movs	r2, #4
 8010fca:	f005 fd4c 	bl	8016a66 <LeaveFrame>
 8010fce:	4620      	mov	r0, r4
 8010fd0:	f7f0 f90c 	bl	80011ec <_Unwind_Resume>

08010fd4 <kfun:kotlin.text.regex.$KPROPERTIES.$<get-posValue>$2.invoke#internal>:
 8010fd4:	b5b0      	push	{r4, r5, r7, lr}
 8010fd6:	af02      	add	r7, sp, #8
 8010fd8:	b084      	sub	sp, #16
 8010fda:	4614      	mov	r4, r2
 8010fdc:	2200      	movs	r2, #0
 8010fde:	e9cd 2000 	strd	r2, r0, [sp]
 8010fe2:	e9cd 1202 	strd	r1, r2, [sp, #8]
 8010fe6:	4668      	mov	r0, sp
 8010fe8:	f100 020c 	add.w	r2, r0, #12
 8010fec:	4608      	mov	r0, r1
 8010fee:	4611      	mov	r1, r2
 8010ff0:	f7fe faa1 	bl	800f536 <kfun:kotlin.text.regex.AbstractCharClass.CachedCharClass.<get-posValue>#internal>
 8010ff4:	4605      	mov	r5, r0
 8010ff6:	4620      	mov	r0, r4
 8010ff8:	4629      	mov	r1, r5
 8010ffa:	f003 faf6 	bl	80145ea <UpdateReturnRef>
 8010ffe:	4668      	mov	r0, sp
 8011000:	2102      	movs	r1, #2
 8011002:	2204      	movs	r2, #4
 8011004:	f005 fd2f 	bl	8016a66 <LeaveFrame>
 8011008:	4628      	mov	r0, r5
 801100a:	b004      	add	sp, #16
 801100c:	bdb0      	pop	{r4, r5, r7, pc}
 801100e:	4604      	mov	r4, r0
 8011010:	4668      	mov	r0, sp
 8011012:	2102      	movs	r1, #2
 8011014:	2204      	movs	r2, #4
 8011016:	f005 fd26 	bl	8016a66 <LeaveFrame>
 801101a:	4620      	mov	r0, r4
 801101c:	f7f0 f8e6 	bl	80011ec <_Unwind_Resume>

08011020 <kfun:kotlin.text.regex.$KPROPERTIES.$<get-withoutSurrogates>$1.invoke#internal>:
 8011020:	b5b0      	push	{r4, r5, r7, lr}
 8011022:	af02      	add	r7, sp, #8
 8011024:	b084      	sub	sp, #16
 8011026:	4614      	mov	r4, r2
 8011028:	2200      	movs	r2, #0
 801102a:	e9cd 2000 	strd	r2, r0, [sp]
 801102e:	e9cd 1202 	strd	r1, r2, [sp, #8]
 8011032:	4668      	mov	r0, sp
 8011034:	f100 020c 	add.w	r2, r0, #12
 8011038:	4608      	mov	r0, r1
 801103a:	4611      	mov	r1, r2
 801103c:	f7fe fb5c 	bl	800f6f8 <kfun:kotlin.text.regex.AbstractCharClass.<get-withoutSurrogates>#internal>
 8011040:	4605      	mov	r5, r0
 8011042:	4620      	mov	r0, r4
 8011044:	4629      	mov	r1, r5
 8011046:	f003 fad0 	bl	80145ea <UpdateReturnRef>
 801104a:	4668      	mov	r0, sp
 801104c:	2102      	movs	r1, #2
 801104e:	2204      	movs	r2, #4
 8011050:	f005 fd09 	bl	8016a66 <LeaveFrame>
 8011054:	4628      	mov	r0, r5
 8011056:	b004      	add	sp, #16
 8011058:	bdb0      	pop	{r4, r5, r7, pc}
 801105a:	4604      	mov	r4, r0
 801105c:	4668      	mov	r0, sp
 801105e:	2102      	movs	r1, #2
 8011060:	2204      	movs	r2, #4
 8011062:	f005 fd00 	bl	8016a66 <LeaveFrame>
 8011066:	4620      	mov	r0, r4
 8011068:	f7f0 f8c0 	bl	80011ec <_Unwind_Resume>

0801106c <kfun:kotlin.text.regex.$KPROPERTIES.$<get-surrogates>$0.invoke#internal>:
 801106c:	b5b0      	push	{r4, r5, r7, lr}
 801106e:	af02      	add	r7, sp, #8
 8011070:	b084      	sub	sp, #16
 8011072:	4614      	mov	r4, r2
 8011074:	2200      	movs	r2, #0
 8011076:	e9cd 2000 	strd	r2, r0, [sp]
 801107a:	e9cd 1202 	strd	r1, r2, [sp, #8]
 801107e:	4668      	mov	r0, sp
 8011080:	f100 020c 	add.w	r2, r0, #12
 8011084:	4608      	mov	r0, r1
 8011086:	4611      	mov	r1, r2
 8011088:	f7fe faeb 	bl	800f662 <kfun:kotlin.text.regex.AbstractCharClass.<get-surrogates>#internal>
 801108c:	4605      	mov	r5, r0
 801108e:	4620      	mov	r0, r4
 8011090:	4629      	mov	r1, r5
 8011092:	f003 faaa 	bl	80145ea <UpdateReturnRef>
 8011096:	4668      	mov	r0, sp
 8011098:	2102      	movs	r1, #2
 801109a:	2204      	movs	r2, #4
 801109c:	f005 fce3 	bl	8016a66 <LeaveFrame>
 80110a0:	4628      	mov	r0, r5
 80110a2:	b004      	add	sp, #16
 80110a4:	bdb0      	pop	{r4, r5, r7, pc}
 80110a6:	4604      	mov	r4, r0
 80110a8:	4668      	mov	r0, sp
 80110aa:	2102      	movs	r1, #2
 80110ac:	2204      	movs	r2, #4
 80110ae:	f005 fcda 	bl	8016a66 <LeaveFrame>
 80110b2:	4620      	mov	r0, r4
 80110b4:	f7f0 f89a 	bl	80011ec <_Unwind_Resume>

080110b8 <__unnamed_62>:
 80110b8:	2800      	cmp	r0, #0
 80110ba:	bf18      	it	ne
 80110bc:	4770      	bxne	lr
 80110be:	b580      	push	{r7, lr}
 80110c0:	f240 1018 	movw	r0, #280	; 0x118
 80110c4:	2100      	movs	r1, #0
 80110c6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80110ca:	f003 f881 	bl	80141d0 <UpdateRef>
 80110ce:	f240 101c 	movw	r0, #284	; 0x11c
 80110d2:	2100      	movs	r1, #0
 80110d4:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80110d8:	f003 f87a 	bl	80141d0 <UpdateRef>
 80110dc:	f240 1020 	movw	r0, #288	; 0x120
 80110e0:	2100      	movs	r1, #0
 80110e2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80110e6:	f003 f873 	bl	80141d0 <UpdateRef>
 80110ea:	f240 1030 	movw	r0, #304	; 0x130
 80110ee:	2100      	movs	r1, #0
 80110f0:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80110f4:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80110f8:	f003 b86a 	b.w	80141d0 <UpdateRef>

080110fc <__unnamed_63>:
 80110fc:	2800      	cmp	r0, #0
 80110fe:	bf18      	it	ne
 8011100:	4770      	bxne	lr
 8011102:	b580      	push	{r7, lr}
 8011104:	f240 0048 	movw	r0, #72	; 0x48
 8011108:	2100      	movs	r1, #0
 801110a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801110e:	f003 f85f 	bl	80141d0 <UpdateRef>
 8011112:	f240 000c 	movw	r0, #12
 8011116:	2100      	movs	r1, #0
 8011118:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801111c:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8011120:	f003 b856 	b.w	80141d0 <UpdateRef>

08011124 <__unnamed_64>:
 8011124:	2800      	cmp	r0, #0
 8011126:	bf18      	it	ne
 8011128:	4770      	bxne	lr
 801112a:	b580      	push	{r7, lr}
 801112c:	f240 1024 	movw	r0, #292	; 0x124
 8011130:	2100      	movs	r1, #0
 8011132:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011136:	f003 f84b 	bl	80141d0 <UpdateRef>
 801113a:	f240 1030 	movw	r0, #304	; 0x130
 801113e:	2100      	movs	r1, #0
 8011140:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011144:	f003 f844 	bl	80141d0 <UpdateRef>
 8011148:	f240 102c 	movw	r0, #300	; 0x12c
 801114c:	2100      	movs	r1, #0
 801114e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011152:	f003 f83d 	bl	80141d0 <UpdateRef>
 8011156:	f240 1028 	movw	r0, #296	; 0x128
 801115a:	2100      	movs	r1, #0
 801115c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011160:	f003 f836 	bl	80141d0 <UpdateRef>
 8011164:	f240 000c 	movw	r0, #12
 8011168:	2100      	movs	r1, #0
 801116a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801116e:	f003 f82f 	bl	80141d0 <UpdateRef>
 8011172:	f240 0048 	movw	r0, #72	; 0x48
 8011176:	2100      	movs	r1, #0
 8011178:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801117c:	f003 f828 	bl	80141d0 <UpdateRef>
 8011180:	f240 1014 	movw	r0, #276	; 0x114
 8011184:	2100      	movs	r1, #0
 8011186:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801118a:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 801118e:	f003 b81f 	b.w	80141d0 <UpdateRef>

08011192 <__unnamed_65>:
 8011192:	2800      	cmp	r0, #0
 8011194:	bf18      	it	ne
 8011196:	4770      	bxne	lr
 8011198:	b580      	push	{r7, lr}
 801119a:	f240 1030 	movw	r0, #304	; 0x130
 801119e:	2100      	movs	r1, #0
 80111a0:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80111a4:	f003 f814 	bl	80141d0 <UpdateRef>
 80111a8:	f240 1038 	movw	r0, #312	; 0x138
 80111ac:	2100      	movs	r1, #0
 80111ae:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80111b2:	f003 f80d 	bl	80141d0 <UpdateRef>
 80111b6:	f240 0048 	movw	r0, #72	; 0x48
 80111ba:	2100      	movs	r1, #0
 80111bc:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80111c0:	f003 f806 	bl	80141d0 <UpdateRef>
 80111c4:	f240 102c 	movw	r0, #300	; 0x12c
 80111c8:	2100      	movs	r1, #0
 80111ca:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80111ce:	f002 ffff 	bl	80141d0 <UpdateRef>
 80111d2:	f240 000c 	movw	r0, #12
 80111d6:	2100      	movs	r1, #0
 80111d8:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80111dc:	f002 fff8 	bl	80141d0 <UpdateRef>
 80111e0:	f240 1034 	movw	r0, #308	; 0x134
 80111e4:	2100      	movs	r1, #0
 80111e6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80111ea:	f002 fff1 	bl	80141d0 <UpdateRef>
 80111ee:	f240 1020 	movw	r0, #288	; 0x120
 80111f2:	2100      	movs	r1, #0
 80111f4:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80111f8:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80111fc:	f002 bfe8 	b.w	80141d0 <UpdateRef>

08011200 <__unnamed_66>:
 8011200:	2800      	cmp	r0, #0
 8011202:	bf18      	it	ne
 8011204:	4770      	bxne	lr
 8011206:	b580      	push	{r7, lr}
 8011208:	f240 1034 	movw	r0, #308	; 0x134
 801120c:	2100      	movs	r1, #0
 801120e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011212:	f002 ffdd 	bl	80141d0 <UpdateRef>
 8011216:	f240 102c 	movw	r0, #300	; 0x12c
 801121a:	2100      	movs	r1, #0
 801121c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011220:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8011224:	f002 bfd4 	b.w	80141d0 <UpdateRef>

08011228 <__unnamed_67>:
 8011228:	2800      	cmp	r0, #0
 801122a:	bf18      	it	ne
 801122c:	4770      	bxne	lr
 801122e:	b580      	push	{r7, lr}
 8011230:	f240 0048 	movw	r0, #72	; 0x48
 8011234:	2100      	movs	r1, #0
 8011236:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801123a:	f002 ffc9 	bl	80141d0 <UpdateRef>
 801123e:	f240 1038 	movw	r0, #312	; 0x138
 8011242:	2100      	movs	r1, #0
 8011244:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011248:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 801124c:	f002 bfc0 	b.w	80141d0 <UpdateRef>

08011250 <__unnamed_68>:
 8011250:	2800      	cmp	r0, #0
 8011252:	bf18      	it	ne
 8011254:	4770      	bxne	lr
 8011256:	f240 1038 	movw	r0, #312	; 0x138
 801125a:	2100      	movs	r1, #0
 801125c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011260:	f002 bfb6 	b.w	80141d0 <UpdateRef>

08011264 <__unnamed_69>:
 8011264:	2800      	cmp	r0, #0
 8011266:	bf18      	it	ne
 8011268:	4770      	bxne	lr
 801126a:	f240 1038 	movw	r0, #312	; 0x138
 801126e:	2100      	movs	r1, #0
 8011270:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011274:	f002 bfac 	b.w	80141d0 <UpdateRef>

08011278 <__unnamed_70>:
 8011278:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801127c:	b094      	sub	sp, #80	; 0x50
 801127e:	46ea      	mov	sl, sp
 8011280:	4605      	mov	r5, r0
 8011282:	4650      	mov	r0, sl
 8011284:	2128      	movs	r1, #40	; 0x28
 8011286:	f00a f937 	bl	801b4f8 <__aeabi_memclr>
 801128a:	2d00      	cmp	r5, #0
 801128c:	f000 80ba 	beq.w	8011404 <__unnamed_70+0x18c>
 8011290:	f244 30e0 	movw	r0, #17376	; 0x43e0
 8011294:	f10a 0104 	add.w	r1, sl, #4
 8011298:	f6c0 0002 	movt	r0, #2050	; 0x802
 801129c:	f10a 0814 	add.w	r8, sl, #20
 80112a0:	f10a 090c 	add.w	r9, sl, #12
 80112a4:	f005 fb29 	bl	80168fa <AllocInstance>
 80112a8:	f243 05d0 	movw	r5, #12496	; 0x30d0
 80112ac:	f243 0600 	movw	r6, #12288	; 0x3000
 80112b0:	4607      	mov	r7, r0
 80112b2:	a812      	add	r0, sp, #72	; 0x48
 80112b4:	2400      	movs	r4, #0
 80112b6:	f2c2 0500 	movt	r5, #8192	; 0x2000
 80112ba:	f2c2 0600 	movt	r6, #8192	; 0x2000
 80112be:	2101      	movs	r1, #1
 80112c0:	2202      	movs	r2, #2
 80112c2:	e9cd 470a 	strd	r4, r7, [sp, #40]	; 0x28
 80112c6:	e9cd 470c 	strd	r4, r7, [sp, #48]	; 0x30
 80112ca:	950e      	str	r5, [sp, #56]	; 0x38
 80112cc:	e9cd 640f 	strd	r6, r4, [sp, #60]	; 0x3c
 80112d0:	e9cd 4712 	strd	r4, r7, [sp, #72]	; 0x48
 80112d4:	f005 fbc7 	bl	8016a66 <LeaveFrame>
 80112d8:	f107 0008 	add.w	r0, r7, #8
 80112dc:	4629      	mov	r1, r5
 80112de:	f002 ff77 	bl	80141d0 <UpdateRef>
 80112e2:	f107 0014 	add.w	r0, r7, #20
 80112e6:	4631      	mov	r1, r6
 80112e8:	f002 ff72 	bl	80141d0 <UpdateRef>
 80112ec:	f107 000c 	add.w	r0, r7, #12
 80112f0:	2100      	movs	r1, #0
 80112f2:	743c      	strb	r4, [r7, #16]
 80112f4:	f002 ff6c 	bl	80141d0 <UpdateRef>
 80112f8:	a80c      	add	r0, sp, #48	; 0x30
 80112fa:	2104      	movs	r1, #4
 80112fc:	2205      	movs	r2, #5
 80112fe:	f005 fbb2 	bl	8016a66 <LeaveFrame>
 8011302:	a80a      	add	r0, sp, #40	; 0x28
 8011304:	2101      	movs	r1, #1
 8011306:	2202      	movs	r2, #2
 8011308:	f005 fbad 	bl	8016a66 <LeaveFrame>
 801130c:	f643 4070 	movw	r0, #15472	; 0x3c70
 8011310:	f10a 0108 	add.w	r1, sl, #8
 8011314:	f6c0 0002 	movt	r0, #2050	; 0x802
 8011318:	f005 faef 	bl	80168fa <AllocInstance>
 801131c:	4605      	mov	r5, r0
 801131e:	f642 76c0 	movw	r6, #12224	; 0x2fc0
 8011322:	a812      	add	r0, sp, #72	; 0x48
 8011324:	f2c2 0600 	movt	r6, #8192	; 0x2000
 8011328:	2101      	movs	r1, #1
 801132a:	2202      	movs	r2, #2
 801132c:	e9cd 450c 	strd	r4, r5, [sp, #48]	; 0x30
 8011330:	e9cd 670e 	strd	r6, r7, [sp, #56]	; 0x38
 8011334:	e9cd 4512 	strd	r4, r5, [sp, #72]	; 0x48
 8011338:	f005 fb95 	bl	8016a66 <LeaveFrame>
 801133c:	f105 0008 	add.w	r0, r5, #8
 8011340:	4631      	mov	r1, r6
 8011342:	f002 ff45 	bl	80141d0 <UpdateRef>
 8011346:	f105 000c 	add.w	r0, r5, #12
 801134a:	4639      	mov	r1, r7
 801134c:	f002 ff40 	bl	80141d0 <UpdateRef>
 8011350:	a80c      	add	r0, sp, #48	; 0x30
 8011352:	2103      	movs	r1, #3
 8011354:	2204      	movs	r2, #4
 8011356:	f005 fb86 	bl	8016a66 <LeaveFrame>
 801135a:	4648      	mov	r0, r9
 801135c:	4629      	mov	r1, r5
 801135e:	f002 ff37 	bl	80141d0 <UpdateRef>
 8011362:	f642 5630 	movw	r6, #11568	; 0x2d30
 8011366:	f10a 0210 	add.w	r2, sl, #16
 801136a:	f6c0 0602 	movt	r6, #2050	; 0x802
 801136e:	2101      	movs	r1, #1
 8011370:	4630      	mov	r0, r6
 8011372:	f003 fac1 	bl	80148f8 <AllocArrayInstance>
 8011376:	4605      	mov	r5, r0
 8011378:	a80c      	add	r0, sp, #48	; 0x30
 801137a:	2101      	movs	r1, #1
 801137c:	2202      	movs	r2, #2
 801137e:	e9cd 4512 	strd	r4, r5, [sp, #72]	; 0x48
 8011382:	e9cd 450c 	strd	r4, r5, [sp, #48]	; 0x30
 8011386:	f005 fb6e 	bl	8016a66 <LeaveFrame>
 801138a:	a80c      	add	r0, sp, #48	; 0x30
 801138c:	2101      	movs	r1, #1
 801138e:	2202      	movs	r2, #2
 8011390:	e9cd 450c 	strd	r4, r5, [sp, #48]	; 0x30
 8011394:	f005 fb67 	bl	8016a66 <LeaveFrame>
 8011398:	a812      	add	r0, sp, #72	; 0x48
 801139a:	2101      	movs	r1, #1
 801139c:	2202      	movs	r2, #2
 801139e:	f005 fb62 	bl	8016a66 <LeaveFrame>
 80113a2:	4640      	mov	r0, r8
 80113a4:	4629      	mov	r1, r5
 80113a6:	f002 ff13 	bl	80141d0 <UpdateRef>
 80113aa:	9d05      	ldr	r5, [sp, #20]
 80113ac:	f10a 0018 	add.w	r0, sl, #24
 80113b0:	4629      	mov	r1, r5
 80113b2:	f002 ff0d 	bl	80141d0 <UpdateRef>
 80113b6:	9f03      	ldr	r7, [sp, #12]
 80113b8:	f10a 001c 	add.w	r0, sl, #28
 80113bc:	4639      	mov	r1, r7
 80113be:	f002 ff07 	bl	80141d0 <UpdateRef>
 80113c2:	4628      	mov	r0, r5
 80113c4:	2100      	movs	r1, #0
 80113c6:	463a      	mov	r2, r7
 80113c8:	f003 fa16 	bl	80147f8 <Kotlin_Array_set>
 80113cc:	9d05      	ldr	r5, [sp, #20]
 80113ce:	f10a 0020 	add.w	r0, sl, #32
 80113d2:	4629      	mov	r1, r5
 80113d4:	f002 fefc 	bl	80141d0 <UpdateRef>
 80113d8:	4628      	mov	r0, r5
 80113da:	4631      	mov	r1, r6
 80113dc:	e9cd 450c 	strd	r4, r5, [sp, #48]	; 0x30
 80113e0:	f005 fd3c 	bl	8016e5c <CheckInstance>
 80113e4:	f10a 0024 	add.w	r0, sl, #36	; 0x24
 80113e8:	4629      	mov	r1, r5
 80113ea:	f003 f8fe 	bl	80145ea <UpdateReturnRef>
 80113ee:	a80c      	add	r0, sp, #48	; 0x30
 80113f0:	2101      	movs	r1, #1
 80113f2:	2202      	movs	r2, #2
 80113f4:	f005 fb37 	bl	8016a66 <LeaveFrame>
 80113f8:	f240 1058 	movw	r0, #344	; 0x158
 80113fc:	4629      	mov	r1, r5
 80113fe:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011402:	e012      	b.n	801142a <__unnamed_70+0x1b2>
 8011404:	f240 1058 	movw	r0, #344	; 0x158
 8011408:	2100      	movs	r1, #0
 801140a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801140e:	f002 fedf 	bl	80141d0 <UpdateRef>
 8011412:	f240 000c 	movw	r0, #12
 8011416:	2100      	movs	r1, #0
 8011418:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801141c:	f002 fed8 	bl	80141d0 <UpdateRef>
 8011420:	f240 102c 	movw	r0, #300	; 0x12c
 8011424:	2100      	movs	r1, #0
 8011426:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801142a:	f002 fed1 	bl	80141d0 <UpdateRef>
 801142e:	4668      	mov	r0, sp
 8011430:	2100      	movs	r1, #0
 8011432:	220a      	movs	r2, #10
 8011434:	f005 fb17 	bl	8016a66 <LeaveFrame>
 8011438:	b014      	add	sp, #80	; 0x50
 801143a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801143e <kfun:kotlin.text.regex.$KPROPERTIES.$<get-decomposedCharUTF16>$0.invoke#internal>:
 801143e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011440:	af03      	add	r7, sp, #12
 8011442:	f84d bd04 	str.w	fp, [sp, #-4]!
 8011446:	b08a      	sub	sp, #40	; 0x28
 8011448:	4614      	mov	r4, r2
 801144a:	2200      	movs	r2, #0
 801144c:	e9cd 2000 	strd	r2, r0, [sp]
 8011450:	ae04      	add	r6, sp, #16
 8011452:	e9cd 1202 	strd	r1, r2, [sp, #8]
 8011456:	f106 0008 	add.w	r0, r6, #8
 801145a:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801145e:	e9cd 2206 	strd	r2, r2, [sp, #24]
 8011462:	e9cd 2104 	strd	r2, r1, [sp, #16]
 8011466:	6989      	ldr	r1, [r1, #24]
 8011468:	f002 feb2 	bl	80141d0 <UpdateRef>
 801146c:	f240 1058 	movw	r0, #344	; 0x158
 8011470:	f106 020c 	add.w	r2, r6, #12
 8011474:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011478:	2100      	movs	r1, #0
 801147a:	6800      	ldr	r0, [r0, #0]
 801147c:	f003 f8a4 	bl	80145c8 <Kotlin_Array_get>
 8011480:	4601      	mov	r1, r0
 8011482:	f106 0010 	add.w	r0, r6, #16
 8011486:	f002 fea3 	bl	80141d0 <UpdateRef>
 801148a:	9d06      	ldr	r5, [sp, #24]
 801148c:	f64c 22d0 	movw	r2, #51920	; 0xcad0
 8011490:	f242 53a1 	movw	r3, #9633	; 0x25a1
 8011494:	f6c5 12cc 	movt	r2, #22988	; 0x59cc
 8011498:	f6c8 33a1 	movt	r3, #35745	; 0x8ba1
 801149c:	6828      	ldr	r0, [r5, #0]
 801149e:	f005 fca3 	bl	8016de8 <LookupOpenMethod>
 80114a2:	4602      	mov	r2, r0
 80114a4:	f106 0114 	add.w	r1, r6, #20
 80114a8:	4628      	mov	r0, r5
 80114aa:	4790      	blx	r2
 80114ac:	4605      	mov	r5, r0
 80114ae:	466e      	mov	r6, sp
 80114b0:	f106 000c 	add.w	r0, r6, #12
 80114b4:	4629      	mov	r1, r5
 80114b6:	f003 f898 	bl	80145ea <UpdateReturnRef>
 80114ba:	a804      	add	r0, sp, #16
 80114bc:	2101      	movs	r1, #1
 80114be:	2206      	movs	r2, #6
 80114c0:	f005 fad1 	bl	8016a66 <LeaveFrame>
 80114c4:	4620      	mov	r0, r4
 80114c6:	4629      	mov	r1, r5
 80114c8:	f003 f88f 	bl	80145ea <UpdateReturnRef>
 80114cc:	4630      	mov	r0, r6
 80114ce:	2102      	movs	r1, #2
 80114d0:	2204      	movs	r2, #4
 80114d2:	f005 fac8 	bl	8016a66 <LeaveFrame>
 80114d6:	4628      	mov	r0, r5
 80114d8:	b00a      	add	sp, #40	; 0x28
 80114da:	f85d bb04 	ldr.w	fp, [sp], #4
 80114de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80114e0:	4604      	mov	r4, r0
 80114e2:	a804      	add	r0, sp, #16
 80114e4:	2101      	movs	r1, #1
 80114e6:	2206      	movs	r2, #6
 80114e8:	f005 fabd 	bl	8016a66 <LeaveFrame>
 80114ec:	4668      	mov	r0, sp
 80114ee:	2102      	movs	r1, #2
 80114f0:	2204      	movs	r2, #4
 80114f2:	f005 fab8 	bl	8016a66 <LeaveFrame>
 80114f6:	4620      	mov	r0, r4
 80114f8:	f7ef fe78 	bl	80011ec <_Unwind_Resume>

080114fc <__unnamed_71>:
 80114fc:	2800      	cmp	r0, #0
 80114fe:	bf18      	it	ne
 8011500:	4770      	bxne	lr
 8011502:	b580      	push	{r7, lr}
 8011504:	f240 1038 	movw	r0, #312	; 0x138
 8011508:	2100      	movs	r1, #0
 801150a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801150e:	f002 fe5f 	bl	80141d0 <UpdateRef>
 8011512:	f240 000c 	movw	r0, #12
 8011516:	2100      	movs	r1, #0
 8011518:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801151c:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8011520:	f002 be56 	b.w	80141d0 <UpdateRef>

08011524 <__unnamed_72>:
 8011524:	2800      	cmp	r0, #0
 8011526:	bf18      	it	ne
 8011528:	4770      	bxne	lr
 801152a:	f240 103c 	movw	r0, #316	; 0x13c
 801152e:	2100      	movs	r1, #0
 8011530:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011534:	f002 be4c 	b.w	80141d0 <UpdateRef>

08011538 <__unnamed_73>:
 8011538:	2800      	cmp	r0, #0
 801153a:	bf18      	it	ne
 801153c:	4770      	bxne	lr
 801153e:	f240 1034 	movw	r0, #308	; 0x134
 8011542:	2100      	movs	r1, #0
 8011544:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011548:	f002 be42 	b.w	80141d0 <UpdateRef>

0801154c <__unnamed_74>:
 801154c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011550:	b094      	sub	sp, #80	; 0x50
 8011552:	46ea      	mov	sl, sp
 8011554:	4605      	mov	r5, r0
 8011556:	4650      	mov	r0, sl
 8011558:	2128      	movs	r1, #40	; 0x28
 801155a:	f009 ffcd 	bl	801b4f8 <__aeabi_memclr>
 801155e:	2d00      	cmp	r5, #0
 8011560:	f000 80ba 	beq.w	80116d8 <__unnamed_74+0x18c>
 8011564:	f244 5000 	movw	r0, #17664	; 0x4500
 8011568:	f10a 0104 	add.w	r1, sl, #4
 801156c:	f6c0 0002 	movt	r0, #2050	; 0x802
 8011570:	f10a 0814 	add.w	r8, sl, #20
 8011574:	f10a 090c 	add.w	r9, sl, #12
 8011578:	f005 f9bf 	bl	80168fa <AllocInstance>
 801157c:	f243 05d0 	movw	r5, #12496	; 0x30d0
 8011580:	f243 1680 	movw	r6, #12672	; 0x3180
 8011584:	4607      	mov	r7, r0
 8011586:	a812      	add	r0, sp, #72	; 0x48
 8011588:	2400      	movs	r4, #0
 801158a:	f2c2 0500 	movt	r5, #8192	; 0x2000
 801158e:	f2c2 0600 	movt	r6, #8192	; 0x2000
 8011592:	2101      	movs	r1, #1
 8011594:	2202      	movs	r2, #2
 8011596:	e9cd 470a 	strd	r4, r7, [sp, #40]	; 0x28
 801159a:	e9cd 470c 	strd	r4, r7, [sp, #48]	; 0x30
 801159e:	950e      	str	r5, [sp, #56]	; 0x38
 80115a0:	e9cd 640f 	strd	r6, r4, [sp, #60]	; 0x3c
 80115a4:	e9cd 4712 	strd	r4, r7, [sp, #72]	; 0x48
 80115a8:	f005 fa5d 	bl	8016a66 <LeaveFrame>
 80115ac:	f107 0008 	add.w	r0, r7, #8
 80115b0:	4629      	mov	r1, r5
 80115b2:	f002 fe0d 	bl	80141d0 <UpdateRef>
 80115b6:	f107 0014 	add.w	r0, r7, #20
 80115ba:	4631      	mov	r1, r6
 80115bc:	f002 fe08 	bl	80141d0 <UpdateRef>
 80115c0:	f107 000c 	add.w	r0, r7, #12
 80115c4:	2100      	movs	r1, #0
 80115c6:	743c      	strb	r4, [r7, #16]
 80115c8:	f002 fe02 	bl	80141d0 <UpdateRef>
 80115cc:	a80c      	add	r0, sp, #48	; 0x30
 80115ce:	2104      	movs	r1, #4
 80115d0:	2205      	movs	r2, #5
 80115d2:	f005 fa48 	bl	8016a66 <LeaveFrame>
 80115d6:	a80a      	add	r0, sp, #40	; 0x28
 80115d8:	2101      	movs	r1, #1
 80115da:	2202      	movs	r2, #2
 80115dc:	f005 fa43 	bl	8016a66 <LeaveFrame>
 80115e0:	f643 4070 	movw	r0, #15472	; 0x3c70
 80115e4:	f10a 0108 	add.w	r1, sl, #8
 80115e8:	f6c0 0002 	movt	r0, #2050	; 0x802
 80115ec:	f005 f985 	bl	80168fa <AllocInstance>
 80115f0:	4605      	mov	r5, r0
 80115f2:	f642 76c0 	movw	r6, #12224	; 0x2fc0
 80115f6:	a812      	add	r0, sp, #72	; 0x48
 80115f8:	f2c2 0600 	movt	r6, #8192	; 0x2000
 80115fc:	2101      	movs	r1, #1
 80115fe:	2202      	movs	r2, #2
 8011600:	e9cd 450c 	strd	r4, r5, [sp, #48]	; 0x30
 8011604:	e9cd 670e 	strd	r6, r7, [sp, #56]	; 0x38
 8011608:	e9cd 4512 	strd	r4, r5, [sp, #72]	; 0x48
 801160c:	f005 fa2b 	bl	8016a66 <LeaveFrame>
 8011610:	f105 0008 	add.w	r0, r5, #8
 8011614:	4631      	mov	r1, r6
 8011616:	f002 fddb 	bl	80141d0 <UpdateRef>
 801161a:	f105 000c 	add.w	r0, r5, #12
 801161e:	4639      	mov	r1, r7
 8011620:	f002 fdd6 	bl	80141d0 <UpdateRef>
 8011624:	a80c      	add	r0, sp, #48	; 0x30
 8011626:	2103      	movs	r1, #3
 8011628:	2204      	movs	r2, #4
 801162a:	f005 fa1c 	bl	8016a66 <LeaveFrame>
 801162e:	4648      	mov	r0, r9
 8011630:	4629      	mov	r1, r5
 8011632:	f002 fdcd 	bl	80141d0 <UpdateRef>
 8011636:	f642 5630 	movw	r6, #11568	; 0x2d30
 801163a:	f10a 0210 	add.w	r2, sl, #16
 801163e:	f6c0 0602 	movt	r6, #2050	; 0x802
 8011642:	2101      	movs	r1, #1
 8011644:	4630      	mov	r0, r6
 8011646:	f003 f957 	bl	80148f8 <AllocArrayInstance>
 801164a:	4605      	mov	r5, r0
 801164c:	a80c      	add	r0, sp, #48	; 0x30
 801164e:	2101      	movs	r1, #1
 8011650:	2202      	movs	r2, #2
 8011652:	e9cd 4512 	strd	r4, r5, [sp, #72]	; 0x48
 8011656:	e9cd 450c 	strd	r4, r5, [sp, #48]	; 0x30
 801165a:	f005 fa04 	bl	8016a66 <LeaveFrame>
 801165e:	a80c      	add	r0, sp, #48	; 0x30
 8011660:	2101      	movs	r1, #1
 8011662:	2202      	movs	r2, #2
 8011664:	e9cd 450c 	strd	r4, r5, [sp, #48]	; 0x30
 8011668:	f005 f9fd 	bl	8016a66 <LeaveFrame>
 801166c:	a812      	add	r0, sp, #72	; 0x48
 801166e:	2101      	movs	r1, #1
 8011670:	2202      	movs	r2, #2
 8011672:	f005 f9f8 	bl	8016a66 <LeaveFrame>
 8011676:	4640      	mov	r0, r8
 8011678:	4629      	mov	r1, r5
 801167a:	f002 fda9 	bl	80141d0 <UpdateRef>
 801167e:	9d05      	ldr	r5, [sp, #20]
 8011680:	f10a 0018 	add.w	r0, sl, #24
 8011684:	4629      	mov	r1, r5
 8011686:	f002 fda3 	bl	80141d0 <UpdateRef>
 801168a:	9f03      	ldr	r7, [sp, #12]
 801168c:	f10a 001c 	add.w	r0, sl, #28
 8011690:	4639      	mov	r1, r7
 8011692:	f002 fd9d 	bl	80141d0 <UpdateRef>
 8011696:	4628      	mov	r0, r5
 8011698:	2100      	movs	r1, #0
 801169a:	463a      	mov	r2, r7
 801169c:	f003 f8ac 	bl	80147f8 <Kotlin_Array_set>
 80116a0:	9d05      	ldr	r5, [sp, #20]
 80116a2:	f10a 0020 	add.w	r0, sl, #32
 80116a6:	4629      	mov	r1, r5
 80116a8:	f002 fd92 	bl	80141d0 <UpdateRef>
 80116ac:	4628      	mov	r0, r5
 80116ae:	4631      	mov	r1, r6
 80116b0:	e9cd 450c 	strd	r4, r5, [sp, #48]	; 0x30
 80116b4:	f005 fbd2 	bl	8016e5c <CheckInstance>
 80116b8:	f10a 0024 	add.w	r0, sl, #36	; 0x24
 80116bc:	4629      	mov	r1, r5
 80116be:	f002 ff94 	bl	80145ea <UpdateReturnRef>
 80116c2:	a80c      	add	r0, sp, #48	; 0x30
 80116c4:	2101      	movs	r1, #1
 80116c6:	2202      	movs	r2, #2
 80116c8:	f005 f9cd 	bl	8016a66 <LeaveFrame>
 80116cc:	f240 1050 	movw	r0, #336	; 0x150
 80116d0:	4629      	mov	r1, r5
 80116d2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80116d6:	e00b      	b.n	80116f0 <__unnamed_74+0x1a4>
 80116d8:	f240 1050 	movw	r0, #336	; 0x150
 80116dc:	2100      	movs	r1, #0
 80116de:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80116e2:	f002 fd75 	bl	80141d0 <UpdateRef>
 80116e6:	f240 102c 	movw	r0, #300	; 0x12c
 80116ea:	2100      	movs	r1, #0
 80116ec:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80116f0:	f002 fd6e 	bl	80141d0 <UpdateRef>
 80116f4:	4668      	mov	r0, sp
 80116f6:	2100      	movs	r1, #0
 80116f8:	220a      	movs	r2, #10
 80116fa:	f005 f9b4 	bl	8016a66 <LeaveFrame>
 80116fe:	b014      	add	sp, #80	; 0x50
 8011700:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08011704 <kfun:kotlin.text.regex.$KPROPERTIES.$<get-decomposedCharUTF16>$0.invoke#internal.57>:
 8011704:	b5b0      	push	{r4, r5, r7, lr}
 8011706:	af02      	add	r7, sp, #8
 8011708:	b084      	sub	sp, #16
 801170a:	4614      	mov	r4, r2
 801170c:	2200      	movs	r2, #0
 801170e:	e9cd 2000 	strd	r2, r0, [sp]
 8011712:	e9cd 1202 	strd	r1, r2, [sp, #8]
 8011716:	4668      	mov	r0, sp
 8011718:	f100 020c 	add.w	r2, r0, #12
 801171c:	4608      	mov	r0, r1
 801171e:	4611      	mov	r1, r2
 8011720:	f7fe f835 	bl	800f78e <kfun:kotlin.text.regex.HangulDecomposedCharSet.<get-decomposedCharUTF16>#internal>
 8011724:	4605      	mov	r5, r0
 8011726:	4620      	mov	r0, r4
 8011728:	4629      	mov	r1, r5
 801172a:	f002 ff5e 	bl	80145ea <UpdateReturnRef>
 801172e:	4668      	mov	r0, sp
 8011730:	2102      	movs	r1, #2
 8011732:	2204      	movs	r2, #4
 8011734:	f005 f997 	bl	8016a66 <LeaveFrame>
 8011738:	4628      	mov	r0, r5
 801173a:	b004      	add	sp, #16
 801173c:	bdb0      	pop	{r4, r5, r7, pc}
 801173e:	4604      	mov	r4, r0
 8011740:	4668      	mov	r0, sp
 8011742:	2102      	movs	r1, #2
 8011744:	2204      	movs	r2, #4
 8011746:	f005 f98e 	bl	8016a66 <LeaveFrame>
 801174a:	4620      	mov	r0, r4
 801174c:	f7ef fd4e 	bl	80011ec <_Unwind_Resume>

08011750 <__unnamed_75>:
 8011750:	2800      	cmp	r0, #0
 8011752:	bf18      	it	ne
 8011754:	4770      	bxne	lr
 8011756:	f240 0048 	movw	r0, #72	; 0x48
 801175a:	2100      	movs	r1, #0
 801175c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011760:	f002 bd36 	b.w	80141d0 <UpdateRef>

08011764 <__unnamed_76>:
 8011764:	2800      	cmp	r0, #0
 8011766:	bf18      	it	ne
 8011768:	4770      	bxne	lr
 801176a:	f240 1034 	movw	r0, #308	; 0x134
 801176e:	2100      	movs	r1, #0
 8011770:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011774:	f002 bd2c 	b.w	80141d0 <UpdateRef>

08011778 <__unnamed_77>:
 8011778:	2800      	cmp	r0, #0
 801177a:	bf18      	it	ne
 801177c:	4770      	bxne	lr
 801177e:	f240 1038 	movw	r0, #312	; 0x138
 8011782:	2100      	movs	r1, #0
 8011784:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011788:	f002 bd22 	b.w	80141d0 <UpdateRef>

0801178c <__unnamed_78>:
 801178c:	2800      	cmp	r0, #0
 801178e:	bf18      	it	ne
 8011790:	4770      	bxne	lr
 8011792:	b580      	push	{r7, lr}
 8011794:	f240 103c 	movw	r0, #316	; 0x13c
 8011798:	2100      	movs	r1, #0
 801179a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801179e:	f002 fd17 	bl	80141d0 <UpdateRef>
 80117a2:	f240 1034 	movw	r0, #308	; 0x134
 80117a6:	2100      	movs	r1, #0
 80117a8:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80117ac:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80117b0:	f002 bd0e 	b.w	80141d0 <UpdateRef>

080117b4 <__unnamed_79>:
 80117b4:	2800      	cmp	r0, #0
 80117b6:	bf18      	it	ne
 80117b8:	4770      	bxne	lr
 80117ba:	f240 1034 	movw	r0, #308	; 0x134
 80117be:	2100      	movs	r1, #0
 80117c0:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80117c4:	f002 bd04 	b.w	80141d0 <UpdateRef>

080117c8 <__unnamed_80>:
 80117c8:	2800      	cmp	r0, #0
 80117ca:	bf18      	it	ne
 80117cc:	4770      	bxne	lr
 80117ce:	f240 1014 	movw	r0, #276	; 0x114
 80117d2:	2100      	movs	r1, #0
 80117d4:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80117d8:	f002 bcfa 	b.w	80141d0 <UpdateRef>

080117dc <__unnamed_81>:
 80117dc:	2800      	cmp	r0, #0
 80117de:	bf18      	it	ne
 80117e0:	4770      	bxne	lr
 80117e2:	f240 1034 	movw	r0, #308	; 0x134
 80117e6:	2100      	movs	r1, #0
 80117e8:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80117ec:	f002 bcf0 	b.w	80141d0 <UpdateRef>

080117f0 <__unnamed_82>:
 80117f0:	2800      	cmp	r0, #0
 80117f2:	bf18      	it	ne
 80117f4:	4770      	bxne	lr
 80117f6:	f240 1034 	movw	r0, #308	; 0x134
 80117fa:	2100      	movs	r1, #0
 80117fc:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011800:	f002 bce6 	b.w	80141d0 <UpdateRef>

08011804 <__unnamed_83>:
 8011804:	2800      	cmp	r0, #0
 8011806:	bf18      	it	ne
 8011808:	4770      	bxne	lr
 801180a:	f240 000c 	movw	r0, #12
 801180e:	2100      	movs	r1, #0
 8011810:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011814:	f002 bcdc 	b.w	80141d0 <UpdateRef>

08011818 <__unnamed_84>:
 8011818:	2800      	cmp	r0, #0
 801181a:	bf18      	it	ne
 801181c:	4770      	bxne	lr
 801181e:	f240 000c 	movw	r0, #12
 8011822:	2100      	movs	r1, #0
 8011824:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011828:	f002 bcd2 	b.w	80141d0 <UpdateRef>

0801182c <__unnamed_85>:
 801182c:	2800      	cmp	r0, #0
 801182e:	bf18      	it	ne
 8011830:	4770      	bxne	lr
 8011832:	b580      	push	{r7, lr}
 8011834:	f240 000c 	movw	r0, #12
 8011838:	2100      	movs	r1, #0
 801183a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801183e:	f002 fcc7 	bl	80141d0 <UpdateRef>
 8011842:	f240 1014 	movw	r0, #276	; 0x114
 8011846:	2100      	movs	r1, #0
 8011848:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801184c:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8011850:	f002 bcbe 	b.w	80141d0 <UpdateRef>

08011854 <__unnamed_86>:
 8011854:	2800      	cmp	r0, #0
 8011856:	bf18      	it	ne
 8011858:	4770      	bxne	lr
 801185a:	f240 0048 	movw	r0, #72	; 0x48
 801185e:	2100      	movs	r1, #0
 8011860:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011864:	f002 bcb4 	b.w	80141d0 <UpdateRef>

08011868 <__unnamed_87>:
 8011868:	2800      	cmp	r0, #0
 801186a:	bf18      	it	ne
 801186c:	4770      	bxne	lr
 801186e:	f240 0048 	movw	r0, #72	; 0x48
 8011872:	2100      	movs	r1, #0
 8011874:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011878:	f002 bcaa 	b.w	80141d0 <UpdateRef>

0801187c <__unnamed_88>:
 801187c:	2800      	cmp	r0, #0
 801187e:	bf18      	it	ne
 8011880:	4770      	bxne	lr
 8011882:	f240 1034 	movw	r0, #308	; 0x134
 8011886:	2100      	movs	r1, #0
 8011888:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801188c:	f002 bca0 	b.w	80141d0 <UpdateRef>

08011890 <_Konan_init_stdlib>:
 8011890:	f240 105c 	movw	r0, #348	; 0x15c
 8011894:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011898:	7801      	ldrb	r1, [r0, #0]
 801189a:	2900      	cmp	r1, #0
 801189c:	bf18      	it	ne
 801189e:	4770      	bxne	lr
 80118a0:	b580      	push	{r7, lr}
 80118a2:	2101      	movs	r1, #1
 80118a4:	7001      	strb	r1, [r0, #0]
 80118a6:	f242 60e4 	movw	r0, #9956	; 0x26e4
 80118aa:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80118ae:	f005 f9f5 	bl	8016c9c <AppendToInitializersTail>
 80118b2:	f242 60ec 	movw	r0, #9964	; 0x26ec
 80118b6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80118ba:	f005 f9ef 	bl	8016c9c <AppendToInitializersTail>
 80118be:	f242 60f4 	movw	r0, #9972	; 0x26f4
 80118c2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80118c6:	f005 f9e9 	bl	8016c9c <AppendToInitializersTail>
 80118ca:	f242 60fc 	movw	r0, #9980	; 0x26fc
 80118ce:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80118d2:	f005 f9e3 	bl	8016c9c <AppendToInitializersTail>
 80118d6:	f242 7004 	movw	r0, #9988	; 0x2704
 80118da:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80118de:	f005 f9dd 	bl	8016c9c <AppendToInitializersTail>
 80118e2:	f242 700c 	movw	r0, #9996	; 0x270c
 80118e6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80118ea:	f005 f9d7 	bl	8016c9c <AppendToInitializersTail>
 80118ee:	f242 7014 	movw	r0, #10004	; 0x2714
 80118f2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80118f6:	f005 f9d1 	bl	8016c9c <AppendToInitializersTail>
 80118fa:	f242 701c 	movw	r0, #10012	; 0x271c
 80118fe:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011902:	f005 f9cb 	bl	8016c9c <AppendToInitializersTail>
 8011906:	f242 7024 	movw	r0, #10020	; 0x2724
 801190a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801190e:	f005 f9c5 	bl	8016c9c <AppendToInitializersTail>
 8011912:	f242 702c 	movw	r0, #10028	; 0x272c
 8011916:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801191a:	f005 f9bf 	bl	8016c9c <AppendToInitializersTail>
 801191e:	f242 7034 	movw	r0, #10036	; 0x2734
 8011922:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011926:	f005 f9b9 	bl	8016c9c <AppendToInitializersTail>
 801192a:	f242 703c 	movw	r0, #10044	; 0x273c
 801192e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011932:	f005 f9b3 	bl	8016c9c <AppendToInitializersTail>
 8011936:	f242 7044 	movw	r0, #10052	; 0x2744
 801193a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801193e:	f005 f9ad 	bl	8016c9c <AppendToInitializersTail>
 8011942:	f242 704c 	movw	r0, #10060	; 0x274c
 8011946:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801194a:	f005 f9a7 	bl	8016c9c <AppendToInitializersTail>
 801194e:	f242 7054 	movw	r0, #10068	; 0x2754
 8011952:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011956:	f005 f9a1 	bl	8016c9c <AppendToInitializersTail>
 801195a:	f242 705c 	movw	r0, #10076	; 0x275c
 801195e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011962:	f005 f99b 	bl	8016c9c <AppendToInitializersTail>
 8011966:	f242 7064 	movw	r0, #10084	; 0x2764
 801196a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801196e:	f005 f995 	bl	8016c9c <AppendToInitializersTail>
 8011972:	f242 706c 	movw	r0, #10092	; 0x276c
 8011976:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801197a:	f005 f98f 	bl	8016c9c <AppendToInitializersTail>
 801197e:	f242 7074 	movw	r0, #10100	; 0x2774
 8011982:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011986:	f005 f989 	bl	8016c9c <AppendToInitializersTail>
 801198a:	f242 707c 	movw	r0, #10108	; 0x277c
 801198e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011992:	f005 f983 	bl	8016c9c <AppendToInitializersTail>
 8011996:	f242 7084 	movw	r0, #10116	; 0x2784
 801199a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801199e:	f005 f97d 	bl	8016c9c <AppendToInitializersTail>
 80119a2:	f242 708c 	movw	r0, #10124	; 0x278c
 80119a6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80119aa:	f005 f977 	bl	8016c9c <AppendToInitializersTail>
 80119ae:	f242 7094 	movw	r0, #10132	; 0x2794
 80119b2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80119b6:	f005 f971 	bl	8016c9c <AppendToInitializersTail>
 80119ba:	f242 709c 	movw	r0, #10140	; 0x279c
 80119be:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80119c2:	f005 f96b 	bl	8016c9c <AppendToInitializersTail>
 80119c6:	f242 70a4 	movw	r0, #10148	; 0x27a4
 80119ca:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80119ce:	f005 f965 	bl	8016c9c <AppendToInitializersTail>
 80119d2:	f242 70ac 	movw	r0, #10156	; 0x27ac
 80119d6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80119da:	f005 f95f 	bl	8016c9c <AppendToInitializersTail>
 80119de:	f242 70b4 	movw	r0, #10164	; 0x27b4
 80119e2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80119e6:	f005 f959 	bl	8016c9c <AppendToInitializersTail>
 80119ea:	f242 70bc 	movw	r0, #10172	; 0x27bc
 80119ee:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80119f2:	f005 f953 	bl	8016c9c <AppendToInitializersTail>
 80119f6:	f242 70c4 	movw	r0, #10180	; 0x27c4
 80119fa:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80119fe:	f005 f94d 	bl	8016c9c <AppendToInitializersTail>
 8011a02:	f242 70cc 	movw	r0, #10188	; 0x27cc
 8011a06:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011a0a:	f005 f947 	bl	8016c9c <AppendToInitializersTail>
 8011a0e:	f242 70d4 	movw	r0, #10196	; 0x27d4
 8011a12:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011a16:	f005 f941 	bl	8016c9c <AppendToInitializersTail>
 8011a1a:	f242 70dc 	movw	r0, #10204	; 0x27dc
 8011a1e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011a22:	f005 f93b 	bl	8016c9c <AppendToInitializersTail>
 8011a26:	f242 70e4 	movw	r0, #10212	; 0x27e4
 8011a2a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011a2e:	f005 f935 	bl	8016c9c <AppendToInitializersTail>
 8011a32:	f242 70ec 	movw	r0, #10220	; 0x27ec
 8011a36:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011a3a:	f005 f92f 	bl	8016c9c <AppendToInitializersTail>
 8011a3e:	f242 70f4 	movw	r0, #10228	; 0x27f4
 8011a42:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011a46:	f005 f929 	bl	8016c9c <AppendToInitializersTail>
 8011a4a:	f242 70fc 	movw	r0, #10236	; 0x27fc
 8011a4e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011a52:	f005 f923 	bl	8016c9c <AppendToInitializersTail>
 8011a56:	f642 0004 	movw	r0, #10244	; 0x2804
 8011a5a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011a5e:	f005 f91d 	bl	8016c9c <AppendToInitializersTail>
 8011a62:	f642 000c 	movw	r0, #10252	; 0x280c
 8011a66:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011a6a:	f005 f917 	bl	8016c9c <AppendToInitializersTail>
 8011a6e:	f642 0014 	movw	r0, #10260	; 0x2814
 8011a72:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011a76:	f005 f911 	bl	8016c9c <AppendToInitializersTail>
 8011a7a:	f642 001c 	movw	r0, #10268	; 0x281c
 8011a7e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011a82:	f005 f90b 	bl	8016c9c <AppendToInitializersTail>
 8011a86:	f642 0024 	movw	r0, #10276	; 0x2824
 8011a8a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011a8e:	f005 f905 	bl	8016c9c <AppendToInitializersTail>
 8011a92:	f642 002c 	movw	r0, #10284	; 0x282c
 8011a96:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011a9a:	f005 f8ff 	bl	8016c9c <AppendToInitializersTail>
 8011a9e:	f642 0034 	movw	r0, #10292	; 0x2834
 8011aa2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011aa6:	f005 f8f9 	bl	8016c9c <AppendToInitializersTail>
 8011aaa:	f642 003c 	movw	r0, #10300	; 0x283c
 8011aae:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011ab2:	f005 f8f3 	bl	8016c9c <AppendToInitializersTail>
 8011ab6:	f642 0044 	movw	r0, #10308	; 0x2844
 8011aba:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011abe:	f005 f8ed 	bl	8016c9c <AppendToInitializersTail>
 8011ac2:	f642 004c 	movw	r0, #10316	; 0x284c
 8011ac6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011aca:	f005 f8e7 	bl	8016c9c <AppendToInitializersTail>
 8011ace:	f642 0054 	movw	r0, #10324	; 0x2854
 8011ad2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011ad6:	f005 f8e1 	bl	8016c9c <AppendToInitializersTail>
 8011ada:	f642 005c 	movw	r0, #10332	; 0x285c
 8011ade:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011ae2:	f005 f8db 	bl	8016c9c <AppendToInitializersTail>
 8011ae6:	f642 0064 	movw	r0, #10340	; 0x2864
 8011aea:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011aee:	f005 f8d5 	bl	8016c9c <AppendToInitializersTail>
 8011af2:	f642 006c 	movw	r0, #10348	; 0x286c
 8011af6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011afa:	f005 f8cf 	bl	8016c9c <AppendToInitializersTail>
 8011afe:	f642 0074 	movw	r0, #10356	; 0x2874
 8011b02:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011b06:	f005 f8c9 	bl	8016c9c <AppendToInitializersTail>
 8011b0a:	f642 007c 	movw	r0, #10364	; 0x287c
 8011b0e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011b12:	f005 f8c3 	bl	8016c9c <AppendToInitializersTail>
 8011b16:	f642 0084 	movw	r0, #10372	; 0x2884
 8011b1a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011b1e:	f005 f8bd 	bl	8016c9c <AppendToInitializersTail>
 8011b22:	f642 008c 	movw	r0, #10380	; 0x288c
 8011b26:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011b2a:	f005 f8b7 	bl	8016c9c <AppendToInitializersTail>
 8011b2e:	f642 0094 	movw	r0, #10388	; 0x2894
 8011b32:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011b36:	f005 f8b1 	bl	8016c9c <AppendToInitializersTail>
 8011b3a:	f642 009c 	movw	r0, #10396	; 0x289c
 8011b3e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011b42:	f005 f8ab 	bl	8016c9c <AppendToInitializersTail>
 8011b46:	f642 00a4 	movw	r0, #10404	; 0x28a4
 8011b4a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011b4e:	f005 f8a5 	bl	8016c9c <AppendToInitializersTail>
 8011b52:	f642 00ac 	movw	r0, #10412	; 0x28ac
 8011b56:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011b5a:	f005 f89f 	bl	8016c9c <AppendToInitializersTail>
 8011b5e:	f642 00b4 	movw	r0, #10420	; 0x28b4
 8011b62:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011b66:	f005 f899 	bl	8016c9c <AppendToInitializersTail>
 8011b6a:	f642 7074 	movw	r0, #12148	; 0x2f74
 8011b6e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011b72:	f005 f893 	bl	8016c9c <AppendToInitializersTail>
 8011b76:	f642 707c 	movw	r0, #12156	; 0x2f7c
 8011b7a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011b7e:	f005 f88d 	bl	8016c9c <AppendToInitializersTail>
 8011b82:	f642 7084 	movw	r0, #12164	; 0x2f84
 8011b86:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011b8a:	f005 f887 	bl	8016c9c <AppendToInitializersTail>
 8011b8e:	f642 708c 	movw	r0, #12172	; 0x2f8c
 8011b92:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011b96:	f005 f881 	bl	8016c9c <AppendToInitializersTail>
 8011b9a:	f642 7094 	movw	r0, #12180	; 0x2f94
 8011b9e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011ba2:	f005 f87b 	bl	8016c9c <AppendToInitializersTail>
 8011ba6:	f642 709c 	movw	r0, #12188	; 0x2f9c
 8011baa:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011bae:	f005 f875 	bl	8016c9c <AppendToInitializersTail>
 8011bb2:	f642 70a4 	movw	r0, #12196	; 0x2fa4
 8011bb6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011bba:	f005 f86f 	bl	8016c9c <AppendToInitializersTail>
 8011bbe:	f642 70ac 	movw	r0, #12204	; 0x2fac
 8011bc2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011bc6:	f005 f869 	bl	8016c9c <AppendToInitializersTail>
 8011bca:	f642 70b4 	movw	r0, #12212	; 0x2fb4
 8011bce:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011bd2:	f005 f863 	bl	8016c9c <AppendToInitializersTail>
 8011bd6:	f243 1054 	movw	r0, #12628	; 0x3154
 8011bda:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011bde:	f005 f85d 	bl	8016c9c <AppendToInitializersTail>
 8011be2:	f243 105c 	movw	r0, #12636	; 0x315c
 8011be6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011bea:	f005 f857 	bl	8016c9c <AppendToInitializersTail>
 8011bee:	f243 1064 	movw	r0, #12644	; 0x3164
 8011bf2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011bf6:	f005 f851 	bl	8016c9c <AppendToInitializersTail>
 8011bfa:	f243 106c 	movw	r0, #12652	; 0x316c
 8011bfe:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011c02:	f005 f84b 	bl	8016c9c <AppendToInitializersTail>
 8011c06:	f243 2054 	movw	r0, #12884	; 0x3254
 8011c0a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011c0e:	f005 f845 	bl	8016c9c <AppendToInitializersTail>
 8011c12:	f243 205c 	movw	r0, #12892	; 0x325c
 8011c16:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011c1a:	f005 f83f 	bl	8016c9c <AppendToInitializersTail>
 8011c1e:	f243 2064 	movw	r0, #12900	; 0x3264
 8011c22:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011c26:	f005 f839 	bl	8016c9c <AppendToInitializersTail>
 8011c2a:	f243 206c 	movw	r0, #12908	; 0x326c
 8011c2e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011c32:	f005 f833 	bl	8016c9c <AppendToInitializersTail>
 8011c36:	f243 2074 	movw	r0, #12916	; 0x3274
 8011c3a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011c3e:	f005 f82d 	bl	8016c9c <AppendToInitializersTail>
 8011c42:	f243 207c 	movw	r0, #12924	; 0x327c
 8011c46:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011c4a:	f005 f827 	bl	8016c9c <AppendToInitializersTail>
 8011c4e:	f243 2084 	movw	r0, #12932	; 0x3284
 8011c52:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011c56:	f005 f821 	bl	8016c9c <AppendToInitializersTail>
 8011c5a:	f243 208c 	movw	r0, #12940	; 0x328c
 8011c5e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011c62:	f005 f81b 	bl	8016c9c <AppendToInitializersTail>
 8011c66:	f243 2094 	movw	r0, #12948	; 0x3294
 8011c6a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011c6e:	f005 f815 	bl	8016c9c <AppendToInitializersTail>
 8011c72:	f243 209c 	movw	r0, #12956	; 0x329c
 8011c76:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011c7a:	f005 f80f 	bl	8016c9c <AppendToInitializersTail>
 8011c7e:	f243 20a4 	movw	r0, #12964	; 0x32a4
 8011c82:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011c86:	f005 f809 	bl	8016c9c <AppendToInitializersTail>
 8011c8a:	f243 20ac 	movw	r0, #12972	; 0x32ac
 8011c8e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011c92:	f005 f803 	bl	8016c9c <AppendToInitializersTail>
 8011c96:	f243 20b4 	movw	r0, #12980	; 0x32b4
 8011c9a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011c9e:	f004 fffd 	bl	8016c9c <AppendToInitializersTail>
 8011ca2:	f243 20bc 	movw	r0, #12988	; 0x32bc
 8011ca6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011caa:	f004 fff7 	bl	8016c9c <AppendToInitializersTail>
 8011cae:	f243 20c4 	movw	r0, #12996	; 0x32c4
 8011cb2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011cb6:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8011cba:	f004 bfef 	b.w	8016c9c <AppendToInitializersTail>

08011cbe <InitMemory>:
 8011cbe:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011cc0:	af03      	add	r7, sp, #12
 8011cc2:	f84d bd04 	str.w	fp, [sp, #-4]!
 8011cc6:	f240 1568 	movw	r5, #360	; 0x168
 8011cca:	f2c2 0500 	movt	r5, #8192	; 0x2000
 8011cce:	6828      	ldr	r0, [r5, #0]
 8011cd0:	bbf0      	cbnz	r0, 8011d50 <InitMemory+0x92>
 8011cd2:	2001      	movs	r0, #1
 8011cd4:	2120      	movs	r1, #32
 8011cd6:	f009 fc1d 	bl	801b514 <calloc>
 8011cda:	4604      	mov	r4, r0
 8011cdc:	2600      	movs	r6, #0
 8011cde:	2001      	movs	r0, #1
 8011ce0:	2118      	movs	r1, #24
 8011ce2:	e9c4 6600 	strd	r6, r6, [r4]
 8011ce6:	e9c4 6602 	strd	r6, r6, [r4, #8]
 8011cea:	e9c4 6604 	strd	r6, r6, [r4, #16]
 8011cee:	e9c4 6606 	strd	r6, r6, [r4, #24]
 8011cf2:	602c      	str	r4, [r5, #0]
 8011cf4:	f009 fc0e 	bl	801b514 <calloc>
 8011cf8:	e9c0 6600 	strd	r6, r6, [r0]
 8011cfc:	e9c0 6602 	strd	r6, r6, [r0, #8]
 8011d00:	e9c0 6604 	strd	r6, r6, [r0, #16]
 8011d04:	6020      	str	r0, [r4, #0]
 8011d06:	2001      	movs	r0, #1
 8011d08:	210c      	movs	r1, #12
 8011d0a:	f009 fc03 	bl	801b514 <calloc>
 8011d0e:	4605      	mov	r5, r0
 8011d10:	2001      	movs	r0, #1
 8011d12:	210c      	movs	r1, #12
 8011d14:	6065      	str	r5, [r4, #4]
 8011d16:	f009 fbfd 	bl	801b514 <calloc>
 8011d1a:	60a0      	str	r0, [r4, #8]
 8011d1c:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8011d20:	7526      	strb	r6, [r4, #20]
 8011d22:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8011d26:	6120      	str	r0, [r4, #16]
 8011d28:	2001      	movs	r0, #1
 8011d2a:	f009 fbf3 	bl	801b514 <calloc>
 8011d2e:	e9c5 0000 	strd	r0, r0, [r5]
 8011d32:	f500 4180 	add.w	r1, r0, #16384	; 0x4000
 8011d36:	f240 106c 	movw	r0, #364	; 0x16c
 8011d3a:	60e6      	str	r6, [r4, #12]
 8011d3c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8011d40:	60a9      	str	r1, [r5, #8]
 8011d42:	6801      	ldr	r1, [r0, #0]
 8011d44:	3101      	adds	r1, #1
 8011d46:	6001      	str	r1, [r0, #0]
 8011d48:	4620      	mov	r0, r4
 8011d4a:	f85d bb04 	ldr.w	fp, [sp], #4
 8011d4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011d50:	f244 6020 	movw	r0, #17952	; 0x4620
 8011d54:	f244 6173 	movw	r1, #18035	; 0x4673
 8011d58:	f6c0 0002 	movt	r0, #2050	; 0x802
 8011d5c:	f6c0 0102 	movt	r1, #2050	; 0x802
 8011d60:	f000 f800 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>

08011d64 <_Z19RuntimeAssertFailedPKcS0_>:
 8011d64:	b5d0      	push	{r4, r6, r7, lr}
 8011d66:	af02      	add	r7, sp, #8
 8011d68:	f5ad 6d81 	sub.w	sp, sp, #1032	; 0x408
 8011d6c:	f244 628e 	movw	r2, #18062	; 0x468e
 8011d70:	ac02      	add	r4, sp, #8
 8011d72:	4603      	mov	r3, r0
 8011d74:	9100      	str	r1, [sp, #0]
 8011d76:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8011d7a:	f6c0 0202 	movt	r2, #2050	; 0x802
 8011d7e:	4620      	mov	r0, r4
 8011d80:	f000 f80b 	bl	8011d9a <_ZN5konan8snprintfEPcjPKcz>
 8011d84:	4620      	mov	r0, r4
 8011d86:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8011d8a:	f00a fcb7 	bl	801c6fc <strnlen>
 8011d8e:	4601      	mov	r1, r0
 8011d90:	4620      	mov	r0, r4
 8011d92:	f000 f811 	bl	8011db8 <_ZN5konan16consoleErrorUtf8EPKvj>
 8011d96:	f009 fba7 	bl	801b4e8 <abort>

08011d9a <_ZN5konan8snprintfEPcjPKcz>:
 8011d9a:	b081      	sub	sp, #4
 8011d9c:	b580      	push	{r7, lr}
 8011d9e:	466f      	mov	r7, sp
 8011da0:	b081      	sub	sp, #4
 8011da2:	60bb      	str	r3, [r7, #8]
 8011da4:	f107 0308 	add.w	r3, r7, #8
 8011da8:	9300      	str	r3, [sp, #0]
 8011daa:	f000 f80d 	bl	8011dc8 <rpl_vsnprintf>
 8011dae:	b001      	add	sp, #4
 8011db0:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8011db4:	b001      	add	sp, #4
 8011db6:	4770      	bx	lr

08011db8 <_ZN5konan16consoleErrorUtf8EPKvj>:
 8011db8:	460a      	mov	r2, r1
 8011dba:	4601      	mov	r1, r0
 8011dbc:	2002      	movs	r0, #2
 8011dbe:	f007 bdbd 	b.w	801993c <_write>
 8011dc2:	0000      	movs	r0, r0
 8011dc4:	0000      	movs	r0, r0
	...

08011dc8 <rpl_vsnprintf>:
 8011dc8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011dca:	af03      	add	r7, sp, #12
 8011dcc:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 8011dd0:	b081      	sub	sp, #4
 8011dd2:	ed2d 8b10 	vpush	{d8-d15}
 8011dd6:	b0b4      	sub	sp, #208	; 0xd0
 8011dd8:	f04f 0800 	mov.w	r8, #0
 8011ddc:	4683      	mov	fp, r0
 8011dde:	2900      	cmp	r1, #0
 8011de0:	468e      	mov	lr, r1
 8011de2:	469c      	mov	ip, r3
 8011de4:	f8cd 8070 	str.w	r8, [sp, #112]	; 0x70
 8011de8:	bf18      	it	ne
 8011dea:	f04f 0e00 	movne.w	lr, #0
 8011dee:	f1bb 0f00 	cmp.w	fp, #0
 8011df2:	bf18      	it	ne
 8011df4:	468e      	movne	lr, r1
 8011df6:	7811      	ldrb	r1, [r2, #0]
 8011df8:	2900      	cmp	r1, #0
 8011dfa:	f001 80cd 	beq.w	8012f98 <rpl_vsnprintf+0x11d0>
 8011dfe:	f1a7 008b 	sub.w	r0, r7, #139	; 0x8b
 8011e02:	ed9f 8bb1 	vldr	d8, [pc, #708]	; 80120c8 <rpl_vsnprintf+0x300>
 8011e06:	ed9f 9bb2 	vldr	d9, [pc, #712]	; 80120d0 <rpl_vsnprintf+0x308>
 8011e0a:	ed9f abb3 	vldr	d10, [pc, #716]	; 80120d8 <rpl_vsnprintf+0x310>
 8011e0e:	ed9f bbb4 	vldr	d11, [pc, #720]	; 80120e0 <rpl_vsnprintf+0x318>
 8011e12:	ed9f cbb5 	vldr	d12, [pc, #724]	; 80120e8 <rpl_vsnprintf+0x320>
 8011e16:	ed9f dbb6 	vldr	d13, [pc, #728]	; 80120f0 <rpl_vsnprintf+0x328>
 8011e1a:	ed9f ebb7 	vldr	d14, [pc, #732]	; 80120f8 <rpl_vsnprintf+0x330>
 8011e1e:	1c55      	adds	r5, r2, #1
 8011e20:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
 8011e24:	2200      	movs	r2, #0
 8011e26:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
 8011e2a:	f100 0901 	add.w	r9, r0, #1
 8011e2e:	2000      	movs	r0, #0
 8011e30:	9019      	str	r0, [sp, #100]	; 0x64
 8011e32:	2000      	movs	r0, #0
 8011e34:	901a      	str	r0, [sp, #104]	; 0x68
 8011e36:	2000      	movs	r0, #0
 8011e38:	f000 bfeb 	b.w	8012e12 <rpl_vsnprintf+0x104a>
 8011e3c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8011e3e:	1c5a      	adds	r2, r3, #1
 8011e40:	4572      	cmp	r2, lr
 8011e42:	bf38      	it	cc
 8011e44:	f80b 1003 	strbcc.w	r1, [fp, r3]
 8011e48:	921c      	str	r2, [sp, #112]	; 0x70
 8011e4a:	2200      	movs	r2, #0
 8011e4c:	f815 1b01 	ldrb.w	r1, [r5], #1
 8011e50:	060b      	lsls	r3, r1, #24
 8011e52:	f040 87de 	bne.w	8012e12 <rpl_vsnprintf+0x104a>
 8011e56:	f001 b89a 	b.w	8012f8e <rpl_vsnprintf+0x11c6>
 8011e5a:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
 8011e5e:	b2d2      	uxtb	r2, r2
 8011e60:	2a09      	cmp	r2, #9
 8011e62:	f200 80a8 	bhi.w	8011fb6 <rpl_vsnprintf+0x1ee>
 8011e66:	f64c 43cd 	movw	r3, #52429	; 0xcccd
 8011e6a:	ea82 0104 	eor.w	r1, r2, r4
 8011e6e:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8011e70:	f6cc 43cc 	movt	r3, #52428	; 0xcccc
 8011e74:	fba1 1303 	umull	r1, r3, r1, r3
 8011e78:	9919      	ldr	r1, [sp, #100]	; 0x64
 8011e7a:	ebb1 0fd3 	cmp.w	r1, r3, lsr #3
 8011e7e:	f301 8091 	bgt.w	8012fa4 <rpl_vsnprintf+0x11dc>
 8011e82:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8011e86:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8011e8a:	2202      	movs	r2, #2
 8011e8c:	9119      	str	r1, [sp, #100]	; 0x64
 8011e8e:	f815 1b01 	ldrb.w	r1, [r5], #1
 8011e92:	060b      	lsls	r3, r1, #24
 8011e94:	f040 87bd 	bne.w	8012e12 <rpl_vsnprintf+0x104a>
 8011e98:	f001 b879 	b.w	8012f8e <rpl_vsnprintf+0x11c6>
 8011e9c:	f11a 0201 	adds.w	r2, sl, #1
 8011ea0:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
 8011ea4:	bf08      	it	eq
 8011ea6:	f04f 0a00 	moveq.w	sl, #0
 8011eaa:	b2d2      	uxtb	r2, r2
 8011eac:	2a09      	cmp	r2, #9
 8011eae:	f200 8097 	bhi.w	8011fe0 <rpl_vsnprintf+0x218>
 8011eb2:	f64c 43cd 	movw	r3, #52429	; 0xcccd
 8011eb6:	ea82 0104 	eor.w	r1, r2, r4
 8011eba:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8011ebc:	f6cc 43cc 	movt	r3, #52428	; 0xcccc
 8011ec0:	fba1 1303 	umull	r1, r3, r1, r3
 8011ec4:	ebba 0fd3 	cmp.w	sl, r3, lsr #3
 8011ec8:	f301 806c 	bgt.w	8012fa4 <rpl_vsnprintf+0x11dc>
 8011ecc:	eb0a 018a 	add.w	r1, sl, sl, lsl #2
 8011ed0:	eb02 0a41 	add.w	sl, r2, r1, lsl #1
 8011ed4:	f001 b855 	b.w	8012f82 <rpl_vsnprintf+0x11ba>
 8011ed8:	f06f 0224 	mvn.w	r2, #36	; 0x24
 8011edc:	fa52 f281 	uxtab	r2, r2, r1
 8011ee0:	2a53      	cmp	r2, #83	; 0x53
 8011ee2:	f200 854b 	bhi.w	801297c <rpl_vsnprintf+0xbb4>
 8011ee6:	2110      	movs	r1, #16
 8011ee8:	e8df f012 	tbh	[pc, r2, lsl #1]
 8011eec:	054800e3 	.word	0x054800e3
 8011ef0:	05480548 	.word	0x05480548
 8011ef4:	05480548 	.word	0x05480548
 8011ef8:	05480548 	.word	0x05480548
 8011efc:	05480548 	.word	0x05480548
 8011f00:	05480548 	.word	0x05480548
 8011f04:	05480548 	.word	0x05480548
 8011f08:	05480548 	.word	0x05480548
 8011f0c:	05480548 	.word	0x05480548
 8011f10:	05480548 	.word	0x05480548
 8011f14:	05480548 	.word	0x05480548
 8011f18:	05480548 	.word	0x05480548
 8011f1c:	05480548 	.word	0x05480548
 8011f20:	05480548 	.word	0x05480548
 8011f24:	0548010e 	.word	0x0548010e
 8011f28:	05480548 	.word	0x05480548
 8011f2c:	0114010a 	.word	0x0114010a
 8011f30:	0548010e 	.word	0x0548010e
 8011f34:	05480548 	.word	0x05480548
 8011f38:	05480548 	.word	0x05480548
 8011f3c:	05480548 	.word	0x05480548
 8011f40:	05480548 	.word	0x05480548
 8011f44:	05480548 	.word	0x05480548
 8011f48:	05480548 	.word	0x05480548
 8011f4c:	05480548 	.word	0x05480548
 8011f50:	02270548 	.word	0x02270548
 8011f54:	05480548 	.word	0x05480548
 8011f58:	05480548 	.word	0x05480548
 8011f5c:	05480548 	.word	0x05480548
 8011f60:	05480548 	.word	0x05480548
 8011f64:	05480118 	.word	0x05480118
 8011f68:	0054022d 	.word	0x0054022d
 8011f6c:	01240118 	.word	0x01240118
 8011f70:	0548011e 	.word	0x0548011e
 8011f74:	05480054 	.word	0x05480054
 8011f78:	05480548 	.word	0x05480548
 8011f7c:	023a0548 	.word	0x023a0548
 8011f80:	024e024c 	.word	0x024e024c
 8011f84:	05480548 	.word	0x05480548
 8011f88:	05480264 	.word	0x05480264
 8011f8c:	0548029b 	.word	0x0548029b
 8011f90:	029c0548 	.word	0x029c0548
 8011f94:	3801      	subs	r0, #1
 8011f96:	2807      	cmp	r0, #7
 8011f98:	d809      	bhi.n	8011fae <rpl_vsnprintf+0x1e6>
 8011f9a:	e8df f010 	tbh	[pc, r0, lsl #1]
 8011f9e:	04d5      	.short	0x04d5
 8011fa0:	000804d8 	.word	0x000804d8
 8011fa4:	00080451 	.word	0x00080451
 8011fa8:	000804fe 	.word	0x000804fe
 8011fac:	0451      	.short	0x0451
 8011fae:	f85c 0b04 	ldr.w	r0, [ip], #4
 8011fb2:	f000 bcce 	b.w	8012952 <rpl_vsnprintf+0xb8a>
 8011fb6:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8011fb8:	2b2a      	cmp	r3, #42	; 0x2a
 8011fba:	d124      	bne.n	8012006 <rpl_vsnprintf+0x23e>
 8011fbc:	f85c 3b04 	ldr.w	r3, [ip], #4
 8011fc0:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8011fc2:	f815 1b01 	ldrb.w	r1, [r5], #1
 8011fc6:	ea42 72d3 	orr.w	r2, r2, r3, lsr #31
 8011fca:	2b00      	cmp	r3, #0
 8011fcc:	921a      	str	r2, [sp, #104]	; 0x68
 8011fce:	bf48      	it	mi
 8011fd0:	425b      	negmi	r3, r3
 8011fd2:	2203      	movs	r2, #3
 8011fd4:	9319      	str	r3, [sp, #100]	; 0x64
 8011fd6:	060b      	lsls	r3, r1, #24
 8011fd8:	f040 871b 	bne.w	8012e12 <rpl_vsnprintf+0x104a>
 8011fdc:	f000 bfd7 	b.w	8012f8e <rpl_vsnprintf+0x11c6>
 8011fe0:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8011fe2:	2b2a      	cmp	r3, #42	; 0x2a
 8011fe4:	d115      	bne.n	8012012 <rpl_vsnprintf+0x24a>
 8011fe6:	f85c ab04 	ldr.w	sl, [ip], #4
 8011fea:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8011fee:	2205      	movs	r2, #5
 8011ff0:	f1ba 3fff 	cmp.w	sl, #4294967295	; 0xffffffff
 8011ff4:	bfd8      	it	le
 8011ff6:	468a      	movle	sl, r1
 8011ff8:	f815 1b01 	ldrb.w	r1, [r5], #1
 8011ffc:	060b      	lsls	r3, r1, #24
 8011ffe:	f040 8708 	bne.w	8012e12 <rpl_vsnprintf+0x104a>
 8012002:	f000 bfc4 	b.w	8012f8e <rpl_vsnprintf+0x11c6>
 8012006:	2203      	movs	r2, #3
 8012008:	060b      	lsls	r3, r1, #24
 801200a:	f040 8702 	bne.w	8012e12 <rpl_vsnprintf+0x104a>
 801200e:	f000 bfbe 	b.w	8012f8e <rpl_vsnprintf+0x11c6>
 8012012:	2205      	movs	r2, #5
 8012014:	060b      	lsls	r3, r1, #24
 8012016:	f040 86fc 	bne.w	8012e12 <rpl_vsnprintf+0x104a>
 801201a:	f000 bfb8 	b.w	8012f8e <rpl_vsnprintf+0x11c6>
 801201e:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8012020:	911a      	str	r1, [sp, #104]	; 0x68
 8012022:	2201      	movs	r2, #1
 8012024:	f815 1b01 	ldrb.w	r1, [r5], #1
 8012028:	060b      	lsls	r3, r1, #24
 801202a:	f040 86f2 	bne.w	8012e12 <rpl_vsnprintf+0x104a>
 801202e:	f000 bfae 	b.w	8012f8e <rpl_vsnprintf+0x11c6>
 8012032:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8012034:	4603      	mov	r3, r0
 8012036:	f813 1b01 	ldrb.w	r1, [r3], #1
 801203a:	2968      	cmp	r1, #104	; 0x68
 801203c:	f040 821c 	bne.w	8012478 <rpl_vsnprintf+0x6b0>
 8012040:	1c83      	adds	r3, r0, #2
 8012042:	7841      	ldrb	r1, [r0, #1]
 8012044:	2206      	movs	r2, #6
 8012046:	2001      	movs	r0, #1
 8012048:	461d      	mov	r5, r3
 801204a:	060b      	lsls	r3, r1, #24
 801204c:	f040 86e1 	bne.w	8012e12 <rpl_vsnprintf+0x104a>
 8012050:	f000 bf9d 	b.w	8012f8e <rpl_vsnprintf+0x11c6>
 8012054:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8012056:	2206      	movs	r2, #6
 8012058:	2008      	movs	r0, #8
 801205a:	f815 1b01 	ldrb.w	r1, [r5], #1
 801205e:	060b      	lsls	r3, r1, #24
 8012060:	f040 86d7 	bne.w	8012e12 <rpl_vsnprintf+0x104a>
 8012064:	f000 bf93 	b.w	8012f8e <rpl_vsnprintf+0x11c6>
 8012068:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801206a:	4603      	mov	r3, r0
 801206c:	f813 1b01 	ldrb.w	r1, [r3], #1
 8012070:	296c      	cmp	r1, #108	; 0x6c
 8012072:	f040 8209 	bne.w	8012488 <rpl_vsnprintf+0x6c0>
 8012076:	1c83      	adds	r3, r0, #2
 8012078:	7841      	ldrb	r1, [r0, #1]
 801207a:	2206      	movs	r2, #6
 801207c:	2004      	movs	r0, #4
 801207e:	461d      	mov	r5, r3
 8012080:	060b      	lsls	r3, r1, #24
 8012082:	f040 86c6 	bne.w	8012e12 <rpl_vsnprintf+0x104a>
 8012086:	f000 bf82 	b.w	8012f8e <rpl_vsnprintf+0x11c6>
 801208a:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 801208c:	2206      	movs	r2, #6
 801208e:	2007      	movs	r0, #7
 8012090:	f815 1b01 	ldrb.w	r1, [r5], #1
 8012094:	060b      	lsls	r3, r1, #24
 8012096:	f040 86bc 	bne.w	8012e12 <rpl_vsnprintf+0x104a>
 801209a:	f000 bf78 	b.w	8012f8e <rpl_vsnprintf+0x11c6>
 801209e:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 80120a0:	2006      	movs	r0, #6
 80120a2:	2206      	movs	r2, #6
 80120a4:	f815 1b01 	ldrb.w	r1, [r5], #1
 80120a8:	060b      	lsls	r3, r1, #24
 80120aa:	f040 86b2 	bne.w	8012e12 <rpl_vsnprintf+0x104a>
 80120ae:	f000 bf6e 	b.w	8012f8e <rpl_vsnprintf+0x11c6>
 80120b2:	991c      	ldr	r1, [sp, #112]	; 0x70
 80120b4:	1c48      	adds	r0, r1, #1
 80120b6:	4570      	cmp	r0, lr
 80120b8:	bf3c      	itt	cc
 80120ba:	2225      	movcc	r2, #37	; 0x25
 80120bc:	f80b 2001 	strbcc.w	r2, [fp, r1]
 80120c0:	901c      	str	r0, [sp, #112]	; 0x70
 80120c2:	f000 bc5b 	b.w	801297c <rpl_vsnprintf+0xbb4>
 80120c6:	bf00      	nop
	...
 80120d4:	bff00000 	.word	0xbff00000
 80120d8:	00000000 	.word	0x00000000
 80120dc:	3ff00000 	.word	0x3ff00000
 80120e0:	00000000 	.word	0x00000000
 80120e4:	80000000 	.word	0x80000000
 80120e8:	00000000 	.word	0x00000000
 80120ec:	40240000 	.word	0x40240000
 80120f0:	00000000 	.word	0x00000000
 80120f4:	43f00000 	.word	0x43f00000
 80120f8:	00000000 	.word	0x00000000
 80120fc:	3fe00000 	.word	0x3fe00000
 8012100:	981a      	ldr	r0, [sp, #104]	; 0x68
 8012102:	f440 7000 	orr.w	r0, r0, #512	; 0x200
 8012106:	901a      	str	r0, [sp, #104]	; 0x68
 8012108:	981a      	ldr	r0, [sp, #104]	; 0x68
 801210a:	2b47      	cmp	r3, #71	; 0x47
 801210c:	bf08      	it	eq
 801210e:	f440 7080 	orreq.w	r0, r0, #256	; 0x100
 8012112:	901a      	str	r0, [sp, #104]	; 0x68
 8012114:	981a      	ldr	r0, [sp, #104]	; 0x68
 8012116:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 801211a:	901a      	str	r0, [sp, #104]	; 0x68
 801211c:	981a      	ldr	r0, [sp, #104]	; 0x68
 801211e:	2b65      	cmp	r3, #101	; 0x65
 8012120:	bf08      	it	eq
 8012122:	f440 7000 	orreq.w	r0, r0, #512	; 0x200
 8012126:	901a      	str	r0, [sp, #104]	; 0x68
 8012128:	981a      	ldr	r0, [sp, #104]	; 0x68
 801212a:	2b67      	cmp	r3, #103	; 0x67
 801212c:	bf08      	it	eq
 801212e:	f440 7080 	orreq.w	r0, r0, #256	; 0x100
 8012132:	901a      	str	r0, [sp, #104]	; 0x68
 8012134:	f11a 0001 	adds.w	r0, sl, #1
 8012138:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
 801213c:	f8cd e058 	str.w	lr, [sp, #88]	; 0x58
 8012140:	ec55 2b18 	vmov	r2, r5, d8
 8012144:	f10c 0007 	add.w	r0, ip, #7
 8012148:	462b      	mov	r3, r5
 801214a:	f020 0407 	bic.w	r4, r0, #7
 801214e:	ed94 0b00 	vldr	d0, [r4]
 8012152:	bf08      	it	eq
 8012154:	f04f 0a06 	moveq.w	sl, #6
 8012158:	9218      	str	r2, [sp, #96]	; 0x60
 801215a:	f8cd a05c 	str.w	sl, [sp, #92]	; 0x5c
 801215e:	ec59 ab10 	vmov	sl, r9, d0
 8012162:	4650      	mov	r0, sl
 8012164:	4649      	mov	r1, r9
 8012166:	f7ee fd85 	bl	8000c74 <__aeabi_dcmplt>
 801216a:	f104 0108 	add.w	r1, r4, #8
 801216e:	2800      	cmp	r0, #0
 8012170:	910a      	str	r1, [sp, #40]	; 0x28
 8012172:	d001      	beq.n	8012178 <rpl_vsnprintf+0x3b0>
 8012174:	262d      	movs	r6, #45	; 0x2d
 8012176:	e006      	b.n	8012186 <rpl_vsnprintf+0x3be>
 8012178:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 801217a:	0790      	lsls	r0, r2, #30
 801217c:	bf5a      	itte	pl
 801217e:	f002 0004 	andpl.w	r0, r2, #4
 8012182:	00c6      	lslpl	r6, r0, #3
 8012184:	262b      	movmi	r6, #43	; 0x2b
 8012186:	4650      	mov	r0, sl
 8012188:	4649      	mov	r1, r9
 801218a:	4652      	mov	r2, sl
 801218c:	464b      	mov	r3, r9
 801218e:	f7ee fd99 	bl	8000cc4 <__aeabi_dcmpun>
 8012192:	2800      	cmp	r0, #0
 8012194:	d13f      	bne.n	8012216 <rpl_vsnprintf+0x44e>
 8012196:	ec53 2b19 	vmov	r2, r3, d9
 801219a:	4650      	mov	r0, sl
 801219c:	4649      	mov	r1, r9
 801219e:	e9cd b608 	strd	fp, r6, [sp, #32]
 80121a2:	f7ee fd67 	bl	8000c74 <__aeabi_dcmplt>
 80121a6:	ec58 bb1a 	vmov	fp, r8, d10
 80121aa:	4604      	mov	r4, r0
 80121ac:	4650      	mov	r0, sl
 80121ae:	4649      	mov	r1, r9
 80121b0:	465a      	mov	r2, fp
 80121b2:	4643      	mov	r3, r8
 80121b4:	f7ee fd7c 	bl	8000cb0 <__aeabi_dcmpgt>
 80121b8:	4606      	mov	r6, r0
 80121ba:	4650      	mov	r0, sl
 80121bc:	4649      	mov	r1, r9
 80121be:	4652      	mov	r2, sl
 80121c0:	464b      	mov	r3, r9
 80121c2:	2e00      	cmp	r6, #0
 80121c4:	bf18      	it	ne
 80121c6:	2601      	movne	r6, #1
 80121c8:	2c00      	cmp	r4, #0
 80121ca:	bf18      	it	ne
 80121cc:	2401      	movne	r4, #1
 80121ce:	f7ee f929 	bl	8000424 <__adddf3>
 80121d2:	ea54 0206 	orrs.w	r2, r4, r6
 80121d6:	d06b      	beq.n	80122b0 <rpl_vsnprintf+0x4e8>
 80121d8:	4652      	mov	r2, sl
 80121da:	464b      	mov	r3, r9
 80121dc:	f7ee fd40 	bl	8000c60 <__aeabi_dcmpeq>
 80121e0:	2800      	cmp	r0, #0
 80121e2:	d065      	beq.n	80122b0 <rpl_vsnprintf+0x4e8>
 80121e4:	981a      	ldr	r0, [sp, #104]	; 0x68
 80121e6:	f244 61b2 	movw	r1, #18098	; 0x46b2
 80121ea:	f04f 0800 	mov.w	r8, #0
 80121ee:	f1a7 048b 	sub.w	r4, r7, #139	; 0x8b
 80121f2:	f6c0 0102 	movt	r1, #2050	; 0x802
 80121f6:	0640      	lsls	r0, r0, #25
 80121f8:	f244 60ae 	movw	r0, #18094	; 0x46ae
 80121fc:	f6c0 0002 	movt	r0, #2050	; 0x802
 8012200:	bf58      	it	pl
 8012202:	4601      	movpl	r1, r0
 8012204:	f8dd b020 	ldr.w	fp, [sp, #32]
 8012208:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801220c:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 8012210:	e9dd 6c09 	ldrd	r6, ip, [sp, #36]	; 0x24
 8012214:	e011      	b.n	801223a <rpl_vsnprintf+0x472>
 8012216:	981a      	ldr	r0, [sp, #104]	; 0x68
 8012218:	f244 61aa 	movw	r1, #18090	; 0x46aa
 801221c:	f1a7 048b 	sub.w	r4, r7, #139	; 0x8b
 8012220:	f6c0 0102 	movt	r1, #2050	; 0x802
 8012224:	0640      	lsls	r0, r0, #25
 8012226:	f244 60a6 	movw	r0, #18086	; 0x46a6
 801222a:	f6c0 0002 	movt	r0, #2050	; 0x802
 801222e:	bf58      	it	pl
 8012230:	4601      	movpl	r1, r0
 8012232:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8012236:	e9dd c90a 	ldrd	ip, r9, [sp, #40]	; 0x28
 801223a:	780a      	ldrb	r2, [r1, #0]
 801223c:	2e00      	cmp	r6, #0
 801223e:	bf1a      	itte	ne
 8012240:	f807 6c8b 	strbne.w	r6, [r7, #-139]
 8012244:	2001      	movne	r0, #1
 8012246:	2000      	moveq	r0, #0
 8012248:	b132      	cbz	r2, 8012258 <rpl_vsnprintf+0x490>
 801224a:	3101      	adds	r1, #1
 801224c:	5422      	strb	r2, [r4, r0]
 801224e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8012252:	3001      	adds	r0, #1
 8012254:	2a00      	cmp	r2, #0
 8012256:	d1f9      	bne.n	801224c <rpl_vsnprintf+0x484>
 8012258:	2100      	movs	r1, #0
 801225a:	4281      	cmp	r1, r0
 801225c:	f04f 0300 	mov.w	r3, #0
 8012260:	f04f 0600 	mov.w	r6, #0
 8012264:	bfb8      	it	lt
 8012266:	2301      	movlt	r3, #1
 8012268:	1c42      	adds	r2, r0, #1
 801226a:	bf08      	it	eq
 801226c:	2601      	moveq	r6, #1
 801226e:	5c65      	ldrb	r5, [r4, r1]
 8012270:	3101      	adds	r1, #1
 8012272:	2d00      	cmp	r5, #0
 8012274:	bf18      	it	ne
 8012276:	ea53 0306 	orrsne.w	r3, r3, r6
 801227a:	d1ee      	bne.n	801225a <rpl_vsnprintf+0x492>
 801227c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801227e:	3301      	adds	r3, #1
 8012280:	1a59      	subs	r1, r3, r1
 8012282:	2900      	cmp	r1, #0
 8012284:	bfd8      	it	le
 8012286:	4641      	movle	r1, r8
 8012288:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801228a:	07db      	lsls	r3, r3, #31
 801228c:	bf18      	it	ne
 801228e:	4249      	negne	r1, r1
 8012290:	2901      	cmp	r1, #1
 8012292:	db1c      	blt.n	80122ce <rpl_vsnprintf+0x506>
 8012294:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8012296:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
 801229a:	1c5e      	adds	r6, r3, #1
 801229c:	4576      	cmp	r6, lr
 801229e:	bf3c      	itt	cc
 80122a0:	2520      	movcc	r5, #32
 80122a2:	f80b 5003 	strbcc.w	r5, [fp, r3]
 80122a6:	3901      	subs	r1, #1
 80122a8:	4633      	mov	r3, r6
 80122aa:	dcf6      	bgt.n	801229a <rpl_vsnprintf+0x4d2>
 80122ac:	961c      	str	r6, [sp, #112]	; 0x70
 80122ae:	e010      	b.n	80122d2 <rpl_vsnprintf+0x50a>
 80122b0:	991a      	ldr	r1, [sp, #104]	; 0x68
 80122b2:	9515      	str	r5, [sp, #84]	; 0x54
 80122b4:	f401 7080 	and.w	r0, r1, #256	; 0x100
 80122b8:	f411 7f40 	tst.w	r1, #768	; 0x300
 80122bc:	900e      	str	r0, [sp, #56]	; 0x38
 80122be:	f000 80cc 	beq.w	801245a <rpl_vsnprintf+0x692>
 80122c2:	2800      	cmp	r0, #0
 80122c4:	f040 80e8 	bne.w	8012498 <rpl_vsnprintf+0x6d0>
 80122c8:	2000      	movs	r0, #0
 80122ca:	9007      	str	r0, [sp, #28]
 80122cc:	e0ed      	b.n	80124aa <rpl_vsnprintf+0x6e2>
 80122ce:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
 80122d2:	f817 3c8b 	ldrb.w	r3, [r7, #-139]
 80122d6:	b1eb      	cbz	r3, 8012314 <rpl_vsnprintf+0x54c>
 80122d8:	b17a      	cbz	r2, 80122fa <rpl_vsnprintf+0x532>
 80122da:	464a      	mov	r2, r9
 80122dc:	2801      	cmp	r0, #1
 80122de:	db19      	blt.n	8012314 <rpl_vsnprintf+0x54c>
 80122e0:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 80122e2:	3801      	subs	r0, #1
 80122e4:	1c6e      	adds	r6, r5, #1
 80122e6:	4576      	cmp	r6, lr
 80122e8:	bf38      	it	cc
 80122ea:	f80b 3005 	strbcc.w	r3, [fp, r5]
 80122ee:	961c      	str	r6, [sp, #112]	; 0x70
 80122f0:	f812 3b01 	ldrb.w	r3, [r2], #1
 80122f4:	2b00      	cmp	r3, #0
 80122f6:	d1f1      	bne.n	80122dc <rpl_vsnprintf+0x514>
 80122f8:	e00c      	b.n	8012314 <rpl_vsnprintf+0x54c>
 80122fa:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80122fc:	4648      	mov	r0, r9
 80122fe:	1c56      	adds	r6, r2, #1
 8012300:	4576      	cmp	r6, lr
 8012302:	bf38      	it	cc
 8012304:	f80b 3002 	strbcc.w	r3, [fp, r2]
 8012308:	4632      	mov	r2, r6
 801230a:	961c      	str	r6, [sp, #112]	; 0x70
 801230c:	f810 3b01 	ldrb.w	r3, [r0], #1
 8012310:	2b00      	cmp	r3, #0
 8012312:	d1f4      	bne.n	80122fe <rpl_vsnprintf+0x536>
 8012314:	f1b1 3fff 	cmp.w	r1, #4294967295	; 0xffffffff
 8012318:	f300 8330 	bgt.w	801297c <rpl_vsnprintf+0xbb4>
 801231c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801231e:	1e48      	subs	r0, r1, #1
 8012320:	1c51      	adds	r1, r2, #1
 8012322:	3001      	adds	r0, #1
 8012324:	4571      	cmp	r1, lr
 8012326:	bf3c      	itt	cc
 8012328:	2320      	movcc	r3, #32
 801232a:	f80b 3002 	strbcc.w	r3, [fp, r2]
 801232e:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 8012332:	460a      	mov	r2, r1
 8012334:	dbf4      	blt.n	8012320 <rpl_vsnprintf+0x558>
 8012336:	911c      	str	r1, [sp, #112]	; 0x70
 8012338:	e320      	b.n	801297c <rpl_vsnprintf+0xbb4>
 801233a:	991a      	ldr	r1, [sp, #104]	; 0x68
 801233c:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8012340:	911a      	str	r1, [sp, #104]	; 0x68
 8012342:	2110      	movs	r1, #16
 8012344:	e06e      	b.n	8012424 <rpl_vsnprintf+0x65c>
 8012346:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8012348:	f10c 0004 	add.w	r0, ip, #4
 801234c:	1c51      	adds	r1, r2, #1
 801234e:	4571      	cmp	r1, lr
 8012350:	bf3c      	itt	cc
 8012352:	f8dc 3000 	ldrcc.w	r3, [ip]
 8012356:	f80b 3002 	strbcc.w	r3, [fp, r2]
 801235a:	911c      	str	r1, [sp, #112]	; 0x70
 801235c:	4684      	mov	ip, r0
 801235e:	e30d      	b.n	801297c <rpl_vsnprintf+0xbb4>
 8012360:	3801      	subs	r0, #1
 8012362:	2807      	cmp	r0, #7
 8012364:	d809      	bhi.n	801237a <rpl_vsnprintf+0x5b2>
 8012366:	e8df f010 	tbh	[pc, r0, lsl #1]
 801236a:	046b      	.short	0x046b
 801236c:	00080470 	.word	0x00080470
 8012370:	0008031d 	.word	0x0008031d
 8012374:	00080008 	.word	0x00080008
 8012378:	031d      	.short	0x031d
 801237a:	f85c 0b04 	ldr.w	r0, [ip], #4
 801237e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8012380:	6001      	str	r1, [r0, #0]
 8012382:	e2fb      	b.n	801297c <rpl_vsnprintf+0xbb4>
 8012384:	2108      	movs	r1, #8
 8012386:	e04d      	b.n	8012424 <rpl_vsnprintf+0x65c>
 8012388:	f85c 0b04 	ldr.w	r0, [ip], #4
 801238c:	2800      	cmp	r0, #0
 801238e:	f000 8297 	beq.w	80128c0 <rpl_vsnprintf+0xaf8>
 8012392:	991a      	ldr	r1, [sp, #104]	; 0x68
 8012394:	e9cd 0800 	strd	r0, r8, [sp]
 8012398:	2010      	movs	r0, #16
 801239a:	4672      	mov	r2, lr
 801239c:	4674      	mov	r4, lr
 801239e:	4665      	mov	r5, ip
 80123a0:	9002      	str	r0, [sp, #8]
 80123a2:	9819      	ldr	r0, [sp, #100]	; 0x64
 80123a4:	f041 0188 	orr.w	r1, r1, #136	; 0x88
 80123a8:	e9cd 0a03 	strd	r0, sl, [sp, #12]
 80123ac:	9105      	str	r1, [sp, #20]
 80123ae:	4658      	mov	r0, fp
 80123b0:	a91c      	add	r1, sp, #112	; 0x70
 80123b2:	e2dd      	b.n	8012970 <rpl_vsnprintf+0xba8>
 80123b4:	f8dc 1000 	ldr.w	r1, [ip]
 80123b8:	f244 60c7 	movw	r0, #18119	; 0x46c7
 80123bc:	f6c0 0002 	movt	r0, #2050	; 0x802
 80123c0:	2900      	cmp	r1, #0
 80123c2:	bf08      	it	eq
 80123c4:	4601      	moveq	r1, r0
 80123c6:	2000      	movs	r0, #0
 80123c8:	4652      	mov	r2, sl
 80123ca:	2300      	movs	r3, #0
 80123cc:	2600      	movs	r6, #0
 80123ce:	4290      	cmp	r0, r2
 80123d0:	bfb8      	it	lt
 80123d2:	2301      	movlt	r3, #1
 80123d4:	3201      	adds	r2, #1
 80123d6:	bf08      	it	eq
 80123d8:	2601      	moveq	r6, #1
 80123da:	5c0d      	ldrb	r5, [r1, r0]
 80123dc:	3001      	adds	r0, #1
 80123de:	2d00      	cmp	r5, #0
 80123e0:	bf18      	it	ne
 80123e2:	ea53 0306 	orrsne.w	r3, r3, r6
 80123e6:	d1ef      	bne.n	80123c8 <rpl_vsnprintf+0x600>
 80123e8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80123ea:	f10c 0c04 	add.w	ip, ip, #4
 80123ee:	3301      	adds	r3, #1
 80123f0:	1a18      	subs	r0, r3, r0
 80123f2:	2800      	cmp	r0, #0
 80123f4:	bfd8      	it	le
 80123f6:	4640      	movle	r0, r8
 80123f8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80123fa:	07db      	lsls	r3, r3, #31
 80123fc:	bf18      	it	ne
 80123fe:	4240      	negne	r0, r0
 8012400:	2801      	cmp	r0, #1
 8012402:	f2c0 8275 	blt.w	80128f0 <rpl_vsnprintf+0xb28>
 8012406:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8012408:	4655      	mov	r5, sl
 801240a:	1c5e      	adds	r6, r3, #1
 801240c:	4576      	cmp	r6, lr
 801240e:	bf3e      	ittt	cc
 8012410:	2520      	movcc	r5, #32
 8012412:	f80b 5003 	strbcc.w	r5, [fp, r3]
 8012416:	4655      	movcc	r5, sl
 8012418:	3801      	subs	r0, #1
 801241a:	4633      	mov	r3, r6
 801241c:	dcf5      	bgt.n	801240a <rpl_vsnprintf+0x642>
 801241e:	961c      	str	r6, [sp, #112]	; 0x70
 8012420:	e267      	b.n	80128f2 <rpl_vsnprintf+0xb2a>
 8012422:	210a      	movs	r1, #10
 8012424:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8012426:	3801      	subs	r0, #1
 8012428:	2807      	cmp	r0, #7
 801242a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 801242e:	d809      	bhi.n	8012444 <rpl_vsnprintf+0x67c>
 8012430:	e8df f010 	tbh	[pc, r0, lsl #1]
 8012434:	0211020e 	.word	0x0211020e
 8012438:	000b0008 	.word	0x000b0008
 801243c:	00080008 	.word	0x00080008
 8012440:	000b0219 	.word	0x000b0219
 8012444:	f85c 0b04 	ldr.w	r0, [ip], #4
 8012448:	e207      	b.n	801285a <rpl_vsnprintf+0xa92>
 801244a:	f10c 0007 	add.w	r0, ip, #7
 801244e:	f020 0507 	bic.w	r5, r0, #7
 8012452:	686b      	ldr	r3, [r5, #4]
 8012454:	f855 0b08 	ldr.w	r0, [r5], #8
 8012458:	e201      	b.n	801285e <rpl_vsnprintf+0xa96>
 801245a:	ec51 0b1b 	vmov	r0, r1, d11
 801245e:	4652      	mov	r2, sl
 8012460:	464b      	mov	r3, r9
 8012462:	f7ed ffdd 	bl	8000420 <__aeabi_dsub>
 8012466:	ec41 0b1f 	vmov	d15, r0, r1
 801246a:	2000      	movs	r0, #0
 801246c:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8012470:	2500      	movs	r5, #0
 8012472:	2400      	movs	r4, #0
 8012474:	9007      	str	r0, [sp, #28]
 8012476:	e07a      	b.n	801256e <rpl_vsnprintf+0x7a6>
 8012478:	2206      	movs	r2, #6
 801247a:	2002      	movs	r0, #2
 801247c:	461d      	mov	r5, r3
 801247e:	060b      	lsls	r3, r1, #24
 8012480:	f040 84c7 	bne.w	8012e12 <rpl_vsnprintf+0x104a>
 8012484:	f000 bd83 	b.w	8012f8e <rpl_vsnprintf+0x11c6>
 8012488:	2206      	movs	r2, #6
 801248a:	2003      	movs	r0, #3
 801248c:	461d      	mov	r5, r3
 801248e:	060b      	lsls	r3, r1, #24
 8012490:	f040 84bf 	bne.w	8012e12 <rpl_vsnprintf+0x104a>
 8012494:	f000 bd7b 	b.w	8012f8e <rpl_vsnprintf+0x11c6>
 8012498:	2001      	movs	r0, #1
 801249a:	ea20 00d1 	bic.w	r0, r0, r1, lsr #3
 801249e:	9007      	str	r0, [sp, #28]
 80124a0:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80124a2:	2800      	cmp	r0, #0
 80124a4:	bf18      	it	ne
 80124a6:	3801      	subne	r0, #1
 80124a8:	9017      	str	r0, [sp, #92]	; 0x5c
 80124aa:	ec51 0b1b 	vmov	r0, r1, d11
 80124ae:	4652      	mov	r2, sl
 80124b0:	464b      	mov	r3, r9
 80124b2:	f7ed ffb5 	bl	8000420 <__aeabi_dsub>
 80124b6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80124b8:	4604      	mov	r4, r0
 80124ba:	460e      	mov	r6, r1
 80124bc:	4650      	mov	r0, sl
 80124be:	4649      	mov	r1, r9
 80124c0:	462b      	mov	r3, r5
 80124c2:	ec46 4b1f 	vmov	d15, r4, r6
 80124c6:	f7ee fbe9 	bl	8000c9c <__aeabi_dcmpge>
 80124ca:	2800      	cmp	r0, #0
 80124cc:	465a      	mov	r2, fp
 80124ce:	4643      	mov	r3, r8
 80124d0:	bf1c      	itt	ne
 80124d2:	464e      	movne	r6, r9
 80124d4:	4654      	movne	r4, sl
 80124d6:	4620      	mov	r0, r4
 80124d8:	4631      	mov	r1, r6
 80124da:	ec46 4b1b 	vmov	d11, r4, r6
 80124de:	f7ee fbc9 	bl	8000c74 <__aeabi_dcmplt>
 80124e2:	462b      	mov	r3, r5
 80124e4:	2500      	movs	r5, #0
 80124e6:	b310      	cbz	r0, 801252e <rpl_vsnprintf+0x766>
 80124e8:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80124ea:	4620      	mov	r0, r4
 80124ec:	4631      	mov	r1, r6
 80124ee:	f7ee fbdf 	bl	8000cb0 <__aeabi_dcmpgt>
 80124f2:	b1e0      	cbz	r0, 801252e <rpl_vsnprintf+0x766>
 80124f4:	2000      	movs	r0, #0
 80124f6:	1e45      	subs	r5, r0, #1
 80124f8:	f510 7f99 	cmn.w	r0, #306	; 0x132
 80124fc:	db17      	blt.n	801252e <rpl_vsnprintf+0x766>
 80124fe:	ec51 0b1b 	vmov	r0, r1, d11
 8012502:	ec53 2b1c 	vmov	r2, r3, d12
 8012506:	f7ee f943 	bl	8000790 <__aeabi_dmul>
 801250a:	4604      	mov	r4, r0
 801250c:	460e      	mov	r6, r1
 801250e:	465a      	mov	r2, fp
 8012510:	4643      	mov	r3, r8
 8012512:	ec46 4b1b 	vmov	d11, r4, r6
 8012516:	f7ee fbad 	bl	8000c74 <__aeabi_dcmplt>
 801251a:	b140      	cbz	r0, 801252e <rpl_vsnprintf+0x766>
 801251c:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801251e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8012520:	4620      	mov	r0, r4
 8012522:	4631      	mov	r1, r6
 8012524:	f7ee fbc4 	bl	8000cb0 <__aeabi_dcmpgt>
 8012528:	2800      	cmp	r0, #0
 801252a:	4628      	mov	r0, r5
 801252c:	d1e3      	bne.n	80124f6 <rpl_vsnprintf+0x72e>
 801252e:	ec54 6b1c 	vmov	r6, r4, d12
 8012532:	ec51 0b1b 	vmov	r0, r1, d11
 8012536:	4632      	mov	r2, r6
 8012538:	4623      	mov	r3, r4
 801253a:	f7ee fbaf 	bl	8000c9c <__aeabi_dcmpge>
 801253e:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8012542:	b198      	cbz	r0, 801256c <rpl_vsnprintf+0x7a4>
 8012544:	4628      	mov	r0, r5
 8012546:	1c45      	adds	r5, r0, #1
 8012548:	f5b0 7f9a 	cmp.w	r0, #308	; 0x134
 801254c:	da0e      	bge.n	801256c <rpl_vsnprintf+0x7a4>
 801254e:	ec51 0b1b 	vmov	r0, r1, d11
 8012552:	4632      	mov	r2, r6
 8012554:	4623      	mov	r3, r4
 8012556:	f7ee fa45 	bl	80009e4 <__aeabi_ddiv>
 801255a:	4632      	mov	r2, r6
 801255c:	4623      	mov	r3, r4
 801255e:	ec41 0b1b 	vmov	d11, r0, r1
 8012562:	f7ee fb9b 	bl	8000c9c <__aeabi_dcmpge>
 8012566:	2800      	cmp	r0, #0
 8012568:	4628      	mov	r0, r5
 801256a:	d1ec      	bne.n	8012546 <rpl_vsnprintf+0x77e>
 801256c:	2401      	movs	r4, #1
 801256e:	981a      	ldr	r0, [sp, #104]	; 0x68
 8012570:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8012572:	4649      	mov	r1, r9
 8012574:	4642      	mov	r2, r8
 8012576:	f000 0020 	and.w	r0, r0, #32
 801257a:	9006      	str	r0, [sp, #24]
 801257c:	4650      	mov	r0, sl
 801257e:	f7ee fb8d 	bl	8000c9c <__aeabi_dcmpge>
 8012582:	ec51 2b1f 	vmov	r2, r1, d15
 8012586:	2800      	cmp	r0, #0
 8012588:	bf1c      	itt	ne
 801258a:	4649      	movne	r1, r9
 801258c:	4652      	movne	r2, sl
 801258e:	e9cd 210c 	strd	r2, r1, [sp, #48]	; 0x30
 8012592:	ec41 2b1f 	vmov	d15, r2, r1
 8012596:	f8dd 805c 	ldr.w	r8, [sp, #92]	; 0x5c
 801259a:	e002      	b.n	80125a2 <rpl_vsnprintf+0x7da>
 801259c:	eba1 0805 	sub.w	r8, r1, r5
 80125a0:	2400      	movs	r4, #0
 80125a2:	eeb0 0a4f 	vmov.f32	s0, s30
 80125a6:	f1b8 0f13 	cmp.w	r8, #19
 80125aa:	4640      	mov	r0, r8
 80125ac:	bfa8      	it	ge
 80125ae:	2013      	movge	r0, #19
 80125b0:	2c00      	cmp	r4, #0
 80125b2:	eef0 0a6f 	vmov.f32	s1, s31
 80125b6:	9414      	str	r4, [sp, #80]	; 0x50
 80125b8:	9018      	str	r0, [sp, #96]	; 0x60
 80125ba:	d02d      	beq.n	8012618 <rpl_vsnprintf+0x850>
 80125bc:	eeb0 0a4a 	vmov.f32	s0, s20
 80125c0:	2d01      	cmp	r5, #1
 80125c2:	462c      	mov	r4, r5
 80125c4:	eef0 0a6a 	vmov.f32	s1, s21
 80125c8:	db0e      	blt.n	80125e8 <rpl_vsnprintf+0x820>
 80125ca:	eeb0 0a4a 	vmov.f32	s0, s20
 80125ce:	462c      	mov	r4, r5
 80125d0:	eef0 0a6a 	vmov.f32	s1, s21
 80125d4:	ec51 0b10 	vmov	r0, r1, d0
 80125d8:	ec53 2b1c 	vmov	r2, r3, d12
 80125dc:	f7ee f8d8 	bl	8000790 <__aeabi_dmul>
 80125e0:	3c01      	subs	r4, #1
 80125e2:	ec41 0b10 	vmov	d0, r0, r1
 80125e6:	dcf5      	bgt.n	80125d4 <rpl_vsnprintf+0x80c>
 80125e8:	f1b4 3fff 	cmp.w	r4, #4294967295	; 0xffffffff
 80125ec:	dc0c      	bgt.n	8012608 <rpl_vsnprintf+0x840>
 80125ee:	3c01      	subs	r4, #1
 80125f0:	ec51 0b10 	vmov	r0, r1, d0
 80125f4:	ec53 2b1c 	vmov	r2, r3, d12
 80125f8:	f7ee f9f4 	bl	80009e4 <__aeabi_ddiv>
 80125fc:	3401      	adds	r4, #1
 80125fe:	ec41 0b10 	vmov	d0, r0, r1
 8012602:	f1b4 3fff 	cmp.w	r4, #4294967295	; 0xffffffff
 8012606:	dbf3      	blt.n	80125f0 <rpl_vsnprintf+0x828>
 8012608:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 801260c:	ec53 2b10 	vmov	r2, r3, d0
 8012610:	f7ee f9e8 	bl	80009e4 <__aeabi_ddiv>
 8012614:	ec41 0b10 	vmov	d0, r0, r1
 8012618:	ec5b 6b10 	vmov	r6, fp, d0
 801261c:	9515      	str	r5, [sp, #84]	; 0x54
 801261e:	ec55 4b1d 	vmov	r4, r5, d13
 8012622:	4630      	mov	r0, r6
 8012624:	4659      	mov	r1, fp
 8012626:	4622      	mov	r2, r4
 8012628:	462b      	mov	r3, r5
 801262a:	f7ee fb37 	bl	8000c9c <__aeabi_dcmpge>
 801262e:	2800      	cmp	r0, #0
 8012630:	f040 84b4 	bne.w	8012f9c <rpl_vsnprintf+0x11d4>
 8012634:	4630      	mov	r0, r6
 8012636:	4659      	mov	r1, fp
 8012638:	f7ee fbc2 	bl	8000dc0 <__aeabi_d2ulz>
 801263c:	9412      	str	r4, [sp, #72]	; 0x48
 801263e:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 8012642:	4681      	mov	r9, r0
 8012644:	460c      	mov	r4, r1
 8012646:	f7ee f86d 	bl	8000724 <__aeabi_ul2d>
 801264a:	4688      	mov	r8, r1
 801264c:	4602      	mov	r2, r0
 801264e:	4630      	mov	r0, r6
 8012650:	4659      	mov	r1, fp
 8012652:	9513      	str	r5, [sp, #76]	; 0x4c
 8012654:	4643      	mov	r3, r8
 8012656:	9211      	str	r2, [sp, #68]	; 0x44
 8012658:	f7ee fb20 	bl	8000c9c <__aeabi_dcmpge>
 801265c:	f1b9 0501 	subs.w	r5, r9, #1
 8012660:	4643      	mov	r3, r8
 8012662:	f164 0100 	sbc.w	r1, r4, #0
 8012666:	2800      	cmp	r0, #0
 8012668:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801266c:	bf18      	it	ne
 801266e:	4621      	movne	r1, r4
 8012670:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8012672:	f8dd 804c 	ldr.w	r8, [sp, #76]	; 0x4c
 8012676:	ea81 0400 	eor.w	r4, r1, r0
 801267a:	468a      	mov	sl, r1
 801267c:	4630      	mov	r0, r6
 801267e:	4659      	mov	r1, fp
 8012680:	f7ee fb0c 	bl	8000c9c <__aeabi_dcmpge>
 8012684:	2800      	cmp	r0, #0
 8012686:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801268a:	bf18      	it	ne
 801268c:	464d      	movne	r5, r9
 801268e:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
 8012692:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8012694:	4068      	eors	r0, r5
 8012696:	4320      	orrs	r0, r4
 8012698:	f000 8480 	beq.w	8012f9c <rpl_vsnprintf+0x11d4>
 801269c:	2901      	cmp	r1, #1
 801269e:	9918      	ldr	r1, [sp, #96]	; 0x60
 80126a0:	eeb0 ba4a 	vmov.f32	s22, s20
 80126a4:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 80126a8:	eef0 ba6a 	vmov.f32	s23, s21
 80126ac:	4608      	mov	r0, r1
 80126ae:	db10      	blt.n	80126d2 <rpl_vsnprintf+0x90a>
 80126b0:	eeb0 ba4a 	vmov.f32	s22, s20
 80126b4:	1c4c      	adds	r4, r1, #1
 80126b6:	eef0 ba6a 	vmov.f32	s23, s21
 80126ba:	ec51 0b1b 	vmov	r0, r1, d11
 80126be:	ec53 2b1c 	vmov	r2, r3, d12
 80126c2:	f7ee f865 	bl	8000790 <__aeabi_dmul>
 80126c6:	3c01      	subs	r4, #1
 80126c8:	ec41 0b1b 	vmov	d11, r0, r1
 80126cc:	2c01      	cmp	r4, #1
 80126ce:	dcf4      	bgt.n	80126ba <rpl_vsnprintf+0x8f2>
 80126d0:	1e60      	subs	r0, r4, #1
 80126d2:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 80126d6:	dc0c      	bgt.n	80126f2 <rpl_vsnprintf+0x92a>
 80126d8:	1e44      	subs	r4, r0, #1
 80126da:	ec51 0b1b 	vmov	r0, r1, d11
 80126de:	ec53 2b1c 	vmov	r2, r3, d12
 80126e2:	f7ee f97f 	bl	80009e4 <__aeabi_ddiv>
 80126e6:	3401      	adds	r4, #1
 80126e8:	ec41 0b1b 	vmov	d11, r0, r1
 80126ec:	f1b4 3fff 	cmp.w	r4, #4294967295	; 0xffffffff
 80126f0:	dbf3      	blt.n	80126da <rpl_vsnprintf+0x912>
 80126f2:	4628      	mov	r0, r5
 80126f4:	4651      	mov	r1, sl
 80126f6:	9517      	str	r5, [sp, #92]	; 0x5c
 80126f8:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
 80126fc:	f7ee f812 	bl	8000724 <__aeabi_ul2d>
 8012700:	460b      	mov	r3, r1
 8012702:	9910      	ldr	r1, [sp, #64]	; 0x40
 8012704:	4602      	mov	r2, r0
 8012706:	4630      	mov	r0, r6
 8012708:	f7ed fe8a 	bl	8000420 <__aeabi_dsub>
 801270c:	4604      	mov	r4, r0
 801270e:	460d      	mov	r5, r1
 8012710:	ec51 0b1b 	vmov	r0, r1, d11
 8012714:	f7ee fb54 	bl	8000dc0 <__aeabi_d2ulz>
 8012718:	460a      	mov	r2, r1
 801271a:	4601      	mov	r1, r0
 801271c:	9110      	str	r1, [sp, #64]	; 0x40
 801271e:	4611      	mov	r1, r2
 8012720:	910f      	str	r1, [sp, #60]	; 0x3c
 8012722:	f7ed ffff 	bl	8000724 <__aeabi_ul2d>
 8012726:	4602      	mov	r2, r0
 8012728:	460b      	mov	r3, r1
 801272a:	4620      	mov	r0, r4
 801272c:	4629      	mov	r1, r5
 801272e:	f7ee f82f 	bl	8000790 <__aeabi_dmul>
 8012732:	464a      	mov	r2, r9
 8012734:	4643      	mov	r3, r8
 8012736:	4682      	mov	sl, r0
 8012738:	460e      	mov	r6, r1
 801273a:	f7ee faaf 	bl	8000c9c <__aeabi_dcmpge>
 801273e:	2800      	cmp	r0, #0
 8012740:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8012744:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
 8012748:	d11f      	bne.n	801278a <rpl_vsnprintf+0x9c2>
 801274a:	4650      	mov	r0, sl
 801274c:	4631      	mov	r1, r6
 801274e:	f7ee fb37 	bl	8000dc0 <__aeabi_d2ulz>
 8012752:	4681      	mov	r9, r0
 8012754:	460c      	mov	r4, r1
 8012756:	f7ed ffe5 	bl	8000724 <__aeabi_ul2d>
 801275a:	4683      	mov	fp, r0
 801275c:	460b      	mov	r3, r1
 801275e:	4650      	mov	r0, sl
 8012760:	4631      	mov	r1, r6
 8012762:	465a      	mov	r2, fp
 8012764:	9313      	str	r3, [sp, #76]	; 0x4c
 8012766:	f7ee fa99 	bl	8000c9c <__aeabi_dcmpge>
 801276a:	f1b9 0501 	subs.w	r5, r9, #1
 801276e:	4631      	mov	r1, r6
 8012770:	465a      	mov	r2, fp
 8012772:	f164 0800 	sbc.w	r8, r4, #0
 8012776:	2800      	cmp	r0, #0
 8012778:	4650      	mov	r0, sl
 801277a:	bf18      	it	ne
 801277c:	46a0      	movne	r8, r4
 801277e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8012780:	f7ee fa8c 	bl	8000c9c <__aeabi_dcmpge>
 8012784:	2800      	cmp	r0, #0
 8012786:	bf18      	it	ne
 8012788:	464d      	movne	r5, r9
 801278a:	4628      	mov	r0, r5
 801278c:	4641      	mov	r1, r8
 801278e:	f7ed ffc9 	bl	8000724 <__aeabi_ul2d>
 8012792:	4602      	mov	r2, r0
 8012794:	460b      	mov	r3, r1
 8012796:	4650      	mov	r0, sl
 8012798:	4631      	mov	r1, r6
 801279a:	f7ed fe41 	bl	8000420 <__aeabi_dsub>
 801279e:	462c      	mov	r4, r5
 80127a0:	ec55 ab1e 	vmov	sl, r5, d14
 80127a4:	4681      	mov	r9, r0
 80127a6:	468b      	mov	fp, r1
 80127a8:	4652      	mov	r2, sl
 80127aa:	462b      	mov	r3, r5
 80127ac:	9413      	str	r4, [sp, #76]	; 0x4c
 80127ae:	f7ee fa61 	bl	8000c74 <__aeabi_dcmplt>
 80127b2:	3401      	adds	r4, #1
 80127b4:	4659      	mov	r1, fp
 80127b6:	4652      	mov	r2, sl
 80127b8:	462b      	mov	r3, r5
 80127ba:	f148 0600 	adc.w	r6, r8, #0
 80127be:	2800      	cmp	r0, #0
 80127c0:	4648      	mov	r0, r9
 80127c2:	bf18      	it	ne
 80127c4:	4646      	movne	r6, r8
 80127c6:	f7ee fa55 	bl	8000c74 <__aeabi_dcmplt>
 80127ca:	2800      	cmp	r0, #0
 80127cc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80127ce:	bf18      	it	ne
 80127d0:	4604      	movne	r4, r0
 80127d2:	9810      	ldr	r0, [sp, #64]	; 0x40
 80127d4:	46a2      	mov	sl, r4
 80127d6:	1a20      	subs	r0, r4, r0
 80127d8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80127da:	eb76 0000 	sbcs.w	r0, r6, r0
 80127de:	d206      	bcs.n	80127ee <rpl_vsnprintf+0xa26>
 80127e0:	e9dd 1018 	ldrd	r1, r0, [sp, #96]	; 0x60
 80127e4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80127e6:	e9dd 3514 	ldrd	r3, r5, [sp, #80]	; 0x50
 80127ea:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80127ec:	e01d      	b.n	801282a <rpl_vsnprintf+0xa62>
 80127ee:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80127f0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80127f2:	f04f 0a00 	mov.w	sl, #0
 80127f6:	2600      	movs	r6, #0
 80127f8:	3201      	adds	r2, #1
 80127fa:	f144 0400 	adc.w	r4, r4, #0
 80127fe:	f082 000a 	eor.w	r0, r2, #10
 8012802:	4320      	orrs	r0, r4
 8012804:	f04f 0000 	mov.w	r0, #0
 8012808:	bf08      	it	eq
 801280a:	2001      	moveq	r0, #1
 801280c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801280e:	2b00      	cmp	r3, #0
 8012810:	4619      	mov	r1, r3
 8012812:	bf18      	it	ne
 8012814:	2101      	movne	r1, #1
 8012816:	4008      	ands	r0, r1
 8012818:	bf1c      	itt	ne
 801281a:	2400      	movne	r4, #0
 801281c:	2201      	movne	r2, #1
 801281e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8012820:	9217      	str	r2, [sp, #92]	; 0x5c
 8012822:	4405      	add	r5, r0
 8012824:	e9dd 1018 	ldrd	r1, r0, [sp, #96]	; 0x60
 8012828:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801282a:	2a00      	cmp	r2, #0
 801282c:	bf18      	it	ne
 801282e:	2b00      	cmpne	r3, #0
 8012830:	d01e      	beq.n	8012870 <rpl_vsnprintf+0xaa8>
 8012832:	42a9      	cmp	r1, r5
 8012834:	bfa8      	it	ge
 8012836:	f115 0f04 	cmnge.w	r5, #4
 801283a:	f6bf aeaf 	bge.w	801259c <rpl_vsnprintf+0x7d4>
 801283e:	e01a      	b.n	8012876 <rpl_vsnprintf+0xaae>
 8012840:	f10c 0007 	add.w	r0, ip, #7
 8012844:	f020 0507 	bic.w	r5, r0, #7
 8012848:	6869      	ldr	r1, [r5, #4]
 801284a:	f855 0b08 	ldr.w	r0, [r5], #8
 801284e:	e082      	b.n	8012956 <rpl_vsnprintf+0xb8e>
 8012850:	f81c 0b04 	ldrb.w	r0, [ip], #4
 8012854:	e001      	b.n	801285a <rpl_vsnprintf+0xa92>
 8012856:	f83c 0b04 	ldrh.w	r0, [ip], #4
 801285a:	4665      	mov	r5, ip
 801285c:	2300      	movs	r3, #0
 801285e:	e9cd 0300 	strd	r0, r3, [sp]
 8012862:	9102      	str	r1, [sp, #8]
 8012864:	e07c      	b.n	8012960 <rpl_vsnprintf+0xb98>
 8012866:	f85c 0b04 	ldr.w	r0, [ip], #4
 801286a:	4665      	mov	r5, ip
 801286c:	17c3      	asrs	r3, r0, #31
 801286e:	e7f6      	b.n	801285e <rpl_vsnprintf+0xa96>
 8012870:	2b00      	cmp	r3, #0
 8012872:	f000 81aa 	beq.w	8012bca <rpl_vsnprintf+0xe02>
 8012876:	2d00      	cmp	r5, #0
 8012878:	46a8      	mov	r8, r5
 801287a:	9613      	str	r6, [sp, #76]	; 0x4c
 801287c:	f04f 020a 	mov.w	r2, #10
 8012880:	f04f 0300 	mov.w	r3, #0
 8012884:	bf48      	it	mi
 8012886:	f1c5 0800 	rsbmi	r8, r5, #0
 801288a:	ea4f 79e8 	mov.w	r9, r8, asr #31
 801288e:	4640      	mov	r0, r8
 8012890:	4649      	mov	r1, r9
 8012892:	f7ee fa7d 	bl	8000d90 <__aeabi_uldivmod>
 8012896:	f244 66b6 	movw	r6, #18102	; 0x46b6
 801289a:	2d00      	cmp	r5, #0
 801289c:	f04f 052b 	mov.w	r5, #43	; 0x2b
 80128a0:	f6c0 0602 	movt	r6, #2050	; 0x802
 80128a4:	5cb0      	ldrb	r0, [r6, r2]
 80128a6:	f807 0cbb 	strb.w	r0, [r7, #-187]
 80128aa:	bfb8      	it	lt
 80128ac:	252d      	movlt	r5, #45	; 0x2d
 80128ae:	f1b8 0f0a 	cmp.w	r8, #10
 80128b2:	d233      	bcs.n	801291c <rpl_vsnprintf+0xb54>
 80128b4:	ed9f bbe8 	vldr	d11, [pc, #928]	; 8012c58 <rpl_vsnprintf+0xe90>
 80128b8:	2002      	movs	r0, #2
 80128ba:	2130      	movs	r1, #48	; 0x30
 80128bc:	2201      	movs	r2, #1
 80128be:	e0a1      	b.n	8012a04 <rpl_vsnprintf+0xc3c>
 80128c0:	9819      	ldr	r0, [sp, #100]	; 0x64
 80128c2:	3805      	subs	r0, #5
 80128c4:	2800      	cmp	r0, #0
 80128c6:	bfd8      	it	le
 80128c8:	4640      	movle	r0, r8
 80128ca:	991a      	ldr	r1, [sp, #104]	; 0x68
 80128cc:	07c9      	lsls	r1, r1, #31
 80128ce:	bf18      	it	ne
 80128d0:	4240      	negne	r0, r0
 80128d2:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80128d4:	2801      	cmp	r0, #1
 80128d6:	f2c0 817d 	blt.w	8012bd4 <rpl_vsnprintf+0xe0c>
 80128da:	1c51      	adds	r1, r2, #1
 80128dc:	4571      	cmp	r1, lr
 80128de:	bf3c      	itt	cc
 80128e0:	2320      	movcc	r3, #32
 80128e2:	f80b 3002 	strbcc.w	r3, [fp, r2]
 80128e6:	3801      	subs	r0, #1
 80128e8:	460a      	mov	r2, r1
 80128ea:	dcf6      	bgt.n	80128da <rpl_vsnprintf+0xb12>
 80128ec:	911c      	str	r1, [sp, #112]	; 0x70
 80128ee:	e172      	b.n	8012bd6 <rpl_vsnprintf+0xe0e>
 80128f0:	4655      	mov	r5, sl
 80128f2:	780b      	ldrb	r3, [r1, #0]
 80128f4:	2b00      	cmp	r3, #0
 80128f6:	d067      	beq.n	80129c8 <rpl_vsnprintf+0xc00>
 80128f8:	3101      	adds	r1, #1
 80128fa:	2a00      	cmp	r2, #0
 80128fc:	d058      	beq.n	80129b0 <rpl_vsnprintf+0xbe8>
 80128fe:	2d01      	cmp	r5, #1
 8012900:	db62      	blt.n	80129c8 <rpl_vsnprintf+0xc00>
 8012902:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 8012904:	3d01      	subs	r5, #1
 8012906:	1c72      	adds	r2, r6, #1
 8012908:	4572      	cmp	r2, lr
 801290a:	bf38      	it	cc
 801290c:	f80b 3006 	strbcc.w	r3, [fp, r6]
 8012910:	921c      	str	r2, [sp, #112]	; 0x70
 8012912:	f811 3b01 	ldrb.w	r3, [r1], #1
 8012916:	2b00      	cmp	r3, #0
 8012918:	d1f1      	bne.n	80128fe <rpl_vsnprintf+0xb36>
 801291a:	e055      	b.n	80129c8 <rpl_vsnprintf+0xc00>
 801291c:	4640      	mov	r0, r8
 801291e:	4649      	mov	r1, r9
 8012920:	220a      	movs	r2, #10
 8012922:	2300      	movs	r3, #0
 8012924:	f7ee fa34 	bl	8000d90 <__aeabi_uldivmod>
 8012928:	220a      	movs	r2, #10
 801292a:	2300      	movs	r3, #0
 801292c:	f7ee fa30 	bl	8000d90 <__aeabi_uldivmod>
 8012930:	5cb0      	ldrb	r0, [r6, r2]
 8012932:	ed9f bbc9 	vldr	d11, [pc, #804]	; 8012c58 <rpl_vsnprintf+0xe90>
 8012936:	f1b8 0f64 	cmp.w	r8, #100	; 0x64
 801293a:	f807 0cba 	strb.w	r0, [r7, #-186]
 801293e:	d254      	bcs.n	80129ea <rpl_vsnprintf+0xc22>
 8012940:	2002      	movs	r0, #2
 8012942:	f1a7 03bb 	sub.w	r3, r7, #187	; 0xbb
 8012946:	e060      	b.n	8012a0a <rpl_vsnprintf+0xc42>
 8012948:	f91c 0b04 	ldrsb.w	r0, [ip], #4
 801294c:	e001      	b.n	8012952 <rpl_vsnprintf+0xb8a>
 801294e:	f93c 0b04 	ldrsh.w	r0, [ip], #4
 8012952:	4665      	mov	r5, ip
 8012954:	17c1      	asrs	r1, r0, #31
 8012956:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8012958:	e9cd 0100 	strd	r0, r1, [sp]
 801295c:	200a      	movs	r0, #10
 801295e:	9002      	str	r0, [sp, #8]
 8012960:	9819      	ldr	r0, [sp, #100]	; 0x64
 8012962:	a91c      	add	r1, sp, #112	; 0x70
 8012964:	4674      	mov	r4, lr
 8012966:	e9cd 0a03 	strd	r0, sl, [sp, #12]
 801296a:	9205      	str	r2, [sp, #20]
 801296c:	4658      	mov	r0, fp
 801296e:	4672      	mov	r2, lr
 8012970:	f000 fb3a 	bl	8012fe8 <_ZL6fmtintPcPjjxiiii>
 8012974:	46a6      	mov	lr, r4
 8012976:	46ac      	mov	ip, r5
 8012978:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
 801297c:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 801297e:	2200      	movs	r2, #0
 8012980:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
 8012984:	2000      	movs	r0, #0
 8012986:	f815 1b01 	ldrb.w	r1, [r5], #1
 801298a:	921a      	str	r2, [sp, #104]	; 0x68
 801298c:	2200      	movs	r2, #0
 801298e:	9219      	str	r2, [sp, #100]	; 0x64
 8012990:	2200      	movs	r2, #0
 8012992:	060b      	lsls	r3, r1, #24
 8012994:	f040 823d 	bne.w	8012e12 <rpl_vsnprintf+0x104a>
 8012998:	e2f9      	b.n	8012f8e <rpl_vsnprintf+0x11c6>
 801299a:	f85c 0b04 	ldr.w	r0, [ip], #4
 801299e:	2100      	movs	r1, #0
 80129a0:	4665      	mov	r5, ip
 80129a2:	e7d8      	b.n	8012956 <rpl_vsnprintf+0xb8e>
 80129a4:	f85c 0b04 	ldr.w	r0, [ip], #4
 80129a8:	991c      	ldr	r1, [sp, #112]	; 0x70
 80129aa:	e9c0 1800 	strd	r1, r8, [r0]
 80129ae:	e7e5      	b.n	801297c <rpl_vsnprintf+0xbb4>
 80129b0:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80129b2:	1c56      	adds	r6, r2, #1
 80129b4:	4576      	cmp	r6, lr
 80129b6:	bf38      	it	cc
 80129b8:	f80b 3002 	strbcc.w	r3, [fp, r2]
 80129bc:	961c      	str	r6, [sp, #112]	; 0x70
 80129be:	4632      	mov	r2, r6
 80129c0:	f811 3b01 	ldrb.w	r3, [r1], #1
 80129c4:	2b00      	cmp	r3, #0
 80129c6:	d1f4      	bne.n	80129b2 <rpl_vsnprintf+0xbea>
 80129c8:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 80129cc:	dcd6      	bgt.n	801297c <rpl_vsnprintf+0xbb4>
 80129ce:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80129d0:	3801      	subs	r0, #1
 80129d2:	1c51      	adds	r1, r2, #1
 80129d4:	3001      	adds	r0, #1
 80129d6:	4571      	cmp	r1, lr
 80129d8:	bf3c      	itt	cc
 80129da:	2320      	movcc	r3, #32
 80129dc:	f80b 3002 	strbcc.w	r3, [fp, r2]
 80129e0:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 80129e4:	460a      	mov	r2, r1
 80129e6:	dbf4      	blt.n	80129d2 <rpl_vsnprintf+0xc0a>
 80129e8:	e4a5      	b.n	8012336 <rpl_vsnprintf+0x56e>
 80129ea:	4640      	mov	r0, r8
 80129ec:	4649      	mov	r1, r9
 80129ee:	2264      	movs	r2, #100	; 0x64
 80129f0:	2300      	movs	r3, #0
 80129f2:	f7ee f9cd 	bl	8000d90 <__aeabi_uldivmod>
 80129f6:	220a      	movs	r2, #10
 80129f8:	2300      	movs	r3, #0
 80129fa:	f7ee f9c9 	bl	8000d90 <__aeabi_uldivmod>
 80129fe:	5cb1      	ldrb	r1, [r6, r2]
 8012a00:	2003      	movs	r0, #3
 8012a02:	2202      	movs	r2, #2
 8012a04:	f1a7 03bb 	sub.w	r3, r7, #187	; 0xbb
 8012a08:	5499      	strb	r1, [r3, r2]
 8012a0a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8012a0c:	541d      	strb	r5, [r3, r0]
 8012a0e:	1819      	adds	r1, r3, r0
 8012a10:	2365      	movs	r3, #101	; 0x65
 8012a12:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8012a16:	ea83 0252 	eor.w	r2, r3, r2, lsr #1
 8012a1a:	704a      	strb	r2, [r1, #1]
 8012a1c:	1c81      	adds	r1, r0, #2
 8012a1e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8012a20:	3801      	subs	r0, #1
 8012a22:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8012a24:	9115      	str	r1, [sp, #84]	; 0x54
 8012a26:	f04f 0800 	mov.w	r8, #0
 8012a2a:	1a40      	subs	r0, r0, r1
 8012a2c:	4601      	mov	r1, r0
 8012a2e:	9114      	str	r1, [sp, #80]	; 0x50
 8012a30:	4683      	mov	fp, r0
 8012a32:	4628      	mov	r0, r5
 8012a34:	4621      	mov	r1, r4
 8012a36:	220a      	movs	r2, #10
 8012a38:	2300      	movs	r3, #0
 8012a3a:	4646      	mov	r6, r8
 8012a3c:	f7ee f9a8 	bl	8000d90 <__aeabi_uldivmod>
 8012a40:	f244 60b6 	movw	r0, #18102	; 0x46b6
 8012a44:	f1a7 018b 	sub.w	r1, r7, #139	; 0x8b
 8012a48:	f106 0801 	add.w	r8, r6, #1
 8012a4c:	f6c0 0002 	movt	r0, #2050	; 0x802
 8012a50:	5c80      	ldrb	r0, [r0, r2]
 8012a52:	5588      	strb	r0, [r1, r6]
 8012a54:	f1b5 000a 	subs.w	r0, r5, #10
 8012a58:	f174 0000 	sbcs.w	r0, r4, #0
 8012a5c:	d30c      	bcc.n	8012a78 <rpl_vsnprintf+0xcb0>
 8012a5e:	4628      	mov	r0, r5
 8012a60:	4621      	mov	r1, r4
 8012a62:	220a      	movs	r2, #10
 8012a64:	2300      	movs	r3, #0
 8012a66:	f7ee f993 	bl	8000d90 <__aeabi_uldivmod>
 8012a6a:	4605      	mov	r5, r0
 8012a6c:	460c      	mov	r4, r1
 8012a6e:	f1ab 0001 	sub.w	r0, fp, #1
 8012a72:	f1b8 0f2b 	cmp.w	r8, #43	; 0x2b
 8012a76:	d3db      	bcc.n	8012a30 <rpl_vsnprintf+0xc68>
 8012a78:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8012a7a:	4654      	mov	r4, sl
 8012a7c:	f04f 0a00 	mov.w	sl, #0
 8012a80:	f1a7 05b6 	sub.w	r5, r7, #182	; 0xb6
 8012a84:	ea54 0001 	orrs.w	r0, r4, r1
 8012a88:	d01d      	beq.n	8012ac6 <rpl_vsnprintf+0xcfe>
 8012a8a:	4620      	mov	r0, r4
 8012a8c:	220a      	movs	r2, #10
 8012a8e:	2300      	movs	r3, #0
 8012a90:	4689      	mov	r9, r1
 8012a92:	f7ee f97d 	bl	8000d90 <__aeabi_uldivmod>
 8012a96:	f244 60b6 	movw	r0, #18102	; 0x46b6
 8012a9a:	f6c0 0002 	movt	r0, #2050	; 0x802
 8012a9e:	5c80      	ldrb	r0, [r0, r2]
 8012aa0:	f805 000a 	strb.w	r0, [r5, sl]
 8012aa4:	f1b4 000a 	subs.w	r0, r4, #10
 8012aa8:	f10a 0a01 	add.w	sl, sl, #1
 8012aac:	f179 0000 	sbcs.w	r0, r9, #0
 8012ab0:	d309      	bcc.n	8012ac6 <rpl_vsnprintf+0xcfe>
 8012ab2:	4620      	mov	r0, r4
 8012ab4:	4649      	mov	r1, r9
 8012ab6:	220a      	movs	r2, #10
 8012ab8:	2300      	movs	r3, #0
 8012aba:	f7ee f969 	bl	8000d90 <__aeabi_uldivmod>
 8012abe:	4604      	mov	r4, r0
 8012ac0:	f1ba 0f2b 	cmp.w	sl, #43	; 0x2b
 8012ac4:	d3e1      	bcc.n	8012a8a <rpl_vsnprintf+0xcc2>
 8012ac6:	9818      	ldr	r0, [sp, #96]	; 0x60
 8012ac8:	eba0 010a 	sub.w	r1, r0, sl
 8012acc:	2000      	movs	r0, #0
 8012ace:	9019      	str	r0, [sp, #100]	; 0x64
 8012ad0:	9807      	ldr	r0, [sp, #28]
 8012ad2:	2800      	cmp	r0, #0
 8012ad4:	981a      	ldr	r0, [sp, #104]	; 0x68
 8012ad6:	d00f      	beq.n	8012af8 <rpl_vsnprintf+0xd30>
 8012ad8:	f1ba 0f01 	cmp.w	sl, #1
 8012adc:	db12      	blt.n	8012b04 <rpl_vsnprintf+0xd3c>
 8012ade:	f04f 0c00 	mov.w	ip, #0
 8012ae2:	9117      	str	r1, [sp, #92]	; 0x5c
 8012ae4:	f815 100c 	ldrb.w	r1, [r5, ip]
 8012ae8:	2930      	cmp	r1, #48	; 0x30
 8012aea:	d103      	bne.n	8012af4 <rpl_vsnprintf+0xd2c>
 8012aec:	f10c 0c01 	add.w	ip, ip, #1
 8012af0:	45d4      	cmp	ip, sl
 8012af2:	dbf7      	blt.n	8012ae4 <rpl_vsnprintf+0xd1c>
 8012af4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8012af6:	e009      	b.n	8012b0c <rpl_vsnprintf+0xd44>
 8012af8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8012afa:	9d06      	ldr	r5, [sp, #24]
 8012afc:	9117      	str	r1, [sp, #92]	; 0x5c
 8012afe:	f04f 0c00 	mov.w	ip, #0
 8012b02:	e006      	b.n	8012b12 <rpl_vsnprintf+0xd4a>
 8012b04:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8012b06:	2100      	movs	r1, #0
 8012b08:	9117      	str	r1, [sp, #92]	; 0x5c
 8012b0a:	469c      	mov	ip, r3
 8012b0c:	9d06      	ldr	r5, [sp, #24]
 8012b0e:	eba3 030c 	sub.w	r3, r3, ip
 8012b12:	2b01      	cmp	r3, #1
 8012b14:	f04f 0e00 	mov.w	lr, #0
 8012b18:	f04f 0900 	mov.w	r9, #0
 8012b1c:	f04f 0200 	mov.w	r2, #0
 8012b20:	bfb8      	it	lt
 8012b22:	f04f 0e01 	movlt.w	lr, #1
 8012b26:	f010 0108 	ands.w	r1, r0, #8
 8012b2a:	bf08      	it	eq
 8012b2c:	f04f 0901 	moveq.w	r9, #1
 8012b30:	2b00      	cmp	r3, #0
 8012b32:	bfc8      	it	gt
 8012b34:	2201      	movgt	r2, #1
 8012b36:	2d00      	cmp	r5, #0
 8012b38:	ea42 01d1 	orr.w	r1, r2, r1, lsr #3
 8012b3c:	d014      	beq.n	8012b68 <rpl_vsnprintf+0xda0>
 8012b3e:	f245 5056 	movw	r0, #21846	; 0x5556
 8012b42:	f2c5 5055 	movt	r0, #21845	; 0x5555
 8012b46:	fb58 f200 	smmul	r2, r8, r0
 8012b4a:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8012b4e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8012b52:	ebb8 0202 	subs.w	r2, r8, r2
 8012b56:	4632      	mov	r2, r6
 8012b58:	bf08      	it	eq
 8012b5a:	3a01      	subeq	r2, #1
 8012b5c:	3201      	adds	r2, #1
 8012b5e:	fb52 f200 	smmul	r2, r2, r0
 8012b62:	eb02 70d2 	add.w	r0, r2, r2, lsr #31
 8012b66:	9019      	str	r0, [sp, #100]	; 0x64
 8012b68:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012b6a:	424c      	negs	r4, r1
 8012b6c:	4698      	mov	r8, r3
 8012b6e:	4622      	mov	r2, r4
 8012b70:	2800      	cmp	r0, #0
 8012b72:	bf18      	it	ne
 8012b74:	43ca      	mvnne	r2, r1
 8012b76:	1ad1      	subs	r1, r2, r3
 8012b78:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8012b7a:	1a89      	subs	r1, r1, r2
 8012b7c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012b7e:	4411      	add	r1, r2
 8012b80:	2200      	movs	r2, #0
 8012b82:	1b8b      	subs	r3, r1, r6
 8012b84:	4601      	mov	r1, r0
 8012b86:	2b00      	cmp	r3, #0
 8012b88:	bfc8      	it	gt
 8012b8a:	461a      	movgt	r2, r3
 8012b8c:	2800      	cmp	r0, #0
 8012b8e:	bf18      	it	ne
 8012b90:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8012b94:	981a      	ldr	r0, [sp, #104]	; 0x68
 8012b96:	07c5      	lsls	r5, r0, #31
 8012b98:	d110      	bne.n	8012bbc <rpl_vsnprintf+0xdf4>
 8012b9a:	06c5      	lsls	r5, r0, #27
 8012b9c:	d512      	bpl.n	8012bc4 <rpl_vsnprintf+0xdfc>
 8012b9e:	2b01      	cmp	r3, #1
 8012ba0:	db10      	blt.n	8012bc4 <rpl_vsnprintf+0xdfc>
 8012ba2:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012ba4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8012ba6:	2800      	cmp	r0, #0
 8012ba8:	d05a      	beq.n	8012c60 <rpl_vsnprintf+0xe98>
 8012baa:	9816      	ldr	r0, [sp, #88]	; 0x58
 8012bac:	1c5a      	adds	r2, r3, #1
 8012bae:	4282      	cmp	r2, r0
 8012bb0:	bf3c      	itt	cc
 8012bb2:	e9dd 0508 	ldrdcc	r0, r5, [sp, #32]
 8012bb6:	54c5      	strbcc	r5, [r0, r3]
 8012bb8:	921c      	str	r2, [sp, #112]	; 0x70
 8012bba:	e052      	b.n	8012c62 <rpl_vsnprintf+0xe9a>
 8012bbc:	f8dd b020 	ldr.w	fp, [sp, #32]
 8012bc0:	4252      	negs	r2, r2
 8012bc2:	e06a      	b.n	8012c9a <rpl_vsnprintf+0xed2>
 8012bc4:	f8dd b020 	ldr.w	fp, [sp, #32]
 8012bc8:	e067      	b.n	8012c9a <rpl_vsnprintf+0xed2>
 8012bca:	ed9f bb23 	vldr	d11, [pc, #140]	; 8012c58 <rpl_vsnprintf+0xe90>
 8012bce:	9613      	str	r6, [sp, #76]	; 0x4c
 8012bd0:	2100      	movs	r1, #0
 8012bd2:	e725      	b.n	8012a20 <rpl_vsnprintf+0xc58>
 8012bd4:	4611      	mov	r1, r2
 8012bd6:	1c4a      	adds	r2, r1, #1
 8012bd8:	4572      	cmp	r2, lr
 8012bda:	bf3c      	itt	cc
 8012bdc:	2328      	movcc	r3, #40	; 0x28
 8012bde:	f80b 3001 	strbcc.w	r3, [fp, r1]
 8012be2:	921c      	str	r2, [sp, #112]	; 0x70
 8012be4:	1c8b      	adds	r3, r1, #2
 8012be6:	4573      	cmp	r3, lr
 8012be8:	bf3c      	itt	cc
 8012bea:	256e      	movcc	r5, #110	; 0x6e
 8012bec:	f80b 5002 	strbcc.w	r5, [fp, r2]
 8012bf0:	1cca      	adds	r2, r1, #3
 8012bf2:	931c      	str	r3, [sp, #112]	; 0x70
 8012bf4:	4572      	cmp	r2, lr
 8012bf6:	bf3c      	itt	cc
 8012bf8:	2569      	movcc	r5, #105	; 0x69
 8012bfa:	f80b 5003 	strbcc.w	r5, [fp, r3]
 8012bfe:	1d0b      	adds	r3, r1, #4
 8012c00:	3105      	adds	r1, #5
 8012c02:	921c      	str	r2, [sp, #112]	; 0x70
 8012c04:	4573      	cmp	r3, lr
 8012c06:	bf3c      	itt	cc
 8012c08:	256c      	movcc	r5, #108	; 0x6c
 8012c0a:	f80b 5002 	strbcc.w	r5, [fp, r2]
 8012c0e:	4571      	cmp	r1, lr
 8012c10:	931c      	str	r3, [sp, #112]	; 0x70
 8012c12:	bf3c      	itt	cc
 8012c14:	2229      	movcc	r2, #41	; 0x29
 8012c16:	f80b 2003 	strbcc.w	r2, [fp, r3]
 8012c1a:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 8012c1e:	911c      	str	r1, [sp, #112]	; 0x70
 8012c20:	f73f aeac 	bgt.w	801297c <rpl_vsnprintf+0xbb4>
 8012c24:	3801      	subs	r0, #1
 8012c26:	1c4a      	adds	r2, r1, #1
 8012c28:	3001      	adds	r0, #1
 8012c2a:	4572      	cmp	r2, lr
 8012c2c:	bf3c      	itt	cc
 8012c2e:	2320      	movcc	r3, #32
 8012c30:	f80b 3001 	strbcc.w	r3, [fp, r1]
 8012c34:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 8012c38:	4611      	mov	r1, r2
 8012c3a:	dbf4      	blt.n	8012c26 <rpl_vsnprintf+0xe5e>
 8012c3c:	921c      	str	r2, [sp, #112]	; 0x70
 8012c3e:	e69d      	b.n	801297c <rpl_vsnprintf+0xbb4>
 8012c40:	f85c 0b04 	ldr.w	r0, [ip], #4
 8012c44:	991c      	ldr	r1, [sp, #112]	; 0x70
 8012c46:	7001      	strb	r1, [r0, #0]
 8012c48:	e698      	b.n	801297c <rpl_vsnprintf+0xbb4>
 8012c4a:	f85c 0b04 	ldr.w	r0, [ip], #4
 8012c4e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8012c50:	8001      	strh	r1, [r0, #0]
 8012c52:	e693      	b.n	801297c <rpl_vsnprintf+0xbb4>
 8012c54:	bf00      	nop
 8012c56:	bf00      	nop
 8012c58:	00000000 	.word	0x00000000
 8012c5c:	80000000 	.word	0x80000000
 8012c60:	461a      	mov	r2, r3
 8012c62:	4421      	add	r1, r4
 8012c64:	9819      	ldr	r0, [sp, #100]	; 0x64
 8012c66:	eba1 0108 	sub.w	r1, r1, r8
 8012c6a:	1a09      	subs	r1, r1, r0
 8012c6c:	eb01 030b 	add.w	r3, r1, fp
 8012c70:	2101      	movs	r1, #1
 8012c72:	2b00      	cmp	r3, #0
 8012c74:	bfc8      	it	gt
 8012c76:	1c59      	addgt	r1, r3, #1
 8012c78:	f8dd b020 	ldr.w	fp, [sp, #32]
 8012c7c:	9816      	ldr	r0, [sp, #88]	; 0x58
 8012c7e:	1c54      	adds	r4, r2, #1
 8012c80:	3901      	subs	r1, #1
 8012c82:	4284      	cmp	r4, r0
 8012c84:	bf3c      	itt	cc
 8012c86:	2030      	movcc	r0, #48	; 0x30
 8012c88:	f80b 0002 	strbcc.w	r0, [fp, r2]
 8012c8c:	2901      	cmp	r1, #1
 8012c8e:	4622      	mov	r2, r4
 8012c90:	dcf4      	bgt.n	8012c7c <rpl_vsnprintf+0xeb4>
 8012c92:	1e4a      	subs	r2, r1, #1
 8012c94:	2000      	movs	r0, #0
 8012c96:	941c      	str	r4, [sp, #112]	; 0x70
 8012c98:	9009      	str	r0, [sp, #36]	; 0x24
 8012c9a:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
 8012c9e:	2a01      	cmp	r2, #1
 8012ca0:	db0b      	blt.n	8012cba <rpl_vsnprintf+0xef2>
 8012ca2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8012ca4:	9816      	ldr	r0, [sp, #88]	; 0x58
 8012ca6:	1c59      	adds	r1, r3, #1
 8012ca8:	4281      	cmp	r1, r0
 8012caa:	bf3c      	itt	cc
 8012cac:	2020      	movcc	r0, #32
 8012cae:	f80b 0003 	strbcc.w	r0, [fp, r3]
 8012cb2:	3a01      	subs	r2, #1
 8012cb4:	460b      	mov	r3, r1
 8012cb6:	dcf5      	bgt.n	8012ca4 <rpl_vsnprintf+0xedc>
 8012cb8:	911c      	str	r1, [sp, #112]	; 0x70
 8012cba:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012cbc:	b140      	cbz	r0, 8012cd0 <rpl_vsnprintf+0xf08>
 8012cbe:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8012cc0:	9816      	ldr	r0, [sp, #88]	; 0x58
 8012cc2:	1c59      	adds	r1, r3, #1
 8012cc4:	4281      	cmp	r1, r0
 8012cc6:	bf3c      	itt	cc
 8012cc8:	9809      	ldrcc	r0, [sp, #36]	; 0x24
 8012cca:	f80b 0003 	strbcc.w	r0, [fp, r3]
 8012cce:	911c      	str	r1, [sp, #112]	; 0x70
 8012cd0:	ea09 090e 	and.w	r9, r9, lr
 8012cd4:	2e00      	cmp	r6, #0
 8012cd6:	f04f 0800 	mov.w	r8, #0
 8012cda:	db3a      	blt.n	8012d52 <rpl_vsnprintf+0xf8a>
 8012cdc:	9819      	ldr	r0, [sp, #100]	; 0x64
 8012cde:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8012ce0:	2800      	cmp	r0, #0
 8012ce2:	dd23      	ble.n	8012d2c <rpl_vsnprintf+0xf64>
 8012ce4:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8012ce8:	1c59      	adds	r1, r3, #1
 8012cea:	1c74      	adds	r4, r6, #1
 8012cec:	4571      	cmp	r1, lr
 8012cee:	bf3e      	ittt	cc
 8012cf0:	f1a7 008b 	subcc.w	r0, r7, #139	; 0x8b
 8012cf4:	5d85      	ldrbcc	r5, [r0, r6]
 8012cf6:	f80b 5003 	strbcc.w	r5, [fp, r3]
 8012cfa:	2c02      	cmp	r4, #2
 8012cfc:	db11      	blt.n	8012d22 <rpl_vsnprintf+0xf5a>
 8012cfe:	f64a 20ab 	movw	r0, #43691	; 0xaaab
 8012d02:	f6ca 20aa 	movt	r0, #43690	; 0xaaaa
 8012d06:	fba6 5000 	umull	r5, r0, r6, r0
 8012d0a:	0840      	lsrs	r0, r0, #1
 8012d0c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8012d10:	1a30      	subs	r0, r6, r0
 8012d12:	d106      	bne.n	8012d22 <rpl_vsnprintf+0xf5a>
 8012d14:	3302      	adds	r3, #2
 8012d16:	4573      	cmp	r3, lr
 8012d18:	bf3c      	itt	cc
 8012d1a:	202c      	movcc	r0, #44	; 0x2c
 8012d1c:	f80b 0001 	strbcc.w	r0, [fp, r1]
 8012d20:	e000      	b.n	8012d24 <rpl_vsnprintf+0xf5c>
 8012d22:	460b      	mov	r3, r1
 8012d24:	3e01      	subs	r6, #1
 8012d26:	2c01      	cmp	r4, #1
 8012d28:	dcde      	bgt.n	8012ce8 <rpl_vsnprintf+0xf20>
 8012d2a:	e00f      	b.n	8012d4c <rpl_vsnprintf+0xf84>
 8012d2c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8012d2e:	4619      	mov	r1, r3
 8012d30:	1c4b      	adds	r3, r1, #1
 8012d32:	42ab      	cmp	r3, r5
 8012d34:	bf3e      	ittt	cc
 8012d36:	f1a7 008b 	subcc.w	r0, r7, #139	; 0x8b
 8012d3a:	5d80      	ldrbcc	r0, [r0, r6]
 8012d3c:	f80b 0001 	strbcc.w	r0, [fp, r1]
 8012d40:	1c71      	adds	r1, r6, #1
 8012d42:	1e70      	subs	r0, r6, #1
 8012d44:	2901      	cmp	r1, #1
 8012d46:	4619      	mov	r1, r3
 8012d48:	4606      	mov	r6, r0
 8012d4a:	dcf1      	bgt.n	8012d30 <rpl_vsnprintf+0xf68>
 8012d4c:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
 8012d50:	931c      	str	r3, [sp, #112]	; 0x70
 8012d52:	f1b9 0f00 	cmp.w	r9, #0
 8012d56:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8012d5a:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 8012d5e:	d107      	bne.n	8012d70 <rpl_vsnprintf+0xfa8>
 8012d60:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8012d62:	1c59      	adds	r1, r3, #1
 8012d64:	4571      	cmp	r1, lr
 8012d66:	bf3c      	itt	cc
 8012d68:	202e      	movcc	r0, #46	; 0x2e
 8012d6a:	f80b 0003 	strbcc.w	r0, [fp, r3]
 8012d6e:	911c      	str	r1, [sp, #112]	; 0x70
 8012d70:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8012d72:	2801      	cmp	r0, #1
 8012d74:	db0c      	blt.n	8012d90 <rpl_vsnprintf+0xfc8>
 8012d76:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8012d78:	1c41      	adds	r1, r0, #1
 8012d7a:	1c5e      	adds	r6, r3, #1
 8012d7c:	3901      	subs	r1, #1
 8012d7e:	4576      	cmp	r6, lr
 8012d80:	bf3c      	itt	cc
 8012d82:	2030      	movcc	r0, #48	; 0x30
 8012d84:	f80b 0003 	strbcc.w	r0, [fp, r3]
 8012d88:	2901      	cmp	r1, #1
 8012d8a:	4633      	mov	r3, r6
 8012d8c:	dcf5      	bgt.n	8012d7a <rpl_vsnprintf+0xfb2>
 8012d8e:	961c      	str	r6, [sp, #112]	; 0x70
 8012d90:	45e2      	cmp	sl, ip
 8012d92:	dd15      	ble.n	8012dc0 <rpl_vsnprintf+0xff8>
 8012d94:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8012d96:	eb0a 0103 	add.w	r1, sl, r3
 8012d9a:	1c5e      	adds	r6, r3, #1
 8012d9c:	f1aa 0501 	sub.w	r5, sl, #1
 8012da0:	4576      	cmp	r6, lr
 8012da2:	d206      	bcs.n	8012db2 <rpl_vsnprintf+0xfea>
 8012da4:	f1a7 00b6 	sub.w	r0, r7, #182	; 0xb6
 8012da8:	4450      	add	r0, sl
 8012daa:	f810 0c01 	ldrb.w	r0, [r0, #-1]
 8012dae:	f80b 0003 	strb.w	r0, [fp, r3]
 8012db2:	4565      	cmp	r5, ip
 8012db4:	4633      	mov	r3, r6
 8012db6:	46aa      	mov	sl, r5
 8012db8:	dcef      	bgt.n	8012d9a <rpl_vsnprintf+0xfd2>
 8012dba:	eba1 000c 	sub.w	r0, r1, ip
 8012dbe:	901c      	str	r0, [sp, #112]	; 0x70
 8012dc0:	9815      	ldr	r0, [sp, #84]	; 0x54
 8012dc2:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8012dc6:	2801      	cmp	r0, #1
 8012dc8:	db10      	blt.n	8012dec <rpl_vsnprintf+0x1024>
 8012dca:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8012dcc:	3801      	subs	r0, #1
 8012dce:	1c59      	adds	r1, r3, #1
 8012dd0:	4571      	cmp	r1, lr
 8012dd2:	bf3e      	ittt	cc
 8012dd4:	f1a7 05bb 	subcc.w	r5, r7, #187	; 0xbb
 8012dd8:	5c2e      	ldrbcc	r6, [r5, r0]
 8012dda:	f80b 6003 	strbcc.w	r6, [fp, r3]
 8012dde:	1e43      	subs	r3, r0, #1
 8012de0:	3001      	adds	r0, #1
 8012de2:	2801      	cmp	r0, #1
 8012de4:	4618      	mov	r0, r3
 8012de6:	460b      	mov	r3, r1
 8012de8:	dcf1      	bgt.n	8012dce <rpl_vsnprintf+0x1006>
 8012dea:	911c      	str	r1, [sp, #112]	; 0x70
 8012dec:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
 8012df0:	f73f adc4 	bgt.w	801297c <rpl_vsnprintf+0xbb4>
 8012df4:	1e50      	subs	r0, r2, #1
 8012df6:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8012df8:	1c51      	adds	r1, r2, #1
 8012dfa:	3001      	adds	r0, #1
 8012dfc:	4571      	cmp	r1, lr
 8012dfe:	bf3c      	itt	cc
 8012e00:	2320      	movcc	r3, #32
 8012e02:	f80b 3002 	strbcc.w	r3, [fp, r2]
 8012e06:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 8012e0a:	460a      	mov	r2, r1
 8012e0c:	dbf4      	blt.n	8012df8 <rpl_vsnprintf+0x1030>
 8012e0e:	f7ff ba92 	b.w	8012336 <rpl_vsnprintf+0x56e>
 8012e12:	2a00      	cmp	r2, #0
 8012e14:	f000 80a9 	beq.w	8012f6a <rpl_vsnprintf+0x11a2>
 8012e18:	b2cb      	uxtb	r3, r1
 8012e1a:	951b      	str	r5, [sp, #108]	; 0x6c
 8012e1c:	2b2d      	cmp	r3, #45	; 0x2d
 8012e1e:	d01b      	beq.n	8012e58 <rpl_vsnprintf+0x1090>
 8012e20:	2b2b      	cmp	r3, #43	; 0x2b
 8012e22:	d133      	bne.n	8012e8c <rpl_vsnprintf+0x10c4>
 8012e24:	1e56      	subs	r6, r2, #1
 8012e26:	2206      	movs	r2, #6
 8012e28:	2e05      	cmp	r6, #5
 8012e2a:	f200 80b3 	bhi.w	8012f94 <rpl_vsnprintf+0x11cc>
 8012e2e:	e8df f006 	tbb	[pc, r6]
 8012e32:	080a      	.short	0x080a
 8012e34:	0305060f 	.word	0x0305060f
 8012e38:	f7ff b84e 	b.w	8011ed8 <rpl_vsnprintf+0x110>
 8012e3c:	e7f2      	b.n	8012e24 <rpl_vsnprintf+0x105c>
 8012e3e:	f7ff b82d 	b.w	8011e9c <rpl_vsnprintf+0xd4>
 8012e42:	f7ff b80a 	b.w	8011e5a <rpl_vsnprintf+0x92>
 8012e46:	991a      	ldr	r1, [sp, #104]	; 0x68
 8012e48:	f041 0102 	orr.w	r1, r1, #2
 8012e4c:	f7ff b8e7 	b.w	801201e <rpl_vsnprintf+0x256>
 8012e50:	2205      	movs	r2, #5
 8012e52:	2b2e      	cmp	r3, #46	; 0x2e
 8012e54:	d1e6      	bne.n	8012e24 <rpl_vsnprintf+0x105c>
 8012e56:	e093      	b.n	8012f80 <rpl_vsnprintf+0x11b8>
 8012e58:	1e56      	subs	r6, r2, #1
 8012e5a:	2206      	movs	r2, #6
 8012e5c:	2e05      	cmp	r6, #5
 8012e5e:	f200 809a 	bhi.w	8012f96 <rpl_vsnprintf+0x11ce>
 8012e62:	e8df f006 	tbb	[pc, r6]
 8012e66:	080a      	.short	0x080a
 8012e68:	0305060f 	.word	0x0305060f
 8012e6c:	f7ff b834 	b.w	8011ed8 <rpl_vsnprintf+0x110>
 8012e70:	e7f2      	b.n	8012e58 <rpl_vsnprintf+0x1090>
 8012e72:	f7ff b813 	b.w	8011e9c <rpl_vsnprintf+0xd4>
 8012e76:	f7fe bff0 	b.w	8011e5a <rpl_vsnprintf+0x92>
 8012e7a:	991a      	ldr	r1, [sp, #104]	; 0x68
 8012e7c:	f041 0101 	orr.w	r1, r1, #1
 8012e80:	f7ff b8cd 	b.w	801201e <rpl_vsnprintf+0x256>
 8012e84:	2205      	movs	r2, #5
 8012e86:	2b2e      	cmp	r3, #46	; 0x2e
 8012e88:	d1e6      	bne.n	8012e58 <rpl_vsnprintf+0x1090>
 8012e8a:	e079      	b.n	8012f80 <rpl_vsnprintf+0x11b8>
 8012e8c:	3a01      	subs	r2, #1
 8012e8e:	2a05      	cmp	r2, #5
 8012e90:	f200 807f 	bhi.w	8012f92 <rpl_vsnprintf+0x11ca>
 8012e94:	e8df f002 	tbb	[pc, r2]
 8012e98:	05300709 	.word	0x05300709
 8012e9c:	0334      	.short	0x0334
 8012e9e:	f7ff b81b 	b.w	8011ed8 <rpl_vsnprintf+0x110>
 8012ea2:	f7fe bffb 	b.w	8011e9c <rpl_vsnprintf+0xd4>
 8012ea6:	f7fe bfd8 	b.w	8011e5a <rpl_vsnprintf+0x92>
 8012eaa:	f06f 021f 	mvn.w	r2, #31
 8012eae:	fa52 f681 	uxtab	r6, r2, r1
 8012eb2:	2202      	movs	r2, #2
 8012eb4:	2e10      	cmp	r6, #16
 8012eb6:	d8e9      	bhi.n	8012e8c <rpl_vsnprintf+0x10c4>
 8012eb8:	e8df f006 	tbb	[pc, r6]
 8012ebc:	13181819 	.word	0x13181819
 8012ec0:	0e181818 	.word	0x0e181818
 8012ec4:	18181818 	.word	0x18181818
 8012ec8:	18181818 	.word	0x18181818
 8012ecc:	0009      	.short	0x0009
 8012ece:	991a      	ldr	r1, [sp, #104]	; 0x68
 8012ed0:	f041 0110 	orr.w	r1, r1, #16
 8012ed4:	f7ff b8a3 	b.w	801201e <rpl_vsnprintf+0x256>
 8012ed8:	991a      	ldr	r1, [sp, #104]	; 0x68
 8012eda:	f041 0120 	orr.w	r1, r1, #32
 8012ede:	f7ff b89e 	b.w	801201e <rpl_vsnprintf+0x256>
 8012ee2:	991a      	ldr	r1, [sp, #104]	; 0x68
 8012ee4:	f041 0108 	orr.w	r1, r1, #8
 8012ee8:	f7ff b899 	b.w	801201e <rpl_vsnprintf+0x256>
 8012eec:	e7ce      	b.n	8012e8c <rpl_vsnprintf+0x10c4>
 8012eee:	991a      	ldr	r1, [sp, #104]	; 0x68
 8012ef0:	f041 0104 	orr.w	r1, r1, #4
 8012ef4:	f7ff b893 	b.w	801201e <rpl_vsnprintf+0x256>
 8012ef8:	2205      	movs	r2, #5
 8012efa:	2b2e      	cmp	r3, #46	; 0x2e
 8012efc:	d1c6      	bne.n	8012e8c <rpl_vsnprintf+0x10c4>
 8012efe:	e03f      	b.n	8012f80 <rpl_vsnprintf+0x11b8>
 8012f00:	f06f 024b 	mvn.w	r2, #75	; 0x4b
 8012f04:	fa52 f681 	uxtab	r6, r2, r1
 8012f08:	2206      	movs	r2, #6
 8012f0a:	2e2e      	cmp	r6, #46	; 0x2e
 8012f0c:	d8be      	bhi.n	8012e8c <rpl_vsnprintf+0x10c4>
 8012f0e:	e8df f006 	tbb	[pc, r6]
 8012f12:	2223      	.short	0x2223
 8012f14:	22222222 	.word	0x22222222
 8012f18:	22222222 	.word	0x22222222
 8012f1c:	22222222 	.word	0x22222222
 8012f20:	22222222 	.word	0x22222222
 8012f24:	22222222 	.word	0x22222222
 8012f28:	22222222 	.word	0x22222222
 8012f2c:	22202222 	.word	0x22202222
 8012f30:	221c221e 	.word	0x221c221e
 8012f34:	22222222 	.word	0x22222222
 8012f38:	221a2222 	.word	0x221a2222
 8012f3c:	22222222 	.word	0x22222222
 8012f40:	0018      	.short	0x0018
 8012f42:	f7ff b8ac 	b.w	801209e <rpl_vsnprintf+0x2d6>
 8012f46:	f7ff b8a0 	b.w	801208a <rpl_vsnprintf+0x2c2>
 8012f4a:	f7ff b88d 	b.w	8012068 <rpl_vsnprintf+0x2a0>
 8012f4e:	f7ff b881 	b.w	8012054 <rpl_vsnprintf+0x28c>
 8012f52:	f7ff b86e 	b.w	8012032 <rpl_vsnprintf+0x26a>
 8012f56:	e799      	b.n	8012e8c <rpl_vsnprintf+0x10c4>
 8012f58:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8012f5a:	2206      	movs	r2, #6
 8012f5c:	2005      	movs	r0, #5
 8012f5e:	f815 1b01 	ldrb.w	r1, [r5], #1
 8012f62:	060b      	lsls	r3, r1, #24
 8012f64:	f47f af55 	bne.w	8012e12 <rpl_vsnprintf+0x104a>
 8012f68:	e011      	b.n	8012f8e <rpl_vsnprintf+0x11c6>
 8012f6a:	b2ca      	uxtb	r2, r1
 8012f6c:	2a25      	cmp	r2, #37	; 0x25
 8012f6e:	f47e af65 	bne.w	8011e3c <rpl_vsnprintf+0x74>
 8012f72:	f815 1b01 	ldrb.w	r1, [r5], #1
 8012f76:	2201      	movs	r2, #1
 8012f78:	060b      	lsls	r3, r1, #24
 8012f7a:	f47f af4a 	bne.w	8012e12 <rpl_vsnprintf+0x104a>
 8012f7e:	e006      	b.n	8012f8e <rpl_vsnprintf+0x11c6>
 8012f80:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8012f82:	f815 1b01 	ldrb.w	r1, [r5], #1
 8012f86:	2204      	movs	r2, #4
 8012f88:	060b      	lsls	r3, r1, #24
 8012f8a:	f47f af42 	bne.w	8012e12 <rpl_vsnprintf+0x104a>
 8012f8e:	2000      	movs	r0, #0
 8012f90:	e009      	b.n	8012fa6 <rpl_vsnprintf+0x11de>
 8012f92:	e7fe      	b.n	8012f92 <rpl_vsnprintf+0x11ca>
 8012f94:	e7fe      	b.n	8012f94 <rpl_vsnprintf+0x11cc>
 8012f96:	e7fe      	b.n	8012f96 <rpl_vsnprintf+0x11ce>
 8012f98:	2000      	movs	r0, #0
 8012f9a:	e006      	b.n	8012faa <rpl_vsnprintf+0x11e2>
 8012f9c:	f8dd b020 	ldr.w	fp, [sp, #32]
 8012fa0:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8012fa4:	2001      	movs	r0, #1
 8012fa6:	f8dd 8070 	ldr.w	r8, [sp, #112]	; 0x70
 8012faa:	45f0      	cmp	r8, lr
 8012fac:	4641      	mov	r1, r8
 8012fae:	d304      	bcc.n	8012fba <rpl_vsnprintf+0x11f2>
 8012fb0:	f1be 0f00 	cmp.w	lr, #0
 8012fb4:	d004      	beq.n	8012fc0 <rpl_vsnprintf+0x11f8>
 8012fb6:	f1ae 0101 	sub.w	r1, lr, #1
 8012fba:	2200      	movs	r2, #0
 8012fbc:	f80b 2001 	strb.w	r2, [fp, r1]
 8012fc0:	f1b8 0f00 	cmp.w	r8, #0
 8012fc4:	db00      	blt.n	8012fc8 <rpl_vsnprintf+0x1200>
 8012fc6:	b138      	cbz	r0, 8012fd8 <rpl_vsnprintf+0x1210>
 8012fc8:	f240 1070 	movw	r0, #368	; 0x170
 8012fcc:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
 8012fd0:	214b      	movs	r1, #75	; 0x4b
 8012fd2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8012fd6:	6001      	str	r1, [r0, #0]
 8012fd8:	4640      	mov	r0, r8
 8012fda:	b034      	add	sp, #208	; 0xd0
 8012fdc:	ecbd 8b10 	vpop	{d8-d15}
 8012fe0:	b001      	add	sp, #4
 8012fe2:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 8012fe6:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012fe8 <_ZL6fmtintPcPjjxiiii>:
 8012fe8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012fea:	af03      	add	r7, sp, #12
 8012fec:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 8012ff0:	b093      	sub	sp, #76	; 0x4c
 8012ff2:	f107 0b08 	add.w	fp, r7, #8
 8012ff6:	69fc      	ldr	r4, [r7, #28]
 8012ff8:	468a      	mov	sl, r1
 8012ffa:	e89b 0860 	ldmia.w	fp, {r5, r6, fp}
 8012ffe:	e9cd 0206 	strd	r0, r2, [sp, #24]
 8013002:	f014 0f80 	tst.w	r4, #128	; 0x80
 8013006:	d110      	bne.n	801302a <_ZL6fmtintPcPjjxiiii+0x42>
 8013008:	eb15 71e6 	adds.w	r1, r5, r6, asr #31
 801300c:	ea81 75e6 	eor.w	r5, r1, r6, asr #31
 8013010:	eb46 71e6 	adc.w	r1, r6, r6, asr #31
 8013014:	2e00      	cmp	r6, #0
 8013016:	ea81 73e6 	eor.w	r3, r1, r6, asr #31
 801301a:	db08      	blt.n	801302e <_ZL6fmtintPcPjjxiiii+0x46>
 801301c:	07a1      	lsls	r1, r4, #30
 801301e:	bf5a      	itte	pl
 8013020:	f004 0104 	andpl.w	r1, r4, #4
 8013024:	00c8      	lslpl	r0, r1, #3
 8013026:	202b      	movmi	r0, #43	; 0x2b
 8013028:	e002      	b.n	8013030 <_ZL6fmtintPcPjjxiiii+0x48>
 801302a:	2000      	movs	r0, #0
 801302c:	e001      	b.n	8013032 <_ZL6fmtintPcPjjxiiii+0x4a>
 801302e:	202d      	movs	r0, #45	; 0x2d
 8013030:	461e      	mov	r6, r3
 8013032:	9005      	str	r0, [sp, #20]
 8013034:	f004 0020 	and.w	r0, r4, #32
 8013038:	f244 69ce 	movw	r9, #18126	; 0x46ce
 801303c:	9004      	str	r0, [sp, #16]
 801303e:	f014 0040 	ands.w	r0, r4, #64	; 0x40
 8013042:	f6c0 0902 	movt	r9, #2050	; 0x802
 8013046:	ea4f 74eb 	mov.w	r4, fp, asr #31
 801304a:	9001      	str	r0, [sp, #4]
 801304c:	f244 60b6 	movw	r0, #18102	; 0x46b6
 8013050:	f6c0 0002 	movt	r0, #2050	; 0x802
 8013054:	bf08      	it	eq
 8013056:	4681      	moveq	r9, r0
 8013058:	2001      	movs	r0, #1
 801305a:	e9cd 6502 	strd	r6, r5, [sp, #8]
 801305e:	4680      	mov	r8, r0
 8013060:	4628      	mov	r0, r5
 8013062:	4631      	mov	r1, r6
 8013064:	465a      	mov	r2, fp
 8013066:	4623      	mov	r3, r4
 8013068:	f7ed fe92 	bl	8000d90 <__aeabi_uldivmod>
 801306c:	f1a7 0147 	sub.w	r1, r7, #71	; 0x47
 8013070:	f819 0002 	ldrb.w	r0, [r9, r2]
 8013074:	4441      	add	r1, r8
 8013076:	f801 0c01 	strb.w	r0, [r1, #-1]
 801307a:	ebb5 000b 	subs.w	r0, r5, fp
 801307e:	eb76 70eb 	sbcs.w	r0, r6, fp, asr #31
 8013082:	d30c      	bcc.n	801309e <_ZL6fmtintPcPjjxiiii+0xb6>
 8013084:	4628      	mov	r0, r5
 8013086:	4631      	mov	r1, r6
 8013088:	465a      	mov	r2, fp
 801308a:	4623      	mov	r3, r4
 801308c:	f7ed fe80 	bl	8000d90 <__aeabi_uldivmod>
 8013090:	4605      	mov	r5, r0
 8013092:	460e      	mov	r6, r1
 8013094:	f108 0001 	add.w	r0, r8, #1
 8013098:	f1b8 0f2b 	cmp.w	r8, #43	; 0x2b
 801309c:	d3df      	bcc.n	801305e <_ZL6fmtintPcPjjxiiii+0x76>
 801309e:	69fb      	ldr	r3, [r7, #28]
 80130a0:	f04f 0e00 	mov.w	lr, #0
 80130a4:	469c      	mov	ip, r3
 80130a6:	ea5f 700c 	movs.w	r0, ip, lsl #28
 80130aa:	d517      	bpl.n	80130dc <_ZL6fmtintPcPjjxiiii+0xf4>
 80130ac:	e9dd 1002 	ldrd	r1, r0, [sp, #8]
 80130b0:	69bc      	ldr	r4, [r7, #24]
 80130b2:	f8dd 9018 	ldr.w	r9, [sp, #24]
 80130b6:	697b      	ldr	r3, [r7, #20]
 80130b8:	9a04      	ldr	r2, [sp, #16]
 80130ba:	4308      	orrs	r0, r1
 80130bc:	4621      	mov	r1, r4
 80130be:	d01d      	beq.n	80130fc <_ZL6fmtintPcPjjxiiii+0x114>
 80130c0:	f1bb 0f10 	cmp.w	fp, #16
 80130c4:	d010      	beq.n	80130e8 <_ZL6fmtintPcPjjxiiii+0x100>
 80130c6:	f1bb 0f08 	cmp.w	fp, #8
 80130ca:	d114      	bne.n	80130f6 <_ZL6fmtintPcPjjxiiii+0x10e>
 80130cc:	45a0      	cmp	r8, r4
 80130ce:	4621      	mov	r1, r4
 80130d0:	f04f 0e00 	mov.w	lr, #0
 80130d4:	bfa8      	it	ge
 80130d6:	f108 0101 	addge.w	r1, r8, #1
 80130da:	e00f      	b.n	80130fc <_ZL6fmtintPcPjjxiiii+0x114>
 80130dc:	69bc      	ldr	r4, [r7, #24]
 80130de:	f8dd 9018 	ldr.w	r9, [sp, #24]
 80130e2:	697b      	ldr	r3, [r7, #20]
 80130e4:	9a04      	ldr	r2, [sp, #16]
 80130e6:	e008      	b.n	80130fa <_ZL6fmtintPcPjjxiiii+0x112>
 80130e8:	9801      	ldr	r0, [sp, #4]
 80130ea:	2178      	movs	r1, #120	; 0x78
 80130ec:	f000 00fe 	and.w	r0, r0, #254	; 0xfe
 80130f0:	ea81 0e50 	eor.w	lr, r1, r0, lsr #1
 80130f4:	e001      	b.n	80130fa <_ZL6fmtintPcPjjxiiii+0x112>
 80130f6:	f04f 0e00 	mov.w	lr, #0
 80130fa:	4621      	mov	r1, r4
 80130fc:	f1a8 0001 	sub.w	r0, r8, #1
 8013100:	2600      	movs	r6, #0
 8013102:	2a00      	cmp	r2, #0
 8013104:	f04f 0b00 	mov.w	fp, #0
 8013108:	d015      	beq.n	8013136 <_ZL6fmtintPcPjjxiiii+0x14e>
 801310a:	f64a 22ab 	movw	r2, #43691	; 0xaaab
 801310e:	f6ca 22aa 	movt	r2, #43690	; 0xaaaa
 8013112:	fba8 2502 	umull	r2, r5, r8, r2
 8013116:	086a      	lsrs	r2, r5, #1
 8013118:	f245 5556 	movw	r5, #21846	; 0x5556
 801311c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013120:	f2c5 5555 	movt	r5, #21845	; 0x5555
 8013124:	ebb8 0202 	subs.w	r2, r8, r2
 8013128:	4642      	mov	r2, r8
 801312a:	bf08      	it	eq
 801312c:	4602      	moveq	r2, r0
 801312e:	fb52 f205 	smmul	r2, r2, r5
 8013132:	eb02 7bd2 	add.w	fp, r2, r2, lsr #31
 8013136:	9a05      	ldr	r2, [sp, #20]
 8013138:	eba1 050b 	sub.w	r5, r1, fp
 801313c:	eba5 0508 	sub.w	r5, r5, r8
 8013140:	2a00      	cmp	r2, #0
 8013142:	bf18      	it	ne
 8013144:	3b01      	subne	r3, #1
 8013146:	f1be 0f00 	cmp.w	lr, #0
 801314a:	bf18      	it	ne
 801314c:	3b02      	subne	r3, #2
 801314e:	4541      	cmp	r1, r8
 8013150:	bfb8      	it	lt
 8013152:	4641      	movlt	r1, r8
 8013154:	1a59      	subs	r1, r3, r1
 8013156:	eba1 010b 	sub.w	r1, r1, fp
 801315a:	2900      	cmp	r1, #0
 801315c:	bfd8      	it	le
 801315e:	4631      	movle	r1, r6
 8013160:	2d00      	cmp	r5, #0
 8013162:	bfc8      	it	gt
 8013164:	462e      	movgt	r6, r5
 8013166:	ea5f 75cc 	movs.w	r5, ip, lsl #31
 801316a:	f040 80af 	bne.w	80132cc <_ZL6fmtintPcPjjxiiii+0x2e4>
 801316e:	1c65      	adds	r5, r4, #1
 8013170:	4663      	mov	r3, ip
 8013172:	f04f 0400 	mov.w	r4, #0
 8013176:	f04f 0c00 	mov.w	ip, #0
 801317a:	bf08      	it	eq
 801317c:	2401      	moveq	r4, #1
 801317e:	f003 0510 	and.w	r5, r3, #16
 8013182:	ea04 1515 	and.w	r5, r4, r5, lsr #4
 8013186:	2d00      	cmp	r5, #0
 8013188:	bf18      	it	ne
 801318a:	440e      	addne	r6, r1
 801318c:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8013190:	f000 809f 	beq.w	80132d2 <_ZL6fmtintPcPjjxiiii+0x2ea>
 8013194:	b15a      	cbz	r2, 80131ae <_ZL6fmtintPcPjjxiiii+0x1c6>
 8013196:	f8da 1000 	ldr.w	r1, [sl]
 801319a:	1c4b      	adds	r3, r1, #1
 801319c:	4543      	cmp	r3, r8
 801319e:	bf3c      	itt	cc
 80131a0:	f809 2001 	strbcc.w	r2, [r9, r1]
 80131a4:	f8da 1000 	ldrcc.w	r1, [sl]
 80131a8:	3101      	adds	r1, #1
 80131aa:	f8ca 1000 	str.w	r1, [sl]
 80131ae:	f1be 0f00 	cmp.w	lr, #0
 80131b2:	d016      	beq.n	80131e2 <_ZL6fmtintPcPjjxiiii+0x1fa>
 80131b4:	f8da 1000 	ldr.w	r1, [sl]
 80131b8:	1c4b      	adds	r3, r1, #1
 80131ba:	4543      	cmp	r3, r8
 80131bc:	bf3e      	ittt	cc
 80131be:	2330      	movcc	r3, #48	; 0x30
 80131c0:	f809 3001 	strbcc.w	r3, [r9, r1]
 80131c4:	f8da 1000 	ldrcc.w	r1, [sl]
 80131c8:	1c4c      	adds	r4, r1, #1
 80131ca:	3102      	adds	r1, #2
 80131cc:	f8ca 4000 	str.w	r4, [sl]
 80131d0:	4541      	cmp	r1, r8
 80131d2:	bf3c      	itt	cc
 80131d4:	f809 e004 	strbcc.w	lr, [r9, r4]
 80131d8:	f8da 4000 	ldrcc.w	r4, [sl]
 80131dc:	1c61      	adds	r1, r4, #1
 80131de:	f8ca 1000 	str.w	r1, [sl]
 80131e2:	2e01      	cmp	r6, #1
 80131e4:	db11      	blt.n	801320a <_ZL6fmtintPcPjjxiiii+0x222>
 80131e6:	f8da 3000 	ldr.w	r3, [sl]
 80131ea:	1c71      	adds	r1, r6, #1
 80131ec:	2630      	movs	r6, #48	; 0x30
 80131ee:	1c5d      	adds	r5, r3, #1
 80131f0:	3901      	subs	r1, #1
 80131f2:	4545      	cmp	r5, r8
 80131f4:	bf3c      	itt	cc
 80131f6:	f809 6003 	strbcc.w	r6, [r9, r3]
 80131fa:	f8da 3000 	ldrcc.w	r3, [sl]
 80131fe:	2901      	cmp	r1, #1
 8013200:	f103 0301 	add.w	r3, r3, #1
 8013204:	f8ca 3000 	str.w	r3, [sl]
 8013208:	dcf1      	bgt.n	80131ee <_ZL6fmtintPcPjjxiiii+0x206>
 801320a:	2800      	cmp	r0, #0
 801320c:	db43      	blt.n	8013296 <_ZL6fmtintPcPjjxiiii+0x2ae>
 801320e:	f8da 3000 	ldr.w	r3, [sl]
 8013212:	f1bb 0f00 	cmp.w	fp, #0
 8013216:	dd2c      	ble.n	8013272 <_ZL6fmtintPcPjjxiiii+0x28a>
 8013218:	f64a 21ab 	movw	r1, #43691	; 0xaaab
 801321c:	f04f 0e2c 	mov.w	lr, #44	; 0x2c
 8013220:	f6ca 21aa 	movt	r1, #43690	; 0xaaaa
 8013224:	1c5d      	adds	r5, r3, #1
 8013226:	1c46      	adds	r6, r0, #1
 8013228:	4545      	cmp	r5, r8
 801322a:	d206      	bcs.n	801323a <_ZL6fmtintPcPjjxiiii+0x252>
 801322c:	f1a7 0247 	sub.w	r2, r7, #71	; 0x47
 8013230:	5c15      	ldrb	r5, [r2, r0]
 8013232:	f809 5003 	strb.w	r5, [r9, r3]
 8013236:	f8da 3000 	ldr.w	r3, [sl]
 801323a:	1c5c      	adds	r4, r3, #1
 801323c:	2e02      	cmp	r6, #2
 801323e:	f8ca 4000 	str.w	r4, [sl]
 8013242:	db11      	blt.n	8013268 <_ZL6fmtintPcPjjxiiii+0x280>
 8013244:	fba0 5201 	umull	r5, r2, r0, r1
 8013248:	0852      	lsrs	r2, r2, #1
 801324a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801324e:	1a82      	subs	r2, r0, r2
 8013250:	d10a      	bne.n	8013268 <_ZL6fmtintPcPjjxiiii+0x280>
 8013252:	1c9a      	adds	r2, r3, #2
 8013254:	4542      	cmp	r2, r8
 8013256:	bf3c      	itt	cc
 8013258:	f809 e004 	strbcc.w	lr, [r9, r4]
 801325c:	f8da 4000 	ldrcc.w	r4, [sl]
 8013260:	1c63      	adds	r3, r4, #1
 8013262:	f8ca 3000 	str.w	r3, [sl]
 8013266:	e000      	b.n	801326a <_ZL6fmtintPcPjjxiiii+0x282>
 8013268:	4623      	mov	r3, r4
 801326a:	3801      	subs	r0, #1
 801326c:	2e01      	cmp	r6, #1
 801326e:	dcd9      	bgt.n	8013224 <_ZL6fmtintPcPjjxiiii+0x23c>
 8013270:	e011      	b.n	8013296 <_ZL6fmtintPcPjjxiiii+0x2ae>
 8013272:	1c59      	adds	r1, r3, #1
 8013274:	4541      	cmp	r1, r8
 8013276:	d206      	bcs.n	8013286 <_ZL6fmtintPcPjjxiiii+0x29e>
 8013278:	f1a7 0147 	sub.w	r1, r7, #71	; 0x47
 801327c:	5c09      	ldrb	r1, [r1, r0]
 801327e:	f809 1003 	strb.w	r1, [r9, r3]
 8013282:	f8da 3000 	ldr.w	r3, [sl]
 8013286:	1e41      	subs	r1, r0, #1
 8013288:	3001      	adds	r0, #1
 801328a:	3301      	adds	r3, #1
 801328c:	2801      	cmp	r0, #1
 801328e:	4608      	mov	r0, r1
 8013290:	f8ca 3000 	str.w	r3, [sl]
 8013294:	dced      	bgt.n	8013272 <_ZL6fmtintPcPjjxiiii+0x28a>
 8013296:	f1bc 3fff 	cmp.w	ip, #4294967295	; 0xffffffff
 801329a:	dc13      	bgt.n	80132c4 <_ZL6fmtintPcPjjxiiii+0x2dc>
 801329c:	f8da 1000 	ldr.w	r1, [sl]
 80132a0:	f1ac 0001 	sub.w	r0, ip, #1
 80132a4:	2220      	movs	r2, #32
 80132a6:	1c4b      	adds	r3, r1, #1
 80132a8:	3001      	adds	r0, #1
 80132aa:	4543      	cmp	r3, r8
 80132ac:	bf3c      	itt	cc
 80132ae:	f809 2001 	strbcc.w	r2, [r9, r1]
 80132b2:	f8da 1000 	ldrcc.w	r1, [sl]
 80132b6:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 80132ba:	f101 0101 	add.w	r1, r1, #1
 80132be:	f8ca 1000 	str.w	r1, [sl]
 80132c2:	dbf0      	blt.n	80132a6 <_ZL6fmtintPcPjjxiiii+0x2be>
 80132c4:	b013      	add	sp, #76	; 0x4c
 80132c6:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 80132ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80132cc:	f8dd 801c 	ldr.w	r8, [sp, #28]
 80132d0:	4249      	negs	r1, r1
 80132d2:	2901      	cmp	r1, #1
 80132d4:	db0f      	blt.n	80132f6 <_ZL6fmtintPcPjjxiiii+0x30e>
 80132d6:	f8da 4000 	ldr.w	r4, [sl]
 80132da:	2520      	movs	r5, #32
 80132dc:	1c63      	adds	r3, r4, #1
 80132de:	4543      	cmp	r3, r8
 80132e0:	bf3c      	itt	cc
 80132e2:	f809 5004 	strbcc.w	r5, [r9, r4]
 80132e6:	f8da 4000 	ldrcc.w	r4, [sl]
 80132ea:	3901      	subs	r1, #1
 80132ec:	f104 0401 	add.w	r4, r4, #1
 80132f0:	f8ca 4000 	str.w	r4, [sl]
 80132f4:	dcf2      	bgt.n	80132dc <_ZL6fmtintPcPjjxiiii+0x2f4>
 80132f6:	468c      	mov	ip, r1
 80132f8:	2a00      	cmp	r2, #0
 80132fa:	f47f af4c 	bne.w	8013196 <_ZL6fmtintPcPjjxiiii+0x1ae>
 80132fe:	e756      	b.n	80131ae <_ZL6fmtintPcPjjxiiii+0x1c6>

08013300 <DeinitMemory>:
 8013300:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013302:	af03      	add	r7, sp, #12
 8013304:	f84d 8d04 	str.w	r8, [sp, #-4]!
 8013308:	4680      	mov	r8, r0
 801330a:	f000 f8b9 	bl	8013480 <GarbageCollect>
 801330e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8013312:	e9d5 1000 	ldrd	r1, r0, [r5]
 8013316:	4288      	cmp	r0, r1
 8013318:	f040 809d 	bne.w	8013456 <DeinitMemory+0x156>
 801331c:	b120      	cbz	r0, 8013328 <DeinitMemory+0x28>
 801331e:	4288      	cmp	r0, r1
 8013320:	bf18      	it	ne
 8013322:	6068      	strne	r0, [r5, #4]
 8013324:	f008 fb9a 	bl	801ba5c <free>
 8013328:	4628      	mov	r0, r5
 801332a:	f008 fb97 	bl	801ba5c <free>
 801332e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8013332:	6828      	ldr	r0, [r5, #0]
 8013334:	b160      	cbz	r0, 8013350 <DeinitMemory+0x50>
 8013336:	6869      	ldr	r1, [r5, #4]
 8013338:	4281      	cmp	r1, r0
 801333a:	d007      	beq.n	801334c <DeinitMemory+0x4c>
 801333c:	1f0a      	subs	r2, r1, #4
 801333e:	f06f 0303 	mvn.w	r3, #3
 8013342:	1a12      	subs	r2, r2, r0
 8013344:	ea23 0202 	bic.w	r2, r3, r2
 8013348:	4411      	add	r1, r2
 801334a:	6069      	str	r1, [r5, #4]
 801334c:	f008 fb86 	bl	801ba5c <free>
 8013350:	4628      	mov	r0, r5
 8013352:	f008 fb83 	bl	801ba5c <free>
 8013356:	f8d8 5000 	ldr.w	r5, [r8]
 801335a:	e9d5 6401 	ldrd	r6, r4, [r5, #4]
 801335e:	42b4      	cmp	r4, r6
 8013360:	d020      	beq.n	80133a4 <DeinitMemory+0xa4>
 8013362:	46ac      	mov	ip, r5
 8013364:	692b      	ldr	r3, [r5, #16]
 8013366:	f85c 2f14 	ldr.w	r2, [ip, #20]!
 801336a:	0a98      	lsrs	r0, r3, #10
 801336c:	441a      	add	r2, r3
 801336e:	eb06 0180 	add.w	r1, r6, r0, lsl #2
 8013372:	f36f 239f 	bfc	r3, #10, #22
 8013376:	0a90      	lsrs	r0, r2, #10
 8013378:	f36f 229f 	bfc	r2, #10, #22
 801337c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8013380:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8013384:	6808      	ldr	r0, [r1, #0]
 8013386:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 801338a:	429a      	cmp	r2, r3
 801338c:	d00c      	beq.n	80133a8 <DeinitMemory+0xa8>
 801338e:	6808      	ldr	r0, [r1, #0]
 8013390:	3304      	adds	r3, #4
 8013392:	1a18      	subs	r0, r3, r0
 8013394:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 8013398:	bf08      	it	eq
 801339a:	f851 3f04 	ldreq.w	r3, [r1, #4]!
 801339e:	429a      	cmp	r2, r3
 80133a0:	d1f5      	bne.n	801338e <DeinitMemory+0x8e>
 80133a2:	e001      	b.n	80133a8 <DeinitMemory+0xa8>
 80133a4:	f105 0c14 	add.w	ip, r5, #20
 80133a8:	2000      	movs	r0, #0
 80133aa:	f8cc 0000 	str.w	r0, [ip]
 80133ae:	1ba0      	subs	r0, r4, r6
 80133b0:	1080      	asrs	r0, r0, #2
 80133b2:	2803      	cmp	r0, #3
 80133b4:	d30b      	bcc.n	80133ce <DeinitMemory+0xce>
 80133b6:	6830      	ldr	r0, [r6, #0]
 80133b8:	b118      	cbz	r0, 80133c2 <DeinitMemory+0xc2>
 80133ba:	f008 fb4f 	bl	801ba5c <free>
 80133be:	e9d5 6401 	ldrd	r6, r4, [r5, #4]
 80133c2:	3604      	adds	r6, #4
 80133c4:	1ba0      	subs	r0, r4, r6
 80133c6:	606e      	str	r6, [r5, #4]
 80133c8:	1080      	asrs	r0, r0, #2
 80133ca:	2802      	cmp	r0, #2
 80133cc:	d8f3      	bhi.n	80133b6 <DeinitMemory+0xb6>
 80133ce:	2802      	cmp	r0, #2
 80133d0:	d004      	beq.n	80133dc <DeinitMemory+0xdc>
 80133d2:	2801      	cmp	r0, #1
 80133d4:	d105      	bne.n	80133e2 <DeinitMemory+0xe2>
 80133d6:	f44f 7000 	mov.w	r0, #512	; 0x200
 80133da:	e001      	b.n	80133e0 <DeinitMemory+0xe0>
 80133dc:	f44f 6080 	mov.w	r0, #1024	; 0x400
 80133e0:	6128      	str	r0, [r5, #16]
 80133e2:	42a6      	cmp	r6, r4
 80133e4:	d013      	beq.n	801340e <DeinitMemory+0x10e>
 80133e6:	6830      	ldr	r0, [r6, #0]
 80133e8:	2800      	cmp	r0, #0
 80133ea:	bf18      	it	ne
 80133ec:	f008 fb36 	blne	801ba5c <free>
 80133f0:	3604      	adds	r6, #4
 80133f2:	42b4      	cmp	r4, r6
 80133f4:	d1f7      	bne.n	80133e6 <DeinitMemory+0xe6>
 80133f6:	e9d5 1001 	ldrd	r1, r0, [r5, #4]
 80133fa:	4288      	cmp	r0, r1
 80133fc:	d007      	beq.n	801340e <DeinitMemory+0x10e>
 80133fe:	1f02      	subs	r2, r0, #4
 8013400:	1a51      	subs	r1, r2, r1
 8013402:	f06f 0203 	mvn.w	r2, #3
 8013406:	ea22 0101 	bic.w	r1, r2, r1
 801340a:	4408      	add	r0, r1
 801340c:	60a8      	str	r0, [r5, #8]
 801340e:	6828      	ldr	r0, [r5, #0]
 8013410:	2800      	cmp	r0, #0
 8013412:	bf18      	it	ne
 8013414:	f008 fb22 	blne	801ba5c <free>
 8013418:	4628      	mov	r0, r5
 801341a:	f008 fb1f 	bl	801ba5c <free>
 801341e:	f240 106c 	movw	r0, #364	; 0x16c
 8013422:	2400      	movs	r4, #0
 8013424:	f8c8 4000 	str.w	r4, [r8]
 8013428:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801342c:	6801      	ldr	r1, [r0, #0]
 801342e:	3901      	subs	r1, #1
 8013430:	6001      	str	r1, [r0, #0]
 8013432:	d105      	bne.n	8013440 <DeinitMemory+0x140>
 8013434:	f240 1074 	movw	r0, #372	; 0x174
 8013438:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801343c:	6800      	ldr	r0, [r0, #0]
 801343e:	b9a0      	cbnz	r0, 801346a <DeinitMemory+0x16a>
 8013440:	4640      	mov	r0, r8
 8013442:	f008 fb0b 	bl	801ba5c <free>
 8013446:	f240 1068 	movw	r0, #360	; 0x168
 801344a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801344e:	6004      	str	r4, [r0, #0]
 8013450:	f85d 8b04 	ldr.w	r8, [sp], #4
 8013454:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013456:	f244 60df 	movw	r0, #18143	; 0x46df
 801345a:	f244 7133 	movw	r1, #18227	; 0x4733
 801345e:	f6c0 0002 	movt	r0, #2050	; 0x802
 8013462:	f6c0 0102 	movt	r1, #2050	; 0x802
 8013466:	f7fe fc7d 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>
 801346a:	f244 705f 	movw	r0, #18271	; 0x475f
 801346e:	f244 71b3 	movw	r1, #18355	; 0x47b3
 8013472:	f6c0 0002 	movt	r0, #2050	; 0x802
 8013476:	f6c0 0102 	movt	r1, #2050	; 0x802
 801347a:	f7fe fc73 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>
	...

08013480 <GarbageCollect>:
 8013480:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013482:	af03      	add	r7, sp, #12
 8013484:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 8013488:	b083      	sub	sp, #12
 801348a:	f240 1b68 	movw	fp, #360	; 0x168
 801348e:	f2c2 0b00 	movt	fp, #8192	; 0x2000
 8013492:	f8db a000 	ldr.w	sl, [fp]
 8013496:	f89a 0014 	ldrb.w	r0, [sl, #20]
 801349a:	2800      	cmp	r0, #0
 801349c:	f040 81da 	bne.w	8013854 <GarbageCollect+0x3d4>
 80134a0:	2001      	movs	r0, #1
 80134a2:	f88a 0014 	strb.w	r0, [sl, #20]
 80134a6:	f8da 5004 	ldr.w	r5, [sl, #4]
 80134aa:	e9d5 0800 	ldrd	r0, r8, [r5]
 80134ae:	4580      	cmp	r8, r0
 80134b0:	f000 817d 	beq.w	80137ae <GarbageCollect+0x32e>
 80134b4:	f240 1474 	movw	r4, #372	; 0x174
 80134b8:	f8cd a004 	str.w	sl, [sp, #4]
 80134bc:	f2c2 0400 	movt	r4, #8192	; 0x2000
 80134c0:	f8d5 9000 	ldr.w	r9, [r5]
 80134c4:	45c1      	cmp	r9, r8
 80134c6:	f000 80f3 	beq.w	80136b0 <GarbageCollect+0x230>
 80134ca:	f8cd 8008 	str.w	r8, [sp, #8]
 80134ce:	f8d9 6000 	ldr.w	r6, [r9]
 80134d2:	f016 0f01 	tst.w	r6, #1
 80134d6:	f040 80e6 	bne.w	80136a6 <GarbageCollect+0x226>
 80134da:	e9d6 0200 	ldrd	r0, r2, [r6]
 80134de:	f002 0103 	and.w	r1, r2, #3
 80134e2:	2903      	cmp	r1, #3
 80134e4:	d114      	bne.n	8013510 <GarbageCollect+0x90>
 80134e6:	2804      	cmp	r0, #4
 80134e8:	d312      	bcc.n	8013510 <GarbageCollect+0x90>
 80134ea:	4630      	mov	r0, r6
 80134ec:	f000 f9c4 	bl	8013878 <_ZN12_GLOBAL__N_18MarkGrayILb1EEEvP15ContainerHeader>
 80134f0:	f8da 8008 	ldr.w	r8, [sl, #8]
 80134f4:	e9d8 5001 	ldrd	r5, r0, [r8, #4]
 80134f8:	4285      	cmp	r5, r0
 80134fa:	f000 8086 	beq.w	801360a <GarbageCollect+0x18a>
 80134fe:	602e      	str	r6, [r5, #0]
 8013500:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8013504:	3004      	adds	r0, #4
 8013506:	f8c8 0004 	str.w	r0, [r8, #4]
 801350a:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801350e:	e0ca      	b.n	80136a6 <GarbageCollect+0x226>
 8013510:	f022 0208 	bic.w	r2, r2, #8
 8013514:	2900      	cmp	r1, #0
 8013516:	6072      	str	r2, [r6, #4]
 8013518:	f040 80c5 	bne.w	80136a6 <GarbageCollect+0x226>
 801351c:	2803      	cmp	r0, #3
 801351e:	f200 80c2 	bhi.w	80136a6 <GarbageCollect+0x226>
 8013522:	f8da 5000 	ldr.w	r5, [sl]
 8013526:	f046 0801 	orr.w	r8, r6, #1
 801352a:	6928      	ldr	r0, [r5, #16]
 801352c:	b918      	cbnz	r0, 8013536 <GarbageCollect+0xb6>
 801352e:	4628      	mov	r0, r5
 8013530:	f000 fa26 	bl	8013980 <_ZNSt3__15dequeIP15ContainerHeader14KonanAllocatorIS2_EE20__add_front_capacityEv>
 8013534:	6928      	ldr	r0, [r5, #16]
 8013536:	e9d5 1601 	ldrd	r1, r6, [r5, #4]
 801353a:	0a82      	lsrs	r2, r0, #10
 801353c:	4603      	mov	r3, r0
 801353e:	f36f 239f 	bfc	r3, #10, #22
 8013542:	f851 4022 	ldr.w	r4, [r1, r2, lsl #2]
 8013546:	428e      	cmp	r6, r1
 8013548:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 801354c:	bf08      	it	eq
 801354e:	2300      	moveq	r3, #0
 8013550:	42a3      	cmp	r3, r4
 8013552:	d105      	bne.n	8013560 <GarbageCollect+0xe0>
 8013554:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8013558:	f851 1c04 	ldr.w	r1, [r1, #-4]
 801355c:	f501 5380 	add.w	r3, r1, #4096	; 0x1000
 8013560:	3801      	subs	r0, #1
 8013562:	f843 8c04 	str.w	r8, [r3, #-4]
 8013566:	f240 1474 	movw	r4, #372	; 0x174
 801356a:	6128      	str	r0, [r5, #16]
 801356c:	f2c2 0400 	movt	r4, #8192	; 0x2000
 8013570:	6968      	ldr	r0, [r5, #20]
 8013572:	3001      	adds	r0, #1
 8013574:	6168      	str	r0, [r5, #20]
 8013576:	f89a 0014 	ldrb.w	r0, [sl, #20]
 801357a:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801357e:	2800      	cmp	r0, #0
 8013580:	f040 8091 	bne.w	80136a6 <GarbageCollect+0x226>
 8013584:	f8da 6000 	ldr.w	r6, [sl]
 8013588:	4630      	mov	r0, r6
 801358a:	f850 1f14 	ldr.w	r1, [r0, #20]!
 801358e:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8013592:	f240 8088 	bls.w	80136a6 <GarbageCollect+0x226>
 8013596:	f8db 2000 	ldr.w	r2, [fp]
 801359a:	6812      	ldr	r2, [r2, #0]
 801359c:	6853      	ldr	r3, [r2, #4]
 801359e:	e9d2 5204 	ldrd	r5, r2, [r2, #16]
 80135a2:	442a      	add	r2, r5
 80135a4:	3a01      	subs	r2, #1
 80135a6:	0a95      	lsrs	r5, r2, #10
 80135a8:	f36f 229f 	bfc	r2, #10, #22
 80135ac:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 80135b0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80135b4:	6932      	ldr	r2, [r6, #16]
 80135b6:	1e4b      	subs	r3, r1, #1
 80135b8:	6003      	str	r3, [r0, #0]
 80135ba:	f1c1 0001 	rsb	r0, r1, #1
 80135be:	1a80      	subs	r0, r0, r2
 80135c0:	e9d6 2101 	ldrd	r2, r1, [r6, #4]
 80135c4:	1a8a      	subs	r2, r1, r2
 80135c6:	eb00 2202 	add.w	r2, r0, r2, lsl #8
 80135ca:	bf18      	it	ne
 80135cc:	1e50      	subne	r0, r2, #1
 80135ce:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 80135d2:	d307      	bcc.n	80135e4 <GarbageCollect+0x164>
 80135d4:	f851 0c04 	ldr.w	r0, [r1, #-4]
 80135d8:	b110      	cbz	r0, 80135e0 <GarbageCollect+0x160>
 80135da:	f008 fa3f 	bl	801ba5c <free>
 80135de:	68b1      	ldr	r1, [r6, #8]
 80135e0:	1f08      	subs	r0, r1, #4
 80135e2:	60b0      	str	r0, [r6, #8]
 80135e4:	f015 0f01 	tst.w	r5, #1
 80135e8:	bf18      	it	ne
 80135ea:	f025 0501 	bicne.w	r5, r5, #1
 80135ee:	4628      	mov	r0, r5
 80135f0:	f008 fa34 	bl	801ba5c <free>
 80135f4:	6820      	ldr	r0, [r4, #0]
 80135f6:	3801      	subs	r0, #1
 80135f8:	6020      	str	r0, [r4, #0]
 80135fa:	f8da 6000 	ldr.w	r6, [sl]
 80135fe:	4630      	mov	r0, r6
 8013600:	f850 1f14 	ldr.w	r1, [r0, #20]!
 8013604:	2900      	cmp	r1, #0
 8013606:	d1c6      	bne.n	8013596 <GarbageCollect+0x116>
 8013608:	e04d      	b.n	80136a6 <GarbageCollect+0x226>
 801360a:	f8d8 b000 	ldr.w	fp, [r8]
 801360e:	f64f 73fe 	movw	r3, #65534	; 0xfffe
 8013612:	f6c3 73ff 	movt	r3, #16383	; 0x3fff
 8013616:	eba0 000b 	sub.w	r0, r0, fp
 801361a:	eba5 010b 	sub.w	r1, r5, fp
 801361e:	1082      	asrs	r2, r0, #2
 8013620:	108c      	asrs	r4, r1, #2
 8013622:	429a      	cmp	r2, r3
 8013624:	d80e      	bhi.n	8013644 <GarbageCollect+0x1c4>
 8013626:	2201      	movs	r2, #1
 8013628:	ea4f 0a60 	mov.w	sl, r0, asr #1
 801362c:	eb02 01a1 	add.w	r1, r2, r1, asr #2
 8013630:	458a      	cmp	sl, r1
 8013632:	bf38      	it	cc
 8013634:	468a      	movcc	sl, r1
 8013636:	f1ba 0f00 	cmp.w	sl, #0
 801363a:	d105      	bne.n	8013648 <GarbageCollect+0x1c8>
 801363c:	f04f 0a00 	mov.w	sl, #0
 8013640:	2000      	movs	r0, #0
 8013642:	e006      	b.n	8013652 <GarbageCollect+0x1d2>
 8013644:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8013648:	ea4f 018a 	mov.w	r1, sl, lsl #2
 801364c:	2001      	movs	r0, #1
 801364e:	f007 ff61 	bl	801b514 <calloc>
 8013652:	eb00 0284 	add.w	r2, r0, r4, lsl #2
 8013656:	eb00 018a 	add.w	r1, r0, sl, lsl #2
 801365a:	455d      	cmp	r5, fp
 801365c:	4610      	mov	r0, r2
 801365e:	f840 6b04 	str.w	r6, [r0], #4
 8013662:	d00b      	beq.n	801367c <GarbageCollect+0x1fc>
 8013664:	f8dd a004 	ldr.w	sl, [sp, #4]
 8013668:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 801366c:	f842 3c04 	str.w	r3, [r2, #-4]
 8013670:	3a04      	subs	r2, #4
 8013672:	45ab      	cmp	fp, r5
 8013674:	d1f8      	bne.n	8013668 <GarbageCollect+0x1e8>
 8013676:	f8d8 5000 	ldr.w	r5, [r8]
 801367a:	e001      	b.n	8013680 <GarbageCollect+0x200>
 801367c:	f8dd a004 	ldr.w	sl, [sp, #4]
 8013680:	e9c8 2000 	strd	r2, r0, [r8]
 8013684:	f8c8 1008 	str.w	r1, [r8, #8]
 8013688:	f240 1474 	movw	r4, #372	; 0x174
 801368c:	f240 1b68 	movw	fp, #360	; 0x168
 8013690:	2d00      	cmp	r5, #0
 8013692:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8013696:	f2c2 0400 	movt	r4, #8192	; 0x2000
 801369a:	f2c2 0b00 	movt	fp, #8192	; 0x2000
 801369e:	d002      	beq.n	80136a6 <GarbageCollect+0x226>
 80136a0:	4628      	mov	r0, r5
 80136a2:	f008 f9db 	bl	801ba5c <free>
 80136a6:	f109 0904 	add.w	r9, r9, #4
 80136aa:	45c1      	cmp	r9, r8
 80136ac:	f47f af0f 	bne.w	80134ce <GarbageCollect+0x4e>
 80136b0:	f8da 0008 	ldr.w	r0, [sl, #8]
 80136b4:	e9d0 5600 	ldrd	r5, r6, [r0]
 80136b8:	42b5      	cmp	r5, r6
 80136ba:	d016      	beq.n	80136ea <GarbageCollect+0x26a>
 80136bc:	f855 0b04 	ldr.w	r0, [r5], #4
 80136c0:	f000 fa55 	bl	8013b6e <_ZN12_GLOBAL__N_14ScanEP15ContainerHeader>
 80136c4:	42ae      	cmp	r6, r5
 80136c6:	d1f9      	bne.n	80136bc <GarbageCollect+0x23c>
 80136c8:	f8da 0008 	ldr.w	r0, [sl, #8]
 80136cc:	e9d0 5600 	ldrd	r5, r6, [r0]
 80136d0:	42b5      	cmp	r5, r6
 80136d2:	d00a      	beq.n	80136ea <GarbageCollect+0x26a>
 80136d4:	f855 1b04 	ldr.w	r1, [r5], #4
 80136d8:	6848      	ldr	r0, [r1, #4]
 80136da:	f020 0008 	bic.w	r0, r0, #8
 80136de:	6048      	str	r0, [r1, #4]
 80136e0:	4650      	mov	r0, sl
 80136e2:	f000 fad0 	bl	8013c86 <_ZN12_GLOBAL__N_112CollectWhiteEP11MemoryStateP15ContainerHeader>
 80136e6:	42ae      	cmp	r6, r5
 80136e8:	d1f4      	bne.n	80136d4 <GarbageCollect+0x254>
 80136ea:	f8da 5004 	ldr.w	r5, [sl, #4]
 80136ee:	e9d5 1000 	ldrd	r1, r0, [r5]
 80136f2:	4288      	cmp	r0, r1
 80136f4:	d007      	beq.n	8013706 <GarbageCollect+0x286>
 80136f6:	1f02      	subs	r2, r0, #4
 80136f8:	1a51      	subs	r1, r2, r1
 80136fa:	f06f 0203 	mvn.w	r2, #3
 80136fe:	ea22 0101 	bic.w	r1, r2, r1
 8013702:	4408      	add	r0, r1
 8013704:	6068      	str	r0, [r5, #4]
 8013706:	f8da 0008 	ldr.w	r0, [sl, #8]
 801370a:	e9d0 2100 	ldrd	r2, r1, [r0]
 801370e:	4291      	cmp	r1, r2
 8013710:	d007      	beq.n	8013722 <GarbageCollect+0x2a2>
 8013712:	1f0b      	subs	r3, r1, #4
 8013714:	1a9a      	subs	r2, r3, r2
 8013716:	f06f 0303 	mvn.w	r3, #3
 801371a:	ea23 0202 	bic.w	r2, r3, r2
 801371e:	4411      	add	r1, r2
 8013720:	6041      	str	r1, [r0, #4]
 8013722:	f8da 6000 	ldr.w	r6, [sl]
 8013726:	4630      	mov	r0, r6
 8013728:	f850 1f14 	ldr.w	r1, [r0, #20]!
 801372c:	b3d1      	cbz	r1, 80137a4 <GarbageCollect+0x324>
 801372e:	f8db 2000 	ldr.w	r2, [fp]
 8013732:	6812      	ldr	r2, [r2, #0]
 8013734:	6853      	ldr	r3, [r2, #4]
 8013736:	e9d2 5204 	ldrd	r5, r2, [r2, #16]
 801373a:	442a      	add	r2, r5
 801373c:	3a01      	subs	r2, #1
 801373e:	0a95      	lsrs	r5, r2, #10
 8013740:	f36f 229f 	bfc	r2, #10, #22
 8013744:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8013748:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801374c:	6932      	ldr	r2, [r6, #16]
 801374e:	1e4b      	subs	r3, r1, #1
 8013750:	6003      	str	r3, [r0, #0]
 8013752:	f1c1 0001 	rsb	r0, r1, #1
 8013756:	1a80      	subs	r0, r0, r2
 8013758:	e9d6 2101 	ldrd	r2, r1, [r6, #4]
 801375c:	1a8a      	subs	r2, r1, r2
 801375e:	eb00 2202 	add.w	r2, r0, r2, lsl #8
 8013762:	bf18      	it	ne
 8013764:	1e50      	subne	r0, r2, #1
 8013766:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 801376a:	d307      	bcc.n	801377c <GarbageCollect+0x2fc>
 801376c:	f851 0c04 	ldr.w	r0, [r1, #-4]
 8013770:	b110      	cbz	r0, 8013778 <GarbageCollect+0x2f8>
 8013772:	f008 f973 	bl	801ba5c <free>
 8013776:	68b1      	ldr	r1, [r6, #8]
 8013778:	1f08      	subs	r0, r1, #4
 801377a:	60b0      	str	r0, [r6, #8]
 801377c:	f015 0f01 	tst.w	r5, #1
 8013780:	bf18      	it	ne
 8013782:	f025 0501 	bicne.w	r5, r5, #1
 8013786:	4628      	mov	r0, r5
 8013788:	f008 f968 	bl	801ba5c <free>
 801378c:	6820      	ldr	r0, [r4, #0]
 801378e:	3801      	subs	r0, #1
 8013790:	6020      	str	r0, [r4, #0]
 8013792:	f8da 6000 	ldr.w	r6, [sl]
 8013796:	4630      	mov	r0, r6
 8013798:	f850 1f14 	ldr.w	r1, [r0, #20]!
 801379c:	2900      	cmp	r1, #0
 801379e:	d1c6      	bne.n	801372e <GarbageCollect+0x2ae>
 80137a0:	f8da 5004 	ldr.w	r5, [sl, #4]
 80137a4:	e9d5 0800 	ldrd	r0, r8, [r5]
 80137a8:	4580      	cmp	r8, r0
 80137aa:	f47f ae89 	bne.w	80134c0 <GarbageCollect+0x40>
 80137ae:	4656      	mov	r6, sl
 80137b0:	4644      	mov	r4, r8
 80137b2:	f04f 0800 	mov.w	r8, #0
 80137b6:	f856 0f18 	ldr.w	r0, [r6, #24]!
 80137ba:	6871      	ldr	r1, [r6, #4]
 80137bc:	f1d0 0001 	rsbs	r0, r0, #1
 80137c0:	eb68 0101 	sbc.w	r1, r8, r1
 80137c4:	f7ec ffae 	bl	8000724 <__aeabi_ul2d>
 80137c8:	ed9f 0b27 	vldr	d0, [pc, #156]	; 8013868 <GarbageCollect+0x3e8>
 80137cc:	4602      	mov	r2, r0
 80137ce:	460b      	mov	r3, r1
 80137d0:	ec51 0b10 	vmov	r0, r1, d0
 80137d4:	f7ed f906 	bl	80009e4 <__aeabi_ddiv>
 80137d8:	ed9f 0b25 	vldr	d0, [pc, #148]	; 8013870 <GarbageCollect+0x3f0>
 80137dc:	f806 8c04 	strb.w	r8, [r6, #-4]
 80137e0:	ec53 2b10 	vmov	r2, r3, d0
 80137e4:	f7ed fa64 	bl	8000cb0 <__aeabi_dcmpgt>
 80137e8:	b370      	cbz	r0, 8013848 <GarbageCollect+0x3c8>
 80137ea:	f8da 0010 	ldr.w	r0, [sl, #16]
 80137ee:	2101      	movs	r1, #1
 80137f0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80137f4:	eb01 0950 	add.w	r9, r1, r0, lsr #1
 80137f8:	ebb8 5f19 	cmp.w	r8, r9, lsr #20
 80137fc:	d124      	bne.n	8013848 <GarbageCollect+0x3c8>
 80137fe:	f8ca 9010 	str.w	r9, [sl, #16]
 8013802:	0840      	lsrs	r0, r0, #1
 8013804:	68a9      	ldr	r1, [r5, #8]
 8013806:	1b09      	subs	r1, r1, r4
 8013808:	1089      	asrs	r1, r1, #2
 801380a:	4281      	cmp	r1, r0
 801380c:	d81c      	bhi.n	8013848 <GarbageCollect+0x3c8>
 801380e:	ea4f 0189 	mov.w	r1, r9, lsl #2
 8013812:	2001      	movs	r0, #1
 8013814:	f007 fe7e 	bl	801b514 <calloc>
 8013818:	4601      	mov	r1, r0
 801381a:	e9d5 0400 	ldrd	r0, r4, [r5]
 801381e:	eb01 0c89 	add.w	ip, r1, r9, lsl #2
 8013822:	460b      	mov	r3, r1
 8013824:	4284      	cmp	r4, r0
 8013826:	d007      	beq.n	8013838 <GarbageCollect+0x3b8>
 8013828:	f854 2d04 	ldr.w	r2, [r4, #-4]!
 801382c:	f843 2c04 	str.w	r2, [r3, #-4]
 8013830:	3b04      	subs	r3, #4
 8013832:	42a0      	cmp	r0, r4
 8013834:	d1f8      	bne.n	8013828 <GarbageCollect+0x3a8>
 8013836:	6828      	ldr	r0, [r5, #0]
 8013838:	2800      	cmp	r0, #0
 801383a:	e9c5 3100 	strd	r3, r1, [r5]
 801383e:	f8c5 c008 	str.w	ip, [r5, #8]
 8013842:	bf18      	it	ne
 8013844:	f008 f90a 	blne	801ba5c <free>
 8013848:	e9c6 8800 	strd	r8, r8, [r6]
 801384c:	b003      	add	sp, #12
 801384e:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 8013852:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013854:	f244 70c6 	movw	r0, #18374	; 0x47c6
 8013858:	f644 011a 	movw	r1, #18458	; 0x481a
 801385c:	f6c0 0002 	movt	r0, #2050	; 0x802
 8013860:	f6c0 0102 	movt	r1, #2050	; 0x802
 8013864:	f7fe fa7e 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>
	...
 8013874:	3fe00000 	.word	0x3fe00000

08013878 <_ZN12_GLOBAL__N_18MarkGrayILb1EEEvP15ContainerHeader>:
 8013878:	b5f0      	push	{r4, r5, r6, r7, lr}
 801387a:	af03      	add	r7, sp, #12
 801387c:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 8013880:	b081      	sub	sp, #4
 8013882:	4680      	mov	r8, r0
 8013884:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8013888:	f000 0103 	and.w	r1, r0, #3
 801388c:	2901      	cmp	r1, #1
 801388e:	d069      	beq.n	8013964 <_ZN12_GLOBAL__N_18MarkGrayILb1EEEvP15ContainerHeader+0xec>
 8013890:	2101      	movs	r1, #1
 8013892:	2810      	cmp	r0, #16
 8013894:	f361 0001 	bfi	r0, r1, #0, #2
 8013898:	f8c8 0004 	str.w	r0, [r8, #4]
 801389c:	d362      	bcc.n	8013964 <_ZN12_GLOBAL__N_18MarkGrayILb1EEEvP15ContainerHeader+0xec>
 801389e:	f243 2bcc 	movw	fp, #13004	; 0x32cc
 80138a2:	f108 0508 	add.w	r5, r8, #8
 80138a6:	f04f 0a00 	mov.w	sl, #0
 80138aa:	f2c2 0b00 	movt	fp, #8192	; 0x2000
 80138ae:	682e      	ldr	r6, [r5, #0]
 80138b0:	6a31      	ldr	r1, [r6, #32]
 80138b2:	2901      	cmp	r1, #1
 80138b4:	db1d      	blt.n	80138f2 <_ZN12_GLOBAL__N_18MarkGrayILb1EEEvP15ContainerHeader+0x7a>
 80138b6:	f105 0408 	add.w	r4, r5, #8
 80138ba:	f04f 0900 	mov.w	r9, #0
 80138be:	69f0      	ldr	r0, [r6, #28]
 80138c0:	f850 0029 	ldr.w	r0, [r0, r9, lsl #2]
 80138c4:	5902      	ldr	r2, [r0, r4]
 80138c6:	b182      	cbz	r2, 80138ea <_ZN12_GLOBAL__N_18MarkGrayILb1EEEvP15ContainerHeader+0x72>
 80138c8:	6853      	ldr	r3, [r2, #4]
 80138ca:	4658      	mov	r0, fp
 80138cc:	2b00      	cmp	r3, #0
 80138ce:	bf18      	it	ne
 80138d0:	1ad0      	subne	r0, r2, r3
 80138d2:	6802      	ldr	r2, [r0, #0]
 80138d4:	f002 0303 	and.w	r3, r2, #3
 80138d8:	2b02      	cmp	r3, #2
 80138da:	d006      	beq.n	80138ea <_ZN12_GLOBAL__N_18MarkGrayILb1EEEvP15ContainerHeader+0x72>
 80138dc:	2b03      	cmp	r3, #3
 80138de:	d045      	beq.n	801396c <_ZN12_GLOBAL__N_18MarkGrayILb1EEEvP15ContainerHeader+0xf4>
 80138e0:	1f11      	subs	r1, r2, #4
 80138e2:	6001      	str	r1, [r0, #0]
 80138e4:	f7ff ffc8 	bl	8013878 <_ZN12_GLOBAL__N_18MarkGrayILb1EEEvP15ContainerHeader>
 80138e8:	6a31      	ldr	r1, [r6, #32]
 80138ea:	f109 0901 	add.w	r9, r9, #1
 80138ee:	4589      	cmp	r9, r1
 80138f0:	dbe5      	blt.n	80138be <_ZN12_GLOBAL__N_18MarkGrayILb1EEEvP15ContainerHeader+0x46>
 80138f2:	f242 0080 	movw	r0, #8320	; 0x2080
 80138f6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80138fa:	6800      	ldr	r0, [r0, #0]
 80138fc:	4286      	cmp	r6, r0
 80138fe:	d11b      	bne.n	8013938 <_ZN12_GLOBAL__N_18MarkGrayILb1EEEvP15ContainerHeader+0xc0>
 8013900:	68a9      	ldr	r1, [r5, #8]
 8013902:	b1c9      	cbz	r1, 8013938 <_ZN12_GLOBAL__N_18MarkGrayILb1EEEvP15ContainerHeader+0xc0>
 8013904:	f105 040c 	add.w	r4, r5, #12
 8013908:	2600      	movs	r6, #0
 801390a:	f854 2026 	ldr.w	r2, [r4, r6, lsl #2]
 801390e:	b182      	cbz	r2, 8013932 <_ZN12_GLOBAL__N_18MarkGrayILb1EEEvP15ContainerHeader+0xba>
 8013910:	6853      	ldr	r3, [r2, #4]
 8013912:	4658      	mov	r0, fp
 8013914:	2b00      	cmp	r3, #0
 8013916:	bf18      	it	ne
 8013918:	1ad0      	subne	r0, r2, r3
 801391a:	6802      	ldr	r2, [r0, #0]
 801391c:	f002 0303 	and.w	r3, r2, #3
 8013920:	2b02      	cmp	r3, #2
 8013922:	d006      	beq.n	8013932 <_ZN12_GLOBAL__N_18MarkGrayILb1EEEvP15ContainerHeader+0xba>
 8013924:	2b03      	cmp	r3, #3
 8013926:	d021      	beq.n	801396c <_ZN12_GLOBAL__N_18MarkGrayILb1EEEvP15ContainerHeader+0xf4>
 8013928:	1f11      	subs	r1, r2, #4
 801392a:	6001      	str	r1, [r0, #0]
 801392c:	f7ff ffa4 	bl	8013878 <_ZN12_GLOBAL__N_18MarkGrayILb1EEEvP15ContainerHeader>
 8013930:	68a9      	ldr	r1, [r5, #8]
 8013932:	3601      	adds	r6, #1
 8013934:	428e      	cmp	r6, r1
 8013936:	d3e8      	bcc.n	801390a <_ZN12_GLOBAL__N_18MarkGrayILb1EEEvP15ContainerHeader+0x92>
 8013938:	6828      	ldr	r0, [r5, #0]
 801393a:	6940      	ldr	r0, [r0, #20]
 801393c:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 8013940:	dd01      	ble.n	8013946 <_ZN12_GLOBAL__N_18MarkGrayILb1EEEvP15ContainerHeader+0xce>
 8013942:	3008      	adds	r0, #8
 8013944:	e003      	b.n	801394e <_ZN12_GLOBAL__N_18MarkGrayILb1EEEvP15ContainerHeader+0xd6>
 8013946:	68a9      	ldr	r1, [r5, #8]
 8013948:	4348      	muls	r0, r1
 801394a:	f1c0 000c 	rsb	r0, r0, #12
 801394e:	3007      	adds	r0, #7
 8013950:	f10a 0a01 	add.w	sl, sl, #1
 8013954:	f020 0007 	bic.w	r0, r0, #7
 8013958:	4405      	add	r5, r0
 801395a:	f8d8 0004 	ldr.w	r0, [r8, #4]
 801395e:	ebba 1f10 	cmp.w	sl, r0, lsr #4
 8013962:	d3a4      	bcc.n	80138ae <_ZN12_GLOBAL__N_18MarkGrayILb1EEEvP15ContainerHeader+0x36>
 8013964:	b001      	add	sp, #4
 8013966:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 801396a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801396c:	f644 1059 	movw	r0, #18777	; 0x4959
 8013970:	f644 0188 	movw	r1, #18568	; 0x4888
 8013974:	f6c0 0002 	movt	r0, #2050	; 0x802
 8013978:	f6c0 0102 	movt	r1, #2050	; 0x802
 801397c:	f7fe f9f2 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>

08013980 <_ZNSt3__15dequeIP15ContainerHeader14KonanAllocatorIS2_EE20__add_front_capacityEv>:
 8013980:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013982:	af03      	add	r7, sp, #12
 8013984:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 8013988:	b083      	sub	sp, #12
 801398a:	4682      	mov	sl, r0
 801398c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8013990:	e9da 6401 	ldrd	r6, r4, [sl, #4]
 8013994:	e9da 1204 	ldrd	r1, r2, [sl, #16]
 8013998:	1ba5      	subs	r5, r4, r6
 801399a:	440a      	add	r2, r1
 801399c:	4628      	mov	r0, r5
 801399e:	bf18      	it	ne
 80139a0:	eb03 2000 	addne.w	r0, r3, r0, lsl #8
 80139a4:	1a80      	subs	r0, r0, r2
 80139a6:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 80139aa:	d30d      	bcc.n	80139c8 <_ZNSt3__15dequeIP15ContainerHeader14KonanAllocatorIS2_EE20__add_front_capacityEv+0x48>
 80139ac:	f501 6080 	add.w	r0, r1, #1024	; 0x400
 80139b0:	a902      	add	r1, sp, #8
 80139b2:	f8ca 0010 	str.w	r0, [sl, #16]
 80139b6:	f854 0d04 	ldr.w	r0, [r4, #-4]!
 80139ba:	9002      	str	r0, [sp, #8]
 80139bc:	4650      	mov	r0, sl
 80139be:	f8ca 4008 	str.w	r4, [sl, #8]
 80139c2:	f000 fadd 	bl	8013f80 <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE10push_frontERKS3_>
 80139c6:	e0ce      	b.n	8013b66 <_ZNSt3__15dequeIP15ContainerHeader14KonanAllocatorIS2_EE20__add_front_capacityEv+0x1e6>
 80139c8:	f8da 2000 	ldr.w	r2, [sl]
 80139cc:	f8da 000c 	ldr.w	r0, [sl, #12]
 80139d0:	1a81      	subs	r1, r0, r2
 80139d2:	428d      	cmp	r5, r1
 80139d4:	d218      	bcs.n	8013a08 <_ZNSt3__15dequeIP15ContainerHeader14KonanAllocatorIS2_EE20__add_front_capacityEv+0x88>
 80139d6:	2001      	movs	r0, #1
 80139d8:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80139dc:	4296      	cmp	r6, r2
 80139de:	f040 8093 	bne.w	8013b08 <_ZNSt3__15dequeIP15ContainerHeader14KonanAllocatorIS2_EE20__add_front_capacityEv+0x188>
 80139e2:	f007 fd97 	bl	801b514 <calloc>
 80139e6:	9002      	str	r0, [sp, #8]
 80139e8:	a902      	add	r1, sp, #8
 80139ea:	4650      	mov	r0, sl
 80139ec:	f000 fb8c 	bl	8014108 <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE9push_backEOS3_>
 80139f0:	f8da 0008 	ldr.w	r0, [sl, #8]
 80139f4:	f850 1d04 	ldr.w	r1, [r0, #-4]!
 80139f8:	9102      	str	r1, [sp, #8]
 80139fa:	f8ca 0008 	str.w	r0, [sl, #8]
 80139fe:	a902      	add	r1, sp, #8
 8013a00:	4650      	mov	r0, sl
 8013a02:	f000 fabd 	bl	8013f80 <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE10push_frontERKS3_>
 8013a06:	e086      	b.n	8013b16 <_ZNSt3__15dequeIP15ContainerHeader14KonanAllocatorIS2_EE20__add_front_capacityEv+0x196>
 8013a08:	2000      	movs	r0, #0
 8013a0a:	104d      	asrs	r5, r1, #1
 8013a0c:	9201      	str	r2, [sp, #4]
 8013a0e:	ebb0 0f61 	cmp.w	r0, r1, asr #1
 8013a12:	f04f 0001 	mov.w	r0, #1
 8013a16:	bf08      	it	eq
 8013a18:	2501      	moveq	r5, #1
 8013a1a:	00a9      	lsls	r1, r5, #2
 8013a1c:	f007 fd7a 	bl	801b514 <calloc>
 8013a20:	4681      	mov	r9, r0
 8013a22:	2001      	movs	r0, #1
 8013a24:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8013a28:	eb09 0885 	add.w	r8, r9, r5, lsl #2
 8013a2c:	f007 fd72 	bl	801b514 <calloc>
 8013a30:	464d      	mov	r5, r9
 8013a32:	46cb      	mov	fp, r9
 8013a34:	42a6      	cmp	r6, r4
 8013a36:	f845 0b04 	str.w	r0, [r5], #4
 8013a3a:	d07a      	beq.n	8013b32 <_ZNSt3__15dequeIP15ContainerHeader14KonanAllocatorIS2_EE20__add_front_capacityEv+0x1b2>
 8013a3c:	464b      	mov	r3, r9
 8013a3e:	e052      	b.n	8013ae6 <_ZNSt3__15dequeIP15ContainerHeader14KonanAllocatorIS2_EE20__add_front_capacityEv+0x166>
 8013a40:	459b      	cmp	fp, r3
 8013a42:	d91d      	bls.n	8013a80 <_ZNSt3__15dequeIP15ContainerHeader14KonanAllocatorIS2_EE20__add_front_capacityEv+0x100>
 8013a44:	ebab 0003 	sub.w	r0, fp, r3
 8013a48:	2101      	movs	r1, #1
 8013a4a:	eba5 020b 	sub.w	r2, r5, fp
 8013a4e:	eb01 00a0 	add.w	r0, r1, r0, asr #2
 8013a52:	f06f 0103 	mvn.w	r1, #3
 8013a56:	1095      	asrs	r5, r2, #2
 8013a58:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8013a5c:	ea01 0040 	and.w	r0, r1, r0, lsl #1
 8013a60:	ebab 0400 	sub.w	r4, fp, r0
 8013a64:	2000      	movs	r0, #0
 8013a66:	ebb0 0fa2 	cmp.w	r0, r2, asr #2
 8013a6a:	d005      	beq.n	8013a78 <_ZNSt3__15dequeIP15ContainerHeader14KonanAllocatorIS2_EE20__add_front_capacityEv+0xf8>
 8013a6c:	4620      	mov	r0, r4
 8013a6e:	4659      	mov	r1, fp
 8013a70:	4699      	mov	r9, r3
 8013a72:	f007 fd47 	bl	801b504 <__aeabi_memmove>
 8013a76:	464b      	mov	r3, r9
 8013a78:	eb04 0985 	add.w	r9, r4, r5, lsl #2
 8013a7c:	46a3      	mov	fp, r4
 8013a7e:	e035      	b.n	8013aec <_ZNSt3__15dequeIP15ContainerHeader14KonanAllocatorIS2_EE20__add_front_capacityEv+0x16c>
 8013a80:	eba8 0003 	sub.w	r0, r8, r3
 8013a84:	2100      	movs	r1, #0
 8013a86:	9301      	str	r3, [sp, #4]
 8013a88:	ea4f 0860 	mov.w	r8, r0, asr #1
 8013a8c:	ebb1 0f60 	cmp.w	r1, r0, asr #1
 8013a90:	f04f 0001 	mov.w	r0, #1
 8013a94:	bf08      	it	eq
 8013a96:	f04f 0801 	moveq.w	r8, #1
 8013a9a:	ea4f 0188 	mov.w	r1, r8, lsl #2
 8013a9e:	f007 fd39 	bl	801b514 <calloc>
 8013aa2:	4604      	mov	r4, r0
 8013aa4:	f028 0003 	bic.w	r0, r8, #3
 8013aa8:	455d      	cmp	r5, fp
 8013aaa:	eb04 0188 	add.w	r1, r4, r8, lsl #2
 8013aae:	eb04 0c00 	add.w	ip, r4, r0
 8013ab2:	d010      	beq.n	8013ad6 <_ZNSt3__15dequeIP15ContainerHeader14KonanAllocatorIS2_EE20__add_front_capacityEv+0x156>
 8013ab4:	9801      	ldr	r0, [sp, #4]
 8013ab6:	f1ab 0204 	sub.w	r2, fp, #4
 8013aba:	4665      	mov	r5, ip
 8013abc:	4688      	mov	r8, r1
 8013abe:	f852 1f04 	ldr.w	r1, [r2, #4]!
 8013ac2:	f845 1b04 	str.w	r1, [r5], #4
 8013ac6:	4591      	cmp	r9, r2
 8013ac8:	d1f9      	bne.n	8013abe <_ZNSt3__15dequeIP15ContainerHeader14KonanAllocatorIS2_EE20__add_front_capacityEv+0x13e>
 8013aca:	b148      	cbz	r0, 8013ae0 <_ZNSt3__15dequeIP15ContainerHeader14KonanAllocatorIS2_EE20__add_front_capacityEv+0x160>
 8013acc:	46e3      	mov	fp, ip
 8013ace:	f007 ffc5 	bl	801ba5c <free>
 8013ad2:	4623      	mov	r3, r4
 8013ad4:	e009      	b.n	8013aea <_ZNSt3__15dequeIP15ContainerHeader14KonanAllocatorIS2_EE20__add_front_capacityEv+0x16a>
 8013ad6:	9801      	ldr	r0, [sp, #4]
 8013ad8:	4665      	mov	r5, ip
 8013ada:	4688      	mov	r8, r1
 8013adc:	2800      	cmp	r0, #0
 8013ade:	d1f5      	bne.n	8013acc <_ZNSt3__15dequeIP15ContainerHeader14KonanAllocatorIS2_EE20__add_front_capacityEv+0x14c>
 8013ae0:	4623      	mov	r3, r4
 8013ae2:	46e3      	mov	fp, ip
 8013ae4:	e001      	b.n	8013aea <_ZNSt3__15dequeIP15ContainerHeader14KonanAllocatorIS2_EE20__add_front_capacityEv+0x16a>
 8013ae6:	4545      	cmp	r5, r8
 8013ae8:	d0aa      	beq.n	8013a40 <_ZNSt3__15dequeIP15ContainerHeader14KonanAllocatorIS2_EE20__add_front_capacityEv+0xc0>
 8013aea:	46a9      	mov	r9, r5
 8013aec:	f856 0b04 	ldr.w	r0, [r6], #4
 8013af0:	f109 0504 	add.w	r5, r9, #4
 8013af4:	f8c9 0000 	str.w	r0, [r9]
 8013af8:	f8da 0008 	ldr.w	r0, [sl, #8]
 8013afc:	4286      	cmp	r6, r0
 8013afe:	d1f2      	bne.n	8013ae6 <_ZNSt3__15dequeIP15ContainerHeader14KonanAllocatorIS2_EE20__add_front_capacityEv+0x166>
 8013b00:	f8da 0000 	ldr.w	r0, [sl]
 8013b04:	4699      	mov	r9, r3
 8013b06:	e015      	b.n	8013b34 <_ZNSt3__15dequeIP15ContainerHeader14KonanAllocatorIS2_EE20__add_front_capacityEv+0x1b4>
 8013b08:	f007 fd04 	bl	801b514 <calloc>
 8013b0c:	9002      	str	r0, [sp, #8]
 8013b0e:	a902      	add	r1, sp, #8
 8013b10:	4650      	mov	r0, sl
 8013b12:	f000 fa97 	bl	8014044 <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE10push_frontEOS3_>
 8013b16:	e9da 0101 	ldrd	r0, r1, [sl, #4]
 8013b1a:	1a08      	subs	r0, r1, r0
 8013b1c:	2804      	cmp	r0, #4
 8013b1e:	bf0e      	itee	eq
 8013b20:	f44f 7000 	moveq.w	r0, #512	; 0x200
 8013b24:	f8da 0010 	ldrne.w	r0, [sl, #16]
 8013b28:	f500 6080 	addne.w	r0, r0, #1024	; 0x400
 8013b2c:	f8ca 0010 	str.w	r0, [sl, #16]
 8013b30:	e019      	b.n	8013b66 <_ZNSt3__15dequeIP15ContainerHeader14KonanAllocatorIS2_EE20__add_front_capacityEv+0x1e6>
 8013b32:	9801      	ldr	r0, [sp, #4]
 8013b34:	eba5 010b 	sub.w	r1, r5, fp
 8013b38:	e9ca 9b00 	strd	r9, fp, [sl]
 8013b3c:	e9ca 5802 	strd	r5, r8, [sl, #8]
 8013b40:	2904      	cmp	r1, #4
 8013b42:	bf1a      	itte	ne
 8013b44:	f8da 1010 	ldrne.w	r1, [sl, #16]
 8013b48:	f501 6180 	addne.w	r1, r1, #1024	; 0x400
 8013b4c:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8013b50:	2800      	cmp	r0, #0
 8013b52:	f8ca 1010 	str.w	r1, [sl, #16]
 8013b56:	d006      	beq.n	8013b66 <_ZNSt3__15dequeIP15ContainerHeader14KonanAllocatorIS2_EE20__add_front_capacityEv+0x1e6>
 8013b58:	b003      	add	sp, #12
 8013b5a:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 8013b5e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8013b62:	f007 bf7b 	b.w	801ba5c <free>
 8013b66:	b003      	add	sp, #12
 8013b68:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 8013b6c:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013b6e <_ZN12_GLOBAL__N_14ScanEP15ContainerHeader>:
 8013b6e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013b70:	af03      	add	r7, sp, #12
 8013b72:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 8013b76:	b081      	sub	sp, #4
 8013b78:	4680      	mov	r8, r0
 8013b7a:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8013b7e:	f000 0103 	and.w	r1, r0, #3
 8013b82:	2901      	cmp	r1, #1
 8013b84:	d169      	bne.n	8013c5a <_ZN12_GLOBAL__N_14ScanEP15ContainerHeader+0xec>
 8013b86:	f8d8 1000 	ldr.w	r1, [r8]
 8013b8a:	2904      	cmp	r1, #4
 8013b8c:	d269      	bcs.n	8013c62 <_ZN12_GLOBAL__N_14ScanEP15ContainerHeader+0xf4>
 8013b8e:	2102      	movs	r1, #2
 8013b90:	2810      	cmp	r0, #16
 8013b92:	f361 0001 	bfi	r0, r1, #0, #2
 8013b96:	f8c8 0004 	str.w	r0, [r8, #4]
 8013b9a:	d35e      	bcc.n	8013c5a <_ZN12_GLOBAL__N_14ScanEP15ContainerHeader+0xec>
 8013b9c:	f243 2bcc 	movw	fp, #13004	; 0x32cc
 8013ba0:	f108 0508 	add.w	r5, r8, #8
 8013ba4:	f04f 0a00 	mov.w	sl, #0
 8013ba8:	f2c2 0b00 	movt	fp, #8192	; 0x2000
 8013bac:	682e      	ldr	r6, [r5, #0]
 8013bae:	6a31      	ldr	r1, [r6, #32]
 8013bb0:	2901      	cmp	r1, #1
 8013bb2:	db1b      	blt.n	8013bec <_ZN12_GLOBAL__N_14ScanEP15ContainerHeader+0x7e>
 8013bb4:	f105 0408 	add.w	r4, r5, #8
 8013bb8:	f04f 0900 	mov.w	r9, #0
 8013bbc:	69f0      	ldr	r0, [r6, #28]
 8013bbe:	f850 0029 	ldr.w	r0, [r0, r9, lsl #2]
 8013bc2:	5902      	ldr	r2, [r0, r4]
 8013bc4:	b172      	cbz	r2, 8013be4 <_ZN12_GLOBAL__N_14ScanEP15ContainerHeader+0x76>
 8013bc6:	6853      	ldr	r3, [r2, #4]
 8013bc8:	4658      	mov	r0, fp
 8013bca:	2b00      	cmp	r3, #0
 8013bcc:	bf18      	it	ne
 8013bce:	1ad0      	subne	r0, r2, r3
 8013bd0:	6802      	ldr	r2, [r0, #0]
 8013bd2:	f002 0203 	and.w	r2, r2, #3
 8013bd6:	2a02      	cmp	r2, #2
 8013bd8:	d004      	beq.n	8013be4 <_ZN12_GLOBAL__N_14ScanEP15ContainerHeader+0x76>
 8013bda:	2a03      	cmp	r2, #3
 8013bdc:	d049      	beq.n	8013c72 <_ZN12_GLOBAL__N_14ScanEP15ContainerHeader+0x104>
 8013bde:	f7ff ffc6 	bl	8013b6e <_ZN12_GLOBAL__N_14ScanEP15ContainerHeader>
 8013be2:	6a31      	ldr	r1, [r6, #32]
 8013be4:	f109 0901 	add.w	r9, r9, #1
 8013be8:	4589      	cmp	r9, r1
 8013bea:	dbe7      	blt.n	8013bbc <_ZN12_GLOBAL__N_14ScanEP15ContainerHeader+0x4e>
 8013bec:	f242 0080 	movw	r0, #8320	; 0x2080
 8013bf0:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8013bf4:	6800      	ldr	r0, [r0, #0]
 8013bf6:	4286      	cmp	r6, r0
 8013bf8:	d119      	bne.n	8013c2e <_ZN12_GLOBAL__N_14ScanEP15ContainerHeader+0xc0>
 8013bfa:	68a9      	ldr	r1, [r5, #8]
 8013bfc:	b1b9      	cbz	r1, 8013c2e <_ZN12_GLOBAL__N_14ScanEP15ContainerHeader+0xc0>
 8013bfe:	f105 040c 	add.w	r4, r5, #12
 8013c02:	2600      	movs	r6, #0
 8013c04:	f854 2026 	ldr.w	r2, [r4, r6, lsl #2]
 8013c08:	b172      	cbz	r2, 8013c28 <_ZN12_GLOBAL__N_14ScanEP15ContainerHeader+0xba>
 8013c0a:	6853      	ldr	r3, [r2, #4]
 8013c0c:	4658      	mov	r0, fp
 8013c0e:	2b00      	cmp	r3, #0
 8013c10:	bf18      	it	ne
 8013c12:	1ad0      	subne	r0, r2, r3
 8013c14:	6802      	ldr	r2, [r0, #0]
 8013c16:	f002 0203 	and.w	r2, r2, #3
 8013c1a:	2a02      	cmp	r2, #2
 8013c1c:	d004      	beq.n	8013c28 <_ZN12_GLOBAL__N_14ScanEP15ContainerHeader+0xba>
 8013c1e:	2a03      	cmp	r2, #3
 8013c20:	d027      	beq.n	8013c72 <_ZN12_GLOBAL__N_14ScanEP15ContainerHeader+0x104>
 8013c22:	f7ff ffa4 	bl	8013b6e <_ZN12_GLOBAL__N_14ScanEP15ContainerHeader>
 8013c26:	68a9      	ldr	r1, [r5, #8]
 8013c28:	3601      	adds	r6, #1
 8013c2a:	428e      	cmp	r6, r1
 8013c2c:	d3ea      	bcc.n	8013c04 <_ZN12_GLOBAL__N_14ScanEP15ContainerHeader+0x96>
 8013c2e:	6828      	ldr	r0, [r5, #0]
 8013c30:	6940      	ldr	r0, [r0, #20]
 8013c32:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 8013c36:	dd01      	ble.n	8013c3c <_ZN12_GLOBAL__N_14ScanEP15ContainerHeader+0xce>
 8013c38:	3008      	adds	r0, #8
 8013c3a:	e003      	b.n	8013c44 <_ZN12_GLOBAL__N_14ScanEP15ContainerHeader+0xd6>
 8013c3c:	68a9      	ldr	r1, [r5, #8]
 8013c3e:	4348      	muls	r0, r1
 8013c40:	f1c0 000c 	rsb	r0, r0, #12
 8013c44:	3007      	adds	r0, #7
 8013c46:	f10a 0a01 	add.w	sl, sl, #1
 8013c4a:	f020 0007 	bic.w	r0, r0, #7
 8013c4e:	4405      	add	r5, r0
 8013c50:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8013c54:	ebba 1f10 	cmp.w	sl, r0, lsr #4
 8013c58:	d3a8      	bcc.n	8013bac <_ZN12_GLOBAL__N_14ScanEP15ContainerHeader+0x3e>
 8013c5a:	b001      	add	sp, #4
 8013c5c:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 8013c60:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013c62:	4640      	mov	r0, r8
 8013c64:	b001      	add	sp, #4
 8013c66:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 8013c6a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8013c6e:	f000 b902 	b.w	8013e76 <_ZN12_GLOBAL__N_19ScanBlackILb1EEEvP15ContainerHeader>
 8013c72:	f644 00b3 	movw	r0, #18611	; 0x48b3
 8013c76:	f644 0188 	movw	r1, #18568	; 0x4888
 8013c7a:	f6c0 0002 	movt	r0, #2050	; 0x802
 8013c7e:	f6c0 0102 	movt	r1, #2050	; 0x802
 8013c82:	f7fe f86f 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>

08013c86 <_ZN12_GLOBAL__N_112CollectWhiteEP11MemoryStateP15ContainerHeader>:
 8013c86:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013c88:	af03      	add	r7, sp, #12
 8013c8a:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 8013c8e:	b083      	sub	sp, #12
 8013c90:	9002      	str	r0, [sp, #8]
 8013c92:	6848      	ldr	r0, [r1, #4]
 8013c94:	f000 020b 	and.w	r2, r0, #11
 8013c98:	2a02      	cmp	r2, #2
 8013c9a:	f040 80de 	bne.w	8013e5a <_ZN12_GLOBAL__N_112CollectWhiteEP11MemoryStateP15ContainerHeader+0x1d4>
 8013c9e:	f020 0203 	bic.w	r2, r0, #3
 8013ca2:	2810      	cmp	r0, #16
 8013ca4:	604a      	str	r2, [r1, #4]
 8013ca6:	9c02      	ldr	r4, [sp, #8]
 8013ca8:	d365      	bcc.n	8013d76 <_ZN12_GLOBAL__N_112CollectWhiteEP11MemoryStateP15ContainerHeader+0xf0>
 8013caa:	f243 29cc 	movw	r9, #13004	; 0x32cc
 8013cae:	f101 0608 	add.w	r6, r1, #8
 8013cb2:	f04f 0b00 	mov.w	fp, #0
 8013cb6:	9101      	str	r1, [sp, #4]
 8013cb8:	f2c2 0900 	movt	r9, #8192	; 0x2000
 8013cbc:	6835      	ldr	r5, [r6, #0]
 8013cbe:	6a28      	ldr	r0, [r5, #32]
 8013cc0:	2801      	cmp	r0, #1
 8013cc2:	db1e      	blt.n	8013d02 <_ZN12_GLOBAL__N_112CollectWhiteEP11MemoryStateP15ContainerHeader+0x7c>
 8013cc4:	f106 0a08 	add.w	sl, r6, #8
 8013cc8:	f04f 0800 	mov.w	r8, #0
 8013ccc:	69e9      	ldr	r1, [r5, #28]
 8013cce:	f851 1028 	ldr.w	r1, [r1, r8, lsl #2]
 8013cd2:	f851 200a 	ldr.w	r2, [r1, sl]
 8013cd6:	b182      	cbz	r2, 8013cfa <_ZN12_GLOBAL__N_112CollectWhiteEP11MemoryStateP15ContainerHeader+0x74>
 8013cd8:	6853      	ldr	r3, [r2, #4]
 8013cda:	4649      	mov	r1, r9
 8013cdc:	2b00      	cmp	r3, #0
 8013cde:	bf18      	it	ne
 8013ce0:	1ad1      	subne	r1, r2, r3
 8013ce2:	680a      	ldr	r2, [r1, #0]
 8013ce4:	f002 0203 	and.w	r2, r2, #3
 8013ce8:	2a02      	cmp	r2, #2
 8013cea:	d006      	beq.n	8013cfa <_ZN12_GLOBAL__N_112CollectWhiteEP11MemoryStateP15ContainerHeader+0x74>
 8013cec:	2a03      	cmp	r2, #3
 8013cee:	f000 80b8 	beq.w	8013e62 <_ZN12_GLOBAL__N_112CollectWhiteEP11MemoryStateP15ContainerHeader+0x1dc>
 8013cf2:	4620      	mov	r0, r4
 8013cf4:	f7ff ffc7 	bl	8013c86 <_ZN12_GLOBAL__N_112CollectWhiteEP11MemoryStateP15ContainerHeader>
 8013cf8:	6a28      	ldr	r0, [r5, #32]
 8013cfa:	f108 0801 	add.w	r8, r8, #1
 8013cfe:	4580      	cmp	r8, r0
 8013d00:	dbe4      	blt.n	8013ccc <_ZN12_GLOBAL__N_112CollectWhiteEP11MemoryStateP15ContainerHeader+0x46>
 8013d02:	f242 0080 	movw	r0, #8320	; 0x2080
 8013d06:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8013d0a:	6800      	ldr	r0, [r0, #0]
 8013d0c:	4285      	cmp	r5, r0
 8013d0e:	d11b      	bne.n	8013d48 <_ZN12_GLOBAL__N_112CollectWhiteEP11MemoryStateP15ContainerHeader+0xc2>
 8013d10:	68b0      	ldr	r0, [r6, #8]
 8013d12:	b1c8      	cbz	r0, 8013d48 <_ZN12_GLOBAL__N_112CollectWhiteEP11MemoryStateP15ContainerHeader+0xc2>
 8013d14:	f106 050c 	add.w	r5, r6, #12
 8013d18:	2400      	movs	r4, #0
 8013d1a:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8013d1e:	b182      	cbz	r2, 8013d42 <_ZN12_GLOBAL__N_112CollectWhiteEP11MemoryStateP15ContainerHeader+0xbc>
 8013d20:	6853      	ldr	r3, [r2, #4]
 8013d22:	4649      	mov	r1, r9
 8013d24:	2b00      	cmp	r3, #0
 8013d26:	bf18      	it	ne
 8013d28:	1ad1      	subne	r1, r2, r3
 8013d2a:	680a      	ldr	r2, [r1, #0]
 8013d2c:	f002 0203 	and.w	r2, r2, #3
 8013d30:	2a02      	cmp	r2, #2
 8013d32:	d006      	beq.n	8013d42 <_ZN12_GLOBAL__N_112CollectWhiteEP11MemoryStateP15ContainerHeader+0xbc>
 8013d34:	2a03      	cmp	r2, #3
 8013d36:	f000 8094 	beq.w	8013e62 <_ZN12_GLOBAL__N_112CollectWhiteEP11MemoryStateP15ContainerHeader+0x1dc>
 8013d3a:	9802      	ldr	r0, [sp, #8]
 8013d3c:	f7ff ffa3 	bl	8013c86 <_ZN12_GLOBAL__N_112CollectWhiteEP11MemoryStateP15ContainerHeader>
 8013d40:	68b0      	ldr	r0, [r6, #8]
 8013d42:	3401      	adds	r4, #1
 8013d44:	4284      	cmp	r4, r0
 8013d46:	d3e8      	bcc.n	8013d1a <_ZN12_GLOBAL__N_112CollectWhiteEP11MemoryStateP15ContainerHeader+0x94>
 8013d48:	6830      	ldr	r0, [r6, #0]
 8013d4a:	6940      	ldr	r0, [r0, #20]
 8013d4c:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 8013d50:	dd01      	ble.n	8013d56 <_ZN12_GLOBAL__N_112CollectWhiteEP11MemoryStateP15ContainerHeader+0xd0>
 8013d52:	3008      	adds	r0, #8
 8013d54:	e003      	b.n	8013d5e <_ZN12_GLOBAL__N_112CollectWhiteEP11MemoryStateP15ContainerHeader+0xd8>
 8013d56:	68b1      	ldr	r1, [r6, #8]
 8013d58:	4348      	muls	r0, r1
 8013d5a:	f1c0 000c 	rsb	r0, r0, #12
 8013d5e:	3007      	adds	r0, #7
 8013d60:	e9dd 1401 	ldrd	r1, r4, [sp, #4]
 8013d64:	f10b 0b01 	add.w	fp, fp, #1
 8013d68:	f020 0007 	bic.w	r0, r0, #7
 8013d6c:	4406      	add	r6, r0
 8013d6e:	6848      	ldr	r0, [r1, #4]
 8013d70:	ebbb 1f10 	cmp.w	fp, r0, lsr #4
 8013d74:	d3a2      	bcc.n	8013cbc <_ZN12_GLOBAL__N_112CollectWhiteEP11MemoryStateP15ContainerHeader+0x36>
 8013d76:	6825      	ldr	r5, [r4, #0]
 8013d78:	f041 0801 	orr.w	r8, r1, #1
 8013d7c:	6928      	ldr	r0, [r5, #16]
 8013d7e:	b918      	cbnz	r0, 8013d88 <_ZN12_GLOBAL__N_112CollectWhiteEP11MemoryStateP15ContainerHeader+0x102>
 8013d80:	4628      	mov	r0, r5
 8013d82:	f7ff fdfd 	bl	8013980 <_ZNSt3__15dequeIP15ContainerHeader14KonanAllocatorIS2_EE20__add_front_capacityEv>
 8013d86:	6928      	ldr	r0, [r5, #16]
 8013d88:	e9d5 1601 	ldrd	r1, r6, [r5, #4]
 8013d8c:	0a82      	lsrs	r2, r0, #10
 8013d8e:	4603      	mov	r3, r0
 8013d90:	f36f 239f 	bfc	r3, #10, #22
 8013d94:	f851 4022 	ldr.w	r4, [r1, r2, lsl #2]
 8013d98:	428e      	cmp	r6, r1
 8013d9a:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8013d9e:	bf08      	it	eq
 8013da0:	2300      	moveq	r3, #0
 8013da2:	42a3      	cmp	r3, r4
 8013da4:	d105      	bne.n	8013db2 <_ZN12_GLOBAL__N_112CollectWhiteEP11MemoryStateP15ContainerHeader+0x12c>
 8013da6:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8013daa:	f851 1c04 	ldr.w	r1, [r1, #-4]
 8013dae:	f501 5380 	add.w	r3, r1, #4096	; 0x1000
 8013db2:	3801      	subs	r0, #1
 8013db4:	f843 8c04 	str.w	r8, [r3, #-4]
 8013db8:	6128      	str	r0, [r5, #16]
 8013dba:	6968      	ldr	r0, [r5, #20]
 8013dbc:	3001      	adds	r0, #1
 8013dbe:	6168      	str	r0, [r5, #20]
 8013dc0:	9802      	ldr	r0, [sp, #8]
 8013dc2:	7d00      	ldrb	r0, [r0, #20]
 8013dc4:	2800      	cmp	r0, #0
 8013dc6:	d148      	bne.n	8013e5a <_ZN12_GLOBAL__N_112CollectWhiteEP11MemoryStateP15ContainerHeader+0x1d4>
 8013dc8:	9802      	ldr	r0, [sp, #8]
 8013dca:	6804      	ldr	r4, [r0, #0]
 8013dcc:	4620      	mov	r0, r4
 8013dce:	f850 1f14 	ldr.w	r1, [r0, #20]!
 8013dd2:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8013dd6:	d940      	bls.n	8013e5a <_ZN12_GLOBAL__N_112CollectWhiteEP11MemoryStateP15ContainerHeader+0x1d4>
 8013dd8:	f240 1868 	movw	r8, #360	; 0x168
 8013ddc:	f240 1674 	movw	r6, #372	; 0x174
 8013de0:	f2c2 0800 	movt	r8, #8192	; 0x2000
 8013de4:	f2c2 0600 	movt	r6, #8192	; 0x2000
 8013de8:	f8d8 2000 	ldr.w	r2, [r8]
 8013dec:	6812      	ldr	r2, [r2, #0]
 8013dee:	6853      	ldr	r3, [r2, #4]
 8013df0:	e9d2 5204 	ldrd	r5, r2, [r2, #16]
 8013df4:	442a      	add	r2, r5
 8013df6:	3a01      	subs	r2, #1
 8013df8:	0a95      	lsrs	r5, r2, #10
 8013dfa:	f36f 229f 	bfc	r2, #10, #22
 8013dfe:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8013e02:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8013e06:	6922      	ldr	r2, [r4, #16]
 8013e08:	1e4b      	subs	r3, r1, #1
 8013e0a:	6003      	str	r3, [r0, #0]
 8013e0c:	f1c1 0001 	rsb	r0, r1, #1
 8013e10:	1a80      	subs	r0, r0, r2
 8013e12:	e9d4 2101 	ldrd	r2, r1, [r4, #4]
 8013e16:	1a8a      	subs	r2, r1, r2
 8013e18:	eb00 2202 	add.w	r2, r0, r2, lsl #8
 8013e1c:	bf18      	it	ne
 8013e1e:	1e50      	subne	r0, r2, #1
 8013e20:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 8013e24:	d307      	bcc.n	8013e36 <_ZN12_GLOBAL__N_112CollectWhiteEP11MemoryStateP15ContainerHeader+0x1b0>
 8013e26:	f851 0c04 	ldr.w	r0, [r1, #-4]
 8013e2a:	b110      	cbz	r0, 8013e32 <_ZN12_GLOBAL__N_112CollectWhiteEP11MemoryStateP15ContainerHeader+0x1ac>
 8013e2c:	f007 fe16 	bl	801ba5c <free>
 8013e30:	68a1      	ldr	r1, [r4, #8]
 8013e32:	1f08      	subs	r0, r1, #4
 8013e34:	60a0      	str	r0, [r4, #8]
 8013e36:	f015 0f01 	tst.w	r5, #1
 8013e3a:	bf18      	it	ne
 8013e3c:	f025 0501 	bicne.w	r5, r5, #1
 8013e40:	4628      	mov	r0, r5
 8013e42:	f007 fe0b 	bl	801ba5c <free>
 8013e46:	6830      	ldr	r0, [r6, #0]
 8013e48:	3801      	subs	r0, #1
 8013e4a:	6030      	str	r0, [r6, #0]
 8013e4c:	9802      	ldr	r0, [sp, #8]
 8013e4e:	6804      	ldr	r4, [r0, #0]
 8013e50:	4620      	mov	r0, r4
 8013e52:	f850 1f14 	ldr.w	r1, [r0, #20]!
 8013e56:	2900      	cmp	r1, #0
 8013e58:	d1c6      	bne.n	8013de8 <_ZN12_GLOBAL__N_112CollectWhiteEP11MemoryStateP15ContainerHeader+0x162>
 8013e5a:	b003      	add	sp, #12
 8013e5c:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 8013e60:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013e62:	f644 0035 	movw	r0, #18485	; 0x4835
 8013e66:	f644 0188 	movw	r1, #18568	; 0x4888
 8013e6a:	f6c0 0002 	movt	r0, #2050	; 0x802
 8013e6e:	f6c0 0102 	movt	r1, #2050	; 0x802
 8013e72:	f7fd ff77 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>

08013e76 <_ZN12_GLOBAL__N_19ScanBlackILb1EEEvP15ContainerHeader>:
 8013e76:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013e78:	af03      	add	r7, sp, #12
 8013e7a:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 8013e7e:	b081      	sub	sp, #4
 8013e80:	4680      	mov	r8, r0
 8013e82:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8013e86:	f020 0103 	bic.w	r1, r0, #3
 8013e8a:	2810      	cmp	r0, #16
 8013e8c:	f8c8 1004 	str.w	r1, [r8, #4]
 8013e90:	d368      	bcc.n	8013f64 <_ZN12_GLOBAL__N_19ScanBlackILb1EEEvP15ContainerHeader+0xee>
 8013e92:	f243 2bcc 	movw	fp, #13004	; 0x32cc
 8013e96:	f108 0508 	add.w	r5, r8, #8
 8013e9a:	f04f 0a00 	mov.w	sl, #0
 8013e9e:	f2c2 0b00 	movt	fp, #8192	; 0x2000
 8013ea2:	682e      	ldr	r6, [r5, #0]
 8013ea4:	6a31      	ldr	r1, [r6, #32]
 8013ea6:	2901      	cmp	r1, #1
 8013ea8:	db20      	blt.n	8013eec <_ZN12_GLOBAL__N_19ScanBlackILb1EEEvP15ContainerHeader+0x76>
 8013eaa:	f105 0408 	add.w	r4, r5, #8
 8013eae:	f04f 0900 	mov.w	r9, #0
 8013eb2:	69f0      	ldr	r0, [r6, #28]
 8013eb4:	f850 0029 	ldr.w	r0, [r0, r9, lsl #2]
 8013eb8:	5902      	ldr	r2, [r0, r4]
 8013eba:	b19a      	cbz	r2, 8013ee4 <_ZN12_GLOBAL__N_19ScanBlackILb1EEEvP15ContainerHeader+0x6e>
 8013ebc:	6853      	ldr	r3, [r2, #4]
 8013ebe:	4658      	mov	r0, fp
 8013ec0:	2b00      	cmp	r3, #0
 8013ec2:	bf18      	it	ne
 8013ec4:	1ad0      	subne	r0, r2, r3
 8013ec6:	6802      	ldr	r2, [r0, #0]
 8013ec8:	f002 0303 	and.w	r3, r2, #3
 8013ecc:	2b02      	cmp	r3, #2
 8013ece:	d009      	beq.n	8013ee4 <_ZN12_GLOBAL__N_19ScanBlackILb1EEEvP15ContainerHeader+0x6e>
 8013ed0:	2b03      	cmp	r3, #3
 8013ed2:	d04b      	beq.n	8013f6c <_ZN12_GLOBAL__N_19ScanBlackILb1EEEvP15ContainerHeader+0xf6>
 8013ed4:	3204      	adds	r2, #4
 8013ed6:	6002      	str	r2, [r0, #0]
 8013ed8:	7902      	ldrb	r2, [r0, #4]
 8013eda:	0792      	lsls	r2, r2, #30
 8013edc:	d002      	beq.n	8013ee4 <_ZN12_GLOBAL__N_19ScanBlackILb1EEEvP15ContainerHeader+0x6e>
 8013ede:	f7ff ffca 	bl	8013e76 <_ZN12_GLOBAL__N_19ScanBlackILb1EEEvP15ContainerHeader>
 8013ee2:	6a31      	ldr	r1, [r6, #32]
 8013ee4:	f109 0901 	add.w	r9, r9, #1
 8013ee8:	4589      	cmp	r9, r1
 8013eea:	dbe2      	blt.n	8013eb2 <_ZN12_GLOBAL__N_19ScanBlackILb1EEEvP15ContainerHeader+0x3c>
 8013eec:	f242 0080 	movw	r0, #8320	; 0x2080
 8013ef0:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8013ef4:	6800      	ldr	r0, [r0, #0]
 8013ef6:	4286      	cmp	r6, r0
 8013ef8:	d11e      	bne.n	8013f38 <_ZN12_GLOBAL__N_19ScanBlackILb1EEEvP15ContainerHeader+0xc2>
 8013efa:	68a9      	ldr	r1, [r5, #8]
 8013efc:	b1e1      	cbz	r1, 8013f38 <_ZN12_GLOBAL__N_19ScanBlackILb1EEEvP15ContainerHeader+0xc2>
 8013efe:	f105 040c 	add.w	r4, r5, #12
 8013f02:	2600      	movs	r6, #0
 8013f04:	f854 2026 	ldr.w	r2, [r4, r6, lsl #2]
 8013f08:	b19a      	cbz	r2, 8013f32 <_ZN12_GLOBAL__N_19ScanBlackILb1EEEvP15ContainerHeader+0xbc>
 8013f0a:	6853      	ldr	r3, [r2, #4]
 8013f0c:	4658      	mov	r0, fp
 8013f0e:	2b00      	cmp	r3, #0
 8013f10:	bf18      	it	ne
 8013f12:	1ad0      	subne	r0, r2, r3
 8013f14:	6802      	ldr	r2, [r0, #0]
 8013f16:	f002 0303 	and.w	r3, r2, #3
 8013f1a:	2b02      	cmp	r3, #2
 8013f1c:	d009      	beq.n	8013f32 <_ZN12_GLOBAL__N_19ScanBlackILb1EEEvP15ContainerHeader+0xbc>
 8013f1e:	2b03      	cmp	r3, #3
 8013f20:	d024      	beq.n	8013f6c <_ZN12_GLOBAL__N_19ScanBlackILb1EEEvP15ContainerHeader+0xf6>
 8013f22:	3204      	adds	r2, #4
 8013f24:	6002      	str	r2, [r0, #0]
 8013f26:	7902      	ldrb	r2, [r0, #4]
 8013f28:	0792      	lsls	r2, r2, #30
 8013f2a:	d002      	beq.n	8013f32 <_ZN12_GLOBAL__N_19ScanBlackILb1EEEvP15ContainerHeader+0xbc>
 8013f2c:	f7ff ffa3 	bl	8013e76 <_ZN12_GLOBAL__N_19ScanBlackILb1EEEvP15ContainerHeader>
 8013f30:	68a9      	ldr	r1, [r5, #8]
 8013f32:	3601      	adds	r6, #1
 8013f34:	428e      	cmp	r6, r1
 8013f36:	d3e5      	bcc.n	8013f04 <_ZN12_GLOBAL__N_19ScanBlackILb1EEEvP15ContainerHeader+0x8e>
 8013f38:	6828      	ldr	r0, [r5, #0]
 8013f3a:	6940      	ldr	r0, [r0, #20]
 8013f3c:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 8013f40:	dd01      	ble.n	8013f46 <_ZN12_GLOBAL__N_19ScanBlackILb1EEEvP15ContainerHeader+0xd0>
 8013f42:	3008      	adds	r0, #8
 8013f44:	e003      	b.n	8013f4e <_ZN12_GLOBAL__N_19ScanBlackILb1EEEvP15ContainerHeader+0xd8>
 8013f46:	68a9      	ldr	r1, [r5, #8]
 8013f48:	4348      	muls	r0, r1
 8013f4a:	f1c0 000c 	rsb	r0, r0, #12
 8013f4e:	3007      	adds	r0, #7
 8013f50:	f10a 0a01 	add.w	sl, sl, #1
 8013f54:	f020 0007 	bic.w	r0, r0, #7
 8013f58:	4405      	add	r5, r0
 8013f5a:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8013f5e:	ebba 1f10 	cmp.w	sl, r0, lsr #4
 8013f62:	d39e      	bcc.n	8013ea2 <_ZN12_GLOBAL__N_19ScanBlackILb1EEEvP15ContainerHeader+0x2c>
 8013f64:	b001      	add	sp, #4
 8013f66:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 8013f6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013f6c:	f644 1006 	movw	r0, #18694	; 0x4906
 8013f70:	f644 0188 	movw	r1, #18568	; 0x4888
 8013f74:	f6c0 0002 	movt	r0, #2050	; 0x802
 8013f78:	f6c0 0102 	movt	r1, #2050	; 0x802
 8013f7c:	f7fd fef2 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>

08013f80 <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE10push_frontERKS3_>:
 8013f80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013f82:	af03      	add	r7, sp, #12
 8013f84:	e92d 0700 	stmdb	sp!, {r8, r9, sl}
 8013f88:	4604      	mov	r4, r0
 8013f8a:	4688      	mov	r8, r1
 8013f8c:	e9d4 0600 	ldrd	r0, r6, [r4]
 8013f90:	4286      	cmp	r6, r0
 8013f92:	d001      	beq.n	8013f98 <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE10push_frontERKS3_+0x18>
 8013f94:	46b1      	mov	r9, r6
 8013f96:	e04b      	b.n	8014030 <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE10push_frontERKS3_+0xb0>
 8013f98:	e9d4 5102 	ldrd	r5, r1, [r4, #8]
 8013f9c:	428d      	cmp	r5, r1
 8013f9e:	d21b      	bcs.n	8013fd8 <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE10push_frontERKS3_+0x58>
 8013fa0:	1b48      	subs	r0, r1, r5
 8013fa2:	2101      	movs	r1, #1
 8013fa4:	1baa      	subs	r2, r5, r6
 8013fa6:	eb01 00a0 	add.w	r0, r1, r0, asr #2
 8013faa:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8013fae:	ea4f 0a60 	mov.w	sl, r0, asr #1
 8013fb2:	2000      	movs	r0, #0
 8013fb4:	eb05 098a 	add.w	r9, r5, sl, lsl #2
 8013fb8:	ebb0 0fa2 	cmp.w	r0, r2, asr #2
 8013fbc:	d007      	beq.n	8013fce <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE10push_frontERKS3_+0x4e>
 8013fbe:	1090      	asrs	r0, r2, #2
 8013fc0:	4631      	mov	r1, r6
 8013fc2:	eba9 0980 	sub.w	r9, r9, r0, lsl #2
 8013fc6:	4648      	mov	r0, r9
 8013fc8:	f007 fa9c 	bl	801b504 <__aeabi_memmove>
 8013fcc:	68a5      	ldr	r5, [r4, #8]
 8013fce:	eb05 008a 	add.w	r0, r5, sl, lsl #2
 8013fd2:	e9c4 9001 	strd	r9, r0, [r4, #4]
 8013fd6:	e02b      	b.n	8014030 <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE10push_frontERKS3_+0xb0>
 8013fd8:	1a08      	subs	r0, r1, r0
 8013fda:	2100      	movs	r1, #0
 8013fdc:	ea4f 0960 	mov.w	r9, r0, asr #1
 8013fe0:	ebb1 0f60 	cmp.w	r1, r0, asr #1
 8013fe4:	f04f 0001 	mov.w	r0, #1
 8013fe8:	bf08      	it	eq
 8013fea:	f04f 0901 	moveq.w	r9, #1
 8013fee:	ea4f 0189 	mov.w	r1, r9, lsl #2
 8013ff2:	f007 fa8f 	bl	801b514 <calloc>
 8013ff6:	f109 0203 	add.w	r2, r9, #3
 8013ffa:	eb00 0189 	add.w	r1, r0, r9, lsl #2
 8013ffe:	42ae      	cmp	r6, r5
 8014000:	f022 0203 	bic.w	r2, r2, #3
 8014004:	eb00 0902 	add.w	r9, r0, r2
 8014008:	464a      	mov	r2, r9
 801400a:	d006      	beq.n	801401a <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE10push_frontERKS3_+0x9a>
 801400c:	f856 3b04 	ldr.w	r3, [r6], #4
 8014010:	f842 3b04 	str.w	r3, [r2], #4
 8014014:	42b5      	cmp	r5, r6
 8014016:	d1f9      	bne.n	801400c <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE10push_frontERKS3_+0x8c>
 8014018:	6826      	ldr	r6, [r4, #0]
 801401a:	2e00      	cmp	r6, #0
 801401c:	e9c4 0900 	strd	r0, r9, [r4]
 8014020:	e9c4 2102 	strd	r2, r1, [r4, #8]
 8014024:	d004      	beq.n	8014030 <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE10push_frontERKS3_+0xb0>
 8014026:	4630      	mov	r0, r6
 8014028:	f007 fd18 	bl	801ba5c <free>
 801402c:	f8d4 9004 	ldr.w	r9, [r4, #4]
 8014030:	f8d8 0000 	ldr.w	r0, [r8]
 8014034:	f849 0c04 	str.w	r0, [r9, #-4]
 8014038:	6860      	ldr	r0, [r4, #4]
 801403a:	3804      	subs	r0, #4
 801403c:	6060      	str	r0, [r4, #4]
 801403e:	e8bd 0700 	ldmia.w	sp!, {r8, r9, sl}
 8014042:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014044 <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE10push_frontEOS3_>:
 8014044:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014046:	af03      	add	r7, sp, #12
 8014048:	e92d 0700 	stmdb	sp!, {r8, r9, sl}
 801404c:	4604      	mov	r4, r0
 801404e:	4688      	mov	r8, r1
 8014050:	e9d4 0600 	ldrd	r0, r6, [r4]
 8014054:	4286      	cmp	r6, r0
 8014056:	d001      	beq.n	801405c <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE10push_frontEOS3_+0x18>
 8014058:	46b1      	mov	r9, r6
 801405a:	e04b      	b.n	80140f4 <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE10push_frontEOS3_+0xb0>
 801405c:	e9d4 5102 	ldrd	r5, r1, [r4, #8]
 8014060:	428d      	cmp	r5, r1
 8014062:	d21b      	bcs.n	801409c <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE10push_frontEOS3_+0x58>
 8014064:	1b48      	subs	r0, r1, r5
 8014066:	2101      	movs	r1, #1
 8014068:	1baa      	subs	r2, r5, r6
 801406a:	eb01 00a0 	add.w	r0, r1, r0, asr #2
 801406e:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8014072:	ea4f 0a60 	mov.w	sl, r0, asr #1
 8014076:	2000      	movs	r0, #0
 8014078:	eb05 098a 	add.w	r9, r5, sl, lsl #2
 801407c:	ebb0 0fa2 	cmp.w	r0, r2, asr #2
 8014080:	d007      	beq.n	8014092 <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE10push_frontEOS3_+0x4e>
 8014082:	1090      	asrs	r0, r2, #2
 8014084:	4631      	mov	r1, r6
 8014086:	eba9 0980 	sub.w	r9, r9, r0, lsl #2
 801408a:	4648      	mov	r0, r9
 801408c:	f007 fa3a 	bl	801b504 <__aeabi_memmove>
 8014090:	68a5      	ldr	r5, [r4, #8]
 8014092:	eb05 008a 	add.w	r0, r5, sl, lsl #2
 8014096:	e9c4 9001 	strd	r9, r0, [r4, #4]
 801409a:	e02b      	b.n	80140f4 <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE10push_frontEOS3_+0xb0>
 801409c:	1a08      	subs	r0, r1, r0
 801409e:	2100      	movs	r1, #0
 80140a0:	ea4f 0960 	mov.w	r9, r0, asr #1
 80140a4:	ebb1 0f60 	cmp.w	r1, r0, asr #1
 80140a8:	f04f 0001 	mov.w	r0, #1
 80140ac:	bf08      	it	eq
 80140ae:	f04f 0901 	moveq.w	r9, #1
 80140b2:	ea4f 0189 	mov.w	r1, r9, lsl #2
 80140b6:	f007 fa2d 	bl	801b514 <calloc>
 80140ba:	f109 0203 	add.w	r2, r9, #3
 80140be:	eb00 0189 	add.w	r1, r0, r9, lsl #2
 80140c2:	42ae      	cmp	r6, r5
 80140c4:	f022 0203 	bic.w	r2, r2, #3
 80140c8:	eb00 0902 	add.w	r9, r0, r2
 80140cc:	464a      	mov	r2, r9
 80140ce:	d006      	beq.n	80140de <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE10push_frontEOS3_+0x9a>
 80140d0:	f856 3b04 	ldr.w	r3, [r6], #4
 80140d4:	f842 3b04 	str.w	r3, [r2], #4
 80140d8:	42b5      	cmp	r5, r6
 80140da:	d1f9      	bne.n	80140d0 <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE10push_frontEOS3_+0x8c>
 80140dc:	6826      	ldr	r6, [r4, #0]
 80140de:	2e00      	cmp	r6, #0
 80140e0:	e9c4 0900 	strd	r0, r9, [r4]
 80140e4:	e9c4 2102 	strd	r2, r1, [r4, #8]
 80140e8:	d004      	beq.n	80140f4 <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE10push_frontEOS3_+0xb0>
 80140ea:	4630      	mov	r0, r6
 80140ec:	f007 fcb6 	bl	801ba5c <free>
 80140f0:	f8d4 9004 	ldr.w	r9, [r4, #4]
 80140f4:	f8d8 0000 	ldr.w	r0, [r8]
 80140f8:	f849 0c04 	str.w	r0, [r9, #-4]
 80140fc:	6860      	ldr	r0, [r4, #4]
 80140fe:	3804      	subs	r0, #4
 8014100:	6060      	str	r0, [r4, #4]
 8014102:	e8bd 0700 	ldmia.w	sp!, {r8, r9, sl}
 8014106:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014108 <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE9push_backEOS3_>:
 8014108:	b5f0      	push	{r4, r5, r6, r7, lr}
 801410a:	af03      	add	r7, sp, #12
 801410c:	e92d 0700 	stmdb	sp!, {r8, r9, sl}
 8014110:	4604      	mov	r4, r0
 8014112:	4688      	mov	r8, r1
 8014114:	e9d4 5002 	ldrd	r5, r0, [r4, #8]
 8014118:	4285      	cmp	r5, r0
 801411a:	d001      	beq.n	8014120 <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE9push_backEOS3_+0x18>
 801411c:	4629      	mov	r1, r5
 801411e:	e04e      	b.n	80141be <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE9push_backEOS3_+0xb6>
 8014120:	e9d4 9600 	ldrd	r9, r6, [r4]
 8014124:	454e      	cmp	r6, r9
 8014126:	d91e      	bls.n	8014166 <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE9push_backEOS3_+0x5e>
 8014128:	eba6 0009 	sub.w	r0, r6, r9
 801412c:	2101      	movs	r1, #1
 801412e:	1baa      	subs	r2, r5, r6
 8014130:	eb01 00a0 	add.w	r0, r1, r0, asr #2
 8014134:	2100      	movs	r1, #0
 8014136:	1095      	asrs	r5, r2, #2
 8014138:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 801413c:	ebb1 0fa2 	cmp.w	r1, r2, asr #2
 8014140:	eba1 0a60 	sub.w	sl, r1, r0, asr #1
 8014144:	ea4f 0060 	mov.w	r0, r0, asr #1
 8014148:	eba6 0980 	sub.w	r9, r6, r0, lsl #2
 801414c:	d004      	beq.n	8014158 <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE9push_backEOS3_+0x50>
 801414e:	4648      	mov	r0, r9
 8014150:	4631      	mov	r1, r6
 8014152:	f007 f9d7 	bl	801b504 <__aeabi_memmove>
 8014156:	6866      	ldr	r6, [r4, #4]
 8014158:	eb06 008a 	add.w	r0, r6, sl, lsl #2
 801415c:	eb09 0185 	add.w	r1, r9, r5, lsl #2
 8014160:	e9c4 0101 	strd	r0, r1, [r4, #4]
 8014164:	e02b      	b.n	80141be <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE9push_backEOS3_+0xb6>
 8014166:	eba0 0009 	sub.w	r0, r0, r9
 801416a:	2100      	movs	r1, #0
 801416c:	ea4f 0a60 	mov.w	sl, r0, asr #1
 8014170:	ebb1 0f60 	cmp.w	r1, r0, asr #1
 8014174:	f04f 0001 	mov.w	r0, #1
 8014178:	bf08      	it	eq
 801417a:	f04f 0a01 	moveq.w	sl, #1
 801417e:	ea4f 018a 	mov.w	r1, sl, lsl #2
 8014182:	f007 f9c7 	bl	801b514 <calloc>
 8014186:	f02a 0103 	bic.w	r1, sl, #3
 801418a:	eb00 0c8a 	add.w	ip, r0, sl, lsl #2
 801418e:	42ae      	cmp	r6, r5
 8014190:	eb00 0301 	add.w	r3, r0, r1
 8014194:	4619      	mov	r1, r3
 8014196:	d007      	beq.n	80141a8 <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE9push_backEOS3_+0xa0>
 8014198:	f856 2b04 	ldr.w	r2, [r6], #4
 801419c:	f841 2b04 	str.w	r2, [r1], #4
 80141a0:	42b5      	cmp	r5, r6
 80141a2:	d1f9      	bne.n	8014198 <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE9push_backEOS3_+0x90>
 80141a4:	f8d4 9000 	ldr.w	r9, [r4]
 80141a8:	f1b9 0f00 	cmp.w	r9, #0
 80141ac:	e9c4 0300 	strd	r0, r3, [r4]
 80141b0:	e9c4 1c02 	strd	r1, ip, [r4, #8]
 80141b4:	d003      	beq.n	80141be <_ZNSt3__114__split_bufferIPP15ContainerHeader14KonanAllocatorIS3_EE9push_backEOS3_+0xb6>
 80141b6:	4648      	mov	r0, r9
 80141b8:	f007 fc50 	bl	801ba5c <free>
 80141bc:	68a1      	ldr	r1, [r4, #8]
 80141be:	f8d8 0000 	ldr.w	r0, [r8]
 80141c2:	6008      	str	r0, [r1, #0]
 80141c4:	68a0      	ldr	r0, [r4, #8]
 80141c6:	3004      	adds	r0, #4
 80141c8:	60a0      	str	r0, [r4, #8]
 80141ca:	e8bd 0700 	ldmia.w	sp!, {r8, r9, sl}
 80141ce:	bdf0      	pop	{r4, r5, r6, r7, pc}

080141d0 <UpdateRef>:
 80141d0:	b5d0      	push	{r4, r6, r7, lr}
 80141d2:	af02      	add	r7, sp, #8
 80141d4:	4602      	mov	r2, r0
 80141d6:	07d0      	lsls	r0, r2, #31
 80141d8:	d129      	bne.n	801422e <UpdateRef+0x5e>
 80141da:	6810      	ldr	r0, [r2, #0]
 80141dc:	4288      	cmp	r0, r1
 80141de:	bf08      	it	eq
 80141e0:	bdd0      	popeq	{r4, r6, r7, pc}
 80141e2:	b1e1      	cbz	r1, 801421e <UpdateRef+0x4e>
 80141e4:	f8d1 c004 	ldr.w	ip, [r1, #4]
 80141e8:	f243 23cc 	movw	r3, #13004	; 0x32cc
 80141ec:	f2c2 0300 	movt	r3, #8192	; 0x2000
 80141f0:	f1bc 0f00 	cmp.w	ip, #0
 80141f4:	bf18      	it	ne
 80141f6:	eba1 030c 	subne.w	r3, r1, ip
 80141fa:	f8d3 c000 	ldr.w	ip, [r3]
 80141fe:	f00c 0e03 	and.w	lr, ip, #3
 8014202:	f1ae 0402 	sub.w	r4, lr, #2
 8014206:	2c02      	cmp	r4, #2
 8014208:	d309      	bcc.n	801421e <UpdateRef+0x4e>
 801420a:	f1be 0f00 	cmp.w	lr, #0
 801420e:	d118      	bne.n	8014242 <UpdateRef+0x72>
 8014210:	f10c 0404 	add.w	r4, ip, #4
 8014214:	601c      	str	r4, [r3, #0]
 8014216:	685c      	ldr	r4, [r3, #4]
 8014218:	f024 0403 	bic.w	r4, r4, #3
 801421c:	605c      	str	r4, [r3, #4]
 801421e:	2802      	cmp	r0, #2
 8014220:	6011      	str	r1, [r2, #0]
 8014222:	d303      	bcc.n	801422c <UpdateRef+0x5c>
 8014224:	e8bd 40d0 	ldmia.w	sp!, {r4, r6, r7, lr}
 8014228:	f000 b815 	b.w	8014256 <_Z10ReleaseRefPK9ObjHeader>
 801422c:	bdd0      	pop	{r4, r6, r7, pc}
 801422e:	f644 10ac 	movw	r0, #18860	; 0x49ac
 8014232:	f644 2100 	movw	r1, #18944	; 0x4a00
 8014236:	f6c0 0002 	movt	r0, #2050	; 0x802
 801423a:	f6c0 0102 	movt	r1, #2050	; 0x802
 801423e:	f7fd fd91 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>
 8014242:	f644 2013 	movw	r0, #18963	; 0x4a13
 8014246:	f644 2166 	movw	r1, #19046	; 0x4a66
 801424a:	f6c0 0002 	movt	r0, #2050	; 0x802
 801424e:	f6c0 0102 	movt	r1, #2050	; 0x802
 8014252:	f7fd fd87 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>

08014256 <_Z10ReleaseRefPK9ObjHeader>:
 8014256:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014258:	af03      	add	r7, sp, #12
 801425a:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 801425e:	b081      	sub	sp, #4
 8014260:	e9d0 1200 	ldrd	r1, r2, [r0]
 8014264:	f243 24cc 	movw	r4, #13004	; 0x32cc
 8014268:	f2c2 0400 	movt	r4, #8192	; 0x2000
 801426c:	2a00      	cmp	r2, #0
 801426e:	bf18      	it	ne
 8014270:	1a84      	subne	r4, r0, r2
 8014272:	6a08      	ldr	r0, [r1, #32]
 8014274:	2800      	cmp	r0, #0
 8014276:	dd01      	ble.n	801427c <_Z10ReleaseRefPK9ObjHeader+0x26>
 8014278:	2001      	movs	r0, #1
 801427a:	e004      	b.n	8014286 <_Z10ReleaseRefPK9ObjHeader+0x30>
 801427c:	6861      	ldr	r1, [r4, #4]
 801427e:	2000      	movs	r0, #0
 8014280:	291f      	cmp	r1, #31
 8014282:	bf88      	it	hi
 8014284:	2001      	movhi	r0, #1
 8014286:	6821      	ldr	r1, [r4, #0]
 8014288:	f001 0203 	and.w	r2, r1, #3
 801428c:	1e93      	subs	r3, r2, #2
 801428e:	2b02      	cmp	r3, #2
 8014290:	d203      	bcs.n	801429a <_Z10ReleaseRefPK9ObjHeader+0x44>
 8014292:	b001      	add	sp, #4
 8014294:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 8014298:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801429a:	2a00      	cmp	r2, #0
 801429c:	f040 8084 	bne.w	80143a8 <_Z10ReleaseRefPK9ObjHeader+0x152>
 80142a0:	3904      	subs	r1, #4
 80142a2:	2903      	cmp	r1, #3
 80142a4:	6021      	str	r1, [r4, #0]
 80142a6:	d807      	bhi.n	80142b8 <_Z10ReleaseRefPK9ObjHeader+0x62>
 80142a8:	4620      	mov	r0, r4
 80142aa:	b001      	add	sp, #4
 80142ac:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 80142b0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80142b4:	f000 b882 	b.w	80143bc <_Z13FreeContainerP15ContainerHeader>
 80142b8:	2801      	cmp	r0, #1
 80142ba:	d1ea      	bne.n	8014292 <_Z10ReleaseRefPK9ObjHeader+0x3c>
 80142bc:	6860      	ldr	r0, [r4, #4]
 80142be:	f000 0103 	and.w	r1, r0, #3
 80142c2:	2903      	cmp	r1, #3
 80142c4:	d0e5      	beq.n	8014292 <_Z10ReleaseRefPK9ObjHeader+0x3c>
 80142c6:	f040 0103 	orr.w	r1, r0, #3
 80142ca:	f010 0f08 	tst.w	r0, #8
 80142ce:	6061      	str	r1, [r4, #4]
 80142d0:	d1df      	bne.n	8014292 <_Z10ReleaseRefPK9ObjHeader+0x3c>
 80142d2:	f040 000b 	orr.w	r0, r0, #11
 80142d6:	6060      	str	r0, [r4, #4]
 80142d8:	f240 1068 	movw	r0, #360	; 0x168
 80142dc:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80142e0:	f8d0 8000 	ldr.w	r8, [r0]
 80142e4:	f8d8 9004 	ldr.w	r9, [r8, #4]
 80142e8:	e9d9 5101 	ldrd	r5, r1, [r9, #4]
 80142ec:	428d      	cmp	r5, r1
 80142ee:	d006      	beq.n	80142fe <_Z10ReleaseRefPK9ObjHeader+0xa8>
 80142f0:	602c      	str	r4, [r5, #0]
 80142f2:	f8d9 0004 	ldr.w	r0, [r9, #4]
 80142f6:	3004      	adds	r0, #4
 80142f8:	f8c9 0004 	str.w	r0, [r9, #4]
 80142fc:	e03d      	b.n	801437a <_Z10ReleaseRefPK9ObjHeader+0x124>
 80142fe:	f8d9 6000 	ldr.w	r6, [r9]
 8014302:	f64f 73fe 	movw	r3, #65534	; 0xfffe
 8014306:	f6c3 73ff 	movt	r3, #16383	; 0x3fff
 801430a:	1b89      	subs	r1, r1, r6
 801430c:	1ba8      	subs	r0, r5, r6
 801430e:	108a      	asrs	r2, r1, #2
 8014310:	ea4f 0aa0 	mov.w	sl, r0, asr #2
 8014314:	429a      	cmp	r2, r3
 8014316:	d80e      	bhi.n	8014336 <_Z10ReleaseRefPK9ObjHeader+0xe0>
 8014318:	2201      	movs	r2, #1
 801431a:	ea4f 0b61 	mov.w	fp, r1, asr #1
 801431e:	eb02 00a0 	add.w	r0, r2, r0, asr #2
 8014322:	4583      	cmp	fp, r0
 8014324:	bf38      	it	cc
 8014326:	4683      	movcc	fp, r0
 8014328:	f1bb 0f00 	cmp.w	fp, #0
 801432c:	d105      	bne.n	801433a <_Z10ReleaseRefPK9ObjHeader+0xe4>
 801432e:	f04f 0b00 	mov.w	fp, #0
 8014332:	2000      	movs	r0, #0
 8014334:	e006      	b.n	8014344 <_Z10ReleaseRefPK9ObjHeader+0xee>
 8014336:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
 801433a:	ea4f 018b 	mov.w	r1, fp, lsl #2
 801433e:	2001      	movs	r0, #1
 8014340:	f007 f8e8 	bl	801b514 <calloc>
 8014344:	eb00 028a 	add.w	r2, r0, sl, lsl #2
 8014348:	eb00 018b 	add.w	r1, r0, fp, lsl #2
 801434c:	42b5      	cmp	r5, r6
 801434e:	4610      	mov	r0, r2
 8014350:	f840 4b04 	str.w	r4, [r0], #4
 8014354:	d008      	beq.n	8014368 <_Z10ReleaseRefPK9ObjHeader+0x112>
 8014356:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 801435a:	f842 3c04 	str.w	r3, [r2, #-4]
 801435e:	3a04      	subs	r2, #4
 8014360:	42ae      	cmp	r6, r5
 8014362:	d1f8      	bne.n	8014356 <_Z10ReleaseRefPK9ObjHeader+0x100>
 8014364:	f8d9 5000 	ldr.w	r5, [r9]
 8014368:	2d00      	cmp	r5, #0
 801436a:	e9c9 2000 	strd	r2, r0, [r9]
 801436e:	f8c9 1008 	str.w	r1, [r9, #8]
 8014372:	d002      	beq.n	801437a <_Z10ReleaseRefPK9ObjHeader+0x124>
 8014374:	4628      	mov	r0, r5
 8014376:	f007 fb71 	bl	801ba5c <free>
 801437a:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801437e:	2800      	cmp	r0, #0
 8014380:	f47f af87 	bne.w	8014292 <_Z10ReleaseRefPK9ObjHeader+0x3c>
 8014384:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8014388:	f8d8 1010 	ldr.w	r1, [r8, #16]
 801438c:	e9d0 2000 	ldrd	r2, r0, [r0]
 8014390:	1a80      	subs	r0, r0, r2
 8014392:	1080      	asrs	r0, r0, #2
 8014394:	4288      	cmp	r0, r1
 8014396:	f4ff af7c 	bcc.w	8014292 <_Z10ReleaseRefPK9ObjHeader+0x3c>
 801439a:	b001      	add	sp, #4
 801439c:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 80143a0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80143a4:	f7ff b86c 	b.w	8013480 <GarbageCollect>
 80143a8:	f644 207d 	movw	r0, #19069	; 0x4a7d
 80143ac:	f644 2166 	movw	r1, #19046	; 0x4a66
 80143b0:	f6c0 0002 	movt	r0, #2050	; 0x802
 80143b4:	f6c0 0102 	movt	r1, #2050	; 0x802
 80143b8:	f7fd fcd4 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>

080143bc <_Z13FreeContainerP15ContainerHeader>:
 80143bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80143be:	af03      	add	r7, sp, #12
 80143c0:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 80143c4:	b081      	sub	sp, #4
 80143c6:	4683      	mov	fp, r0
 80143c8:	f8db 1000 	ldr.w	r1, [fp]
 80143cc:	f001 0003 	and.w	r0, r1, #3
 80143d0:	2802      	cmp	r0, #2
 80143d2:	f000 80ef 	beq.w	80145b4 <_Z13FreeContainerP15ContainerHeader+0x1f8>
 80143d6:	f240 1868 	movw	r8, #360	; 0x168
 80143da:	f8db 0004 	ldr.w	r0, [fp, #4]
 80143de:	f2c2 0800 	movt	r8, #8192	; 0x2000
 80143e2:	f8d8 9000 	ldr.w	r9, [r8]
 80143e6:	2810      	cmp	r0, #16
 80143e8:	d360      	bcc.n	80144ac <_Z13FreeContainerP15ContainerHeader+0xf0>
 80143ea:	f8cd 9000 	str.w	r9, [sp]
 80143ee:	f10b 0508 	add.w	r5, fp, #8
 80143f2:	f04f 0a00 	mov.w	sl, #0
 80143f6:	f04f 0900 	mov.w	r9, #0
 80143fa:	f8d5 8000 	ldr.w	r8, [r5]
 80143fe:	f8d8 1020 	ldr.w	r1, [r8, #32]
 8014402:	2901      	cmp	r1, #1
 8014404:	db18      	blt.n	8014438 <_Z13FreeContainerP15ContainerHeader+0x7c>
 8014406:	f105 0408 	add.w	r4, r5, #8
 801440a:	2600      	movs	r6, #0
 801440c:	f8d8 001c 	ldr.w	r0, [r8, #28]
 8014410:	f850 0026 	ldr.w	r0, [r0, r6, lsl #2]
 8014414:	1902      	adds	r2, r0, r4
 8014416:	f012 0f01 	tst.w	r2, #1
 801441a:	f040 80c1 	bne.w	80145a0 <_Z13FreeContainerP15ContainerHeader+0x1e4>
 801441e:	6810      	ldr	r0, [r2, #0]
 8014420:	b138      	cbz	r0, 8014432 <_Z13FreeContainerP15ContainerHeader+0x76>
 8014422:	2802      	cmp	r0, #2
 8014424:	f8c2 a000 	str.w	sl, [r2]
 8014428:	d303      	bcc.n	8014432 <_Z13FreeContainerP15ContainerHeader+0x76>
 801442a:	f7ff ff14 	bl	8014256 <_Z10ReleaseRefPK9ObjHeader>
 801442e:	f8d8 1020 	ldr.w	r1, [r8, #32]
 8014432:	3601      	adds	r6, #1
 8014434:	428e      	cmp	r6, r1
 8014436:	dbe9      	blt.n	801440c <_Z13FreeContainerP15ContainerHeader+0x50>
 8014438:	f242 0080 	movw	r0, #8320	; 0x2080
 801443c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8014440:	6800      	ldr	r0, [r0, #0]
 8014442:	4580      	cmp	r8, r0
 8014444:	d114      	bne.n	8014470 <_Z13FreeContainerP15ContainerHeader+0xb4>
 8014446:	68a9      	ldr	r1, [r5, #8]
 8014448:	b191      	cbz	r1, 8014470 <_Z13FreeContainerP15ContainerHeader+0xb4>
 801444a:	f105 040c 	add.w	r4, r5, #12
 801444e:	2600      	movs	r6, #0
 8014450:	07e0      	lsls	r0, r4, #31
 8014452:	f040 80a5 	bne.w	80145a0 <_Z13FreeContainerP15ContainerHeader+0x1e4>
 8014456:	6820      	ldr	r0, [r4, #0]
 8014458:	b130      	cbz	r0, 8014468 <_Z13FreeContainerP15ContainerHeader+0xac>
 801445a:	2802      	cmp	r0, #2
 801445c:	f8c4 a000 	str.w	sl, [r4]
 8014460:	d302      	bcc.n	8014468 <_Z13FreeContainerP15ContainerHeader+0xac>
 8014462:	f7ff fef8 	bl	8014256 <_Z10ReleaseRefPK9ObjHeader>
 8014466:	68a9      	ldr	r1, [r5, #8]
 8014468:	3601      	adds	r6, #1
 801446a:	3404      	adds	r4, #4
 801446c:	428e      	cmp	r6, r1
 801446e:	d3ef      	bcc.n	8014450 <_Z13FreeContainerP15ContainerHeader+0x94>
 8014470:	6828      	ldr	r0, [r5, #0]
 8014472:	6940      	ldr	r0, [r0, #20]
 8014474:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 8014478:	dd01      	ble.n	801447e <_Z13FreeContainerP15ContainerHeader+0xc2>
 801447a:	3008      	adds	r0, #8
 801447c:	e003      	b.n	8014486 <_Z13FreeContainerP15ContainerHeader+0xca>
 801447e:	68a9      	ldr	r1, [r5, #8]
 8014480:	4348      	muls	r0, r1
 8014482:	f1c0 000c 	rsb	r0, r0, #12
 8014486:	3007      	adds	r0, #7
 8014488:	f109 0901 	add.w	r9, r9, #1
 801448c:	f020 0007 	bic.w	r0, r0, #7
 8014490:	4405      	add	r5, r0
 8014492:	f8db 0004 	ldr.w	r0, [fp, #4]
 8014496:	ebb9 1f10 	cmp.w	r9, r0, lsr #4
 801449a:	d3ae      	bcc.n	80143fa <_Z13FreeContainerP15ContainerHeader+0x3e>
 801449c:	f240 1868 	movw	r8, #360	; 0x168
 80144a0:	f8db 1000 	ldr.w	r1, [fp]
 80144a4:	f8dd 9000 	ldr.w	r9, [sp]
 80144a8:	f2c2 0800 	movt	r8, #8192	; 0x2000
 80144ac:	0789      	lsls	r1, r1, #30
 80144ae:	d473      	bmi.n	8014598 <_Z13FreeContainerP15ContainerHeader+0x1dc>
 80144b0:	f020 0103 	bic.w	r1, r0, #3
 80144b4:	f010 0f08 	tst.w	r0, #8
 80144b8:	f8cb 1004 	str.w	r1, [fp, #4]
 80144bc:	d16c      	bne.n	8014598 <_Z13FreeContainerP15ContainerHeader+0x1dc>
 80144be:	f8d9 5000 	ldr.w	r5, [r9]
 80144c2:	6928      	ldr	r0, [r5, #16]
 80144c4:	b918      	cbnz	r0, 80144ce <_Z13FreeContainerP15ContainerHeader+0x112>
 80144c6:	4628      	mov	r0, r5
 80144c8:	f7ff fa5a 	bl	8013980 <_ZNSt3__15dequeIP15ContainerHeader14KonanAllocatorIS2_EE20__add_front_capacityEv>
 80144cc:	6928      	ldr	r0, [r5, #16]
 80144ce:	e9d5 1601 	ldrd	r1, r6, [r5, #4]
 80144d2:	0a82      	lsrs	r2, r0, #10
 80144d4:	4603      	mov	r3, r0
 80144d6:	f36f 239f 	bfc	r3, #10, #22
 80144da:	f851 4022 	ldr.w	r4, [r1, r2, lsl #2]
 80144de:	428e      	cmp	r6, r1
 80144e0:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80144e4:	bf08      	it	eq
 80144e6:	2300      	moveq	r3, #0
 80144e8:	42a3      	cmp	r3, r4
 80144ea:	d105      	bne.n	80144f8 <_Z13FreeContainerP15ContainerHeader+0x13c>
 80144ec:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 80144f0:	f851 1c04 	ldr.w	r1, [r1, #-4]
 80144f4:	f501 5380 	add.w	r3, r1, #4096	; 0x1000
 80144f8:	3801      	subs	r0, #1
 80144fa:	f843 bc04 	str.w	fp, [r3, #-4]
 80144fe:	6128      	str	r0, [r5, #16]
 8014500:	6968      	ldr	r0, [r5, #20]
 8014502:	3001      	adds	r0, #1
 8014504:	6168      	str	r0, [r5, #20]
 8014506:	f899 0014 	ldrb.w	r0, [r9, #20]
 801450a:	2800      	cmp	r0, #0
 801450c:	d144      	bne.n	8014598 <_Z13FreeContainerP15ContainerHeader+0x1dc>
 801450e:	f8d9 6000 	ldr.w	r6, [r9]
 8014512:	4630      	mov	r0, r6
 8014514:	f850 1f14 	ldr.w	r1, [r0, #20]!
 8014518:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 801451c:	d93c      	bls.n	8014598 <_Z13FreeContainerP15ContainerHeader+0x1dc>
 801451e:	f240 1574 	movw	r5, #372	; 0x174
 8014522:	f2c2 0500 	movt	r5, #8192	; 0x2000
 8014526:	f8d8 2000 	ldr.w	r2, [r8]
 801452a:	6812      	ldr	r2, [r2, #0]
 801452c:	6853      	ldr	r3, [r2, #4]
 801452e:	e9d2 4204 	ldrd	r4, r2, [r2, #16]
 8014532:	4422      	add	r2, r4
 8014534:	3a01      	subs	r2, #1
 8014536:	0a94      	lsrs	r4, r2, #10
 8014538:	f36f 229f 	bfc	r2, #10, #22
 801453c:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8014540:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8014544:	6932      	ldr	r2, [r6, #16]
 8014546:	1e4b      	subs	r3, r1, #1
 8014548:	6003      	str	r3, [r0, #0]
 801454a:	f1c1 0001 	rsb	r0, r1, #1
 801454e:	1a80      	subs	r0, r0, r2
 8014550:	e9d6 2101 	ldrd	r2, r1, [r6, #4]
 8014554:	1a8a      	subs	r2, r1, r2
 8014556:	eb00 2202 	add.w	r2, r0, r2, lsl #8
 801455a:	bf18      	it	ne
 801455c:	1e50      	subne	r0, r2, #1
 801455e:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 8014562:	d307      	bcc.n	8014574 <_Z13FreeContainerP15ContainerHeader+0x1b8>
 8014564:	f851 0c04 	ldr.w	r0, [r1, #-4]
 8014568:	b110      	cbz	r0, 8014570 <_Z13FreeContainerP15ContainerHeader+0x1b4>
 801456a:	f007 fa77 	bl	801ba5c <free>
 801456e:	68b1      	ldr	r1, [r6, #8]
 8014570:	1f08      	subs	r0, r1, #4
 8014572:	60b0      	str	r0, [r6, #8]
 8014574:	f014 0f01 	tst.w	r4, #1
 8014578:	bf18      	it	ne
 801457a:	f024 0401 	bicne.w	r4, r4, #1
 801457e:	4620      	mov	r0, r4
 8014580:	f007 fa6c 	bl	801ba5c <free>
 8014584:	6828      	ldr	r0, [r5, #0]
 8014586:	3801      	subs	r0, #1
 8014588:	6028      	str	r0, [r5, #0]
 801458a:	f8d9 6000 	ldr.w	r6, [r9]
 801458e:	4630      	mov	r0, r6
 8014590:	f850 1f14 	ldr.w	r1, [r0, #20]!
 8014594:	2900      	cmp	r1, #0
 8014596:	d1c6      	bne.n	8014526 <_Z13FreeContainerP15ContainerHeader+0x16a>
 8014598:	b001      	add	sp, #4
 801459a:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 801459e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80145a0:	f644 10ac 	movw	r0, #18860	; 0x49ac
 80145a4:	f644 2100 	movw	r1, #18944	; 0x4a00
 80145a8:	f6c0 0002 	movt	r0, #2050	; 0x802
 80145ac:	f6c0 0102 	movt	r1, #2050	; 0x802
 80145b0:	f7fd fbd8 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>
 80145b4:	f644 20d0 	movw	r0, #19152	; 0x4ad0
 80145b8:	f644 3123 	movw	r1, #19235	; 0x4b23
 80145bc:	f6c0 0002 	movt	r0, #2050	; 0x802
 80145c0:	f6c0 0102 	movt	r1, #2050	; 0x802
 80145c4:	f7fd fbce 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>

080145c8 <Kotlin_Array_get>:
 80145c8:	b5d0      	push	{r4, r6, r7, lr}
 80145ca:	af02      	add	r7, sp, #8
 80145cc:	6883      	ldr	r3, [r0, #8]
 80145ce:	428b      	cmp	r3, r1
 80145d0:	d908      	bls.n	80145e4 <Kotlin_Array_get+0x1c>
 80145d2:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 80145d6:	68c4      	ldr	r4, [r0, #12]
 80145d8:	4610      	mov	r0, r2
 80145da:	4621      	mov	r1, r4
 80145dc:	f000 f805 	bl	80145ea <UpdateReturnRef>
 80145e0:	4620      	mov	r0, r4
 80145e2:	bdd0      	pop	{r4, r6, r7, pc}
 80145e4:	2000      	movs	r0, #0
 80145e6:	f7fb fb81 	bl	800fcec <ThrowArrayIndexOutOfBoundsException>

080145ea <UpdateReturnRef>:
 80145ea:	b5f0      	push	{r4, r5, r6, r7, lr}
 80145ec:	af03      	add	r7, sp, #12
 80145ee:	f84d bd04 	str.w	fp, [sp, #-4]!
 80145f2:	460c      	mov	r4, r1
 80145f4:	07c1      	lsls	r1, r0, #31
 80145f6:	d125      	bne.n	8014644 <UpdateReturnRef+0x5a>
 80145f8:	07c1      	lsls	r1, r0, #31
 80145fa:	d16a      	bne.n	80146d2 <UpdateReturnRef+0xe8>
 80145fc:	6801      	ldr	r1, [r0, #0]
 80145fe:	42a1      	cmp	r1, r4
 8014600:	d02c      	beq.n	801465c <UpdateReturnRef+0x72>
 8014602:	b1ac      	cbz	r4, 8014630 <UpdateReturnRef+0x46>
 8014604:	6863      	ldr	r3, [r4, #4]
 8014606:	f243 22cc 	movw	r2, #13004	; 0x32cc
 801460a:	f2c2 0200 	movt	r2, #8192	; 0x2000
 801460e:	2b00      	cmp	r3, #0
 8014610:	bf18      	it	ne
 8014612:	1ae2      	subne	r2, r4, r3
 8014614:	6813      	ldr	r3, [r2, #0]
 8014616:	f003 0603 	and.w	r6, r3, #3
 801461a:	1eb5      	subs	r5, r6, #2
 801461c:	2d02      	cmp	r5, #2
 801461e:	d307      	bcc.n	8014630 <UpdateReturnRef+0x46>
 8014620:	2e00      	cmp	r6, #0
 8014622:	d160      	bne.n	80146e6 <UpdateReturnRef+0xfc>
 8014624:	3304      	adds	r3, #4
 8014626:	6013      	str	r3, [r2, #0]
 8014628:	6853      	ldr	r3, [r2, #4]
 801462a:	f023 0303 	bic.w	r3, r3, #3
 801462e:	6053      	str	r3, [r2, #4]
 8014630:	2902      	cmp	r1, #2
 8014632:	6004      	str	r4, [r0, #0]
 8014634:	d312      	bcc.n	801465c <UpdateReturnRef+0x72>
 8014636:	4608      	mov	r0, r1
 8014638:	f85d bb04 	ldr.w	fp, [sp], #4
 801463c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8014640:	f7ff be09 	b.w	8014256 <_Z10ReleaseRefPK9ObjHeader>
 8014644:	b154      	cbz	r4, 801465c <UpdateReturnRef+0x72>
 8014646:	6861      	ldr	r1, [r4, #4]
 8014648:	f243 22cc 	movw	r2, #13004	; 0x32cc
 801464c:	f2c2 0200 	movt	r2, #8192	; 0x2000
 8014650:	2900      	cmp	r1, #0
 8014652:	bf18      	it	ne
 8014654:	1a62      	subne	r2, r4, r1
 8014656:	7811      	ldrb	r1, [r2, #0]
 8014658:	0789      	lsls	r1, r1, #30
 801465a:	d002      	beq.n	8014662 <UpdateReturnRef+0x78>
 801465c:	f85d bb04 	ldr.w	fp, [sp], #4
 8014660:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014662:	f020 0601 	bic.w	r6, r0, #1
 8014666:	6835      	ldr	r5, [r6, #0]
 8014668:	b9dd      	cbnz	r5, 80146a2 <UpdateReturnRef+0xb8>
 801466a:	2001      	movs	r0, #1
 801466c:	2114      	movs	r1, #20
 801466e:	f006 ff51 	bl	801b514 <calloc>
 8014672:	4605      	mov	r5, r0
 8014674:	2000      	movs	r0, #0
 8014676:	f44f 6100 	mov.w	r1, #2048	; 0x800
 801467a:	e9c5 0000 	strd	r0, r0, [r5]
 801467e:	e9c5 0002 	strd	r0, r0, [r5, #8]
 8014682:	6128      	str	r0, [r5, #16]
 8014684:	2001      	movs	r0, #1
 8014686:	f006 ff45 	bl	801b514 <calloc>
 801468a:	b3b0      	cbz	r0, 80146fa <UpdateReturnRef+0x110>
 801468c:	2107      	movs	r1, #7
 801468e:	f100 0210 	add.w	r2, r0, #16
 8014692:	e9c0 5101 	strd	r5, r1, [r0, #4]
 8014696:	f500 6100 	add.w	r1, r0, #2048	; 0x800
 801469a:	e9c5 0200 	strd	r0, r2, [r5]
 801469e:	60a9      	str	r1, [r5, #8]
 80146a0:	6035      	str	r5, [r6, #0]
 80146a2:	68e8      	ldr	r0, [r5, #12]
 80146a4:	b110      	cbz	r0, 80146ac <UpdateReturnRef+0xc2>
 80146a6:	6929      	ldr	r1, [r5, #16]
 80146a8:	2910      	cmp	r1, #16
 80146aa:	d30b      	bcc.n	80146c4 <UpdateReturnRef+0xda>
 80146ac:	f242 0080 	movw	r0, #8320	; 0x2080
 80146b0:	2210      	movs	r2, #16
 80146b2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80146b6:	6801      	ldr	r1, [r0, #0]
 80146b8:	4628      	mov	r0, r5
 80146ba:	f000 f828 	bl	801470e <_ZN14ArenaContainer10PlaceArrayEPK8TypeInfoj>
 80146be:	2100      	movs	r1, #0
 80146c0:	e9c5 0103 	strd	r0, r1, [r5, #12]
 80146c4:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 80146c8:	1c4a      	adds	r2, r1, #1
 80146ca:	300c      	adds	r0, #12
 80146cc:	612a      	str	r2, [r5, #16]
 80146ce:	07c1      	lsls	r1, r0, #31
 80146d0:	d094      	beq.n	80145fc <UpdateReturnRef+0x12>
 80146d2:	f644 10ac 	movw	r0, #18860	; 0x49ac
 80146d6:	f644 2100 	movw	r1, #18944	; 0x4a00
 80146da:	f6c0 0002 	movt	r0, #2050	; 0x802
 80146de:	f6c0 0102 	movt	r1, #2050	; 0x802
 80146e2:	f7fd fb3f 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>
 80146e6:	f644 2013 	movw	r0, #18963	; 0x4a13
 80146ea:	f644 2166 	movw	r1, #19046	; 0x4a66
 80146ee:	f6c0 0002 	movt	r0, #2050	; 0x802
 80146f2:	f6c0 0102 	movt	r1, #2050	; 0x802
 80146f6:	f7fd fb35 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>
 80146fa:	f644 304c 	movw	r0, #19276	; 0x4b4c
 80146fe:	f644 319f 	movw	r1, #19359	; 0x4b9f
 8014702:	f6c0 0002 	movt	r0, #2050	; 0x802
 8014706:	f6c0 0102 	movt	r1, #2050	; 0x802
 801470a:	f7fd fb2b 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>

0801470e <_ZN14ArenaContainer10PlaceArrayEPK8TypeInfoj>:
 801470e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014710:	af03      	add	r7, sp, #12
 8014712:	e92d 0b00 	stmdb	sp!, {r8, r9, fp}
 8014716:	4689      	mov	r9, r1
 8014718:	4606      	mov	r6, r0
 801471a:	4690      	mov	r8, r2
 801471c:	f8d9 0014 	ldr.w	r0, [r9, #20]
 8014720:	2800      	cmp	r0, #0
 8014722:	da4b      	bge.n	80147bc <_ZN14ArenaContainer10PlaceArrayEPK8TypeInfoj+0xae>
 8014724:	fb00 f008 	mul.w	r0, r0, r8
 8014728:	f1c0 0013 	rsb	r0, r0, #19
 801472c:	f020 0507 	bic.w	r5, r0, #7
 8014730:	e9d6 0201 	ldrd	r0, r2, [r6, #4]
 8014734:	1941      	adds	r1, r0, r5
 8014736:	4291      	cmp	r1, r2
 8014738:	d204      	bcs.n	8014744 <_ZN14ArenaContainer10PlaceArrayEPK8TypeInfoj+0x36>
 801473a:	2800      	cmp	r0, #0
 801473c:	6071      	str	r1, [r6, #4]
 801473e:	d039      	beq.n	80147b4 <_ZN14ArenaContainer10PlaceArrayEPK8TypeInfoj+0xa6>
 8014740:	6831      	ldr	r1, [r6, #0]
 8014742:	e019      	b.n	8014778 <_ZN14ArenaContainer10PlaceArrayEPK8TypeInfoj+0x6a>
 8014744:	f205 400f 	addw	r0, r5, #1039	; 0x40f
 8014748:	f240 31ff 	movw	r1, #1023	; 0x3ff
 801474c:	ea20 0401 	bic.w	r4, r0, r1
 8014750:	2001      	movs	r0, #1
 8014752:	4621      	mov	r1, r4
 8014754:	f006 fede 	bl	801b514 <calloc>
 8014758:	4601      	mov	r1, r0
 801475a:	b3c9      	cbz	r1, 80147d0 <_ZN14ArenaContainer10PlaceArrayEPK8TypeInfoj+0xc2>
 801475c:	6830      	ldr	r0, [r6, #0]
 801475e:	2207      	movs	r2, #7
 8014760:	e9c1 0600 	strd	r0, r6, [r1]
 8014764:	f101 0010 	add.w	r0, r1, #16
 8014768:	608a      	str	r2, [r1, #8]
 801476a:	190a      	adds	r2, r1, r4
 801476c:	1943      	adds	r3, r0, r5
 801476e:	4293      	cmp	r3, r2
 8014770:	e9c6 1300 	strd	r1, r3, [r6]
 8014774:	60b2      	str	r2, [r6, #8]
 8014776:	d835      	bhi.n	80147e4 <_ZN14ArenaContainer10PlaceArrayEPK8TypeInfoj+0xd6>
 8014778:	68ca      	ldr	r2, [r1, #12]
 801477a:	3210      	adds	r2, #16
 801477c:	60ca      	str	r2, [r1, #12]
 801477e:	3108      	adds	r1, #8
 8014780:	1a42      	subs	r2, r0, r1
 8014782:	e9c0 9200 	strd	r9, r2, [r0]
 8014786:	f243 22cc 	movw	r2, #13004	; 0x32cc
 801478a:	f2c2 0200 	movt	r2, #8192	; 0x2000
 801478e:	bf18      	it	ne
 8014790:	460a      	movne	r2, r1
 8014792:	428a      	cmp	r2, r1
 8014794:	bf02      	ittt	eq
 8014796:	f8c0 8008 	streq.w	r8, [r0, #8]
 801479a:	e8bd 0b00 	ldmiaeq.w	sp!, {r8, r9, fp}
 801479e:	bdf0      	popeq	{r4, r5, r6, r7, pc}
 80147a0:	f644 407c 	movw	r0, #19580	; 0x4c7c
 80147a4:	f644 41cd 	movw	r1, #19661	; 0x4ccd
 80147a8:	f6c0 0002 	movt	r0, #2050	; 0x802
 80147ac:	f6c0 0102 	movt	r1, #2050	; 0x802
 80147b0:	f7fd fad8 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>
 80147b4:	2000      	movs	r0, #0
 80147b6:	e8bd 0b00 	ldmia.w	sp!, {r8, r9, fp}
 80147ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80147bc:	f644 30b3 	movw	r0, #19379	; 0x4bb3
 80147c0:	f644 4106 	movw	r1, #19462	; 0x4c06
 80147c4:	f6c0 0002 	movt	r0, #2050	; 0x802
 80147c8:	f6c0 0102 	movt	r1, #2050	; 0x802
 80147cc:	f7fd faca 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>
 80147d0:	f644 304c 	movw	r0, #19276	; 0x4b4c
 80147d4:	f644 319f 	movw	r1, #19359	; 0x4b9f
 80147d8:	f6c0 0002 	movt	r0, #2050	; 0x802
 80147dc:	f6c0 0102 	movt	r1, #2050	; 0x802
 80147e0:	f7fd fac0 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>
 80147e4:	f644 4017 	movw	r0, #19479	; 0x4c17
 80147e8:	f644 416a 	movw	r1, #19562	; 0x4c6a
 80147ec:	f6c0 0002 	movt	r0, #2050	; 0x802
 80147f0:	f6c0 0102 	movt	r1, #2050	; 0x802
 80147f4:	f7fd fab6 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>

080147f8 <Kotlin_Array_set>:
 80147f8:	b5d0      	push	{r4, r6, r7, lr}
 80147fa:	af02      	add	r7, sp, #8
 80147fc:	6883      	ldr	r3, [r0, #8]
 80147fe:	428b      	cmp	r3, r1
 8014800:	d930      	bls.n	8014864 <Kotlin_Array_set+0x6c>
 8014802:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 8014806:	f100 010c 	add.w	r1, r0, #12
 801480a:	f011 0f01 	tst.w	r1, #1
 801480e:	d12c      	bne.n	801486a <Kotlin_Array_set+0x72>
 8014810:	6808      	ldr	r0, [r1, #0]
 8014812:	4290      	cmp	r0, r2
 8014814:	bf08      	it	eq
 8014816:	bdd0      	popeq	{r4, r6, r7, pc}
 8014818:	b1e2      	cbz	r2, 8014854 <Kotlin_Array_set+0x5c>
 801481a:	f8d2 c004 	ldr.w	ip, [r2, #4]
 801481e:	f243 23cc 	movw	r3, #13004	; 0x32cc
 8014822:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8014826:	f1bc 0f00 	cmp.w	ip, #0
 801482a:	bf18      	it	ne
 801482c:	eba2 030c 	subne.w	r3, r2, ip
 8014830:	f8d3 c000 	ldr.w	ip, [r3]
 8014834:	f00c 0e03 	and.w	lr, ip, #3
 8014838:	f1ae 0402 	sub.w	r4, lr, #2
 801483c:	2c02      	cmp	r4, #2
 801483e:	d309      	bcc.n	8014854 <Kotlin_Array_set+0x5c>
 8014840:	f1be 0f00 	cmp.w	lr, #0
 8014844:	d11b      	bne.n	801487e <Kotlin_Array_set+0x86>
 8014846:	f10c 0404 	add.w	r4, ip, #4
 801484a:	601c      	str	r4, [r3, #0]
 801484c:	685c      	ldr	r4, [r3, #4]
 801484e:	f024 0403 	bic.w	r4, r4, #3
 8014852:	605c      	str	r4, [r3, #4]
 8014854:	2802      	cmp	r0, #2
 8014856:	600a      	str	r2, [r1, #0]
 8014858:	d303      	bcc.n	8014862 <Kotlin_Array_set+0x6a>
 801485a:	e8bd 40d0 	ldmia.w	sp!, {r4, r6, r7, lr}
 801485e:	f7ff bcfa 	b.w	8014256 <_Z10ReleaseRefPK9ObjHeader>
 8014862:	bdd0      	pop	{r4, r6, r7, pc}
 8014864:	2000      	movs	r0, #0
 8014866:	f7fb fa41 	bl	800fcec <ThrowArrayIndexOutOfBoundsException>
 801486a:	f644 10ac 	movw	r0, #18860	; 0x49ac
 801486e:	f644 2100 	movw	r1, #18944	; 0x4a00
 8014872:	f6c0 0002 	movt	r0, #2050	; 0x802
 8014876:	f6c0 0102 	movt	r1, #2050	; 0x802
 801487a:	f7fd fa73 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>
 801487e:	f644 2013 	movw	r0, #18963	; 0x4a13
 8014882:	f644 2166 	movw	r1, #19046	; 0x4a66
 8014886:	f6c0 0002 	movt	r0, #2050	; 0x802
 801488a:	f6c0 0102 	movt	r1, #2050	; 0x802
 801488e:	f7fd fa69 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>

08014892 <Kotlin_Array_getArrayLength>:
 8014892:	6880      	ldr	r0, [r0, #8]
 8014894:	4770      	bx	lr

08014896 <Kotlin_ByteArray_get>:
 8014896:	6882      	ldr	r2, [r0, #8]
 8014898:	428a      	cmp	r2, r1
 801489a:	bf82      	ittt	hi
 801489c:	4408      	addhi	r0, r1
 801489e:	f990 000c 	ldrsbhi.w	r0, [r0, #12]
 80148a2:	4770      	bxhi	lr
 80148a4:	b580      	push	{r7, lr}
 80148a6:	466f      	mov	r7, sp
 80148a8:	2000      	movs	r0, #0
 80148aa:	f7fb fa1f 	bl	800fcec <ThrowArrayIndexOutOfBoundsException>

080148ae <Kotlin_ByteArray_set>:
 80148ae:	6883      	ldr	r3, [r0, #8]
 80148b0:	428b      	cmp	r3, r1
 80148b2:	bf82      	ittt	hi
 80148b4:	4408      	addhi	r0, r1
 80148b6:	7302      	strbhi	r2, [r0, #12]
 80148b8:	4770      	bxhi	lr
 80148ba:	b580      	push	{r7, lr}
 80148bc:	466f      	mov	r7, sp
 80148be:	2000      	movs	r0, #0
 80148c0:	f7fb fa14 	bl	800fcec <ThrowArrayIndexOutOfBoundsException>

080148c4 <Kotlin_ByteArray_getArrayLength>:
 80148c4:	6880      	ldr	r0, [r0, #8]
 80148c6:	4770      	bx	lr

080148c8 <Kotlin_CharArray_get>:
 80148c8:	6882      	ldr	r2, [r0, #8]
 80148ca:	428a      	cmp	r2, r1
 80148cc:	bf82      	ittt	hi
 80148ce:	eb00 0041 	addhi.w	r0, r0, r1, lsl #1
 80148d2:	8980      	ldrhhi	r0, [r0, #12]
 80148d4:	4770      	bxhi	lr
 80148d6:	b580      	push	{r7, lr}
 80148d8:	466f      	mov	r7, sp
 80148da:	2000      	movs	r0, #0
 80148dc:	f7fb fa06 	bl	800fcec <ThrowArrayIndexOutOfBoundsException>

080148e0 <Kotlin_CharArray_set>:
 80148e0:	6883      	ldr	r3, [r0, #8]
 80148e2:	428b      	cmp	r3, r1
 80148e4:	bf82      	ittt	hi
 80148e6:	eb00 0041 	addhi.w	r0, r0, r1, lsl #1
 80148ea:	8182      	strhhi	r2, [r0, #12]
 80148ec:	4770      	bxhi	lr
 80148ee:	b580      	push	{r7, lr}
 80148f0:	466f      	mov	r7, sp
 80148f2:	2000      	movs	r0, #0
 80148f4:	f7fb f9fa 	bl	800fcec <ThrowArrayIndexOutOfBoundsException>

080148f8 <AllocArrayInstance>:
 80148f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80148fa:	af03      	add	r7, sp, #12
 80148fc:	f84d 8d04 	str.w	r8, [sp, #-4]!
 8014900:	4605      	mov	r5, r0
 8014902:	4616      	mov	r6, r2
 8014904:	4688      	mov	r8, r1
 8014906:	6968      	ldr	r0, [r5, #20]
 8014908:	2800      	cmp	r0, #0
 801490a:	da4c      	bge.n	80149a6 <AllocArrayInstance+0xae>
 801490c:	07f1      	lsls	r1, r6, #31
 801490e:	d120      	bne.n	8014952 <AllocArrayInstance+0x5a>
 8014910:	fb00 f008 	mul.w	r0, r0, r8
 8014914:	f1c0 001b 	rsb	r0, r0, #27
 8014918:	f020 0107 	bic.w	r1, r0, #7
 801491c:	2001      	movs	r0, #1
 801491e:	f006 fdf9 	bl	801b514 <calloc>
 8014922:	4604      	mov	r4, r0
 8014924:	f240 1074 	movw	r0, #372	; 0x174
 8014928:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801492c:	2c00      	cmp	r4, #0
 801492e:	6801      	ldr	r1, [r0, #0]
 8014930:	f101 0101 	add.w	r1, r1, #1
 8014934:	6001      	str	r1, [r0, #0]
 8014936:	d040      	beq.n	80149ba <AllocArrayInstance+0xc2>
 8014938:	f844 5f08 	str.w	r5, [r4, #8]!
 801493c:	2010      	movs	r0, #16
 801493e:	f844 0c04 	str.w	r0, [r4, #-4]
 8014942:	2008      	movs	r0, #8
 8014944:	4621      	mov	r1, r4
 8014946:	e9c4 0801 	strd	r0, r8, [r4, #4]
 801494a:	4630      	mov	r0, r6
 801494c:	f7ff fe4d 	bl	80145ea <UpdateReturnRef>
 8014950:	e025      	b.n	801499e <AllocArrayInstance+0xa6>
 8014952:	f026 0401 	bic.w	r4, r6, #1
 8014956:	6826      	ldr	r6, [r4, #0]
 8014958:	b9de      	cbnz	r6, 8014992 <AllocArrayInstance+0x9a>
 801495a:	2001      	movs	r0, #1
 801495c:	2114      	movs	r1, #20
 801495e:	f006 fdd9 	bl	801b514 <calloc>
 8014962:	4606      	mov	r6, r0
 8014964:	2000      	movs	r0, #0
 8014966:	f44f 6100 	mov.w	r1, #2048	; 0x800
 801496a:	e9c6 0000 	strd	r0, r0, [r6]
 801496e:	e9c6 0002 	strd	r0, r0, [r6, #8]
 8014972:	6130      	str	r0, [r6, #16]
 8014974:	2001      	movs	r0, #1
 8014976:	f006 fdcd 	bl	801b514 <calloc>
 801497a:	b318      	cbz	r0, 80149c4 <AllocArrayInstance+0xcc>
 801497c:	2107      	movs	r1, #7
 801497e:	f100 0210 	add.w	r2, r0, #16
 8014982:	e9c0 6101 	strd	r6, r1, [r0, #4]
 8014986:	f500 6100 	add.w	r1, r0, #2048	; 0x800
 801498a:	e9c6 0200 	strd	r0, r2, [r6]
 801498e:	60b1      	str	r1, [r6, #8]
 8014990:	6026      	str	r6, [r4, #0]
 8014992:	4630      	mov	r0, r6
 8014994:	4629      	mov	r1, r5
 8014996:	4642      	mov	r2, r8
 8014998:	f7ff feb9 	bl	801470e <_ZN14ArenaContainer10PlaceArrayEPK8TypeInfoj>
 801499c:	4604      	mov	r4, r0
 801499e:	4620      	mov	r0, r4
 80149a0:	f85d 8b04 	ldr.w	r8, [sp], #4
 80149a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80149a6:	f644 40e2 	movw	r0, #19682	; 0x4ce2
 80149aa:	f644 4106 	movw	r1, #19462	; 0x4c06
 80149ae:	f6c0 0002 	movt	r0, #2050	; 0x802
 80149b2:	f6c0 0102 	movt	r1, #2050	; 0x802
 80149b6:	f7fd f9d5 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>
 80149ba:	f644 5036 	movw	r0, #19766	; 0x4d36
 80149be:	f6c0 0002 	movt	r0, #2050	; 0x802
 80149c2:	e003      	b.n	80149cc <AllocArrayInstance+0xd4>
 80149c4:	f644 304c 	movw	r0, #19276	; 0x4b4c
 80149c8:	f6c0 0002 	movt	r0, #2050	; 0x802
 80149cc:	f644 319f 	movw	r1, #19359	; 0x4b9f
 80149d0:	f6c0 0102 	movt	r1, #2050	; 0x802
 80149d4:	f7fd f9c6 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>

080149d8 <Kotlin_CharArray_getArrayLength>:
 80149d8:	6880      	ldr	r0, [r0, #8]
 80149da:	4770      	bx	lr

080149dc <Kotlin_CharArray_copyImpl>:
 80149dc:	b580      	push	{r7, lr}
 80149de:	466f      	mov	r7, sp
 80149e0:	f8d7 c008 	ldr.w	ip, [r7, #8]
 80149e4:	ea4c 0e01 	orr.w	lr, ip, r1
 80149e8:	f1be 0f00 	cmp.w	lr, #0
 80149ec:	db1b      	blt.n	8014a26 <Kotlin_CharArray_copyImpl+0x4a>
 80149ee:	2b00      	cmp	r3, #0
 80149f0:	db19      	blt.n	8014a26 <Kotlin_CharArray_copyImpl+0x4a>
 80149f2:	f8d0 e008 	ldr.w	lr, [r0, #8]
 80149f6:	ebae 0e01 	sub.w	lr, lr, r1
 80149fa:	45e6      	cmp	lr, ip
 80149fc:	bf22      	ittt	cs
 80149fe:	f8d2 e008 	ldrcs.w	lr, [r2, #8]
 8014a02:	ebae 0e03 	subcs.w	lr, lr, r3
 8014a06:	45e6      	cmpcs	lr, ip
 8014a08:	d30d      	bcc.n	8014a26 <Kotlin_CharArray_copyImpl+0x4a>
 8014a0a:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8014a0e:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8014a12:	f102 030c 	add.w	r3, r2, #12
 8014a16:	f100 010c 	add.w	r1, r0, #12
 8014a1a:	ea4f 024c 	mov.w	r2, ip, lsl #1
 8014a1e:	4618      	mov	r0, r3
 8014a20:	f006 fd70 	bl	801b504 <__aeabi_memmove>
 8014a24:	bd80      	pop	{r7, pc}
 8014a26:	2000      	movs	r0, #0
 8014a28:	f7fb f960 	bl	800fcec <ThrowArrayIndexOutOfBoundsException>

08014a2c <Kotlin_io_Console_print>:
 8014a2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014a2e:	af03      	add	r7, sp, #12
 8014a30:	f84d 8d04 	str.w	r8, [sp, #-4]!
 8014a34:	b084      	sub	sp, #16
 8014a36:	f242 01d4 	movw	r1, #8404	; 0x20d4
 8014a3a:	6802      	ldr	r2, [r0, #0]
 8014a3c:	f2c2 0100 	movt	r1, #8192	; 0x2000
 8014a40:	6809      	ldr	r1, [r1, #0]
 8014a42:	428a      	cmp	r2, r1
 8014a44:	d15e      	bne.n	8014b04 <Kotlin_io_Console_print+0xd8>
 8014a46:	2200      	movs	r2, #0
 8014a48:	9203      	str	r2, [sp, #12]
 8014a4a:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8014a4e:	6881      	ldr	r1, [r0, #8]
 8014a50:	ebb2 0f41 	cmp.w	r2, r1, lsl #1
 8014a54:	d039      	beq.n	8014aca <Kotlin_io_Console_print+0x9e>
 8014a56:	f242 4800 	movw	r8, #9216	; 0x2400
 8014a5a:	f100 060c 	add.w	r6, r0, #12
 8014a5e:	ac01      	add	r4, sp, #4
 8014a60:	eb06 0541 	add.w	r5, r6, r1, lsl #1
 8014a64:	f6cf 48a0 	movt	r8, #64672	; 0xfca0
 8014a68:	4631      	mov	r1, r6
 8014a6a:	f831 0b02 	ldrh.w	r0, [r1], #2
 8014a6e:	f400 427c 	and.w	r2, r0, #64512	; 0xfc00
 8014a72:	f5b2 4f58 	cmp.w	r2, #55296	; 0xd800
 8014a76:	d10c      	bne.n	8014a92 <Kotlin_io_Console_print+0x66>
 8014a78:	42a9      	cmp	r1, r5
 8014a7a:	d01a      	beq.n	8014ab2 <Kotlin_io_Console_print+0x86>
 8014a7c:	880a      	ldrh	r2, [r1, #0]
 8014a7e:	f402 437c 	and.w	r3, r2, #64512	; 0xfc00
 8014a82:	f5b3 4f5c 	cmp.w	r3, #56320	; 0xdc00
 8014a86:	d10a      	bne.n	8014a9e <Kotlin_io_Console_print+0x72>
 8014a88:	eb02 2080 	add.w	r0, r2, r0, lsl #10
 8014a8c:	3604      	adds	r6, #4
 8014a8e:	4440      	add	r0, r8
 8014a90:	e008      	b.n	8014aa4 <Kotlin_io_Console_print+0x78>
 8014a92:	f5b2 4f5c 	cmp.w	r2, #56320	; 0xdc00
 8014a96:	bf08      	it	eq
 8014a98:	f64f 70fd 	movweq	r0, #65533	; 0xfffd
 8014a9c:	e001      	b.n	8014aa2 <Kotlin_io_Console_print+0x76>
 8014a9e:	f64f 70fd 	movw	r0, #65533	; 0xfffd
 8014aa2:	460e      	mov	r6, r1
 8014aa4:	4621      	mov	r1, r4
 8014aa6:	f000 f89a 	bl	8014bde <_ZN4utf89unchecked6appendINSt3__120back_insert_iteratorINS2_12basic_stringIcNS2_11char_traitsIcEE14KonanAllocatorIcEEEEEEET_jSB_>
 8014aaa:	4604      	mov	r4, r0
 8014aac:	42ae      	cmp	r6, r5
 8014aae:	d1db      	bne.n	8014a68 <Kotlin_io_Console_print+0x3c>
 8014ab0:	e00b      	b.n	8014aca <Kotlin_io_Console_print+0x9e>
 8014ab2:	4620      	mov	r0, r4
 8014ab4:	21ef      	movs	r1, #239	; 0xef
 8014ab6:	f000 f82f 	bl	8014b18 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14KonanAllocatorIcEE9push_backEc>
 8014aba:	4620      	mov	r0, r4
 8014abc:	21bf      	movs	r1, #191	; 0xbf
 8014abe:	f000 f82b 	bl	8014b18 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14KonanAllocatorIcEE9push_backEc>
 8014ac2:	4620      	mov	r0, r4
 8014ac4:	21bd      	movs	r1, #189	; 0xbd
 8014ac6:	f000 f827 	bl	8014b18 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14KonanAllocatorIcEE9push_backEc>
 8014aca:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8014ace:	a801      	add	r0, sp, #4
 8014ad0:	f013 0101 	ands.w	r1, r3, #1
 8014ad4:	9903      	ldr	r1, [sp, #12]
 8014ad6:	bf08      	it	eq
 8014ad8:	f040 0101 	orreq.w	r1, r0, #1
 8014adc:	9a02      	ldr	r2, [sp, #8]
 8014ade:	f04f 0001 	mov.w	r0, #1
 8014ae2:	bf08      	it	eq
 8014ae4:	085a      	lsreq	r2, r3, #1
 8014ae6:	f004 ff29 	bl	801993c <_write>
 8014aea:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8014aee:	07c0      	lsls	r0, r0, #31
 8014af0:	d004      	beq.n	8014afc <Kotlin_io_Console_print+0xd0>
 8014af2:	9803      	ldr	r0, [sp, #12]
 8014af4:	2800      	cmp	r0, #0
 8014af6:	bf18      	it	ne
 8014af8:	f006 ffb0 	blne	801ba5c <free>
 8014afc:	b004      	add	sp, #16
 8014afe:	f85d 8b04 	ldr.w	r8, [sp], #4
 8014b02:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014b04:	f644 5089 	movw	r0, #19849	; 0x4d89
 8014b08:	f245 11ff 	movw	r1, #20991	; 0x51ff
 8014b0c:	f6c0 0002 	movt	r0, #2050	; 0x802
 8014b10:	f6c0 0102 	movt	r1, #2050	; 0x802
 8014b14:	f7fd f926 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>

08014b18 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14KonanAllocatorIcEE9push_backEc>:
 8014b18:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014b1a:	af03      	add	r7, sp, #12
 8014b1c:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 8014b20:	b081      	sub	sp, #4
 8014b22:	4605      	mov	r5, r0
 8014b24:	4688      	mov	r8, r1
 8014b26:	7828      	ldrb	r0, [r5, #0]
 8014b28:	f010 0101 	ands.w	r1, r0, #1
 8014b2c:	d009      	beq.n	8014b42 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14KonanAllocatorIcEE9push_backEc+0x2a>
 8014b2e:	e9d5 2b00 	ldrd	r2, fp, [r5]
 8014b32:	f022 0301 	bic.w	r3, r2, #1
 8014b36:	1e5e      	subs	r6, r3, #1
 8014b38:	45b3      	cmp	fp, r6
 8014b3a:	d008      	beq.n	8014b4e <_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14KonanAllocatorIcEE9push_backEc+0x36>
 8014b3c:	b321      	cbz	r1, 8014b88 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14KonanAllocatorIcEE9push_backEc+0x70>
 8014b3e:	68ac      	ldr	r4, [r5, #8]
 8014b40:	e040      	b.n	8014bc4 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14KonanAllocatorIcEE9push_backEc+0xac>
 8014b42:	ea4f 0b50 	mov.w	fp, r0, lsr #1
 8014b46:	260a      	movs	r6, #10
 8014b48:	4602      	mov	r2, r0
 8014b4a:	45b3      	cmp	fp, r6
 8014b4c:	d1f6      	bne.n	8014b3c <_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14KonanAllocatorIcEE9push_backEc+0x24>
 8014b4e:	f116 0111 	adds.w	r1, r6, #17
 8014b52:	bf08      	it	eq
 8014b54:	4602      	moveq	r2, r0
 8014b56:	07d0      	lsls	r0, r2, #31
 8014b58:	f64f 70e6 	movw	r0, #65510	; 0xffe6
 8014b5c:	bf0c      	ite	eq
 8014b5e:	f105 0901 	addeq.w	r9, r5, #1
 8014b62:	f8d5 9008 	ldrne.w	r9, [r5, #8]
 8014b66:	f6c7 70ff 	movt	r0, #32767	; 0x7fff
 8014b6a:	4286      	cmp	r6, r0
 8014b6c:	d813      	bhi.n	8014b96 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14KonanAllocatorIcEE9push_backEc+0x7e>
 8014b6e:	1c70      	adds	r0, r6, #1
 8014b70:	ebb0 0f46 	cmp.w	r0, r6, lsl #1
 8014b74:	bf38      	it	cc
 8014b76:	0070      	lslcc	r0, r6, #1
 8014b78:	280b      	cmp	r0, #11
 8014b7a:	bf26      	itte	cs
 8014b7c:	3010      	addcs	r0, #16
 8014b7e:	f020 0a0f 	biccs.w	sl, r0, #15
 8014b82:	f04f 0a0b 	movcc.w	sl, #11
 8014b86:	e008      	b.n	8014b9a <_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14KonanAllocatorIcEE9push_backEc+0x82>
 8014b88:	2002      	movs	r0, #2
 8014b8a:	eb00 004b 	add.w	r0, r0, fp, lsl #1
 8014b8e:	f805 0b01 	strb.w	r0, [r5], #1
 8014b92:	462c      	mov	r4, r5
 8014b94:	e019      	b.n	8014bca <_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14KonanAllocatorIcEE9push_backEc+0xb2>
 8014b96:	f06f 0a10 	mvn.w	sl, #16
 8014b9a:	2001      	movs	r0, #1
 8014b9c:	4651      	mov	r1, sl
 8014b9e:	f006 fcb9 	bl	801b514 <calloc>
 8014ba2:	4649      	mov	r1, r9
 8014ba4:	4632      	mov	r2, r6
 8014ba6:	4604      	mov	r4, r0
 8014ba8:	f006 fcaa 	bl	801b500 <__aeabi_memcpy>
 8014bac:	2e0a      	cmp	r6, #10
 8014bae:	bf18      	it	ne
 8014bb0:	f1b9 0f00 	cmpne.w	r9, #0
 8014bb4:	d002      	beq.n	8014bbc <_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14KonanAllocatorIcEE9push_backEc+0xa4>
 8014bb6:	4648      	mov	r0, r9
 8014bb8:	f006 ff50 	bl	801ba5c <free>
 8014bbc:	f04a 0001 	orr.w	r0, sl, #1
 8014bc0:	60ac      	str	r4, [r5, #8]
 8014bc2:	6028      	str	r0, [r5, #0]
 8014bc4:	f10b 0001 	add.w	r0, fp, #1
 8014bc8:	6068      	str	r0, [r5, #4]
 8014bca:	eb04 000b 	add.w	r0, r4, fp
 8014bce:	2100      	movs	r1, #0
 8014bd0:	f804 800b 	strb.w	r8, [r4, fp]
 8014bd4:	7041      	strb	r1, [r0, #1]
 8014bd6:	b001      	add	sp, #4
 8014bd8:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 8014bdc:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014bde <_ZN4utf89unchecked6appendINSt3__120back_insert_iteratorINS2_12basic_stringIcNS2_11char_traitsIcEE14KonanAllocatorIcEEEEEEET_jSB_>:
 8014bde:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014be0:	af03      	add	r7, sp, #12
 8014be2:	f84d bd04 	str.w	fp, [sp, #-4]!
 8014be6:	4605      	mov	r5, r0
 8014be8:	460c      	mov	r4, r1
 8014bea:	2d7f      	cmp	r5, #127	; 0x7f
 8014bec:	d802      	bhi.n	8014bf4 <_ZN4utf89unchecked6appendINSt3__120back_insert_iteratorINS2_12basic_stringIcNS2_11char_traitsIcEE14KonanAllocatorIcEEEEEEET_jSB_+0x16>
 8014bee:	b2e9      	uxtb	r1, r5
 8014bf0:	4620      	mov	r0, r4
 8014bf2:	e033      	b.n	8014c5c <_ZN4utf89unchecked6appendINSt3__120back_insert_iteratorINS2_12basic_stringIcNS2_11char_traitsIcEE14KonanAllocatorIcEEEEEEET_jSB_+0x7e>
 8014bf4:	2000      	movs	r0, #0
 8014bf6:	ebb0 2fd5 	cmp.w	r0, r5, lsr #11
 8014bfa:	d10a      	bne.n	8014c12 <_ZN4utf89unchecked6appendINSt3__120back_insert_iteratorINS2_12basic_stringIcNS2_11char_traitsIcEE14KonanAllocatorIcEEEEEEET_jSB_+0x34>
 8014bfc:	20c0      	movs	r0, #192	; 0xc0
 8014bfe:	ea40 1095 	orr.w	r0, r0, r5, lsr #6
 8014c02:	b2c1      	uxtb	r1, r0
 8014c04:	4620      	mov	r0, r4
 8014c06:	f7ff ff87 	bl	8014b18 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14KonanAllocatorIcEE9push_backEc>
 8014c0a:	2002      	movs	r0, #2
 8014c0c:	f360 159f 	bfi	r5, r0, #6, #26
 8014c10:	e022      	b.n	8014c58 <_ZN4utf89unchecked6appendINSt3__120back_insert_iteratorINS2_12basic_stringIcNS2_11char_traitsIcEE14KonanAllocatorIcEEEEEEET_jSB_+0x7a>
 8014c12:	ebb0 4f15 	cmp.w	r0, r5, lsr #16
 8014c16:	d109      	bne.n	8014c2c <_ZN4utf89unchecked6appendINSt3__120back_insert_iteratorINS2_12basic_stringIcNS2_11char_traitsIcEE14KonanAllocatorIcEEEEEEET_jSB_+0x4e>
 8014c18:	20e0      	movs	r0, #224	; 0xe0
 8014c1a:	ea40 3015 	orr.w	r0, r0, r5, lsr #12
 8014c1e:	b2c1      	uxtb	r1, r0
 8014c20:	4620      	mov	r0, r4
 8014c22:	f7ff ff79 	bl	8014b18 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14KonanAllocatorIcEE9push_backEc>
 8014c26:	09a9      	lsrs	r1, r5, #6
 8014c28:	2602      	movs	r6, #2
 8014c2a:	e00e      	b.n	8014c4a <_ZN4utf89unchecked6appendINSt3__120back_insert_iteratorINS2_12basic_stringIcNS2_11char_traitsIcEE14KonanAllocatorIcEEEEEEET_jSB_+0x6c>
 8014c2c:	20f0      	movs	r0, #240	; 0xf0
 8014c2e:	ea40 4095 	orr.w	r0, r0, r5, lsr #18
 8014c32:	b2c1      	uxtb	r1, r0
 8014c34:	4620      	mov	r0, r4
 8014c36:	f7ff ff6f 	bl	8014b18 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14KonanAllocatorIcEE9push_backEc>
 8014c3a:	0b29      	lsrs	r1, r5, #12
 8014c3c:	2602      	movs	r6, #2
 8014c3e:	4620      	mov	r0, r4
 8014c40:	f366 119f 	bfi	r1, r6, #6, #26
 8014c44:	f7ff ff68 	bl	8014b18 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14KonanAllocatorIcEE9push_backEc>
 8014c48:	09a9      	lsrs	r1, r5, #6
 8014c4a:	f366 119f 	bfi	r1, r6, #6, #26
 8014c4e:	4620      	mov	r0, r4
 8014c50:	f7ff ff62 	bl	8014b18 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14KonanAllocatorIcEE9push_backEc>
 8014c54:	f366 159f 	bfi	r5, r6, #6, #26
 8014c58:	4620      	mov	r0, r4
 8014c5a:	4629      	mov	r1, r5
 8014c5c:	f7ff ff5c 	bl	8014b18 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14KonanAllocatorIcEE9push_backEc>
 8014c60:	4620      	mov	r0, r4
 8014c62:	f85d bb04 	ldr.w	fp, [sp], #4
 8014c66:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014c68 <Kotlin_io_Console_println>:
 8014c68:	b580      	push	{r7, lr}
 8014c6a:	466f      	mov	r7, sp
 8014c6c:	f7ff fede 	bl	8014a2c <Kotlin_io_Console_print>
 8014c70:	f246 6174 	movw	r1, #26228	; 0x6674
 8014c74:	2001      	movs	r0, #1
 8014c76:	2201      	movs	r2, #1
 8014c78:	f6c0 0102 	movt	r1, #2050	; 0x802
 8014c7c:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8014c80:	f004 be5c 	b.w	801993c <_write>

08014c84 <_ZN12_GLOBAL__N_111utf8ToUtf16EPKcjPP9ObjHeader>:
 8014c84:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014c86:	af03      	add	r7, sp, #12
 8014c88:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 8014c8c:	b083      	sub	sp, #12
 8014c8e:	468a      	mov	sl, r1
 8014c90:	4683      	mov	fp, r0
 8014c92:	f04f 0800 	mov.w	r8, #0
 8014c96:	9200      	str	r2, [sp, #0]
 8014c98:	eb0b 050a 	add.w	r5, fp, sl
 8014c9c:	f1ba 0f01 	cmp.w	sl, #1
 8014ca0:	f8cd b004 	str.w	fp, [sp, #4]
 8014ca4:	db29      	blt.n	8014cfa <_ZN12_GLOBAL__N_111utf8ToUtf16EPKcjPP9ObjHeader+0x76>
 8014ca6:	f10d 0904 	add.w	r9, sp, #4
 8014caa:	ac02      	add	r4, sp, #8
 8014cac:	2600      	movs	r6, #0
 8014cae:	4648      	mov	r0, r9
 8014cb0:	4629      	mov	r1, r5
 8014cb2:	4622      	mov	r2, r4
 8014cb4:	f8cd 8008 	str.w	r8, [sp, #8]
 8014cb8:	f000 f86c 	bl	8014d94 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj>
 8014cbc:	b168      	cbz	r0, 8014cda <_ZN12_GLOBAL__N_111utf8ToUtf16EPKcjPP9ObjHeader+0x56>
 8014cbe:	2802      	cmp	r0, #2
 8014cc0:	d013      	beq.n	8014cea <_ZN12_GLOBAL__N_111utf8ToUtf16EPKcjPP9ObjHeader+0x66>
 8014cc2:	9801      	ldr	r0, [sp, #4]
 8014cc4:	3001      	adds	r0, #1
 8014cc6:	42a8      	cmp	r0, r5
 8014cc8:	9001      	str	r0, [sp, #4]
 8014cca:	d204      	bcs.n	8014cd6 <_ZN12_GLOBAL__N_111utf8ToUtf16EPKcjPP9ObjHeader+0x52>
 8014ccc:	7801      	ldrb	r1, [r0, #0]
 8014cce:	f001 01c0 	and.w	r1, r1, #192	; 0xc0
 8014cd2:	2980      	cmp	r1, #128	; 0x80
 8014cd4:	d0f6      	beq.n	8014cc4 <_ZN12_GLOBAL__N_111utf8ToUtf16EPKcjPP9ObjHeader+0x40>
 8014cd6:	2101      	movs	r1, #1
 8014cd8:	e00b      	b.n	8014cf2 <_ZN12_GLOBAL__N_111utf8ToUtf16EPKcjPP9ObjHeader+0x6e>
 8014cda:	f8bd 000a 	ldrh.w	r0, [sp, #10]
 8014cde:	2101      	movs	r1, #1
 8014ce0:	2800      	cmp	r0, #0
 8014ce2:	bf18      	it	ne
 8014ce4:	2102      	movne	r1, #2
 8014ce6:	9801      	ldr	r0, [sp, #4]
 8014ce8:	e003      	b.n	8014cf2 <_ZN12_GLOBAL__N_111utf8ToUtf16EPKcjPP9ObjHeader+0x6e>
 8014cea:	9801      	ldr	r0, [sp, #4]
 8014cec:	2101      	movs	r1, #1
 8014cee:	3001      	adds	r0, #1
 8014cf0:	9001      	str	r0, [sp, #4]
 8014cf2:	440e      	add	r6, r1
 8014cf4:	42a8      	cmp	r0, r5
 8014cf6:	d3da      	bcc.n	8014cae <_ZN12_GLOBAL__N_111utf8ToUtf16EPKcjPP9ObjHeader+0x2a>
 8014cf8:	e000      	b.n	8014cfc <_ZN12_GLOBAL__N_111utf8ToUtf16EPKcjPP9ObjHeader+0x78>
 8014cfa:	2600      	movs	r6, #0
 8014cfc:	f242 00d4 	movw	r0, #8404	; 0x20d4
 8014d00:	9a00      	ldr	r2, [sp, #0]
 8014d02:	4631      	mov	r1, r6
 8014d04:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8014d08:	6800      	ldr	r0, [r0, #0]
 8014d0a:	f7ff fdf5 	bl	80148f8 <AllocArrayInstance>
 8014d0e:	4681      	mov	r9, r0
 8014d10:	f1ba 0f00 	cmp.w	sl, #0
 8014d14:	f8cd b004 	str.w	fp, [sp, #4]
 8014d18:	d033      	beq.n	8014d82 <_ZN12_GLOBAL__N_111utf8ToUtf16EPKcjPP9ObjHeader+0xfe>
 8014d1a:	f109 040c 	add.w	r4, r9, #12
 8014d1e:	f04f 0800 	mov.w	r8, #0
 8014d22:	f10d 0a04 	add.w	sl, sp, #4
 8014d26:	ae02      	add	r6, sp, #8
 8014d28:	f24d 7bc0 	movw	fp, #55232	; 0xd7c0
 8014d2c:	4650      	mov	r0, sl
 8014d2e:	4629      	mov	r1, r5
 8014d30:	4632      	mov	r2, r6
 8014d32:	f8cd 8008 	str.w	r8, [sp, #8]
 8014d36:	f000 f82d 	bl	8014d94 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj>
 8014d3a:	b160      	cbz	r0, 8014d56 <_ZN12_GLOBAL__N_111utf8ToUtf16EPKcjPP9ObjHeader+0xd2>
 8014d3c:	2802      	cmp	r0, #2
 8014d3e:	d016      	beq.n	8014d6e <_ZN12_GLOBAL__N_111utf8ToUtf16EPKcjPP9ObjHeader+0xea>
 8014d40:	9801      	ldr	r0, [sp, #4]
 8014d42:	3001      	adds	r0, #1
 8014d44:	42a8      	cmp	r0, r5
 8014d46:	9001      	str	r0, [sp, #4]
 8014d48:	d214      	bcs.n	8014d74 <_ZN12_GLOBAL__N_111utf8ToUtf16EPKcjPP9ObjHeader+0xf0>
 8014d4a:	7801      	ldrb	r1, [r0, #0]
 8014d4c:	f001 01c0 	and.w	r1, r1, #192	; 0xc0
 8014d50:	2980      	cmp	r1, #128	; 0x80
 8014d52:	d0f6      	beq.n	8014d42 <_ZN12_GLOBAL__N_111utf8ToUtf16EPKcjPP9ObjHeader+0xbe>
 8014d54:	e00e      	b.n	8014d74 <_ZN12_GLOBAL__N_111utf8ToUtf16EPKcjPP9ObjHeader+0xf0>
 8014d56:	9802      	ldr	r0, [sp, #8]
 8014d58:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8014d5c:	d30c      	bcc.n	8014d78 <_ZN12_GLOBAL__N_111utf8ToUtf16EPKcjPP9ObjHeader+0xf4>
 8014d5e:	eb0b 2190 	add.w	r1, fp, r0, lsr #10
 8014d62:	2237      	movs	r2, #55	; 0x37
 8014d64:	f362 209f 	bfi	r0, r2, #10, #22
 8014d68:	f824 1b02 	strh.w	r1, [r4], #2
 8014d6c:	e004      	b.n	8014d78 <_ZN12_GLOBAL__N_111utf8ToUtf16EPKcjPP9ObjHeader+0xf4>
 8014d6e:	9801      	ldr	r0, [sp, #4]
 8014d70:	3001      	adds	r0, #1
 8014d72:	9001      	str	r0, [sp, #4]
 8014d74:	f64f 70fd 	movw	r0, #65533	; 0xfffd
 8014d78:	f824 0b02 	strh.w	r0, [r4], #2
 8014d7c:	9801      	ldr	r0, [sp, #4]
 8014d7e:	42a8      	cmp	r0, r5
 8014d80:	d1d4      	bne.n	8014d2c <_ZN12_GLOBAL__N_111utf8ToUtf16EPKcjPP9ObjHeader+0xa8>
 8014d82:	9800      	ldr	r0, [sp, #0]
 8014d84:	4649      	mov	r1, r9
 8014d86:	f7ff fc30 	bl	80145ea <UpdateReturnRef>
 8014d8a:	4648      	mov	r0, r9
 8014d8c:	b003      	add	sp, #12
 8014d8e:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 8014d92:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014d94 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj>:
 8014d94:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014d96:	af03      	add	r7, sp, #12
 8014d98:	f84d bd04 	str.w	fp, [sp, #-4]!
 8014d9c:	f8d0 c000 	ldr.w	ip, [r0]
 8014da0:	f99c 5000 	ldrsb.w	r5, [ip]
 8014da4:	b2eb      	uxtb	r3, r5
 8014da6:	f1b5 3fff 	cmp.w	r5, #4294967295	; 0xffffffff
 8014daa:	dd17      	ble.n	8014ddc <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x48>
 8014dac:	2401      	movs	r4, #1
 8014dae:	458c      	cmp	ip, r1
 8014db0:	f000 808f 	beq.w	8014ed2 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x13e>
 8014db4:	46e6      	mov	lr, ip
 8014db6:	0c1d      	lsrs	r5, r3, #16
 8014db8:	2105      	movs	r1, #5
 8014dba:	2d10      	cmp	r5, #16
 8014dbc:	f200 808a 	bhi.w	8014ed4 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x140>
 8014dc0:	f240 75ff 	movw	r5, #2047	; 0x7ff
 8014dc4:	ea23 0505 	bic.w	r5, r3, r5
 8014dc8:	f5b5 4f58 	cmp.w	r5, #55296	; 0xd800
 8014dcc:	f000 8082 	beq.w	8014ed4 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x140>
 8014dd0:	2b7f      	cmp	r3, #127	; 0x7f
 8014dd2:	d841      	bhi.n	8014e58 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0xc4>
 8014dd4:	2c01      	cmp	r4, #1
 8014dd6:	f000 808c 	beq.w	8014ef2 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x15e>
 8014dda:	e088      	b.n	8014eee <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x15a>
 8014ddc:	f003 05e0 	and.w	r5, r3, #224	; 0xe0
 8014de0:	2dc0      	cmp	r5, #192	; 0xc0
 8014de2:	d114      	bne.n	8014e0e <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x7a>
 8014de4:	458c      	cmp	ip, r1
 8014de6:	d074      	beq.n	8014ed2 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x13e>
 8014de8:	f10c 0e01 	add.w	lr, ip, #1
 8014dec:	458e      	cmp	lr, r1
 8014dee:	f8c0 e000 	str.w	lr, [r0]
 8014df2:	d06e      	beq.n	8014ed2 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x13e>
 8014df4:	f89e 1000 	ldrb.w	r1, [lr]
 8014df8:	f001 04c0 	and.w	r4, r1, #192	; 0xc0
 8014dfc:	2c80      	cmp	r4, #128	; 0x80
 8014dfe:	d16f      	bne.n	8014ee0 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x14c>
 8014e00:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 8014e04:	2402      	movs	r4, #2
 8014e06:	f363 118a 	bfi	r1, r3, #6, #5
 8014e0a:	460b      	mov	r3, r1
 8014e0c:	e7d3      	b.n	8014db6 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x22>
 8014e0e:	f003 05f0 	and.w	r5, r3, #240	; 0xf0
 8014e12:	2de0      	cmp	r5, #224	; 0xe0
 8014e14:	d127      	bne.n	8014e66 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0xd2>
 8014e16:	458c      	cmp	ip, r1
 8014e18:	d05b      	beq.n	8014ed2 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x13e>
 8014e1a:	f10c 0501 	add.w	r5, ip, #1
 8014e1e:	428d      	cmp	r5, r1
 8014e20:	6005      	str	r5, [r0, #0]
 8014e22:	d056      	beq.n	8014ed2 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x13e>
 8014e24:	782c      	ldrb	r4, [r5, #0]
 8014e26:	f004 05c0 	and.w	r5, r4, #192	; 0xc0
 8014e2a:	2d80      	cmp	r5, #128	; 0x80
 8014e2c:	d158      	bne.n	8014ee0 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x14c>
 8014e2e:	f10c 0e02 	add.w	lr, ip, #2
 8014e32:	458e      	cmp	lr, r1
 8014e34:	f8c0 e000 	str.w	lr, [r0]
 8014e38:	d04b      	beq.n	8014ed2 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x13e>
 8014e3a:	f89e 1000 	ldrb.w	r1, [lr]
 8014e3e:	f001 05c0 	and.w	r5, r1, #192	; 0xc0
 8014e42:	2d80      	cmp	r5, #128	; 0x80
 8014e44:	d14c      	bne.n	8014ee0 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x14c>
 8014e46:	031b      	lsls	r3, r3, #12
 8014e48:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 8014e4c:	b29b      	uxth	r3, r3
 8014e4e:	f364 138b 	bfi	r3, r4, #6, #6
 8014e52:	2403      	movs	r4, #3
 8014e54:	430b      	orrs	r3, r1
 8014e56:	e7ae      	b.n	8014db6 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x22>
 8014e58:	2100      	movs	r1, #0
 8014e5a:	ebb1 2fd3 	cmp.w	r1, r3, lsr #11
 8014e5e:	d141      	bne.n	8014ee4 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x150>
 8014e60:	2c02      	cmp	r4, #2
 8014e62:	d144      	bne.n	8014eee <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x15a>
 8014e64:	e045      	b.n	8014ef2 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x15e>
 8014e66:	f003 05f8 	and.w	r5, r3, #248	; 0xf8
 8014e6a:	2df0      	cmp	r5, #240	; 0xf0
 8014e6c:	d147      	bne.n	8014efe <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x16a>
 8014e6e:	458c      	cmp	ip, r1
 8014e70:	d02f      	beq.n	8014ed2 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x13e>
 8014e72:	f10c 0501 	add.w	r5, ip, #1
 8014e76:	428d      	cmp	r5, r1
 8014e78:	6005      	str	r5, [r0, #0]
 8014e7a:	d02a      	beq.n	8014ed2 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x13e>
 8014e7c:	782c      	ldrb	r4, [r5, #0]
 8014e7e:	f004 05c0 	and.w	r5, r4, #192	; 0xc0
 8014e82:	2d80      	cmp	r5, #128	; 0x80
 8014e84:	d12c      	bne.n	8014ee0 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x14c>
 8014e86:	f10c 0502 	add.w	r5, ip, #2
 8014e8a:	428d      	cmp	r5, r1
 8014e8c:	6005      	str	r5, [r0, #0]
 8014e8e:	d020      	beq.n	8014ed2 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x13e>
 8014e90:	782e      	ldrb	r6, [r5, #0]
 8014e92:	f006 05c0 	and.w	r5, r6, #192	; 0xc0
 8014e96:	2d80      	cmp	r5, #128	; 0x80
 8014e98:	d122      	bne.n	8014ee0 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x14c>
 8014e9a:	f10c 0e03 	add.w	lr, ip, #3
 8014e9e:	458e      	cmp	lr, r1
 8014ea0:	f8c0 e000 	str.w	lr, [r0]
 8014ea4:	d015      	beq.n	8014ed2 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x13e>
 8014ea6:	f89e 1000 	ldrb.w	r1, [lr]
 8014eaa:	f001 05c0 	and.w	r5, r1, #192	; 0xc0
 8014eae:	2d80      	cmp	r5, #128	; 0x80
 8014eb0:	d116      	bne.n	8014ee0 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x14c>
 8014eb2:	f44f 15e0 	mov.w	r5, #1835008	; 0x1c0000
 8014eb6:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 8014eba:	ea05 4383 	and.w	r3, r5, r3, lsl #18
 8014ebe:	f364 3311 	bfi	r3, r4, #12, #6
 8014ec2:	f44f 647c 	mov.w	r4, #4032	; 0xfc0
 8014ec6:	ea04 1486 	and.w	r4, r4, r6, lsl #6
 8014eca:	4323      	orrs	r3, r4
 8014ecc:	2404      	movs	r4, #4
 8014ece:	430b      	orrs	r3, r1
 8014ed0:	e771      	b.n	8014db6 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x22>
 8014ed2:	2101      	movs	r1, #1
 8014ed4:	f8c0 c000 	str.w	ip, [r0]
 8014ed8:	b2c8      	uxtb	r0, r1
 8014eda:	f85d bb04 	ldr.w	fp, [sp], #4
 8014ede:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014ee0:	2103      	movs	r1, #3
 8014ee2:	e7f7      	b.n	8014ed4 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x140>
 8014ee4:	2c03      	cmp	r4, #3
 8014ee6:	d004      	beq.n	8014ef2 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x15e>
 8014ee8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8014eec:	d201      	bcs.n	8014ef2 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x15e>
 8014eee:	2104      	movs	r1, #4
 8014ef0:	e7f0      	b.n	8014ed4 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x140>
 8014ef2:	f10e 0101 	add.w	r1, lr, #1
 8014ef6:	6013      	str	r3, [r2, #0]
 8014ef8:	6001      	str	r1, [r0, #0]
 8014efa:	2100      	movs	r1, #0
 8014efc:	e7ec      	b.n	8014ed8 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x144>
 8014efe:	2102      	movs	r1, #2
 8014f00:	e7ea      	b.n	8014ed8 <_ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj+0x144>

08014f02 <ThrowException>:
 8014f02:	b580      	push	{r7, lr}
 8014f04:	466f      	mov	r7, sp
 8014f06:	b368      	cbz	r0, 8014f64 <ThrowException+0x62>
 8014f08:	f242 01d8 	movw	r1, #8408	; 0x20d8
 8014f0c:	6802      	ldr	r2, [r0, #0]
 8014f0e:	f2c2 0100 	movt	r1, #8192	; 0x2000
 8014f12:	6809      	ldr	r1, [r1, #0]
 8014f14:	6b8b      	ldr	r3, [r1, #56]	; 0x38
 8014f16:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8014f1a:	dc10      	bgt.n	8014f3e <ThrowException+0x3c>
 8014f1c:	f8d2 c028 	ldr.w	ip, [r2, #40]	; 0x28
 8014f20:	f1bc 0f01 	cmp.w	ip, #1
 8014f24:	db1e      	blt.n	8014f64 <ThrowException+0x62>
 8014f26:	f8d2 e024 	ldr.w	lr, [r2, #36]	; 0x24
 8014f2a:	2300      	movs	r3, #0
 8014f2c:	f85e 2023 	ldr.w	r2, [lr, r3, lsl #2]
 8014f30:	428a      	cmp	r2, r1
 8014f32:	d00b      	beq.n	8014f4c <ThrowException+0x4a>
 8014f34:	3301      	adds	r3, #1
 8014f36:	4563      	cmp	r3, ip
 8014f38:	dbf8      	blt.n	8014f2c <ThrowException+0x2a>
 8014f3a:	e013      	b.n	8014f64 <ThrowException+0x62>
 8014f3c:	6992      	ldr	r2, [r2, #24]
 8014f3e:	2a00      	cmp	r2, #0
 8014f40:	4613      	mov	r3, r2
 8014f42:	bf1c      	itt	ne
 8014f44:	2301      	movne	r3, #1
 8014f46:	428a      	cmpne	r2, r1
 8014f48:	d1f8      	bne.n	8014f3c <ThrowException+0x3a>
 8014f4a:	b15b      	cbz	r3, 8014f64 <ThrowException+0x62>
 8014f4c:	f7fa ff6f 	bl	800fe2e <PrintThrowable>
 8014f50:	f644 6064 	movw	r0, #20068	; 0x4e64
 8014f54:	f644 61bb 	movw	r1, #20155	; 0x4ebb
 8014f58:	f6c0 0002 	movt	r0, #2050	; 0x802
 8014f5c:	f6c0 0102 	movt	r1, #2050	; 0x802
 8014f60:	f7fc ff00 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>
 8014f64:	f644 50ec 	movw	r0, #19948	; 0x4dec
 8014f68:	f644 6143 	movw	r1, #20035	; 0x4e43
 8014f6c:	f6c0 0002 	movt	r0, #2050	; 0x802
 8014f70:	f6c0 0102 	movt	r1, #2050	; 0x802
 8014f74:	f7fc fef6 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>

08014f78 <IsInstance>:
 8014f78:	b310      	cbz	r0, 8014fc0 <IsInstance+0x48>
 8014f7a:	6802      	ldr	r2, [r0, #0]
 8014f7c:	6b88      	ldr	r0, [r1, #56]	; 0x38
 8014f7e:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 8014f82:	dc17      	bgt.n	8014fb4 <IsInstance+0x3c>
 8014f84:	6a90      	ldr	r0, [r2, #40]	; 0x28
 8014f86:	2801      	cmp	r0, #1
 8014f88:	bfbc      	itt	lt
 8014f8a:	2000      	movlt	r0, #0
 8014f8c:	4770      	bxlt	lr
 8014f8e:	f8d2 c024 	ldr.w	ip, [r2, #36]	; 0x24
 8014f92:	2300      	movs	r3, #0
 8014f94:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8014f98:	428a      	cmp	r2, r1
 8014f9a:	bf04      	itt	eq
 8014f9c:	2001      	moveq	r0, #1
 8014f9e:	4770      	bxeq	lr
 8014fa0:	3301      	adds	r3, #1
 8014fa2:	4283      	cmp	r3, r0
 8014fa4:	bfa4      	itt	ge
 8014fa6:	2000      	movge	r0, #0
 8014fa8:	4770      	bxge	lr
 8014faa:	e7f3      	b.n	8014f94 <IsInstance+0x1c>
 8014fac:	428a      	cmp	r2, r1
 8014fae:	bf08      	it	eq
 8014fb0:	4770      	bxeq	lr
 8014fb2:	6992      	ldr	r2, [r2, #24]
 8014fb4:	2a00      	cmp	r2, #0
 8014fb6:	4610      	mov	r0, r2
 8014fb8:	bf18      	it	ne
 8014fba:	2001      	movne	r0, #1
 8014fbc:	d1f6      	bne.n	8014fac <IsInstance+0x34>
 8014fbe:	4770      	bx	lr
 8014fc0:	b580      	push	{r7, lr}
 8014fc2:	466f      	mov	r7, sp
 8014fc4:	f644 60d2 	movw	r0, #20178	; 0x4ed2
 8014fc8:	f644 7123 	movw	r1, #20259	; 0x4f23
 8014fcc:	f6c0 0002 	movt	r0, #2050	; 0x802
 8014fd0:	f6c0 0102 	movt	r1, #2050	; 0x802
 8014fd4:	f7fc fec6 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>

08014fd8 <Kotlin_String_compareTo>:
 8014fd8:	b5b0      	push	{r4, r5, r7, lr}
 8014fda:	af02      	add	r7, sp, #8
 8014fdc:	688c      	ldr	r4, [r1, #8]
 8014fde:	6885      	ldr	r5, [r0, #8]
 8014fe0:	460a      	mov	r2, r1
 8014fe2:	310c      	adds	r1, #12
 8014fe4:	42a5      	cmp	r5, r4
 8014fe6:	bf38      	it	cc
 8014fe8:	4602      	movcc	r2, r0
 8014fea:	300c      	adds	r0, #12
 8014fec:	6892      	ldr	r2, [r2, #8]
 8014fee:	0052      	lsls	r2, r2, #1
 8014ff0:	f006 ffe0 	bl	801bfb4 <memcmp>
 8014ff4:	2800      	cmp	r0, #0
 8014ff6:	bf18      	it	ne
 8014ff8:	bdb0      	popne	{r4, r5, r7, pc}
 8014ffa:	1b28      	subs	r0, r5, r4
 8014ffc:	f04f 0101 	mov.w	r1, #1
 8015000:	bf18      	it	ne
 8015002:	ea41 70e0 	orrne.w	r0, r1, r0, asr #31
 8015006:	bdb0      	pop	{r4, r5, r7, pc}

08015008 <Kotlin_String_get>:
 8015008:	6882      	ldr	r2, [r0, #8]
 801500a:	428a      	cmp	r2, r1
 801500c:	bf82      	ittt	hi
 801500e:	eb00 0041 	addhi.w	r0, r0, r1, lsl #1
 8015012:	8980      	ldrhhi	r0, [r0, #12]
 8015014:	4770      	bxhi	lr
 8015016:	b580      	push	{r7, lr}
 8015018:	466f      	mov	r7, sp
 801501a:	2000      	movs	r0, #0
 801501c:	f7fa fe66 	bl	800fcec <ThrowArrayIndexOutOfBoundsException>

08015020 <Kotlin_String_getStringLength>:
 8015020:	6880      	ldr	r0, [r0, #8]
 8015022:	4770      	bx	lr

08015024 <Kotlin_String_toUtf8>:
 8015024:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015026:	af03      	add	r7, sp, #12
 8015028:	e92d 0b00 	stmdb	sp!, {r8, r9, fp}
 801502c:	b084      	sub	sp, #16
 801502e:	4698      	mov	r8, r3
 8015030:	f242 03d4 	movw	r3, #8404	; 0x20d4
 8015034:	6806      	ldr	r6, [r0, #0]
 8015036:	f2c2 0300 	movt	r3, #8192	; 0x2000
 801503a:	681b      	ldr	r3, [r3, #0]
 801503c:	429e      	cmp	r6, r3
 801503e:	d17e      	bne.n	801513e <Kotlin_String_toUtf8+0x11a>
 8015040:	ea42 0301 	orr.w	r3, r2, r1
 8015044:	2b00      	cmp	r3, #0
 8015046:	db77      	blt.n	8015138 <Kotlin_String_toUtf8+0x114>
 8015048:	6883      	ldr	r3, [r0, #8]
 801504a:	1a5b      	subs	r3, r3, r1
 801504c:	4293      	cmp	r3, r2
 801504e:	d373      	bcc.n	8015138 <Kotlin_String_toUtf8+0x114>
 8015050:	2300      	movs	r3, #0
 8015052:	2a00      	cmp	r2, #0
 8015054:	9303      	str	r3, [sp, #12]
 8015056:	e9cd 3301 	strd	r3, r3, [sp, #4]
 801505a:	d03b      	beq.n	80150d4 <Kotlin_String_toUtf8+0xb0>
 801505c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8015060:	f242 4900 	movw	r9, #9216	; 0x2400
 8015064:	ad01      	add	r5, sp, #4
 8015066:	f100 040c 	add.w	r4, r0, #12
 801506a:	f6cf 49a0 	movt	r9, #64672	; 0xfca0
 801506e:	eb04 0642 	add.w	r6, r4, r2, lsl #1
 8015072:	4621      	mov	r1, r4
 8015074:	f831 0b02 	ldrh.w	r0, [r1], #2
 8015078:	f400 427c 	and.w	r2, r0, #64512	; 0xfc00
 801507c:	f5b2 4f58 	cmp.w	r2, #55296	; 0xd800
 8015080:	d10c      	bne.n	801509c <Kotlin_String_toUtf8+0x78>
 8015082:	42b1      	cmp	r1, r6
 8015084:	d01a      	beq.n	80150bc <Kotlin_String_toUtf8+0x98>
 8015086:	880a      	ldrh	r2, [r1, #0]
 8015088:	f402 437c 	and.w	r3, r2, #64512	; 0xfc00
 801508c:	f5b3 4f5c 	cmp.w	r3, #56320	; 0xdc00
 8015090:	d10a      	bne.n	80150a8 <Kotlin_String_toUtf8+0x84>
 8015092:	eb02 2080 	add.w	r0, r2, r0, lsl #10
 8015096:	3404      	adds	r4, #4
 8015098:	4448      	add	r0, r9
 801509a:	e008      	b.n	80150ae <Kotlin_String_toUtf8+0x8a>
 801509c:	f5b2 4f5c 	cmp.w	r2, #56320	; 0xdc00
 80150a0:	bf08      	it	eq
 80150a2:	f64f 70fd 	movweq	r0, #65533	; 0xfffd
 80150a6:	e001      	b.n	80150ac <Kotlin_String_toUtf8+0x88>
 80150a8:	f64f 70fd 	movw	r0, #65533	; 0xfffd
 80150ac:	460c      	mov	r4, r1
 80150ae:	4629      	mov	r1, r5
 80150b0:	f7ff fd95 	bl	8014bde <_ZN4utf89unchecked6appendINSt3__120back_insert_iteratorINS2_12basic_stringIcNS2_11char_traitsIcEE14KonanAllocatorIcEEEEEEET_jSB_>
 80150b4:	4605      	mov	r5, r0
 80150b6:	42b4      	cmp	r4, r6
 80150b8:	d1db      	bne.n	8015072 <Kotlin_String_toUtf8+0x4e>
 80150ba:	e00b      	b.n	80150d4 <Kotlin_String_toUtf8+0xb0>
 80150bc:	4628      	mov	r0, r5
 80150be:	21ef      	movs	r1, #239	; 0xef
 80150c0:	f7ff fd2a 	bl	8014b18 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14KonanAllocatorIcEE9push_backEc>
 80150c4:	4628      	mov	r0, r5
 80150c6:	21bf      	movs	r1, #191	; 0xbf
 80150c8:	f7ff fd26 	bl	8014b18 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14KonanAllocatorIcEE9push_backEc>
 80150cc:	4628      	mov	r0, r5
 80150ce:	21bd      	movs	r1, #189	; 0xbd
 80150d0:	f7ff fd22 	bl	8014b18 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14KonanAllocatorIcEE9push_backEc>
 80150d4:	f89d 0004 	ldrb.w	r0, [sp, #4]
 80150d8:	9902      	ldr	r1, [sp, #8]
 80150da:	4642      	mov	r2, r8
 80150dc:	f010 0f01 	tst.w	r0, #1
 80150e0:	bf08      	it	eq
 80150e2:	0841      	lsreq	r1, r0, #1
 80150e4:	f242 00a8 	movw	r0, #8360	; 0x20a8
 80150e8:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80150ec:	6800      	ldr	r0, [r0, #0]
 80150ee:	f7ff fc03 	bl	80148f8 <AllocArrayInstance>
 80150f2:	f89d 3004 	ldrb.w	r3, [sp, #4]
 80150f6:	4605      	mov	r5, r0
 80150f8:	a801      	add	r0, sp, #4
 80150fa:	f013 0101 	ands.w	r1, r3, #1
 80150fe:	9903      	ldr	r1, [sp, #12]
 8015100:	bf08      	it	eq
 8015102:	f040 0101 	orreq.w	r1, r0, #1
 8015106:	9a02      	ldr	r2, [sp, #8]
 8015108:	f105 000c 	add.w	r0, r5, #12
 801510c:	bf08      	it	eq
 801510e:	085a      	lsreq	r2, r3, #1
 8015110:	f006 f9f6 	bl	801b500 <__aeabi_memcpy>
 8015114:	4640      	mov	r0, r8
 8015116:	4629      	mov	r1, r5
 8015118:	f7ff fa67 	bl	80145ea <UpdateReturnRef>
 801511c:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8015120:	07c0      	lsls	r0, r0, #31
 8015122:	d004      	beq.n	801512e <Kotlin_String_toUtf8+0x10a>
 8015124:	9803      	ldr	r0, [sp, #12]
 8015126:	2800      	cmp	r0, #0
 8015128:	bf18      	it	ne
 801512a:	f006 fc97 	blne	801ba5c <free>
 801512e:	4628      	mov	r0, r5
 8015130:	b004      	add	sp, #16
 8015132:	e8bd 0b00 	ldmia.w	sp!, {r8, r9, fp}
 8015136:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015138:	2000      	movs	r0, #0
 801513a:	f7fa fdd7 	bl	800fcec <ThrowArrayIndexOutOfBoundsException>
 801513e:	f644 70a8 	movw	r0, #20392	; 0x4fa8
 8015142:	f644 71fb 	movw	r1, #20475	; 0x4ffb
 8015146:	f6c0 0002 	movt	r0, #2050	; 0x802
 801514a:	f6c0 0102 	movt	r1, #2050	; 0x802
 801514e:	f7fc fe09 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>

08015152 <Kotlin_String_fromCharArray>:
 8015152:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015154:	af03      	add	r7, sp, #12
 8015156:	e92d 0b00 	stmdb	sp!, {r8, r9, fp}
 801515a:	4604      	mov	r4, r0
 801515c:	f242 00d0 	movw	r0, #8400	; 0x20d0
 8015160:	4689      	mov	r9, r1
 8015162:	4698      	mov	r8, r3
 8015164:	4615      	mov	r5, r2
 8015166:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801516a:	6821      	ldr	r1, [r4, #0]
 801516c:	6800      	ldr	r0, [r0, #0]
 801516e:	4281      	cmp	r1, r0
 8015170:	d12e      	bne.n	80151d0 <Kotlin_String_fromCharArray+0x7e>
 8015172:	ea45 0009 	orr.w	r0, r5, r9
 8015176:	2800      	cmp	r0, #0
 8015178:	db27      	blt.n	80151ca <Kotlin_String_fromCharArray+0x78>
 801517a:	68a0      	ldr	r0, [r4, #8]
 801517c:	eba0 0009 	sub.w	r0, r0, r9
 8015180:	42a8      	cmp	r0, r5
 8015182:	d322      	bcc.n	80151ca <Kotlin_String_fromCharArray+0x78>
 8015184:	b1b5      	cbz	r5, 80151b4 <Kotlin_String_fromCharArray+0x62>
 8015186:	f242 00d4 	movw	r0, #8404	; 0x20d4
 801518a:	4629      	mov	r1, r5
 801518c:	4642      	mov	r2, r8
 801518e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8015192:	6800      	ldr	r0, [r0, #0]
 8015194:	f7ff fbb0 	bl	80148f8 <AllocArrayInstance>
 8015198:	4606      	mov	r6, r0
 801519a:	eb04 0149 	add.w	r1, r4, r9, lsl #1
 801519e:	006a      	lsls	r2, r5, #1
 80151a0:	f106 000c 	add.w	r0, r6, #12
 80151a4:	310c      	adds	r1, #12
 80151a6:	f006 f9ab 	bl	801b500 <__aeabi_memcpy>
 80151aa:	4640      	mov	r0, r8
 80151ac:	4631      	mov	r1, r6
 80151ae:	f7ff fa1c 	bl	80145ea <UpdateReturnRef>
 80151b2:	e006      	b.n	80151c2 <Kotlin_String_fromCharArray+0x70>
 80151b4:	4640      	mov	r0, r8
 80151b6:	f7fa ff56 	bl	8010066 <TheEmptyString>
 80151ba:	f242 46f8 	movw	r6, #9464	; 0x24f8
 80151be:	f2c2 0600 	movt	r6, #8192	; 0x2000
 80151c2:	4630      	mov	r0, r6
 80151c4:	e8bd 0b00 	ldmia.w	sp!, {r8, r9, fp}
 80151c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80151ca:	2000      	movs	r0, #0
 80151cc:	f7fa fd8e 	bl	800fcec <ThrowArrayIndexOutOfBoundsException>
 80151d0:	f245 000b 	movw	r0, #20491	; 0x500b
 80151d4:	f245 015f 	movw	r1, #20575	; 0x505f
 80151d8:	f6c0 0002 	movt	r0, #2050	; 0x802
 80151dc:	f6c0 0102 	movt	r1, #2050	; 0x802
 80151e0:	f7fc fdc0 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>

080151e4 <Kotlin_String_toCharArray>:
 80151e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80151e6:	af03      	add	r7, sp, #12
 80151e8:	f84d bd04 	str.w	fp, [sp, #-4]!
 80151ec:	4605      	mov	r5, r0
 80151ee:	f242 00d0 	movw	r0, #8400	; 0x20d0
 80151f2:	460c      	mov	r4, r1
 80151f4:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80151f8:	68a9      	ldr	r1, [r5, #8]
 80151fa:	4622      	mov	r2, r4
 80151fc:	6800      	ldr	r0, [r0, #0]
 80151fe:	f7ff fb7b 	bl	80148f8 <AllocArrayInstance>
 8015202:	68aa      	ldr	r2, [r5, #8]
 8015204:	4606      	mov	r6, r0
 8015206:	f105 010c 	add.w	r1, r5, #12
 801520a:	f106 000c 	add.w	r0, r6, #12
 801520e:	0052      	lsls	r2, r2, #1
 8015210:	f006 f976 	bl	801b500 <__aeabi_memcpy>
 8015214:	4620      	mov	r0, r4
 8015216:	4631      	mov	r1, r6
 8015218:	f7ff f9e7 	bl	80145ea <UpdateReturnRef>
 801521c:	4630      	mov	r0, r6
 801521e:	f85d bb04 	ldr.w	fp, [sp], #4
 8015222:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015224 <Kotlin_String_plusImpl>:
 8015224:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015226:	af03      	add	r7, sp, #12
 8015228:	e92d 0b00 	stmdb	sp!, {r8, r9, fp}
 801522c:	4606      	mov	r6, r0
 801522e:	4690      	mov	r8, r2
 8015230:	4689      	mov	r9, r1
 8015232:	b3de      	cbz	r6, 80152ac <Kotlin_String_plusImpl+0x88>
 8015234:	f1b9 0f00 	cmp.w	r9, #0
 8015238:	d042      	beq.n	80152c0 <Kotlin_String_plusImpl+0x9c>
 801523a:	f242 01d4 	movw	r1, #8404	; 0x20d4
 801523e:	6830      	ldr	r0, [r6, #0]
 8015240:	f2c2 0100 	movt	r1, #8192	; 0x2000
 8015244:	6809      	ldr	r1, [r1, #0]
 8015246:	4288      	cmp	r0, r1
 8015248:	d144      	bne.n	80152d4 <Kotlin_String_plusImpl+0xb0>
 801524a:	f8d9 1000 	ldr.w	r1, [r9]
 801524e:	4281      	cmp	r1, r0
 8015250:	d145      	bne.n	80152de <Kotlin_String_plusImpl+0xba>
 8015252:	68b1      	ldr	r1, [r6, #8]
 8015254:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8015258:	2301      	movs	r3, #1
 801525a:	4411      	add	r1, r2
 801525c:	4291      	cmp	r1, r2
 801525e:	bf28      	it	cs
 8015260:	2300      	movcs	r3, #0
 8015262:	bb03      	cbnz	r3, 80152a6 <Kotlin_String_plusImpl+0x82>
 8015264:	4291      	cmp	r1, r2
 8015266:	d31e      	bcc.n	80152a6 <Kotlin_String_plusImpl+0x82>
 8015268:	4642      	mov	r2, r8
 801526a:	f7ff fb45 	bl	80148f8 <AllocArrayInstance>
 801526e:	4604      	mov	r4, r0
 8015270:	68b0      	ldr	r0, [r6, #8]
 8015272:	f106 010c 	add.w	r1, r6, #12
 8015276:	f104 050c 	add.w	r5, r4, #12
 801527a:	0042      	lsls	r2, r0, #1
 801527c:	4628      	mov	r0, r5
 801527e:	f006 f93f 	bl	801b500 <__aeabi_memcpy>
 8015282:	68b0      	ldr	r0, [r6, #8]
 8015284:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8015288:	f109 010c 	add.w	r1, r9, #12
 801528c:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 8015290:	0052      	lsls	r2, r2, #1
 8015292:	f006 f935 	bl	801b500 <__aeabi_memcpy>
 8015296:	4640      	mov	r0, r8
 8015298:	4621      	mov	r1, r4
 801529a:	f7ff f9a6 	bl	80145ea <UpdateReturnRef>
 801529e:	4620      	mov	r0, r4
 80152a0:	e8bd 0b00 	ldmia.w	sp!, {r8, r9, fp}
 80152a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80152a6:	2000      	movs	r0, #0
 80152a8:	f7fa fd20 	bl	800fcec <ThrowArrayIndexOutOfBoundsException>
 80152ac:	f245 0075 	movw	r0, #20597	; 0x5075
 80152b0:	f245 01c9 	movw	r1, #20681	; 0x50c9
 80152b4:	f6c0 0002 	movt	r0, #2050	; 0x802
 80152b8:	f6c0 0102 	movt	r1, #2050	; 0x802
 80152bc:	f7fc fd52 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>
 80152c0:	f245 00dd 	movw	r0, #20701	; 0x50dd
 80152c4:	f245 1131 	movw	r1, #20785	; 0x5131
 80152c8:	f6c0 0002 	movt	r0, #2050	; 0x802
 80152cc:	f6c0 0102 	movt	r1, #2050	; 0x802
 80152d0:	f7fc fd48 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>
 80152d4:	f245 1046 	movw	r0, #20806	; 0x5146
 80152d8:	f6c0 0002 	movt	r0, #2050	; 0x802
 80152dc:	e003      	b.n	80152e6 <Kotlin_String_plusImpl+0xc2>
 80152de:	f245 10ab 	movw	r0, #20907	; 0x51ab
 80152e2:	f6c0 0002 	movt	r0, #2050	; 0x802
 80152e6:	f245 119a 	movw	r1, #20890	; 0x519a
 80152ea:	f6c0 0102 	movt	r1, #2050	; 0x802
 80152ee:	f7fc fd39 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>

080152f2 <Kotlin_String_equals>:
 80152f2:	b5d0      	push	{r4, r6, r7, lr}
 80152f4:	af02      	add	r7, sp, #8
 80152f6:	b139      	cbz	r1, 8015308 <Kotlin_String_equals+0x16>
 80152f8:	f242 02d4 	movw	r2, #8404	; 0x20d4
 80152fc:	680b      	ldr	r3, [r1, #0]
 80152fe:	f2c2 0200 	movt	r2, #8192	; 0x2000
 8015302:	6812      	ldr	r2, [r2, #0]
 8015304:	4293      	cmp	r3, r2
 8015306:	d002      	beq.n	801530e <Kotlin_String_equals+0x1c>
 8015308:	2400      	movs	r4, #0
 801530a:	4620      	mov	r0, r4
 801530c:	bdd0      	pop	{r4, r6, r7, pc}
 801530e:	4281      	cmp	r1, r0
 8015310:	d00e      	beq.n	8015330 <Kotlin_String_equals+0x3e>
 8015312:	6882      	ldr	r2, [r0, #8]
 8015314:	688b      	ldr	r3, [r1, #8]
 8015316:	2400      	movs	r4, #0
 8015318:	429a      	cmp	r2, r3
 801531a:	d107      	bne.n	801532c <Kotlin_String_equals+0x3a>
 801531c:	300c      	adds	r0, #12
 801531e:	310c      	adds	r1, #12
 8015320:	0052      	lsls	r2, r2, #1
 8015322:	f006 fe47 	bl	801bfb4 <memcmp>
 8015326:	2800      	cmp	r0, #0
 8015328:	bf08      	it	eq
 801532a:	2401      	moveq	r4, #1
 801532c:	4620      	mov	r0, r4
 801532e:	bdd0      	pop	{r4, r6, r7, pc}
 8015330:	2401      	movs	r4, #1
 8015332:	4620      	mov	r0, r4
 8015334:	bdd0      	pop	{r4, r6, r7, pc}

08015336 <Kotlin_String_regionMatches>:
 8015336:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015338:	af03      	add	r7, sp, #12
 801533a:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 801533e:	f8d7 e008 	ldr.w	lr, [r7, #8]
 8015342:	4684      	mov	ip, r0
 8015344:	ea4e 0001 	orr.w	r0, lr, r1
 8015348:	2800      	cmp	r0, #0
 801534a:	db0d      	blt.n	8015368 <Kotlin_String_regionMatches+0x32>
 801534c:	2000      	movs	r0, #0
 801534e:	2b00      	cmp	r3, #0
 8015350:	f2c0 80ec 	blt.w	801552c <Kotlin_String_regionMatches+0x1f6>
 8015354:	f8dc 4008 	ldr.w	r4, [ip, #8]
 8015358:	1a64      	subs	r4, r4, r1
 801535a:	4574      	cmp	r4, lr
 801535c:	f0c0 80e6 	bcc.w	801552c <Kotlin_String_regionMatches+0x1f6>
 8015360:	6890      	ldr	r0, [r2, #8]
 8015362:	1ac0      	subs	r0, r0, r3
 8015364:	4570      	cmp	r0, lr
 8015366:	d203      	bcs.n	8015370 <Kotlin_String_regionMatches+0x3a>
 8015368:	2000      	movs	r0, #0
 801536a:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 801536e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015370:	68f8      	ldr	r0, [r7, #12]
 8015372:	eb0c 0141 	add.w	r1, ip, r1, lsl #1
 8015376:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 801537a:	f102 0b0c 	add.w	fp, r2, #12
 801537e:	f101 0c0c 	add.w	ip, r1, #12
 8015382:	2800      	cmp	r0, #0
 8015384:	f000 80c3 	beq.w	801550e <Kotlin_String_regionMatches+0x1d8>
 8015388:	f1be 0f01 	cmp.w	lr, #1
 801538c:	f2c0 80d1 	blt.w	8015532 <Kotlin_String_regionMatches+0x1fc>
 8015390:	f245 38a4 	movw	r8, #21412	; 0x53a4
 8015394:	f64f 6980 	movw	r9, #65152	; 0xfe80
 8015398:	f645 1af4 	movw	sl, #23028	; 0x59f4
 801539c:	2300      	movs	r3, #0
 801539e:	f6c0 0802 	movt	r8, #2050	; 0x802
 80153a2:	f6cf 79ff 	movt	r9, #65535	; 0xffff
 80153a6:	f6c0 0a02 	movt	sl, #2050	; 0x802
 80153aa:	f8bc 0000 	ldrh.w	r0, [ip]
 80153ae:	f1a0 0241 	sub.w	r2, r0, #65	; 0x41
 80153b2:	b292      	uxth	r2, r2
 80153b4:	2a19      	cmp	r2, #25
 80153b6:	d801      	bhi.n	80153bc <Kotlin_String_regionMatches+0x86>
 80153b8:	3020      	adds	r0, #32
 80153ba:	e044      	b.n	8015446 <Kotlin_String_regionMatches+0x110>
 80153bc:	28c0      	cmp	r0, #192	; 0xc0
 80153be:	d342      	bcc.n	8015446 <Kotlin_String_regionMatches+0x110>
 80153c0:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80153c4:	d204      	bcs.n	80153d0 <Kotlin_String_regionMatches+0x9a>
 80153c6:	eb08 0040 	add.w	r0, r8, r0, lsl #1
 80153ca:	f830 0009 	ldrh.w	r0, [r0, r9]
 80153ce:	e03a      	b.n	8015446 <Kotlin_String_regionMatches+0x110>
 80153d0:	2400      	movs	r4, #0
 80153d2:	2563      	movs	r5, #99	; 0x63
 80153d4:	1962      	adds	r2, r4, r5
 80153d6:	eb02 76d2 	add.w	r6, r2, r2, lsr #31
 80153da:	f026 0201 	bic.w	r2, r6, #1
 80153de:	1076      	asrs	r6, r6, #1
 80153e0:	f83a 2002 	ldrh.w	r2, [sl, r2]
 80153e4:	4282      	cmp	r2, r0
 80153e6:	d203      	bcs.n	80153f0 <Kotlin_String_regionMatches+0xba>
 80153e8:	1c74      	adds	r4, r6, #1
 80153ea:	42ac      	cmp	r4, r5
 80153ec:	ddf2      	ble.n	80153d4 <Kotlin_String_regionMatches+0x9e>
 80153ee:	e003      	b.n	80153f8 <Kotlin_String_regionMatches+0xc2>
 80153f0:	d005      	beq.n	80153fe <Kotlin_String_regionMatches+0xc8>
 80153f2:	1e75      	subs	r5, r6, #1
 80153f4:	42ac      	cmp	r4, r5
 80153f6:	dded      	ble.n	80153d4 <Kotlin_String_regionMatches+0x9e>
 80153f8:	4282      	cmp	r2, r0
 80153fa:	bf88      	it	hi
 80153fc:	3e01      	subhi	r6, #1
 80153fe:	2e00      	cmp	r6, #0
 8015400:	db21      	blt.n	8015446 <Kotlin_String_regionMatches+0x110>
 8015402:	f645 21bc 	movw	r1, #23228	; 0x5abc
 8015406:	f83a 2016 	ldrh.w	r2, [sl, r6, lsl #1]
 801540a:	f6c0 0102 	movt	r1, #2050	; 0x802
 801540e:	f831 5026 	ldrh.w	r5, [r1, r6, lsl #2]
 8015412:	ea85 0402 	eor.w	r4, r5, r2
 8015416:	b224      	sxth	r4, r4
 8015418:	2c00      	cmp	r4, #0
 801541a:	bfb8      	it	lt
 801541c:	f485 4500 	eorlt.w	r5, r5, #32768	; 0x8000
 8015420:	b2ad      	uxth	r5, r5
 8015422:	4285      	cmp	r5, r0
 8015424:	d30f      	bcc.n	8015446 <Kotlin_String_regionMatches+0x110>
 8015426:	f1b4 3fff 	cmp.w	r4, #4294967295	; 0xffffffff
 801542a:	dc02      	bgt.n	8015432 <Kotlin_String_regionMatches+0xfc>
 801542c:	4042      	eors	r2, r0
 801542e:	07d2      	lsls	r2, r2, #31
 8015430:	d109      	bne.n	8015446 <Kotlin_String_regionMatches+0x110>
 8015432:	0072      	lsls	r2, r6, #1
 8015434:	f645 21bc 	movw	r1, #23228	; 0x5abc
 8015438:	f042 0201 	orr.w	r2, r2, #1
 801543c:	f6c0 0102 	movt	r1, #2050	; 0x802
 8015440:	f831 2012 	ldrh.w	r2, [r1, r2, lsl #1]
 8015444:	4410      	add	r0, r2
 8015446:	f8bb 6000 	ldrh.w	r6, [fp]
 801544a:	f1a6 0241 	sub.w	r2, r6, #65	; 0x41
 801544e:	b292      	uxth	r2, r2
 8015450:	2a19      	cmp	r2, #25
 8015452:	d801      	bhi.n	8015458 <Kotlin_String_regionMatches+0x122>
 8015454:	3620      	adds	r6, #32
 8015456:	e04b      	b.n	80154f0 <Kotlin_String_regionMatches+0x1ba>
 8015458:	2ec0      	cmp	r6, #192	; 0xc0
 801545a:	d349      	bcc.n	80154f0 <Kotlin_String_regionMatches+0x1ba>
 801545c:	f5b6 7f7a 	cmp.w	r6, #1000	; 0x3e8
 8015460:	d204      	bcs.n	801546c <Kotlin_String_regionMatches+0x136>
 8015462:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 8015466:	f832 6009 	ldrh.w	r6, [r2, r9]
 801546a:	e041      	b.n	80154f0 <Kotlin_String_regionMatches+0x1ba>
 801546c:	46c1      	mov	r9, r8
 801546e:	2500      	movs	r5, #0
 8015470:	2263      	movs	r2, #99	; 0x63
 8015472:	18ac      	adds	r4, r5, r2
 8015474:	eb04 74d4 	add.w	r4, r4, r4, lsr #31
 8015478:	f024 0101 	bic.w	r1, r4, #1
 801547c:	1064      	asrs	r4, r4, #1
 801547e:	f83a 8001 	ldrh.w	r8, [sl, r1]
 8015482:	45b0      	cmp	r8, r6
 8015484:	d203      	bcs.n	801548e <Kotlin_String_regionMatches+0x158>
 8015486:	1c65      	adds	r5, r4, #1
 8015488:	4295      	cmp	r5, r2
 801548a:	ddf2      	ble.n	8015472 <Kotlin_String_regionMatches+0x13c>
 801548c:	e003      	b.n	8015496 <Kotlin_String_regionMatches+0x160>
 801548e:	d005      	beq.n	801549c <Kotlin_String_regionMatches+0x166>
 8015490:	1e62      	subs	r2, r4, #1
 8015492:	4295      	cmp	r5, r2
 8015494:	dded      	ble.n	8015472 <Kotlin_String_regionMatches+0x13c>
 8015496:	45b0      	cmp	r8, r6
 8015498:	bf88      	it	hi
 801549a:	3c01      	subhi	r4, #1
 801549c:	46c8      	mov	r8, r9
 801549e:	f64f 6980 	movw	r9, #65152	; 0xfe80
 80154a2:	2c00      	cmp	r4, #0
 80154a4:	f6cf 79ff 	movt	r9, #65535	; 0xffff
 80154a8:	db22      	blt.n	80154f0 <Kotlin_String_regionMatches+0x1ba>
 80154aa:	f645 21bc 	movw	r1, #23228	; 0x5abc
 80154ae:	f83a 2014 	ldrh.w	r2, [sl, r4, lsl #1]
 80154b2:	f6c0 0102 	movt	r1, #2050	; 0x802
 80154b6:	f831 1024 	ldrh.w	r1, [r1, r4, lsl #2]
 80154ba:	ea81 0502 	eor.w	r5, r1, r2
 80154be:	b22d      	sxth	r5, r5
 80154c0:	2d00      	cmp	r5, #0
 80154c2:	bfb8      	it	lt
 80154c4:	f481 4100 	eorlt.w	r1, r1, #32768	; 0x8000
 80154c8:	b289      	uxth	r1, r1
 80154ca:	42b1      	cmp	r1, r6
 80154cc:	d310      	bcc.n	80154f0 <Kotlin_String_regionMatches+0x1ba>
 80154ce:	f1b5 3fff 	cmp.w	r5, #4294967295	; 0xffffffff
 80154d2:	dc03      	bgt.n	80154dc <Kotlin_String_regionMatches+0x1a6>
 80154d4:	ea82 0106 	eor.w	r1, r2, r6
 80154d8:	07c9      	lsls	r1, r1, #31
 80154da:	d109      	bne.n	80154f0 <Kotlin_String_regionMatches+0x1ba>
 80154dc:	0061      	lsls	r1, r4, #1
 80154de:	f645 22bc 	movw	r2, #23228	; 0x5abc
 80154e2:	f041 0101 	orr.w	r1, r1, #1
 80154e6:	f6c0 0202 	movt	r2, #2050	; 0x802
 80154ea:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 80154ee:	440e      	add	r6, r1
 80154f0:	b2b1      	uxth	r1, r6
 80154f2:	b280      	uxth	r0, r0
 80154f4:	4288      	cmp	r0, r1
 80154f6:	f47f af37 	bne.w	8015368 <Kotlin_String_regionMatches+0x32>
 80154fa:	3301      	adds	r3, #1
 80154fc:	f10c 0c02 	add.w	ip, ip, #2
 8015500:	f10b 0b02 	add.w	fp, fp, #2
 8015504:	2001      	movs	r0, #1
 8015506:	4573      	cmp	r3, lr
 8015508:	f6ff af4f 	blt.w	80153aa <Kotlin_String_regionMatches+0x74>
 801550c:	e00e      	b.n	801552c <Kotlin_String_regionMatches+0x1f6>
 801550e:	f1be 0f01 	cmp.w	lr, #1
 8015512:	db0e      	blt.n	8015532 <Kotlin_String_regionMatches+0x1fc>
 8015514:	2200      	movs	r2, #0
 8015516:	f83b 0012 	ldrh.w	r0, [fp, r2, lsl #1]
 801551a:	f83c 1012 	ldrh.w	r1, [ip, r2, lsl #1]
 801551e:	4281      	cmp	r1, r0
 8015520:	f47f af22 	bne.w	8015368 <Kotlin_String_regionMatches+0x32>
 8015524:	3201      	adds	r2, #1
 8015526:	2001      	movs	r0, #1
 8015528:	4572      	cmp	r2, lr
 801552a:	dbf4      	blt.n	8015516 <Kotlin_String_regionMatches+0x1e0>
 801552c:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 8015530:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015532:	2001      	movs	r0, #1
 8015534:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 8015538:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801553a <Kotlin_Char_toLowerCase>:
 801553a:	b5d0      	push	{r4, r6, r7, lr}
 801553c:	af02      	add	r7, sp, #8
 801553e:	f1a0 0141 	sub.w	r1, r0, #65	; 0x41
 8015542:	b289      	uxth	r1, r1
 8015544:	2919      	cmp	r1, #25
 8015546:	bf9e      	ittt	ls
 8015548:	3020      	addls	r0, #32
 801554a:	b280      	uxthls	r0, r0
 801554c:	bdd0      	popls	{r4, r6, r7, pc}
 801554e:	28c0      	cmp	r0, #192	; 0xc0
 8015550:	d201      	bcs.n	8015556 <Kotlin_Char_toLowerCase+0x1c>
 8015552:	b280      	uxth	r0, r0
 8015554:	bdd0      	pop	{r4, r6, r7, pc}
 8015556:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 801555a:	d20c      	bcs.n	8015576 <Kotlin_Char_toLowerCase+0x3c>
 801555c:	f245 31a4 	movw	r1, #21412	; 0x53a4
 8015560:	f6c0 0102 	movt	r1, #2050	; 0x802
 8015564:	eb01 0040 	add.w	r0, r1, r0, lsl #1
 8015568:	f64f 6180 	movw	r1, #65152	; 0xfe80
 801556c:	f6cf 71ff 	movt	r1, #65535	; 0xffff
 8015570:	5a40      	ldrh	r0, [r0, r1]
 8015572:	b280      	uxth	r0, r0
 8015574:	bdd0      	pop	{r4, r6, r7, pc}
 8015576:	f645 1cf4 	movw	ip, #23028	; 0x59f4
 801557a:	2300      	movs	r3, #0
 801557c:	2263      	movs	r2, #99	; 0x63
 801557e:	f6c0 0c02 	movt	ip, #2050	; 0x802
 8015582:	1899      	adds	r1, r3, r2
 8015584:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8015588:	f021 0401 	bic.w	r4, r1, #1
 801558c:	ea4f 0e61 	mov.w	lr, r1, asr #1
 8015590:	f83c 4004 	ldrh.w	r4, [ip, r4]
 8015594:	4284      	cmp	r4, r0
 8015596:	d204      	bcs.n	80155a2 <Kotlin_Char_toLowerCase+0x68>
 8015598:	f10e 0301 	add.w	r3, lr, #1
 801559c:	4293      	cmp	r3, r2
 801559e:	ddf0      	ble.n	8015582 <Kotlin_Char_toLowerCase+0x48>
 80155a0:	e004      	b.n	80155ac <Kotlin_Char_toLowerCase+0x72>
 80155a2:	d007      	beq.n	80155b4 <Kotlin_Char_toLowerCase+0x7a>
 80155a4:	f1ae 0201 	sub.w	r2, lr, #1
 80155a8:	4293      	cmp	r3, r2
 80155aa:	ddea      	ble.n	8015582 <Kotlin_Char_toLowerCase+0x48>
 80155ac:	4284      	cmp	r4, r0
 80155ae:	bf88      	it	hi
 80155b0:	f1ae 0e01 	subhi.w	lr, lr, #1
 80155b4:	f1be 0f00 	cmp.w	lr, #0
 80155b8:	dbcb      	blt.n	8015552 <Kotlin_Char_toLowerCase+0x18>
 80155ba:	f645 21bc 	movw	r1, #23228	; 0x5abc
 80155be:	f83c 201e 	ldrh.w	r2, [ip, lr, lsl #1]
 80155c2:	f6c0 0102 	movt	r1, #2050	; 0x802
 80155c6:	f831 402e 	ldrh.w	r4, [r1, lr, lsl #2]
 80155ca:	ea84 0302 	eor.w	r3, r4, r2
 80155ce:	b21b      	sxth	r3, r3
 80155d0:	2b00      	cmp	r3, #0
 80155d2:	bfb8      	it	lt
 80155d4:	f484 4400 	eorlt.w	r4, r4, #32768	; 0x8000
 80155d8:	b2a4      	uxth	r4, r4
 80155da:	4284      	cmp	r4, r0
 80155dc:	d3b9      	bcc.n	8015552 <Kotlin_Char_toLowerCase+0x18>
 80155de:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 80155e2:	dc02      	bgt.n	80155ea <Kotlin_Char_toLowerCase+0xb0>
 80155e4:	4042      	eors	r2, r0
 80155e6:	07d2      	lsls	r2, r2, #31
 80155e8:	d1b3      	bne.n	8015552 <Kotlin_Char_toLowerCase+0x18>
 80155ea:	ea4f 024e 	mov.w	r2, lr, lsl #1
 80155ee:	f042 0201 	orr.w	r2, r2, #1
 80155f2:	f831 1012 	ldrh.w	r1, [r1, r2, lsl #1]
 80155f6:	4408      	add	r0, r1
 80155f8:	b280      	uxth	r0, r0
 80155fa:	bdd0      	pop	{r4, r6, r7, pc}

080155fc <Kotlin_Char_toUpperCase>:
 80155fc:	b5d0      	push	{r4, r6, r7, lr}
 80155fe:	af02      	add	r7, sp, #8
 8015600:	f1a0 0161 	sub.w	r1, r0, #97	; 0x61
 8015604:	b289      	uxth	r1, r1
 8015606:	2919      	cmp	r1, #25
 8015608:	d804      	bhi.n	8015614 <Kotlin_Char_toUpperCase+0x18>
 801560a:	f64f 71e0 	movw	r1, #65504	; 0xffe0
 801560e:	4408      	add	r0, r1
 8015610:	b280      	uxth	r0, r0
 8015612:	bdd0      	pop	{r4, r6, r7, pc}
 8015614:	28b5      	cmp	r0, #181	; 0xb5
 8015616:	d201      	bcs.n	801561c <Kotlin_Char_toUpperCase+0x20>
 8015618:	b280      	uxth	r0, r0
 801561a:	bdd0      	pop	{r4, r6, r7, pc}
 801561c:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8015620:	d20c      	bcs.n	801563c <Kotlin_Char_toUpperCase+0x40>
 8015622:	f645 414c 	movw	r1, #23628	; 0x5c4c
 8015626:	f6c0 0102 	movt	r1, #2050	; 0x802
 801562a:	eb01 0040 	add.w	r0, r1, r0, lsl #1
 801562e:	f64f 6196 	movw	r1, #65174	; 0xfe96
 8015632:	f6cf 71ff 	movt	r1, #65535	; 0xffff
 8015636:	5a40      	ldrh	r0, [r0, r1]
 8015638:	b280      	uxth	r0, r0
 801563a:	bdd0      	pop	{r4, r6, r7, pc}
 801563c:	f246 2cb2 	movw	ip, #25266	; 0x62b2
 8015640:	2300      	movs	r3, #0
 8015642:	2270      	movs	r2, #112	; 0x70
 8015644:	f6c0 0c02 	movt	ip, #2050	; 0x802
 8015648:	1899      	adds	r1, r3, r2
 801564a:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 801564e:	f021 0401 	bic.w	r4, r1, #1
 8015652:	ea4f 0e61 	mov.w	lr, r1, asr #1
 8015656:	f83c 4004 	ldrh.w	r4, [ip, r4]
 801565a:	4284      	cmp	r4, r0
 801565c:	d204      	bcs.n	8015668 <Kotlin_Char_toUpperCase+0x6c>
 801565e:	f10e 0301 	add.w	r3, lr, #1
 8015662:	4293      	cmp	r3, r2
 8015664:	ddf0      	ble.n	8015648 <Kotlin_Char_toUpperCase+0x4c>
 8015666:	e004      	b.n	8015672 <Kotlin_Char_toUpperCase+0x76>
 8015668:	d007      	beq.n	801567a <Kotlin_Char_toUpperCase+0x7e>
 801566a:	f1ae 0201 	sub.w	r2, lr, #1
 801566e:	4293      	cmp	r3, r2
 8015670:	ddea      	ble.n	8015648 <Kotlin_Char_toUpperCase+0x4c>
 8015672:	4284      	cmp	r4, r0
 8015674:	bf88      	it	hi
 8015676:	f1ae 0e01 	subhi.w	lr, lr, #1
 801567a:	f1be 0f00 	cmp.w	lr, #0
 801567e:	dbcb      	blt.n	8015618 <Kotlin_Char_toUpperCase+0x1c>
 8015680:	f246 3194 	movw	r1, #25492	; 0x6394
 8015684:	f83c 201e 	ldrh.w	r2, [ip, lr, lsl #1]
 8015688:	f6c0 0102 	movt	r1, #2050	; 0x802
 801568c:	f831 402e 	ldrh.w	r4, [r1, lr, lsl #2]
 8015690:	ea84 0302 	eor.w	r3, r4, r2
 8015694:	b21b      	sxth	r3, r3
 8015696:	2b00      	cmp	r3, #0
 8015698:	bfb8      	it	lt
 801569a:	f484 4400 	eorlt.w	r4, r4, #32768	; 0x8000
 801569e:	b2a4      	uxth	r4, r4
 80156a0:	4284      	cmp	r4, r0
 80156a2:	d3b9      	bcc.n	8015618 <Kotlin_Char_toUpperCase+0x1c>
 80156a4:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 80156a8:	dc02      	bgt.n	80156b0 <Kotlin_Char_toUpperCase+0xb4>
 80156aa:	4042      	eors	r2, r0
 80156ac:	07d2      	lsls	r2, r2, #31
 80156ae:	d1b3      	bne.n	8015618 <Kotlin_Char_toUpperCase+0x1c>
 80156b0:	ea4f 024e 	mov.w	r2, lr, lsl #1
 80156b4:	f042 0201 	orr.w	r2, r2, #1
 80156b8:	f831 1012 	ldrh.w	r1, [r1, r2, lsl #1]
 80156bc:	4408      	add	r0, r1
 80156be:	b280      	uxth	r0, r0
 80156c0:	bdd0      	pop	{r4, r6, r7, pc}

080156c2 <Kotlin_String_lastIndexOfString>:
 80156c2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80156c4:	af03      	add	r7, sp, #12
 80156c6:	e92d 0700 	stmdb	sp!, {r8, r9, sl}
 80156ca:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80156ce:	2a00      	cmp	r2, #0
 80156d0:	db6c      	blt.n	80157ac <Kotlin_String_lastIndexOfString+0xea>
 80156d2:	f8d1 e008 	ldr.w	lr, [r1, #8]
 80156d6:	f8d0 c008 	ldr.w	ip, [r0, #8]
 80156da:	45f4      	cmp	ip, lr
 80156dc:	db66      	blt.n	80157ac <Kotlin_String_lastIndexOfString+0xea>
 80156de:	f1be 0f00 	cmp.w	lr, #0
 80156e2:	d041      	beq.n	8015768 <Kotlin_String_lastIndexOfString+0xa6>
 80156e4:	ebac 030e 	sub.w	r3, ip, lr
 80156e8:	4293      	cmp	r3, r2
 80156ea:	bfb8      	it	lt
 80156ec:	461a      	movlt	r2, r3
 80156ee:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80156f2:	f1bc 0f00 	cmp.w	ip, #0
 80156f6:	d059      	beq.n	80157ac <Kotlin_String_lastIndexOfString+0xea>
 80156f8:	2a00      	cmp	r2, #0
 80156fa:	db57      	blt.n	80157ac <Kotlin_String_lastIndexOfString+0xea>
 80156fc:	f8b1 a00c 	ldrh.w	sl, [r1, #12]
 8015700:	f1ac 0901 	sub.w	r9, ip, #1
 8015704:	f1be 0f02 	cmp.w	lr, #2
 8015708:	db33      	blt.n	8015772 <Kotlin_String_lastIndexOfString+0xb0>
 801570a:	f100 080e 	add.w	r8, r0, #14
 801570e:	4594      	cmp	ip, r2
 8015710:	bf98      	it	ls
 8015712:	464a      	movls	r2, r9
 8015714:	2a00      	cmp	r2, #0
 8015716:	db47      	blt.n	80157a8 <Kotlin_String_lastIndexOfString+0xe6>
 8015718:	eb08 0342 	add.w	r3, r8, r2, lsl #1
 801571c:	eb00 0542 	add.w	r5, r0, r2, lsl #1
 8015720:	89ad      	ldrh	r5, [r5, #12]
 8015722:	4555      	cmp	r5, sl
 8015724:	d006      	beq.n	8015734 <Kotlin_String_lastIndexOfString+0x72>
 8015726:	1e55      	subs	r5, r2, #1
 8015728:	2a00      	cmp	r2, #0
 801572a:	f1a3 0302 	sub.w	r3, r3, #2
 801572e:	462a      	mov	r2, r5
 8015730:	dcf4      	bgt.n	801571c <Kotlin_String_lastIndexOfString+0x5a>
 8015732:	e039      	b.n	80157a8 <Kotlin_String_lastIndexOfString+0xe6>
 8015734:	1c55      	adds	r5, r2, #1
 8015736:	d037      	beq.n	80157a8 <Kotlin_String_lastIndexOfString+0xe6>
 8015738:	2607      	movs	r6, #7
 801573a:	f831 5016 	ldrh.w	r5, [r1, r6, lsl #1]
 801573e:	881c      	ldrh	r4, [r3, #0]
 8015740:	42ac      	cmp	r4, r5
 8015742:	d109      	bne.n	8015758 <Kotlin_String_lastIndexOfString+0x96>
 8015744:	1f74      	subs	r4, r6, #5
 8015746:	1c75      	adds	r5, r6, #1
 8015748:	3302      	adds	r3, #2
 801574a:	4574      	cmp	r4, lr
 801574c:	462e      	mov	r6, r5
 801574e:	dbf4      	blt.n	801573a <Kotlin_String_lastIndexOfString+0x78>
 8015750:	1fab      	subs	r3, r5, #6
 8015752:	4573      	cmp	r3, lr
 8015754:	d103      	bne.n	801575e <Kotlin_String_lastIndexOfString+0x9c>
 8015756:	e02d      	b.n	80157b4 <Kotlin_String_lastIndexOfString+0xf2>
 8015758:	1fb3      	subs	r3, r6, #6
 801575a:	4573      	cmp	r3, lr
 801575c:	d02a      	beq.n	80157b4 <Kotlin_String_lastIndexOfString+0xf2>
 801575e:	3a01      	subs	r2, #1
 8015760:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8015764:	dad3      	bge.n	801570e <Kotlin_String_lastIndexOfString+0x4c>
 8015766:	e021      	b.n	80157ac <Kotlin_String_lastIndexOfString+0xea>
 8015768:	4594      	cmp	ip, r2
 801576a:	bfc8      	it	gt
 801576c:	4694      	movgt	ip, r2
 801576e:	4663      	mov	r3, ip
 8015770:	e01c      	b.n	80157ac <Kotlin_String_lastIndexOfString+0xea>
 8015772:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8015776:	4594      	cmp	ip, r2
 8015778:	bf98      	it	ls
 801577a:	464a      	movls	r2, r9
 801577c:	2a00      	cmp	r2, #0
 801577e:	db13      	blt.n	80157a8 <Kotlin_String_lastIndexOfString+0xe6>
 8015780:	4611      	mov	r1, r2
 8015782:	eb00 0241 	add.w	r2, r0, r1, lsl #1
 8015786:	8992      	ldrh	r2, [r2, #12]
 8015788:	4552      	cmp	r2, sl
 801578a:	d004      	beq.n	8015796 <Kotlin_String_lastIndexOfString+0xd4>
 801578c:	1e4a      	subs	r2, r1, #1
 801578e:	2900      	cmp	r1, #0
 8015790:	4611      	mov	r1, r2
 8015792:	dcf6      	bgt.n	8015782 <Kotlin_String_lastIndexOfString+0xc0>
 8015794:	e008      	b.n	80157a8 <Kotlin_String_lastIndexOfString+0xe6>
 8015796:	1c4a      	adds	r2, r1, #1
 8015798:	d00e      	beq.n	80157b8 <Kotlin_String_lastIndexOfString+0xf6>
 801579a:	f1be 0f01 	cmp.w	lr, #1
 801579e:	d00b      	beq.n	80157b8 <Kotlin_String_lastIndexOfString+0xf6>
 80157a0:	1e4a      	subs	r2, r1, #1
 80157a2:	2900      	cmp	r1, #0
 80157a4:	dce7      	bgt.n	8015776 <Kotlin_String_lastIndexOfString+0xb4>
 80157a6:	e001      	b.n	80157ac <Kotlin_String_lastIndexOfString+0xea>
 80157a8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80157ac:	4618      	mov	r0, r3
 80157ae:	e8bd 0700 	ldmia.w	sp!, {r8, r9, sl}
 80157b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80157b4:	4613      	mov	r3, r2
 80157b6:	e7f9      	b.n	80157ac <Kotlin_String_lastIndexOfString+0xea>
 80157b8:	460b      	mov	r3, r1
 80157ba:	e7f7      	b.n	80157ac <Kotlin_String_lastIndexOfString+0xea>

080157bc <Kotlin_String_hashCode>:
 80157bc:	b580      	push	{r7, lr}
 80157be:	466f      	mov	r7, sp
 80157c0:	6881      	ldr	r1, [r0, #8]
 80157c2:	300c      	adds	r0, #12
 80157c4:	0049      	lsls	r1, r1, #1
 80157c6:	f000 f801 	bl	80157cc <CityHash64>
 80157ca:	bd80      	pop	{r7, pc}

080157cc <CityHash64>:
 80157cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80157ce:	af03      	add	r7, sp, #12
 80157d0:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 80157d4:	b0a5      	sub	sp, #148	; 0x94
 80157d6:	468a      	mov	sl, r1
 80157d8:	9001      	str	r0, [sp, #4]
 80157da:	f1ba 0f20 	cmp.w	sl, #32
 80157de:	f200 808c 	bhi.w	80158fa <CityHash64+0x12e>
 80157e2:	f1ba 0f10 	cmp.w	sl, #16
 80157e6:	f200 8234 	bhi.w	8015c52 <CityHash64+0x486>
 80157ea:	f1ba 0f08 	cmp.w	sl, #8
 80157ee:	f0c0 875f 	bcc.w	80166b0 <CityHash64+0xee4>
 80157f2:	9a01      	ldr	r2, [sp, #4]
 80157f4:	f646 2c3b 	movw	ip, #27195	; 0x6a3b
 80157f8:	f6c9 2ce1 	movt	ip, #39649	; 0x9ae1
 80157fc:	eb02 000a 	add.w	r0, r2, sl
 8015800:	f810 1d08 	ldrb.w	r1, [r0, #-8]!
 8015804:	9124      	str	r1, [sp, #144]	; 0x90
 8015806:	f810 6f04 	ldrb.w	r6, [r0, #4]!
 801580a:	78c1      	ldrb	r1, [r0, #3]
 801580c:	7883      	ldrb	r3, [r0, #2]
 801580e:	f810 8c03 	ldrb.w	r8, [r0, #-3]
 8015812:	f810 9c02 	ldrb.w	r9, [r0, #-2]
 8015816:	f810 4c01 	ldrb.w	r4, [r0, #-1]
 801581a:	7840      	ldrb	r0, [r0, #1]
 801581c:	ea43 2501 	orr.w	r5, r3, r1, lsl #8
 8015820:	ea46 2000 	orr.w	r0, r6, r0, lsl #8
 8015824:	7956      	ldrb	r6, [r2, #5]
 8015826:	78d3      	ldrb	r3, [r2, #3]
 8015828:	ea49 2404 	orr.w	r4, r9, r4, lsl #8
 801582c:	ea40 4b05 	orr.w	fp, r0, r5, lsl #16
 8015830:	4615      	mov	r5, r2
 8015832:	7890      	ldrb	r0, [r2, #2]
 8015834:	f815 1f04 	ldrb.w	r1, [r5, #4]!
 8015838:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
 801583c:	78ae      	ldrb	r6, [r5, #2]
 801583e:	78ed      	ldrb	r5, [r5, #3]
 8015840:	ea46 2505 	orr.w	r5, r6, r5, lsl #8
 8015844:	7856      	ldrb	r6, [r2, #1]
 8015846:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 801584a:	7815      	ldrb	r5, [r2, #0]
 801584c:	ea40 2203 	orr.w	r2, r0, r3, lsl #8
 8015850:	f244 004f 	movw	r0, #16463	; 0x404f
 8015854:	f6c2 7090 	movt	r0, #12176	; 0x2f90
 8015858:	ea45 2306 	orr.w	r3, r5, r6, lsl #8
 801585c:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
 8015860:	1812      	adds	r2, r2, r0
 8015862:	eb41 0e0c 	adc.w	lr, r1, ip
 8015866:	9924      	ldr	r1, [sp, #144]	; 0x90
 8015868:	0e53      	lsrs	r3, r2, #25
 801586a:	01d6      	lsls	r6, r2, #7
 801586c:	ea43 13ce 	orr.w	r3, r3, lr, lsl #7
 8015870:	ea46 665e 	orr.w	r6, r6, lr, lsr #25
 8015874:	ea41 2508 	orr.w	r5, r1, r8, lsl #8
 8015878:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
 801587c:	06ec      	lsls	r4, r5, #27
 801587e:	195b      	adds	r3, r3, r5
 8015880:	eb46 010b 	adc.w	r1, r6, fp
 8015884:	eb10 064a 	adds.w	r6, r0, sl, lsl #1
 8015888:	f04f 0000 	mov.w	r0, #0
 801588c:	ea44 145b 	orr.w	r4, r4, fp, lsr #5
 8015890:	9124      	str	r1, [sp, #144]	; 0x90
 8015892:	eb40 000c 	adc.w	r0, r0, ip
 8015896:	fba4 1c06 	umull	r1, ip, r4, r6
 801589a:	1889      	adds	r1, r1, r2
 801589c:	fba3 2906 	umull	r2, r9, r3, r6
 80158a0:	fb04 c400 	mla	r4, r4, r0, ip
 80158a4:	ea81 0102 	eor.w	r1, r1, r2
 80158a8:	fb03 9300 	mla	r3, r3, r0, r9
 80158ac:	fba1 a806 	umull	sl, r8, r1, r6
 80158b0:	fb01 8800 	mla	r8, r1, r0, r8
 80158b4:	9924      	ldr	r1, [sp, #144]	; 0x90
 80158b6:	ea82 020a 	eor.w	r2, r2, sl
 80158ba:	fb01 3306 	mla	r3, r1, r6, r3
 80158be:	ea4f 61cb 	mov.w	r1, fp, lsl #27
 80158c2:	ea41 1155 	orr.w	r1, r1, r5, lsr #5
 80158c6:	fb01 4106 	mla	r1, r1, r6, r4
 80158ca:	eb41 010e 	adc.w	r1, r1, lr
 80158ce:	4059      	eors	r1, r3
 80158d0:	fb01 8106 	mla	r1, r1, r6, r8
 80158d4:	ea82 32d1 	eor.w	r2, r2, r1, lsr #15
 80158d8:	4059      	eors	r1, r3
 80158da:	fba2 5406 	umull	r5, r4, r2, r6
 80158de:	fb02 4200 	mla	r2, r2, r0, r4
 80158e2:	fb01 2106 	mla	r1, r1, r6, r2
 80158e6:	ea85 33d1 	eor.w	r3, r5, r1, lsr #15
 80158ea:	fba3 2506 	umull	r2, r5, r3, r6
 80158ee:	fb03 5000 	mla	r0, r3, r0, r5
 80158f2:	fb01 0306 	mla	r3, r1, r6, r0
 80158f6:	f000 bed5 	b.w	80166a4 <CityHash64+0xed8>
 80158fa:	f1ba 0f40 	cmp.w	sl, #64	; 0x40
 80158fe:	f200 8298 	bhi.w	8015e32 <CityHash64+0x666>
 8015902:	f8dd c004 	ldr.w	ip, [sp, #4]
 8015906:	eb0c 040a 	add.w	r4, ip, sl
 801590a:	f814 3d18 	ldrb.w	r3, [r4, #-24]!
 801590e:	f814 0d08 	ldrb.w	r0, [r4, #-8]!
 8015912:	9020      	str	r0, [sp, #128]	; 0x80
 8015914:	f814 ef18 	ldrb.w	lr, [r4, #24]!
 8015918:	f814 0d08 	ldrb.w	r0, [r4, #-8]!
 801591c:	901b      	str	r0, [sp, #108]	; 0x6c
 801591e:	f814 0f04 	ldrb.w	r0, [r4, #4]!
 8015922:	901c      	str	r0, [sp, #112]	; 0x70
 8015924:	f814 9f08 	ldrb.w	r9, [r4, #8]!
 8015928:	f814 0d18 	ldrb.w	r0, [r4, #-24]!
 801592c:	901d      	str	r0, [sp, #116]	; 0x74
 801592e:	f814 6f08 	ldrb.w	r6, [r4, #8]!
 8015932:	78e1      	ldrb	r1, [r4, #3]
 8015934:	78a5      	ldrb	r5, [r4, #2]
 8015936:	ea45 2101 	orr.w	r1, r5, r1, lsl #8
 801593a:	7865      	ldrb	r5, [r4, #1]
 801593c:	ea46 2605 	orr.w	r6, r6, r5, lsl #8
 8015940:	ea46 4801 	orr.w	r8, r6, r1, lsl #16
 8015944:	f8cd 8088 	str.w	r8, [sp, #136]	; 0x88
 8015948:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801594c:	f814 6c02 	ldrb.w	r6, [r4, #-2]
 8015950:	ea46 2101 	orr.w	r1, r6, r1, lsl #8
 8015954:	f814 6c03 	ldrb.w	r6, [r4, #-3]
 8015958:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
 801595c:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
 8015960:	4663      	mov	r3, ip
 8015962:	9221      	str	r2, [sp, #132]	; 0x84
 8015964:	f89c 100d 	ldrb.w	r1, [ip, #13]
 8015968:	f813 6f0c 	ldrb.w	r6, [r3, #12]!
 801596c:	ea46 2101 	orr.w	r1, r6, r1, lsl #8
 8015970:	789e      	ldrb	r6, [r3, #2]
 8015972:	78db      	ldrb	r3, [r3, #3]
 8015974:	ea46 2303 	orr.w	r3, r6, r3, lsl #8
 8015978:	ea41 4503 	orr.w	r5, r1, r3, lsl #16
 801597c:	4663      	mov	r3, ip
 801597e:	f89c 1009 	ldrb.w	r1, [ip, #9]
 8015982:	f813 6f08 	ldrb.w	r6, [r3, #8]!
 8015986:	ea46 2101 	orr.w	r1, r6, r1, lsl #8
 801598a:	789e      	ldrb	r6, [r3, #2]
 801598c:	78db      	ldrb	r3, [r3, #3]
 801598e:	9524      	str	r5, [sp, #144]	; 0x90
 8015990:	ea46 2303 	orr.w	r3, r6, r3, lsl #8
 8015994:	ea41 4003 	orr.w	r0, r1, r3, lsl #16
 8015998:	0f83      	lsrs	r3, r0, #30
 801599a:	0081      	lsls	r1, r0, #2
 801599c:	9023      	str	r0, [sp, #140]	; 0x8c
 801599e:	2009      	movs	r0, #9
 80159a0:	ea43 0385 	orr.w	r3, r3, r5, lsl #2
 80159a4:	ea41 7195 	orr.w	r1, r1, r5, lsr #30
 80159a8:	7ca5      	ldrb	r5, [r4, #18]
 80159aa:	189b      	adds	r3, r3, r2
 80159ac:	eb41 0108 	adc.w	r1, r1, r8
 80159b0:	fba3 8600 	umull	r8, r6, r3, r0
 80159b4:	f646 233b 	movw	r3, #27195	; 0x6a3b
 80159b8:	eb01 01c1 	add.w	r1, r1, r1, lsl #3
 80159bc:	f6c9 23e1 	movt	r3, #39649	; 0x9ae1
 80159c0:	eb06 0b01 	add.w	fp, r6, r1
 80159c4:	7ce1      	ldrb	r1, [r4, #19]
 80159c6:	f244 064f 	movw	r6, #16463	; 0x404f
 80159ca:	f6c2 7690 	movt	r6, #12176	; 0x2f90
 80159ce:	ea45 2101 	orr.w	r1, r5, r1, lsl #8
 80159d2:	7c65      	ldrb	r5, [r4, #17]
 80159d4:	ea49 2205 	orr.w	r2, r9, r5, lsl #8
 80159d8:	ea42 4901 	orr.w	r9, r2, r1, lsl #16
 80159dc:	f8cd 907c 	str.w	r9, [sp, #124]	; 0x7c
 80159e0:	7be1      	ldrb	r1, [r4, #15]
 80159e2:	7ba2      	ldrb	r2, [r4, #14]
 80159e4:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
 80159e8:	7b62      	ldrb	r2, [r4, #13]
 80159ea:	ea4e 2002 	orr.w	r0, lr, r2, lsl #8
 80159ee:	ea40 4e01 	orr.w	lr, r0, r1, lsl #16
 80159f2:	f8cd e078 	str.w	lr, [sp, #120]	; 0x78
 80159f6:	f89c 0000 	ldrb.w	r0, [ip]
 80159fa:	f89c 1001 	ldrb.w	r1, [ip, #1]
 80159fe:	f89c 2002 	ldrb.w	r2, [ip, #2]
 8015a02:	f89c 5003 	ldrb.w	r5, [ip, #3]
 8015a06:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8015a0a:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 8015a0e:	4665      	mov	r5, ip
 8015a10:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8015a14:	fba0 1206 	umull	r1, r2, r0, r6
 8015a18:	fb00 2003 	mla	r0, r0, r3, r2
 8015a1c:	f89c 2005 	ldrb.w	r2, [ip, #5]
 8015a20:	f815 3f04 	ldrb.w	r3, [r5, #4]!
 8015a24:	eb1e 0e01 	adds.w	lr, lr, r1
 8015a28:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 8015a2c:	78ab      	ldrb	r3, [r5, #2]
 8015a2e:	78ed      	ldrb	r5, [r5, #3]
 8015a30:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 8015a34:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8015a38:	ea4f 534e 	mov.w	r3, lr, lsl #21
 8015a3c:	fb02 0206 	mla	r2, r2, r6, r0
 8015a40:	eb42 0209 	adc.w	r2, r2, r9
 8015a44:	0551      	lsls	r1, r2, #21
 8015a46:	ea43 23d2 	orr.w	r3, r3, r2, lsr #11
 8015a4a:	eb13 0008 	adds.w	r0, r3, r8
 8015a4e:	ea41 21de 	orr.w	r1, r1, lr, lsr #11
 8015a52:	901a      	str	r0, [sp, #104]	; 0x68
 8015a54:	eb41 000b 	adc.w	r0, r1, fp
 8015a58:	eb16 064a 	adds.w	r6, r6, sl, lsl #1
 8015a5c:	9019      	str	r0, [sp, #100]	; 0x64
 8015a5e:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8015a60:	79e1      	ldrb	r1, [r4, #7]
 8015a62:	79a5      	ldrb	r5, [r4, #6]
 8015a64:	ea45 2101 	orr.w	r1, r5, r1, lsl #8
 8015a68:	7965      	ldrb	r5, [r4, #5]
 8015a6a:	ea40 2505 	orr.w	r5, r0, r5, lsl #8
 8015a6e:	f646 203b 	movw	r0, #27195	; 0x6a3b
 8015a72:	ea45 4101 	orr.w	r1, r5, r1, lsl #16
 8015a76:	f04f 0500 	mov.w	r5, #0
 8015a7a:	f6c9 20e1 	movt	r0, #39649	; 0x9ae1
 8015a7e:	fba1 9306 	umull	r9, r3, r1, r6
 8015a82:	eb45 0a00 	adc.w	sl, r5, r0
 8015a86:	981c      	ldr	r0, [sp, #112]	; 0x70
 8015a88:	f8cd 906c 	str.w	r9, [sp, #108]	; 0x6c
 8015a8c:	fb01 310a 	mla	r1, r1, sl, r3
 8015a90:	7ae3      	ldrb	r3, [r4, #11]
 8015a92:	7aa5      	ldrb	r5, [r4, #10]
 8015a94:	ea45 2303 	orr.w	r3, r5, r3, lsl #8
 8015a98:	7a65      	ldrb	r5, [r4, #9]
 8015a9a:	ea40 2505 	orr.w	r5, r0, r5, lsl #8
 8015a9e:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 8015aa2:	fb03 1806 	mla	r8, r3, r6, r1
 8015aa6:	f8cd 8070 	str.w	r8, [sp, #112]	; 0x70
 8015aaa:	f814 1c05 	ldrb.w	r1, [r4, #-5]
 8015aae:	f814 3c06 	ldrb.w	r3, [r4, #-6]
 8015ab2:	f814 bc0b 	ldrb.w	fp, [r4, #-11]
 8015ab6:	f814 5c0a 	ldrb.w	r5, [r4, #-10]
 8015aba:	f814 0c09 	ldrb.w	r0, [r4, #-9]
 8015abe:	f814 4c07 	ldrb.w	r4, [r4, #-7]
 8015ac2:	ea43 2101 	orr.w	r1, r3, r1, lsl #8
 8015ac6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8015ac8:	ea45 2000 	orr.w	r0, r5, r0, lsl #8
 8015acc:	ea43 2404 	orr.w	r4, r3, r4, lsl #8
 8015ad0:	4663      	mov	r3, ip
 8015ad2:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8015ad6:	911d      	str	r1, [sp, #116]	; 0x74
 8015ad8:	404a      	eors	r2, r1
 8015ada:	9920      	ldr	r1, [sp, #128]	; 0x80
 8015adc:	ea41 210b 	orr.w	r1, r1, fp, lsl #8
 8015ae0:	ea41 4000 	orr.w	r0, r1, r0, lsl #16
 8015ae4:	4661      	mov	r1, ip
 8015ae6:	9020      	str	r0, [sp, #128]	; 0x80
 8015ae8:	ea8e 0e00 	eor.w	lr, lr, r0
 8015aec:	f89c 0019 	ldrb.w	r0, [ip, #25]
 8015af0:	f811 5f18 	ldrb.w	r5, [r1, #24]!
 8015af4:	f813 bf1c 	ldrb.w	fp, [r3, #28]!
 8015af8:	ea45 2000 	orr.w	r0, r5, r0, lsl #8
 8015afc:	788d      	ldrb	r5, [r1, #2]
 8015afe:	78c9      	ldrb	r1, [r1, #3]
 8015b00:	ea45 2101 	orr.w	r1, r5, r1, lsl #8
 8015b04:	f89c 501d 	ldrb.w	r5, [ip, #29]
 8015b08:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8015b0c:	2109      	movs	r1, #9
 8015b0e:	ea4b 2b05 	orr.w	fp, fp, r5, lsl #8
 8015b12:	789d      	ldrb	r5, [r3, #2]
 8015b14:	78db      	ldrb	r3, [r3, #3]
 8015b16:	fba0 1001 	umull	r1, r0, r0, r1
 8015b1a:	ea45 2303 	orr.w	r3, r5, r3, lsl #8
 8015b1e:	ea4b 4303 	orr.w	r3, fp, r3, lsl #16
 8015b22:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
 8015b26:	eb00 0b03 	add.w	fp, r0, r3
 8015b2a:	eb11 030e 	adds.w	r3, r1, lr
 8015b2e:	981a      	ldr	r0, [sp, #104]	; 0x68
 8015b30:	eb42 020b 	adc.w	r2, r2, fp
 8015b34:	3301      	adds	r3, #1
 8015b36:	f142 0200 	adc.w	r2, r2, #0
 8015b3a:	eb13 0509 	adds.w	r5, r3, r9
 8015b3e:	eb42 0e08 	adc.w	lr, r2, r8
 8015b42:	181b      	adds	r3, r3, r0
 8015b44:	9819      	ldr	r0, [sp, #100]	; 0x64
 8015b46:	f244 084f 	movw	r8, #16463	; 0x404f
 8015b4a:	f6c2 7890 	movt	r8, #12176	; 0x2f90
 8015b4e:	4142      	adcs	r2, r0
 8015b50:	fba3 0406 	umull	r0, r4, r3, r6
 8015b54:	fb03 430a 	mla	r3, r3, sl, r4
 8015b58:	ba00      	rev	r0, r0
 8015b5a:	fb02 3206 	mla	r2, r2, r6, r3
 8015b5e:	ba12      	rev	r2, r2
 8015b60:	1952      	adds	r2, r2, r5
 8015b62:	eb40 000e 	adc.w	r0, r0, lr
 8015b66:	fba2 e306 	umull	lr, r3, r2, r6
 8015b6a:	fb02 320a 	mla	r2, r2, sl, r3
 8015b6e:	f646 233b 	movw	r3, #27195	; 0x6a3b
 8015b72:	fb00 2006 	mla	r0, r0, r6, r2
 8015b76:	4662      	mov	r2, ip
 8015b78:	f6c9 23e1 	movt	r3, #39649	; 0x9ae1
 8015b7c:	fa90 f980 	rev.w	r9, r0
 8015b80:	f89c 0011 	ldrb.w	r0, [ip, #17]
 8015b84:	f812 4f10 	ldrb.w	r4, [r2, #16]!
 8015b88:	ea44 2000 	orr.w	r0, r4, r0, lsl #8
 8015b8c:	7894      	ldrb	r4, [r2, #2]
 8015b8e:	78d2      	ldrb	r2, [r2, #3]
 8015b90:	ea44 2202 	orr.w	r2, r4, r2, lsl #8
 8015b94:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8015b98:	fba0 2408 	umull	r2, r4, r0, r8
 8015b9c:	fb00 4003 	mla	r0, r0, r3, r4
 8015ba0:	f89c 4015 	ldrb.w	r4, [ip, #21]
 8015ba4:	f81c 5f14 	ldrb.w	r5, [ip, #20]!
 8015ba8:	1852      	adds	r2, r2, r1
 8015baa:	ea45 2404 	orr.w	r4, r5, r4, lsl #8
 8015bae:	f89c 5002 	ldrb.w	r5, [ip, #2]
 8015bb2:	f89c 3003 	ldrb.w	r3, [ip, #3]
 8015bb6:	ea45 2303 	orr.w	r3, r5, r3, lsl #8
 8015bba:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8015bbe:	9c21      	ldr	r4, [sp, #132]	; 0x84
 8015bc0:	fb03 0008 	mla	r0, r3, r8, r0
 8015bc4:	eb4b 0300 	adc.w	r3, fp, r0
 8015bc8:	0598      	lsls	r0, r3, #22
 8015bca:	ea40 2192 	orr.w	r1, r0, r2, lsr #10
 8015bce:	0590      	lsls	r0, r2, #22
 8015bd0:	ea40 2093 	orr.w	r0, r0, r3, lsr #10
 8015bd4:	eb10 0b04 	adds.w	fp, r0, r4
 8015bd8:	9822      	ldr	r0, [sp, #136]	; 0x88
 8015bda:	eb41 0c00 	adc.w	ip, r1, r0
 8015bde:	1912      	adds	r2, r2, r4
 8015be0:	4143      	adcs	r3, r0
 8015be2:	981e      	ldr	r0, [sp, #120]	; 0x78
 8015be4:	1814      	adds	r4, r2, r0
 8015be6:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8015be8:	eb43 0500 	adc.w	r5, r3, r0
 8015bec:	eb14 040b 	adds.w	r4, r4, fp
 8015bf0:	eb45 050c 	adc.w	r5, r5, ip
 8015bf4:	eb14 0409 	adds.w	r4, r4, r9
 8015bf8:	fba4 0106 	umull	r0, r1, r4, r6
 8015bfc:	fb04 110a 	mla	r1, r4, sl, r1
 8015c00:	fa9e f48e 	rev.w	r4, lr
 8015c04:	ba00      	rev	r0, r0
 8015c06:	4165      	adcs	r5, r4
 8015c08:	fb05 1106 	mla	r1, r5, r6, r1
 8015c0c:	9d23      	ldr	r5, [sp, #140]	; 0x8c
 8015c0e:	ba09      	rev	r1, r1
 8015c10:	1952      	adds	r2, r2, r5
 8015c12:	9d24      	ldr	r5, [sp, #144]	; 0x90
 8015c14:	416b      	adcs	r3, r5
 8015c16:	1889      	adds	r1, r1, r2
 8015c18:	fba1 2506 	umull	r2, r5, r1, r6
 8015c1c:	4158      	adcs	r0, r3
 8015c1e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8015c20:	fb01 510a 	mla	r1, r1, sl, r5
 8015c24:	fb00 1006 	mla	r0, r0, r6, r1
 8015c28:	9920      	ldr	r1, [sp, #128]	; 0x80
 8015c2a:	18c9      	adds	r1, r1, r3
 8015c2c:	e9dd 531c 	ldrd	r5, r3, [sp, #112]	; 0x70
 8015c30:	416b      	adcs	r3, r5
 8015c32:	1889      	adds	r1, r1, r2
 8015c34:	4158      	adcs	r0, r3
 8015c36:	ea81 31d0 	eor.w	r1, r1, r0, lsr #15
 8015c3a:	fba1 2306 	umull	r2, r3, r1, r6
 8015c3e:	fb01 310a 	mla	r1, r1, sl, r3
 8015c42:	eb12 020b 	adds.w	r2, r2, fp
 8015c46:	fb00 1006 	mla	r0, r0, r6, r1
 8015c4a:	eb40 030c 	adc.w	r3, r0, ip
 8015c4e:	f000 bd29 	b.w	80166a4 <CityHash64+0xed8>
 8015c52:	f8dd c004 	ldr.w	ip, [sp, #4]
 8015c56:	eb0c 000a 	add.w	r0, ip, sl
 8015c5a:	f810 1d08 	ldrb.w	r1, [r0, #-8]!
 8015c5e:	9123      	str	r1, [sp, #140]	; 0x8c
 8015c60:	f810 1d08 	ldrb.w	r1, [r0, #-8]!
 8015c64:	f810 2f04 	ldrb.w	r2, [r0, #4]!
 8015c68:	f810 3f08 	ldrb.w	r3, [r0, #8]!
 8015c6c:	9324      	str	r3, [sp, #144]	; 0x90
 8015c6e:	f810 3c0b 	ldrb.w	r3, [r0, #-11]
 8015c72:	f810 6c0a 	ldrb.w	r6, [r0, #-10]
 8015c76:	f810 5c09 	ldrb.w	r5, [r0, #-9]
 8015c7a:	f810 4c07 	ldrb.w	r4, [r0, #-7]
 8015c7e:	ea41 2103 	orr.w	r1, r1, r3, lsl #8
 8015c82:	ea46 2305 	orr.w	r3, r6, r5, lsl #8
 8015c86:	f244 064f 	movw	r6, #16463	; 0x404f
 8015c8a:	f646 253b 	movw	r5, #27195	; 0x6a3b
 8015c8e:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 8015c92:	f89c 4002 	ldrb.w	r4, [ip, #2]
 8015c96:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8015c9a:	f6c2 7690 	movt	r6, #12176	; 0x2f90
 8015c9e:	f6c9 25e1 	movt	r5, #39649	; 0x9ae1
 8015ca2:	fba1 b306 	umull	fp, r3, r1, r6
 8015ca6:	fb01 3105 	mla	r1, r1, r5, r3
 8015caa:	f810 3c05 	ldrb.w	r3, [r0, #-5]
 8015cae:	f810 5c06 	ldrb.w	r5, [r0, #-6]
 8015cb2:	ea45 2303 	orr.w	r3, r5, r3, lsl #8
 8015cb6:	f89c 5003 	ldrb.w	r5, [ip, #3]
 8015cba:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8015cbe:	fb02 1906 	mla	r9, r2, r6, r1
 8015cc2:	f89c 1000 	ldrb.w	r1, [ip]
 8015cc6:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8015cca:	ea44 2405 	orr.w	r4, r4, r5, lsl #8
 8015cce:	f24b 666f 	movw	r6, #46703	; 0xb66f
 8015cd2:	f2cb 4692 	movt	r6, #46226	; 0xb492
 8015cd6:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 8015cda:	f24f 2273 	movw	r2, #62067	; 0xf273
 8015cde:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8015ce2:	f6cb 6298 	movt	r2, #48792	; 0xbe98
 8015ce6:	fba1 5402 	umull	r5, r4, r1, r2
 8015cea:	fb01 4106 	mla	r1, r1, r6, r4
 8015cee:	9522      	str	r5, [sp, #136]	; 0x88
 8015cf0:	4666      	mov	r6, ip
 8015cf2:	f89c 4005 	ldrb.w	r4, [ip, #5]
 8015cf6:	f816 ef04 	ldrb.w	lr, [r6, #4]!
 8015cfa:	ea4e 2e04 	orr.w	lr, lr, r4, lsl #8
 8015cfe:	78b4      	ldrb	r4, [r6, #2]
 8015d00:	78f6      	ldrb	r6, [r6, #3]
 8015d02:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
 8015d06:	ea4e 4604 	orr.w	r6, lr, r4, lsl #16
 8015d0a:	fb06 1802 	mla	r8, r6, r2, r1
 8015d0e:	4666      	mov	r6, ip
 8015d10:	f89c 100d 	ldrb.w	r1, [ip, #13]
 8015d14:	f816 4f0c 	ldrb.w	r4, [r6, #12]!
 8015d18:	ea44 2101 	orr.w	r1, r4, r1, lsl #8
 8015d1c:	78b4      	ldrb	r4, [r6, #2]
 8015d1e:	78f6      	ldrb	r6, [r6, #3]
 8015d20:	ea44 2606 	orr.w	r6, r4, r6, lsl #8
 8015d24:	ea41 4e06 	orr.w	lr, r1, r6, lsl #16
 8015d28:	f89c 1009 	ldrb.w	r1, [ip, #9]
 8015d2c:	f81c 4f08 	ldrb.w	r4, [ip, #8]!
 8015d30:	ea44 2101 	orr.w	r1, r4, r1, lsl #8
 8015d34:	f89c 4002 	ldrb.w	r4, [ip, #2]
 8015d38:	f89c 3003 	ldrb.w	r3, [ip, #3]
 8015d3c:	ea44 2303 	orr.w	r3, r4, r3, lsl #8
 8015d40:	ea41 4c03 	orr.w	ip, r1, r3, lsl #16
 8015d44:	9923      	ldr	r1, [sp, #140]	; 0x8c
 8015d46:	eb15 030c 	adds.w	r3, r5, ip
 8015d4a:	eb48 040e 	adc.w	r4, r8, lr
 8015d4e:	0565      	lsls	r5, r4, #21
 8015d50:	ea45 25d3 	orr.w	r5, r5, r3, lsr #11
 8015d54:	055b      	lsls	r3, r3, #21
 8015d56:	ea43 23d4 	orr.w	r3, r3, r4, lsr #11
 8015d5a:	f810 4c02 	ldrb.w	r4, [r0, #-2]
 8015d5e:	eb1b 0b03 	adds.w	fp, fp, r3
 8015d62:	f810 3c01 	ldrb.w	r3, [r0, #-1]
 8015d66:	eb49 0905 	adc.w	r9, r9, r5
 8015d6a:	ea44 2303 	orr.w	r3, r4, r3, lsl #8
 8015d6e:	f810 4c03 	ldrb.w	r4, [r0, #-3]
 8015d72:	ea41 2404 	orr.w	r4, r1, r4, lsl #8
 8015d76:	f244 014f 	movw	r1, #16463	; 0x404f
 8015d7a:	f6c2 7190 	movt	r1, #12176	; 0x2f90
 8015d7e:	ea44 4203 	orr.w	r2, r4, r3, lsl #16
 8015d82:	2400      	movs	r4, #0
 8015d84:	eb11 034a 	adds.w	r3, r1, sl, lsl #1
 8015d88:	f646 213b 	movw	r1, #27195	; 0x6a3b
 8015d8c:	f6c9 21e1 	movt	r1, #39649	; 0x9ae1
 8015d90:	fba2 5603 	umull	r5, r6, r2, r3
 8015d94:	414c      	adcs	r4, r1
 8015d96:	7881      	ldrb	r1, [r0, #2]
 8015d98:	fb02 6204 	mla	r2, r2, r4, r6
 8015d9c:	78c6      	ldrb	r6, [r0, #3]
 8015d9e:	7840      	ldrb	r0, [r0, #1]
 8015da0:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
 8015da4:	9e24      	ldr	r6, [sp, #144]	; 0x90
 8015da6:	ea46 2000 	orr.w	r0, r6, r0, lsl #8
 8015daa:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8015dae:	00a9      	lsls	r1, r5, #2
 8015db0:	fb00 2003 	mla	r0, r0, r3, r2
 8015db4:	0faa      	lsrs	r2, r5, #30
 8015db6:	ea42 0280 	orr.w	r2, r2, r0, lsl #2
 8015dba:	ea41 7190 	orr.w	r1, r1, r0, lsr #30
 8015dbe:	eb1b 0a02 	adds.w	sl, fp, r2
 8015dc2:	eb49 0901 	adc.w	r9, r9, r1
 8015dc6:	9922      	ldr	r1, [sp, #136]	; 0x88
 8015dc8:	186d      	adds	r5, r5, r1
 8015dca:	f244 014f 	movw	r1, #16463	; 0x404f
 8015dce:	f6c2 7190 	movt	r1, #12176	; 0x2f90
 8015dd2:	eb40 0008 	adc.w	r0, r0, r8
 8015dd6:	eb1c 0601 	adds.w	r6, ip, r1
 8015dda:	f646 213b 	movw	r1, #27195	; 0x6a3b
 8015dde:	f6c9 21e1 	movt	r1, #39649	; 0x9ae1
 8015de2:	eb4e 0201 	adc.w	r2, lr, r1
 8015de6:	03b1      	lsls	r1, r6, #14
 8015de8:	0cb6      	lsrs	r6, r6, #18
 8015dea:	ea41 4192 	orr.w	r1, r1, r2, lsr #18
 8015dee:	ea46 3282 	orr.w	r2, r6, r2, lsl #14
 8015df2:	1952      	adds	r2, r2, r5
 8015df4:	ea8a 0602 	eor.w	r6, sl, r2
 8015df8:	4148      	adcs	r0, r1
 8015dfa:	fba6 5103 	umull	r5, r1, r6, r3
 8015dfe:	ea89 0c00 	eor.w	ip, r9, r0
 8015e02:	fb06 1104 	mla	r1, r6, r4, r1
 8015e06:	406a      	eors	r2, r5
 8015e08:	fb0c 1103 	mla	r1, ip, r3, r1
 8015e0c:	ea82 32d1 	eor.w	r2, r2, r1, lsr #15
 8015e10:	4048      	eors	r0, r1
 8015e12:	fba2 6503 	umull	r6, r5, r2, r3
 8015e16:	fb02 5204 	mla	r2, r2, r4, r5
 8015e1a:	fb00 2003 	mla	r0, r0, r3, r2
 8015e1e:	ea86 31d0 	eor.w	r1, r6, r0, lsr #15
 8015e22:	fba1 2603 	umull	r2, r6, r1, r3
 8015e26:	fb01 6104 	mla	r1, r1, r4, r6
 8015e2a:	fb00 1303 	mla	r3, r0, r3, r1
 8015e2e:	f000 bc39 	b.w	80166a4 <CityHash64+0xed8>
 8015e32:	9801      	ldr	r0, [sp, #4]
 8015e34:	f642 5c69 	movw	ip, #11625	; 0x2d69
 8015e38:	f6ce 3c38 	movt	ip, #60216	; 0xeb38
 8015e3c:	4450      	add	r0, sl
 8015e3e:	f810 1d28 	ldrb.w	r1, [r0, #-40]!
 8015e42:	911d      	str	r1, [sp, #116]	; 0x74
 8015e44:	f810 1f18 	ldrb.w	r1, [r0, #24]!
 8015e48:	9123      	str	r1, [sp, #140]	; 0x8c
 8015e4a:	f810 1d28 	ldrb.w	r1, [r0, #-40]!
 8015e4e:	9120      	str	r1, [sp, #128]	; 0x80
 8015e50:	f810 2f08 	ldrb.w	r2, [r0, #8]!
 8015e54:	f810 3f18 	ldrb.w	r3, [r0, #24]!
 8015e58:	f810 1d28 	ldrb.w	r1, [r0, #-40]!
 8015e5c:	911c      	str	r1, [sp, #112]	; 0x70
 8015e5e:	f810 1f20 	ldrb.w	r1, [r0, #32]!
 8015e62:	9124      	str	r1, [sp, #144]	; 0x90
 8015e64:	f810 1f18 	ldrb.w	r1, [r0, #24]!
 8015e68:	9122      	str	r1, [sp, #136]	; 0x88
 8015e6a:	f810 1f04 	ldrb.w	r1, [r0, #4]!
 8015e6e:	9121      	str	r1, [sp, #132]	; 0x84
 8015e70:	f810 1d18 	ldrb.w	r1, [r0, #-24]!
 8015e74:	911f      	str	r1, [sp, #124]	; 0x7c
 8015e76:	f810 1d20 	ldrb.w	r1, [r0, #-32]!
 8015e7a:	911a      	str	r1, [sp, #104]	; 0x68
 8015e7c:	f810 ef28 	ldrb.w	lr, [r0, #40]!
 8015e80:	f810 1d18 	ldrb.w	r1, [r0, #-24]!
 8015e84:	f810 6d08 	ldrb.w	r6, [r0, #-8]!
 8015e88:	9618      	str	r6, [sp, #96]	; 0x60
 8015e8a:	f810 6f28 	ldrb.w	r6, [r0, #40]!
 8015e8e:	961e      	str	r6, [sp, #120]	; 0x78
 8015e90:	f810 6d18 	ldrb.w	r6, [r0, #-24]!
 8015e94:	9615      	str	r6, [sp, #84]	; 0x54
 8015e96:	7b45      	ldrb	r5, [r0, #13]
 8015e98:	7bc4      	ldrb	r4, [r0, #15]
 8015e9a:	f890 b00e 	ldrb.w	fp, [r0, #14]
 8015e9e:	ea4b 2404 	orr.w	r4, fp, r4, lsl #8
 8015ea2:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 8015ea6:	f810 5c0a 	ldrb.w	r5, [r0, #-10]
 8015eaa:	f64e 2b08 	movw	fp, #59912	; 0xea08
 8015eae:	ea43 4604 	orr.w	r6, r3, r4, lsl #16
 8015eb2:	f810 3c09 	ldrb.w	r3, [r0, #-9]
 8015eb6:	f6c9 5bdf 	movt	fp, #40415	; 0x9ddf
 8015eba:	ea45 2303 	orr.w	r3, r5, r3, lsl #8
 8015ebe:	f810 5c0b 	ldrb.w	r5, [r0, #-11]
 8015ec2:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8015ec6:	4635      	mov	r5, r6
 8015ec8:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8015ecc:	951b      	str	r5, [sp, #108]	; 0x6c
 8015ece:	9217      	str	r2, [sp, #92]	; 0x5c
 8015ed0:	eb12 020a 	adds.w	r2, r2, sl
 8015ed4:	ea82 0206 	eor.w	r2, r2, r6
 8015ed8:	f810 3c07 	ldrb.w	r3, [r0, #-7]
 8015edc:	f810 9c06 	ldrb.w	r9, [r0, #-6]
 8015ee0:	fba2 840c 	umull	r8, r4, r2, ip
 8015ee4:	fb02 440b 	mla	r4, r2, fp, r4
 8015ee8:	f810 2c05 	ldrb.w	r2, [r0, #-5]
 8015eec:	ea41 2103 	orr.w	r1, r1, r3, lsl #8
 8015ef0:	ea49 2202 	orr.w	r2, r9, r2, lsl #8
 8015ef4:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8015ef8:	9116      	str	r1, [sp, #88]	; 0x58
 8015efa:	f141 0100 	adc.w	r1, r1, #0
 8015efe:	7cc3      	ldrb	r3, [r0, #19]
 8015f00:	7c86      	ldrb	r6, [r0, #18]
 8015f02:	ea46 2303 	orr.w	r3, r6, r3, lsl #8
 8015f06:	7c46      	ldrb	r6, [r0, #17]
 8015f08:	ea4e 2606 	orr.w	r6, lr, r6, lsl #8
 8015f0c:	ea46 4203 	orr.w	r2, r6, r3, lsl #16
 8015f10:	ea88 0305 	eor.w	r3, r8, r5
 8015f14:	4051      	eors	r1, r2
 8015f16:	9219      	str	r2, [sp, #100]	; 0x64
 8015f18:	fb01 410c 	mla	r1, r1, ip, r4
 8015f1c:	ea83 33d1 	eor.w	r3, r3, r1, lsr #15
 8015f20:	4051      	eors	r1, r2
 8015f22:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8015f24:	fba3 540c 	umull	r5, r4, r3, ip
 8015f28:	fb03 430b 	mla	r3, r3, fp, r4
 8015f2c:	fb01 310c 	mla	r1, r1, ip, r3
 8015f30:	ea85 33d1 	eor.w	r3, r5, r1, lsr #15
 8015f34:	fba3 850c 	umull	r8, r5, r3, ip
 8015f38:	fb03 530b 	mla	r3, r3, fp, r5
 8015f3c:	fb01 3c0c 	mla	ip, r1, ip, r3
 8015f40:	78c1      	ldrb	r1, [r0, #3]
 8015f42:	7883      	ldrb	r3, [r0, #2]
 8015f44:	ea43 2101 	orr.w	r1, r3, r1, lsl #8
 8015f48:	7843      	ldrb	r3, [r0, #1]
 8015f4a:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
 8015f4e:	ea43 4b01 	orr.w	fp, r3, r1, lsl #16
 8015f52:	991a      	ldr	r1, [sp, #104]	; 0x68
 8015f54:	f8cd b054 	str.w	fp, [sp, #84]	; 0x54
 8015f58:	f810 2c17 	ldrb.w	r2, [r0, #-23]
 8015f5c:	f810 3c15 	ldrb.w	r3, [r0, #-21]
 8015f60:	f810 5c16 	ldrb.w	r5, [r0, #-22]
 8015f64:	f810 4c1a 	ldrb.w	r4, [r0, #-26]
 8015f68:	f810 6c19 	ldrb.w	r6, [r0, #-25]
 8015f6c:	ea45 2303 	orr.w	r3, r5, r3, lsl #8
 8015f70:	ea41 2202 	orr.w	r2, r1, r2, lsl #8
 8015f74:	f810 5c1b 	ldrb.w	r5, [r0, #-27]
 8015f78:	ea44 2606 	orr.w	r6, r4, r6, lsl #8
 8015f7c:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 8015f7e:	9918      	ldr	r1, [sp, #96]	; 0x60
 8015f80:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8015f84:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8015f86:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 8015f8a:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8015f8e:	eb13 050a 	adds.w	r5, r3, sl
 8015f92:	f810 3c02 	ldrb.w	r3, [r0, #-2]
 8015f96:	f142 0e00 	adc.w	lr, r2, #0
 8015f9a:	f810 2c01 	ldrb.w	r2, [r0, #-1]
 8015f9e:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 8015fa2:	f810 3c03 	ldrb.w	r3, [r0, #-3]
 8015fa6:	f8cd 8070 	str.w	r8, [sp, #112]	; 0x70
 8015faa:	f8cd c068 	str.w	ip, [sp, #104]	; 0x68
 8015fae:	ea44 2303 	orr.w	r3, r4, r3, lsl #8
 8015fb2:	ea43 4902 	orr.w	r9, r3, r2, lsl #16
 8015fb6:	eb15 0209 	adds.w	r2, r5, r9
 8015fba:	eb4e 030b 	adc.w	r3, lr, fp
 8015fbe:	eb12 0208 	adds.w	r2, r2, r8
 8015fc2:	ea4f 24c2 	mov.w	r4, r2, lsl #11
 8015fc6:	eb43 030c 	adc.w	r3, r3, ip
 8015fca:	0d52      	lsrs	r2, r2, #21
 8015fcc:	ea42 26c3 	orr.w	r6, r2, r3, lsl #11
 8015fd0:	ea44 5c53 	orr.w	ip, r4, r3, lsr #21
 8015fd4:	f810 2c0d 	ldrb.w	r2, [r0, #-13]
 8015fd8:	f810 3c0e 	ldrb.w	r3, [r0, #-14]
 8015fdc:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 8015fe0:	f810 3c0f 	ldrb.w	r3, [r0, #-15]
 8015fe4:	ea41 2303 	orr.w	r3, r1, r3, lsl #8
 8015fe8:	9920      	ldr	r1, [sp, #128]	; 0x80
 8015fea:	ea43 4802 	orr.w	r8, r3, r2, lsl #16
 8015fee:	f810 2c11 	ldrb.w	r2, [r0, #-17]
 8015ff2:	f810 3c12 	ldrb.w	r3, [r0, #-18]
 8015ff6:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 8015ffa:	f810 3c13 	ldrb.w	r3, [r0, #-19]
 8015ffe:	ea41 2303 	orr.w	r3, r1, r3, lsl #8
 8016002:	ea43 4102 	orr.w	r1, r3, r2, lsl #16
 8016006:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8016008:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801600a:	1852      	adds	r2, r2, r1
 801600c:	eb43 0308 	adc.w	r3, r3, r8
 8016010:	1952      	adds	r2, r2, r5
 8016012:	eb43 030e 	adc.w	r3, r3, lr
 8016016:	ea4f 5b02 	mov.w	fp, r2, lsl #20
 801601a:	9214      	str	r2, [sp, #80]	; 0x50
 801601c:	051c      	lsls	r4, r3, #20
 801601e:	9313      	str	r3, [sp, #76]	; 0x4c
 8016020:	ea44 3412 	orr.w	r4, r4, r2, lsr #12
 8016024:	ea4b 3213 	orr.w	r2, fp, r3, lsr #12
 8016028:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801602a:	1952      	adds	r2, r2, r5
 801602c:	eb44 050e 	adc.w	r5, r4, lr
 8016030:	1992      	adds	r2, r2, r6
 8016032:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
 8016034:	921d      	str	r2, [sp, #116]	; 0x74
 8016036:	eb45 020c 	adc.w	r2, r5, ip
 801603a:	f8dd c054 	ldr.w	ip, [sp, #84]	; 0x54
 801603e:	9220      	str	r2, [sp, #128]	; 0x80
 8016040:	7ec2      	ldrb	r2, [r0, #27]
 8016042:	7e86      	ldrb	r6, [r0, #26]
 8016044:	7d85      	ldrb	r5, [r0, #22]
 8016046:	ea46 2202 	orr.w	r2, r6, r2, lsl #8
 801604a:	7e46      	ldrb	r6, [r0, #25]
 801604c:	ea43 2606 	orr.w	r6, r3, r6, lsl #8
 8016050:	ea46 4e02 	orr.w	lr, r6, r2, lsl #16
 8016054:	7dc6      	ldrb	r6, [r0, #23]
 8016056:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8016058:	ea45 2606 	orr.w	r6, r5, r6, lsl #8
 801605c:	7d45      	ldrb	r5, [r0, #21]
 801605e:	ea42 2505 	orr.w	r5, r2, r5, lsl #8
 8016062:	ea45 4606 	orr.w	r6, r5, r6, lsl #16
 8016066:	7a85      	ldrb	r5, [r0, #10]
 8016068:	198a      	adds	r2, r1, r6
 801606a:	7ac1      	ldrb	r1, [r0, #11]
 801606c:	eb48 030e 	adc.w	r3, r8, lr
 8016070:	ea45 2101 	orr.w	r1, r5, r1, lsl #8
 8016074:	7a45      	ldrb	r5, [r0, #9]
 8016076:	ea44 2505 	orr.w	r5, r4, r5, lsl #8
 801607a:	7984      	ldrb	r4, [r0, #6]
 801607c:	ea45 4801 	orr.w	r8, r5, r1, lsl #16
 8016080:	79c5      	ldrb	r5, [r0, #7]
 8016082:	9924      	ldr	r1, [sp, #144]	; 0x90
 8016084:	ea44 2505 	orr.w	r5, r4, r5, lsl #8
 8016088:	7944      	ldrb	r4, [r0, #5]
 801608a:	9223      	str	r2, [sp, #140]	; 0x8c
 801608c:	9324      	str	r3, [sp, #144]	; 0x90
 801608e:	ea41 2404 	orr.w	r4, r1, r4, lsl #8
 8016092:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
 8016096:	18ad      	adds	r5, r5, r2
 8016098:	f24f 2273 	movw	r2, #62067	; 0xf273
 801609c:	f6cb 6298 	movt	r2, #48792	; 0xbe98
 80160a0:	eb43 0108 	adc.w	r1, r3, r8
 80160a4:	18ac      	adds	r4, r5, r2
 80160a6:	f24b 626f 	movw	r2, #46703	; 0xb66f
 80160aa:	f2cb 4292 	movt	r2, #46226	; 0xb492
 80160ae:	4151      	adcs	r1, r2
 80160b0:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80160b2:	18b6      	adds	r6, r6, r2
 80160b4:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80160b6:	eb42 020e 	adc.w	r2, r2, lr
 80160ba:	1936      	adds	r6, r6, r4
 80160bc:	eb42 0501 	adc.w	r5, r2, r1
 80160c0:	0533      	lsls	r3, r6, #20
 80160c2:	052a      	lsls	r2, r5, #20
 80160c4:	ea43 3315 	orr.w	r3, r3, r5, lsr #12
 80160c8:	eb13 0804 	adds.w	r8, r3, r4
 80160cc:	ea42 3216 	orr.w	r2, r2, r6, lsr #12
 80160d0:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 80160d4:	eb42 0e01 	adc.w	lr, r2, r1
 80160d8:	f890 2023 	ldrb.w	r2, [r0, #35]	; 0x23
 80160dc:	eb14 0409 	adds.w	r4, r4, r9
 80160e0:	eb41 0b0c 	adc.w	fp, r1, ip
 80160e4:	9921      	ldr	r1, [sp, #132]	; 0x84
 80160e6:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 80160ea:	f890 3021 	ldrb.w	r3, [r0, #33]	; 0x21
 80160ee:	ea41 2303 	orr.w	r3, r1, r3, lsl #8
 80160f2:	7f81      	ldrb	r1, [r0, #30]
 80160f4:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
 80160f8:	7fc3      	ldrb	r3, [r0, #31]
 80160fa:	7f40      	ldrb	r0, [r0, #29]
 80160fc:	ea41 2103 	orr.w	r1, r1, r3, lsl #8
 8016100:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8016102:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
 8016106:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 801610a:	1821      	adds	r1, r4, r0
 801610c:	ea4f 24c1 	mov.w	r4, r1, lsl #11
 8016110:	eb4b 0302 	adc.w	r3, fp, r2
 8016114:	0d49      	lsrs	r1, r1, #21
 8016116:	ea41 21c3 	orr.w	r1, r1, r3, lsl #11
 801611a:	ea44 5453 	orr.w	r4, r4, r3, lsr #21
 801611e:	f24f 2373 	movw	r3, #62067	; 0xf273
 8016122:	eb11 0108 	adds.w	r1, r1, r8
 8016126:	f6cb 6398 	movt	r3, #48792	; 0xbe98
 801612a:	f04f 0800 	mov.w	r8, #0
 801612e:	9118      	str	r1, [sp, #96]	; 0x60
 8016130:	eb4e 0104 	adc.w	r1, lr, r4
 8016134:	1980      	adds	r0, r0, r6
 8016136:	f24b 666f 	movw	r6, #46703	; 0xb66f
 801613a:	f8dd e074 	ldr.w	lr, [sp, #116]	; 0x74
 801613e:	9016      	str	r0, [sp, #88]	; 0x58
 8016140:	eb45 0002 	adc.w	r0, r5, r2
 8016144:	9119      	str	r1, [sp, #100]	; 0x64
 8016146:	f2cb 4692 	movt	r6, #46226	; 0xb492
 801614a:	9d01      	ldr	r5, [sp, #4]
 801614c:	9017      	str	r0, [sp, #92]	; 0x5c
 801614e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8016150:	eb10 0009 	adds.w	r0, r0, r9
 8016154:	9021      	str	r0, [sp, #132]	; 0x84
 8016156:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016158:	eb40 000c 	adc.w	r0, r0, ip
 801615c:	9022      	str	r0, [sp, #136]	; 0x88
 801615e:	fba9 1003 	umull	r1, r0, r9, r3
 8016162:	fb09 0006 	mla	r0, r9, r6, r0
 8016166:	fb0c 0203 	mla	r2, ip, r3, r0
 801616a:	462b      	mov	r3, r5
 801616c:	7968      	ldrb	r0, [r5, #5]
 801616e:	f813 6f04 	ldrb.w	r6, [r3, #4]!
 8016172:	ea46 2000 	orr.w	r0, r6, r0, lsl #8
 8016176:	789e      	ldrb	r6, [r3, #2]
 8016178:	78db      	ldrb	r3, [r3, #3]
 801617a:	ea46 2303 	orr.w	r3, r6, r3, lsl #8
 801617e:	78ae      	ldrb	r6, [r5, #2]
 8016180:	ea40 4403 	orr.w	r4, r0, r3, lsl #16
 8016184:	7828      	ldrb	r0, [r5, #0]
 8016186:	786b      	ldrb	r3, [r5, #1]
 8016188:	78ed      	ldrb	r5, [r5, #3]
 801618a:	940e      	str	r4, [sp, #56]	; 0x38
 801618c:	ea46 2605 	orr.w	r6, r6, r5, lsl #8
 8016190:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
 8016194:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8016198:	900c      	str	r0, [sp, #48]	; 0x30
 801619a:	1840      	adds	r0, r0, r1
 801619c:	f1aa 0101 	sub.w	r1, sl, #1
 80161a0:	901e      	str	r0, [sp, #120]	; 0x78
 80161a2:	eb44 0002 	adc.w	r0, r4, r2
 80161a6:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 80161aa:	901f      	str	r0, [sp, #124]	; 0x7c
 80161ac:	f1a1 0040 	sub.w	r0, r1, #64	; 0x40
 80161b0:	9000      	str	r0, [sp, #0]
 80161b2:	e02c      	b.n	801620e <CityHash64+0xa42>
 80161b4:	a816      	add	r0, sp, #88	; 0x58
 80161b6:	f108 0840 	add.w	r8, r8, #64	; 0x40
 80161ba:	e880 0430 	stmia.w	r0, {r4, r5, sl}
 80161be:	a821      	add	r0, sp, #132	; 0x84
 80161c0:	f8cd 9064 	str.w	r9, [sp, #100]	; 0x64
 80161c4:	e880 084a 	stmia.w	r0, {r1, r3, r6, fp}
 80161c8:	9c02      	ldr	r4, [sp, #8]
 80161ca:	f814 0f40 	ldrb.w	r0, [r4, #64]!
 80161ce:	f814 1f04 	ldrb.w	r1, [r4, #4]!
 80161d2:	78e2      	ldrb	r2, [r4, #3]
 80161d4:	78a3      	ldrb	r3, [r4, #2]
 80161d6:	f814 6c02 	ldrb.w	r6, [r4, #-2]
 80161da:	f814 5c01 	ldrb.w	r5, [r4, #-1]
 80161de:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 80161e2:	f814 3c03 	ldrb.w	r3, [r4, #-3]
 80161e6:	7864      	ldrb	r4, [r4, #1]
 80161e8:	ea41 2104 	orr.w	r1, r1, r4, lsl #8
 80161ec:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
 80161f0:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80161f4:	910e      	str	r1, [sp, #56]	; 0x38
 80161f6:	ea46 2105 	orr.w	r1, r6, r5, lsl #8
 80161fa:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 80161fe:	900c      	str	r0, [sp, #48]	; 0x30
 8016200:	e9dd e011 	ldrd	lr, r0, [sp, #68]	; 0x44
 8016204:	9020      	str	r0, [sp, #128]	; 0x80
 8016206:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016208:	901c      	str	r0, [sp, #112]	; 0x70
 801620a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801620c:	901a      	str	r0, [sp, #104]	; 0x68
 801620e:	9801      	ldr	r0, [sp, #4]
 8016210:	f8cd 806c 	str.w	r8, [sp, #108]	; 0x6c
 8016214:	f24b 666f 	movw	r6, #46703	; 0xb66f
 8016218:	f2cb 4692 	movt	r6, #46226	; 0xb492
 801621c:	eb00 0908 	add.w	r9, r0, r8
 8016220:	f8cd 9008 	str.w	r9, [sp, #8]
 8016224:	f819 bf08 	ldrb.w	fp, [r9, #8]!
 8016228:	f819 0f28 	ldrb.w	r0, [r9, #40]!
 801622c:	900d      	str	r0, [sp, #52]	; 0x34
 801622e:	f819 0d08 	ldrb.w	r0, [r9, #-8]!
 8016232:	900f      	str	r0, [sp, #60]	; 0x3c
 8016234:	f819 2d18 	ldrb.w	r2, [r9, #-24]!
 8016238:	f819 0f08 	ldrb.w	r0, [r9, #8]!
 801623c:	9015      	str	r0, [sp, #84]	; 0x54
 801623e:	f819 0f08 	ldrb.w	r0, [r9, #8]!
 8016242:	9006      	str	r0, [sp, #24]
 8016244:	f819 0f18 	ldrb.w	r0, [r9, #24]!
 8016248:	9014      	str	r0, [sp, #80]	; 0x50
 801624a:	f819 0f04 	ldrb.w	r0, [r9, #4]!
 801624e:	9010      	str	r0, [sp, #64]	; 0x40
 8016250:	f819 0d18 	ldrb.w	r0, [r9, #-24]!
 8016254:	9004      	str	r0, [sp, #16]
 8016256:	f819 0d08 	ldrb.w	r0, [r9, #-8]!
 801625a:	9013      	str	r0, [sp, #76]	; 0x4c
 801625c:	f819 4d08 	ldrb.w	r4, [r9, #-8]!
 8016260:	f819 0f18 	ldrb.w	r0, [r9, #24]!
 8016264:	9007      	str	r0, [sp, #28]
 8016266:	f819 0f08 	ldrb.w	r0, [r9, #8]!
 801626a:	9005      	str	r0, [sp, #20]
 801626c:	f819 5d28 	ldrb.w	r5, [r9, #-40]!
 8016270:	f899 000b 	ldrb.w	r0, [r9, #11]
 8016274:	f899 100a 	ldrb.w	r1, [r9, #10]
 8016278:	ea41 2000 	orr.w	r0, r1, r0, lsl #8
 801627c:	f899 1009 	ldrb.w	r1, [r9, #9]
 8016280:	ea44 2101 	orr.w	r1, r4, r1, lsl #8
 8016284:	ea41 4400 	orr.w	r4, r1, r0, lsl #16
 8016288:	9408      	str	r4, [sp, #32]
 801628a:	f899 0007 	ldrb.w	r0, [r9, #7]
 801628e:	f899 1006 	ldrb.w	r1, [r9, #6]
 8016292:	ea41 2000 	orr.w	r0, r1, r0, lsl #8
 8016296:	f899 1005 	ldrb.w	r1, [r9, #5]
 801629a:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
 801629e:	ea41 4c00 	orr.w	ip, r1, r0, lsl #16
 80162a2:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
 80162a6:	f899 8001 	ldrb.w	r8, [r9, #1]
 80162aa:	f899 0003 	ldrb.w	r0, [r9, #3]
 80162ae:	f899 1002 	ldrb.w	r1, [r9, #2]
 80162b2:	f819 ac03 	ldrb.w	sl, [r9, #-3]
 80162b6:	f819 2c02 	ldrb.w	r2, [r9, #-2]
 80162ba:	ea41 2000 	orr.w	r0, r1, r0, lsl #8
 80162be:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 80162c2:	f819 1c01 	ldrb.w	r1, [r9, #-1]
 80162c6:	f8cd e074 	str.w	lr, [sp, #116]	; 0x74
 80162ca:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 80162ce:	f24f 2073 	movw	r0, #62067	; 0xf273
 80162d2:	f6cb 6098 	movt	r0, #48792	; 0xbe98
 80162d6:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
 80162da:	fbae 8300 	umull	r8, r3, lr, r0
 80162de:	fb0e 3306 	mla	r3, lr, r6, r3
 80162e2:	9e20      	ldr	r6, [sp, #128]	; 0x80
 80162e4:	fb06 3300 	mla	r3, r6, r0, r3
 80162e8:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80162ea:	980e      	ldr	r0, [sp, #56]	; 0x38
 80162ec:	eb18 0e06 	adds.w	lr, r8, r6
 80162f0:	f24f 2873 	movw	r8, #62067	; 0xf273
 80162f4:	4143      	adcs	r3, r0
 80162f6:	ea4b 200a 	orr.w	r0, fp, sl, lsl #8
 80162fa:	f8dd a05c 	ldr.w	sl, [sp, #92]	; 0x5c
 80162fe:	f24b 6b6f 	movw	fp, #46703	; 0xb66f
 8016302:	f6cb 6898 	movt	r8, #48792	; 0xbe98
 8016306:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 801630a:	f2cb 4b92 	movt	fp, #46226	; 0xb492
 801630e:	eb10 010e 	adds.w	r1, r0, lr
 8016312:	eb45 0203 	adc.w	r2, r5, r3
 8016316:	eb11 060c 	adds.w	r6, r1, ip
 801631a:	eb42 0c04 	adc.w	ip, r2, r4
 801631e:	0532      	lsls	r2, r6, #20
 8016320:	960e      	str	r6, [sp, #56]	; 0x38
 8016322:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016324:	ea4f 510c 	mov.w	r1, ip, lsl #20
 8016328:	ea42 321c 	orr.w	r2, r2, ip, lsr #12
 801632c:	f8cd c030 	str.w	ip, [sp, #48]	; 0x30
 8016330:	f8dd c058 	ldr.w	ip, [sp, #88]	; 0x58
 8016334:	eb12 020e 	adds.w	r2, r2, lr
 8016338:	ea41 3116 	orr.w	r1, r1, r6, lsr #12
 801633c:	4159      	adcs	r1, r3
 801633e:	9212      	str	r2, [sp, #72]	; 0x48
 8016340:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016342:	9103      	str	r1, [sp, #12]
 8016344:	f899 1013 	ldrb.w	r1, [r9, #19]
 8016348:	f899 6012 	ldrb.w	r6, [r9, #18]
 801634c:	ea46 2101 	orr.w	r1, r6, r1, lsl #8
 8016350:	f899 6011 	ldrb.w	r6, [r9, #17]
 8016354:	ea42 2606 	orr.w	r6, r2, r6, lsl #8
 8016358:	ea46 4201 	orr.w	r2, r6, r1, lsl #16
 801635c:	920b      	str	r2, [sp, #44]	; 0x2c
 801635e:	f899 100f 	ldrb.w	r1, [r9, #15]
 8016362:	f899 600e 	ldrb.w	r6, [r9, #14]
 8016366:	ea46 2101 	orr.w	r1, r6, r1, lsl #8
 801636a:	f899 600d 	ldrb.w	r6, [r9, #13]
 801636e:	ea44 2606 	orr.w	r6, r4, r6, lsl #8
 8016372:	ea46 4401 	orr.w	r4, r6, r1, lsl #16
 8016376:	eb1e 010c 	adds.w	r1, lr, ip
 801637a:	eb43 030a 	adc.w	r3, r3, sl
 801637e:	eb11 0e04 	adds.w	lr, r1, r4
 8016382:	9921      	ldr	r1, [sp, #132]	; 0x84
 8016384:	940a      	str	r4, [sp, #40]	; 0x28
 8016386:	4153      	adcs	r3, r2
 8016388:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801638a:	1856      	adds	r6, r2, r1
 801638c:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801638e:	9922      	ldr	r1, [sp, #136]	; 0x88
 8016390:	414a      	adcs	r2, r1
 8016392:	9923      	ldr	r1, [sp, #140]	; 0x8c
 8016394:	1876      	adds	r6, r6, r1
 8016396:	9924      	ldr	r1, [sp, #144]	; 0x90
 8016398:	414a      	adcs	r2, r1
 801639a:	1980      	adds	r0, r0, r6
 801639c:	416a      	adcs	r2, r5
 801639e:	06c6      	lsls	r6, r0, #27
 80163a0:	9d18      	ldr	r5, [sp, #96]	; 0x60
 80163a2:	ea46 1652 	orr.w	r6, r6, r2, lsr #5
 80163a6:	06d2      	lsls	r2, r2, #27
 80163a8:	fba6 1408 	umull	r1, r4, r6, r8
 80163ac:	ea42 1050 	orr.w	r0, r2, r0, lsr #5
 80163b0:	fb06 460b 	mla	r6, r6, fp, r4
 80163b4:	9c19      	ldr	r4, [sp, #100]	; 0x64
 80163b6:	fb00 6008 	mla	r0, r0, r8, r6
 80163ba:	ea80 0204 	eor.w	r2, r0, r4
 80163be:	ea81 0005 	eor.w	r0, r1, r5
 80163c2:	9013      	str	r0, [sp, #76]	; 0x4c
 80163c4:	eb10 000e 	adds.w	r0, r0, lr
 80163c8:	9215      	str	r2, [sp, #84]	; 0x54
 80163ca:	eb43 0102 	adc.w	r1, r3, r2
 80163ce:	02c2      	lsls	r2, r0, #11
 80163d0:	0d40      	lsrs	r0, r0, #21
 80163d2:	ea42 5251 	orr.w	r2, r2, r1, lsr #21
 80163d6:	ea40 20c1 	orr.w	r0, r0, r1, lsl #11
 80163da:	9912      	ldr	r1, [sp, #72]	; 0x48
 80163dc:	1840      	adds	r0, r0, r1
 80163de:	991a      	ldr	r1, [sp, #104]	; 0x68
 80163e0:	9011      	str	r0, [sp, #68]	; 0x44
 80163e2:	9803      	ldr	r0, [sp, #12]
 80163e4:	4150      	adcs	r0, r2
 80163e6:	9012      	str	r0, [sp, #72]	; 0x48
 80163e8:	981c      	ldr	r0, [sp, #112]	; 0x70
 80163ea:	eb10 000c 	adds.w	r0, r0, ip
 80163ee:	f24b 6c6f 	movw	ip, #46703	; 0xb66f
 80163f2:	eb41 010a 	adc.w	r1, r1, sl
 80163f6:	07c2      	lsls	r2, r0, #31
 80163f8:	f2cb 4c92 	movt	ip, #46226	; 0xb492
 80163fc:	ea42 0251 	orr.w	r2, r2, r1, lsr #1
 8016400:	07c9      	lsls	r1, r1, #31
 8016402:	fba2 6308 	umull	r6, r3, r2, r8
 8016406:	ea41 0050 	orr.w	r0, r1, r0, lsr #1
 801640a:	fb02 320b 	mla	r2, r2, fp, r3
 801640e:	961e      	str	r6, [sp, #120]	; 0x78
 8016410:	fb00 2108 	mla	r1, r0, r8, r2
 8016414:	1970      	adds	r0, r6, r5
 8016416:	9e04      	ldr	r6, [sp, #16]
 8016418:	911f      	str	r1, [sp, #124]	; 0x7c
 801641a:	4161      	adcs	r1, r4
 801641c:	f899 201b 	ldrb.w	r2, [r9, #27]
 8016420:	f899 301a 	ldrb.w	r3, [r9, #26]
 8016424:	f899 5016 	ldrb.w	r5, [r9, #22]
 8016428:	f899 401e 	ldrb.w	r4, [r9, #30]
 801642c:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 8016430:	f899 3019 	ldrb.w	r3, [r9, #25]
 8016434:	ea46 2303 	orr.w	r3, r6, r3, lsl #8
 8016438:	9e06      	ldr	r6, [sp, #24]
 801643a:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
 801643e:	f899 3017 	ldrb.w	r3, [r9, #23]
 8016442:	ea45 2303 	orr.w	r3, r5, r3, lsl #8
 8016446:	f899 5015 	ldrb.w	r5, [r9, #21]
 801644a:	ea46 2505 	orr.w	r5, r6, r5, lsl #8
 801644e:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 8016452:	eb10 0a03 	adds.w	sl, r0, r3
 8016456:	f899 002b 	ldrb.w	r0, [r9, #43]	; 0x2b
 801645a:	f899 3022 	ldrb.w	r3, [r9, #34]	; 0x22
 801645e:	eb41 0e02 	adc.w	lr, r1, r2
 8016462:	f899 102a 	ldrb.w	r1, [r9, #42]	; 0x2a
 8016466:	9a05      	ldr	r2, [sp, #20]
 8016468:	ea41 2000 	orr.w	r0, r1, r0, lsl #8
 801646c:	f899 1029 	ldrb.w	r1, [r9, #41]	; 0x29
 8016470:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
 8016474:	ea41 4500 	orr.w	r5, r1, r0, lsl #16
 8016478:	f899 1023 	ldrb.w	r1, [r9, #35]	; 0x23
 801647c:	9807      	ldr	r0, [sp, #28]
 801647e:	ea43 2101 	orr.w	r1, r3, r1, lsl #8
 8016482:	f899 3021 	ldrb.w	r3, [r9, #33]	; 0x21
 8016486:	ea40 2303 	orr.w	r3, r0, r3, lsl #8
 801648a:	980d      	ldr	r0, [sp, #52]	; 0x34
 801648c:	ea43 4b01 	orr.w	fp, r3, r1, lsl #16
 8016490:	f899 1027 	ldrb.w	r1, [r9, #39]	; 0x27
 8016494:	f899 3026 	ldrb.w	r3, [r9, #38]	; 0x26
 8016498:	ea43 2101 	orr.w	r1, r3, r1, lsl #8
 801649c:	f899 3025 	ldrb.w	r3, [r9, #37]	; 0x25
 80164a0:	ea40 2303 	orr.w	r3, r0, r3, lsl #8
 80164a4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80164a6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80164aa:	f899 101f 	ldrb.w	r1, [r9, #31]
 80164ae:	ea44 2101 	orr.w	r1, r4, r1, lsl #8
 80164b2:	f899 401d 	ldrb.w	r4, [r9, #29]
 80164b6:	ea40 2404 	orr.w	r4, r0, r4, lsl #8
 80164ba:	4670      	mov	r0, lr
 80164bc:	ea44 4601 	orr.w	r6, r4, r1, lsl #16
 80164c0:	9019      	str	r0, [sp, #100]	; 0x64
 80164c2:	18f1      	adds	r1, r6, r3
 80164c4:	eb4b 0205 	adc.w	r2, fp, r5
 80164c8:	eb11 040a 	adds.w	r4, r1, sl
 80164cc:	eb42 0e00 	adc.w	lr, r2, r0
 80164d0:	0522      	lsls	r2, r4, #20
 80164d2:	ea4f 510e 	mov.w	r1, lr, lsl #20
 80164d6:	ea42 321e 	orr.w	r2, r2, lr, lsr #12
 80164da:	eb12 020a 	adds.w	r2, r2, sl
 80164de:	ea41 3114 	orr.w	r1, r1, r4, lsr #12
 80164e2:	4141      	adcs	r1, r0
 80164e4:	981d      	ldr	r0, [sp, #116]	; 0x74
 80164e6:	921c      	str	r2, [sp, #112]	; 0x70
 80164e8:	911a      	str	r1, [sp, #104]	; 0x68
 80164ea:	9923      	ldr	r1, [sp, #140]	; 0x8c
 80164ec:	180a      	adds	r2, r1, r0
 80164ee:	9820      	ldr	r0, [sp, #128]	; 0x80
 80164f0:	9924      	ldr	r1, [sp, #144]	; 0x90
 80164f2:	4148      	adcs	r0, r1
 80164f4:	18d2      	adds	r2, r2, r3
 80164f6:	4168      	adcs	r0, r5
 80164f8:	0593      	lsls	r3, r2, #22
 80164fa:	ea43 2390 	orr.w	r3, r3, r0, lsr #10
 80164fe:	0580      	lsls	r0, r0, #22
 8016500:	fba3 5108 	umull	r5, r1, r3, r8
 8016504:	ea40 2092 	orr.w	r0, r0, r2, lsr #10
 8016508:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801650a:	fb03 110c 	mla	r1, r3, ip, r1
 801650e:	f899 3032 	ldrb.w	r3, [r9, #50]	; 0x32
 8016512:	fb00 1008 	mla	r0, r0, r8, r1
 8016516:	9921      	ldr	r1, [sp, #132]	; 0x84
 8016518:	f8dd 806c 	ldr.w	r8, [sp, #108]	; 0x6c
 801651c:	1989      	adds	r1, r1, r6
 801651e:	eb42 020b 	adc.w	r2, r2, fp
 8016522:	194e      	adds	r6, r1, r5
 8016524:	9908      	ldr	r1, [sp, #32]
 8016526:	f899 502e 	ldrb.w	r5, [r9, #46]	; 0x2e
 801652a:	eb42 0b00 	adc.w	fp, r2, r0
 801652e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8016530:	f899 2033 	ldrb.w	r2, [r9, #51]	; 0x33
 8016534:	1980      	adds	r0, r0, r6
 8016536:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 801653a:	f899 3031 	ldrb.w	r3, [r9, #49]	; 0x31
 801653e:	eb41 010b 	adc.w	r1, r1, fp
 8016542:	eb10 0c0a 	adds.w	ip, r0, sl
 8016546:	9819      	ldr	r0, [sp, #100]	; 0x64
 8016548:	4141      	adcs	r1, r0
 801654a:	9810      	ldr	r0, [sp, #64]	; 0x40
 801654c:	ea40 2303 	orr.w	r3, r0, r3, lsl #8
 8016550:	9814      	ldr	r0, [sp, #80]	; 0x50
 8016552:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
 8016556:	f899 302f 	ldrb.w	r3, [r9, #47]	; 0x2f
 801655a:	ea45 2303 	orr.w	r3, r5, r3, lsl #8
 801655e:	f899 502d 	ldrb.w	r5, [r9, #45]	; 0x2d
 8016562:	ea40 2505 	orr.w	r5, r0, r5, lsl #8
 8016566:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 801656a:	eb1c 0003 	adds.w	r0, ip, r3
 801656e:	ea4f 25c0 	mov.w	r5, r0, lsl #11
 8016572:	4151      	adcs	r1, r2
 8016574:	0d40      	lsrs	r0, r0, #21
 8016576:	ea45 5551 	orr.w	r5, r5, r1, lsr #21
 801657a:	ea40 20c1 	orr.w	r0, r0, r1, lsl #11
 801657e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8016580:	eb11 0a00 	adds.w	sl, r1, r0
 8016584:	981a      	ldr	r0, [sp, #104]	; 0x68
 8016586:	990a      	ldr	r1, [sp, #40]	; 0x28
 8016588:	eb40 0905 	adc.w	r9, r0, r5
 801658c:	980e      	ldr	r0, [sp, #56]	; 0x38
 801658e:	18e4      	adds	r4, r4, r3
 8016590:	eb4e 0502 	adc.w	r5, lr, r2
 8016594:	1809      	adds	r1, r1, r0
 8016596:	e9dd 200b 	ldrd	r2, r0, [sp, #44]	; 0x2c
 801659a:	eb40 0302 	adc.w	r3, r0, r2
 801659e:	9800      	ldr	r0, [sp, #0]
 80165a0:	4540      	cmp	r0, r8
 80165a2:	f47f ae07 	bne.w	80161b4 <CityHash64+0x9e8>
 80165a6:	ea84 0001 	eor.w	r0, r4, r1
 80165aa:	46a4      	mov	ip, r4
 80165ac:	f642 5469 	movw	r4, #11625	; 0x2d69
 80165b0:	f64e 2808 	movw	r8, #59912	; 0xea08
 80165b4:	f6ce 3438 	movt	r4, #60216	; 0xeb38
 80165b8:	f6c9 58df 	movt	r8, #40415	; 0x9ddf
 80165bc:	fba0 1204 	umull	r1, r2, r0, r4
 80165c0:	fb00 2008 	mla	r0, r0, r8, r2
 80165c4:	ea85 0203 	eor.w	r2, r5, r3
 80165c8:	ea81 010c 	eor.w	r1, r1, ip
 80165cc:	fb02 0004 	mla	r0, r2, r4, r0
 80165d0:	ea81 31d0 	eor.w	r1, r1, r0, lsr #15
 80165d4:	4068      	eors	r0, r5
 80165d6:	f24b 656f 	movw	r5, #46703	; 0xb66f
 80165da:	fba1 2304 	umull	r2, r3, r1, r4
 80165de:	f2cb 4592 	movt	r5, #46226	; 0xb492
 80165e2:	fb01 3108 	mla	r1, r1, r8, r3
 80165e6:	fb00 1004 	mla	r0, r0, r4, r1
 80165ea:	ea82 31d0 	eor.w	r1, r2, r0, lsr #15
 80165ee:	fba1 2304 	umull	r2, r3, r1, r4
 80165f2:	fb01 3108 	mla	r1, r1, r8, r3
 80165f6:	f24f 2373 	movw	r3, #62067	; 0xf273
 80165fa:	f6cb 6398 	movt	r3, #48792	; 0xbe98
 80165fe:	fb00 1004 	mla	r0, r0, r4, r1
 8016602:	ea86 31db 	eor.w	r1, r6, fp, lsr #15
 8016606:	469c      	mov	ip, r3
 8016608:	fba1 360c 	umull	r3, r6, r1, ip
 801660c:	fb01 6105 	mla	r1, r1, r5, r6
 8016610:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8016612:	fb0b 110c 	mla	r1, fp, ip, r1
 8016616:	199b      	adds	r3, r3, r6
 8016618:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801661a:	4171      	adcs	r1, r6
 801661c:	18d2      	adds	r2, r2, r3
 801661e:	eb41 0c00 	adc.w	ip, r1, r0
 8016622:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016624:	ea8a 0100 	eor.w	r1, sl, r0
 8016628:	9812      	ldr	r0, [sp, #72]	; 0x48
 801662a:	fba1 3604 	umull	r3, r6, r1, r4
 801662e:	fb01 6108 	mla	r1, r1, r8, r6
 8016632:	ea89 0600 	eor.w	r6, r9, r0
 8016636:	ea83 030a 	eor.w	r3, r3, sl
 801663a:	981e      	ldr	r0, [sp, #120]	; 0x78
 801663c:	fb06 1104 	mla	r1, r6, r4, r1
 8016640:	ea83 33d1 	eor.w	r3, r3, r1, lsr #15
 8016644:	ea81 0109 	eor.w	r1, r1, r9
 8016648:	fba3 6504 	umull	r6, r5, r3, r4
 801664c:	fb03 5308 	mla	r3, r3, r8, r5
 8016650:	fb01 3104 	mla	r1, r1, r4, r3
 8016654:	ea86 33d1 	eor.w	r3, r6, r1, lsr #15
 8016658:	fba3 6504 	umull	r6, r5, r3, r4
 801665c:	1836      	adds	r6, r6, r0
 801665e:	ea82 0206 	eor.w	r2, r2, r6
 8016662:	fba2 e004 	umull	lr, r0, r2, r4
 8016666:	fb02 0008 	mla	r0, r2, r8, r0
 801666a:	fb03 5208 	mla	r2, r3, r8, r5
 801666e:	fb01 2104 	mla	r1, r1, r4, r2
 8016672:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8016674:	4151      	adcs	r1, r2
 8016676:	ea81 020c 	eor.w	r2, r1, ip
 801667a:	fb02 0004 	mla	r0, r2, r4, r0
 801667e:	ea8e 0206 	eor.w	r2, lr, r6
 8016682:	ea82 32d0 	eor.w	r2, r2, r0, lsr #15
 8016686:	4048      	eors	r0, r1
 8016688:	fba2 3604 	umull	r3, r6, r2, r4
 801668c:	fb02 6208 	mla	r2, r2, r8, r6
 8016690:	fb00 2004 	mla	r0, r0, r4, r2
 8016694:	ea83 31d0 	eor.w	r1, r3, r0, lsr #15
 8016698:	fba1 2304 	umull	r2, r3, r1, r4
 801669c:	fb01 3108 	mla	r1, r1, r8, r3
 80166a0:	fb00 1304 	mla	r3, r0, r4, r1
 80166a4:	4610      	mov	r0, r2
 80166a6:	4619      	mov	r1, r3
 80166a8:	b025      	add	sp, #148	; 0x94
 80166aa:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 80166ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80166b0:	f1ba 0f04 	cmp.w	sl, #4
 80166b4:	d343      	bcc.n	801673e <CityHash64+0xf72>
 80166b6:	9c01      	ldr	r4, [sp, #4]
 80166b8:	eb04 000a 	add.w	r0, r4, sl
 80166bc:	7866      	ldrb	r6, [r4, #1]
 80166be:	78a5      	ldrb	r5, [r4, #2]
 80166c0:	f810 1d04 	ldrb.w	r1, [r0, #-4]!
 80166c4:	7842      	ldrb	r2, [r0, #1]
 80166c6:	7883      	ldrb	r3, [r0, #2]
 80166c8:	78c0      	ldrb	r0, [r0, #3]
 80166ca:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 80166ce:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
 80166d2:	f244 034f 	movw	r3, #16463	; 0x404f
 80166d6:	2200      	movs	r2, #0
 80166d8:	f6c2 7390 	movt	r3, #12176	; 0x2f90
 80166dc:	ea41 4000 	orr.w	r0, r1, r0, lsl #16
 80166e0:	f646 213b 	movw	r1, #27195	; 0x6a3b
 80166e4:	f6c9 21e1 	movt	r1, #39649	; 0x9ae1
 80166e8:	eb13 034a 	adds.w	r3, r3, sl, lsl #1
 80166ec:	4151      	adcs	r1, r2
 80166ee:	7822      	ldrb	r2, [r4, #0]
 80166f0:	78e4      	ldrb	r4, [r4, #3]
 80166f2:	ea45 2504 	orr.w	r5, r5, r4, lsl #8
 80166f6:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
 80166fa:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 80166fe:	eb1a 06c2 	adds.w	r6, sl, r2, lsl #3
 8016702:	ea4f 7252 	mov.w	r2, r2, lsr #29
 8016706:	ea86 0600 	eor.w	r6, r6, r0
 801670a:	f142 0200 	adc.w	r2, r2, #0
 801670e:	fba6 5403 	umull	r5, r4, r6, r3
 8016712:	fb06 4601 	mla	r6, r6, r1, r4
 8016716:	4068      	eors	r0, r5
 8016718:	fb02 6203 	mla	r2, r2, r3, r6
 801671c:	ea80 30d2 	eor.w	r0, r0, r2, lsr #15
 8016720:	fba0 6503 	umull	r6, r5, r0, r3
 8016724:	fb00 5001 	mla	r0, r0, r1, r5
 8016728:	fb02 0003 	mla	r0, r2, r3, r0
 801672c:	ea86 36d0 	eor.w	r6, r6, r0, lsr #15
 8016730:	fba6 2503 	umull	r2, r5, r6, r3
 8016734:	fb06 5101 	mla	r1, r6, r1, r5
 8016738:	fb00 1303 	mla	r3, r0, r3, r1
 801673c:	e7b2      	b.n	80166a4 <CityHash64+0xed8>
 801673e:	f646 233b 	movw	r3, #27195	; 0x6a3b
 8016742:	f244 024f 	movw	r2, #16463	; 0x404f
 8016746:	f1ba 0f00 	cmp.w	sl, #0
 801674a:	f6c9 23e1 	movt	r3, #39649	; 0x9ae1
 801674e:	f6c2 7290 	movt	r2, #12176	; 0x2f90
 8016752:	d0a7      	beq.n	80166a4 <CityHash64+0xed8>
 8016754:	9d01      	ldr	r5, [sp, #4]
 8016756:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801675a:	5c28      	ldrb	r0, [r5, r0]
 801675c:	7829      	ldrb	r1, [r5, #0]
 801675e:	ea41 2000 	orr.w	r0, r1, r0, lsl #8
 8016762:	f64c 015c 	movw	r1, #51292	; 0xc85c
 8016766:	fba0 e602 	umull	lr, r6, r0, r2
 801676a:	f2cc 31a5 	movt	r1, #50085	; 0xc3a5
 801676e:	fb00 6003 	mla	r0, r0, r3, r6
 8016772:	eb05 060a 	add.w	r6, r5, sl
 8016776:	f243 1527 	movw	r5, #12583	; 0x3127
 801677a:	f816 6c01 	ldrb.w	r6, [r6, #-1]
 801677e:	f2c9 75cb 	movt	r5, #38859	; 0x97cb
 8016782:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 8016786:	fba6 5405 	umull	r5, r4, r6, r5
 801678a:	fb06 4101 	mla	r1, r6, r1, r4
 801678e:	4048      	eors	r0, r1
 8016790:	ea85 010e 	eor.w	r1, r5, lr
 8016794:	ea81 31d0 	eor.w	r1, r1, r0, lsr #15
 8016798:	fba1 6502 	umull	r6, r5, r1, r2
 801679c:	fb01 5103 	mla	r1, r1, r3, r5
 80167a0:	fb00 1302 	mla	r3, r0, r2, r1
 80167a4:	4632      	mov	r2, r6
 80167a6:	e77d      	b.n	80166a4 <CityHash64+0xed8>

080167a8 <Kotlin_String_subSequence>:
 80167a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80167aa:	af03      	add	r7, sp, #12
 80167ac:	e92d 0b00 	stmdb	sp!, {r8, r9, fp}
 80167b0:	460d      	mov	r5, r1
 80167b2:	4698      	mov	r8, r3
 80167b4:	4606      	mov	r6, r0
 80167b6:	2d00      	cmp	r5, #0
 80167b8:	db2c      	blt.n	8016814 <Kotlin_String_subSequence+0x6c>
 80167ba:	42aa      	cmp	r2, r5
 80167bc:	db2a      	blt.n	8016814 <Kotlin_String_subSequence+0x6c>
 80167be:	68b0      	ldr	r0, [r6, #8]
 80167c0:	4290      	cmp	r0, r2
 80167c2:	d327      	bcc.n	8016814 <Kotlin_String_subSequence+0x6c>
 80167c4:	42aa      	cmp	r2, r5
 80167c6:	d107      	bne.n	80167d8 <Kotlin_String_subSequence+0x30>
 80167c8:	4640      	mov	r0, r8
 80167ca:	f7f9 fc4c 	bl	8010066 <TheEmptyString>
 80167ce:	f242 44f8 	movw	r4, #9464	; 0x24f8
 80167d2:	f2c2 0400 	movt	r4, #8192	; 0x2000
 80167d6:	e019      	b.n	801680c <Kotlin_String_subSequence+0x64>
 80167d8:	f242 00d4 	movw	r0, #8404	; 0x20d4
 80167dc:	eba2 0905 	sub.w	r9, r2, r5
 80167e0:	4642      	mov	r2, r8
 80167e2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80167e6:	4649      	mov	r1, r9
 80167e8:	6800      	ldr	r0, [r0, #0]
 80167ea:	f7fe f885 	bl	80148f8 <AllocArrayInstance>
 80167ee:	4604      	mov	r4, r0
 80167f0:	eb06 0045 	add.w	r0, r6, r5, lsl #1
 80167f4:	ea4f 0249 	mov.w	r2, r9, lsl #1
 80167f8:	f100 010c 	add.w	r1, r0, #12
 80167fc:	f104 000c 	add.w	r0, r4, #12
 8016800:	f004 fe7e 	bl	801b500 <__aeabi_memcpy>
 8016804:	4640      	mov	r0, r8
 8016806:	4621      	mov	r1, r4
 8016808:	f7fd feef 	bl	80145ea <UpdateReturnRef>
 801680c:	4620      	mov	r0, r4
 801680e:	e8bd 0b00 	ldmia.w	sp!, {r8, r9, fp}
 8016812:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016814:	2000      	movs	r0, #0
 8016816:	f7f9 fa69 	bl	800fcec <ThrowArrayIndexOutOfBoundsException>

0801681a <_ZN14ArenaContainer11PlaceObjectEPK8TypeInfo>:
 801681a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801681c:	af03      	add	r7, sp, #12
 801681e:	f84d 8d04 	str.w	r8, [sp, #-4]!
 8016822:	4688      	mov	r8, r1
 8016824:	4605      	mov	r5, r0
 8016826:	f8d8 1014 	ldr.w	r1, [r8, #20]
 801682a:	f1b1 3fff 	cmp.w	r1, #4294967295	; 0xffffffff
 801682e:	dd46      	ble.n	80168be <_ZN14ArenaContainer11PlaceObjectEPK8TypeInfo+0xa4>
 8016830:	310f      	adds	r1, #15
 8016832:	e9d5 0201 	ldrd	r0, r2, [r5, #4]
 8016836:	f021 0407 	bic.w	r4, r1, #7
 801683a:	1901      	adds	r1, r0, r4
 801683c:	4291      	cmp	r1, r2
 801683e:	d204      	bcs.n	801684a <_ZN14ArenaContainer11PlaceObjectEPK8TypeInfo+0x30>
 8016840:	2800      	cmp	r0, #0
 8016842:	6069      	str	r1, [r5, #4]
 8016844:	d037      	beq.n	80168b6 <_ZN14ArenaContainer11PlaceObjectEPK8TypeInfo+0x9c>
 8016846:	6829      	ldr	r1, [r5, #0]
 8016848:	e019      	b.n	801687e <_ZN14ArenaContainer11PlaceObjectEPK8TypeInfo+0x64>
 801684a:	f204 400f 	addw	r0, r4, #1039	; 0x40f
 801684e:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8016852:	ea20 0601 	bic.w	r6, r0, r1
 8016856:	2001      	movs	r0, #1
 8016858:	4631      	mov	r1, r6
 801685a:	f004 fe5b 	bl	801b514 <calloc>
 801685e:	4601      	mov	r1, r0
 8016860:	b3b9      	cbz	r1, 80168d2 <_ZN14ArenaContainer11PlaceObjectEPK8TypeInfo+0xb8>
 8016862:	6828      	ldr	r0, [r5, #0]
 8016864:	2207      	movs	r2, #7
 8016866:	e9c1 0500 	strd	r0, r5, [r1]
 801686a:	f101 0010 	add.w	r0, r1, #16
 801686e:	608a      	str	r2, [r1, #8]
 8016870:	198a      	adds	r2, r1, r6
 8016872:	1903      	adds	r3, r0, r4
 8016874:	4293      	cmp	r3, r2
 8016876:	e9c5 1300 	strd	r1, r3, [r5]
 801687a:	60aa      	str	r2, [r5, #8]
 801687c:	d833      	bhi.n	80168e6 <_ZN14ArenaContainer11PlaceObjectEPK8TypeInfo+0xcc>
 801687e:	68ca      	ldr	r2, [r1, #12]
 8016880:	3210      	adds	r2, #16
 8016882:	60ca      	str	r2, [r1, #12]
 8016884:	3108      	adds	r1, #8
 8016886:	1a42      	subs	r2, r0, r1
 8016888:	e9c0 8200 	strd	r8, r2, [r0]
 801688c:	f243 22cc 	movw	r2, #13004	; 0x32cc
 8016890:	f2c2 0200 	movt	r2, #8192	; 0x2000
 8016894:	bf18      	it	ne
 8016896:	460a      	movne	r2, r1
 8016898:	428a      	cmp	r2, r1
 801689a:	bf04      	itt	eq
 801689c:	f85d 8b04 	ldreq.w	r8, [sp], #4
 80168a0:	bdf0      	popeq	{r4, r5, r6, r7, pc}
 80168a2:	f644 407c 	movw	r0, #19580	; 0x4c7c
 80168a6:	f644 41cd 	movw	r1, #19661	; 0x4ccd
 80168aa:	f6c0 0002 	movt	r0, #2050	; 0x802
 80168ae:	f6c0 0102 	movt	r1, #2050	; 0x802
 80168b2:	f7fb fa57 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>
 80168b6:	2000      	movs	r0, #0
 80168b8:	f85d 8b04 	ldr.w	r8, [sp], #4
 80168bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80168be:	f245 2011 	movw	r0, #21009	; 0x5211
 80168c2:	f245 2164 	movw	r1, #21092	; 0x5264
 80168c6:	f6c0 0002 	movt	r0, #2050	; 0x802
 80168ca:	f6c0 0102 	movt	r1, #2050	; 0x802
 80168ce:	f7fb fa49 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>
 80168d2:	f644 304c 	movw	r0, #19276	; 0x4b4c
 80168d6:	f644 319f 	movw	r1, #19359	; 0x4b9f
 80168da:	f6c0 0002 	movt	r0, #2050	; 0x802
 80168de:	f6c0 0102 	movt	r1, #2050	; 0x802
 80168e2:	f7fb fa3f 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>
 80168e6:	f644 4017 	movw	r0, #19479	; 0x4c17
 80168ea:	f644 416a 	movw	r1, #19562	; 0x4c6a
 80168ee:	f6c0 0002 	movt	r0, #2050	; 0x802
 80168f2:	f6c0 0102 	movt	r1, #2050	; 0x802
 80168f6:	f7fb fa35 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>

080168fa <AllocInstance>:
 80168fa:	b5f0      	push	{r4, r5, r6, r7, lr}
 80168fc:	af03      	add	r7, sp, #12
 80168fe:	f84d bd04 	str.w	fp, [sp, #-4]!
 8016902:	4604      	mov	r4, r0
 8016904:	460d      	mov	r5, r1
 8016906:	6960      	ldr	r0, [r4, #20]
 8016908:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 801690c:	dd49      	ble.n	80169a2 <AllocInstance+0xa8>
 801690e:	07e9      	lsls	r1, r5, #31
 8016910:	d11f      	bne.n	8016952 <AllocInstance+0x58>
 8016912:	3017      	adds	r0, #23
 8016914:	f020 0107 	bic.w	r1, r0, #7
 8016918:	2001      	movs	r0, #1
 801691a:	f004 fdfb 	bl	801b514 <calloc>
 801691e:	f240 1174 	movw	r1, #372	; 0x174
 8016922:	2608      	movs	r6, #8
 8016924:	2800      	cmp	r0, #0
 8016926:	f2c2 0100 	movt	r1, #8192	; 0x2000
 801692a:	680a      	ldr	r2, [r1, #0]
 801692c:	f102 0201 	add.w	r2, r2, #1
 8016930:	600a      	str	r2, [r1, #0]
 8016932:	d006      	beq.n	8016942 <AllocInstance+0x48>
 8016934:	f840 4f08 	str.w	r4, [r0, #8]!
 8016938:	2110      	movs	r1, #16
 801693a:	6046      	str	r6, [r0, #4]
 801693c:	4606      	mov	r6, r0
 801693e:	f840 1c04 	str.w	r1, [r0, #-4]
 8016942:	4628      	mov	r0, r5
 8016944:	4631      	mov	r1, r6
 8016946:	f7fd fe50 	bl	80145ea <UpdateReturnRef>
 801694a:	4630      	mov	r0, r6
 801694c:	f85d bb04 	ldr.w	fp, [sp], #4
 8016950:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016952:	f025 0601 	bic.w	r6, r5, #1
 8016956:	6835      	ldr	r5, [r6, #0]
 8016958:	b9dd      	cbnz	r5, 8016992 <AllocInstance+0x98>
 801695a:	2001      	movs	r0, #1
 801695c:	2114      	movs	r1, #20
 801695e:	f004 fdd9 	bl	801b514 <calloc>
 8016962:	4605      	mov	r5, r0
 8016964:	2000      	movs	r0, #0
 8016966:	f44f 6100 	mov.w	r1, #2048	; 0x800
 801696a:	e9c5 0000 	strd	r0, r0, [r5]
 801696e:	e9c5 0002 	strd	r0, r0, [r5, #8]
 8016972:	6128      	str	r0, [r5, #16]
 8016974:	2001      	movs	r0, #1
 8016976:	f004 fdcd 	bl	801b514 <calloc>
 801697a:	b1e0      	cbz	r0, 80169b6 <AllocInstance+0xbc>
 801697c:	2107      	movs	r1, #7
 801697e:	f100 0210 	add.w	r2, r0, #16
 8016982:	e9c0 5101 	strd	r5, r1, [r0, #4]
 8016986:	f500 6100 	add.w	r1, r0, #2048	; 0x800
 801698a:	e9c5 0200 	strd	r0, r2, [r5]
 801698e:	60a9      	str	r1, [r5, #8]
 8016990:	6035      	str	r5, [r6, #0]
 8016992:	4628      	mov	r0, r5
 8016994:	4621      	mov	r1, r4
 8016996:	f85d bb04 	ldr.w	fp, [sp], #4
 801699a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801699e:	f7ff bf3c 	b.w	801681a <_ZN14ArenaContainer11PlaceObjectEPK8TypeInfo>
 80169a2:	f245 2076 	movw	r0, #21110	; 0x5276
 80169a6:	f245 2164 	movw	r1, #21092	; 0x5264
 80169aa:	f6c0 0002 	movt	r0, #2050	; 0x802
 80169ae:	f6c0 0102 	movt	r1, #2050	; 0x802
 80169b2:	f7fb f9d7 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>
 80169b6:	f644 304c 	movw	r0, #19276	; 0x4b4c
 80169ba:	f644 319f 	movw	r1, #19359	; 0x4b9f
 80169be:	f6c0 0002 	movt	r0, #2050	; 0x802
 80169c2:	f6c0 0102 	movt	r1, #2050	; 0x802
 80169c6:	f7fb f9cd 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>

080169ca <InitInstance>:
 80169ca:	b5f0      	push	{r4, r5, r6, r7, lr}
 80169cc:	af03      	add	r7, sp, #12
 80169ce:	f84d bd04 	str.w	fp, [sp, #-4]!
 80169d2:	4606      	mov	r6, r0
 80169d4:	4615      	mov	r5, r2
 80169d6:	6834      	ldr	r4, [r6, #0]
 80169d8:	b124      	cbz	r4, 80169e4 <InitInstance+0x1a>
 80169da:	4618      	mov	r0, r3
 80169dc:	4621      	mov	r1, r4
 80169de:	f7fd fe04 	bl	80145ea <UpdateReturnRef>
 80169e2:	e028      	b.n	8016a36 <InitInstance+0x6c>
 80169e4:	4608      	mov	r0, r1
 80169e6:	4619      	mov	r1, r3
 80169e8:	f7ff ff87 	bl	80168fa <AllocInstance>
 80169ec:	4604      	mov	r4, r0
 80169ee:	07f0      	lsls	r0, r6, #31
 80169f0:	d125      	bne.n	8016a3e <InitInstance+0x74>
 80169f2:	6830      	ldr	r0, [r6, #0]
 80169f4:	42a0      	cmp	r0, r4
 80169f6:	d01c      	beq.n	8016a32 <InitInstance+0x68>
 80169f8:	b1b4      	cbz	r4, 8016a28 <InitInstance+0x5e>
 80169fa:	6862      	ldr	r2, [r4, #4]
 80169fc:	f243 21cc 	movw	r1, #13004	; 0x32cc
 8016a00:	f2c2 0100 	movt	r1, #8192	; 0x2000
 8016a04:	2a00      	cmp	r2, #0
 8016a06:	bf18      	it	ne
 8016a08:	1aa1      	subne	r1, r4, r2
 8016a0a:	f8d1 c000 	ldr.w	ip, [r1]
 8016a0e:	f00c 0303 	and.w	r3, ip, #3
 8016a12:	1e9a      	subs	r2, r3, #2
 8016a14:	2a02      	cmp	r2, #2
 8016a16:	d307      	bcc.n	8016a28 <InitInstance+0x5e>
 8016a18:	b9db      	cbnz	r3, 8016a52 <InitInstance+0x88>
 8016a1a:	f10c 0204 	add.w	r2, ip, #4
 8016a1e:	600a      	str	r2, [r1, #0]
 8016a20:	684a      	ldr	r2, [r1, #4]
 8016a22:	f022 0203 	bic.w	r2, r2, #3
 8016a26:	604a      	str	r2, [r1, #4]
 8016a28:	2802      	cmp	r0, #2
 8016a2a:	6034      	str	r4, [r6, #0]
 8016a2c:	bf28      	it	cs
 8016a2e:	f7fd fc12 	blcs	8014256 <_Z10ReleaseRefPK9ObjHeader>
 8016a32:	4620      	mov	r0, r4
 8016a34:	47a8      	blx	r5
 8016a36:	4620      	mov	r0, r4
 8016a38:	f85d bb04 	ldr.w	fp, [sp], #4
 8016a3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016a3e:	f644 10ac 	movw	r0, #18860	; 0x49ac
 8016a42:	f644 2100 	movw	r1, #18944	; 0x4a00
 8016a46:	f6c0 0002 	movt	r0, #2050	; 0x802
 8016a4a:	f6c0 0102 	movt	r1, #2050	; 0x802
 8016a4e:	f7fb f989 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>
 8016a52:	f644 2013 	movw	r0, #18963	; 0x4a13
 8016a56:	f644 2166 	movw	r1, #19046	; 0x4a66
 8016a5a:	f6c0 0002 	movt	r0, #2050	; 0x802
 8016a5e:	f6c0 0102 	movt	r1, #2050	; 0x802
 8016a62:	f7fb f97f 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>

08016a66 <LeaveFrame>:
 8016a66:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016a68:	af03      	add	r7, sp, #12
 8016a6a:	f84d 8d04 	str.w	r8, [sp, #-4]!
 8016a6e:	4680      	mov	r8, r0
 8016a70:	43c8      	mvns	r0, r1
 8016a72:	4410      	add	r0, r2
 8016a74:	2801      	cmp	r0, #1
 8016a76:	db0d      	blt.n	8016a94 <LeaveFrame+0x2e>
 8016a78:	eb08 0081 	add.w	r0, r8, r1, lsl #2
 8016a7c:	1a55      	subs	r5, r2, r1
 8016a7e:	2400      	movs	r4, #0
 8016a80:	1d06      	adds	r6, r0, #4
 8016a82:	6830      	ldr	r0, [r6, #0]
 8016a84:	b110      	cbz	r0, 8016a8c <LeaveFrame+0x26>
 8016a86:	f7fd fbe6 	bl	8014256 <_Z10ReleaseRefPK9ObjHeader>
 8016a8a:	6034      	str	r4, [r6, #0]
 8016a8c:	3d01      	subs	r5, #1
 8016a8e:	3604      	adds	r6, #4
 8016a90:	2d01      	cmp	r5, #1
 8016a92:	dcf6      	bgt.n	8016a82 <LeaveFrame+0x1c>
 8016a94:	f8d8 4000 	ldr.w	r4, [r8]
 8016a98:	2c00      	cmp	r4, #0
 8016a9a:	bf04      	itt	eq
 8016a9c:	f85d 8b04 	ldreq.w	r8, [sp], #4
 8016aa0:	bdf0      	popeq	{r4, r5, r6, r7, pc}
 8016aa2:	6825      	ldr	r5, [r4, #0]
 8016aa4:	b175      	cbz	r5, 8016ac4 <LeaveFrame+0x5e>
 8016aa6:	f105 0008 	add.w	r0, r5, #8
 8016aaa:	f7fd fc87 	bl	80143bc <_Z13FreeContainerP15ContainerHeader>
 8016aae:	682d      	ldr	r5, [r5, #0]
 8016ab0:	2d00      	cmp	r5, #0
 8016ab2:	d1f8      	bne.n	8016aa6 <LeaveFrame+0x40>
 8016ab4:	6820      	ldr	r0, [r4, #0]
 8016ab6:	b128      	cbz	r0, 8016ac4 <LeaveFrame+0x5e>
 8016ab8:	6805      	ldr	r5, [r0, #0]
 8016aba:	f004 ffcf 	bl	801ba5c <free>
 8016abe:	2d00      	cmp	r5, #0
 8016ac0:	4628      	mov	r0, r5
 8016ac2:	d1f9      	bne.n	8016ab8 <LeaveFrame+0x52>
 8016ac4:	4620      	mov	r0, r4
 8016ac6:	f85d 8b04 	ldr.w	r8, [sp], #4
 8016aca:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8016ace:	f004 bfc5 	b.w	801ba5c <free>

08016ad2 <Kotlin_Any_equals>:
 8016ad2:	2200      	movs	r2, #0
 8016ad4:	4288      	cmp	r0, r1
 8016ad6:	bf08      	it	eq
 8016ad8:	2201      	moveq	r2, #1
 8016ada:	4610      	mov	r0, r2
 8016adc:	4770      	bx	lr

08016ade <Kotlin_Any_hashCode>:
 8016ade:	4770      	bx	lr

08016ae0 <Kotlin_getCurrentStackTrace>:
 8016ae0:	b5d0      	push	{r4, r6, r7, lr}
 8016ae2:	af02      	add	r7, sp, #8
 8016ae4:	4602      	mov	r2, r0
 8016ae6:	f242 0080 	movw	r0, #8320	; 0x2080
 8016aea:	2101      	movs	r1, #1
 8016aec:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8016af0:	6800      	ldr	r0, [r0, #0]
 8016af2:	f7fd ff01 	bl	80148f8 <AllocArrayInstance>
 8016af6:	4604      	mov	r4, r0
 8016af8:	f644 50dc 	movw	r0, #19932	; 0x4ddc
 8016afc:	210f      	movs	r1, #15
 8016afe:	f104 020c 	add.w	r2, r4, #12
 8016b02:	f6c0 0002 	movt	r0, #2050	; 0x802
 8016b06:	f7fe f8bd 	bl	8014c84 <_ZN12_GLOBAL__N_111utf8ToUtf16EPKcjPP9ObjHeader>
 8016b0a:	4620      	mov	r0, r4
 8016b0c:	bdd0      	pop	{r4, r6, r7, pc}

08016b0e <Kotlin_interop_malloc>:
 8016b0e:	b5d0      	push	{r4, r6, r7, lr}
 8016b10:	af02      	add	r7, sp, #8
 8016b12:	4614      	mov	r4, r2
 8016b14:	4602      	mov	r2, r0
 8016b16:	2900      	cmp	r1, #0
 8016b18:	dd01      	ble.n	8016b1e <Kotlin_interop_malloc+0x10>
 8016b1a:	2000      	movs	r0, #0
 8016b1c:	bdd0      	pop	{r4, r6, r7, pc}
 8016b1e:	2001      	movs	r0, #1
 8016b20:	4611      	mov	r1, r2
 8016b22:	f004 fcf7 	bl	801b514 <calloc>
 8016b26:	1e61      	subs	r1, r4, #1
 8016b28:	4201      	tst	r1, r0
 8016b2a:	bf08      	it	eq
 8016b2c:	bdd0      	popeq	{r4, r6, r7, pc}
 8016b2e:	f245 20ca 	movw	r0, #21194	; 0x52ca
 8016b32:	f245 311d 	movw	r1, #21277	; 0x531d
 8016b36:	f6c0 0002 	movt	r0, #2050	; 0x802
 8016b3a:	f6c0 0102 	movt	r1, #2050	; 0x802
 8016b3e:	f7fb f911 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>

08016b42 <Kotlin_interop_free>:
 8016b42:	f004 bf8b 	b.w	801ba5c <free>

08016b46 <Kotlin_Any_getTypeInfo>:
 8016b46:	6800      	ldr	r0, [r0, #0]
 8016b48:	4770      	bx	lr

08016b4a <Kotlin_Boolean_not>:
 8016b4a:	2100      	movs	r1, #0
 8016b4c:	2800      	cmp	r0, #0
 8016b4e:	bf08      	it	eq
 8016b50:	2101      	moveq	r1, #1
 8016b52:	4608      	mov	r0, r1
 8016b54:	4770      	bx	lr

08016b56 <Kotlin_Byte_compareTo_Byte>:
 8016b56:	2201      	movs	r2, #1
 8016b58:	4288      	cmp	r0, r1
 8016b5a:	bfb8      	it	lt
 8016b5c:	f04f 32ff 	movlt.w	r2, #4294967295	; 0xffffffff
 8016b60:	bf08      	it	eq
 8016b62:	2200      	moveq	r2, #0
 8016b64:	4610      	mov	r0, r2
 8016b66:	4770      	bx	lr

08016b68 <Kotlin_Byte_toByte>:
 8016b68:	4770      	bx	lr

08016b6a <Kotlin_Byte_toChar>:
 8016b6a:	b280      	uxth	r0, r0
 8016b6c:	4770      	bx	lr

08016b6e <Kotlin_Byte_toShort>:
 8016b6e:	4770      	bx	lr

08016b70 <Kotlin_Byte_toInt>:
 8016b70:	4770      	bx	lr

08016b72 <Kotlin_Byte_toLong>:
 8016b72:	17c1      	asrs	r1, r0, #31
 8016b74:	4770      	bx	lr

08016b76 <Kotlin_Byte_toFloat>:
 8016b76:	ee00 0a10 	vmov	s0, r0
 8016b7a:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8016b7e:	ee10 0a10 	vmov	r0, s0
 8016b82:	4770      	bx	lr

08016b84 <Kotlin_Byte_toDouble>:
 8016b84:	b580      	push	{r7, lr}
 8016b86:	466f      	mov	r7, sp
 8016b88:	f7e9 fd98 	bl	80006bc <__aeabi_i2d>
 8016b8c:	bd80      	pop	{r7, pc}

08016b8e <Kotlin_Int_compareTo_Int>:
 8016b8e:	2201      	movs	r2, #1
 8016b90:	4288      	cmp	r0, r1
 8016b92:	bfb8      	it	lt
 8016b94:	f04f 32ff 	movlt.w	r2, #4294967295	; 0xffffffff
 8016b98:	bf08      	it	eq
 8016b9a:	2200      	moveq	r2, #0
 8016b9c:	4610      	mov	r0, r2
 8016b9e:	4770      	bx	lr

08016ba0 <Kotlin_Int_plus_Byte>:
 8016ba0:	4408      	add	r0, r1
 8016ba2:	4770      	bx	lr

08016ba4 <Kotlin_Int_plus_Int>:
 8016ba4:	4408      	add	r0, r1
 8016ba6:	4770      	bx	lr

08016ba8 <Kotlin_Int_plus_Long>:
 8016ba8:	17c1      	asrs	r1, r0, #31
 8016baa:	1880      	adds	r0, r0, r2
 8016bac:	4159      	adcs	r1, r3
 8016bae:	4770      	bx	lr

08016bb0 <Kotlin_Int_minus_Int>:
 8016bb0:	1a40      	subs	r0, r0, r1
 8016bb2:	4770      	bx	lr

08016bb4 <Kotlin_Int_div_Int>:
 8016bb4:	2900      	cmp	r1, #0
 8016bb6:	bf1c      	itt	ne
 8016bb8:	fb90 f0f1 	sdivne	r0, r0, r1
 8016bbc:	4770      	bxne	lr
 8016bbe:	b580      	push	{r7, lr}
 8016bc0:	466f      	mov	r7, sp
 8016bc2:	2000      	movs	r0, #0
 8016bc4:	f7f9 f902 	bl	800fdcc <ThrowArithmeticException>

08016bc8 <Kotlin_Int_mod_Int>:
 8016bc8:	fb90 f2f1 	sdiv	r2, r0, r1
 8016bcc:	fb02 0011 	mls	r0, r2, r1, r0
 8016bd0:	4770      	bx	lr

08016bd2 <Kotlin_Int_times_Int>:
 8016bd2:	4348      	muls	r0, r1
 8016bd4:	4770      	bx	lr

08016bd6 <Kotlin_Int_inc>:
 8016bd6:	3001      	adds	r0, #1
 8016bd8:	4770      	bx	lr

08016bda <Kotlin_Int_unaryMinus>:
 8016bda:	4240      	negs	r0, r0
 8016bdc:	4770      	bx	lr

08016bde <Kotlin_Int_and_Int>:
 8016bde:	4008      	ands	r0, r1
 8016be0:	4770      	bx	lr

08016be2 <Kotlin_Int_toByte>:
 8016be2:	b240      	sxtb	r0, r0
 8016be4:	4770      	bx	lr

08016be6 <Kotlin_Int_toChar>:
 8016be6:	b280      	uxth	r0, r0
 8016be8:	4770      	bx	lr

08016bea <Kotlin_Int_toShort>:
 8016bea:	b200      	sxth	r0, r0
 8016bec:	4770      	bx	lr

08016bee <Kotlin_Int_toInt>:
 8016bee:	4770      	bx	lr

08016bf0 <Kotlin_Int_toLong>:
 8016bf0:	17c1      	asrs	r1, r0, #31
 8016bf2:	4770      	bx	lr

08016bf4 <Kotlin_Int_toFloat>:
 8016bf4:	ee00 0a10 	vmov	s0, r0
 8016bf8:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8016bfc:	ee10 0a10 	vmov	r0, s0
 8016c00:	4770      	bx	lr

08016c02 <Kotlin_Int_toDouble>:
 8016c02:	b580      	push	{r7, lr}
 8016c04:	466f      	mov	r7, sp
 8016c06:	f7e9 fd59 	bl	80006bc <__aeabi_i2d>
 8016c0a:	bd80      	pop	{r7, pc}

08016c0c <Kotlin_Long_mod_Int>:
 8016c0c:	b580      	push	{r7, lr}
 8016c0e:	466f      	mov	r7, sp
 8016c10:	17d3      	asrs	r3, r2, #31
 8016c12:	f7ea f86d 	bl	8000cf0 <__aeabi_ldivmod>
 8016c16:	4610      	mov	r0, r2
 8016c18:	4619      	mov	r1, r3
 8016c1a:	bd80      	pop	{r7, pc}

08016c1c <Kotlin_Long_times_Int>:
 8016c1c:	fba2 c300 	umull	ip, r3, r2, r0
 8016c20:	fb02 3101 	mla	r1, r2, r1, r3
 8016c24:	17d2      	asrs	r2, r2, #31
 8016c26:	fb02 1100 	mla	r1, r2, r0, r1
 8016c2a:	4660      	mov	r0, ip
 8016c2c:	4770      	bx	lr

08016c2e <Kotlin_Long_times_Long>:
 8016c2e:	b580      	push	{r7, lr}
 8016c30:	466f      	mov	r7, sp
 8016c32:	fba2 ce00 	umull	ip, lr, r2, r0
 8016c36:	fb02 e101 	mla	r1, r2, r1, lr
 8016c3a:	fb03 1100 	mla	r1, r3, r0, r1
 8016c3e:	4660      	mov	r0, ip
 8016c40:	bd80      	pop	{r7, pc}

08016c42 <Kotlin_Long_xor_Long>:
 8016c42:	4050      	eors	r0, r2
 8016c44:	4059      	eors	r1, r3
 8016c46:	4770      	bx	lr

08016c48 <Kotlin_Long_and_Long>:
 8016c48:	4010      	ands	r0, r2
 8016c4a:	4019      	ands	r1, r3
 8016c4c:	4770      	bx	lr

08016c4e <Kotlin_Long_shl_Int>:
 8016c4e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8016c52:	f1c2 0320 	rsb	r3, r2, #32
 8016c56:	4091      	lsls	r1, r2
 8016c58:	fa20 f303 	lsr.w	r3, r0, r3
 8016c5c:	4319      	orrs	r1, r3
 8016c5e:	f1a2 0320 	sub.w	r3, r2, #32
 8016c62:	2b00      	cmp	r3, #0
 8016c64:	bfa8      	it	ge
 8016c66:	fa00 f103 	lslge.w	r1, r0, r3
 8016c6a:	fa00 f002 	lsl.w	r0, r0, r2
 8016c6e:	bfa8      	it	ge
 8016c70:	2000      	movge	r0, #0
 8016c72:	4770      	bx	lr

08016c74 <Kotlin_Long_ushr_Int>:
 8016c74:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8016c78:	f1c2 0320 	rsb	r3, r2, #32
 8016c7c:	40d0      	lsrs	r0, r2
 8016c7e:	fa01 f303 	lsl.w	r3, r1, r3
 8016c82:	4318      	orrs	r0, r3
 8016c84:	f1a2 0320 	sub.w	r3, r2, #32
 8016c88:	2b00      	cmp	r3, #0
 8016c8a:	bfa8      	it	ge
 8016c8c:	fa21 f003 	lsrge.w	r0, r1, r3
 8016c90:	fa21 f102 	lsr.w	r1, r1, r2
 8016c94:	bfa8      	it	ge
 8016c96:	2100      	movge	r1, #0
 8016c98:	4770      	bx	lr

08016c9a <Kotlin_Long_toInt>:
 8016c9a:	4770      	bx	lr

08016c9c <AppendToInitializersTail>:
 8016c9c:	f240 1164 	movw	r1, #356	; 0x164
 8016ca0:	f240 1c78 	movw	ip, #376	; 0x178
 8016ca4:	f2c2 0100 	movt	r1, #8192	; 0x2000
 8016ca8:	f2c2 0c00 	movt	ip, #8192	; 0x2000
 8016cac:	680a      	ldr	r2, [r1, #0]
 8016cae:	f8dc 3000 	ldr.w	r3, [ip]
 8016cb2:	2a00      	cmp	r2, #0
 8016cb4:	bf18      	it	ne
 8016cb6:	1d19      	addne	r1, r3, #4
 8016cb8:	6008      	str	r0, [r1, #0]
 8016cba:	f8cc 0000 	str.w	r0, [ip]
 8016cbe:	4770      	bx	lr

08016cc0 <Kotlin_Byte_toString>:
 8016cc0:	b5b0      	push	{r4, r5, r7, lr}
 8016cc2:	af02      	add	r7, sp, #8
 8016cc4:	b082      	sub	sp, #8
 8016cc6:	f245 3233 	movw	r2, #21299	; 0x5333
 8016cca:	466d      	mov	r5, sp
 8016ccc:	460c      	mov	r4, r1
 8016cce:	4603      	mov	r3, r0
 8016cd0:	2108      	movs	r1, #8
 8016cd2:	f6c0 0202 	movt	r2, #2050	; 0x802
 8016cd6:	4628      	mov	r0, r5
 8016cd8:	f7fb f85f 	bl	8011d9a <_ZN5konan8snprintfEPcjPKcz>
 8016cdc:	4628      	mov	r0, r5
 8016cde:	f7f2 fd0f 	bl	8009700 <strlen>
 8016ce2:	4601      	mov	r1, r0
 8016ce4:	4628      	mov	r0, r5
 8016ce6:	4622      	mov	r2, r4
 8016ce8:	f7fd ffcc 	bl	8014c84 <_ZN12_GLOBAL__N_111utf8ToUtf16EPKcjPP9ObjHeader>
 8016cec:	b002      	add	sp, #8
 8016cee:	bdb0      	pop	{r4, r5, r7, pc}

08016cf0 <Kotlin_Int_toString>:
 8016cf0:	b5b0      	push	{r4, r5, r7, lr}
 8016cf2:	af02      	add	r7, sp, #8
 8016cf4:	b084      	sub	sp, #16
 8016cf6:	f245 3233 	movw	r2, #21299	; 0x5333
 8016cfa:	466d      	mov	r5, sp
 8016cfc:	460c      	mov	r4, r1
 8016cfe:	4603      	mov	r3, r0
 8016d00:	2110      	movs	r1, #16
 8016d02:	f6c0 0202 	movt	r2, #2050	; 0x802
 8016d06:	4628      	mov	r0, r5
 8016d08:	f7fb f847 	bl	8011d9a <_ZN5konan8snprintfEPcjPKcz>
 8016d0c:	4628      	mov	r0, r5
 8016d0e:	f7f2 fcf7 	bl	8009700 <strlen>
 8016d12:	4601      	mov	r1, r0
 8016d14:	4628      	mov	r0, r5
 8016d16:	4622      	mov	r2, r4
 8016d18:	f7fd ffb4 	bl	8014c84 <_ZN12_GLOBAL__N_111utf8ToUtf16EPKcjPP9ObjHeader>
 8016d1c:	b004      	add	sp, #16
 8016d1e:	bdb0      	pop	{r4, r5, r7, pc}

08016d20 <Kotlin_Long_toStringRadix>:
 8016d20:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016d22:	af03      	add	r7, sp, #12
 8016d24:	e92d 0700 	stmdb	sp!, {r8, r9, sl}
 8016d28:	b092      	sub	sp, #72	; 0x48
 8016d2a:	4616      	mov	r6, r2
 8016d2c:	4689      	mov	r9, r1
 8016d2e:	4602      	mov	r2, r0
 8016d30:	4698      	mov	r8, r3
 8016d32:	ea52 0009 	orrs.w	r0, r2, r9
 8016d36:	d027      	beq.n	8016d88 <Kotlin_Long_toStringRadix+0x68>
 8016d38:	2500      	movs	r5, #0
 8016d3a:	4250      	negs	r0, r2
 8016d3c:	eb65 0109 	sbc.w	r1, r5, r9
 8016d40:	f1b9 0f00 	cmp.w	r9, #0
 8016d44:	bfbc      	itt	lt
 8016d46:	4610      	movlt	r0, r2
 8016d48:	4649      	movlt	r1, r9
 8016d4a:	f1b1 3fff 	cmp.w	r1, #4294967295	; 0xffffffff
 8016d4e:	dc15      	bgt.n	8016d7c <Kotlin_Long_toStringRadix+0x5c>
 8016d50:	2500      	movs	r5, #0
 8016d52:	17f4      	asrs	r4, r6, #31
 8016d54:	f1a7 0a59 	sub.w	sl, r7, #89	; 0x59
 8016d58:	4632      	mov	r2, r6
 8016d5a:	4623      	mov	r3, r4
 8016d5c:	f7e9 ffc8 	bl	8000cf0 <__aeabi_ldivmod>
 8016d60:	4253      	negs	r3, r2
 8016d62:	2b0a      	cmp	r3, #10
 8016d64:	f04f 0357 	mov.w	r3, #87	; 0x57
 8016d68:	bf38      	it	cc
 8016d6a:	2330      	movcc	r3, #48	; 0x30
 8016d6c:	2900      	cmp	r1, #0
 8016d6e:	eba3 0202 	sub.w	r2, r3, r2
 8016d72:	f80a 2005 	strb.w	r2, [sl, r5]
 8016d76:	f105 0501 	add.w	r5, r5, #1
 8016d7a:	dbed      	blt.n	8016d58 <Kotlin_Long_toStringRadix+0x38>
 8016d7c:	f1b9 3fff 	cmp.w	r9, #4294967295	; 0xffffffff
 8016d80:	dd0f      	ble.n	8016da2 <Kotlin_Long_toStringRadix+0x82>
 8016d82:	2d02      	cmp	r5, #2
 8016d84:	da14      	bge.n	8016db0 <Kotlin_Long_toStringRadix+0x90>
 8016d86:	e01f      	b.n	8016dc8 <Kotlin_Long_toStringRadix+0xa8>
 8016d88:	f644 10aa 	movw	r0, #18858	; 0x49aa
 8016d8c:	2101      	movs	r1, #1
 8016d8e:	4642      	mov	r2, r8
 8016d90:	f6c0 0002 	movt	r0, #2050	; 0x802
 8016d94:	b012      	add	sp, #72	; 0x48
 8016d96:	e8bd 0700 	ldmia.w	sp!, {r8, r9, sl}
 8016d9a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8016d9e:	f7fd bf71 	b.w	8014c84 <_ZN12_GLOBAL__N_111utf8ToUtf16EPKcjPP9ObjHeader>
 8016da2:	f1a7 0059 	sub.w	r0, r7, #89	; 0x59
 8016da6:	212d      	movs	r1, #45	; 0x2d
 8016da8:	5541      	strb	r1, [r0, r5]
 8016daa:	3501      	adds	r5, #1
 8016dac:	2d02      	cmp	r5, #2
 8016dae:	db0b      	blt.n	8016dc8 <Kotlin_Long_toStringRadix+0xa8>
 8016db0:	1e68      	subs	r0, r5, #1
 8016db2:	2100      	movs	r1, #0
 8016db4:	f1a7 0259 	sub.w	r2, r7, #89	; 0x59
 8016db8:	5c53      	ldrb	r3, [r2, r1]
 8016dba:	5c16      	ldrb	r6, [r2, r0]
 8016dbc:	5456      	strb	r6, [r2, r1]
 8016dbe:	5413      	strb	r3, [r2, r0]
 8016dc0:	3801      	subs	r0, #1
 8016dc2:	3101      	adds	r1, #1
 8016dc4:	4281      	cmp	r1, r0
 8016dc6:	dbf7      	blt.n	8016db8 <Kotlin_Long_toStringRadix+0x98>
 8016dc8:	f1a7 0459 	sub.w	r4, r7, #89	; 0x59
 8016dcc:	2000      	movs	r0, #0
 8016dce:	5560      	strb	r0, [r4, r5]
 8016dd0:	4620      	mov	r0, r4
 8016dd2:	f7f2 fc95 	bl	8009700 <strlen>
 8016dd6:	4601      	mov	r1, r0
 8016dd8:	4620      	mov	r0, r4
 8016dda:	4642      	mov	r2, r8
 8016ddc:	f7fd ff52 	bl	8014c84 <_ZN12_GLOBAL__N_111utf8ToUtf16EPKcjPP9ObjHeader>
 8016de0:	b012      	add	sp, #72	; 0x48
 8016de2:	e8bd 0700 	ldmia.w	sp!, {r8, r9, sl}
 8016de6:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016de8 <LookupOpenMethod>:
 8016de8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016dea:	af03      	add	r7, sp, #12
 8016dec:	f84d 8d04 	str.w	r8, [sp, #-4]!
 8016df0:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8016df2:	f1a1 0e01 	sub.w	lr, r1, #1
 8016df6:	f1be 0f00 	cmp.w	lr, #0
 8016dfa:	db21      	blt.n	8016e40 <LookupOpenMethod+0x58>
 8016dfc:	f8d0 c02c 	ldr.w	ip, [r0, #44]	; 0x2c
 8016e00:	f04f 0800 	mov.w	r8, #0
 8016e04:	eb08 010e 	add.w	r1, r8, lr
 8016e08:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8016e0c:	1049      	asrs	r1, r1, #1
 8016e0e:	010e      	lsls	r6, r1, #4
 8016e10:	eb0c 1401 	add.w	r4, ip, r1, lsl #4
 8016e14:	f85c 6006 	ldr.w	r6, [ip, r6]
 8016e18:	6865      	ldr	r5, [r4, #4]
 8016e1a:	1ab0      	subs	r0, r6, r2
 8016e1c:	eb75 0003 	sbcs.w	r0, r5, r3
 8016e20:	da04      	bge.n	8016e2c <LookupOpenMethod+0x44>
 8016e22:	f101 0801 	add.w	r8, r1, #1
 8016e26:	45f0      	cmp	r8, lr
 8016e28:	ddec      	ble.n	8016e04 <LookupOpenMethod+0x1c>
 8016e2a:	e009      	b.n	8016e40 <LookupOpenMethod+0x58>
 8016e2c:	ea86 0002 	eor.w	r0, r6, r2
 8016e30:	ea85 0603 	eor.w	r6, r5, r3
 8016e34:	4330      	orrs	r0, r6
 8016e36:	d00d      	beq.n	8016e54 <LookupOpenMethod+0x6c>
 8016e38:	f1a1 0e01 	sub.w	lr, r1, #1
 8016e3c:	45f0      	cmp	r8, lr
 8016e3e:	dde1      	ble.n	8016e04 <LookupOpenMethod+0x1c>
 8016e40:	f245 303b 	movw	r0, #21307	; 0x533b
 8016e44:	f245 318f 	movw	r1, #21391	; 0x538f
 8016e48:	f6c0 0002 	movt	r0, #2050	; 0x802
 8016e4c:	f6c0 0102 	movt	r1, #2050	; 0x802
 8016e50:	f7fa ff88 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>
 8016e54:	68a0      	ldr	r0, [r4, #8]
 8016e56:	f85d 8b04 	ldr.w	r8, [sp], #4
 8016e5a:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016e5c <CheckInstance>:
 8016e5c:	b580      	push	{r7, lr}
 8016e5e:	466f      	mov	r7, sp
 8016e60:	b310      	cbz	r0, 8016ea8 <CheckInstance+0x4c>
 8016e62:	6b8a      	ldr	r2, [r1, #56]	; 0x38
 8016e64:	6800      	ldr	r0, [r0, #0]
 8016e66:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
 8016e6a:	dc0f      	bgt.n	8016e8c <CheckInstance+0x30>
 8016e6c:	f8d0 c028 	ldr.w	ip, [r0, #40]	; 0x28
 8016e70:	f1bc 0f01 	cmp.w	ip, #1
 8016e74:	db14      	blt.n	8016ea0 <CheckInstance+0x44>
 8016e76:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8016e78:	2300      	movs	r3, #0
 8016e7a:	f850 2023 	ldr.w	r2, [r0, r3, lsl #2]
 8016e7e:	428a      	cmp	r2, r1
 8016e80:	d011      	beq.n	8016ea6 <CheckInstance+0x4a>
 8016e82:	3301      	adds	r3, #1
 8016e84:	4563      	cmp	r3, ip
 8016e86:	dbf8      	blt.n	8016e7a <CheckInstance+0x1e>
 8016e88:	e00a      	b.n	8016ea0 <CheckInstance+0x44>
 8016e8a:	6980      	ldr	r0, [r0, #24]
 8016e8c:	2800      	cmp	r0, #0
 8016e8e:	4602      	mov	r2, r0
 8016e90:	bf18      	it	ne
 8016e92:	2201      	movne	r2, #1
 8016e94:	d001      	beq.n	8016e9a <CheckInstance+0x3e>
 8016e96:	4288      	cmp	r0, r1
 8016e98:	d1f7      	bne.n	8016e8a <CheckInstance+0x2e>
 8016e9a:	2a01      	cmp	r2, #1
 8016e9c:	bf08      	it	eq
 8016e9e:	bd80      	popeq	{r7, pc}
 8016ea0:	2000      	movs	r0, #0
 8016ea2:	f7f8 ff62 	bl	800fd6a <ThrowClassCastException>
 8016ea6:	bd80      	pop	{r7, pc}
 8016ea8:	f644 60d2 	movw	r0, #20178	; 0x4ed2
 8016eac:	f644 7123 	movw	r1, #20259	; 0x4f23
 8016eb0:	f6c0 0002 	movt	r0, #2050	; 0x802
 8016eb4:	f6c0 0102 	movt	r1, #2050	; 0x802
 8016eb8:	f7fa ff54 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>

08016ebc <Kotlin_TypeInfo_isInstance>:
 8016ebc:	b1f8      	cbz	r0, 8016efe <Kotlin_TypeInfo_isInstance+0x42>
 8016ebe:	6802      	ldr	r2, [r0, #0]
 8016ec0:	6b88      	ldr	r0, [r1, #56]	; 0x38
 8016ec2:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 8016ec6:	dc14      	bgt.n	8016ef2 <Kotlin_TypeInfo_isInstance+0x36>
 8016ec8:	6a90      	ldr	r0, [r2, #40]	; 0x28
 8016eca:	2801      	cmp	r0, #1
 8016ecc:	db0b      	blt.n	8016ee6 <Kotlin_TypeInfo_isInstance+0x2a>
 8016ece:	f8d2 c024 	ldr.w	ip, [r2, #36]	; 0x24
 8016ed2:	2300      	movs	r3, #0
 8016ed4:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8016ed8:	428a      	cmp	r2, r1
 8016eda:	bf04      	itt	eq
 8016edc:	2001      	moveq	r0, #1
 8016ede:	4770      	bxeq	lr
 8016ee0:	3301      	adds	r3, #1
 8016ee2:	4283      	cmp	r3, r0
 8016ee4:	dbf6      	blt.n	8016ed4 <Kotlin_TypeInfo_isInstance+0x18>
 8016ee6:	2000      	movs	r0, #0
 8016ee8:	4770      	bx	lr
 8016eea:	428a      	cmp	r2, r1
 8016eec:	bf08      	it	eq
 8016eee:	4770      	bxeq	lr
 8016ef0:	6992      	ldr	r2, [r2, #24]
 8016ef2:	2a00      	cmp	r2, #0
 8016ef4:	4610      	mov	r0, r2
 8016ef6:	bf18      	it	ne
 8016ef8:	2001      	movne	r0, #1
 8016efa:	d1f6      	bne.n	8016eea <Kotlin_TypeInfo_isInstance+0x2e>
 8016efc:	4770      	bx	lr
 8016efe:	b580      	push	{r7, lr}
 8016f00:	466f      	mov	r7, sp
 8016f02:	f644 60d2 	movw	r0, #20178	; 0x4ed2
 8016f06:	f644 7123 	movw	r1, #20259	; 0x4f23
 8016f0a:	f6c0 0002 	movt	r0, #2050	; 0x802
 8016f0e:	f6c0 0102 	movt	r1, #2050	; 0x802
 8016f12:	f7fa ff27 	bl	8011d64 <_Z19RuntimeAssertFailedPKcS0_>

08016f16 <Kotlin_TypeInfo_getPackageName>:
 8016f16:	b5d0      	push	{r4, r6, r7, lr}
 8016f18:	af02      	add	r7, sp, #8
 8016f1a:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8016f1c:	4608      	mov	r0, r1
 8016f1e:	4621      	mov	r1, r4
 8016f20:	f7fd fb63 	bl	80145ea <UpdateReturnRef>
 8016f24:	4620      	mov	r0, r4
 8016f26:	bdd0      	pop	{r4, r6, r7, pc}

08016f28 <Kotlin_TypeInfo_getRelativeName>:
 8016f28:	b5d0      	push	{r4, r6, r7, lr}
 8016f2a:	af02      	add	r7, sp, #8
 8016f2c:	6c04      	ldr	r4, [r0, #64]	; 0x40
 8016f2e:	4608      	mov	r0, r1
 8016f30:	4621      	mov	r1, r4
 8016f32:	f7fd fb5a 	bl	80145ea <UpdateReturnRef>
 8016f36:	4620      	mov	r0, r4
 8016f38:	bdd0      	pop	{r4, r6, r7, pc}

08016f3a <kfun:platform.zephyr.stm32f4_disco.device_get_binding(kotlin.String?)ValueType>:
 8016f3a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016f3c:	af03      	add	r7, sp, #12
 8016f3e:	f84d 8d04 	str.w	r8, [sp, #-4]!
 8016f42:	b08a      	sub	sp, #40	; 0x28
 8016f44:	2500      	movs	r5, #0
 8016f46:	46e8      	mov	r8, sp
 8016f48:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8016f4c:	f108 0108 	add.w	r1, r8, #8
 8016f50:	e9cd 5502 	strd	r5, r5, [sp, #8]
 8016f54:	e9cd 5000 	strd	r5, r0, [sp]
 8016f58:	f243 40d0 	movw	r0, #13520	; 0x34d0
 8016f5c:	f6c0 0002 	movt	r0, #2050	; 0x802
 8016f60:	f7ff fccb 	bl	80168fa <AllocInstance>
 8016f64:	4604      	mov	r4, r0
 8016f66:	f240 0048 	movw	r0, #72	; 0x48
 8016f6a:	9508      	str	r5, [sp, #32]
 8016f6c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8016f70:	e9cd 5406 	strd	r5, r4, [sp, #24]
 8016f74:	6803      	ldr	r3, [r0, #0]
 8016f76:	4620      	mov	r0, r4
 8016f78:	b993      	cbnz	r3, 8016fa0 <kfun:platform.zephyr.stm32f4_disco.device_get_binding(kotlin.String?)ValueType+0x66>
 8016f7a:	a806      	add	r0, sp, #24
 8016f7c:	f243 11b0 	movw	r1, #12720	; 0x31b0
 8016f80:	f24e 0271 	movw	r2, #57457	; 0xe071
 8016f84:	f100 0308 	add.w	r3, r0, #8
 8016f88:	f240 0048 	movw	r0, #72	; 0x48
 8016f8c:	f6c0 0102 	movt	r1, #2050	; 0x802
 8016f90:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8016f94:	f6c0 0200 	movt	r2, #2048	; 0x800
 8016f98:	f7ff fd17 	bl	80169ca <InitInstance>
 8016f9c:	4603      	mov	r3, r0
 8016f9e:	9807      	ldr	r0, [sp, #28]
 8016fa0:	2100      	movs	r1, #0
 8016fa2:	2201      	movs	r2, #1
 8016fa4:	2500      	movs	r5, #0
 8016fa6:	f7f6 ffff 	bl	800dfa8 <kfun:kotlinx.cinterop.ArenaBase.<init>(kotlinx.cinterop.NativeFreeablePlacement;kotlin.Int;konan.internal.DefaultConstructorMarker)kotlinx.cinterop.ArenaBase>
 8016faa:	a806      	add	r0, sp, #24
 8016fac:	2101      	movs	r1, #1
 8016fae:	2203      	movs	r2, #3
 8016fb0:	f7ff fd59 	bl	8016a66 <LeaveFrame>
 8016fb4:	9801      	ldr	r0, [sp, #4]
 8016fb6:	b1d0      	cbz	r0, 8016fee <kfun:platform.zephyr.stm32f4_disco.device_get_binding(kotlin.String?)ValueType+0xb4>
 8016fb8:	f108 010c 	add.w	r1, r8, #12
 8016fbc:	f7f8 f8eb 	bl	800f196 <kfun:kotlinx.cinterop.<get-cstr>@kotlin.String.()kotlinx.cinterop.CValues<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>>
 8016fc0:	4606      	mov	r6, r0
 8016fc2:	2500      	movs	r5, #0
 8016fc4:	b19e      	cbz	r6, 8016fee <kfun:platform.zephyr.stm32f4_disco.device_get_binding(kotlin.String?)ValueType+0xb4>
 8016fc6:	f108 0014 	add.w	r0, r8, #20
 8016fca:	4621      	mov	r1, r4
 8016fcc:	f108 0810 	add.w	r8, r8, #16
 8016fd0:	e9cd 5406 	strd	r5, r4, [sp, #24]
 8016fd4:	f7fd fb09 	bl	80145ea <UpdateReturnRef>
 8016fd8:	a806      	add	r0, sp, #24
 8016fda:	2101      	movs	r1, #1
 8016fdc:	2202      	movs	r2, #2
 8016fde:	f7ff fd42 	bl	8016a66 <LeaveFrame>
 8016fe2:	6830      	ldr	r0, [r6, #0]
 8016fe4:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8016fe6:	4630      	mov	r0, r6
 8016fe8:	4621      	mov	r1, r4
 8016fea:	4790      	blx	r2
 8016fec:	4605      	mov	r5, r0
 8016fee:	4628      	mov	r0, r5
 8016ff0:	f000 ffab 	bl	8017f4a <platform_zephyr_stm32f4_disco_kniBridge382>
 8016ff4:	4605      	mov	r5, r0
 8016ff6:	4620      	mov	r0, r4
 8016ff8:	f7f6 ff17 	bl	800de2a <kfun:kotlinx.cinterop.ArenaBase.clearImpl()>
 8016ffc:	4668      	mov	r0, sp
 8016ffe:	2101      	movs	r1, #1
 8017000:	2206      	movs	r2, #6
 8017002:	f7ff fd30 	bl	8016a66 <LeaveFrame>
 8017006:	4628      	mov	r0, r5
 8017008:	b00a      	add	sp, #40	; 0x28
 801700a:	f85d 8b04 	ldr.w	r8, [sp], #4
 801700e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017010:	f003 f98a 	bl	801a328 <__cxa_begin_catch>
 8017014:	6805      	ldr	r5, [r0, #0]
 8017016:	4640      	mov	r0, r8
 8017018:	4629      	mov	r1, r5
 801701a:	f7fd f8d9 	bl	80141d0 <UpdateRef>
 801701e:	f003 f9c1 	bl	801a3a4 <__cxa_end_catch>
 8017022:	4620      	mov	r0, r4
 8017024:	f7f6 ff01 	bl	800de2a <kfun:kotlinx.cinterop.ArenaBase.clearImpl()>
 8017028:	4628      	mov	r0, r5
 801702a:	f7fd ff6a 	bl	8014f02 <ThrowException>
 801702e:	4604      	mov	r4, r0
 8017030:	4668      	mov	r0, sp
 8017032:	2101      	movs	r1, #1
 8017034:	2206      	movs	r2, #6
 8017036:	f7ff fd16 	bl	8016a66 <LeaveFrame>
 801703a:	4620      	mov	r0, r4
 801703c:	f7ea f8d6 	bl	80011ec <_Unwind_Resume>

08017040 <kfun:platform.zephyr.stm32f4_disco.gpio_pin_configure(kotlinx.cinterop.CValuesRef<platform.zephyr.stm32f4_disco.device>?;kotlin.Int;kotlin.Int)ValueType>:
 8017040:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017042:	af03      	add	r7, sp, #12
 8017044:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 8017048:	b089      	sub	sp, #36	; 0x24
 801704a:	2500      	movs	r5, #0
 801704c:	f10d 0b04 	add.w	fp, sp, #4
 8017050:	468a      	mov	sl, r1
 8017052:	9505      	str	r5, [sp, #20]
 8017054:	e9cd 5503 	strd	r5, r5, [sp, #12]
 8017058:	f10b 0108 	add.w	r1, fp, #8
 801705c:	e9cd 5001 	strd	r5, r0, [sp, #4]
 8017060:	f243 40d0 	movw	r0, #13520	; 0x34d0
 8017064:	f6c0 0002 	movt	r0, #2050	; 0x802
 8017068:	4691      	mov	r9, r2
 801706a:	f7ff fc46 	bl	80168fa <AllocInstance>
 801706e:	4604      	mov	r4, r0
 8017070:	f240 0048 	movw	r0, #72	; 0x48
 8017074:	9508      	str	r5, [sp, #32]
 8017076:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801707a:	e9cd 5406 	strd	r5, r4, [sp, #24]
 801707e:	6803      	ldr	r3, [r0, #0]
 8017080:	4620      	mov	r0, r4
 8017082:	b993      	cbnz	r3, 80170aa <kfun:platform.zephyr.stm32f4_disco.gpio_pin_configure(kotlinx.cinterop.CValuesRef<platform.zephyr.stm32f4_disco.device>?;kotlin.Int;kotlin.Int)ValueType+0x6a>
 8017084:	a806      	add	r0, sp, #24
 8017086:	f243 11b0 	movw	r1, #12720	; 0x31b0
 801708a:	f24e 0271 	movw	r2, #57457	; 0xe071
 801708e:	f100 0308 	add.w	r3, r0, #8
 8017092:	f240 0048 	movw	r0, #72	; 0x48
 8017096:	f6c0 0102 	movt	r1, #2050	; 0x802
 801709a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801709e:	f6c0 0200 	movt	r2, #2048	; 0x800
 80170a2:	f7ff fc92 	bl	80169ca <InitInstance>
 80170a6:	4603      	mov	r3, r0
 80170a8:	9807      	ldr	r0, [sp, #28]
 80170aa:	2100      	movs	r1, #0
 80170ac:	2201      	movs	r2, #1
 80170ae:	2500      	movs	r5, #0
 80170b0:	f7f6 ff7a 	bl	800dfa8 <kfun:kotlinx.cinterop.ArenaBase.<init>(kotlinx.cinterop.NativeFreeablePlacement;kotlin.Int;konan.internal.DefaultConstructorMarker)kotlinx.cinterop.ArenaBase>
 80170b4:	a806      	add	r0, sp, #24
 80170b6:	2101      	movs	r1, #1
 80170b8:	2203      	movs	r2, #3
 80170ba:	f7ff fcd4 	bl	8016a66 <LeaveFrame>
 80170be:	9e02      	ldr	r6, [sp, #8]
 80170c0:	b19e      	cbz	r6, 80170ea <kfun:platform.zephyr.stm32f4_disco.gpio_pin_configure(kotlinx.cinterop.CValuesRef<platform.zephyr.stm32f4_disco.device>?;kotlin.Int;kotlin.Int)ValueType+0xaa>
 80170c2:	f10b 000c 	add.w	r0, fp, #12
 80170c6:	4621      	mov	r1, r4
 80170c8:	f10b 0810 	add.w	r8, fp, #16
 80170cc:	e9cd 5406 	strd	r5, r4, [sp, #24]
 80170d0:	f7fd fa8b 	bl	80145ea <UpdateReturnRef>
 80170d4:	a806      	add	r0, sp, #24
 80170d6:	2101      	movs	r1, #1
 80170d8:	2202      	movs	r2, #2
 80170da:	f7ff fcc4 	bl	8016a66 <LeaveFrame>
 80170de:	6830      	ldr	r0, [r6, #0]
 80170e0:	6d02      	ldr	r2, [r0, #80]	; 0x50
 80170e2:	4630      	mov	r0, r6
 80170e4:	4621      	mov	r1, r4
 80170e6:	4790      	blx	r2
 80170e8:	4605      	mov	r5, r0
 80170ea:	4628      	mov	r0, r5
 80170ec:	4651      	mov	r1, sl
 80170ee:	464a      	mov	r2, r9
 80170f0:	f000 ff78 	bl	8017fe4 <platform_zephyr_stm32f4_disco_kniBridge1930>
 80170f4:	4605      	mov	r5, r0
 80170f6:	4620      	mov	r0, r4
 80170f8:	f7f6 fe97 	bl	800de2a <kfun:kotlinx.cinterop.ArenaBase.clearImpl()>
 80170fc:	a801      	add	r0, sp, #4
 80170fe:	2101      	movs	r1, #1
 8017100:	2205      	movs	r2, #5
 8017102:	f7ff fcb0 	bl	8016a66 <LeaveFrame>
 8017106:	4628      	mov	r0, r5
 8017108:	b009      	add	sp, #36	; 0x24
 801710a:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 801710e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017110:	f003 f90a 	bl	801a328 <__cxa_begin_catch>
 8017114:	6805      	ldr	r5, [r0, #0]
 8017116:	4640      	mov	r0, r8
 8017118:	4629      	mov	r1, r5
 801711a:	f7fd f859 	bl	80141d0 <UpdateRef>
 801711e:	f003 f941 	bl	801a3a4 <__cxa_end_catch>
 8017122:	4620      	mov	r0, r4
 8017124:	f7f6 fe81 	bl	800de2a <kfun:kotlinx.cinterop.ArenaBase.clearImpl()>
 8017128:	4628      	mov	r0, r5
 801712a:	f7fd feea 	bl	8014f02 <ThrowException>
 801712e:	4604      	mov	r4, r0
 8017130:	a801      	add	r0, sp, #4
 8017132:	2101      	movs	r1, #1
 8017134:	2205      	movs	r2, #5
 8017136:	f7ff fc96 	bl	8016a66 <LeaveFrame>
 801713a:	4620      	mov	r0, r4
 801713c:	f7ea f856 	bl	80011ec <_Unwind_Resume>

08017140 <kfun:platform.zephyr.stm32f4_disco.gpio_pin_write(kotlinx.cinterop.CValuesRef<platform.zephyr.stm32f4_disco.device>?;kotlin.Int;kotlin.Int)ValueType>:
 8017140:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017142:	af03      	add	r7, sp, #12
 8017144:	e92d 0f00 	stmdb	sp!, {r8, r9, sl, fp}
 8017148:	b089      	sub	sp, #36	; 0x24
 801714a:	2500      	movs	r5, #0
 801714c:	f10d 0b04 	add.w	fp, sp, #4
 8017150:	468a      	mov	sl, r1
 8017152:	9505      	str	r5, [sp, #20]
 8017154:	e9cd 5503 	strd	r5, r5, [sp, #12]
 8017158:	f10b 0108 	add.w	r1, fp, #8
 801715c:	e9cd 5001 	strd	r5, r0, [sp, #4]
 8017160:	f243 40d0 	movw	r0, #13520	; 0x34d0
 8017164:	f6c0 0002 	movt	r0, #2050	; 0x802
 8017168:	4691      	mov	r9, r2
 801716a:	f7ff fbc6 	bl	80168fa <AllocInstance>
 801716e:	4604      	mov	r4, r0
 8017170:	f240 0048 	movw	r0, #72	; 0x48
 8017174:	9508      	str	r5, [sp, #32]
 8017176:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801717a:	e9cd 5406 	strd	r5, r4, [sp, #24]
 801717e:	6803      	ldr	r3, [r0, #0]
 8017180:	4620      	mov	r0, r4
 8017182:	b993      	cbnz	r3, 80171aa <kfun:platform.zephyr.stm32f4_disco.gpio_pin_write(kotlinx.cinterop.CValuesRef<platform.zephyr.stm32f4_disco.device>?;kotlin.Int;kotlin.Int)ValueType+0x6a>
 8017184:	a806      	add	r0, sp, #24
 8017186:	f243 11b0 	movw	r1, #12720	; 0x31b0
 801718a:	f24e 0271 	movw	r2, #57457	; 0xe071
 801718e:	f100 0308 	add.w	r3, r0, #8
 8017192:	f240 0048 	movw	r0, #72	; 0x48
 8017196:	f6c0 0102 	movt	r1, #2050	; 0x802
 801719a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801719e:	f6c0 0200 	movt	r2, #2048	; 0x800
 80171a2:	f7ff fc12 	bl	80169ca <InitInstance>
 80171a6:	4603      	mov	r3, r0
 80171a8:	9807      	ldr	r0, [sp, #28]
 80171aa:	2100      	movs	r1, #0
 80171ac:	2201      	movs	r2, #1
 80171ae:	2500      	movs	r5, #0
 80171b0:	f7f6 fefa 	bl	800dfa8 <kfun:kotlinx.cinterop.ArenaBase.<init>(kotlinx.cinterop.NativeFreeablePlacement;kotlin.Int;konan.internal.DefaultConstructorMarker)kotlinx.cinterop.ArenaBase>
 80171b4:	a806      	add	r0, sp, #24
 80171b6:	2101      	movs	r1, #1
 80171b8:	2203      	movs	r2, #3
 80171ba:	f7ff fc54 	bl	8016a66 <LeaveFrame>
 80171be:	9e02      	ldr	r6, [sp, #8]
 80171c0:	b19e      	cbz	r6, 80171ea <kfun:platform.zephyr.stm32f4_disco.gpio_pin_write(kotlinx.cinterop.CValuesRef<platform.zephyr.stm32f4_disco.device>?;kotlin.Int;kotlin.Int)ValueType+0xaa>
 80171c2:	f10b 000c 	add.w	r0, fp, #12
 80171c6:	4621      	mov	r1, r4
 80171c8:	f10b 0810 	add.w	r8, fp, #16
 80171cc:	e9cd 5406 	strd	r5, r4, [sp, #24]
 80171d0:	f7fd fa0b 	bl	80145ea <UpdateReturnRef>
 80171d4:	a806      	add	r0, sp, #24
 80171d6:	2101      	movs	r1, #1
 80171d8:	2202      	movs	r2, #2
 80171da:	f7ff fc44 	bl	8016a66 <LeaveFrame>
 80171de:	6830      	ldr	r0, [r6, #0]
 80171e0:	6d02      	ldr	r2, [r0, #80]	; 0x50
 80171e2:	4630      	mov	r0, r6
 80171e4:	4621      	mov	r1, r4
 80171e6:	4790      	blx	r2
 80171e8:	4605      	mov	r5, r0
 80171ea:	4628      	mov	r0, r5
 80171ec:	4651      	mov	r1, sl
 80171ee:	464a      	mov	r2, r9
 80171f0:	f000 ff13 	bl	801801a <platform_zephyr_stm32f4_disco_kniBridge1931>
 80171f4:	4605      	mov	r5, r0
 80171f6:	4620      	mov	r0, r4
 80171f8:	f7f6 fe17 	bl	800de2a <kfun:kotlinx.cinterop.ArenaBase.clearImpl()>
 80171fc:	a801      	add	r0, sp, #4
 80171fe:	2101      	movs	r1, #1
 8017200:	2205      	movs	r2, #5
 8017202:	f7ff fc30 	bl	8016a66 <LeaveFrame>
 8017206:	4628      	mov	r0, r5
 8017208:	b009      	add	sp, #36	; 0x24
 801720a:	e8bd 0f00 	ldmia.w	sp!, {r8, r9, sl, fp}
 801720e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017210:	f003 f88a 	bl	801a328 <__cxa_begin_catch>
 8017214:	6805      	ldr	r5, [r0, #0]
 8017216:	4640      	mov	r0, r8
 8017218:	4629      	mov	r1, r5
 801721a:	f7fc ffd9 	bl	80141d0 <UpdateRef>
 801721e:	f003 f8c1 	bl	801a3a4 <__cxa_end_catch>
 8017222:	4620      	mov	r0, r4
 8017224:	f7f6 fe01 	bl	800de2a <kfun:kotlinx.cinterop.ArenaBase.clearImpl()>
 8017228:	4628      	mov	r0, r5
 801722a:	f7fd fe6a 	bl	8014f02 <ThrowException>
 801722e:	4604      	mov	r4, r0
 8017230:	a801      	add	r0, sp, #4
 8017232:	2101      	movs	r1, #1
 8017234:	2205      	movs	r2, #5
 8017236:	f7ff fc16 	bl	8016a66 <LeaveFrame>
 801723a:	4620      	mov	r0, r4
 801723c:	f7e9 ffd6 	bl	80011ec <_Unwind_Resume>

08017240 <__unnamed_89>:
 8017240:	2800      	cmp	r0, #0
 8017242:	bf18      	it	ne
 8017244:	4770      	bxne	lr
 8017246:	b580      	push	{r7, lr}
 8017248:	f240 0034 	movw	r0, #52	; 0x34
 801724c:	2100      	movs	r1, #0
 801724e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017252:	f7fc ffbd 	bl	80141d0 <UpdateRef>
 8017256:	f240 1098 	movw	r0, #408	; 0x198
 801725a:	2100      	movs	r1, #0
 801725c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017260:	f7fc ffb6 	bl	80141d0 <UpdateRef>
 8017264:	f240 0020 	movw	r0, #32
 8017268:	2100      	movs	r1, #0
 801726a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801726e:	f7fc ffaf 	bl	80141d0 <UpdateRef>
 8017272:	f240 107c 	movw	r0, #380	; 0x17c
 8017276:	2100      	movs	r1, #0
 8017278:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801727c:	f7fc ffa8 	bl	80141d0 <UpdateRef>
 8017280:	f240 0038 	movw	r0, #56	; 0x38
 8017284:	2100      	movs	r1, #0
 8017286:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801728a:	f7fc ffa1 	bl	80141d0 <UpdateRef>
 801728e:	f240 1080 	movw	r0, #384	; 0x180
 8017292:	2100      	movs	r1, #0
 8017294:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017298:	f7fc ff9a 	bl	80141d0 <UpdateRef>
 801729c:	f240 1084 	movw	r0, #388	; 0x184
 80172a0:	2100      	movs	r1, #0
 80172a2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80172a6:	f7fc ff93 	bl	80141d0 <UpdateRef>
 80172aa:	f240 1088 	movw	r0, #392	; 0x188
 80172ae:	2100      	movs	r1, #0
 80172b0:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80172b4:	f7fc ff8c 	bl	80141d0 <UpdateRef>
 80172b8:	f240 108c 	movw	r0, #396	; 0x18c
 80172bc:	2100      	movs	r1, #0
 80172be:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80172c2:	f7fc ff85 	bl	80141d0 <UpdateRef>
 80172c6:	f240 1090 	movw	r0, #400	; 0x190
 80172ca:	2100      	movs	r1, #0
 80172cc:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80172d0:	f7fc ff7e 	bl	80141d0 <UpdateRef>
 80172d4:	f240 1094 	movw	r0, #404	; 0x194
 80172d8:	2100      	movs	r1, #0
 80172da:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80172de:	f7fc ff77 	bl	80141d0 <UpdateRef>
 80172e2:	f240 109c 	movw	r0, #412	; 0x19c
 80172e6:	2100      	movs	r1, #0
 80172e8:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80172ec:	f7fc ff70 	bl	80141d0 <UpdateRef>
 80172f0:	f240 10a0 	movw	r0, #416	; 0x1a0
 80172f4:	2100      	movs	r1, #0
 80172f6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80172fa:	f7fc ff69 	bl	80141d0 <UpdateRef>
 80172fe:	f240 10a4 	movw	r0, #420	; 0x1a4
 8017302:	2100      	movs	r1, #0
 8017304:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017308:	f7fc ff62 	bl	80141d0 <UpdateRef>
 801730c:	f240 10a8 	movw	r0, #424	; 0x1a8
 8017310:	2100      	movs	r1, #0
 8017312:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017316:	f7fc ff5b 	bl	80141d0 <UpdateRef>
 801731a:	f240 10ac 	movw	r0, #428	; 0x1ac
 801731e:	2100      	movs	r1, #0
 8017320:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017324:	f7fc ff54 	bl	80141d0 <UpdateRef>
 8017328:	f240 10b0 	movw	r0, #432	; 0x1b0
 801732c:	2100      	movs	r1, #0
 801732e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017332:	f7fc ff4d 	bl	80141d0 <UpdateRef>
 8017336:	f240 10b4 	movw	r0, #436	; 0x1b4
 801733a:	2100      	movs	r1, #0
 801733c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017340:	f7fc ff46 	bl	80141d0 <UpdateRef>
 8017344:	f240 10b8 	movw	r0, #440	; 0x1b8
 8017348:	2100      	movs	r1, #0
 801734a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801734e:	f7fc ff3f 	bl	80141d0 <UpdateRef>
 8017352:	f240 10bc 	movw	r0, #444	; 0x1bc
 8017356:	2100      	movs	r1, #0
 8017358:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801735c:	f7fc ff38 	bl	80141d0 <UpdateRef>
 8017360:	f240 10c0 	movw	r0, #448	; 0x1c0
 8017364:	2100      	movs	r1, #0
 8017366:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801736a:	f7fc ff31 	bl	80141d0 <UpdateRef>
 801736e:	f240 10c4 	movw	r0, #452	; 0x1c4
 8017372:	2100      	movs	r1, #0
 8017374:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017378:	f7fc ff2a 	bl	80141d0 <UpdateRef>
 801737c:	f240 10c8 	movw	r0, #456	; 0x1c8
 8017380:	2100      	movs	r1, #0
 8017382:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017386:	f7fc ff23 	bl	80141d0 <UpdateRef>
 801738a:	f240 10cc 	movw	r0, #460	; 0x1cc
 801738e:	2100      	movs	r1, #0
 8017390:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017394:	f7fc ff1c 	bl	80141d0 <UpdateRef>
 8017398:	f240 10d0 	movw	r0, #464	; 0x1d0
 801739c:	2100      	movs	r1, #0
 801739e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80173a2:	f7fc ff15 	bl	80141d0 <UpdateRef>
 80173a6:	f240 10d4 	movw	r0, #468	; 0x1d4
 80173aa:	2100      	movs	r1, #0
 80173ac:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80173b0:	f7fc ff0e 	bl	80141d0 <UpdateRef>
 80173b4:	f240 10d8 	movw	r0, #472	; 0x1d8
 80173b8:	2100      	movs	r1, #0
 80173ba:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80173be:	f7fc ff07 	bl	80141d0 <UpdateRef>
 80173c2:	f240 10dc 	movw	r0, #476	; 0x1dc
 80173c6:	2100      	movs	r1, #0
 80173c8:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80173cc:	f7fc ff00 	bl	80141d0 <UpdateRef>
 80173d0:	f240 10e0 	movw	r0, #480	; 0x1e0
 80173d4:	2100      	movs	r1, #0
 80173d6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80173da:	f7fc fef9 	bl	80141d0 <UpdateRef>
 80173de:	f240 10e4 	movw	r0, #484	; 0x1e4
 80173e2:	2100      	movs	r1, #0
 80173e4:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80173e8:	f7fc fef2 	bl	80141d0 <UpdateRef>
 80173ec:	f240 10e8 	movw	r0, #488	; 0x1e8
 80173f0:	2100      	movs	r1, #0
 80173f2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80173f6:	f7fc feeb 	bl	80141d0 <UpdateRef>
 80173fa:	f240 10ec 	movw	r0, #492	; 0x1ec
 80173fe:	2100      	movs	r1, #0
 8017400:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017404:	f7fc fee4 	bl	80141d0 <UpdateRef>
 8017408:	f240 10f0 	movw	r0, #496	; 0x1f0
 801740c:	2100      	movs	r1, #0
 801740e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017412:	f7fc fedd 	bl	80141d0 <UpdateRef>
 8017416:	f240 10f4 	movw	r0, #500	; 0x1f4
 801741a:	2100      	movs	r1, #0
 801741c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017420:	f7fc fed6 	bl	80141d0 <UpdateRef>
 8017424:	f240 10f8 	movw	r0, #504	; 0x1f8
 8017428:	2100      	movs	r1, #0
 801742a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801742e:	f7fc fecf 	bl	80141d0 <UpdateRef>
 8017432:	f240 10fc 	movw	r0, #508	; 0x1fc
 8017436:	2100      	movs	r1, #0
 8017438:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801743c:	f7fc fec8 	bl	80141d0 <UpdateRef>
 8017440:	f240 2000 	movw	r0, #512	; 0x200
 8017444:	2100      	movs	r1, #0
 8017446:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801744a:	f7fc fec1 	bl	80141d0 <UpdateRef>
 801744e:	f240 2004 	movw	r0, #516	; 0x204
 8017452:	2100      	movs	r1, #0
 8017454:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017458:	f7fc feba 	bl	80141d0 <UpdateRef>
 801745c:	f240 2008 	movw	r0, #520	; 0x208
 8017460:	2100      	movs	r1, #0
 8017462:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017466:	f7fc feb3 	bl	80141d0 <UpdateRef>
 801746a:	f240 200c 	movw	r0, #524	; 0x20c
 801746e:	2100      	movs	r1, #0
 8017470:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017474:	f7fc feac 	bl	80141d0 <UpdateRef>
 8017478:	f240 2010 	movw	r0, #528	; 0x210
 801747c:	2100      	movs	r1, #0
 801747e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017482:	f7fc fea5 	bl	80141d0 <UpdateRef>
 8017486:	f240 2014 	movw	r0, #532	; 0x214
 801748a:	2100      	movs	r1, #0
 801748c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017490:	f7fc fe9e 	bl	80141d0 <UpdateRef>
 8017494:	f240 2018 	movw	r0, #536	; 0x218
 8017498:	2100      	movs	r1, #0
 801749a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801749e:	f7fc fe97 	bl	80141d0 <UpdateRef>
 80174a2:	f240 201c 	movw	r0, #540	; 0x21c
 80174a6:	2100      	movs	r1, #0
 80174a8:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80174ac:	f7fc fe90 	bl	80141d0 <UpdateRef>
 80174b0:	f240 2020 	movw	r0, #544	; 0x220
 80174b4:	2100      	movs	r1, #0
 80174b6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80174ba:	f7fc fe89 	bl	80141d0 <UpdateRef>
 80174be:	f240 2024 	movw	r0, #548	; 0x224
 80174c2:	2100      	movs	r1, #0
 80174c4:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80174c8:	f7fc fe82 	bl	80141d0 <UpdateRef>
 80174cc:	f240 2028 	movw	r0, #552	; 0x228
 80174d0:	2100      	movs	r1, #0
 80174d2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80174d6:	f7fc fe7b 	bl	80141d0 <UpdateRef>
 80174da:	f240 202c 	movw	r0, #556	; 0x22c
 80174de:	2100      	movs	r1, #0
 80174e0:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80174e4:	f7fc fe74 	bl	80141d0 <UpdateRef>
 80174e8:	f240 2030 	movw	r0, #560	; 0x230
 80174ec:	2100      	movs	r1, #0
 80174ee:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80174f2:	f7fc fe6d 	bl	80141d0 <UpdateRef>
 80174f6:	f240 2034 	movw	r0, #564	; 0x234
 80174fa:	2100      	movs	r1, #0
 80174fc:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017500:	f7fc fe66 	bl	80141d0 <UpdateRef>
 8017504:	f240 2038 	movw	r0, #568	; 0x238
 8017508:	2100      	movs	r1, #0
 801750a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801750e:	f7fc fe5f 	bl	80141d0 <UpdateRef>
 8017512:	f240 203c 	movw	r0, #572	; 0x23c
 8017516:	2100      	movs	r1, #0
 8017518:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801751c:	f7fc fe58 	bl	80141d0 <UpdateRef>
 8017520:	f240 2040 	movw	r0, #576	; 0x240
 8017524:	2100      	movs	r1, #0
 8017526:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801752a:	f7fc fe51 	bl	80141d0 <UpdateRef>
 801752e:	f240 2044 	movw	r0, #580	; 0x244
 8017532:	2100      	movs	r1, #0
 8017534:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017538:	f7fc fe4a 	bl	80141d0 <UpdateRef>
 801753c:	f240 2048 	movw	r0, #584	; 0x248
 8017540:	2100      	movs	r1, #0
 8017542:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017546:	f7fc fe43 	bl	80141d0 <UpdateRef>
 801754a:	f240 204c 	movw	r0, #588	; 0x24c
 801754e:	2100      	movs	r1, #0
 8017550:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017554:	f7fc fe3c 	bl	80141d0 <UpdateRef>
 8017558:	f240 2050 	movw	r0, #592	; 0x250
 801755c:	2100      	movs	r1, #0
 801755e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017562:	f7fc fe35 	bl	80141d0 <UpdateRef>
 8017566:	f240 2054 	movw	r0, #596	; 0x254
 801756a:	2100      	movs	r1, #0
 801756c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017570:	f7fc fe2e 	bl	80141d0 <UpdateRef>
 8017574:	f240 2058 	movw	r0, #600	; 0x258
 8017578:	2100      	movs	r1, #0
 801757a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801757e:	f7fc fe27 	bl	80141d0 <UpdateRef>
 8017582:	f240 205c 	movw	r0, #604	; 0x25c
 8017586:	2100      	movs	r1, #0
 8017588:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801758c:	f7fc fe20 	bl	80141d0 <UpdateRef>
 8017590:	f240 2060 	movw	r0, #608	; 0x260
 8017594:	2100      	movs	r1, #0
 8017596:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801759a:	f7fc fe19 	bl	80141d0 <UpdateRef>
 801759e:	f240 2064 	movw	r0, #612	; 0x264
 80175a2:	2100      	movs	r1, #0
 80175a4:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80175a8:	f7fc fe12 	bl	80141d0 <UpdateRef>
 80175ac:	f240 2068 	movw	r0, #616	; 0x268
 80175b0:	2100      	movs	r1, #0
 80175b2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80175b6:	f7fc fe0b 	bl	80141d0 <UpdateRef>
 80175ba:	f240 206c 	movw	r0, #620	; 0x26c
 80175be:	2100      	movs	r1, #0
 80175c0:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80175c4:	f7fc fe04 	bl	80141d0 <UpdateRef>
 80175c8:	f240 2070 	movw	r0, #624	; 0x270
 80175cc:	2100      	movs	r1, #0
 80175ce:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80175d2:	f7fc fdfd 	bl	80141d0 <UpdateRef>
 80175d6:	f240 2074 	movw	r0, #628	; 0x274
 80175da:	2100      	movs	r1, #0
 80175dc:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80175e0:	f7fc fdf6 	bl	80141d0 <UpdateRef>
 80175e4:	f240 2078 	movw	r0, #632	; 0x278
 80175e8:	2100      	movs	r1, #0
 80175ea:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80175ee:	f7fc fdef 	bl	80141d0 <UpdateRef>
 80175f2:	f240 207c 	movw	r0, #636	; 0x27c
 80175f6:	2100      	movs	r1, #0
 80175f8:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80175fc:	f7fc fde8 	bl	80141d0 <UpdateRef>
 8017600:	f240 2080 	movw	r0, #640	; 0x280
 8017604:	2100      	movs	r1, #0
 8017606:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801760a:	f7fc fde1 	bl	80141d0 <UpdateRef>
 801760e:	f240 2084 	movw	r0, #644	; 0x284
 8017612:	2100      	movs	r1, #0
 8017614:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017618:	f7fc fdda 	bl	80141d0 <UpdateRef>
 801761c:	f240 2088 	movw	r0, #648	; 0x288
 8017620:	2100      	movs	r1, #0
 8017622:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017626:	f7fc fdd3 	bl	80141d0 <UpdateRef>
 801762a:	f240 208c 	movw	r0, #652	; 0x28c
 801762e:	2100      	movs	r1, #0
 8017630:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017634:	f7fc fdcc 	bl	80141d0 <UpdateRef>
 8017638:	f240 2090 	movw	r0, #656	; 0x290
 801763c:	2100      	movs	r1, #0
 801763e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017642:	f7fc fdc5 	bl	80141d0 <UpdateRef>
 8017646:	f240 2094 	movw	r0, #660	; 0x294
 801764a:	2100      	movs	r1, #0
 801764c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017650:	f7fc fdbe 	bl	80141d0 <UpdateRef>
 8017654:	f240 2098 	movw	r0, #664	; 0x298
 8017658:	2100      	movs	r1, #0
 801765a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801765e:	f7fc fdb7 	bl	80141d0 <UpdateRef>
 8017662:	f240 209c 	movw	r0, #668	; 0x29c
 8017666:	2100      	movs	r1, #0
 8017668:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801766c:	f7fc fdb0 	bl	80141d0 <UpdateRef>
 8017670:	f240 20a0 	movw	r0, #672	; 0x2a0
 8017674:	2100      	movs	r1, #0
 8017676:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801767a:	f7fc fda9 	bl	80141d0 <UpdateRef>
 801767e:	f240 20a4 	movw	r0, #676	; 0x2a4
 8017682:	2100      	movs	r1, #0
 8017684:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017688:	f7fc fda2 	bl	80141d0 <UpdateRef>
 801768c:	f240 20a8 	movw	r0, #680	; 0x2a8
 8017690:	2100      	movs	r1, #0
 8017692:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017696:	f7fc fd9b 	bl	80141d0 <UpdateRef>
 801769a:	f240 20ac 	movw	r0, #684	; 0x2ac
 801769e:	2100      	movs	r1, #0
 80176a0:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80176a4:	f7fc fd94 	bl	80141d0 <UpdateRef>
 80176a8:	f240 20b0 	movw	r0, #688	; 0x2b0
 80176ac:	2100      	movs	r1, #0
 80176ae:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80176b2:	f7fc fd8d 	bl	80141d0 <UpdateRef>
 80176b6:	f240 20b4 	movw	r0, #692	; 0x2b4
 80176ba:	2100      	movs	r1, #0
 80176bc:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80176c0:	f7fc fd86 	bl	80141d0 <UpdateRef>
 80176c4:	f240 20b8 	movw	r0, #696	; 0x2b8
 80176c8:	2100      	movs	r1, #0
 80176ca:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80176ce:	f7fc fd7f 	bl	80141d0 <UpdateRef>
 80176d2:	f240 20bc 	movw	r0, #700	; 0x2bc
 80176d6:	2100      	movs	r1, #0
 80176d8:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80176dc:	f7fc fd78 	bl	80141d0 <UpdateRef>
 80176e0:	f240 20c0 	movw	r0, #704	; 0x2c0
 80176e4:	2100      	movs	r1, #0
 80176e6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80176ea:	f7fc fd71 	bl	80141d0 <UpdateRef>
 80176ee:	f240 20c4 	movw	r0, #708	; 0x2c4
 80176f2:	2100      	movs	r1, #0
 80176f4:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80176f8:	f7fc fd6a 	bl	80141d0 <UpdateRef>
 80176fc:	f240 20c8 	movw	r0, #712	; 0x2c8
 8017700:	2100      	movs	r1, #0
 8017702:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017706:	f7fc fd63 	bl	80141d0 <UpdateRef>
 801770a:	f240 20cc 	movw	r0, #716	; 0x2cc
 801770e:	2100      	movs	r1, #0
 8017710:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017714:	f7fc fd5c 	bl	80141d0 <UpdateRef>
 8017718:	f240 20d0 	movw	r0, #720	; 0x2d0
 801771c:	2100      	movs	r1, #0
 801771e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017722:	f7fc fd55 	bl	80141d0 <UpdateRef>
 8017726:	f240 20d4 	movw	r0, #724	; 0x2d4
 801772a:	2100      	movs	r1, #0
 801772c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017730:	f7fc fd4e 	bl	80141d0 <UpdateRef>
 8017734:	f240 20d8 	movw	r0, #728	; 0x2d8
 8017738:	2100      	movs	r1, #0
 801773a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801773e:	f7fc fd47 	bl	80141d0 <UpdateRef>
 8017742:	f240 20dc 	movw	r0, #732	; 0x2dc
 8017746:	2100      	movs	r1, #0
 8017748:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801774c:	f7fc fd40 	bl	80141d0 <UpdateRef>
 8017750:	f240 20e0 	movw	r0, #736	; 0x2e0
 8017754:	2100      	movs	r1, #0
 8017756:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801775a:	f7fc fd39 	bl	80141d0 <UpdateRef>
 801775e:	f240 20e4 	movw	r0, #740	; 0x2e4
 8017762:	2100      	movs	r1, #0
 8017764:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017768:	f7fc fd32 	bl	80141d0 <UpdateRef>
 801776c:	f240 20e8 	movw	r0, #744	; 0x2e8
 8017770:	2100      	movs	r1, #0
 8017772:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017776:	f7fc fd2b 	bl	80141d0 <UpdateRef>
 801777a:	f240 20ec 	movw	r0, #748	; 0x2ec
 801777e:	2100      	movs	r1, #0
 8017780:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017784:	f7fc fd24 	bl	80141d0 <UpdateRef>
 8017788:	f240 20f0 	movw	r0, #752	; 0x2f0
 801778c:	2100      	movs	r1, #0
 801778e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017792:	f7fc fd1d 	bl	80141d0 <UpdateRef>
 8017796:	f240 20f4 	movw	r0, #756	; 0x2f4
 801779a:	2100      	movs	r1, #0
 801779c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80177a0:	f7fc fd16 	bl	80141d0 <UpdateRef>
 80177a4:	f240 20f8 	movw	r0, #760	; 0x2f8
 80177a8:	2100      	movs	r1, #0
 80177aa:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80177ae:	f7fc fd0f 	bl	80141d0 <UpdateRef>
 80177b2:	f240 20fc 	movw	r0, #764	; 0x2fc
 80177b6:	2100      	movs	r1, #0
 80177b8:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80177bc:	f7fc fd08 	bl	80141d0 <UpdateRef>
 80177c0:	f240 3000 	movw	r0, #768	; 0x300
 80177c4:	2100      	movs	r1, #0
 80177c6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80177ca:	f7fc fd01 	bl	80141d0 <UpdateRef>
 80177ce:	f240 3004 	movw	r0, #772	; 0x304
 80177d2:	2100      	movs	r1, #0
 80177d4:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80177d8:	f7fc fcfa 	bl	80141d0 <UpdateRef>
 80177dc:	f240 3008 	movw	r0, #776	; 0x308
 80177e0:	2100      	movs	r1, #0
 80177e2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80177e6:	f7fc fcf3 	bl	80141d0 <UpdateRef>
 80177ea:	f240 300c 	movw	r0, #780	; 0x30c
 80177ee:	2100      	movs	r1, #0
 80177f0:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80177f4:	f7fc fcec 	bl	80141d0 <UpdateRef>
 80177f8:	f240 3010 	movw	r0, #784	; 0x310
 80177fc:	2100      	movs	r1, #0
 80177fe:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017802:	f7fc fce5 	bl	80141d0 <UpdateRef>
 8017806:	f240 3014 	movw	r0, #788	; 0x314
 801780a:	2100      	movs	r1, #0
 801780c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017810:	f7fc fcde 	bl	80141d0 <UpdateRef>
 8017814:	f240 3018 	movw	r0, #792	; 0x318
 8017818:	2100      	movs	r1, #0
 801781a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801781e:	f7fc fcd7 	bl	80141d0 <UpdateRef>
 8017822:	f240 301c 	movw	r0, #796	; 0x31c
 8017826:	2100      	movs	r1, #0
 8017828:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801782c:	f7fc fcd0 	bl	80141d0 <UpdateRef>
 8017830:	f240 3020 	movw	r0, #800	; 0x320
 8017834:	2100      	movs	r1, #0
 8017836:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801783a:	f7fc fcc9 	bl	80141d0 <UpdateRef>
 801783e:	f240 3024 	movw	r0, #804	; 0x324
 8017842:	2100      	movs	r1, #0
 8017844:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017848:	f7fc fcc2 	bl	80141d0 <UpdateRef>
 801784c:	f240 3028 	movw	r0, #808	; 0x328
 8017850:	2100      	movs	r1, #0
 8017852:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017856:	f7fc fcbb 	bl	80141d0 <UpdateRef>
 801785a:	f240 302c 	movw	r0, #812	; 0x32c
 801785e:	2100      	movs	r1, #0
 8017860:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017864:	f7fc fcb4 	bl	80141d0 <UpdateRef>
 8017868:	f240 3030 	movw	r0, #816	; 0x330
 801786c:	2100      	movs	r1, #0
 801786e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017872:	f7fc fcad 	bl	80141d0 <UpdateRef>
 8017876:	f240 3034 	movw	r0, #820	; 0x334
 801787a:	2100      	movs	r1, #0
 801787c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017880:	f7fc fca6 	bl	80141d0 <UpdateRef>
 8017884:	f240 3038 	movw	r0, #824	; 0x338
 8017888:	2100      	movs	r1, #0
 801788a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801788e:	f7fc fc9f 	bl	80141d0 <UpdateRef>
 8017892:	f240 303c 	movw	r0, #828	; 0x33c
 8017896:	2100      	movs	r1, #0
 8017898:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801789c:	f7fc fc98 	bl	80141d0 <UpdateRef>
 80178a0:	f240 3040 	movw	r0, #832	; 0x340
 80178a4:	2100      	movs	r1, #0
 80178a6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80178aa:	f7fc fc91 	bl	80141d0 <UpdateRef>
 80178ae:	f240 3044 	movw	r0, #836	; 0x344
 80178b2:	2100      	movs	r1, #0
 80178b4:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80178b8:	f7fc fc8a 	bl	80141d0 <UpdateRef>
 80178bc:	f240 3048 	movw	r0, #840	; 0x348
 80178c0:	2100      	movs	r1, #0
 80178c2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80178c6:	f7fc fc83 	bl	80141d0 <UpdateRef>
 80178ca:	f240 304c 	movw	r0, #844	; 0x34c
 80178ce:	2100      	movs	r1, #0
 80178d0:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80178d4:	f7fc fc7c 	bl	80141d0 <UpdateRef>
 80178d8:	f240 3050 	movw	r0, #848	; 0x350
 80178dc:	2100      	movs	r1, #0
 80178de:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80178e2:	f7fc fc75 	bl	80141d0 <UpdateRef>
 80178e6:	f240 3054 	movw	r0, #852	; 0x354
 80178ea:	2100      	movs	r1, #0
 80178ec:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80178f0:	f7fc fc6e 	bl	80141d0 <UpdateRef>
 80178f4:	f240 3058 	movw	r0, #856	; 0x358
 80178f8:	2100      	movs	r1, #0
 80178fa:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80178fe:	f7fc fc67 	bl	80141d0 <UpdateRef>
 8017902:	f240 305c 	movw	r0, #860	; 0x35c
 8017906:	2100      	movs	r1, #0
 8017908:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801790c:	f7fc fc60 	bl	80141d0 <UpdateRef>
 8017910:	f240 3060 	movw	r0, #864	; 0x360
 8017914:	2100      	movs	r1, #0
 8017916:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801791a:	f7fc fc59 	bl	80141d0 <UpdateRef>
 801791e:	f240 3064 	movw	r0, #868	; 0x364
 8017922:	2100      	movs	r1, #0
 8017924:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017928:	f7fc fc52 	bl	80141d0 <UpdateRef>
 801792c:	f240 3068 	movw	r0, #872	; 0x368
 8017930:	2100      	movs	r1, #0
 8017932:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017936:	f7fc fc4b 	bl	80141d0 <UpdateRef>
 801793a:	f240 306c 	movw	r0, #876	; 0x36c
 801793e:	2100      	movs	r1, #0
 8017940:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017944:	f7fc fc44 	bl	80141d0 <UpdateRef>
 8017948:	f240 3070 	movw	r0, #880	; 0x370
 801794c:	2100      	movs	r1, #0
 801794e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017952:	f7fc fc3d 	bl	80141d0 <UpdateRef>
 8017956:	f240 3074 	movw	r0, #884	; 0x374
 801795a:	2100      	movs	r1, #0
 801795c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017960:	f7fc fc36 	bl	80141d0 <UpdateRef>
 8017964:	f240 3078 	movw	r0, #888	; 0x378
 8017968:	2100      	movs	r1, #0
 801796a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801796e:	f7fc fc2f 	bl	80141d0 <UpdateRef>
 8017972:	f240 307c 	movw	r0, #892	; 0x37c
 8017976:	2100      	movs	r1, #0
 8017978:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801797c:	f7fc fc28 	bl	80141d0 <UpdateRef>
 8017980:	f240 3080 	movw	r0, #896	; 0x380
 8017984:	2100      	movs	r1, #0
 8017986:	f2c2 0000 	movt	r0, #8192	; 0x2000
 801798a:	f7fc fc21 	bl	80141d0 <UpdateRef>
 801798e:	f240 3084 	movw	r0, #900	; 0x384
 8017992:	2100      	movs	r1, #0
 8017994:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017998:	f7fc fc1a 	bl	80141d0 <UpdateRef>
 801799c:	f240 3088 	movw	r0, #904	; 0x388
 80179a0:	2100      	movs	r1, #0
 80179a2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80179a6:	f7fc fc13 	bl	80141d0 <UpdateRef>
 80179aa:	f240 308c 	movw	r0, #908	; 0x38c
 80179ae:	2100      	movs	r1, #0
 80179b0:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80179b4:	f7fc fc0c 	bl	80141d0 <UpdateRef>
 80179b8:	f240 3090 	movw	r0, #912	; 0x390
 80179bc:	2100      	movs	r1, #0
 80179be:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80179c2:	f7fc fc05 	bl	80141d0 <UpdateRef>
 80179c6:	f240 3094 	movw	r0, #916	; 0x394
 80179ca:	2100      	movs	r1, #0
 80179cc:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80179d0:	f7fc fbfe 	bl	80141d0 <UpdateRef>
 80179d4:	f240 3098 	movw	r0, #920	; 0x398
 80179d8:	2100      	movs	r1, #0
 80179da:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80179de:	f7fc fbf7 	bl	80141d0 <UpdateRef>
 80179e2:	f240 309c 	movw	r0, #924	; 0x39c
 80179e6:	2100      	movs	r1, #0
 80179e8:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80179ec:	f7fc fbf0 	bl	80141d0 <UpdateRef>
 80179f0:	f240 30a0 	movw	r0, #928	; 0x3a0
 80179f4:	2100      	movs	r1, #0
 80179f6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 80179fa:	f7fc fbe9 	bl	80141d0 <UpdateRef>
 80179fe:	f240 30a4 	movw	r0, #932	; 0x3a4
 8017a02:	2100      	movs	r1, #0
 8017a04:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017a08:	f7fc fbe2 	bl	80141d0 <UpdateRef>
 8017a0c:	f240 30a8 	movw	r0, #936	; 0x3a8
 8017a10:	2100      	movs	r1, #0
 8017a12:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017a16:	f7fc fbdb 	bl	80141d0 <UpdateRef>
 8017a1a:	f240 30ac 	movw	r0, #940	; 0x3ac
 8017a1e:	2100      	movs	r1, #0
 8017a20:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017a24:	f7fc fbd4 	bl	80141d0 <UpdateRef>
 8017a28:	f240 30b0 	movw	r0, #944	; 0x3b0
 8017a2c:	2100      	movs	r1, #0
 8017a2e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017a32:	f7fc fbcd 	bl	80141d0 <UpdateRef>
 8017a36:	f240 30b4 	movw	r0, #948	; 0x3b4
 8017a3a:	2100      	movs	r1, #0
 8017a3c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017a40:	f7fc fbc6 	bl	80141d0 <UpdateRef>
 8017a44:	f240 30b8 	movw	r0, #952	; 0x3b8
 8017a48:	2100      	movs	r1, #0
 8017a4a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017a4e:	f7fc fbbf 	bl	80141d0 <UpdateRef>
 8017a52:	f240 30bc 	movw	r0, #956	; 0x3bc
 8017a56:	2100      	movs	r1, #0
 8017a58:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017a5c:	f7fc fbb8 	bl	80141d0 <UpdateRef>
 8017a60:	f240 30c0 	movw	r0, #960	; 0x3c0
 8017a64:	2100      	movs	r1, #0
 8017a66:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017a6a:	f7fc fbb1 	bl	80141d0 <UpdateRef>
 8017a6e:	f240 30c4 	movw	r0, #964	; 0x3c4
 8017a72:	2100      	movs	r1, #0
 8017a74:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017a78:	f7fc fbaa 	bl	80141d0 <UpdateRef>
 8017a7c:	f240 30c8 	movw	r0, #968	; 0x3c8
 8017a80:	2100      	movs	r1, #0
 8017a82:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017a86:	f7fc fba3 	bl	80141d0 <UpdateRef>
 8017a8a:	f240 30cc 	movw	r0, #972	; 0x3cc
 8017a8e:	2100      	movs	r1, #0
 8017a90:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017a94:	f7fc fb9c 	bl	80141d0 <UpdateRef>
 8017a98:	f240 30d0 	movw	r0, #976	; 0x3d0
 8017a9c:	2100      	movs	r1, #0
 8017a9e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017aa2:	f7fc fb95 	bl	80141d0 <UpdateRef>
 8017aa6:	f240 30d4 	movw	r0, #980	; 0x3d4
 8017aaa:	2100      	movs	r1, #0
 8017aac:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017ab0:	f7fc fb8e 	bl	80141d0 <UpdateRef>
 8017ab4:	f240 30d8 	movw	r0, #984	; 0x3d8
 8017ab8:	2100      	movs	r1, #0
 8017aba:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017abe:	f7fc fb87 	bl	80141d0 <UpdateRef>
 8017ac2:	f240 30dc 	movw	r0, #988	; 0x3dc
 8017ac6:	2100      	movs	r1, #0
 8017ac8:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017acc:	f7fc fb80 	bl	80141d0 <UpdateRef>
 8017ad0:	f240 30e0 	movw	r0, #992	; 0x3e0
 8017ad4:	2100      	movs	r1, #0
 8017ad6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017ada:	f7fc fb79 	bl	80141d0 <UpdateRef>
 8017ade:	f240 30e4 	movw	r0, #996	; 0x3e4
 8017ae2:	2100      	movs	r1, #0
 8017ae4:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017ae8:	f7fc fb72 	bl	80141d0 <UpdateRef>
 8017aec:	f240 30e8 	movw	r0, #1000	; 0x3e8
 8017af0:	2100      	movs	r1, #0
 8017af2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017af6:	f7fc fb6b 	bl	80141d0 <UpdateRef>
 8017afa:	f240 30ec 	movw	r0, #1004	; 0x3ec
 8017afe:	2100      	movs	r1, #0
 8017b00:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017b04:	f7fc fb64 	bl	80141d0 <UpdateRef>
 8017b08:	f240 30f0 	movw	r0, #1008	; 0x3f0
 8017b0c:	2100      	movs	r1, #0
 8017b0e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017b12:	f7fc fb5d 	bl	80141d0 <UpdateRef>
 8017b16:	f240 30f4 	movw	r0, #1012	; 0x3f4
 8017b1a:	2100      	movs	r1, #0
 8017b1c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017b20:	f7fc fb56 	bl	80141d0 <UpdateRef>
 8017b24:	f240 30f8 	movw	r0, #1016	; 0x3f8
 8017b28:	2100      	movs	r1, #0
 8017b2a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017b2e:	f7fc fb4f 	bl	80141d0 <UpdateRef>
 8017b32:	f240 30fc 	movw	r0, #1020	; 0x3fc
 8017b36:	2100      	movs	r1, #0
 8017b38:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017b3c:	f7fc fb48 	bl	80141d0 <UpdateRef>
 8017b40:	f240 4000 	movw	r0, #1024	; 0x400
 8017b44:	2100      	movs	r1, #0
 8017b46:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017b4a:	f7fc fb41 	bl	80141d0 <UpdateRef>
 8017b4e:	f240 4004 	movw	r0, #1028	; 0x404
 8017b52:	2100      	movs	r1, #0
 8017b54:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017b58:	f7fc fb3a 	bl	80141d0 <UpdateRef>
 8017b5c:	f240 4008 	movw	r0, #1032	; 0x408
 8017b60:	2100      	movs	r1, #0
 8017b62:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017b66:	f7fc fb33 	bl	80141d0 <UpdateRef>
 8017b6a:	f240 400c 	movw	r0, #1036	; 0x40c
 8017b6e:	2100      	movs	r1, #0
 8017b70:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017b74:	f7fc fb2c 	bl	80141d0 <UpdateRef>
 8017b78:	f240 4010 	movw	r0, #1040	; 0x410
 8017b7c:	2100      	movs	r1, #0
 8017b7e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017b82:	f7fc fb25 	bl	80141d0 <UpdateRef>
 8017b86:	f240 4014 	movw	r0, #1044	; 0x414
 8017b8a:	2100      	movs	r1, #0
 8017b8c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017b90:	f7fc fb1e 	bl	80141d0 <UpdateRef>
 8017b94:	f240 4018 	movw	r0, #1048	; 0x418
 8017b98:	2100      	movs	r1, #0
 8017b9a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017b9e:	f7fc fb17 	bl	80141d0 <UpdateRef>
 8017ba2:	f240 401c 	movw	r0, #1052	; 0x41c
 8017ba6:	2100      	movs	r1, #0
 8017ba8:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017bac:	f7fc fb10 	bl	80141d0 <UpdateRef>
 8017bb0:	f240 4020 	movw	r0, #1056	; 0x420
 8017bb4:	2100      	movs	r1, #0
 8017bb6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017bba:	f7fc fb09 	bl	80141d0 <UpdateRef>
 8017bbe:	f240 4024 	movw	r0, #1060	; 0x424
 8017bc2:	2100      	movs	r1, #0
 8017bc4:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017bc8:	f7fc fb02 	bl	80141d0 <UpdateRef>
 8017bcc:	f240 4028 	movw	r0, #1064	; 0x428
 8017bd0:	2100      	movs	r1, #0
 8017bd2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017bd6:	f7fc fafb 	bl	80141d0 <UpdateRef>
 8017bda:	f240 402c 	movw	r0, #1068	; 0x42c
 8017bde:	2100      	movs	r1, #0
 8017be0:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017be4:	f7fc faf4 	bl	80141d0 <UpdateRef>
 8017be8:	f240 4030 	movw	r0, #1072	; 0x430
 8017bec:	2100      	movs	r1, #0
 8017bee:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017bf2:	f7fc faed 	bl	80141d0 <UpdateRef>
 8017bf6:	f240 4034 	movw	r0, #1076	; 0x434
 8017bfa:	2100      	movs	r1, #0
 8017bfc:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017c00:	f7fc fae6 	bl	80141d0 <UpdateRef>
 8017c04:	f240 4038 	movw	r0, #1080	; 0x438
 8017c08:	2100      	movs	r1, #0
 8017c0a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017c0e:	f7fc fadf 	bl	80141d0 <UpdateRef>
 8017c12:	f240 403c 	movw	r0, #1084	; 0x43c
 8017c16:	2100      	movs	r1, #0
 8017c18:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017c1c:	f7fc fad8 	bl	80141d0 <UpdateRef>
 8017c20:	f240 4040 	movw	r0, #1088	; 0x440
 8017c24:	2100      	movs	r1, #0
 8017c26:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017c2a:	f7fc fad1 	bl	80141d0 <UpdateRef>
 8017c2e:	f240 4044 	movw	r0, #1092	; 0x444
 8017c32:	2100      	movs	r1, #0
 8017c34:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017c38:	f7fc faca 	bl	80141d0 <UpdateRef>
 8017c3c:	f240 4048 	movw	r0, #1096	; 0x448
 8017c40:	2100      	movs	r1, #0
 8017c42:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017c46:	f7fc fac3 	bl	80141d0 <UpdateRef>
 8017c4a:	f240 404c 	movw	r0, #1100	; 0x44c
 8017c4e:	2100      	movs	r1, #0
 8017c50:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017c54:	f7fc fabc 	bl	80141d0 <UpdateRef>
 8017c58:	f240 4050 	movw	r0, #1104	; 0x450
 8017c5c:	2100      	movs	r1, #0
 8017c5e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017c62:	f7fc fab5 	bl	80141d0 <UpdateRef>
 8017c66:	f240 4054 	movw	r0, #1108	; 0x454
 8017c6a:	2100      	movs	r1, #0
 8017c6c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017c70:	f7fc faae 	bl	80141d0 <UpdateRef>
 8017c74:	f240 4058 	movw	r0, #1112	; 0x458
 8017c78:	2100      	movs	r1, #0
 8017c7a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017c7e:	f7fc faa7 	bl	80141d0 <UpdateRef>
 8017c82:	f240 405c 	movw	r0, #1116	; 0x45c
 8017c86:	2100      	movs	r1, #0
 8017c88:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017c8c:	f7fc faa0 	bl	80141d0 <UpdateRef>
 8017c90:	f240 4060 	movw	r0, #1120	; 0x460
 8017c94:	2100      	movs	r1, #0
 8017c96:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017c9a:	f7fc fa99 	bl	80141d0 <UpdateRef>
 8017c9e:	f240 4064 	movw	r0, #1124	; 0x464
 8017ca2:	2100      	movs	r1, #0
 8017ca4:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017ca8:	f7fc fa92 	bl	80141d0 <UpdateRef>
 8017cac:	f240 4068 	movw	r0, #1128	; 0x468
 8017cb0:	2100      	movs	r1, #0
 8017cb2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017cb6:	f7fc fa8b 	bl	80141d0 <UpdateRef>
 8017cba:	f240 406c 	movw	r0, #1132	; 0x46c
 8017cbe:	2100      	movs	r1, #0
 8017cc0:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017cc4:	f7fc fa84 	bl	80141d0 <UpdateRef>
 8017cc8:	f240 4070 	movw	r0, #1136	; 0x470
 8017ccc:	2100      	movs	r1, #0
 8017cce:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017cd2:	f7fc fa7d 	bl	80141d0 <UpdateRef>
 8017cd6:	f240 4074 	movw	r0, #1140	; 0x474
 8017cda:	2100      	movs	r1, #0
 8017cdc:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017ce0:	f7fc fa76 	bl	80141d0 <UpdateRef>
 8017ce4:	f240 4078 	movw	r0, #1144	; 0x478
 8017ce8:	2100      	movs	r1, #0
 8017cea:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017cee:	f7fc fa6f 	bl	80141d0 <UpdateRef>
 8017cf2:	f240 407c 	movw	r0, #1148	; 0x47c
 8017cf6:	2100      	movs	r1, #0
 8017cf8:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017cfc:	f7fc fa68 	bl	80141d0 <UpdateRef>
 8017d00:	f240 4080 	movw	r0, #1152	; 0x480
 8017d04:	2100      	movs	r1, #0
 8017d06:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017d0a:	f7fc fa61 	bl	80141d0 <UpdateRef>
 8017d0e:	f240 4084 	movw	r0, #1156	; 0x484
 8017d12:	2100      	movs	r1, #0
 8017d14:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017d18:	f7fc fa5a 	bl	80141d0 <UpdateRef>
 8017d1c:	f240 4088 	movw	r0, #1160	; 0x488
 8017d20:	2100      	movs	r1, #0
 8017d22:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017d26:	f7fc fa53 	bl	80141d0 <UpdateRef>
 8017d2a:	f240 408c 	movw	r0, #1164	; 0x48c
 8017d2e:	2100      	movs	r1, #0
 8017d30:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017d34:	f7fc fa4c 	bl	80141d0 <UpdateRef>
 8017d38:	f240 4090 	movw	r0, #1168	; 0x490
 8017d3c:	2100      	movs	r1, #0
 8017d3e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017d42:	f7fc fa45 	bl	80141d0 <UpdateRef>
 8017d46:	f240 4094 	movw	r0, #1172	; 0x494
 8017d4a:	2100      	movs	r1, #0
 8017d4c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017d50:	f7fc fa3e 	bl	80141d0 <UpdateRef>
 8017d54:	f240 4098 	movw	r0, #1176	; 0x498
 8017d58:	2100      	movs	r1, #0
 8017d5a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017d5e:	f7fc fa37 	bl	80141d0 <UpdateRef>
 8017d62:	f240 409c 	movw	r0, #1180	; 0x49c
 8017d66:	2100      	movs	r1, #0
 8017d68:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017d6c:	f7fc fa30 	bl	80141d0 <UpdateRef>
 8017d70:	f240 40a0 	movw	r0, #1184	; 0x4a0
 8017d74:	2100      	movs	r1, #0
 8017d76:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017d7a:	f7fc fa29 	bl	80141d0 <UpdateRef>
 8017d7e:	f240 40a4 	movw	r0, #1188	; 0x4a4
 8017d82:	2100      	movs	r1, #0
 8017d84:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017d88:	f7fc fa22 	bl	80141d0 <UpdateRef>
 8017d8c:	f240 40a8 	movw	r0, #1192	; 0x4a8
 8017d90:	2100      	movs	r1, #0
 8017d92:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017d96:	f7fc fa1b 	bl	80141d0 <UpdateRef>
 8017d9a:	f240 40ac 	movw	r0, #1196	; 0x4ac
 8017d9e:	2100      	movs	r1, #0
 8017da0:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017da4:	f7fc fa14 	bl	80141d0 <UpdateRef>
 8017da8:	f240 40b0 	movw	r0, #1200	; 0x4b0
 8017dac:	2100      	movs	r1, #0
 8017dae:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017db2:	f7fc fa0d 	bl	80141d0 <UpdateRef>
 8017db6:	f240 40b4 	movw	r0, #1204	; 0x4b4
 8017dba:	2100      	movs	r1, #0
 8017dbc:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017dc0:	f7fc fa06 	bl	80141d0 <UpdateRef>
 8017dc4:	f240 40b8 	movw	r0, #1208	; 0x4b8
 8017dc8:	2100      	movs	r1, #0
 8017dca:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017dce:	f7fc f9ff 	bl	80141d0 <UpdateRef>
 8017dd2:	f240 40bc 	movw	r0, #1212	; 0x4bc
 8017dd6:	2100      	movs	r1, #0
 8017dd8:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017ddc:	f7fc f9f8 	bl	80141d0 <UpdateRef>
 8017de0:	f240 40c0 	movw	r0, #1216	; 0x4c0
 8017de4:	2100      	movs	r1, #0
 8017de6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017dea:	f7fc f9f1 	bl	80141d0 <UpdateRef>
 8017dee:	f240 40c4 	movw	r0, #1220	; 0x4c4
 8017df2:	2100      	movs	r1, #0
 8017df4:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017df8:	f7fc f9ea 	bl	80141d0 <UpdateRef>
 8017dfc:	f240 40c8 	movw	r0, #1224	; 0x4c8
 8017e00:	2100      	movs	r1, #0
 8017e02:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017e06:	f7fc f9e3 	bl	80141d0 <UpdateRef>
 8017e0a:	f240 40cc 	movw	r0, #1228	; 0x4cc
 8017e0e:	2100      	movs	r1, #0
 8017e10:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017e14:	f7fc f9dc 	bl	80141d0 <UpdateRef>
 8017e18:	f240 40d0 	movw	r0, #1232	; 0x4d0
 8017e1c:	2100      	movs	r1, #0
 8017e1e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017e22:	f7fc f9d5 	bl	80141d0 <UpdateRef>
 8017e26:	f240 40d4 	movw	r0, #1236	; 0x4d4
 8017e2a:	2100      	movs	r1, #0
 8017e2c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017e30:	f7fc f9ce 	bl	80141d0 <UpdateRef>
 8017e34:	f240 40d8 	movw	r0, #1240	; 0x4d8
 8017e38:	2100      	movs	r1, #0
 8017e3a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017e3e:	f7fc f9c7 	bl	80141d0 <UpdateRef>
 8017e42:	f240 40dc 	movw	r0, #1244	; 0x4dc
 8017e46:	2100      	movs	r1, #0
 8017e48:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017e4c:	f7fc f9c0 	bl	80141d0 <UpdateRef>
 8017e50:	f240 40e0 	movw	r0, #1248	; 0x4e0
 8017e54:	2100      	movs	r1, #0
 8017e56:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017e5a:	f7fc f9b9 	bl	80141d0 <UpdateRef>
 8017e5e:	f240 40e4 	movw	r0, #1252	; 0x4e4
 8017e62:	2100      	movs	r1, #0
 8017e64:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017e68:	f7fc f9b2 	bl	80141d0 <UpdateRef>
 8017e6c:	f240 40e8 	movw	r0, #1256	; 0x4e8
 8017e70:	2100      	movs	r1, #0
 8017e72:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017e76:	f7fc f9ab 	bl	80141d0 <UpdateRef>
 8017e7a:	f240 40ec 	movw	r0, #1260	; 0x4ec
 8017e7e:	2100      	movs	r1, #0
 8017e80:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017e84:	f7fc f9a4 	bl	80141d0 <UpdateRef>
 8017e88:	f240 40f0 	movw	r0, #1264	; 0x4f0
 8017e8c:	2100      	movs	r1, #0
 8017e8e:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017e92:	f7fc f99d 	bl	80141d0 <UpdateRef>
 8017e96:	f240 40f4 	movw	r0, #1268	; 0x4f4
 8017e9a:	2100      	movs	r1, #0
 8017e9c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017ea0:	f7fc f996 	bl	80141d0 <UpdateRef>
 8017ea4:	f240 40f8 	movw	r0, #1272	; 0x4f8
 8017ea8:	2100      	movs	r1, #0
 8017eaa:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017eae:	f7fc f98f 	bl	80141d0 <UpdateRef>
 8017eb2:	f240 0018 	movw	r0, #24
 8017eb6:	2100      	movs	r1, #0
 8017eb8:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017ebc:	f7fc f988 	bl	80141d0 <UpdateRef>
 8017ec0:	f240 40fc 	movw	r0, #1276	; 0x4fc
 8017ec4:	2100      	movs	r1, #0
 8017ec6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017eca:	f7fc f981 	bl	80141d0 <UpdateRef>
 8017ece:	f240 5000 	movw	r0, #1280	; 0x500
 8017ed2:	2100      	movs	r1, #0
 8017ed4:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017ed8:	f7fc f97a 	bl	80141d0 <UpdateRef>
 8017edc:	f240 5004 	movw	r0, #1284	; 0x504
 8017ee0:	2100      	movs	r1, #0
 8017ee2:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017ee6:	f7fc f973 	bl	80141d0 <UpdateRef>
 8017eea:	f240 5008 	movw	r0, #1288	; 0x508
 8017eee:	2100      	movs	r1, #0
 8017ef0:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017ef4:	f7fc f96c 	bl	80141d0 <UpdateRef>
 8017ef8:	f240 500c 	movw	r0, #1292	; 0x50c
 8017efc:	2100      	movs	r1, #0
 8017efe:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017f02:	f7fc f965 	bl	80141d0 <UpdateRef>
 8017f06:	f240 5010 	movw	r0, #1296	; 0x510
 8017f0a:	2100      	movs	r1, #0
 8017f0c:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017f10:	f7fc f95e 	bl	80141d0 <UpdateRef>
 8017f14:	f240 5014 	movw	r0, #1300	; 0x514
 8017f18:	2100      	movs	r1, #0
 8017f1a:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8017f1e:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8017f22:	f7fc b955 	b.w	80141d0 <UpdateRef>

08017f26 <platform_zephyr_stm32f4_disco_kniBridge218>:
 8017f26:	b580      	push	{r7, lr}
 8017f28:	466f      	mov	r7, sp
 8017f2a:	b082      	sub	sp, #8
 8017f2c:	9001      	str	r0, [sp, #4]
 8017f2e:	9801      	ldr	r0, [sp, #4]
 8017f30:	f000 f802 	bl	8017f38 <k_sleep>
 8017f34:	b002      	add	sp, #8
 8017f36:	bd80      	pop	{r7, pc}

08017f38 <k_sleep>:
 8017f38:	b580      	push	{r7, lr}
 8017f3a:	466f      	mov	r7, sp
 8017f3c:	b082      	sub	sp, #8
 8017f3e:	9001      	str	r0, [sp, #4]
 8017f40:	9801      	ldr	r0, [sp, #4]
 8017f42:	f001 ff73 	bl	8019e2c <_impl_k_sleep>
 8017f46:	b002      	add	sp, #8
 8017f48:	bd80      	pop	{r7, pc}

08017f4a <platform_zephyr_stm32f4_disco_kniBridge382>:
 8017f4a:	b580      	push	{r7, lr}
 8017f4c:	466f      	mov	r7, sp
 8017f4e:	b082      	sub	sp, #8
 8017f50:	9001      	str	r0, [sp, #4]
 8017f52:	9801      	ldr	r0, [sp, #4]
 8017f54:	f001 fd5c 	bl	8019a10 <device_get_binding>
 8017f58:	b002      	add	sp, #8
 8017f5a:	bd80      	pop	{r7, pc}

08017f5c <gpio_config>:
 8017f5c:	b580      	push	{r7, lr}
 8017f5e:	466f      	mov	r7, sp
 8017f60:	b084      	sub	sp, #16
 8017f62:	9003      	str	r0, [sp, #12]
 8017f64:	9102      	str	r1, [sp, #8]
 8017f66:	9201      	str	r2, [sp, #4]
 8017f68:	9300      	str	r3, [sp, #0]
 8017f6a:	9803      	ldr	r0, [sp, #12]
 8017f6c:	9902      	ldr	r1, [sp, #8]
 8017f6e:	9a01      	ldr	r2, [sp, #4]
 8017f70:	9b00      	ldr	r3, [sp, #0]
 8017f72:	f000 f802 	bl	8017f7a <_impl_gpio_config>
 8017f76:	b004      	add	sp, #16
 8017f78:	bd80      	pop	{r7, pc}

08017f7a <_impl_gpio_config>:
 8017f7a:	b580      	push	{r7, lr}
 8017f7c:	466f      	mov	r7, sp
 8017f7e:	b086      	sub	sp, #24
 8017f80:	9005      	str	r0, [sp, #20]
 8017f82:	9104      	str	r1, [sp, #16]
 8017f84:	9203      	str	r2, [sp, #12]
 8017f86:	9302      	str	r3, [sp, #8]
 8017f88:	9805      	ldr	r0, [sp, #20]
 8017f8a:	6841      	ldr	r1, [r0, #4]
 8017f8c:	9101      	str	r1, [sp, #4]
 8017f8e:	9901      	ldr	r1, [sp, #4]
 8017f90:	f8d1 c000 	ldr.w	ip, [r1]
 8017f94:	9904      	ldr	r1, [sp, #16]
 8017f96:	9a03      	ldr	r2, [sp, #12]
 8017f98:	9b02      	ldr	r3, [sp, #8]
 8017f9a:	47e0      	blx	ip
 8017f9c:	b006      	add	sp, #24
 8017f9e:	bd80      	pop	{r7, pc}

08017fa0 <gpio_write>:
 8017fa0:	b580      	push	{r7, lr}
 8017fa2:	466f      	mov	r7, sp
 8017fa4:	b084      	sub	sp, #16
 8017fa6:	9003      	str	r0, [sp, #12]
 8017fa8:	9102      	str	r1, [sp, #8]
 8017faa:	9201      	str	r2, [sp, #4]
 8017fac:	9300      	str	r3, [sp, #0]
 8017fae:	9803      	ldr	r0, [sp, #12]
 8017fb0:	9902      	ldr	r1, [sp, #8]
 8017fb2:	9a01      	ldr	r2, [sp, #4]
 8017fb4:	9b00      	ldr	r3, [sp, #0]
 8017fb6:	f000 f802 	bl	8017fbe <_impl_gpio_write>
 8017fba:	b004      	add	sp, #16
 8017fbc:	bd80      	pop	{r7, pc}

08017fbe <_impl_gpio_write>:
 8017fbe:	b580      	push	{r7, lr}
 8017fc0:	466f      	mov	r7, sp
 8017fc2:	b086      	sub	sp, #24
 8017fc4:	9005      	str	r0, [sp, #20]
 8017fc6:	9104      	str	r1, [sp, #16]
 8017fc8:	9203      	str	r2, [sp, #12]
 8017fca:	9302      	str	r3, [sp, #8]
 8017fcc:	9805      	ldr	r0, [sp, #20]
 8017fce:	6841      	ldr	r1, [r0, #4]
 8017fd0:	9101      	str	r1, [sp, #4]
 8017fd2:	9901      	ldr	r1, [sp, #4]
 8017fd4:	f8d1 c004 	ldr.w	ip, [r1, #4]
 8017fd8:	9904      	ldr	r1, [sp, #16]
 8017fda:	9a03      	ldr	r2, [sp, #12]
 8017fdc:	9b02      	ldr	r3, [sp, #8]
 8017fde:	47e0      	blx	ip
 8017fe0:	b006      	add	sp, #24
 8017fe2:	bd80      	pop	{r7, pc}

08017fe4 <platform_zephyr_stm32f4_disco_kniBridge1930>:
 8017fe4:	b580      	push	{r7, lr}
 8017fe6:	466f      	mov	r7, sp
 8017fe8:	b084      	sub	sp, #16
 8017fea:	9003      	str	r0, [sp, #12]
 8017fec:	9102      	str	r1, [sp, #8]
 8017fee:	9201      	str	r2, [sp, #4]
 8017ff0:	9803      	ldr	r0, [sp, #12]
 8017ff2:	9902      	ldr	r1, [sp, #8]
 8017ff4:	9a01      	ldr	r2, [sp, #4]
 8017ff6:	f000 f802 	bl	8017ffe <gpio_pin_configure>
 8017ffa:	b004      	add	sp, #16
 8017ffc:	bd80      	pop	{r7, pc}

08017ffe <gpio_pin_configure>:
 8017ffe:	b580      	push	{r7, lr}
 8018000:	466f      	mov	r7, sp
 8018002:	b084      	sub	sp, #16
 8018004:	9003      	str	r0, [sp, #12]
 8018006:	9102      	str	r1, [sp, #8]
 8018008:	9201      	str	r2, [sp, #4]
 801800a:	9803      	ldr	r0, [sp, #12]
 801800c:	9a02      	ldr	r2, [sp, #8]
 801800e:	9b01      	ldr	r3, [sp, #4]
 8018010:	2100      	movs	r1, #0
 8018012:	f7ff ffa3 	bl	8017f5c <gpio_config>
 8018016:	b004      	add	sp, #16
 8018018:	bd80      	pop	{r7, pc}

0801801a <platform_zephyr_stm32f4_disco_kniBridge1931>:
 801801a:	b580      	push	{r7, lr}
 801801c:	466f      	mov	r7, sp
 801801e:	b084      	sub	sp, #16
 8018020:	9003      	str	r0, [sp, #12]
 8018022:	9102      	str	r1, [sp, #8]
 8018024:	9201      	str	r2, [sp, #4]
 8018026:	9803      	ldr	r0, [sp, #12]
 8018028:	9902      	ldr	r1, [sp, #8]
 801802a:	9a01      	ldr	r2, [sp, #4]
 801802c:	f000 f802 	bl	8018034 <gpio_pin_write>
 8018030:	b004      	add	sp, #16
 8018032:	bd80      	pop	{r7, pc}

08018034 <gpio_pin_write>:
 8018034:	b580      	push	{r7, lr}
 8018036:	466f      	mov	r7, sp
 8018038:	b084      	sub	sp, #16
 801803a:	9003      	str	r0, [sp, #12]
 801803c:	9102      	str	r1, [sp, #8]
 801803e:	9201      	str	r2, [sp, #4]
 8018040:	9803      	ldr	r0, [sp, #12]
 8018042:	9a02      	ldr	r2, [sp, #8]
 8018044:	9b01      	ldr	r3, [sp, #4]
 8018046:	2100      	movs	r1, #0
 8018048:	f7ff ffaa 	bl	8017fa0 <gpio_write>
 801804c:	b004      	add	sp, #16
 801804e:	bd80      	pop	{r7, pc}

08018050 <st_stm32f4_init>:
		:
		: "memory");
#elif defined(CONFIG_ARMV7_M_ARMV8_M_MAINLINE)
	unsigned int tmp;

	__asm__ volatile(
 8018050:	f04f 0310 	mov.w	r3, #16
 8018054:	f3ef 8111 	mrs	r1, BASEPRI
 8018058:	f383 8811 	msr	BASEPRI, r3
static ALWAYS_INLINE void _ClearFaults(void)
{
#if defined(CONFIG_ARMV6_M_ARMV8_M_BASELINE)
#elif defined(CONFIG_ARMV7_M_ARMV8_M_MAINLINE)
	/* Reset all faults */
	SCB->CFSR = SCB_CFSR_USGFAULTSR_Msk |
 801805c:	4b05      	ldr	r3, [pc, #20]	; (8018074 <st_stm32f4_init+0x24>)
 801805e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8018062:	629a      	str	r2, [r3, #40]	; 0x28
		    SCB_CFSR_MEMFAULTSR_Msk |
		    SCB_CFSR_BUSFAULTSR_Msk;

	/* Clear all Hard Faults - HFSR is write-one-to-clear */
	SCB->HFSR = 0xffffffff;
 8018064:	62da      	str	r2, [r3, #44]	; 0x2c
	if (key) {
		return;
	}
	__asm__ volatile("cpsie i" : : : "memory");
#elif defined(CONFIG_ARMV7_M_ARMV8_M_MAINLINE)
	__asm__ volatile("msr BASEPRI, %0" :  : "r"(key) : "memory");
 8018066:	f381 8811 	msr	BASEPRI, r1

	irq_unlock(key);

	/* Update CMSIS SystemCoreClock variable (HCLK) */
	/* At reset, system core clock is set to 16 MHz from HSI */
	SystemCoreClock = 16000000;
 801806a:	4b03      	ldr	r3, [pc, #12]	; (8018078 <st_stm32f4_init+0x28>)
 801806c:	4a03      	ldr	r2, [pc, #12]	; (801807c <st_stm32f4_init+0x2c>)
 801806e:	601a      	str	r2, [r3, #0]

	return 0;
}
 8018070:	2000      	movs	r0, #0
 8018072:	4770      	bx	lr
 8018074:	e000ed00 	.word	0xe000ed00
 8018078:	20003348 	.word	0x20003348
 801807c:	00f42400 	.word	0x00f42400

08018080 <stm32_gpio_flags_to_conf>:
#include <gpio/gpio_stm32.h>


int stm32_gpio_flags_to_conf(int flags, int *pincfg)
{
	int direction = flags & GPIO_DIR_MASK;
 8018080:	f000 0301 	and.w	r3, r0, #1
	int pud = flags & GPIO_PUD_MASK;

	if (!pincfg) {
 8018084:	b1b1      	cbz	r1, 80180b4 <stm32_gpio_flags_to_conf+0x34>
		return -EINVAL;
	}

	if (direction == GPIO_DIR_OUT) {
 8018086:	b123      	cbz	r3, 8018092 <stm32_gpio_flags_to_conf+0x12>
		*pincfg = STM32_MODER_OUTPUT_MODE;
 8018088:	2310      	movs	r3, #16
 801808a:	600b      	str	r3, [r1, #0]
			/* floating */
			*pincfg = *pincfg | STM32_PUPDR_NO_PULL;
		}
	}

	return 0;
 801808c:	2300      	movs	r3, #0
}
 801808e:	4618      	mov	r0, r3
 8018090:	4770      	bx	lr
	int pud = flags & GPIO_PUD_MASK;
 8018092:	f400 7040 	and.w	r0, r0, #768	; 0x300
		if (pud == GPIO_PUD_PULL_UP) {
 8018096:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 801809a:	d103      	bne.n	80180a4 <stm32_gpio_flags_to_conf+0x24>
			*pincfg = *pincfg | STM32_PUPDR_PULL_UP;
 801809c:	f44f 7200 	mov.w	r2, #512	; 0x200
			*pincfg = *pincfg | STM32_PUPDR_PULL_DOWN;
 80180a0:	600a      	str	r2, [r1, #0]
 80180a2:	e7f4      	b.n	801808e <stm32_gpio_flags_to_conf+0xe>
		} else if (pud == GPIO_PUD_PULL_DOWN) {
 80180a4:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 80180a8:	d001      	beq.n	80180ae <stm32_gpio_flags_to_conf+0x2e>
		*pincfg = STM32_MODER_INPUT_MODE;
 80180aa:	600b      	str	r3, [r1, #0]
 80180ac:	e7ef      	b.n	801808e <stm32_gpio_flags_to_conf+0xe>
			*pincfg = *pincfg | STM32_PUPDR_PULL_DOWN;
 80180ae:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80180b2:	e7f5      	b.n	80180a0 <stm32_gpio_flags_to_conf+0x20>
		return -EINVAL;
 80180b4:	f06f 0315 	mvn.w	r3, #21
 80180b8:	e7e9      	b.n	801808e <stm32_gpio_flags_to_conf+0xe>

080180ba <stm32_gpio_configure>:

int stm32_gpio_configure(u32_t *base_addr, int pin, int conf, int altf)
{
 80180ba:	b5f0      	push	{r4, r5, r6, r7, lr}
	volatile struct stm32f4x_gpio *gpio =
		(struct stm32f4x_gpio *)(base_addr);
	unsigned int mode, otype, ospeed, pupd;
	unsigned int pin_shift = pin << 1;
	unsigned int afr_bank = pin / 8;
	unsigned int afr_shift = (pin % 8) << 2;
 80180bc:	424c      	negs	r4, r1
 80180be:	f004 0407 	and.w	r4, r4, #7
	unsigned int pin_shift = pin << 1;
 80180c2:	ea4f 0741 	mov.w	r7, r1, lsl #1
	unsigned int afr_shift = (pin % 8) << 2;
 80180c6:	f001 0507 	and.w	r5, r1, #7
 80180ca:	bf58      	it	pl
 80180cc:	4265      	negpl	r5, r4
	mode = (conf >> STM32_MODER_SHIFT) & STM32_MODER_MASK;
	otype = (conf >> STM32_OTYPER_SHIFT) & STM32_OTYPER_MASK;
	ospeed = (conf >> STM32_OSPEEDR_SHIFT) & STM32_OSPEEDR_MASK;
	pupd = (conf >> STM32_PUPDR_SHIFT) & STM32_PUPDR_MASK;

	scratch = gpio->mode & ~(STM32_MODER_MASK << pin_shift);
 80180ce:	2403      	movs	r4, #3
 80180d0:	f8d0 c000 	ldr.w	ip, [r0]
 80180d4:	40bc      	lsls	r4, r7
 80180d6:	43e4      	mvns	r4, r4
	mode = (conf >> STM32_MODER_SHIFT) & STM32_MODER_MASK;
 80180d8:	f3c2 1601 	ubfx	r6, r2, #4, #2
	scratch = gpio->mode & ~(STM32_MODER_MASK << pin_shift);
 80180dc:	ea0c 0c04 	and.w	ip, ip, r4
	gpio->mode = scratch | (mode << pin_shift);
 80180e0:	40be      	lsls	r6, r7
 80180e2:	ea46 060c 	orr.w	r6, r6, ip
 80180e6:	6006      	str	r6, [r0, #0]

	scratch = gpio->ospeed & ~(STM32_OSPEEDR_MASK << pin_shift);
 80180e8:	f8d0 c008 	ldr.w	ip, [r0, #8]
	ospeed = (conf >> STM32_OSPEEDR_SHIFT) & STM32_OSPEEDR_MASK;
 80180ec:	f3c2 16c1 	ubfx	r6, r2, #7, #2
	scratch = gpio->ospeed & ~(STM32_OSPEEDR_MASK << pin_shift);
 80180f0:	ea04 0c0c 	and.w	ip, r4, ip
	gpio->ospeed = scratch | (ospeed << pin_shift);
 80180f4:	40be      	lsls	r6, r7
 80180f6:	ea46 060c 	orr.w	r6, r6, ip
 80180fa:	6086      	str	r6, [r0, #8]

	scratch = gpio->otype & ~(STM32_OTYPER_MASK << pin);
 80180fc:	f8d0 c004 	ldr.w	ip, [r0, #4]
 8018100:	f04f 0e01 	mov.w	lr, #1
 8018104:	fa0e fe01 	lsl.w	lr, lr, r1
	otype = (conf >> STM32_OTYPER_SHIFT) & STM32_OTYPER_MASK;
 8018108:	f3c2 1680 	ubfx	r6, r2, #6, #1
	gpio->otype = scratch | (otype << pin);
 801810c:	408e      	lsls	r6, r1
	scratch = gpio->otype & ~(STM32_OTYPER_MASK << pin);
 801810e:	ea2c 0c0e 	bic.w	ip, ip, lr
	gpio->otype = scratch | (otype << pin);
 8018112:	ea46 060c 	orr.w	r6, r6, ip
 8018116:	6046      	str	r6, [r0, #4]

	scratch = gpio->pupdr & ~(STM32_PUPDR_MASK << pin_shift);
 8018118:	68c6      	ldr	r6, [r0, #12]
	pupd = (conf >> STM32_PUPDR_SHIFT) & STM32_PUPDR_MASK;
 801811a:	f3c2 2241 	ubfx	r2, r2, #9, #2
	gpio->pupdr = scratch | (pupd << pin_shift);
 801811e:	40ba      	lsls	r2, r7
	scratch = gpio->pupdr & ~(STM32_PUPDR_MASK << pin_shift);
 8018120:	4034      	ands	r4, r6
	gpio->pupdr = scratch | (pupd << pin_shift);
 8018122:	4322      	orrs	r2, r4
 8018124:	60c2      	str	r2, [r0, #12]
	unsigned int afr_bank = pin / 8;
 8018126:	2208      	movs	r2, #8
 8018128:	fb91 f1f2 	sdiv	r1, r1, r2
 801812c:	eb00 0081 	add.w	r0, r0, r1, lsl #2
	unsigned int afr_shift = (pin % 8) << 2;
 8018130:	00ad      	lsls	r5, r5, #2

	scratch = gpio->afr[afr_bank] & ~(STM32_AFR_MASK << afr_shift);
 8018132:	6a02      	ldr	r2, [r0, #32]
 8018134:	210f      	movs	r1, #15
 8018136:	40a9      	lsls	r1, r5
 8018138:	ea22 0201 	bic.w	r2, r2, r1
	gpio->afr[afr_bank] = scratch | (altf << afr_shift);
 801813c:	40ab      	lsls	r3, r5
 801813e:	431a      	orrs	r2, r3
 8018140:	6202      	str	r2, [r0, #32]

	return 0;
}
 8018142:	2000      	movs	r0, #0
 8018144:	bdf0      	pop	{r4, r5, r6, r7, pc}

08018146 <stm32_gpio_set>:

int stm32_gpio_set(u32_t *base, int pin, int value)
{
 8018146:	f001 010f 	and.w	r1, r1, #15
 801814a:	2301      	movs	r3, #1
	struct stm32f4x_gpio *gpio = (struct stm32f4x_gpio *)base;

	if (value) {
 801814c:	b11a      	cbz	r2, 8018156 <stm32_gpio_set+0x10>
		/* atomic set */
		gpio->bsr = (1 << (pin & 0x0f));
	} else {
		/* atomic reset */
		gpio->bsr = (1 << ((pin & 0x0f) + 0x10));
 801814e:	408b      	lsls	r3, r1
 8018150:	6183      	str	r3, [r0, #24]
	}

	return 0;
}
 8018152:	2000      	movs	r0, #0
 8018154:	4770      	bx	lr
		gpio->bsr = (1 << ((pin & 0x0f) + 0x10));
 8018156:	3110      	adds	r1, #16
 8018158:	e7f9      	b.n	801814e <stm32_gpio_set+0x8>

0801815a <stm32_gpio_get>:

int stm32_gpio_get(u32_t *base, int pin)
{
	struct stm32f4x_gpio *gpio = (struct stm32f4x_gpio *)base;

	return (gpio->idr >> pin) & 0x1;
 801815a:	6900      	ldr	r0, [r0, #16]
 801815c:	40c8      	lsrs	r0, r1
}
 801815e:	f000 0001 	and.w	r0, r0, #1
 8018162:	4770      	bx	lr

08018164 <stm32_gpio_enable_int>:

int stm32_gpio_enable_int(int port, int pin)
{
 8018164:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8018166:	4605      	mov	r5, r0
	volatile struct stm32f4x_syscfg *syscfg =
		(struct stm32f4x_syscfg *)SYSCFG_BASE;
	volatile union syscfg_exticr *exticr;
	struct device *clk = device_get_binding(STM32_CLOCK_CONTROL_NAME);
 8018168:	481b      	ldr	r0, [pc, #108]	; (80181d8 <stm32_gpio_enable_int+0x74>)
{
 801816a:	460c      	mov	r4, r1
	struct device *clk = device_get_binding(STM32_CLOCK_CONTROL_NAME);
 801816c:	f001 fc50 	bl	8019a10 <device_get_binding>
	struct stm32_pclken pclken = {
 8018170:	491a      	ldr	r1, [pc, #104]	; (80181dc <stm32_gpio_enable_int+0x78>)
	struct device *clk = device_get_binding(STM32_CLOCK_CONTROL_NAME);
 8018172:	4602      	mov	r2, r0
	struct stm32_pclken pclken = {
 8018174:	c903      	ldmia	r1, {r0, r1}
 8018176:	466b      	mov	r3, sp
 8018178:	e883 0003 	stmia.w	r3, {r0, r1}
static inline int clock_control_on(struct device *dev,
				   clock_control_subsys_t sys)
{
	const struct clock_control_driver_api *api = dev->driver_api;

	return api->on(dev, sys);
 801817c:	6851      	ldr	r1, [r2, #4]
 801817e:	4610      	mov	r0, r2
 8018180:	680e      	ldr	r6, [r1, #0]
 8018182:	4619      	mov	r1, r3
 8018184:	47b0      	blx	r6
	int shift = 0;

	/* Enable SYSCFG clock */
	clock_control_on(clk, (clock_control_subsys_t *) &pclken);

	if (pin <= 3) {
 8018186:	2c03      	cmp	r4, #3
 8018188:	dc16      	bgt.n	80181b8 <stm32_gpio_enable_int+0x54>
		exticr = &syscfg->exticr1;
 801818a:	4b15      	ldr	r3, [pc, #84]	; (80181e0 <stm32_gpio_enable_int+0x7c>)
		exticr = &syscfg->exticr4;
	} else {
		return -EINVAL;
	}

	shift = 4 * (pin % 4);
 801818c:	4262      	negs	r2, r4
 801818e:	f002 0203 	and.w	r2, r2, #3
 8018192:	f004 0403 	and.w	r4, r4, #3
 8018196:	bf58      	it	pl
 8018198:	4254      	negpl	r4, r2
 801819a:	00a4      	lsls	r4, r4, #2

	exticr->val &= ~(0xf << shift);
 801819c:	681a      	ldr	r2, [r3, #0]
 801819e:	210f      	movs	r1, #15
 80181a0:	40a1      	lsls	r1, r4
 80181a2:	ea22 0201 	bic.w	r2, r2, r1
 80181a6:	601a      	str	r2, [r3, #0]
	exticr->val |= port << shift;
 80181a8:	681a      	ldr	r2, [r3, #0]
 80181aa:	fa05 f404 	lsl.w	r4, r5, r4
 80181ae:	4314      	orrs	r4, r2
 80181b0:	601c      	str	r4, [r3, #0]

	return 0;
 80181b2:	2000      	movs	r0, #0
}
 80181b4:	b002      	add	sp, #8
 80181b6:	bd70      	pop	{r4, r5, r6, pc}
	} else if (pin <= 7) {
 80181b8:	2c07      	cmp	r4, #7
 80181ba:	dc01      	bgt.n	80181c0 <stm32_gpio_enable_int+0x5c>
		exticr = &syscfg->exticr2;
 80181bc:	4b09      	ldr	r3, [pc, #36]	; (80181e4 <stm32_gpio_enable_int+0x80>)
 80181be:	e7e5      	b.n	801818c <stm32_gpio_enable_int+0x28>
	} else if (pin <= 11) {
 80181c0:	2c0b      	cmp	r4, #11
 80181c2:	dc01      	bgt.n	80181c8 <stm32_gpio_enable_int+0x64>
		exticr = &syscfg->exticr3;
 80181c4:	4b08      	ldr	r3, [pc, #32]	; (80181e8 <stm32_gpio_enable_int+0x84>)
 80181c6:	e7e1      	b.n	801818c <stm32_gpio_enable_int+0x28>
	} else if (pin <= 15) {
 80181c8:	2c0f      	cmp	r4, #15
 80181ca:	dc01      	bgt.n	80181d0 <stm32_gpio_enable_int+0x6c>
		exticr = &syscfg->exticr4;
 80181cc:	4b07      	ldr	r3, [pc, #28]	; (80181ec <stm32_gpio_enable_int+0x88>)
 80181ce:	e7dd      	b.n	801818c <stm32_gpio_enable_int+0x28>
		return -EINVAL;
 80181d0:	f06f 0015 	mvn.w	r0, #21
 80181d4:	e7ee      	b.n	80181b4 <stm32_gpio_enable_int+0x50>
 80181d6:	bf00      	nop
 80181d8:	08026558 	.word	0x08026558
 80181dc:	08020210 	.word	0x08020210
 80181e0:	40013808 	.word	0x40013808
 80181e4:	4001380c 	.word	0x4001380c
 80181e8:	40013810 	.word	0x40013810
 80181ec:	40013814 	.word	0x40013814

080181f0 <_ExcExit>:
 */

SECTION_SUBSEC_FUNC(TEXT, _HandlerModeExit, _ExcExit)

#ifdef CONFIG_PREEMPT_ENABLED
    ldr r0, =_kernel
 80181f0:	4808      	ldr	r0, [pc, #32]	; (8018214 <_EXIT_EXC+0x2>)

    ldr r1, [r0, #_kernel_offset_to_current]
 80181f2:	6881      	ldr	r1, [r0, #8]

    /*
     * Non-preemptible thread ? Do not schedule (see explanation of
     * preempt field in kernel_struct.h).
     */
    ldrh r2, [r1, #_thread_offset_to_preempt]
 80181f4:	894a      	ldrh	r2, [r1, #10]
    cmp r2, #_PREEMPT_THRESHOLD
 80181f6:	2a7f      	cmp	r2, #127	; 0x7f
    bhi _EXIT_EXC
 80181f8:	d80b      	bhi.n	8018212 <_EXIT_EXC>

    ldr r0, [r0, _kernel_offset_to_ready_q_cache]
 80181fa:	6980      	ldr	r0, [r0, #24]
    cmp r0, r1
 80181fc:	4288      	cmp	r0, r1
    beq _EXIT_EXC
 80181fe:	d008      	beq.n	8018212 <_EXIT_EXC>

#ifdef CONFIG_TIMESLICING
    push {lr}
 8018200:	b500      	push	{lr}
    bl _update_time_slice_before_swap
 8018202:	f001 fe65 	bl	8019ed0 <_update_time_slice_before_swap>
#if defined(CONFIG_ARMV6_M_ARMV8_M_BASELINE)
    pop {r0}
    mov lr, r0
#else
    pop {lr}
 8018206:	f85d eb04 	ldr.w	lr, [sp], #4
#endif /* CONFIG_ARMV6_M_ARMV8_M_BASELINE */
#endif /* CONFIG_TIMESLICING */

    /* context switch required, pend the PendSV exception */
    ldr r1, =_SCS_ICSR
 801820a:	4903      	ldr	r1, [pc, #12]	; (8018218 <_EXIT_EXC+0x6>)
    ldr r2, =_SCS_ICSR_PENDSV
 801820c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    str r2, [r1]
 8018210:	600a      	str	r2, [r1, #0]

08018212 <_EXIT_EXC>:
#else
    pop {lr}
#endif /* CONFIG_ARMV6_M_ARMV8_M_BASELINE */
#endif /* CONFIG_STACK_SENTINEL */

    bx lr
 8018212:	4770      	bx	lr
    ldr r0, =_kernel
 8018214:	20000760 	.word	0x20000760
    ldr r1, =_SCS_ICSR
 8018218:	e000ed04 	.word	0xe000ed04

0801821c <_IntLibInit>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 801821c:	4804      	ldr	r0, [pc, #16]	; (8018230 <_IntLibInit+0x14>)
 * @return N/A
 */

void _IntLibInit(void)
{
	int irq = 0;
 801821e:	2300      	movs	r3, #0
 8018220:	2110      	movs	r1, #16
 8018222:	18c2      	adds	r2, r0, r3

	for (; irq < CONFIG_NUM_IRQS; irq++) {
 8018224:	3301      	adds	r3, #1
 8018226:	2b52      	cmp	r3, #82	; 0x52
 8018228:	f882 1300 	strb.w	r1, [r2, #768]	; 0x300
 801822c:	d1f9      	bne.n	8018222 <_IntLibInit+0x6>
		NVIC_SetPriority((IRQn_Type)irq, _IRQ_PRIO_OFFSET);
	}
}
 801822e:	4770      	bx	lr
 8018230:	e000e100 	.word	0xe000e100

08018234 <__pendsv>:
    pop {lr}
#endif /* CONFIG_ARMV6_M_ARMV8_M_BASELINE */
#endif /* CONFIG_KERNEL_EVENT_LOGGER_CONTEXT_SWITCH  */

    /* load _kernel into r1 and current k_thread into r2 */
    ldr r1, =_kernel
 8018234:	490e      	ldr	r1, [pc, #56]	; (8018270 <__pendsv+0x3c>)
    ldr r2, [r1, #_kernel_offset_to_current]
 8018236:	688a      	ldr	r2, [r1, #8]

    /* addr of callee-saved regs in thread in r0 */
    ldr r0, =_thread_offset_to_callee_saved
 8018238:	f04f 0028 	mov.w	r0, #40	; 0x28
    add r0, r2
 801823c:	4410      	add	r0, r2

    /* save callee-saved + psp in thread */
    mrs ip, PSP
 801823e:	f3ef 8c09 	mrs	ip, PSP
    mov r6, r11
    mov r7, ip
    /* store r8-12 */
    stmea r0!, {r3-r7}
#elif defined(CONFIG_ARMV7_M_ARMV8_M_MAINLINE)
    stmia r0, {v1-v8, ip}
 8018242:	e880 1ff0 	stmia.w	r0, {r4, r5, r6, r7, r8, r9, sl, fp, ip}
     * don't clear it yet. PendSV must not be cleared until
     * the new thread is context-switched in since all decisions
     * to pend PendSV have been taken with the current kernel
     * state and this is what we're handling currently.
     */
    ldr v4, =_SCS_ICSR
 8018246:	4f0b      	ldr	r7, [pc, #44]	; (8018274 <__pendsv+0x40>)
    ldr v3, =_SCS_ICSR_UNPENDSV
 8018248:	f04f 6600 	mov.w	r6, #134217728	; 0x8000000

    /* protect the kernel state while we play with the thread lists */
#if defined(CONFIG_ARMV6_M_ARMV8_M_BASELINE)
    cpsid i
#elif defined(CONFIG_ARMV7_M_ARMV8_M_MAINLINE)
    movs.n r0, #_EXC_IRQ_DEFAULT_PRIO
 801824c:	2010      	movs	r0, #16
    msr BASEPRI, r0
 801824e:	f380 8811 	msr	BASEPRI, r0
#endif /* CONFIG_ARMV6_M_ARMV8_M_BASELINE */

    /* _kernel is still in r1 */

    /* fetch the thread to run from the ready queue cache */
    ldr r2, [r1, _kernel_offset_to_ready_q_cache]
 8018252:	698a      	ldr	r2, [r1, #24]

    str r2, [r1, #_kernel_offset_to_current]
 8018254:	608a      	str	r2, [r1, #8]
     * since they were based on the previous kernel state and this
     * has been handled.
     */

    /* _SCS_ICSR is still in v4 and _SCS_ICSR_UNPENDSV in v3 */
    str v3, [v4, #0]
 8018256:	603e      	str	r6, [r7, #0]

    /* Restore previous interrupt disable state (irq_lock key) */
    ldr r0, [r2, #_thread_offset_to_basepri]
 8018258:	6e10      	ldr	r0, [r2, #96]	; 0x60
    movs.n r3, #0
 801825a:	2300      	movs	r3, #0
    str r3, [r2, #_thread_offset_to_basepri]
 801825c:	6613      	str	r3, [r2, #96]	; 0x60
    /* restore r4-r7, go back 9*4 bytes to the start of the stored block */
    subs r0, #36
    ldmia r0!, {r4-r7}
#elif defined(CONFIG_ARMV7_M_ARMV8_M_MAINLINE)
    /* restore BASEPRI for the incoming thread */
    msr BASEPRI, r0
 801825e:	f380 8811 	msr	BASEPRI, r0
    blx configure_mpu_user_context
    pop {r2, lr}
#endif

    /* load callee-saved + psp from thread */
    add r0, r2, #_thread_offset_to_callee_saved
 8018262:	f102 0028 	add.w	r0, r2, #40	; 0x28
    ldmia r0, {v1-v8, ip}
 8018266:	e890 1ff0 	ldmia.w	r0, {r4, r5, r6, r7, r8, r9, sl, fp, ip}
#else
#error Unknown ARM architecture
#endif /* CONFIG_ARMV6_M_ARMV8_M_BASELINE */

    msr PSP, ip
 801826a:	f38c 8809 	msr	PSP, ip
#endif /* CONFIG_ARMV6_M_ARMV8_M_BASELINE */
    ldm sp!,{r0-r3} /* Load back regs ro to r4 */
#endif /* CONFIG_EXECUTION_BENCHMARKING */

    /* exc return */
    bx lr
 801826e:	4770      	bx	lr
    ldr r1, =_kernel
 8018270:	20000760 	.word	0x20000760
    ldr v4, =_SCS_ICSR
 8018274:	e000ed04 	.word	0xe000ed04

08018278 <__svc>:
 *
 * @return N/A
 */

SECTION_FUNC(TEXT, __svc)
    tst lr, #0x4    /* did we come from thread mode ? */
 8018278:	f01e 0f04 	tst.w	lr, #4
    ite eq  /* if zero (equal), came from handler mode */
 801827c:	bf0c      	ite	eq
        mrseq r0, MSP   /* handler mode, stack frame is on MSP */
 801827e:	f3ef 8008 	mrseq	r0, MSP
        mrsne r0, PSP   /* thread mode, stack frame is on PSP */
 8018282:	f3ef 8009 	mrsne	r0, PSP

    ldr r1, [r0, #24]   /* grab address of PC from stack frame */
 8018286:	6981      	ldr	r1, [r0, #24]
    /* SVC is a two-byte instruction, point to it and read  encoding */
    ldrh r1, [r1, #-2]
 8018288:	f831 1c02 	ldrh.w	r1, [r1, #-2]
    * 2: kernel panic or oops (software generated fatal exception)
    * 3: System call
    * Planned implementation of system calls for memory protection will
    * expand this case.
    */
    ands r1, #0xff
 801828c:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
    tst r2, #0x1
    bne _oops

    cmp r1, #0
#endif
    beq _context_switch
 8018290:	d001      	beq.n	8018296 <_context_switch>

    cmp r1, #2
 8018292:	2902      	cmp	r1, #2
    beq _oops
 8018294:	d007      	beq.n	80182a6 <_oops>

08018296 <_context_switch>:
    /*
     * Unlock interrupts:
     * - in a SVC call, so protected against context switches
     * - allow PendSV, since it's running at prio 0xff
     */
    eors.n r0, r0
 8018296:	4040      	eors	r0, r0
    msr BASEPRI, r0
 8018298:	f380 8811 	msr	BASEPRI, r0

     /* set PENDSV bit, pending the PendSV exception */
    ldr r1, =_SCS_ICSR
 801829c:	4904      	ldr	r1, [pc, #16]	; (80182b0 <_oops+0xa>)
    ldr r2, =_SCS_ICSR_PENDSV
 801829e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    str r2, [r1, #0]
 80182a2:	600a      	str	r2, [r1, #0]

    /* handler mode exit, to PendSV */
    bx lr
 80182a4:	4770      	bx	lr

080182a6 <_oops>:

_oops:
    push {lr}
 80182a6:	b500      	push	{lr}
    blx _do_kernel_oops
 80182a8:	f000 f9fc 	bl	80186a4 <_do_kernel_oops>
    pop {pc}
 80182ac:	bd00      	pop	{pc}
 80182ae:	0000      	.short	0x0000
    ldr r1, =_SCS_ICSR
 80182b0:	e000ed04 	.word	0xe000ed04

080182b4 <__swap>:
    mov lr,r3
#else
    pop {lr}
#endif /* CONFIG_ARMV6_M_ARMV8_M_BASELINE */
#endif /* CONFIG_EXECUTION_BENCHMARKING */
    ldr r1, =_kernel
 80182b4:	4904      	ldr	r1, [pc, #16]	; (80182c8 <__swap+0x14>)
    ldr r2, [r1, #_kernel_offset_to_current]
 80182b6:	688a      	ldr	r2, [r1, #8]
    str r0, [r2, #_thread_offset_to_basepri]
 80182b8:	6610      	str	r0, [r2, #96]	; 0x60

    /*
     * Set __swap()'s default return code to -EAGAIN. This eliminates the need
     * for the timeout code to set it itself.
     */
    ldr r1, =_k_neg_eagain
 80182ba:	4904      	ldr	r1, [pc, #16]	; (80182cc <__swap+0x18>)
    ldr r1, [r1]
 80182bc:	6809      	ldr	r1, [r1, #0]
    str r1, [r2, #_thread_offset_to_swap_return_value]
 80182be:	6651      	str	r1, [r2, #100]	; 0x64
     * PendSV handler will be called if there are no other interrupts
     * of a higher priority pending.
     */
    cpsie i
#elif defined(CONFIG_ARMV7_M_ARMV8_M_MAINLINE)
    svc #0
 80182c0:	df00      	svc	0
#else
#error Unknown ARM architecture
#endif /* CONFIG_ARMV6_M_ARMV8_M_BASELINE */

    /* coming back from exception, r2 still holds the pointer to _current */
    ldr r0, [r2, #_thread_offset_to_swap_return_value]
 80182c2:	6e50      	ldr	r0, [r2, #100]	; 0x64
    bx lr
 80182c4:	4770      	bx	lr
 80182c6:	0000      	.short	0x0000
    ldr r1, =_kernel
 80182c8:	20000760 	.word	0x20000760
    ldr r1, =_k_neg_eagain
 80182cc:	08026b28 	.word	0x08026b28

080182d0 <_FaultThreadShow.isra.2>:
 *
 * See _FaultDump() for example.
 *
 * @return N/A
 */
static void _FaultThreadShow(const NANO_ESF *esf)
 80182d0:	b510      	push	{r4, lr}
 80182d2:	4604      	mov	r4, r0

K_SYSCALL_DECLARE0_VOID(K_SYSCALL_K_YIELD, k_yield);

K_SYSCALL_DECLARE1_VOID(K_SYSCALL_K_WAKEUP, k_wakeup, k_tid_t, thread);

K_SYSCALL_DECLARE0(K_SYSCALL_K_CURRENT_GET, k_current_get, k_tid_t);
 80182d4:	f001 fdd2 	bl	8019e7c <_impl_k_current_get>
{
	PR_EXC("  Executing thread ID (thread): %p\n"
 80182d8:	6822      	ldr	r2, [r4, #0]
 80182da:	4601      	mov	r1, r0
	       "  Faulting instruction address:  0x%x\n",
	       k_current_get(), esf->pc);
}
 80182dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	PR_EXC("  Executing thread ID (thread): %p\n"
 80182e0:	4801      	ldr	r0, [pc, #4]	; (80182e8 <_FaultThreadShow.isra.2+0x18>)
 80182e2:	f000 bc4b 	b.w	8018b7c <printk>
 80182e6:	bf00      	nop
 80182e8:	080266c1 	.word	0x080266c1

080182ec <_UsageFault>:
 * See _FaultDump() for example.
 *
 * @return N/A
 */
static void _UsageFault(const NANO_ESF *esf)
{
 80182ec:	b510      	push	{r4, lr}
 80182ee:	4604      	mov	r4, r0
	PR_EXC("***** USAGE FAULT *****\n");
 80182f0:	481a      	ldr	r0, [pc, #104]	; (801835c <_UsageFault+0x70>)
 80182f2:	f000 fc43 	bl	8018b7c <printk>

	_FaultThreadShow(esf);
 80182f6:	f104 0018 	add.w	r0, r4, #24

	/* bits are sticky: they stack and must be reset */
	if (SCB->CFSR & CFSR_DIVBYZERO_Msk) {
 80182fa:	4c19      	ldr	r4, [pc, #100]	; (8018360 <_UsageFault+0x74>)
	_FaultThreadShow(esf);
 80182fc:	f7ff ffe8 	bl	80182d0 <_FaultThreadShow.isra.2>
	if (SCB->CFSR & CFSR_DIVBYZERO_Msk) {
 8018300:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8018302:	019a      	lsls	r2, r3, #6
 8018304:	d502      	bpl.n	801830c <_UsageFault+0x20>
		PR_EXC("  Division by zero\n");
 8018306:	4817      	ldr	r0, [pc, #92]	; (8018364 <_UsageFault+0x78>)
 8018308:	f000 fc38 	bl	8018b7c <printk>
	}
	if (SCB->CFSR & CFSR_UNALIGNED_Msk) {
 801830c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801830e:	01db      	lsls	r3, r3, #7
 8018310:	d502      	bpl.n	8018318 <_UsageFault+0x2c>
		PR_EXC("  Unaligned memory access\n");
 8018312:	4815      	ldr	r0, [pc, #84]	; (8018368 <_UsageFault+0x7c>)
 8018314:	f000 fc32 	bl	8018b7c <printk>
	}
	if (SCB->CFSR & CFSR_NOCP_Msk) {
 8018318:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801831a:	0318      	lsls	r0, r3, #12
 801831c:	d502      	bpl.n	8018324 <_UsageFault+0x38>
		PR_EXC("  No coprocessor instructions\n");
 801831e:	4813      	ldr	r0, [pc, #76]	; (801836c <_UsageFault+0x80>)
 8018320:	f000 fc2c 	bl	8018b7c <printk>
	}
	if (SCB->CFSR & CFSR_INVPC_Msk) {
 8018324:	4c0e      	ldr	r4, [pc, #56]	; (8018360 <_UsageFault+0x74>)
 8018326:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8018328:	0359      	lsls	r1, r3, #13
 801832a:	d502      	bpl.n	8018332 <_UsageFault+0x46>
		PR_EXC("  Illegal load of EXC_RETURN into PC\n");
 801832c:	4810      	ldr	r0, [pc, #64]	; (8018370 <_UsageFault+0x84>)
 801832e:	f000 fc25 	bl	8018b7c <printk>
	}
	if (SCB->CFSR & CFSR_INVSTATE_Msk) {
 8018332:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8018334:	039a      	lsls	r2, r3, #14
 8018336:	d502      	bpl.n	801833e <_UsageFault+0x52>
		PR_EXC("  Illegal use of the EPSR\n");
 8018338:	480e      	ldr	r0, [pc, #56]	; (8018374 <_UsageFault+0x88>)
 801833a:	f000 fc1f 	bl	8018b7c <printk>
	}
	if (SCB->CFSR & CFSR_UNDEFINSTR_Msk) {
 801833e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8018340:	03db      	lsls	r3, r3, #15
 8018342:	d502      	bpl.n	801834a <_UsageFault+0x5e>
		PR_EXC("  Attempt to execute undefined instruction\n");
 8018344:	480c      	ldr	r0, [pc, #48]	; (8018378 <_UsageFault+0x8c>)
 8018346:	f000 fc19 	bl	8018b7c <printk>
	}

	/* clear USFR sticky bits */
	SCB->CFSR |= SCB_CFSR_USGFAULTSR_Msk;
 801834a:	4a05      	ldr	r2, [pc, #20]	; (8018360 <_UsageFault+0x74>)
 801834c:	6a93      	ldr	r3, [r2, #40]	; 0x28
 801834e:	ea6f 4303 	mvn.w	r3, r3, lsl #16
 8018352:	ea6f 4313 	mvn.w	r3, r3, lsr #16
 8018356:	6293      	str	r3, [r2, #40]	; 0x28
}
 8018358:	bd10      	pop	{r4, pc}
 801835a:	bf00      	nop
 801835c:	08026792 	.word	0x08026792
 8018360:	e000ed00 	.word	0xe000ed00
 8018364:	080267ab 	.word	0x080267ab
 8018368:	080267bf 	.word	0x080267bf
 801836c:	080267da 	.word	0x080267da
 8018370:	080267f9 	.word	0x080267f9
 8018374:	0802681f 	.word	0x0802681f
 8018378:	0802683a 	.word	0x0802683a

0801837c <_MpuFault>:
{
 801837c:	b538      	push	{r3, r4, r5, lr}
 801837e:	4604      	mov	r4, r0
	PR_EXC("***** MPU FAULT *****\n");
 8018380:	4816      	ldr	r0, [pc, #88]	; (80183dc <_MpuFault+0x60>)
{
 8018382:	460d      	mov	r5, r1
	PR_EXC("***** MPU FAULT *****\n");
 8018384:	f000 fbfa 	bl	8018b7c <printk>
	_FaultThreadShow(esf);
 8018388:	f104 0018 	add.w	r0, r4, #24
	if (SCB->CFSR & CFSR_MSTKERR_Msk) {
 801838c:	4c14      	ldr	r4, [pc, #80]	; (80183e0 <_MpuFault+0x64>)
	_FaultThreadShow(esf);
 801838e:	f7ff ff9f 	bl	80182d0 <_FaultThreadShow.isra.2>
	if (SCB->CFSR & CFSR_MSTKERR_Msk) {
 8018392:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8018394:	06db      	lsls	r3, r3, #27
 8018396:	d504      	bpl.n	80183a2 <_MpuFault+0x26>
		PR_EXC("  Stacking error\n");
 8018398:	4812      	ldr	r0, [pc, #72]	; (80183e4 <_MpuFault+0x68>)
}
 801839a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		PR_EXC("  Instruction Access Violation\n");
 801839e:	f000 bbed 	b.w	8018b7c <printk>
	} else if (SCB->CFSR & CFSR_MUNSTKERR_Msk) {
 80183a2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80183a4:	0718      	lsls	r0, r3, #28
 80183a6:	d501      	bpl.n	80183ac <_MpuFault+0x30>
		PR_EXC("  Unstacking error\n");
 80183a8:	480f      	ldr	r0, [pc, #60]	; (80183e8 <_MpuFault+0x6c>)
 80183aa:	e7f6      	b.n	801839a <_MpuFault+0x1e>
	} else if (SCB->CFSR & CFSR_DACCVIOL_Msk) {
 80183ac:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80183ae:	0799      	lsls	r1, r3, #30
 80183b0:	d50f      	bpl.n	80183d2 <_MpuFault+0x56>
		PR_EXC("  Data Access Violation\n");
 80183b2:	480e      	ldr	r0, [pc, #56]	; (80183ec <_MpuFault+0x70>)
 80183b4:	f000 fbe2 	bl	8018b7c <printk>
		STORE_xFAR(mmfar, SCB->MMFAR);
 80183b8:	6b61      	ldr	r1, [r4, #52]	; 0x34
		if (SCB->CFSR & CFSR_MMARVALID_Msk) {
 80183ba:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80183bc:	061a      	lsls	r2, r3, #24
 80183be:	d507      	bpl.n	80183d0 <_MpuFault+0x54>
			PR_EXC("  Address: 0x%x\n", mmfar);
 80183c0:	480b      	ldr	r0, [pc, #44]	; (80183f0 <_MpuFault+0x74>)
 80183c2:	f000 fbdb 	bl	8018b7c <printk>
			if (fromHardFault) {
 80183c6:	b11d      	cbz	r5, 80183d0 <_MpuFault+0x54>
				SCB->CFSR &= ~CFSR_MMARVALID_Msk;
 80183c8:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80183ca:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80183ce:	62a3      	str	r3, [r4, #40]	; 0x28
}
 80183d0:	bd38      	pop	{r3, r4, r5, pc}
	} else if (SCB->CFSR & CFSR_IACCVIOL_Msk) {
 80183d2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80183d4:	07db      	lsls	r3, r3, #31
 80183d6:	d5fb      	bpl.n	80183d0 <_MpuFault+0x54>
		PR_EXC("  Instruction Access Violation\n");
 80183d8:	4806      	ldr	r0, [pc, #24]	; (80183f4 <_MpuFault+0x78>)
 80183da:	e7de      	b.n	801839a <_MpuFault+0x1e>
 80183dc:	0802670b 	.word	0x0802670b
 80183e0:	e000ed00 	.word	0xe000ed00
 80183e4:	08026722 	.word	0x08026722
 80183e8:	08026734 	.word	0x08026734
 80183ec:	08026748 	.word	0x08026748
 80183f0:	08026761 	.word	0x08026761
 80183f4:	08026772 	.word	0x08026772

080183f8 <_BusFault>:
{
 80183f8:	b538      	push	{r3, r4, r5, lr}
 80183fa:	4604      	mov	r4, r0
	PR_EXC("***** BUS FAULT *****\n");
 80183fc:	481b      	ldr	r0, [pc, #108]	; (801846c <_BusFault+0x74>)
{
 80183fe:	460d      	mov	r5, r1
	PR_EXC("***** BUS FAULT *****\n");
 8018400:	f000 fbbc 	bl	8018b7c <printk>
	_FaultThreadShow(esf);
 8018404:	f104 0018 	add.w	r0, r4, #24
	if (SCB->CFSR & CFSR_STKERR_Msk) {
 8018408:	4c19      	ldr	r4, [pc, #100]	; (8018470 <_BusFault+0x78>)
	_FaultThreadShow(esf);
 801840a:	f7ff ff61 	bl	80182d0 <_FaultThreadShow.isra.2>
	if (SCB->CFSR & CFSR_STKERR_Msk) {
 801840e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8018410:	04d9      	lsls	r1, r3, #19
 8018412:	d504      	bpl.n	801841e <_BusFault+0x26>
		PR_EXC("  Stacking error\n");
 8018414:	4817      	ldr	r0, [pc, #92]	; (8018474 <_BusFault+0x7c>)
}
 8018416:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		PR_EXC("  Instruction bus error\n");
 801841a:	f000 bbaf 	b.w	8018b7c <printk>
	} else if (SCB->CFSR & CFSR_UNSTKERR_Msk) {
 801841e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8018420:	051a      	lsls	r2, r3, #20
 8018422:	d501      	bpl.n	8018428 <_BusFault+0x30>
		PR_EXC("  Unstacking error\n");
 8018424:	4814      	ldr	r0, [pc, #80]	; (8018478 <_BusFault+0x80>)
 8018426:	e7f6      	b.n	8018416 <_BusFault+0x1e>
	} else if (SCB->CFSR & CFSR_PRECISERR_Msk) {
 8018428:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801842a:	059b      	lsls	r3, r3, #22
 801842c:	d514      	bpl.n	8018458 <_BusFault+0x60>
		PR_EXC("  Precise data bus error\n");
 801842e:	4813      	ldr	r0, [pc, #76]	; (801847c <_BusFault+0x84>)
 8018430:	f000 fba4 	bl	8018b7c <printk>
		STORE_xFAR(bfar, SCB->BFAR);
 8018434:	6ba1      	ldr	r1, [r4, #56]	; 0x38
		if (SCB->CFSR & CFSR_BFARVALID_Msk) {
 8018436:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8018438:	0418      	lsls	r0, r3, #16
 801843a:	d507      	bpl.n	801844c <_BusFault+0x54>
			PR_EXC("  Address: 0x%x\n", bfar);
 801843c:	4810      	ldr	r0, [pc, #64]	; (8018480 <_BusFault+0x88>)
 801843e:	f000 fb9d 	bl	8018b7c <printk>
			if (fromHardFault) {
 8018442:	b11d      	cbz	r5, 801844c <_BusFault+0x54>
				SCB->CFSR &= ~CFSR_BFARVALID_Msk;
 8018444:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8018446:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 801844a:	62a3      	str	r3, [r4, #40]	; 0x28
		if (SCB->CFSR & CFSR_IMPRECISERR_Msk) {
 801844c:	4b08      	ldr	r3, [pc, #32]	; (8018470 <_BusFault+0x78>)
 801844e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018450:	0559      	lsls	r1, r3, #21
 8018452:	d509      	bpl.n	8018468 <_BusFault+0x70>
			PR_EXC("  Imprecise data bus error\n");
 8018454:	480b      	ldr	r0, [pc, #44]	; (8018484 <_BusFault+0x8c>)
 8018456:	e7de      	b.n	8018416 <_BusFault+0x1e>
	} else if (SCB->CFSR & CFSR_IMPRECISERR_Msk) {
 8018458:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801845a:	055a      	lsls	r2, r3, #21
 801845c:	d4fa      	bmi.n	8018454 <_BusFault+0x5c>
	} else if (SCB->CFSR & CFSR_IBUSERR_Msk) {
 801845e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8018460:	05db      	lsls	r3, r3, #23
 8018462:	d501      	bpl.n	8018468 <_BusFault+0x70>
		PR_EXC("  Instruction bus error\n");
 8018464:	4808      	ldr	r0, [pc, #32]	; (8018488 <_BusFault+0x90>)
 8018466:	e7d6      	b.n	8018416 <_BusFault+0x1e>
}
 8018468:	bd38      	pop	{r3, r4, r5, pc}
 801846a:	bf00      	nop
 801846c:	08026588 	.word	0x08026588
 8018470:	e000ed00 	.word	0xe000ed00
 8018474:	08026722 	.word	0x08026722
 8018478:	08026734 	.word	0x08026734
 801847c:	0802659f 	.word	0x0802659f
 8018480:	08026761 	.word	0x08026761
 8018484:	080265b9 	.word	0x080265b9
 8018488:	080265d5 	.word	0x080265d5

0801848c <_Fault>:
 *
 * @param esf ESF on the stack, either MSP or PSP depending at what processor
 *            state the exception was taken.
 */
void _Fault(const NANO_ESF *esf)
{
 801848c:	b538      	push	{r3, r4, r5, lr}
	int fault = SCB->ICSR & SCB_ICSR_VECTACTIVE_Msk;
 801848e:	4d27      	ldr	r5, [pc, #156]	; (801852c <_Fault+0xa0>)
 8018490:	686b      	ldr	r3, [r5, #4]
 8018492:	f3c3 0308 	ubfx	r3, r3, #0, #9
	switch (fault) {
 8018496:	1eda      	subs	r2, r3, #3
{
 8018498:	4604      	mov	r4, r0
	switch (fault) {
 801849a:	2a09      	cmp	r2, #9
 801849c:	d83a      	bhi.n	8018514 <_Fault+0x88>
 801849e:	e8df f002 	tbb	[pc, r2]
 80184a2:	3305      	.short	0x3305
 80184a4:	39392f35 	.word	0x39392f35
 80184a8:	37393939 	.word	0x37393939
	PR_EXC("***** HARD FAULT *****\n");
 80184ac:	4820      	ldr	r0, [pc, #128]	; (8018530 <_Fault+0xa4>)
 80184ae:	f000 fb65 	bl	8018b7c <printk>
	if (SCB->HFSR & SCB_HFSR_VECTTBL_Msk) {
 80184b2:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 80184b4:	079a      	lsls	r2, r3, #30
 80184b6:	d503      	bpl.n	80184c0 <_Fault+0x34>
		PR_EXC("  Bus fault on vector table read\n");
 80184b8:	481e      	ldr	r0, [pc, #120]	; (8018534 <_Fault+0xa8>)
	PR_EXC("***** Debug monitor exception (not implemented) *****\n");
 80184ba:	f000 fb5f 	bl	8018b7c <printk>
 80184be:	e00c      	b.n	80184da <_Fault+0x4e>
	} else if (SCB->HFSR & SCB_HFSR_FORCED_Msk) {
 80184c0:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 80184c2:	005b      	lsls	r3, r3, #1
 80184c4:	d509      	bpl.n	80184da <_Fault+0x4e>
		PR_EXC("  Fault escalation (see below)\n");
 80184c6:	481c      	ldr	r0, [pc, #112]	; (8018538 <_Fault+0xac>)
 80184c8:	f000 fb58 	bl	8018b7c <printk>
		if (SCB_MMFSR) {
 80184cc:	4b1b      	ldr	r3, [pc, #108]	; (801853c <_Fault+0xb0>)
 80184ce:	781b      	ldrb	r3, [r3, #0]
 80184d0:	b14b      	cbz	r3, 80184e6 <_Fault+0x5a>
			_MpuFault(esf, 1);
 80184d2:	2101      	movs	r1, #1
		_MpuFault(esf, 0);
 80184d4:	4620      	mov	r0, r4
 80184d6:	f7ff ff51 	bl	801837c <_MpuFault>

	FAULT_DUMP(esf, fault);

	_SysFatalErrorHandler(_NANO_ERR_HW_EXCEPTION, esf);
 80184da:	4621      	mov	r1, r4
 80184dc:	2000      	movs	r0, #0
}
 80184de:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	_SysFatalErrorHandler(_NANO_ERR_HW_EXCEPTION, esf);
 80184e2:	f000 b8e3 	b.w	80186ac <_SysFatalErrorHandler>
		} else if (SCB_BFSR) {
 80184e6:	4b16      	ldr	r3, [pc, #88]	; (8018540 <_Fault+0xb4>)
 80184e8:	781b      	ldrb	r3, [r3, #0]
 80184ea:	b123      	cbz	r3, 80184f6 <_Fault+0x6a>
			_BusFault(esf, 1);
 80184ec:	2101      	movs	r1, #1
		_BusFault(esf, 0);
 80184ee:	4620      	mov	r0, r4
 80184f0:	f7ff ff82 	bl	80183f8 <_BusFault>
 80184f4:	e7f1      	b.n	80184da <_Fault+0x4e>
		} else if (SCB_UFSR) {
 80184f6:	4b13      	ldr	r3, [pc, #76]	; (8018544 <_Fault+0xb8>)
 80184f8:	881b      	ldrh	r3, [r3, #0]
 80184fa:	b29b      	uxth	r3, r3
 80184fc:	2b00      	cmp	r3, #0
 80184fe:	d0ec      	beq.n	80184da <_Fault+0x4e>
		_UsageFault(esf);
 8018500:	4620      	mov	r0, r4
 8018502:	f7ff fef3 	bl	80182ec <_UsageFault>
 8018506:	e7e8      	b.n	80184da <_Fault+0x4e>
		_MpuFault(esf, 0);
 8018508:	2100      	movs	r1, #0
 801850a:	e7e3      	b.n	80184d4 <_Fault+0x48>
		_BusFault(esf, 0);
 801850c:	2100      	movs	r1, #0
 801850e:	e7ee      	b.n	80184ee <_Fault+0x62>
	PR_EXC("***** Debug monitor exception (not implemented) *****\n");
 8018510:	480d      	ldr	r0, [pc, #52]	; (8018548 <_Fault+0xbc>)
 8018512:	e7d2      	b.n	80184ba <_Fault+0x2e>
	PR_EXC("***** %s %d) *****\n",
 8018514:	480d      	ldr	r0, [pc, #52]	; (801854c <_Fault+0xc0>)
 8018516:	490e      	ldr	r1, [pc, #56]	; (8018550 <_Fault+0xc4>)
 8018518:	f1a3 0210 	sub.w	r2, r3, #16
 801851c:	2b0f      	cmp	r3, #15
 801851e:	bfd8      	it	le
 8018520:	4601      	movle	r1, r0
 8018522:	480c      	ldr	r0, [pc, #48]	; (8018554 <_Fault+0xc8>)
 8018524:	f000 fb2a 	bl	8018b7c <printk>
 8018528:	e7d7      	b.n	80184da <_Fault+0x4e>
 801852a:	bf00      	nop
 801852c:	e000ed00 	.word	0xe000ed00
 8018530:	0802661c 	.word	0x0802661c
 8018534:	08026634 	.word	0x08026634
 8018538:	08026656 	.word	0x08026656
 801853c:	e000ed28 	.word	0xe000ed28
 8018540:	e000ed29 	.word	0xe000ed29
 8018544:	e000ed2c 	.word	0xe000ed2c
 8018548:	08026676 	.word	0x08026676
 801854c:	080265ee 	.word	0x080265ee
 8018550:	08026603 	.word	0x08026603
 8018554:	080266ad 	.word	0x080266ad

08018558 <_FaultInit>:
 */
void _FaultInit(void)
{
#if defined(CONFIG_ARMV6_M_ARMV8_M_BASELINE)
#elif defined(CONFIG_ARMV7_M_ARMV8_M_MAINLINE)
	SCB->CCR |= SCB_CCR_DIV_0_TRP_Msk;
 8018558:	4a02      	ldr	r2, [pc, #8]	; (8018564 <_FaultInit+0xc>)
 801855a:	6953      	ldr	r3, [r2, #20]
 801855c:	f043 0310 	orr.w	r3, r3, #16
 8018560:	6153      	str	r3, [r2, #20]
#else
#error Unknown ARM architecture
#endif /* CONFIG_ARMV6_M_ARMV8_M_BASELINE */
}
 8018562:	4770      	bx	lr
 8018564:	e000ed00 	.word	0xe000ed00

08018568 <_arch_irq_enable>:
 *
 * @return N/A
 */
void _arch_irq_enable(unsigned int irq)
{
	NVIC_EnableIRQ((IRQn_Type)irq);
 8018568:	b243      	sxtb	r3, r0
  if ((int32_t)(IRQn) >= 0)
 801856a:	2b00      	cmp	r3, #0
 801856c:	db08      	blt.n	8018580 <_arch_irq_enable+0x18>
    NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 801856e:	2201      	movs	r2, #1
 8018570:	f000 001f 	and.w	r0, r0, #31
 8018574:	fa02 f000 	lsl.w	r0, r2, r0
 8018578:	095b      	lsrs	r3, r3, #5
 801857a:	4a02      	ldr	r2, [pc, #8]	; (8018584 <_arch_irq_enable+0x1c>)
 801857c:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
}
 8018580:	4770      	bx	lr
 8018582:	bf00      	nop
 8018584:	e000e100 	.word	0xe000e100

08018588 <_irq_priority_set>:
	 */
	__ASSERT(prio <= ((1 << CONFIG_NUM_IRQ_PRIO_BITS) - 1),
		 "invalid priority %d! values must be less than %d\n",
		 prio - _IRQ_PRIO_OFFSET,
		 (1 << CONFIG_NUM_IRQ_PRIO_BITS) - (_IRQ_PRIO_OFFSET));
	NVIC_SetPriority((IRQn_Type)irq, prio);
 8018588:	b243      	sxtb	r3, r0
  if ((int32_t)(IRQn) >= 0)
 801858a:	2b00      	cmp	r3, #0
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 801858c:	bfa8      	it	ge
 801858e:	f103 4360 	addge.w	r3, r3, #3758096384	; 0xe0000000
	prio += _IRQ_PRIO_OFFSET;
 8018592:	f101 0101 	add.w	r1, r1, #1
 8018596:	ea4f 1101 	mov.w	r1, r1, lsl #4
 801859a:	bfae      	itee	ge
 801859c:	f503 4361 	addge.w	r3, r3, #57600	; 0xe100
  }
  else
  {
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80185a0:	f000 000f 	andlt.w	r0, r0, #15
 80185a4:	4b03      	ldrlt	r3, [pc, #12]	; (80185b4 <_irq_priority_set+0x2c>)
 80185a6:	b2c9      	uxtb	r1, r1
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80185a8:	bfac      	ite	ge
 80185aa:	f883 1300 	strbge.w	r1, [r3, #768]	; 0x300
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80185ae:	5419      	strblt	r1, [r3, r0]
}
 80185b0:	4770      	bx	lr
 80185b2:	bf00      	nop
 80185b4:	e000ed14 	.word	0xe000ed14

080185b8 <_irq_spurious>:
 * @return N/A
 */
void _irq_spurious(void *unused)
{
	ARG_UNUSED(unused);
	__reserved();
 80185b8:	f000 b834 	b.w	8018624 <__bus_fault>

080185bc <_new_thread>:

void _new_thread(struct k_thread *thread, k_thread_stack_t *stack,
		 size_t stackSize, k_thread_entry_t pEntry,
		 void *parameter1, void *parameter2, void *parameter3,
		 int priority, unsigned int options)
{
 80185bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80185be:	460c      	mov	r4, r1
 80185c0:	4616      	mov	r6, r2
 80185c2:	461f      	mov	r7, r3
	 * if it isn't.
	 */
	*((u32_t *)pStack) = STACK_SENTINEL;
#endif /* CONFIG_STACK_SENTINEL */
	/* Initialize various struct k_thread members */
	_init_thread_base(&thread->base, prio, _THREAD_PRESTART, options);
 80185c4:	2204      	movs	r2, #4
 80185c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80185c8:	9909      	ldr	r1, [sp, #36]	; 0x24
 80185ca:	4605      	mov	r5, r0
 80185cc:	f001 fe94 	bl	801a2f8 <_init_thread_base>

	_new_thread_init(thread, pStackMem, stackEnd - pStackMem, priority,
			 options);

	/* carve the thread entry struct from the "base" of the stack */
	pInitCtx = (struct __esf *)(STACK_ROUND_DOWN(stackEnd -
 80185d0:	f1a6 0120 	sub.w	r1, r6, #32
 80185d4:	4421      	add	r1, r4
#else
	pInitCtx->pc = (u32_t)_thread_entry;
#endif

	/* force ARM mode by clearing LSB of address */
	pInitCtx->pc &= 0xfffffffe;
 80185d6:	4a0c      	ldr	r2, [pc, #48]	; (8018608 <_new_thread+0x4c>)
	pInitCtx = (struct __esf *)(STACK_ROUND_DOWN(stackEnd -
 80185d8:	f021 0107 	bic.w	r1, r1, #7

	/* static threads overwrite it afterwards with real value */
	thread->init_data = NULL;
 80185dc:	2300      	movs	r3, #0
	pInitCtx->pc &= 0xfffffffe;
 80185de:	f022 0201 	bic.w	r2, r2, #1
	thread->fn_abort = NULL;
 80185e2:	e9c5 3313 	strd	r3, r3, [r5, #76]	; 0x4c
	thread->mem_domain_info.mem_domain = NULL;
#endif /* CONFIG_USERSPACE */

#if defined(CONFIG_THREAD_STACK_INFO)
	thread->stack_info.start = (u32_t)pStack;
	thread->stack_info.size = (u32_t)stackSize;
 80185e6:	e9c5 4616 	strd	r4, r6, [r5, #88]	; 0x58
 80185ea:	618a      	str	r2, [r1, #24]

	pInitCtx->a1 = (u32_t)pEntry;
	pInitCtx->a2 = (u32_t)parameter1;
 80185ec:	9a06      	ldr	r2, [sp, #24]
 80185ee:	604a      	str	r2, [r1, #4]
	pInitCtx->a3 = (u32_t)parameter2;
 80185f0:	9a07      	ldr	r2, [sp, #28]
 80185f2:	608a      	str	r2, [r1, #8]
	pInitCtx->a4 = (u32_t)parameter3;
 80185f4:	9a08      	ldr	r2, [sp, #32]
 80185f6:	60ca      	str	r2, [r1, #12]
	pInitCtx->xpsr =
 80185f8:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
	pInitCtx->a1 = (u32_t)pEntry;
 80185fc:	600f      	str	r7, [r1, #0]
	pInitCtx->xpsr =
 80185fe:	61ca      	str	r2, [r1, #28]
		0x01000000UL; /* clear all, thumb bit is 1, even if RO */

	thread->callee_saved.psp = (u32_t)pInitCtx;
 8018600:	64a9      	str	r1, [r5, #72]	; 0x48
	thread->arch.basepri = 0;
 8018602:	662b      	str	r3, [r5, #96]	; 0x60
	 * and the corresponding parameters.
	 */
	thread->entry = (struct __thread_entry *)(pInitCtx);
	thread_monitor_init(thread);
#endif
}
 8018604:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018606:	bf00      	nop
 8018608:	0801a1ad 	.word	0x0801a1ad

0801860c <_CpuIdleInit>:
 *
 * void _CpuIdleInit (void);
 */

SECTION_FUNC(TEXT, _CpuIdleInit)
	ldr r1, =_SCB_SCR
 801860c:	4901      	ldr	r1, [pc, #4]	; (8018614 <_CpuIdleInit+0x8>)
	movs.n r2, #_SCR_INIT_BITS
 801860e:	2210      	movs	r2, #16
	str r2, [r1]
 8018610:	600a      	str	r2, [r1, #0]
	bx lr
 8018612:	4770      	bx	lr
	ldr r1, =_SCB_SCR
 8018614:	e000ed10 	.word	0xe000ed10

08018618 <k_cpu_idle>:

#if defined(CONFIG_ARMV6_M_ARMV8_M_BASELINE)
	cpsie i
#elif defined(CONFIG_ARMV7_M_ARMV8_M_MAINLINE)
	/* clear BASEPRI so wfi is awakened by incoming interrupts */
	eors.n r0, r0
 8018618:	4040      	eors	r0, r0
	msr BASEPRI, r0
 801861a:	f380 8811 	msr	BASEPRI, r0
#else
#error Unknown ARM architecture
#endif /* CONFIG_ARMV6_M_ARMV8_M_BASELINE */

	wfi
 801861e:	bf30      	wfi

	bx lr
 8018620:	4770      	bx	lr
 8018622:	bf00      	nop

08018624 <__bus_fault>:
	mrs r0, MSP
_stack_frame_endif:

#elif defined(CONFIG_ARMV7_M_ARMV8_M_MAINLINE)
	/* force unlock interrupts */
	eors.n r0, r0
 8018624:	4040      	eors	r0, r0
	msr BASEPRI, r0
 8018626:	f380 8811 	msr	BASEPRI, r0

	/* this checks to see if we are in a nested exception */
	ldr ip, =_SCS_ICSR
 801862a:	f8df c01c 	ldr.w	ip, [pc, #28]	; 8018648 <__bus_fault+0x24>
	ldr ip, [ip]
 801862e:	f8dc c000 	ldr.w	ip, [ip]
	ands.w ip, #_SCS_ICSR_RETTOBASE
 8018632:	f41c 6c00 	ands.w	ip, ip, #2048	; 0x800

	ite eq			/* is the RETTOBASE bit zero ? */
 8018636:	bf0c      	ite	eq
		mrseq r0, MSP	/* if so, we're not returning to thread mode,
 8018638:	f3ef 8008 	mrseq	r0, MSP
				 * thus this is a nested exception: the stack
				 * frame is on the MSP */
		mrsne r0, PSP	/* if not, we are returning to thread mode, thus
 801863c:	f3ef 8009 	mrsne	r0, PSP
				 * frame is on the PSP */
#else
#error Unknown ARM architecture
#endif /* CONFIG_ARMV6_M_ARMV8_M_BASELINE */

	push {lr}
 8018640:	b500      	push	{lr}
	bl _Fault
 8018642:	f7ff ff23 	bl	801848c <_Fault>

	pop {pc}
 8018646:	bd00      	pop	{pc}
	ldr ip, =_SCS_ICSR
 8018648:	e000ed04 	.word	0xe000ed04

0801864c <_NanoFatalErrorHandler>:
 * @param pEsf pointer to the exception stack frame
 */
void _NanoFatalErrorHandler(unsigned int reason,
					  const NANO_ESF *pEsf)
{
	switch (reason) {
 801864c:	2804      	cmp	r0, #4
{
 801864e:	b538      	push	{r3, r4, r5, lr}
 8018650:	4604      	mov	r4, r0
 8018652:	460d      	mov	r5, r1
	switch (reason) {
 8018654:	d013      	beq.n	801867e <_NanoFatalErrorHandler+0x32>
 8018656:	2805      	cmp	r0, #5
 8018658:	d013      	beq.n	8018682 <_NanoFatalErrorHandler+0x36>
 801865a:	2803      	cmp	r0, #3
 801865c:	d113      	bne.n	8018686 <_NanoFatalErrorHandler+0x3a>
		printk("***** Stack Check Fail! *****\n");
		break;
#endif /* CONFIG_STACK_CANARIES */

	case _NANO_ERR_ALLOCATION_FAIL:
		printk("**** Kernel Allocation Failure! ****\n");
 801865e:	480c      	ldr	r0, [pc, #48]	; (8018690 <_NanoFatalErrorHandler+0x44>)
		break;

	case _NANO_ERR_KERNEL_OOPS:
		printk("***** Kernel OOPS! *****\n");
 8018660:	f000 fa8c 	bl	8018b7c <printk>
 8018664:	f001 fc0a 	bl	8019e7c <_impl_k_current_get>

	default:
		printk("**** Unknown Fatal Error %d! ****\n", reason);
		break;
	}
	printk("Current thread ID = %p\n"
 8018668:	69aa      	ldr	r2, [r5, #24]
 801866a:	4601      	mov	r1, r0
 801866c:	4809      	ldr	r0, [pc, #36]	; (8018694 <_NanoFatalErrorHandler+0x48>)
 801866e:	f000 fa85 	bl	8018b7c <printk>
	 * to respond to the error.  The decisions as to what responses are
	 * appropriate to the various errors are something the customer must
	 * decide.
	 */

	_SysFatalErrorHandler(reason, pEsf);
 8018672:	4629      	mov	r1, r5
 8018674:	4620      	mov	r0, r4
}
 8018676:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	_SysFatalErrorHandler(reason, pEsf);
 801867a:	f000 b817 	b.w	80186ac <_SysFatalErrorHandler>
		printk("***** Kernel OOPS! *****\n");
 801867e:	4806      	ldr	r0, [pc, #24]	; (8018698 <_NanoFatalErrorHandler+0x4c>)
 8018680:	e7ee      	b.n	8018660 <_NanoFatalErrorHandler+0x14>
		printk("***** Kernel Panic! *****\n");
 8018682:	4806      	ldr	r0, [pc, #24]	; (801869c <_NanoFatalErrorHandler+0x50>)
 8018684:	e7ec      	b.n	8018660 <_NanoFatalErrorHandler+0x14>
		printk("**** Unknown Fatal Error %d! ****\n", reason);
 8018686:	4601      	mov	r1, r0
 8018688:	4805      	ldr	r0, [pc, #20]	; (80186a0 <_NanoFatalErrorHandler+0x54>)
 801868a:	f000 fa77 	bl	8018b7c <printk>
		break;
 801868e:	e7e9      	b.n	8018664 <_NanoFatalErrorHandler+0x18>
 8018690:	08026866 	.word	0x08026866
 8018694:	080268e4 	.word	0x080268e4
 8018698:	0802688c 	.word	0x0802688c
 801869c:	080268a6 	.word	0x080268a6
 80186a0:	080268c1 	.word	0x080268c1

080186a4 <_do_kernel_oops>:

void _do_kernel_oops(const NANO_ESF *esf)
{
 80186a4:	4601      	mov	r1, r0
	_NanoFatalErrorHandler(esf->r0, esf);
 80186a6:	6800      	ldr	r0, [r0, #0]
 80186a8:	f7ff bfd0 	b.w	801864c <_NanoFatalErrorHandler>

080186ac <_SysFatalErrorHandler>:
#ifdef CONFIG_STACK_SENTINEL
	if (reason == _NANO_ERR_STACK_CHK_FAIL) {
		goto hang_system;
	}
#endif
	if (reason == _NANO_ERR_KERNEL_PANIC) {
 80186ac:	2805      	cmp	r0, #5
{
 80186ae:	b510      	push	{r4, lr}
	if (reason == _NANO_ERR_KERNEL_PANIC) {
 80186b0:	d00c      	beq.n	80186cc <_SysFatalErrorHandler+0x20>
		goto hang_system;
	}
	if (k_is_in_isr() || _is_thread_essential()) {
 80186b2:	f001 fd63 	bl	801a17c <k_is_in_isr>
 80186b6:	b160      	cbz	r0, 80186d2 <_SysFatalErrorHandler+0x26>
		printk("Fatal fault in %s! Spinning...\n",
		       k_is_in_isr() ? "ISR" : "essential thread");
 80186b8:	f001 fd60 	bl	801a17c <k_is_in_isr>
		printk("Fatal fault in %s! Spinning...\n",
 80186bc:	490c      	ldr	r1, [pc, #48]	; (80186f0 <_SysFatalErrorHandler+0x44>)
 80186be:	4b0d      	ldr	r3, [pc, #52]	; (80186f4 <_SysFatalErrorHandler+0x48>)
 80186c0:	2800      	cmp	r0, #0
 80186c2:	bf08      	it	eq
 80186c4:	4619      	moveq	r1, r3
 80186c6:	480c      	ldr	r0, [pc, #48]	; (80186f8 <_SysFatalErrorHandler+0x4c>)
 80186c8:	f000 fa58 	bl	8018b7c <printk>
#else
	ARG_UNUSED(reason);
#endif

	for (;;) {
		k_cpu_idle();
 80186cc:	f7ff ffa4 	bl	8018618 <k_cpu_idle>
 80186d0:	e7fc      	b.n	80186cc <_SysFatalErrorHandler+0x20>
	if (k_is_in_isr() || _is_thread_essential()) {
 80186d2:	f001 fd63 	bl	801a19c <_is_thread_essential>
 80186d6:	2800      	cmp	r0, #0
 80186d8:	d1ee      	bne.n	80186b8 <_SysFatalErrorHandler+0xc>
	printk("Fatal fault in thread %p! Aborting.\n", _current);
 80186da:	4c08      	ldr	r4, [pc, #32]	; (80186fc <_SysFatalErrorHandler+0x50>)
 80186dc:	4808      	ldr	r0, [pc, #32]	; (8018700 <_SysFatalErrorHandler+0x54>)
 80186de:	68a1      	ldr	r1, [r4, #8]
 80186e0:	f000 fa4c 	bl	8018b7c <printk>

K_SYSCALL_DECLARE1(K_SYSCALL_K_THREAD_CANCEL, k_thread_cancel, int, k_tid_t, thread);

K_SYSCALL_DECLARE1_VOID(K_SYSCALL_K_THREAD_ABORT, k_thread_abort, k_tid_t, thread);
 80186e4:	68a0      	ldr	r0, [r4, #8]
	}
	CODE_UNREACHABLE;
}
 80186e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80186ea:	f000 b80b 	b.w	8018704 <_impl_k_thread_abort>
 80186ee:	bf00      	nop
 80186f0:	08026920 	.word	0x08026920
 80186f4:	08026924 	.word	0x08026924
 80186f8:	08026935 	.word	0x08026935
 80186fc:	20000760 	.word	0x20000760
 8018700:	08026955 	.word	0x08026955

08018704 <_impl_k_thread_abort>:
#include <misc/__assert.h>

extern void _k_thread_single_abort(struct k_thread *thread);

void _impl_k_thread_abort(k_tid_t thread)
{
 8018704:	b538      	push	{r3, r4, r5, lr}
 8018706:	4605      	mov	r5, r0
	__asm__ volatile(
 8018708:	f04f 0310 	mov.w	r3, #16
 801870c:	f3ef 8411 	mrs	r4, BASEPRI
 8018710:	f383 8811 	msr	BASEPRI, r3
	key = irq_lock();

	__ASSERT(!(thread->base.user_options & K_ESSENTIAL),
		 "essential thread aborted");

	_k_thread_single_abort(thread);
 8018714:	f001 fd80 	bl	801a218 <_k_thread_single_abort>
	_thread_monitor_exit(thread);

	if (_current == thread) {
 8018718:	4b0b      	ldr	r3, [pc, #44]	; (8018748 <_impl_k_thread_abort+0x44>)
 801871a:	689b      	ldr	r3, [r3, #8]
 801871c:	42ab      	cmp	r3, r5
 801871e:	d10d      	bne.n	801873c <_impl_k_thread_abort+0x38>
		if ((SCB->ICSR & SCB_ICSR_VECTACTIVE_Msk) == 0) {
 8018720:	4b0a      	ldr	r3, [pc, #40]	; (801874c <_impl_k_thread_abort+0x48>)
 8018722:	685a      	ldr	r2, [r3, #4]
 8018724:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8018728:	b922      	cbnz	r2, 8018734 <_impl_k_thread_abort+0x30>
extern unsigned int __swap(unsigned int key);

static inline unsigned int _Swap(unsigned int key)
{
	_check_stack_sentinel();
	_update_time_slice_before_swap();
 801872a:	f001 fbd1 	bl	8019ed0 <_update_time_slice_before_swap>

	return __swap(key);
 801872e:	4620      	mov	r0, r4
 8018730:	f7ff fdc0 	bl	80182b4 <__swap>
			_Swap(key);
			CODE_UNREACHABLE;
		} else {
			SCB->ICSR |= SCB_ICSR_PENDSVSET_Msk;
 8018734:	685a      	ldr	r2, [r3, #4]
 8018736:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 801873a:	605a      	str	r2, [r3, #4]
		}
	}

	/* The abort handler might have altered the ready queue. */
	_reschedule_threads(key);
 801873c:	4620      	mov	r0, r4
}
 801873e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	_reschedule_threads(key);
 8018742:	f001 bb03 	b.w	8019d4c <_reschedule_threads>
 8018746:	bf00      	nop
 8018748:	20000760 	.word	0x20000760
 801874c:	e000ed00 	.word	0xe000ed00

08018750 <_isr_wrapper>:
 *
 * @return N/A
 */
SECTION_FUNC(TEXT, _isr_wrapper)

	push {lr}		/* lr is now the first item on the stack */
 8018750:	b500      	push	{lr}
#endif /* CONFIG_ARMV6_M_ARMV8_M_BASELINE */

	cpsie i		/* re-enable interrupts (PRIMASK = 0) */
#endif

	mrs r0, IPSR	/* get exception number */
 8018752:	f3ef 8005 	mrs	r0, IPSR
#if defined(CONFIG_ARMV6_M_ARMV8_M_BASELINE)
	ldr r1, =16
	subs r0, r1	/* get IRQ number */
	lsls r0, #3	/* table is 8-byte wide */
#elif defined(CONFIG_ARMV7_M_ARMV8_M_MAINLINE)
	sub r0, r0, #16	/* get IRQ number */
 8018756:	f1a0 0010 	sub.w	r0, r0, #16
	lsl r0, r0, #3	/* table is 8-byte wide */
 801875a:	ea4f 00c0 	mov.w	r0, r0, lsl #3
#else
#error Unknown ARM architecture
#endif /* CONFIG_ARMV6_M_ARMV8_M_BASELINE */
	ldr r1, =_sw_isr_table
 801875e:	4904      	ldr	r1, [pc, #16]	; (8018770 <_isr_wrapper+0x20>)
	add r1, r1, r0	/* table entry: ISRs must have their MSB set to stay
 8018760:	4401      	add	r1, r0
			 * in thumb mode */

	ldm r1!,{r0,r3}	/* arg in r0, ISR in r3 */
 8018762:	c909      	ldmia	r1!, {r0, r3}
#else
	pop {lr}
#endif /* CONFIG_ARMV6_M_ARMV8_M_BASELINE */
	ldm sp!,{r0-r3} /* Restore r0 to r4 regs */
#endif
	blx r3		/* call ISR */
 8018764:	4798      	blx	r3

#if defined(CONFIG_ARMV6_M_ARMV8_M_BASELINE)
	pop {r3}
	mov lr, r3
#elif defined(CONFIG_ARMV7_M_ARMV8_M_MAINLINE)
	pop {lr}
 8018766:	f85d eb04 	ldr.w	lr, [sp], #4
#else
#error Unknown ARM architecture
#endif /* CONFIG_ARMV6_M_ARMV8_M_BASELINE */

	/* exception return is done in _IntExit() */
	b _IntExit
 801876a:	f7ff bd41 	b.w	80181f0 <_ExcExit>
 801876e:	0000      	.short	0x0000
	ldr r1, =_sw_isr_table
 8018770:	08000188 	.word	0x08000188

08018774 <__reset>:

    /* lock interrupts: will get unlocked when switch to main task */
#if defined(CONFIG_ARMV6_M_ARMV8_M_BASELINE)
    cpsid i
#elif defined(CONFIG_ARMV7_M_ARMV8_M_MAINLINE)
    movs.n r0, #_EXC_IRQ_DEFAULT_PRIO
 8018774:	2010      	movs	r0, #16
    msr BASEPRI, r0
 8018776:	f380 8811 	msr	BASEPRI, r0

    /*
     * Set PSP and use it to boot without using MSP, so that it
     * gets set to _interrupt_stack during initialisation.
     */
    ldr r0, =_interrupt_stack
 801877a:	4805      	ldr	r0, [pc, #20]	; (8018790 <__reset+0x1c>)
    ldr r1, =CONFIG_ISR_STACK_SIZE
 801877c:	f44f 6100 	mov.w	r1, #2048	; 0x800
    adds r0, r0, r1
 8018780:	1840      	adds	r0, r0, r1
    msr PSP, r0
 8018782:	f380 8809 	msr	PSP, r0
    movs.n r0, #2	/* switch to using PSP (bit1 of CONTROL reg) */
 8018786:	2002      	movs	r0, #2
    msr CONTROL, r0
 8018788:	f380 8814 	msr	CONTROL, r0

    b _PrepC
 801878c:	f000 b806 	b.w	801879c <_PrepC>
    ldr r0, =_interrupt_stack
 8018790:	20000e58 	.word	0x20000e58

08018794 <_SysNmiOnReset>:
_ASM_FILE_PROLOGUE

GTEXT(_SysNmiOnReset)

SECTION_FUNC(TEXT, _SysNmiOnReset)
    wfi
 8018794:	bf30      	wfi
    b _SysNmiOnReset
 8018796:	f7ff bffd 	b.w	8018794 <_SysNmiOnReset>
 801879a:	bf00      	nop

0801879c <_PrepC>:

#ifdef CONFIG_BOOT_TIME_MEASUREMENT
	extern u64_t __start_time_stamp;
#endif
void _PrepC(void)
{
 801879c:	b508      	push	{r3, lr}
	SCB->VTOR = VECTOR_ADDRESS & SCB_VTOR_TBLOFF_Msk;
 801879e:	4b07      	ldr	r3, [pc, #28]	; (80187bc <_PrepC+0x20>)
 80187a0:	4a07      	ldr	r2, [pc, #28]	; (80187c0 <_PrepC+0x24>)
 80187a2:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 80187a6:	6093      	str	r3, [r2, #8]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80187a8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80187ac:	f3bf 8f6f 	isb	sy
	relocate_vector_table();
	enable_floating_point();
	_bss_zero();
 80187b0:	f001 f954 	bl	8019a5c <_bss_zero>
	_data_copy();
 80187b4:	f001 f95c 	bl	8019a70 <_data_copy>
#ifdef CONFIG_BOOT_TIME_MEASUREMENT
	__start_time_stamp = 0;
#endif
	_Cstart();
 80187b8:	f001 f982 	bl	8019ac0 <_Cstart>
 80187bc:	08000000 	.word	0x08000000
 80187c0:	e000ed00 	.word	0xe000ed00

080187c4 <__nmi>:
 *
 * @return N/A
 */

void __nmi(void)
{
 80187c4:	b508      	push	{r3, lr}
	handler();
 80187c6:	f7ff ffe5 	bl	8018794 <_SysNmiOnReset>
	_ExcExit();
}
 80187ca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	_ExcExit();
 80187ce:	f7ff bd0f 	b.w	80181f0 <_ExcExit>
	...

080187d4 <arm_mpu_init>:
	}
}

static inline u8_t _get_num_regions(void)
{
	u32_t type = ARM_MPU_DEV->type;
 80187d4:	4b15      	ldr	r3, [pc, #84]	; (801882c <arm_mpu_init+0x58>)
static void _arm_mpu_config(void)
{
	u32_t r_index;

	/* ARM MPU supports up to 16 Regions */
	if (mpu_config.num_regions > _get_num_regions()) {
 80187d6:	4916      	ldr	r1, [pc, #88]	; (8018830 <arm_mpu_init+0x5c>)
	u32_t type = ARM_MPU_DEV->type;
 80187d8:	681a      	ldr	r2, [r3, #0]
	__DSB();
	__ISB();
}

static int arm_mpu_init(struct device *arg)
{
 80187da:	b530      	push	{r4, r5, lr}
	if (mpu_config.num_regions > _get_num_regions()) {
 80187dc:	680d      	ldr	r5, [r1, #0]
 80187de:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80187e2:	4295      	cmp	r5, r2
 80187e4:	d80f      	bhi.n	8018806 <arm_mpu_init+0x32>
	ARM_MPU_DEV->ctrl = 0;
 80187e6:	2200      	movs	r2, #0
 80187e8:	6848      	ldr	r0, [r1, #4]
 80187ea:	605a      	str	r2, [r3, #4]
	for (r_index = 0; r_index < mpu_config.num_regions; r_index++) {
 80187ec:	4295      	cmp	r5, r2
 80187ee:	f100 000c 	add.w	r0, r0, #12
 80187f2:	d10a      	bne.n	801880a <arm_mpu_init+0x36>
	ARM_MPU_DEV->ctrl = ARM_MPU_ENABLE | ARM_MPU_PRIVDEFENA;
 80187f4:	2205      	movs	r2, #5
 80187f6:	605a      	str	r2, [r3, #4]
	arm_mpu_enabled = 1;
 80187f8:	4b0e      	ldr	r3, [pc, #56]	; (8018834 <arm_mpu_init+0x60>)
 80187fa:	2201      	movs	r2, #1
 80187fc:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dsb 0xF":::"memory");
 80187fe:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8018802:	f3bf 8f6f 	isb	sy
	ARG_UNUSED(arg);

	_arm_mpu_config();

	return 0;
}
 8018806:	2000      	movs	r0, #0
 8018808:	bd30      	pop	{r4, r5, pc}
		_region_init(r_index,
 801880a:	f850 1c0c 	ldr.w	r1, [r0, #-12]
 801880e:	f850 4c04 	ldr.w	r4, [r0, #-4]
	ARM_MPU_DEV->rnr = index;
 8018812:	609a      	str	r2, [r3, #8]
	ARM_MPU_DEV->rbar = (region_addr & REGION_BASE_ADDR_MASK)
 8018814:	f021 011f 	bic.w	r1, r1, #31
				| REGION_VALID | index;
 8018818:	f041 0110 	orr.w	r1, r1, #16
 801881c:	4311      	orrs	r1, r2
	ARM_MPU_DEV->rasr = region_attr | REGION_ENABLE;
 801881e:	f044 0401 	orr.w	r4, r4, #1
	ARM_MPU_DEV->rbar = (region_addr & REGION_BASE_ADDR_MASK)
 8018822:	60d9      	str	r1, [r3, #12]
	for (r_index = 0; r_index < mpu_config.num_regions; r_index++) {
 8018824:	3201      	adds	r2, #1
	ARM_MPU_DEV->rasr = region_attr | REGION_ENABLE;
 8018826:	611c      	str	r4, [r3, #16]
 8018828:	e7e0      	b.n	80187ec <arm_mpu_init+0x18>
 801882a:	bf00      	nop
 801882c:	e000ed90 	.word	0xe000ed90
 8018830:	20003300 	.word	0x20003300
 8018834:	20000519 	.word	0x20000519

08018838 <_nop_char_out>:
{
	ARG_UNUSED(c);

	/* do nothing */
	return 0;
}
 8018838:	2000      	movs	r0, #0
 801883a:	4770      	bx	lr

0801883c <char_out>:

static int char_out(int c, void *ctx_p)
{
	struct out_context *ctx = ctx_p;

	ctx->count++;
 801883c:	680b      	ldr	r3, [r1, #0]
 801883e:	3301      	adds	r3, #1
 8018840:	600b      	str	r3, [r1, #0]
	return _char_out(c);
 8018842:	4b01      	ldr	r3, [pc, #4]	; (8018848 <char_out+0xc>)
 8018844:	681b      	ldr	r3, [r3, #0]
 8018846:	4718      	bx	r3
 8018848:	20003344 	.word	0x20003344

0801884c <_printk_dec_ulong>:
 * @return N/A
 */
static void _printk_dec_ulong(out_func_t out, void *ctx,
			      const unsigned long num, enum pad_type padding,
			      int min_width)
{
 801884c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018850:	b085      	sub	sp, #20
 8018852:	469b      	mov	fp, r3
 8018854:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018856:	f8df a090 	ldr.w	sl, [pc, #144]	; 80188e8 <_printk_dec_ulong+0x9c>
 801885a:	2c01      	cmp	r4, #1
 801885c:	bfb8      	it	lt
 801885e:	2401      	movlt	r4, #1
 8018860:	2b01      	cmp	r3, #1
 8018862:	bf0c      	ite	eq
 8018864:	2330      	moveq	r3, #48	; 0x30
 8018866:	2320      	movne	r3, #32
 8018868:	4615      	mov	r5, r2
 801886a:	4680      	mov	r8, r0
 801886c:	4689      	mov	r9, r1
 801886e:	9401      	str	r4, [sp, #4]
 8018870:	9302      	str	r3, [sp, #8]
 8018872:	2601      	movs	r6, #1
 8018874:	270a      	movs	r7, #10
 8018876:	2200      	movs	r2, #0
 8018878:	f10a 0401 	add.w	r4, sl, #1
	if (min_width <= 0) {
		min_width = 1;
	}

	while (pos >= 9) {
		if (found_largest_digit || remainder > pos) {
 801887c:	b90a      	cbnz	r2, 8018882 <_printk_dec_ulong+0x36>
 801887e:	45aa      	cmp	sl, r5
 8018880:	d21f      	bcs.n	80188c2 <_printk_dec_ulong+0x76>
			found_largest_digit = 1;
			out((int)((remainder / (pos + 1)) + 48), ctx);
 8018882:	fbb5 f0f4 	udiv	r0, r5, r4
 8018886:	4649      	mov	r1, r9
 8018888:	3030      	adds	r0, #48	; 0x30
 801888a:	47c0      	blx	r8
			digits++;
 801888c:	3601      	adds	r6, #1
			found_largest_digit = 1;
 801888e:	2201      	movs	r2, #1
		} else if (remaining <= min_width
				&& padding < PAD_SPACE_AFTER) {
			out((int)(padding == PAD_ZERO_BEFORE ? '0' : ' '), ctx);
			digits++;
		}
		remaining--;
 8018890:	3f01      	subs	r7, #1
	while (pos >= 9) {
 8018892:	2f01      	cmp	r7, #1
		remainder %= (pos + 1);
 8018894:	fbb5 f1f4 	udiv	r1, r5, r4
		pos /= 10;
 8018898:	f04f 030a 	mov.w	r3, #10
		remainder %= (pos + 1);
 801889c:	fb04 5511 	mls	r5, r4, r1, r5
		pos /= 10;
 80188a0:	fbba faf3 	udiv	sl, sl, r3
	while (pos >= 9) {
 80188a4:	d1e8      	bne.n	8018878 <_printk_dec_ulong+0x2c>
	}
	out((int)(remainder + 48), ctx);
 80188a6:	4649      	mov	r1, r9
 80188a8:	f105 0030 	add.w	r0, r5, #48	; 0x30
 80188ac:	47c0      	blx	r8

	if (padding == PAD_SPACE_AFTER) {
 80188ae:	f1bb 0f03 	cmp.w	fp, #3
 80188b2:	d103      	bne.n	80188bc <_printk_dec_ulong+0x70>
		remaining = min_width - digits;
 80188b4:	9b01      	ldr	r3, [sp, #4]
 80188b6:	1b9c      	subs	r4, r3, r6
		while (remaining-- > 0) {
 80188b8:	2c00      	cmp	r4, #0
 80188ba:	dc0f      	bgt.n	80188dc <_printk_dec_ulong+0x90>
			out(' ', ctx);
		}
	}
}
 80188bc:	b005      	add	sp, #20
 80188be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		} else if (remaining <= min_width
 80188c2:	9b01      	ldr	r3, [sp, #4]
 80188c4:	42bb      	cmp	r3, r7
 80188c6:	dbe3      	blt.n	8018890 <_printk_dec_ulong+0x44>
				&& padding < PAD_SPACE_AFTER) {
 80188c8:	f1bb 0f02 	cmp.w	fp, #2
 80188cc:	d8e0      	bhi.n	8018890 <_printk_dec_ulong+0x44>
			out((int)(padding == PAD_ZERO_BEFORE ? '0' : ' '), ctx);
 80188ce:	4649      	mov	r1, r9
 80188d0:	9802      	ldr	r0, [sp, #8]
 80188d2:	9203      	str	r2, [sp, #12]
			digits++;
 80188d4:	3601      	adds	r6, #1
			out((int)(padding == PAD_ZERO_BEFORE ? '0' : ' '), ctx);
 80188d6:	47c0      	blx	r8
			digits++;
 80188d8:	9a03      	ldr	r2, [sp, #12]
 80188da:	e7d9      	b.n	8018890 <_printk_dec_ulong+0x44>
			out(' ', ctx);
 80188dc:	4649      	mov	r1, r9
 80188de:	2020      	movs	r0, #32
 80188e0:	47c0      	blx	r8
 80188e2:	3c01      	subs	r4, #1
 80188e4:	e7e8      	b.n	80188b8 <_printk_dec_ulong+0x6c>
 80188e6:	bf00      	nop
 80188e8:	3b9ac9ff 	.word	0x3b9ac9ff

080188ec <__printk_hook_install>:
	_char_out = fn;
 80188ec:	4b01      	ldr	r3, [pc, #4]	; (80188f4 <__printk_hook_install+0x8>)
 80188ee:	6018      	str	r0, [r3, #0]
}
 80188f0:	4770      	bx	lr
 80188f2:	bf00      	nop
 80188f4:	20003344 	.word	0x20003344

080188f8 <_vprintk>:
{
 80188f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80188fc:	b089      	sub	sp, #36	; 0x24
 80188fe:	461c      	mov	r4, r3
	int long_ctr = 0;
 8018900:	f04f 0a00 	mov.w	sl, #0
 8018904:	1e53      	subs	r3, r2, #1
{
 8018906:	4606      	mov	r6, r0
 8018908:	460f      	mov	r7, r1
 801890a:	9304      	str	r3, [sp, #16]
	int min_width = -1;
 801890c:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
	enum pad_type padding = PAD_NONE;
 8018910:	46d0      	mov	r8, sl
			might_format = 0;
 8018912:	2500      	movs	r5, #0
				break;
 8018914:	e005      	b.n	8018922 <_vprintk+0x2a>
		if (!might_format) {
 8018916:	b96d      	cbnz	r5, 8018934 <_vprintk+0x3c>
			if (*fmt != '%') {
 8018918:	2825      	cmp	r0, #37	; 0x25
 801891a:	f000 8112 	beq.w	8018b42 <_vprintk+0x24a>
				out((int)*fmt, ctx);
 801891e:	4639      	mov	r1, r7
 8018920:	47b0      	blx	r6
	while (*fmt) {
 8018922:	9b04      	ldr	r3, [sp, #16]
 8018924:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8018928:	9304      	str	r3, [sp, #16]
 801892a:	2800      	cmp	r0, #0
 801892c:	d1f3      	bne.n	8018916 <_vprintk+0x1e>
}
 801892e:	b009      	add	sp, #36	; 0x24
 8018930:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			switch (*fmt) {
 8018934:	2864      	cmp	r0, #100	; 0x64
 8018936:	d061      	beq.n	80189fc <_vprintk+0x104>
 8018938:	d819      	bhi.n	801896e <_vprintk+0x76>
 801893a:	2839      	cmp	r0, #57	; 0x39
 801893c:	d80a      	bhi.n	8018954 <_vprintk+0x5c>
 801893e:	2831      	cmp	r0, #49	; 0x31
 8018940:	d250      	bcs.n	80189e4 <_vprintk+0xec>
 8018942:	282d      	cmp	r0, #45	; 0x2d
 8018944:	d03c      	beq.n	80189c0 <_vprintk+0xc8>
 8018946:	2830      	cmp	r0, #48	; 0x30
 8018948:	d03d      	beq.n	80189c6 <_vprintk+0xce>
 801894a:	2825      	cmp	r0, #37	; 0x25
 801894c:	d108      	bne.n	8018960 <_vprintk+0x68>
				out((int)'%', ctx);
 801894e:	4639      	mov	r1, r7
				out((int)*fmt, ctx);
 8018950:	47b0      	blx	r6
 8018952:	e7de      	b.n	8018912 <_vprintk+0x1a>
			switch (*fmt) {
 8018954:	2858      	cmp	r0, #88	; 0x58
 8018956:	f000 8088 	beq.w	8018a6a <_vprintk+0x172>
 801895a:	2863      	cmp	r0, #99	; 0x63
 801895c:	f000 80eb 	beq.w	8018b36 <_vprintk+0x23e>
				out((int)'%', ctx);
 8018960:	4639      	mov	r1, r7
 8018962:	2025      	movs	r0, #37	; 0x25
 8018964:	47b0      	blx	r6
				out((int)*fmt, ctx);
 8018966:	9b04      	ldr	r3, [sp, #16]
 8018968:	4639      	mov	r1, r7
 801896a:	7818      	ldrb	r0, [r3, #0]
 801896c:	e7f0      	b.n	8018950 <_vprintk+0x58>
			switch (*fmt) {
 801896e:	2870      	cmp	r0, #112	; 0x70
 8018970:	d071      	beq.n	8018a56 <_vprintk+0x15e>
 8018972:	d806      	bhi.n	8018982 <_vprintk+0x8a>
 8018974:	2869      	cmp	r0, #105	; 0x69
 8018976:	d041      	beq.n	80189fc <_vprintk+0x104>
 8018978:	286c      	cmp	r0, #108	; 0x6c
 801897a:	d03c      	beq.n	80189f6 <_vprintk+0xfe>
 801897c:	2868      	cmp	r0, #104	; 0x68
 801897e:	d0d0      	beq.n	8018922 <_vprintk+0x2a>
 8018980:	e7ee      	b.n	8018960 <_vprintk+0x68>
 8018982:	2875      	cmp	r0, #117	; 0x75
 8018984:	d057      	beq.n	8018a36 <_vprintk+0x13e>
 8018986:	d817      	bhi.n	80189b8 <_vprintk+0xc0>
 8018988:	2873      	cmp	r0, #115	; 0x73
 801898a:	d1e9      	bne.n	8018960 <_vprintk+0x68>
				char *s = va_arg(ap, char *);
 801898c:	6823      	ldr	r3, [r4, #0]
 801898e:	f104 0b04 	add.w	fp, r4, #4
 8018992:	461c      	mov	r4, r3
				while (*s)
 8018994:	4625      	mov	r5, r4
 8018996:	f815 0b01 	ldrb.w	r0, [r5], #1
 801899a:	2800      	cmp	r0, #0
 801899c:	f040 80c0 	bne.w	8018b20 <_vprintk+0x228>
				if (padding == PAD_SPACE_AFTER) {
 80189a0:	f1b8 0f03 	cmp.w	r8, #3
 80189a4:	f040 80d6 	bne.w	8018b54 <_vprintk+0x25c>
					int remaining = min_width - (s - start);
 80189a8:	1ae4      	subs	r4, r4, r3
 80189aa:	eba9 0404 	sub.w	r4, r9, r4
					while (remaining-- > 0) {
 80189ae:	2c00      	cmp	r4, #0
 80189b0:	f300 80bc 	bgt.w	8018b2c <_vprintk+0x234>
				char *s = va_arg(ap, char *);
 80189b4:	465c      	mov	r4, fp
 80189b6:	e7ac      	b.n	8018912 <_vprintk+0x1a>
			switch (*fmt) {
 80189b8:	2878      	cmp	r0, #120	; 0x78
 80189ba:	d056      	beq.n	8018a6a <_vprintk+0x172>
 80189bc:	287a      	cmp	r0, #122	; 0x7a
 80189be:	e7de      	b.n	801897e <_vprintk+0x86>
				padding = PAD_SPACE_AFTER;
 80189c0:	f04f 0803 	mov.w	r8, #3
 80189c4:	e7ad      	b.n	8018922 <_vprintk+0x2a>
				if (min_width < 0 && padding == PAD_NONE) {
 80189c6:	f1b9 0f00 	cmp.w	r9, #0
 80189ca:	da0e      	bge.n	80189ea <_vprintk+0xf2>
 80189cc:	f1b8 0f00 	cmp.w	r8, #0
 80189d0:	f000 80bd 	beq.w	8018b4e <_vprintk+0x256>
					min_width = *fmt - '0';
 80189d4:	f1a0 0930 	sub.w	r9, r0, #48	; 0x30
					padding = PAD_SPACE_BEFORE;
 80189d8:	f1b8 0f00 	cmp.w	r8, #0
 80189dc:	bf08      	it	eq
 80189de:	f04f 0802 	moveq.w	r8, #2
 80189e2:	e79e      	b.n	8018922 <_vprintk+0x2a>
				if (min_width < 0) {
 80189e4:	f1b9 0f00 	cmp.w	r9, #0
 80189e8:	dbf4      	blt.n	80189d4 <_vprintk+0xdc>
					min_width = 10 * min_width + *fmt - '0';
 80189ea:	230a      	movs	r3, #10
 80189ec:	fb03 0909 	mla	r9, r3, r9, r0
 80189f0:	f1a9 0930 	sub.w	r9, r9, #48	; 0x30
 80189f4:	e7f0      	b.n	80189d8 <_vprintk+0xe0>
				long_ctr++;
 80189f6:	f10a 0a01 	add.w	sl, sl, #1
 80189fa:	e792      	b.n	8018922 <_vprintk+0x2a>
				if (long_ctr < 2) {
 80189fc:	f1ba 0f01 	cmp.w	sl, #1
					d = (long)va_arg(ap, long long);
 8018a00:	bfc5      	ittet	gt
 8018a02:	3407      	addgt	r4, #7
 8018a04:	f024 0307 	bicgt.w	r3, r4, #7
					d = va_arg(ap, long);
 8018a08:	6825      	ldrle	r5, [r4, #0]
					d = (long)va_arg(ap, long long);
 8018a0a:	681d      	ldrgt	r5, [r3, #0]
					d = va_arg(ap, long);
 8018a0c:	bfd4      	ite	le
 8018a0e:	3404      	addle	r4, #4
					d = (long)va_arg(ap, long long);
 8018a10:	f103 0408 	addgt.w	r4, r3, #8
				if (d < 0) {
 8018a14:	2d00      	cmp	r5, #0
 8018a16:	da05      	bge.n	8018a24 <_vprintk+0x12c>
					out((int)'-', ctx);
 8018a18:	4639      	mov	r1, r7
 8018a1a:	202d      	movs	r0, #45	; 0x2d
 8018a1c:	47b0      	blx	r6
					d = -d;
 8018a1e:	426d      	negs	r5, r5
					min_width--;
 8018a20:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
				_printk_dec_ulong(out, ctx, d, padding,
 8018a24:	f8cd 9000 	str.w	r9, [sp]
 8018a28:	4643      	mov	r3, r8
 8018a2a:	462a      	mov	r2, r5
 8018a2c:	4639      	mov	r1, r7
 8018a2e:	4630      	mov	r0, r6
 8018a30:	f7ff ff0c 	bl	801884c <_printk_dec_ulong>
 8018a34:	e76d      	b.n	8018912 <_vprintk+0x1a>
				if (long_ctr < 2) {
 8018a36:	f1ba 0f01 	cmp.w	sl, #1
					u = (unsigned long)va_arg(ap,
 8018a3a:	bfc5      	ittet	gt
 8018a3c:	3407      	addgt	r4, #7
 8018a3e:	f024 0307 	bicgt.w	r3, r4, #7
					u = va_arg(ap, unsigned long);
 8018a42:	6822      	ldrle	r2, [r4, #0]
					u = (unsigned long)va_arg(ap,
 8018a44:	681a      	ldrgt	r2, [r3, #0]
				_printk_dec_ulong(out, ctx, u, padding,
 8018a46:	f8cd 9000 	str.w	r9, [sp]
					u = (unsigned long)va_arg(ap,
 8018a4a:	bfcc      	ite	gt
 8018a4c:	f103 0408 	addgt.w	r4, r3, #8
					u = va_arg(ap, unsigned long);
 8018a50:	3404      	addle	r4, #4
				_printk_dec_ulong(out, ctx, u, padding,
 8018a52:	4643      	mov	r3, r8
 8018a54:	e7ea      	b.n	8018a2c <_vprintk+0x134>
				  out('0', ctx);
 8018a56:	4639      	mov	r1, r7
 8018a58:	2030      	movs	r0, #48	; 0x30
 8018a5a:	47b0      	blx	r6
				  out('x', ctx);
 8018a5c:	4639      	mov	r1, r7
 8018a5e:	2078      	movs	r0, #120	; 0x78
 8018a60:	47b0      	blx	r6
				  min_width = 8;
 8018a62:	f04f 0908 	mov.w	r9, #8
				  padding = PAD_ZERO_BEFORE;
 8018a66:	f04f 0801 	mov.w	r8, #1
				if (long_ctr < 2) {
 8018a6a:	f1ba 0f01 	cmp.w	sl, #1
					x = (unsigned long)va_arg(ap,
 8018a6e:	bfc7      	ittee	gt
 8018a70:	3407      	addgt	r4, #7
 8018a72:	f024 0307 	bicgt.w	r3, r4, #7
					x = va_arg(ap, unsigned long);
 8018a76:	6823      	ldrle	r3, [r4, #0]
 8018a78:	9305      	strle	r3, [sp, #20]
					x = (unsigned long)va_arg(ap,
 8018a7a:	bfc2      	ittt	gt
 8018a7c:	f103 0408 	addgt.w	r4, r3, #8
 8018a80:	681b      	ldrgt	r3, [r3, #0]
 8018a82:	9305      	strgt	r3, [sp, #20]
	int remaining = 8; /* 8 digits max */
 8018a84:	f04f 0208 	mov.w	r2, #8
	int digits = 0;
 8018a88:	f04f 0300 	mov.w	r3, #0
					x = va_arg(ap, unsigned long);
 8018a8c:	bfd8      	it	le
 8018a8e:	3404      	addle	r4, #4
	int digits = 0;
 8018a90:	9303      	str	r3, [sp, #12]
	int found_largest_digit = 0;
 8018a92:	9307      	str	r3, [sp, #28]
	int size = sizeof(num) * 2;
 8018a94:	4693      	mov	fp, r2
		char nibble = (num >> ((size - 1) << 2) & 0xf);
 8018a96:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8018a9a:	9b05      	ldr	r3, [sp, #20]
 8018a9c:	ea4f 008b 	mov.w	r0, fp, lsl #2
 8018aa0:	fa23 f000 	lsr.w	r0, r3, r0
		if (nibble || found_largest_digit || size == 1) {
 8018aa4:	f010 000f 	ands.w	r0, r0, #15
 8018aa8:	d109      	bne.n	8018abe <_vprintk+0x1c6>
 8018aaa:	9b07      	ldr	r3, [sp, #28]
 8018aac:	b913      	cbnz	r3, 8018ab4 <_vprintk+0x1bc>
 8018aae:	f1bb 0f00 	cmp.w	fp, #0
 8018ab2:	d124      	bne.n	8018afe <_vprintk+0x206>
			nibble += nibble > 9 ? 87 : 48;
 8018ab4:	f04f 0c30 	mov.w	ip, #48	; 0x30
 8018ab8:	e007      	b.n	8018aca <_vprintk+0x1d2>
	for (; size; size--) {
 8018aba:	9a06      	ldr	r2, [sp, #24]
 8018abc:	e7eb      	b.n	8018a96 <_vprintk+0x19e>
			nibble += nibble > 9 ? 87 : 48;
 8018abe:	2809      	cmp	r0, #9
 8018ac0:	bf8c      	ite	hi
 8018ac2:	f04f 0c57 	movhi.w	ip, #87	; 0x57
 8018ac6:	f04f 0c30 	movls.w	ip, #48	; 0x30
			out((int)nibble, ctx);
 8018aca:	4639      	mov	r1, r7
 8018acc:	4460      	add	r0, ip
 8018ace:	9206      	str	r2, [sp, #24]
 8018ad0:	47b0      	blx	r6
			digits++;
 8018ad2:	9b03      	ldr	r3, [sp, #12]
			found_largest_digit = 1;
 8018ad4:	9507      	str	r5, [sp, #28]
			digits++;
 8018ad6:	3301      	adds	r3, #1
 8018ad8:	9303      	str	r3, [sp, #12]
	for (; size; size--) {
 8018ada:	f1bb 0f00 	cmp.w	fp, #0
 8018ade:	d1ec      	bne.n	8018aba <_vprintk+0x1c2>
	if (padding == PAD_SPACE_AFTER) {
 8018ae0:	f1b8 0f03 	cmp.w	r8, #3
 8018ae4:	f47f af15 	bne.w	8018912 <_vprintk+0x1a>
		remaining = min_width * 2 - digits;
 8018ae8:	9b03      	ldr	r3, [sp, #12]
 8018aea:	ebc3 0549 	rsb	r5, r3, r9, lsl #1
		while (remaining-- > 0) {
 8018aee:	2d00      	cmp	r5, #0
 8018af0:	f77f af0f 	ble.w	8018912 <_vprintk+0x1a>
			out(' ', ctx);
 8018af4:	4639      	mov	r1, r7
 8018af6:	2020      	movs	r0, #32
 8018af8:	47b0      	blx	r6
 8018afa:	3d01      	subs	r5, #1
 8018afc:	e7f7      	b.n	8018aee <_vprintk+0x1f6>
		if (remaining-- <= min_width) {
 8018afe:	1e53      	subs	r3, r2, #1
 8018b00:	4591      	cmp	r9, r2
 8018b02:	9306      	str	r3, [sp, #24]
 8018b04:	dbe9      	blt.n	8018ada <_vprintk+0x1e2>
			if (padding == PAD_ZERO_BEFORE) {
 8018b06:	f1b8 0f01 	cmp.w	r8, #1
 8018b0a:	d103      	bne.n	8018b14 <_vprintk+0x21c>
				out('0', ctx);
 8018b0c:	4639      	mov	r1, r7
 8018b0e:	2030      	movs	r0, #48	; 0x30
				out(' ', ctx);
 8018b10:	47b0      	blx	r6
 8018b12:	e7e2      	b.n	8018ada <_vprintk+0x1e2>
			} else if (padding == PAD_SPACE_BEFORE) {
 8018b14:	f1b8 0f02 	cmp.w	r8, #2
 8018b18:	d1df      	bne.n	8018ada <_vprintk+0x1e2>
				out(' ', ctx);
 8018b1a:	4639      	mov	r1, r7
 8018b1c:	2020      	movs	r0, #32
 8018b1e:	e7f7      	b.n	8018b10 <_vprintk+0x218>
					out((int)(*s++), ctx);
 8018b20:	4639      	mov	r1, r7
 8018b22:	9303      	str	r3, [sp, #12]
 8018b24:	462c      	mov	r4, r5
 8018b26:	47b0      	blx	r6
 8018b28:	9b03      	ldr	r3, [sp, #12]
 8018b2a:	e733      	b.n	8018994 <_vprintk+0x9c>
						out(' ', ctx);
 8018b2c:	4639      	mov	r1, r7
 8018b2e:	2020      	movs	r0, #32
 8018b30:	47b0      	blx	r6
 8018b32:	3c01      	subs	r4, #1
 8018b34:	e73b      	b.n	80189ae <_vprintk+0xb6>
				out(c, ctx);
 8018b36:	6820      	ldr	r0, [r4, #0]
				int c = va_arg(ap, int);
 8018b38:	1d25      	adds	r5, r4, #4
				out(c, ctx);
 8018b3a:	4639      	mov	r1, r7
 8018b3c:	47b0      	blx	r6
				int c = va_arg(ap, int);
 8018b3e:	462c      	mov	r4, r5
 8018b40:	e6e7      	b.n	8018912 <_vprintk+0x1a>
				long_ctr = 0;
 8018b42:	46aa      	mov	sl, r5
				padding = PAD_NONE;
 8018b44:	46a8      	mov	r8, r5
				min_width = -1;
 8018b46:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
				might_format = 1;
 8018b4a:	2501      	movs	r5, #1
 8018b4c:	e6e9      	b.n	8018922 <_vprintk+0x2a>
					padding = PAD_ZERO_BEFORE;
 8018b4e:	f04f 0801 	mov.w	r8, #1
 8018b52:	e6e6      	b.n	8018922 <_vprintk+0x2a>
				char *s = va_arg(ap, char *);
 8018b54:	465c      	mov	r4, fp
			might_format = 0;
 8018b56:	4605      	mov	r5, r0
 8018b58:	e6e3      	b.n	8018922 <_vprintk+0x2a>
	...

08018b5c <vprintk>:
{
 8018b5c:	b513      	push	{r0, r1, r4, lr}
	struct out_context ctx = { 0 };
 8018b5e:	ac02      	add	r4, sp, #8
 8018b60:	2300      	movs	r3, #0
 8018b62:	f844 3d04 	str.w	r3, [r4, #-4]!
	_vprintk(char_out, &ctx, fmt, ap);
 8018b66:	4602      	mov	r2, r0
 8018b68:	460b      	mov	r3, r1
 8018b6a:	4803      	ldr	r0, [pc, #12]	; (8018b78 <vprintk+0x1c>)
 8018b6c:	4621      	mov	r1, r4
 8018b6e:	f7ff fec3 	bl	80188f8 <_vprintk>
}
 8018b72:	9801      	ldr	r0, [sp, #4]
 8018b74:	b002      	add	sp, #8
 8018b76:	bd10      	pop	{r4, pc}
 8018b78:	0801883d 	.word	0x0801883d

08018b7c <printk>:
{
 8018b7c:	b40f      	push	{r0, r1, r2, r3}
 8018b7e:	b507      	push	{r0, r1, r2, lr}
 8018b80:	a904      	add	r1, sp, #16
 8018b82:	f851 0b04 	ldr.w	r0, [r1], #4
	va_start(ap, fmt);
 8018b86:	9101      	str	r1, [sp, #4]
	ret = vprintk(fmt, ap);
 8018b88:	f7ff ffe8 	bl	8018b5c <vprintk>
}
 8018b8c:	b003      	add	sp, #12
 8018b8e:	f85d eb04 	ldr.w	lr, [sp], #4
 8018b92:	b004      	add	sp, #16
 8018b94:	4770      	bx	lr

08018b96 <_ConfigAbsSyms>:
GEN_ABSOLUTE_SYM(CONFIG_USE_STM32_HAL_TIM, 1);
GEN_ABSOLUTE_SYM(CONFIG_USE_STM32_LL_UTILS, 1);
GEN_ABSOLUTE_SYM(CONFIG_TEST_EXTRA_STACKSIZE, 0);
GEN_ABSOLUTE_SYM(CONFIG_NUM_IRQS, 82);

GEN_ABS_SYM_END
 8018b96:	4770      	bx	lr

08018b98 <TIM_OC1_SetConfig>:
  uint32_t tmpccmrx = 0U;
  uint32_t tmpccer = 0U;
  uint32_t tmpcr2 = 0U;  

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8018b98:	6a03      	ldr	r3, [r0, #32]
 8018b9a:	f023 0301 	bic.w	r3, r3, #1
 8018b9e:	6203      	str	r3, [r0, #32]
  
  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8018ba0:	6a03      	ldr	r3, [r0, #32]
{
 8018ba2:	b570      	push	{r4, r5, r6, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 = TIMx->CR2;
 8018ba4:	6844      	ldr	r4, [r0, #4]
  
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8018ba6:	6982      	ldr	r2, [r0, #24]
    
  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
  tmpccmrx &= ~TIM_CCMR1_CC1S;
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8018ba8:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 8018baa:	f022 0273 	bic.w	r2, r2, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 8018bae:	432a      	orrs	r2, r5
  
  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 8018bb0:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC1P;
 8018bb2:	f023 0302 	bic.w	r3, r3, #2
  tmpccer |= OC_Config->OCPolarity;
 8018bb6:	432b      	orrs	r3, r5

    
  if(IS_TIM_ADVANCED_INSTANCE(TIMx) != RESET)
 8018bb8:	4d0c      	ldr	r5, [pc, #48]	; (8018bec <TIM_OC1_SetConfig+0x54>)
 8018bba:	42a8      	cmp	r0, r5
 8018bbc:	d003      	beq.n	8018bc6 <TIM_OC1_SetConfig+0x2e>
 8018bbe:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8018bc2:	42a8      	cmp	r0, r5
 8018bc4:	d10b      	bne.n	8018bde <TIM_OC1_SetConfig+0x46>
  {   
    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 8018bc6:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC1NP;
 8018bc8:	f023 0308 	bic.w	r3, r3, #8
    tmpccer |= OC_Config->OCNPolarity;
 8018bcc:	432b      	orrs	r3, r5
    tmpcr2 &= ~TIM_CR2_OIS1;
    tmpcr2 &= ~TIM_CR2_OIS1N;
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 8018bce:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8018bd2:	f424 7440 	bic.w	r4, r4, #768	; 0x300
    tmpcr2 |= OC_Config->OCNIdleState;
 8018bd6:	4335      	orrs	r5, r6
    tmpccer &= ~TIM_CCER_CC1NE;
 8018bd8:	f023 0304 	bic.w	r3, r3, #4
    tmpcr2 |= OC_Config->OCNIdleState;
 8018bdc:	432c      	orrs	r4, r5
  }
  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8018bde:	6044      	str	r4, [r0, #4]
  
  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8018be0:	6182      	str	r2, [r0, #24]
  
  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 8018be2:	684a      	ldr	r2, [r1, #4]
 8018be4:	6342      	str	r2, [r0, #52]	; 0x34
  
  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;  
 8018be6:	6203      	str	r3, [r0, #32]
} 
 8018be8:	bd70      	pop	{r4, r5, r6, pc}
 8018bea:	bf00      	nop
 8018bec:	40010000 	.word	0x40010000

08018bf0 <TIM_OC3_SetConfig>:
  uint32_t tmpccmrx = 0U;
  uint32_t tmpccer = 0U;
  uint32_t tmpcr2 = 0U;   

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8018bf0:	6a03      	ldr	r3, [r0, #32]
 8018bf2:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8018bf6:	6203      	str	r3, [r0, #32]
  
  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8018bf8:	6a03      	ldr	r3, [r0, #32]
{
 8018bfa:	b570      	push	{r4, r5, r6, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 = TIMx->CR2;
 8018bfc:	6844      	ldr	r4, [r0, #4]
  
  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8018bfe:	69c2      	ldr	r2, [r0, #28]
    
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
  tmpccmrx &= ~TIM_CCMR2_CC3S;  
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8018c00:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR2_CC3S;  
 8018c02:	f022 0273 	bic.w	r2, r2, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 8018c06:	432a      	orrs	r2, r5
  
  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8018c08:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC3P;
 8018c0a:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8018c0e:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    
  if(IS_TIM_ADVANCED_INSTANCE(TIMx) != RESET)
 8018c12:	4d0d      	ldr	r5, [pc, #52]	; (8018c48 <TIM_OC3_SetConfig+0x58>)
 8018c14:	42a8      	cmp	r0, r5
 8018c16:	d003      	beq.n	8018c20 <TIM_OC3_SetConfig+0x30>
 8018c18:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8018c1c:	42a8      	cmp	r0, r5
 8018c1e:	d10d      	bne.n	8018c3c <TIM_OC3_SetConfig+0x4c>
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));
    
    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8018c20:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC3NP;
 8018c22:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8018c26:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    tmpcr2 &= ~TIM_CR2_OIS3;
    tmpcr2 &= ~TIM_CR2_OIS3N;
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8018c2a:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 8018c2e:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8018c32:	4335      	orrs	r5, r6
    tmpccer &= ~TIM_CCER_CC3NE;
 8018c34:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8018c38:	ea44 1405 	orr.w	r4, r4, r5, lsl #4
  }
  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8018c3c:	6044      	str	r4, [r0, #4]
  
  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8018c3e:	61c2      	str	r2, [r0, #28]
  
  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 8018c40:	684a      	ldr	r2, [r1, #4]
 8018c42:	63c2      	str	r2, [r0, #60]	; 0x3c
  
  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8018c44:	6203      	str	r3, [r0, #32]
}
 8018c46:	bd70      	pop	{r4, r5, r6, pc}
 8018c48:	40010000 	.word	0x40010000

08018c4c <TIM_OC4_SetConfig>:
  uint32_t tmpccmrx = 0U;
  uint32_t tmpccer = 0U;
  uint32_t tmpcr2 = 0U;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8018c4c:	6a03      	ldr	r3, [r0, #32]
 8018c4e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8018c52:	6203      	str	r3, [r0, #32]
  
  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8018c54:	6a03      	ldr	r3, [r0, #32]
{
 8018c56:	b530      	push	{r4, r5, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 = TIMx->CR2;
 8018c58:	6844      	ldr	r4, [r0, #4]
  
  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8018c5a:	69c2      	ldr	r2, [r0, #28]
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;
  
  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8018c5c:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8018c5e:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8018c62:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  
  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8018c66:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC4P;
 8018c68:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8018c6c:	ea43 3305 	orr.w	r3, r3, r5, lsl #12
   
  /*if((TIMx == TIM1) || (TIMx == TIM8))*/
  if(IS_TIM_ADVANCED_INSTANCE(TIMx) != RESET)
 8018c70:	4d08      	ldr	r5, [pc, #32]	; (8018c94 <TIM_OC4_SetConfig+0x48>)
 8018c72:	42a8      	cmp	r0, r5
 8018c74:	d003      	beq.n	8018c7e <TIM_OC4_SetConfig+0x32>
 8018c76:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8018c7a:	42a8      	cmp	r0, r5
 8018c7c:	d104      	bne.n	8018c88 <TIM_OC4_SetConfig+0x3c>
  {
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));
    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8018c7e:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS4;
 8018c80:	f424 4480 	bic.w	r4, r4, #16384	; 0x4000
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8018c84:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
  }
  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8018c88:	6044      	str	r4, [r0, #4]
  
  /* Write to TIMx CCMR2 */  
  TIMx->CCMR2 = tmpccmrx;
 8018c8a:	61c2      	str	r2, [r0, #28]
    
  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 8018c8c:	684a      	ldr	r2, [r1, #4]
 8018c8e:	6402      	str	r2, [r0, #64]	; 0x40
  
  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8018c90:	6203      	str	r3, [r0, #32]
}
 8018c92:	bd30      	pop	{r4, r5, pc}
 8018c94:	40010000 	.word	0x40010000

08018c98 <HAL_TIM_PWM_MspInit>:
 8018c98:	4770      	bx	lr
	...

08018c9c <TIM_Base_SetConfig>:
  if(IS_TIM_CC3_INSTANCE(TIMx) != RESET)   
 8018c9c:	4a2e      	ldr	r2, [pc, #184]	; (8018d58 <TIM_Base_SetConfig+0xbc>)
  tmpcr1 = TIMx->CR1;
 8018c9e:	6803      	ldr	r3, [r0, #0]
  if(IS_TIM_CC3_INSTANCE(TIMx) != RESET)   
 8018ca0:	4290      	cmp	r0, r2
 8018ca2:	d012      	beq.n	8018cca <TIM_Base_SetConfig+0x2e>
 8018ca4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8018ca8:	d00f      	beq.n	8018cca <TIM_Base_SetConfig+0x2e>
 8018caa:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8018cae:	4290      	cmp	r0, r2
 8018cb0:	d00b      	beq.n	8018cca <TIM_Base_SetConfig+0x2e>
 8018cb2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8018cb6:	4290      	cmp	r0, r2
 8018cb8:	d007      	beq.n	8018cca <TIM_Base_SetConfig+0x2e>
 8018cba:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8018cbe:	4290      	cmp	r0, r2
 8018cc0:	d003      	beq.n	8018cca <TIM_Base_SetConfig+0x2e>
 8018cc2:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8018cc6:	4290      	cmp	r0, r2
 8018cc8:	d119      	bne.n	8018cfe <TIM_Base_SetConfig+0x62>
    tmpcr1 |= Structure->CounterMode;
 8018cca:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8018ccc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8018cd0:	4313      	orrs	r3, r2
  if(IS_TIM_CC1_INSTANCE(TIMx) != RESET)  
 8018cd2:	4a21      	ldr	r2, [pc, #132]	; (8018d58 <TIM_Base_SetConfig+0xbc>)
 8018cd4:	4290      	cmp	r0, r2
 8018cd6:	d029      	beq.n	8018d2c <TIM_Base_SetConfig+0x90>
 8018cd8:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8018cdc:	d026      	beq.n	8018d2c <TIM_Base_SetConfig+0x90>
 8018cde:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8018ce2:	4290      	cmp	r0, r2
 8018ce4:	d022      	beq.n	8018d2c <TIM_Base_SetConfig+0x90>
 8018ce6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8018cea:	4290      	cmp	r0, r2
 8018cec:	d01e      	beq.n	8018d2c <TIM_Base_SetConfig+0x90>
 8018cee:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8018cf2:	4290      	cmp	r0, r2
 8018cf4:	d01a      	beq.n	8018d2c <TIM_Base_SetConfig+0x90>
 8018cf6:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8018cfa:	4290      	cmp	r0, r2
 8018cfc:	d016      	beq.n	8018d2c <TIM_Base_SetConfig+0x90>
 8018cfe:	4a17      	ldr	r2, [pc, #92]	; (8018d5c <TIM_Base_SetConfig+0xc0>)
 8018d00:	4290      	cmp	r0, r2
 8018d02:	d013      	beq.n	8018d2c <TIM_Base_SetConfig+0x90>
 8018d04:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8018d08:	4290      	cmp	r0, r2
 8018d0a:	d00f      	beq.n	8018d2c <TIM_Base_SetConfig+0x90>
 8018d0c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8018d10:	4290      	cmp	r0, r2
 8018d12:	d00b      	beq.n	8018d2c <TIM_Base_SetConfig+0x90>
 8018d14:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8018d18:	4290      	cmp	r0, r2
 8018d1a:	d007      	beq.n	8018d2c <TIM_Base_SetConfig+0x90>
 8018d1c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8018d20:	4290      	cmp	r0, r2
 8018d22:	d003      	beq.n	8018d2c <TIM_Base_SetConfig+0x90>
 8018d24:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8018d28:	4290      	cmp	r0, r2
 8018d2a:	d103      	bne.n	8018d34 <TIM_Base_SetConfig+0x98>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8018d2c:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8018d2e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8018d32:	4313      	orrs	r3, r2
  TIMx->CR1 = tmpcr1;
 8018d34:	6003      	str	r3, [r0, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 8018d36:	688b      	ldr	r3, [r1, #8]
 8018d38:	62c3      	str	r3, [r0, #44]	; 0x2c
  TIMx->PSC = (uint32_t)Structure->Prescaler;
 8018d3a:	680b      	ldr	r3, [r1, #0]
 8018d3c:	6283      	str	r3, [r0, #40]	; 0x28
  if(IS_TIM_ADVANCED_INSTANCE(TIMx) != RESET)  
 8018d3e:	4b06      	ldr	r3, [pc, #24]	; (8018d58 <TIM_Base_SetConfig+0xbc>)
 8018d40:	4298      	cmp	r0, r3
 8018d42:	d003      	beq.n	8018d4c <TIM_Base_SetConfig+0xb0>
 8018d44:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8018d48:	4298      	cmp	r0, r3
 8018d4a:	d101      	bne.n	8018d50 <TIM_Base_SetConfig+0xb4>
    TIMx->RCR = Structure->RepetitionCounter;
 8018d4c:	690b      	ldr	r3, [r1, #16]
 8018d4e:	6303      	str	r3, [r0, #48]	; 0x30
  TIMx->EGR = TIM_EGR_UG;
 8018d50:	2301      	movs	r3, #1
 8018d52:	6143      	str	r3, [r0, #20]
}
 8018d54:	4770      	bx	lr
 8018d56:	bf00      	nop
 8018d58:	40010000 	.word	0x40010000
 8018d5c:	40014000 	.word	0x40014000

08018d60 <HAL_TIM_PWM_Init>:
{
 8018d60:	b510      	push	{r4, lr}
  if(htim == NULL)
 8018d62:	4604      	mov	r4, r0
 8018d64:	b1a0      	cbz	r0, 8018d90 <HAL_TIM_PWM_Init+0x30>
  if(htim->State == HAL_TIM_STATE_RESET)
 8018d66:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8018d6a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8018d6e:	b91b      	cbnz	r3, 8018d78 <HAL_TIM_PWM_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8018d70:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_TIM_PWM_MspInit(htim);
 8018d74:	f7ff ff90 	bl	8018c98 <HAL_TIM_PWM_MspInit>
  htim->State= HAL_TIM_STATE_BUSY;  
 8018d78:	2302      	movs	r3, #2
 8018d7a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  TIM_Base_SetConfig(htim->Instance, &htim->Init); 
 8018d7e:	6820      	ldr	r0, [r4, #0]
 8018d80:	1d21      	adds	r1, r4, #4
 8018d82:	f7ff ff8b 	bl	8018c9c <TIM_Base_SetConfig>
  htim->State= HAL_TIM_STATE_READY;
 8018d86:	2301      	movs	r3, #1
 8018d88:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  return HAL_OK;
 8018d8c:	2000      	movs	r0, #0
}  
 8018d8e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8018d90:	2001      	movs	r0, #1
 8018d92:	e7fc      	b.n	8018d8e <HAL_TIM_PWM_Init+0x2e>

08018d94 <TIM_OC2_SetConfig>:
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8018d94:	6a03      	ldr	r3, [r0, #32]
 8018d96:	f023 0310 	bic.w	r3, r3, #16
 8018d9a:	6203      	str	r3, [r0, #32]
  tmpccer = TIMx->CCER;
 8018d9c:	6a03      	ldr	r3, [r0, #32]
{
 8018d9e:	b570      	push	{r4, r5, r6, lr}
  tmpcr2 = TIMx->CR2;
 8018da0:	6844      	ldr	r4, [r0, #4]
  tmpccmrx = TIMx->CCMR1;
 8018da2:	6982      	ldr	r2, [r0, #24]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8018da4:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 8018da6:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8018daa:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8018dae:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC2P;
 8018db0:	f023 0320 	bic.w	r3, r3, #32
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8018db4:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  if(IS_TIM_ADVANCED_INSTANCE(TIMx) != RESET)
 8018db8:	4d0d      	ldr	r5, [pc, #52]	; (8018df0 <TIM_OC2_SetConfig+0x5c>)
 8018dba:	42a8      	cmp	r0, r5
 8018dbc:	d003      	beq.n	8018dc6 <TIM_OC2_SetConfig+0x32>
 8018dbe:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8018dc2:	42a8      	cmp	r0, r5
 8018dc4:	d10d      	bne.n	8018de2 <TIM_OC2_SetConfig+0x4e>
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8018dc6:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC2NP;
 8018dc8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8018dcc:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8018dd0:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 8018dd4:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8018dd8:	4335      	orrs	r5, r6
    tmpccer &= ~TIM_CCER_CC2NE;
 8018dda:	f023 0340 	bic.w	r3, r3, #64	; 0x40
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8018dde:	ea44 0485 	orr.w	r4, r4, r5, lsl #2
  TIMx->CR2 = tmpcr2;
 8018de2:	6044      	str	r4, [r0, #4]
  TIMx->CCMR1 = tmpccmrx;
 8018de4:	6182      	str	r2, [r0, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 8018de6:	684a      	ldr	r2, [r1, #4]
 8018de8:	6382      	str	r2, [r0, #56]	; 0x38
  TIMx->CCER = tmpccer;
 8018dea:	6203      	str	r3, [r0, #32]
}
 8018dec:	bd70      	pop	{r4, r5, r6, pc}
 8018dee:	bf00      	nop
 8018df0:	40010000 	.word	0x40010000

08018df4 <HAL_TIM_PWM_ConfigChannel>:
{
 8018df4:	b538      	push	{r3, r4, r5, lr}
  __HAL_LOCK(htim);
 8018df6:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8018dfa:	2b01      	cmp	r3, #1
{
 8018dfc:	4604      	mov	r4, r0
 8018dfe:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(htim);
 8018e02:	d025      	beq.n	8018e50 <HAL_TIM_PWM_ConfigChannel+0x5c>
 8018e04:	2301      	movs	r3, #1
 8018e06:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
  htim->State = HAL_TIM_STATE_BUSY;
 8018e0a:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
  switch (Channel)
 8018e0e:	2a0c      	cmp	r2, #12
 8018e10:	d818      	bhi.n	8018e44 <HAL_TIM_PWM_ConfigChannel+0x50>
 8018e12:	e8df f002 	tbb	[pc, r2]
 8018e16:	1707      	.short	0x1707
 8018e18:	171e1717 	.word	0x171e1717
 8018e1c:	172f1717 	.word	0x172f1717
 8018e20:	1717      	.short	0x1717
 8018e22:	40          	.byte	0x40
 8018e23:	00          	.byte	0x00
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 8018e24:	6820      	ldr	r0, [r4, #0]
 8018e26:	f7ff feb7 	bl	8018b98 <TIM_OC1_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8018e2a:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8018e2c:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8018e2e:	699a      	ldr	r2, [r3, #24]
 8018e30:	f042 0208 	orr.w	r2, r2, #8
 8018e34:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 8018e36:	699a      	ldr	r2, [r3, #24]
 8018e38:	f022 0204 	bic.w	r2, r2, #4
 8018e3c:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8018e3e:	699a      	ldr	r2, [r3, #24]
 8018e40:	430a      	orrs	r2, r1
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8018e42:	619a      	str	r2, [r3, #24]
  htim->State = HAL_TIM_STATE_READY;
 8018e44:	2301      	movs	r3, #1
  __HAL_UNLOCK(htim);
 8018e46:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 8018e48:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  __HAL_UNLOCK(htim);
 8018e4c:	f884 0038 	strb.w	r0, [r4, #56]	; 0x38
}
 8018e50:	bd38      	pop	{r3, r4, r5, pc}
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 8018e52:	6820      	ldr	r0, [r4, #0]
 8018e54:	f7ff ff9e 	bl	8018d94 <TIM_OC2_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8018e58:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8018e5a:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8018e5c:	699a      	ldr	r2, [r3, #24]
 8018e5e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8018e62:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 8018e64:	699a      	ldr	r2, [r3, #24]
 8018e66:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8018e6a:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8018e6c:	699a      	ldr	r2, [r3, #24]
 8018e6e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8018e72:	e7e6      	b.n	8018e42 <HAL_TIM_PWM_ConfigChannel+0x4e>
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 8018e74:	6820      	ldr	r0, [r4, #0]
 8018e76:	f7ff febb 	bl	8018bf0 <TIM_OC3_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 8018e7a:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;  
 8018e7c:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 8018e7e:	69da      	ldr	r2, [r3, #28]
 8018e80:	f042 0208 	orr.w	r2, r2, #8
 8018e84:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 8018e86:	69da      	ldr	r2, [r3, #28]
 8018e88:	f022 0204 	bic.w	r2, r2, #4
 8018e8c:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;  
 8018e8e:	69da      	ldr	r2, [r3, #28]
 8018e90:	430a      	orrs	r2, r1
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;  
 8018e92:	61da      	str	r2, [r3, #28]
    break;
 8018e94:	e7d6      	b.n	8018e44 <HAL_TIM_PWM_ConfigChannel+0x50>
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 8018e96:	6820      	ldr	r0, [r4, #0]
 8018e98:	f7ff fed8 	bl	8018c4c <TIM_OC4_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 8018e9c:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;  
 8018e9e:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 8018ea0:	69da      	ldr	r2, [r3, #28]
 8018ea2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8018ea6:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 8018ea8:	69da      	ldr	r2, [r3, #28]
 8018eaa:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8018eae:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;  
 8018eb0:	69da      	ldr	r2, [r3, #28]
 8018eb2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8018eb6:	e7ec      	b.n	8018e92 <HAL_TIM_PWM_ConfigChannel+0x9e>

08018eb8 <TIM_CCxChannelCmd>:
  TIMx->CCER &= ~tmp;
 8018eb8:	6a03      	ldr	r3, [r0, #32]
{
 8018eba:	b510      	push	{r4, lr}
  tmp = TIM_CCER_CC1E << Channel;
 8018ebc:	2401      	movs	r4, #1
 8018ebe:	408c      	lsls	r4, r1
  TIMx->CCER &= ~tmp;
 8018ec0:	ea23 0304 	bic.w	r3, r3, r4
 8018ec4:	6203      	str	r3, [r0, #32]
  TIMx->CCER |= (uint32_t)(ChannelState << Channel);
 8018ec6:	6a03      	ldr	r3, [r0, #32]
 8018ec8:	408a      	lsls	r2, r1
 8018eca:	431a      	orrs	r2, r3
 8018ecc:	6202      	str	r2, [r0, #32]
}
 8018ece:	bd10      	pop	{r4, pc}

08018ed0 <HAL_TIM_OC_Start>:
{
 8018ed0:	b510      	push	{r4, lr}
 8018ed2:	4604      	mov	r4, r0
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 8018ed4:	2201      	movs	r2, #1
 8018ed6:	6800      	ldr	r0, [r0, #0]
 8018ed8:	f7ff ffee 	bl	8018eb8 <TIM_CCxChannelCmd>
  if(IS_TIM_ADVANCED_INSTANCE(htim->Instance) != RESET)  
 8018edc:	6823      	ldr	r3, [r4, #0]
 8018ede:	4a08      	ldr	r2, [pc, #32]	; (8018f00 <HAL_TIM_OC_Start+0x30>)
 8018ee0:	4293      	cmp	r3, r2
 8018ee2:	d003      	beq.n	8018eec <HAL_TIM_OC_Start+0x1c>
 8018ee4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8018ee8:	4293      	cmp	r3, r2
 8018eea:	d103      	bne.n	8018ef4 <HAL_TIM_OC_Start+0x24>
    __HAL_TIM_MOE_ENABLE(htim);
 8018eec:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8018eee:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8018ef2:	645a      	str	r2, [r3, #68]	; 0x44
  __HAL_TIM_ENABLE(htim); 
 8018ef4:	681a      	ldr	r2, [r3, #0]
 8018ef6:	f042 0201 	orr.w	r2, r2, #1
 8018efa:	601a      	str	r2, [r3, #0]
}
 8018efc:	2000      	movs	r0, #0
 8018efe:	bd10      	pop	{r4, pc}
 8018f00:	40010000 	.word	0x40010000

08018f04 <HAL_TIM_PWM_Start>:
 8018f04:	f7ff bfe4 	b.w	8018ed0 <HAL_TIM_OC_Start>

08018f08 <UTILS_PLL_IsBusy>:
  * @rmtoll CR           PLLRDY        LL_RCC_PLL_IsReady
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_RCC_PLL_IsReady(void)
{
  return (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == (RCC_CR_PLLRDY));
 8018f08:	4b05      	ldr	r3, [pc, #20]	; (8018f20 <UTILS_PLL_IsBusy+0x18>)
 8018f0a:	6818      	ldr	r0, [r3, #0]
  * @rmtoll CR           PLLI2SRDY    LL_RCC_PLLI2S_IsReady
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_RCC_PLLI2S_IsReady(void)
{
  return (READ_BIT(RCC->CR, RCC_CR_PLLI2SRDY) == (RCC_CR_PLLI2SRDY));
 8018f0c:	681b      	ldr	r3, [r3, #0]
    status = ERROR;
  }
#endif /*RCC_PLLSAI_SUPPORT*/
#if defined(RCC_PLLI2S_SUPPORT)
  /* Check if PLLI2S is busy*/
  if(LL_RCC_PLLI2S_IsReady() != 0U)
 8018f0e:	011b      	lsls	r3, r3, #4
  if(LL_RCC_PLL_IsReady() != 0U)
 8018f10:	bf5a      	itte	pl
 8018f12:	f080 7000 	eorpl.w	r0, r0, #33554432	; 0x2000000
  ErrorStatus status = SUCCESS;
 8018f16:	f3c0 6040 	ubfxpl	r0, r0, #25, #1
  {
    /* PLLI2S configuration cannot be modified */
    status = ERROR;
 8018f1a:	2000      	movmi	r0, #0
  }
#endif /*RCC_PLLI2S_SUPPORT*/
  return status;
}
 8018f1c:	4770      	bx	lr
 8018f1e:	bf00      	nop
 8018f20:	40023800 	.word	0x40023800

08018f24 <UTILS_SetFlashLatency.part.0>:
  *         @arg @ref LL_PWR_REGU_VOLTAGE_SCALE3
  *         (*) LL_PWR_REGU_VOLTAGE_SCALE1 is not available for STM32F401xx devices
  */
__STATIC_INLINE uint32_t LL_PWR_GetRegulVoltageScaling(void)
{
  return (uint32_t)(READ_BIT(PWR->CR, PWR_CR_VOS));
 8018f24:	4b20      	ldr	r3, [pc, #128]	; (8018fa8 <UTILS_SetFlashLatency.part.0+0x84>)
 8018f26:	681b      	ldr	r3, [r3, #0]
    if(LL_PWR_GetRegulVoltageScaling() == LL_PWR_REGU_VOLTAGE_SCALE1)
 8018f28:	f413 4380 	ands.w	r3, r3, #16384	; 0x4000
 8018f2c:	d012      	beq.n	8018f54 <UTILS_SetFlashLatency.part.0+0x30>
      if((HCLK_Frequency > UTILS_SCALE1_LATENCY5_FREQ)&&(latency == LL_FLASH_LATENCY_0))
 8018f2e:	4b1f      	ldr	r3, [pc, #124]	; (8018fac <UTILS_SetFlashLatency.part.0+0x88>)
 8018f30:	4298      	cmp	r0, r3
 8018f32:	d834      	bhi.n	8018f9e <UTILS_SetFlashLatency.part.0+0x7a>
      if((HCLK_Frequency > UTILS_SCALE1_LATENCY4_FREQ)&&(latency == LL_FLASH_LATENCY_0))
 8018f34:	4b1e      	ldr	r3, [pc, #120]	; (8018fb0 <UTILS_SetFlashLatency.part.0+0x8c>)
 8018f36:	4298      	cmp	r0, r3
 8018f38:	d901      	bls.n	8018f3e <UTILS_SetFlashLatency.part.0+0x1a>
        latency = LL_FLASH_LATENCY_4;
 8018f3a:	2304      	movs	r3, #4
 8018f3c:	e00a      	b.n	8018f54 <UTILS_SetFlashLatency.part.0+0x30>
      if((HCLK_Frequency > UTILS_SCALE1_LATENCY3_FREQ)&&(latency == LL_FLASH_LATENCY_0))
 8018f3e:	4b1d      	ldr	r3, [pc, #116]	; (8018fb4 <UTILS_SetFlashLatency.part.0+0x90>)
 8018f40:	4298      	cmp	r0, r3
 8018f42:	d82e      	bhi.n	8018fa2 <UTILS_SetFlashLatency.part.0+0x7e>
      if((HCLK_Frequency > UTILS_SCALE1_LATENCY2_FREQ)&&(latency == LL_FLASH_LATENCY_0))
 8018f44:	4b1c      	ldr	r3, [pc, #112]	; (8018fb8 <UTILS_SetFlashLatency.part.0+0x94>)
 8018f46:	4298      	cmp	r0, r3
 8018f48:	d827      	bhi.n	8018f9a <UTILS_SetFlashLatency.part.0+0x76>
        if((HCLK_Frequency > UTILS_SCALE1_LATENCY1_FREQ)&&(latency == LL_FLASH_LATENCY_0))
 8018f4a:	4b1c      	ldr	r3, [pc, #112]	; (8018fbc <UTILS_SetFlashLatency.part.0+0x98>)
 8018f4c:	4298      	cmp	r0, r3
 8018f4e:	bf94      	ite	ls
 8018f50:	2300      	movls	r3, #0
 8018f52:	2301      	movhi	r3, #1
 8018f54:	4a14      	ldr	r2, [pc, #80]	; (8018fa8 <UTILS_SetFlashLatency.part.0+0x84>)
 8018f56:	6812      	ldr	r2, [r2, #0]
    if(LL_PWR_GetRegulVoltageScaling() == LL_PWR_REGU_VOLTAGE_SCALE2)
 8018f58:	0452      	lsls	r2, r2, #17
 8018f5a:	d411      	bmi.n	8018f80 <UTILS_SetFlashLatency.part.0+0x5c>
      if((HCLK_Frequency > UTILS_SCALE2_LATENCY4_FREQ)&&(latency == LL_FLASH_LATENCY_0))
 8018f5c:	4a18      	ldr	r2, [pc, #96]	; (8018fc0 <UTILS_SetFlashLatency.part.0+0x9c>)
 8018f5e:	4290      	cmp	r0, r2
 8018f60:	d908      	bls.n	8018f74 <UTILS_SetFlashLatency.part.0+0x50>
      if((HCLK_Frequency > UTILS_SCALE2_LATENCY3_FREQ)&&(latency == LL_FLASH_LATENCY_0))
 8018f62:	4a14      	ldr	r2, [pc, #80]	; (8018fb4 <UTILS_SetFlashLatency.part.0+0x90>)
      if((HCLK_Frequency > UTILS_SCALE2_LATENCY4_FREQ)&&(latency == LL_FLASH_LATENCY_0))
 8018f64:	2b00      	cmp	r3, #0
        latency = LL_FLASH_LATENCY_4;
 8018f66:	bf08      	it	eq
 8018f68:	2304      	moveq	r3, #4
      if((HCLK_Frequency > UTILS_SCALE2_LATENCY3_FREQ)&&(latency == LL_FLASH_LATENCY_0))
 8018f6a:	4290      	cmp	r0, r2
 8018f6c:	d808      	bhi.n	8018f80 <UTILS_SetFlashLatency.part.0+0x5c>
      if((HCLK_Frequency > UTILS_SCALE2_LATENCY2_FREQ)&&(latency == LL_FLASH_LATENCY_0))
 8018f6e:	4a12      	ldr	r2, [pc, #72]	; (8018fb8 <UTILS_SetFlashLatency.part.0+0x94>)
 8018f70:	4290      	cmp	r0, r2
 8018f72:	d805      	bhi.n	8018f80 <UTILS_SetFlashLatency.part.0+0x5c>
        if((HCLK_Frequency > UTILS_SCALE2_LATENCY1_FREQ)&&(latency == LL_FLASH_LATENCY_0))
 8018f74:	4a11      	ldr	r2, [pc, #68]	; (8018fbc <UTILS_SetFlashLatency.part.0+0x98>)
 8018f76:	4290      	cmp	r0, r2
 8018f78:	d902      	bls.n	8018f80 <UTILS_SetFlashLatency.part.0+0x5c>
 8018f7a:	2b00      	cmp	r3, #0
          latency = LL_FLASH_LATENCY_1;
 8018f7c:	bf08      	it	eq
 8018f7e:	2301      	moveq	r3, #1
  *         @arg @ref LL_FLASH_LATENCY_15
  * @retval None
  */
__STATIC_INLINE void LL_FLASH_SetLatency(uint32_t Latency)
{
  MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, Latency);
 8018f80:	4910      	ldr	r1, [pc, #64]	; (8018fc4 <UTILS_SetFlashLatency.part.0+0xa0>)
 8018f82:	680a      	ldr	r2, [r1, #0]
 8018f84:	f022 020f 	bic.w	r2, r2, #15
 8018f88:	431a      	orrs	r2, r3
 8018f8a:	600a      	str	r2, [r1, #0]
  *         @arg @ref LL_FLASH_LATENCY_14
  *         @arg @ref LL_FLASH_LATENCY_15
  */
__STATIC_INLINE uint32_t LL_FLASH_GetLatency(void)
{
  return (uint32_t)(READ_BIT(FLASH->ACR, FLASH_ACR_LATENCY));
 8018f8c:	6808      	ldr	r0, [r1, #0]
 8018f8e:	f000 000f 	and.w	r0, r0, #15
  return status;
 8018f92:	1ac3      	subs	r3, r0, r3
 8018f94:	4258      	negs	r0, r3
 8018f96:	4158      	adcs	r0, r3
}
 8018f98:	4770      	bx	lr
        latency = LL_FLASH_LATENCY_2;
 8018f9a:	2302      	movs	r3, #2
 8018f9c:	e7da      	b.n	8018f54 <UTILS_SetFlashLatency.part.0+0x30>
        latency = LL_FLASH_LATENCY_5;
 8018f9e:	2305      	movs	r3, #5
 8018fa0:	e7d8      	b.n	8018f54 <UTILS_SetFlashLatency.part.0+0x30>
        latency = LL_FLASH_LATENCY_3;
 8018fa2:	2303      	movs	r3, #3
 8018fa4:	e7d6      	b.n	8018f54 <UTILS_SetFlashLatency.part.0+0x30>
 8018fa6:	bf00      	nop
 8018fa8:	40007000 	.word	0x40007000
 8018fac:	08f0d180 	.word	0x08f0d180
 8018fb0:	07270e00 	.word	0x07270e00
 8018fb4:	055d4a80 	.word	0x055d4a80
 8018fb8:	03938700 	.word	0x03938700
 8018fbc:	01c9c380 	.word	0x01c9c380
 8018fc0:	00b71b00 	.word	0x00b71b00
 8018fc4:	40023c00 	.word	0x40023c00

08018fc8 <UTILS_EnablePLLAndSwitchSystem>:
  assert_param(IS_LL_UTILS_SYSCLK_DIV(UTILS_ClkInitStruct->AHBCLKDivider));
  assert_param(IS_LL_UTILS_APB1_DIV(UTILS_ClkInitStruct->APB1CLKDivider));
  assert_param(IS_LL_UTILS_APB2_DIV(UTILS_ClkInitStruct->APB2CLKDivider));

  /* Calculate HCLK frequency */
  hclk_frequency = __LL_RCC_CALC_HCLK_FREQ(SYSCLK_Frequency, UTILS_ClkInitStruct->AHBCLKDivider);
 8018fc8:	680b      	ldr	r3, [r1, #0]
 8018fca:	4a22      	ldr	r2, [pc, #136]	; (8019054 <UTILS_EnablePLLAndSwitchSystem+0x8c>)
 8018fcc:	f3c3 1303 	ubfx	r3, r3, #4, #4
{
 8018fd0:	b570      	push	{r4, r5, r6, lr}

  /* Increasing the number of wait states because of higher CPU frequency */
  if(SystemCoreClock < hclk_frequency)
 8018fd2:	4d21      	ldr	r5, [pc, #132]	; (8019058 <UTILS_EnablePLLAndSwitchSystem+0x90>)
  hclk_frequency = __LL_RCC_CALC_HCLK_FREQ(SYSCLK_Frequency, UTILS_ClkInitStruct->AHBCLKDivider);
 8018fd4:	5cd4      	ldrb	r4, [r2, r3]
  if(SystemCoreClock < hclk_frequency)
 8018fd6:	682b      	ldr	r3, [r5, #0]
  hclk_frequency = __LL_RCC_CALC_HCLK_FREQ(SYSCLK_Frequency, UTILS_ClkInitStruct->AHBCLKDivider);
 8018fd8:	fa20 f404 	lsr.w	r4, r0, r4
  if(SystemCoreClock < hclk_frequency)
 8018fdc:	42a3      	cmp	r3, r4
{
 8018fde:	460e      	mov	r6, r1
  if(SystemCoreClock < hclk_frequency)
 8018fe0:	d327      	bcc.n	8019032 <UTILS_EnablePLLAndSwitchSystem+0x6a>
  SET_BIT(RCC->CR, RCC_CR_PLLON);
 8018fe2:	4b1e      	ldr	r3, [pc, #120]	; (801905c <UTILS_EnablePLLAndSwitchSystem+0x94>)
 8018fe4:	681a      	ldr	r2, [r3, #0]
 8018fe6:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8018fea:	601a      	str	r2, [r3, #0]
  return (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == (RCC_CR_PLLRDY));
 8018fec:	681a      	ldr	r2, [r3, #0]
  /* Update system clock configuration */
  if(status == SUCCESS)
  {
    /* Enable PLL */
    LL_RCC_PLL_Enable();
    while (LL_RCC_PLL_IsReady() != 1U)
 8018fee:	0192      	lsls	r2, r2, #6
 8018ff0:	d5fc      	bpl.n	8018fec <UTILS_EnablePLLAndSwitchSystem+0x24>
  MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, Prescaler);
 8018ff2:	689a      	ldr	r2, [r3, #8]
 8018ff4:	6831      	ldr	r1, [r6, #0]
 8018ff6:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8018ffa:	430a      	orrs	r2, r1
 8018ffc:	609a      	str	r2, [r3, #8]
  MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, Source);
 8018ffe:	689a      	ldr	r2, [r3, #8]
 8019000:	f022 0203 	bic.w	r2, r2, #3
 8019004:	f042 0202 	orr.w	r2, r2, #2
 8019008:	609a      	str	r2, [r3, #8]
  return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_SWS));
 801900a:	4b14      	ldr	r3, [pc, #80]	; (801905c <UTILS_EnablePLLAndSwitchSystem+0x94>)
 801900c:	689a      	ldr	r2, [r3, #8]
 801900e:	f002 020c 	and.w	r2, r2, #12
    }

    /* Sysclk activation on the main PLL */
    LL_RCC_SetAHBPrescaler(UTILS_ClkInitStruct->AHBCLKDivider);
    LL_RCC_SetSysClkSource(LL_RCC_SYS_CLKSOURCE_PLL);
    while (LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_PLL)
 8019012:	2a08      	cmp	r2, #8
 8019014:	d1fa      	bne.n	801900c <UTILS_EnablePLLAndSwitchSystem+0x44>
  MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, Prescaler);
 8019016:	689a      	ldr	r2, [r3, #8]
 8019018:	6871      	ldr	r1, [r6, #4]
 801901a:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 801901e:	430a      	orrs	r2, r1
 8019020:	609a      	str	r2, [r3, #8]
  MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, Prescaler);
 8019022:	689a      	ldr	r2, [r3, #8]
 8019024:	68b1      	ldr	r1, [r6, #8]
 8019026:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 801902a:	430a      	orrs	r2, r1
 801902c:	609a      	str	r2, [r3, #8]
 801902e:	2001      	movs	r0, #1
 8019030:	e005      	b.n	801903e <UTILS_EnablePLLAndSwitchSystem+0x76>
    status = ERROR;
 8019032:	4620      	mov	r0, r4
  if(HCLK_Frequency == 0U)
 8019034:	b11c      	cbz	r4, 801903e <UTILS_EnablePLLAndSwitchSystem+0x76>
 8019036:	f7ff ff75 	bl	8018f24 <UTILS_SetFlashLatency.part.0>
  if(status == SUCCESS)
 801903a:	2801      	cmp	r0, #1
 801903c:	d0d1      	beq.n	8018fe2 <UTILS_EnablePLLAndSwitchSystem+0x1a>
    LL_RCC_SetAPB1Prescaler(UTILS_ClkInitStruct->APB1CLKDivider);
    LL_RCC_SetAPB2Prescaler(UTILS_ClkInitStruct->APB2CLKDivider);
  }
    
  /* Decreasing the number of wait states because of lower CPU frequency */
  if(SystemCoreClock > hclk_frequency)
 801903e:	682b      	ldr	r3, [r5, #0]
 8019040:	42a3      	cmp	r3, r4
 8019042:	d903      	bls.n	801904c <UTILS_EnablePLLAndSwitchSystem+0x84>
    status = ERROR;
 8019044:	4620      	mov	r0, r4
  if(HCLK_Frequency == 0U)
 8019046:	b124      	cbz	r4, 8019052 <UTILS_EnablePLLAndSwitchSystem+0x8a>
 8019048:	f7ff ff6c 	bl	8018f24 <UTILS_SetFlashLatency.part.0>
    /* Set FLASH latency to lowest latency */
    status = UTILS_SetFlashLatency(hclk_frequency);
  }

  /* Update SystemCoreClock variable */
  if(status == SUCCESS)
 801904c:	2801      	cmp	r0, #1
  SystemCoreClock = HCLKFrequency;
 801904e:	bf08      	it	eq
 8019050:	602c      	streq	r4, [r5, #0]
  {
    LL_SetSystemCoreClock(hclk_frequency);
  }

  return status;
}
 8019052:	bd70      	pop	{r4, r5, r6, pc}
 8019054:	0802697a 	.word	0x0802697a
 8019058:	20003348 	.word	0x20003348
 801905c:	40023800 	.word	0x40023800

08019060 <LL_PLL_ConfigSystemClock_HSE>:
{
 8019060:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8019062:	4604      	mov	r4, r0
 8019064:	460d      	mov	r5, r1
 8019066:	4619      	mov	r1, r3
  if(UTILS_PLL_IsBusy() == SUCCESS)
 8019068:	f7ff ff4e 	bl	8018f08 <UTILS_PLL_IsBusy>
 801906c:	2801      	cmp	r0, #1
 801906e:	d135      	bne.n	80190dc <LL_PLL_ConfigSystemClock_HSE+0x7c>
  pllfreq = PLL_InputFrequency / (UTILS_PLLInitStruct->PLLM & (RCC_PLLCFGR_PLLM >> RCC_PLLCFGR_PLLM_Pos));
 8019070:	6817      	ldr	r7, [r2, #0]
  pllfreq = pllfreq * (UTILS_PLLInitStruct->PLLN & (RCC_PLLCFGR_PLLN >> RCC_PLLCFGR_PLLN_Pos));
 8019072:	6856      	ldr	r6, [r2, #4]
  pllfreq = pllfreq / (((UTILS_PLLInitStruct->PLLP >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 8019074:	6893      	ldr	r3, [r2, #8]
  pllfreq = PLL_InputFrequency / (UTILS_PLLInitStruct->PLLM & (RCC_PLLCFGR_PLLM >> RCC_PLLCFGR_PLLM_Pos));
 8019076:	f007 003f 	and.w	r0, r7, #63	; 0x3f
 801907a:	fbb4 f4f0 	udiv	r4, r4, r0
  pllfreq = pllfreq * (UTILS_PLLInitStruct->PLLN & (RCC_PLLCFGR_PLLN >> RCC_PLLCFGR_PLLN_Pos));
 801907e:	f3c6 0008 	ubfx	r0, r6, #0, #9
 8019082:	4344      	muls	r4, r0
  pllfreq = pllfreq / (((UTILS_PLLInitStruct->PLLP >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 8019084:	0c18      	lsrs	r0, r3, #16
 8019086:	3001      	adds	r0, #1
 8019088:	0040      	lsls	r0, r0, #1
 801908a:	fbb4 f0f0 	udiv	r0, r4, r0
  return (READ_BIT(RCC->CR, RCC_CR_HSERDY) == (RCC_CR_HSERDY));
 801908e:	4c14      	ldr	r4, [pc, #80]	; (80190e0 <LL_PLL_ConfigSystemClock_HSE+0x80>)
 8019090:	6822      	ldr	r2, [r4, #0]
    if(LL_RCC_HSE_IsReady() != 1U)
 8019092:	0392      	lsls	r2, r2, #14
 8019094:	d40f      	bmi.n	80190b6 <LL_PLL_ConfigSystemClock_HSE+0x56>
  SET_BIT(RCC->CR, RCC_CR_HSEBYP);
 8019096:	6822      	ldr	r2, [r4, #0]
      if(HSEBypass == LL_UTILS_HSEBYPASS_ON)
 8019098:	2d01      	cmp	r5, #1
 801909a:	bf0c      	ite	eq
 801909c:	f442 2280 	orreq.w	r2, r2, #262144	; 0x40000
  CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 80190a0:	f422 2280 	bicne.w	r2, r2, #262144	; 0x40000
 80190a4:	6022      	str	r2, [r4, #0]
  SET_BIT(RCC->CR, RCC_CR_HSEON);
 80190a6:	6822      	ldr	r2, [r4, #0]
 80190a8:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80190ac:	6022      	str	r2, [r4, #0]
  return (READ_BIT(RCC->CR, RCC_CR_HSERDY) == (RCC_CR_HSERDY));
 80190ae:	4c0c      	ldr	r4, [pc, #48]	; (80190e0 <LL_PLL_ConfigSystemClock_HSE+0x80>)
 80190b0:	6822      	ldr	r2, [r4, #0]
      while (LL_RCC_HSE_IsReady() != 1U)
 80190b2:	0392      	lsls	r2, r2, #14
 80190b4:	d5fc      	bpl.n	80190b0 <LL_PLL_ConfigSystemClock_HSE+0x50>
  MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLM | RCC_PLLCFGR_PLLN,
 80190b6:	4c0a      	ldr	r4, [pc, #40]	; (80190e0 <LL_PLL_ConfigSystemClock_HSE+0x80>)
 80190b8:	4a0a      	ldr	r2, [pc, #40]	; (80190e4 <LL_PLL_ConfigSystemClock_HSE+0x84>)
 80190ba:	6865      	ldr	r5, [r4, #4]
 80190bc:	402a      	ands	r2, r5
 80190be:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 80190c2:	433a      	orrs	r2, r7
 80190c4:	ea42 1286 	orr.w	r2, r2, r6, lsl #6
 80190c8:	6062      	str	r2, [r4, #4]
  MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLP, PLLP_R);
 80190ca:	6862      	ldr	r2, [r4, #4]
 80190cc:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 80190d0:	431a      	orrs	r2, r3
 80190d2:	6062      	str	r2, [r4, #4]
}
 80190d4:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    status = UTILS_EnablePLLAndSwitchSystem(pllfreq, UTILS_ClkInitStruct);
 80190d8:	f7ff bf76 	b.w	8018fc8 <UTILS_EnablePLLAndSwitchSystem>
}
 80190dc:	2000      	movs	r0, #0
 80190de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80190e0:	40023800 	.word	0x40023800
 80190e4:	ffbf8000 	.word	0xffbf8000

080190e8 <console_out>:
		return c;
	}

#endif  /* CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS */

	if ('\n' == c) {
 80190e8:	280a      	cmp	r0, #10
{
 80190ea:	b538      	push	{r3, r4, r5, lr}
 80190ec:	4604      	mov	r4, r0
 80190ee:	4d07      	ldr	r5, [pc, #28]	; (801910c <console_out+0x24>)
	if ('\n' == c) {
 80190f0:	d104      	bne.n	80190fc <console_out+0x14>
 80190f2:	6828      	ldr	r0, [r5, #0]
static inline unsigned char _impl_uart_poll_out(struct device *dev,
						unsigned char out_char)
{
	const struct uart_driver_api *api = dev->driver_api;

	return api->poll_out(dev, out_char);
 80190f4:	6843      	ldr	r3, [r0, #4]
 80190f6:	210d      	movs	r1, #13
 80190f8:	685b      	ldr	r3, [r3, #4]
 80190fa:	4798      	blx	r3
		uart_poll_out(uart_console_dev, '\r');
	}
	uart_poll_out(uart_console_dev, c);
 80190fc:	6828      	ldr	r0, [r5, #0]
 80190fe:	6843      	ldr	r3, [r0, #4]
 8019100:	b2e1      	uxtb	r1, r4
 8019102:	685b      	ldr	r3, [r3, #4]
 8019104:	4798      	blx	r3

	return c;
}
 8019106:	4620      	mov	r0, r4
 8019108:	bd38      	pop	{r3, r4, r5, pc}
 801910a:	bf00      	nop
 801910c:	2000051c 	.word	0x2000051c

08019110 <uart_console_hook_install>:
 *
 * @return N/A
 */

void uart_console_hook_install(void)
{
 8019110:	b510      	push	{r4, lr}
	__stdout_hook_install(console_out);
 8019112:	4c04      	ldr	r4, [pc, #16]	; (8019124 <uart_console_hook_install+0x14>)
 8019114:	4620      	mov	r0, r4
 8019116:	f000 fbf7 	bl	8019908 <__stdout_hook_install>
	__printk_hook_install(console_out);
 801911a:	4620      	mov	r0, r4
}
 801911c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	__printk_hook_install(console_out);
 8019120:	f7ff bbe4 	b.w	80188ec <__printk_hook_install>
 8019124:	080190e9 	.word	0x080190e9

08019128 <uart_console_init>:
 * @brief Initialize one UART as the console/debug port
 *
 * @return 0 if successful, otherwise failed.
 */
static int uart_console_init(struct device *arg)
{
 8019128:	b508      	push	{r3, lr}

	ARG_UNUSED(arg);

	uart_console_dev = device_get_binding(CONFIG_UART_CONSOLE_ON_DEV_NAME);
 801912a:	4804      	ldr	r0, [pc, #16]	; (801913c <uart_console_init+0x14>)
 801912c:	f000 fc70 	bl	8019a10 <device_get_binding>
 8019130:	4b03      	ldr	r3, [pc, #12]	; (8019140 <uart_console_init+0x18>)
 8019132:	6018      	str	r0, [r3, #0]
		}
	}
	k_busy_wait(1000000);
#endif

	uart_console_hook_install();
 8019134:	f7ff ffec 	bl	8019110 <uart_console_hook_install>

	return 0;
}
 8019138:	2000      	movs	r0, #0
 801913a:	bd08      	pop	{r3, pc}
 801913c:	0802698a 	.word	0x0802698a
 8019140:	2000051c 	.word	0x2000051c

08019144 <__stm32_exti_isr>:
 * @param arg isr argument
 * @param min low end of EXTI# range
 * @param max low end of EXTI# range
 */
static void __stm32_exti_isr(int min, int max, void *arg)
{
 8019144:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	struct device *dev = arg;
	struct stm32_exti_data *data = dev->driver_data;
 8019148:	6895      	ldr	r5, [r2, #8]
	return (exti->pr & (1 << line)) ? 1 : 0;
 801914a:	4e0c      	ldr	r6, [pc, #48]	; (801917c <__stm32_exti_isr+0x38>)
{
 801914c:	4604      	mov	r4, r0
 801914e:	460f      	mov	r7, r1
	return (exti->pr & (1 << line)) ? 1 : 0;
 8019150:	f04f 0801 	mov.w	r8, #1
	int line;

	/* see which bits are set */
	for (line = min; line < max; line++) {
 8019154:	42bc      	cmp	r4, r7
 8019156:	db01      	blt.n	801915c <__stm32_exti_isr+0x18>
			}

			data->cb[line].cb(line, data->cb[line].data);
		}
	}
}
 8019158:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	return (exti->pr & (1 << line)) ? 1 : 0;
 801915c:	6972      	ldr	r2, [r6, #20]
 801915e:	fa08 f304 	lsl.w	r3, r8, r4
		if (stm32_exti_is_pending(line)) {
 8019162:	421a      	tst	r2, r3
 8019164:	d008      	beq.n	8019178 <__stm32_exti_isr+0x34>
	exti->pr = 1 << line;
 8019166:	6173      	str	r3, [r6, #20]
			if (!data->cb[line].cb) {
 8019168:	f855 3034 	ldr.w	r3, [r5, r4, lsl #3]
 801916c:	b123      	cbz	r3, 8019178 <__stm32_exti_isr+0x34>
			data->cb[line].cb(line, data->cb[line].data);
 801916e:	eb05 02c4 	add.w	r2, r5, r4, lsl #3
 8019172:	4620      	mov	r0, r4
 8019174:	6851      	ldr	r1, [r2, #4]
 8019176:	4798      	blx	r3
	for (line = min; line < max; line++) {
 8019178:	3401      	adds	r4, #1
 801917a:	e7eb      	b.n	8019154 <__stm32_exti_isr+0x10>
 801917c:	40013c00 	.word	0x40013c00

08019180 <__stm32_exti_isr_0>:
}

#else
static inline void __stm32_exti_isr_0(void *arg)
{
	__stm32_exti_isr(0, 1, arg);
 8019180:	4602      	mov	r2, r0
 8019182:	2101      	movs	r1, #1
 8019184:	2000      	movs	r0, #0
 8019186:	f7ff bfdd 	b.w	8019144 <__stm32_exti_isr>

0801918a <__stm32_exti_isr_1>:
}

static inline void __stm32_exti_isr_1(void *arg)
{
	__stm32_exti_isr(1, 2, arg);
 801918a:	4602      	mov	r2, r0
 801918c:	2102      	movs	r1, #2
 801918e:	2001      	movs	r0, #1
 8019190:	f7ff bfd8 	b.w	8019144 <__stm32_exti_isr>

08019194 <__stm32_exti_isr_2>:
}

static inline void __stm32_exti_isr_2(void *arg)
{
	__stm32_exti_isr(2, 3, arg);
 8019194:	4602      	mov	r2, r0
 8019196:	2103      	movs	r1, #3
 8019198:	2002      	movs	r0, #2
 801919a:	f7ff bfd3 	b.w	8019144 <__stm32_exti_isr>

0801919e <__stm32_exti_isr_3>:
}

static inline void __stm32_exti_isr_3(void *arg)
{
	__stm32_exti_isr(3, 4, arg);
 801919e:	4602      	mov	r2, r0
 80191a0:	2104      	movs	r1, #4
 80191a2:	2003      	movs	r0, #3
 80191a4:	f7ff bfce 	b.w	8019144 <__stm32_exti_isr>

080191a8 <__stm32_exti_isr_4>:
}

static inline void __stm32_exti_isr_4(void *arg)
{
	__stm32_exti_isr(4, 5, arg);
 80191a8:	4602      	mov	r2, r0
 80191aa:	2105      	movs	r1, #5
 80191ac:	2004      	movs	r0, #4
 80191ae:	f7ff bfc9 	b.w	8019144 <__stm32_exti_isr>

080191b2 <__stm32_exti_isr_9_5>:
}

static inline void __stm32_exti_isr_9_5(void *arg)
{
	__stm32_exti_isr(5, 10, arg);
 80191b2:	4602      	mov	r2, r0
 80191b4:	210a      	movs	r1, #10
 80191b6:	2005      	movs	r0, #5
 80191b8:	f7ff bfc4 	b.w	8019144 <__stm32_exti_isr>

080191bc <__stm32_exti_isr_15_10>:
}

static inline void __stm32_exti_isr_15_10(void *arg)
{
	__stm32_exti_isr(10, 16, arg);
 80191bc:	4602      	mov	r2, r0
 80191be:	2110      	movs	r1, #16
 80191c0:	200a      	movs	r0, #10
 80191c2:	f7ff bfbf 	b.w	8019144 <__stm32_exti_isr>

080191c6 <__stm32_exti_isr_16>:
}

#ifdef CONFIG_SOC_SERIES_STM32F4X
static inline void __stm32_exti_isr_16(void *arg)
{
	__stm32_exti_isr(16, 17, arg);
 80191c6:	4602      	mov	r2, r0
 80191c8:	2111      	movs	r1, #17
 80191ca:	2010      	movs	r0, #16
 80191cc:	f7ff bfba 	b.w	8019144 <__stm32_exti_isr>

080191d0 <__stm32_exti_isr_17>:
}

static inline void __stm32_exti_isr_17(void *arg)
{
	__stm32_exti_isr(17, 18, arg);
 80191d0:	4602      	mov	r2, r0
 80191d2:	2112      	movs	r1, #18
 80191d4:	2011      	movs	r0, #17
 80191d6:	f7ff bfb5 	b.w	8019144 <__stm32_exti_isr>

080191da <__stm32_exti_isr_18>:
}

static inline void __stm32_exti_isr_18(void *arg)
{
	__stm32_exti_isr(18, 19, arg);
 80191da:	4602      	mov	r2, r0
 80191dc:	2113      	movs	r1, #19
 80191de:	2012      	movs	r0, #18
 80191e0:	f7ff bfb0 	b.w	8019144 <__stm32_exti_isr>

080191e4 <__stm32_exti_isr_21>:
}

static inline void __stm32_exti_isr_21(void *arg)
{
	__stm32_exti_isr(21, 22, arg);
 80191e4:	4602      	mov	r2, r0
 80191e6:	2116      	movs	r1, #22
 80191e8:	2015      	movs	r0, #21
 80191ea:	f7ff bfab 	b.w	8019144 <__stm32_exti_isr>

080191ee <__stm32_exti_isr_22>:
}

static inline void __stm32_exti_isr_22(void *arg)
{
	__stm32_exti_isr(22, 23, arg);
 80191ee:	4602      	mov	r2, r0
 80191f0:	2117      	movs	r1, #23
 80191f2:	2016      	movs	r0, #22
 80191f4:	f7ff bfa6 	b.w	8019144 <__stm32_exti_isr>

080191f8 <stm32_exti_init>:
	IRQ_CONNECT(STM32F3_IRQ_EXTI15_10,
		CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,
		__stm32_exti_isr_15_10, DEVICE_GET(exti_stm32),
		0);
#elif CONFIG_SOC_SERIES_STM32F4X
	IRQ_CONNECT(STM32F4_IRQ_EXTI0,
 80191f8:	2200      	movs	r2, #0
{
 80191fa:	b508      	push	{r3, lr}
	IRQ_CONNECT(STM32F4_IRQ_EXTI0,
 80191fc:	4611      	mov	r1, r2
 80191fe:	2006      	movs	r0, #6
 8019200:	f7ff f9c2 	bl	8018588 <_irq_priority_set>
		CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,
		__stm32_exti_isr_0, DEVICE_GET(exti_stm32),
		0);
	IRQ_CONNECT(STM32F4_IRQ_EXTI1,
 8019204:	2200      	movs	r2, #0
 8019206:	4611      	mov	r1, r2
 8019208:	2007      	movs	r0, #7
 801920a:	f7ff f9bd 	bl	8018588 <_irq_priority_set>
		CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,
		__stm32_exti_isr_1, DEVICE_GET(exti_stm32),
		0);
	IRQ_CONNECT(STM32F4_IRQ_EXTI2,
 801920e:	2200      	movs	r2, #0
 8019210:	4611      	mov	r1, r2
 8019212:	2008      	movs	r0, #8
 8019214:	f7ff f9b8 	bl	8018588 <_irq_priority_set>
		CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,
		__stm32_exti_isr_2, DEVICE_GET(exti_stm32),
		0);
	IRQ_CONNECT(STM32F4_IRQ_EXTI3,
 8019218:	2200      	movs	r2, #0
 801921a:	4611      	mov	r1, r2
 801921c:	2009      	movs	r0, #9
 801921e:	f7ff f9b3 	bl	8018588 <_irq_priority_set>
		CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,
		__stm32_exti_isr_3, DEVICE_GET(exti_stm32),
		0);
	IRQ_CONNECT(STM32F4_IRQ_EXTI4,
 8019222:	2200      	movs	r2, #0
 8019224:	4611      	mov	r1, r2
 8019226:	200a      	movs	r0, #10
 8019228:	f7ff f9ae 	bl	8018588 <_irq_priority_set>
		CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,
		__stm32_exti_isr_4, DEVICE_GET(exti_stm32),
		0);
	IRQ_CONNECT(STM32F4_IRQ_EXTI9_5,
 801922c:	2200      	movs	r2, #0
 801922e:	4611      	mov	r1, r2
 8019230:	2017      	movs	r0, #23
 8019232:	f7ff f9a9 	bl	8018588 <_irq_priority_set>
		CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,
		__stm32_exti_isr_9_5, DEVICE_GET(exti_stm32),
		0);
	IRQ_CONNECT(STM32F4_IRQ_EXTI15_10,
 8019236:	2200      	movs	r2, #0
 8019238:	4611      	mov	r1, r2
 801923a:	2028      	movs	r0, #40	; 0x28
 801923c:	f7ff f9a4 	bl	8018588 <_irq_priority_set>
		CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,
		__stm32_exti_isr_15_10, DEVICE_GET(exti_stm32),
		0);
	IRQ_CONNECT(STM32F4_IRQ_EXTI16,
 8019240:	2200      	movs	r2, #0
 8019242:	4611      	mov	r1, r2
 8019244:	2001      	movs	r0, #1
 8019246:	f7ff f99f 	bl	8018588 <_irq_priority_set>
		CONFIG_EXTI_STM32_EXTI16_IRQ_PRI,
		__stm32_exti_isr_16, DEVICE_GET(exti_stm32),
		0);
	IRQ_CONNECT(STM32F4_IRQ_EXTI17,
 801924a:	2200      	movs	r2, #0
 801924c:	4611      	mov	r1, r2
 801924e:	2029      	movs	r0, #41	; 0x29
 8019250:	f7ff f99a 	bl	8018588 <_irq_priority_set>
		CONFIG_EXTI_STM32_EXTI17_IRQ_PRI,
		__stm32_exti_isr_17, DEVICE_GET(exti_stm32),
		0);
	IRQ_CONNECT(STM32F4_IRQ_EXTI18,
 8019254:	2200      	movs	r2, #0
 8019256:	4611      	mov	r1, r2
 8019258:	202a      	movs	r0, #42	; 0x2a
 801925a:	f7ff f995 	bl	8018588 <_irq_priority_set>
		CONFIG_EXTI_STM32_EXTI18_IRQ_PRI,
		__stm32_exti_isr_18, DEVICE_GET(exti_stm32),
		0);
	IRQ_CONNECT(STM32F4_IRQ_EXTI21,
 801925e:	2200      	movs	r2, #0
 8019260:	4611      	mov	r1, r2
 8019262:	2002      	movs	r0, #2
 8019264:	f7ff f990 	bl	8018588 <_irq_priority_set>
		CONFIG_EXTI_STM32_EXTI21_IRQ_PRI,
		__stm32_exti_isr_21, DEVICE_GET(exti_stm32),
		0);
	IRQ_CONNECT(STM32F4_IRQ_EXTI22,
 8019268:	2200      	movs	r2, #0
 801926a:	4611      	mov	r1, r2
 801926c:	2003      	movs	r0, #3
 801926e:	f7ff f98b 	bl	8018588 <_irq_priority_set>
}
 8019272:	2000      	movs	r0, #0
 8019274:	bd08      	pop	{r3, pc}
	...

08019278 <stm32_exti_enable>:
	exti->imr |= 1 << line;
 8019278:	4a0e      	ldr	r2, [pc, #56]	; (80192b4 <stm32_exti_enable+0x3c>)
 801927a:	2301      	movs	r3, #1
 801927c:	6811      	ldr	r1, [r2, #0]
 801927e:	4083      	lsls	r3, r0
 8019280:	430b      	orrs	r3, r1
 8019282:	6013      	str	r3, [r2, #0]
	if (line >= 5 && line <= 9) {
 8019284:	1f43      	subs	r3, r0, #5
 8019286:	2b04      	cmp	r3, #4
 8019288:	d90e      	bls.n	80192a8 <stm32_exti_enable+0x30>
	} else if (line >= 10 && line <= 15) {
 801928a:	f1a0 030a 	sub.w	r3, r0, #10
 801928e:	2b05      	cmp	r3, #5
 8019290:	d90c      	bls.n	80192ac <stm32_exti_enable+0x34>
	} else if (line >= 0 && line <= 4) {
 8019292:	2804      	cmp	r0, #4
 8019294:	d802      	bhi.n	801929c <stm32_exti_enable+0x24>
		irqnum = STM32F4_IRQ_EXTI0 + line;
 8019296:	3006      	adds	r0, #6
	irq_enable(irqnum);
 8019298:	f7ff b966 	b.w	8018568 <_arch_irq_enable>
 801929c:	3810      	subs	r0, #16
 801929e:	2806      	cmp	r0, #6
 80192a0:	d806      	bhi.n	80192b0 <stm32_exti_enable+0x38>
 80192a2:	4b05      	ldr	r3, [pc, #20]	; (80192b8 <stm32_exti_enable+0x40>)
 80192a4:	5618      	ldrsb	r0, [r3, r0]
 80192a6:	e7f7      	b.n	8019298 <stm32_exti_enable+0x20>
		irqnum = STM32F4_IRQ_EXTI9_5;
 80192a8:	2017      	movs	r0, #23
 80192aa:	e7f5      	b.n	8019298 <stm32_exti_enable+0x20>
		irqnum = STM32F4_IRQ_EXTI15_10;
 80192ac:	2028      	movs	r0, #40	; 0x28
 80192ae:	e7f3      	b.n	8019298 <stm32_exti_enable+0x20>
	} else if (line >= 0 && line <= 4) {
 80192b0:	2000      	movs	r0, #0
 80192b2:	e7f1      	b.n	8019298 <stm32_exti_enable+0x20>
 80192b4:	40013c00 	.word	0x40013c00
 80192b8:	08026991 	.word	0x08026991

080192bc <stm32_exti_trigger>:
	if (trigger & STM32_EXTI_TRIG_RISING) {
 80192bc:	07ca      	lsls	r2, r1, #31
{
 80192be:	b510      	push	{r4, lr}
	if (trigger & STM32_EXTI_TRIG_RISING) {
 80192c0:	d505      	bpl.n	80192ce <stm32_exti_trigger+0x12>
		exti->rtsr |= 1 << line;
 80192c2:	4a08      	ldr	r2, [pc, #32]	; (80192e4 <stm32_exti_trigger+0x28>)
 80192c4:	2301      	movs	r3, #1
 80192c6:	6894      	ldr	r4, [r2, #8]
 80192c8:	4083      	lsls	r3, r0
 80192ca:	4323      	orrs	r3, r4
 80192cc:	6093      	str	r3, [r2, #8]
	if (trigger & STM32_EXTI_TRIG_FALLING) {
 80192ce:	078b      	lsls	r3, r1, #30
 80192d0:	d506      	bpl.n	80192e0 <stm32_exti_trigger+0x24>
		exti->ftsr |= 1 << line;
 80192d2:	4a04      	ldr	r2, [pc, #16]	; (80192e4 <stm32_exti_trigger+0x28>)
 80192d4:	2301      	movs	r3, #1
 80192d6:	68d1      	ldr	r1, [r2, #12]
 80192d8:	fa03 f000 	lsl.w	r0, r3, r0
 80192dc:	4308      	orrs	r0, r1
 80192de:	60d0      	str	r0, [r2, #12]
}
 80192e0:	bd10      	pop	{r4, pc}
 80192e2:	bf00      	nop
 80192e4:	40013c00 	.word	0x40013c00

080192e8 <stm32_exti_set_callback>:
{
 80192e8:	4b04      	ldr	r3, [pc, #16]	; (80192fc <stm32_exti_set_callback+0x14>)
 80192ea:	b510      	push	{r4, lr}
 80192ec:	689b      	ldr	r3, [r3, #8]
 80192ee:	eb03 04c0 	add.w	r4, r3, r0, lsl #3
	data->cb[line].cb = cb;
 80192f2:	f843 1030 	str.w	r1, [r3, r0, lsl #3]
	data->cb[line].data = arg;
 80192f6:	6062      	str	r2, [r4, #4]
}
 80192f8:	bd10      	pop	{r4, pc}
 80192fa:	bf00      	nop
 80192fc:	20003d8c 	.word	0x20003d8c

08019300 <stm32_clock_control_on>:
{
	struct stm32_pclken *pclken = (struct stm32_pclken *)(sub_system);

	ARG_UNUSED(dev);

	switch (pclken->bus) {
 8019300:	680b      	ldr	r3, [r1, #0]
{
 8019302:	b084      	sub	sp, #16
	switch (pclken->bus) {
 8019304:	2b03      	cmp	r3, #3
 8019306:	d80c      	bhi.n	8019322 <stm32_clock_control_on+0x22>
 8019308:	e8df f003 	tbb	[pc, r3]
 801930c:	22180e02 	.word	0x22180e02
  * @retval None
*/
__STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
{
  __IO uint32_t tmpreg;
  SET_BIT(RCC->AHB1ENR, Periphs);
 8019310:	4a14      	ldr	r2, [pc, #80]	; (8019364 <stm32_clock_control_on+0x64>)
	case STM32_CLOCK_BUS_AHB1:
		LL_AHB1_GRP1_EnableClock(pclken->enr);
 8019312:	684b      	ldr	r3, [r1, #4]
 8019314:	6b11      	ldr	r1, [r2, #48]	; 0x30
 8019316:	4319      	orrs	r1, r3
 8019318:	6311      	str	r1, [r2, #48]	; 0x30
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->AHB1ENR, Periphs);
 801931a:	6b12      	ldr	r2, [r2, #48]	; 0x30
 801931c:	4013      	ands	r3, r2
 801931e:	9300      	str	r3, [sp, #0]
  (void)tmpreg;
 8019320:	9b00      	ldr	r3, [sp, #0]
		break;
#endif /* CONFIG_SOC_SERIES_STM32F0X */
	}

	return 0;
}
 8019322:	2000      	movs	r0, #0
 8019324:	b004      	add	sp, #16
 8019326:	4770      	bx	lr
  * @retval None
*/
__STATIC_INLINE void LL_AHB2_GRP1_EnableClock(uint32_t Periphs)
{
  __IO uint32_t tmpreg;
  SET_BIT(RCC->AHB2ENR, Periphs);
 8019328:	4a0e      	ldr	r2, [pc, #56]	; (8019364 <stm32_clock_control_on+0x64>)
		LL_AHB2_GRP1_EnableClock(pclken->enr);
 801932a:	684b      	ldr	r3, [r1, #4]
 801932c:	6b51      	ldr	r1, [r2, #52]	; 0x34
 801932e:	4319      	orrs	r1, r3
 8019330:	6351      	str	r1, [r2, #52]	; 0x34
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 8019332:	6b52      	ldr	r2, [r2, #52]	; 0x34
 8019334:	4013      	ands	r3, r2
 8019336:	9301      	str	r3, [sp, #4]
  (void)tmpreg;
 8019338:	9b01      	ldr	r3, [sp, #4]
 801933a:	e7f2      	b.n	8019322 <stm32_clock_control_on+0x22>
  * @retval None
*/
__STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
{
  __IO uint32_t tmpreg;
  SET_BIT(RCC->APB1ENR, Periphs);
 801933c:	4a09      	ldr	r2, [pc, #36]	; (8019364 <stm32_clock_control_on+0x64>)
		LL_APB1_GRP1_EnableClock(pclken->enr);
 801933e:	684b      	ldr	r3, [r1, #4]
 8019340:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8019342:	4319      	orrs	r1, r3
 8019344:	6411      	str	r1, [r2, #64]	; 0x40
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->APB1ENR, Periphs);
 8019346:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8019348:	4013      	ands	r3, r2
 801934a:	9302      	str	r3, [sp, #8]
  (void)tmpreg;
 801934c:	9b02      	ldr	r3, [sp, #8]
 801934e:	e7e8      	b.n	8019322 <stm32_clock_control_on+0x22>
  * @retval None
*/
__STATIC_INLINE void LL_APB2_GRP1_EnableClock(uint32_t Periphs)
{
  __IO uint32_t tmpreg;
  SET_BIT(RCC->APB2ENR, Periphs);
 8019350:	4a04      	ldr	r2, [pc, #16]	; (8019364 <stm32_clock_control_on+0x64>)
		LL_APB2_GRP1_EnableClock(pclken->enr);
 8019352:	684b      	ldr	r3, [r1, #4]
 8019354:	6c51      	ldr	r1, [r2, #68]	; 0x44
 8019356:	4319      	orrs	r1, r3
 8019358:	6451      	str	r1, [r2, #68]	; 0x44
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 801935a:	6c52      	ldr	r2, [r2, #68]	; 0x44
 801935c:	4013      	ands	r3, r2
 801935e:	9303      	str	r3, [sp, #12]
  (void)tmpreg;
 8019360:	9b03      	ldr	r3, [sp, #12]
 8019362:	e7de      	b.n	8019322 <stm32_clock_control_on+0x22>
 8019364:	40023800 	.word	0x40023800

08019368 <stm32_clock_control_off>:
{
	struct stm32_pclken *pclken = (struct stm32_pclken *)(sub_system);

	ARG_UNUSED(dev);

	switch (pclken->bus) {
 8019368:	680b      	ldr	r3, [r1, #0]
 801936a:	2b03      	cmp	r3, #3
 801936c:	d809      	bhi.n	8019382 <stm32_clock_control_off+0x1a>
 801936e:	e8df f003 	tbb	[pc, r3]
 8019372:	0a02      	.short	0x0a02
 8019374:	1811      	.short	0x1811
  CLEAR_BIT(RCC->AHB1ENR, Periphs);
 8019376:	4a0e      	ldr	r2, [pc, #56]	; (80193b0 <stm32_clock_control_off+0x48>)
 8019378:	6849      	ldr	r1, [r1, #4]
 801937a:	6b13      	ldr	r3, [r2, #48]	; 0x30
 801937c:	ea23 0301 	bic.w	r3, r3, r1
 8019380:	6313      	str	r3, [r2, #48]	; 0x30
		break;
#endif /* CONFIG_SOC_SERIES_STM32F0X */
	}

	return 0;
}
 8019382:	2000      	movs	r0, #0
 8019384:	4770      	bx	lr
  CLEAR_BIT(RCC->AHB2ENR, Periphs);
 8019386:	4a0a      	ldr	r2, [pc, #40]	; (80193b0 <stm32_clock_control_off+0x48>)
 8019388:	6849      	ldr	r1, [r1, #4]
 801938a:	6b53      	ldr	r3, [r2, #52]	; 0x34
 801938c:	ea23 0301 	bic.w	r3, r3, r1
 8019390:	6353      	str	r3, [r2, #52]	; 0x34
 8019392:	e7f6      	b.n	8019382 <stm32_clock_control_off+0x1a>
  CLEAR_BIT(RCC->APB1ENR, Periphs);
 8019394:	4a06      	ldr	r2, [pc, #24]	; (80193b0 <stm32_clock_control_off+0x48>)
 8019396:	6849      	ldr	r1, [r1, #4]
 8019398:	6c13      	ldr	r3, [r2, #64]	; 0x40
 801939a:	ea23 0301 	bic.w	r3, r3, r1
 801939e:	6413      	str	r3, [r2, #64]	; 0x40
 80193a0:	e7ef      	b.n	8019382 <stm32_clock_control_off+0x1a>
  *         (*) value not defined in all devices.
  * @retval None
*/
__STATIC_INLINE void LL_APB2_GRP1_DisableClock(uint32_t Periphs)
{
  CLEAR_BIT(RCC->APB2ENR, Periphs);
 80193a2:	4a03      	ldr	r2, [pc, #12]	; (80193b0 <stm32_clock_control_off+0x48>)
 80193a4:	6849      	ldr	r1, [r1, #4]
 80193a6:	6c53      	ldr	r3, [r2, #68]	; 0x44
 80193a8:	ea23 0301 	bic.w	r3, r3, r1
 80193ac:	6453      	str	r3, [r2, #68]	; 0x44
 80193ae:	e7e8      	b.n	8019382 <stm32_clock_control_off+0x1a>
 80193b0:	40023800 	.word	0x40023800

080193b4 <stm32_clock_control_get_subsys_rate>:
	 * Get AHB Clock (= SystemCoreClock = SYSCLK/prescaler)
	 * SystemCoreClock is preferred to CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC
	 * since it will be updated after clock configuration and hence
	 * more likely to contain actual clock speed
	 */
	u32_t ahb_clock = SystemCoreClock;
 80193b4:	4b07      	ldr	r3, [pc, #28]	; (80193d4 <stm32_clock_control_get_subsys_rate+0x20>)
				CONFIG_CLOCK_STM32_APB2_PRESCALER);
#endif /* CONFIG_SOC_SERIES_STM32F0X */

	ARG_UNUSED(clock);

	switch (pclken->bus) {
 80193b6:	6809      	ldr	r1, [r1, #0]
	u32_t ahb_clock = SystemCoreClock;
 80193b8:	681b      	ldr	r3, [r3, #0]
	switch (pclken->bus) {
 80193ba:	2903      	cmp	r1, #3
 80193bc:	d805      	bhi.n	80193ca <stm32_clock_control_get_subsys_rate+0x16>
 80193be:	e8df f001 	tbb	[pc, r1]
 80193c2:	0303      	.short	0x0303
 80193c4:	0602      	.short	0x0602
	return clock / prescaler;
 80193c6:	089b      	lsrs	r3, r3, #2
#endif /* CONFIG_SOC_SERIES_STM32L4X || CONFIG_SOC_SERIES_STM32F0X  */
		*rate = apb1_clock;
		break;
#ifndef CONFIG_SOC_SERIES_STM32F0X
	case STM32_CLOCK_BUS_APB2:
		*rate = apb2_clock;
 80193c8:	6013      	str	r3, [r2, #0]
		break;
#endif /* CONFIG_SOC_SERIES_STM32F0X */
	}

	return 0;
}
 80193ca:	2000      	movs	r0, #0
 80193cc:	4770      	bx	lr
	return clock / prescaler;
 80193ce:	085b      	lsrs	r3, r3, #1
 80193d0:	e7fa      	b.n	80193c8 <stm32_clock_control_get_subsys_rate+0x14>
 80193d2:	bf00      	nop
 80193d4:	20003348 	.word	0x20003348

080193d8 <stm32_clock_control_init>:
	while (LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_HSI) {
	}
}

static int stm32_clock_control_init(struct device *dev)
{
 80193d8:	b530      	push	{r4, r5, lr}
	clk_init->APB1CLKDivider = apb1_prescaler(
 80193da:	2100      	movs	r1, #0
{
 80193dc:	b087      	sub	sp, #28
	clk_init->APB1CLKDivider = apb1_prescaler(
 80193de:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 80193e2:	e9cd 1300 	strd	r1, r3, [sp]
	clk_init->APB2CLKDivider = apb2_prescaler(
 80193e6:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80193ea:	9302      	str	r3, [sp, #8]

	/* configure clock for AHB/APB buses */
	config_bus_clk_init((LL_UTILS_ClkInitTypeDef *)&s_ClkInitStruct);

	/* Some clocks would be activated by default */
	config_enable_default_clocks();
 80193ec:	f000 f848 	bl	8019480 <config_enable_default_clocks>

#ifdef CONFIG_CLOCK_STM32_SYSCLK_SRC_PLL
	LL_UTILS_PLLInitTypeDef s_PLLInitStruct;

	/* configure PLL input settings */
	config_pll_init(&s_PLLInitStruct);
 80193f0:	a803      	add	r0, sp, #12
 80193f2:	f000 f83d 	bl	8019470 <config_pll_init>
  return (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == (RCC_CR_HSIRDY));
 80193f6:	4b1c      	ldr	r3, [pc, #112]	; (8019468 <stm32_clock_control_init+0x90>)
 80193f8:	681a      	ldr	r2, [r3, #0]
	if (LL_RCC_HSI_IsReady() != 1) {
 80193fa:	0790      	lsls	r0, r2, #30
 80193fc:	d406      	bmi.n	801940c <stm32_clock_control_init+0x34>
  SET_BIT(RCC->CR, RCC_CR_HSION);
 80193fe:	681a      	ldr	r2, [r3, #0]
 8019400:	f042 0201 	orr.w	r2, r2, #1
 8019404:	601a      	str	r2, [r3, #0]
  return (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == (RCC_CR_HSIRDY));
 8019406:	681a      	ldr	r2, [r3, #0]
		while (LL_RCC_HSI_IsReady() != 1) {
 8019408:	0792      	lsls	r2, r2, #30
 801940a:	d5fc      	bpl.n	8019406 <stm32_clock_control_init+0x2e>
  MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, Source);
 801940c:	4c16      	ldr	r4, [pc, #88]	; (8019468 <stm32_clock_control_init+0x90>)
 801940e:	68a3      	ldr	r3, [r4, #8]
 8019410:	f023 0303 	bic.w	r3, r3, #3
 8019414:	60a3      	str	r3, [r4, #8]
  MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, Prescaler);
 8019416:	68a3      	ldr	r3, [r4, #8]
 8019418:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 801941c:	60a3      	str	r3, [r4, #8]
  return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_SWS));
 801941e:	68a5      	ldr	r5, [r4, #8]
	while (LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_HSI) {
 8019420:	f015 050c 	ands.w	r5, r5, #12
 8019424:	d1fb      	bne.n	801941e <stm32_clock_control_init+0x46>
  CLEAR_BIT(RCC->CR, RCC_CR_PLLON);
 8019426:	6823      	ldr	r3, [r4, #0]
 8019428:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 801942c:	6023      	str	r3, [r4, #0]
	 */
	stm32_clock_switch_to_hsi(LL_RCC_SYSCLK_DIV_1);
	LL_RCC_PLL_Disable();

#ifdef CONFIG_CLOCK_STM32_PLL_Q_DIVISOR
	MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLQ,
 801942e:	6863      	ldr	r3, [r4, #4]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8019430:	f04f 6270 	mov.w	r2, #251658240	; 0xf000000
 8019434:	fa92 f2a2 	rbit	r2, r2
 8019438:	2107      	movs	r1, #7
 801943a:	fab2 f282 	clz	r2, r2
 801943e:	fa01 f202 	lsl.w	r2, r1, r2
 8019442:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8019446:	4313      	orrs	r3, r2
 8019448:	6063      	str	r3, [r4, #4]
#ifdef CONFIG_CLOCK_STM32_HSE_BYPASS
	hse_bypass = LL_UTILS_HSEBYPASS_ON;
#endif /* CONFIG_CLOCK_STM32_HSE_BYPASS */

	/* Switch to PLL with HSE as clock source */
	LL_PLL_ConfigSystemClock_HSE(CONFIG_CLOCK_STM32_HSE_CLOCK, hse_bypass,
 801944a:	aa03      	add	r2, sp, #12
 801944c:	466b      	mov	r3, sp
 801944e:	4629      	mov	r1, r5
 8019450:	4806      	ldr	r0, [pc, #24]	; (801946c <stm32_clock_control_init+0x94>)
 8019452:	f7ff fe05 	bl	8019060 <LL_PLL_ConfigSystemClock_HSE>
  CLEAR_BIT(RCC->CR, RCC_CR_HSION);
 8019456:	6823      	ldr	r3, [r4, #0]
 8019458:	f023 0301 	bic.w	r3, r3, #1
 801945c:	6023      	str	r3, [r4, #0]
							&s_PLLInitStruct,
							&s_ClkInitStruct);

	/* Disable other clocks */
	LL_RCC_HSI_Disable();
	LL_RCC_MSI_Disable();
 801945e:	f000 f81f 	bl	80194a0 <LL_RCC_MSI_Disable>
	LL_RCC_PLL_Disable();

#endif /* CONFIG_CLOCK_STM32_SYSCLK_SRC_... */

	return 0;
}
 8019462:	4628      	mov	r0, r5
 8019464:	b007      	add	sp, #28
 8019466:	bd30      	pop	{r4, r5, pc}
 8019468:	40023800 	.word	0x40023800
 801946c:	007a1200 	.word	0x007a1200

08019470 <config_pll_init>:
 * @brief fill in pll configuration structure
 */
void config_pll_init(LL_UTILS_PLLInitTypeDef *pllinit)
{
	pllinit->PLLM = pllm(CONFIG_CLOCK_STM32_PLL_M_DIVISOR);
	pllinit->PLLN = CONFIG_CLOCK_STM32_PLL_N_MULTIPLIER;
 8019470:	f44f 73a8 	mov.w	r3, #336	; 0x150
 8019474:	2208      	movs	r2, #8
 8019476:	e9c0 2300 	strd	r2, r3, [r0]
	pllinit->PLLP = pllp(CONFIG_CLOCK_STM32_PLL_P_DIVISOR);
 801947a:	2300      	movs	r3, #0
 801947c:	6083      	str	r3, [r0, #8]
}
 801947e:	4770      	bx	lr

08019480 <config_enable_default_clocks>:
  SET_BIT(RCC->APB1ENR, Periphs);
 8019480:	4b06      	ldr	r3, [pc, #24]	; (801949c <config_enable_default_clocks+0x1c>)
 8019482:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8019484:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8019488:	641a      	str	r2, [r3, #64]	; 0x40
  tmpreg = READ_BIT(RCC->APB1ENR, Periphs);
 801948a:	6c1b      	ldr	r3, [r3, #64]	; 0x40

/**
 * @brief Activate default clocks
 */
void config_enable_default_clocks(void)
{
 801948c:	b082      	sub	sp, #8
 801948e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8019492:	9301      	str	r3, [sp, #4]
  (void)tmpreg;
 8019494:	9b01      	ldr	r3, [sp, #4]
	/* Power Interface clock enabled by default */
	LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_PWR);
}
 8019496:	b002      	add	sp, #8
 8019498:	4770      	bx	lr
 801949a:	bf00      	nop
 801949c:	40023800 	.word	0x40023800

080194a0 <LL_RCC_MSI_Disable>:
 * @brief Function kept for driver genericity
 */
void LL_RCC_MSI_Disable(void)
{
	/* Do nothing */
}
 80194a0:	4770      	bx	lr

080194a2 <gpio_stm32_isr>:
 * @brief EXTI interrupt callback
 */
static void gpio_stm32_isr(int line, void *arg)
{
	struct device *dev = arg;
	struct gpio_stm32_data *data = dev->driver_data;
 80194a2:	688a      	ldr	r2, [r1, #8]

	if (BIT(line) & data->cb_pins) {
 80194a4:	6813      	ldr	r3, [r2, #0]
 80194a6:	40c3      	lsrs	r3, r0
 80194a8:	07db      	lsls	r3, r3, #31
{
 80194aa:	b570      	push	{r4, r5, r6, lr}
 80194ac:	460e      	mov	r6, r1
	if (BIT(line) & data->cb_pins) {
 80194ae:	d50e      	bpl.n	80194ce <gpio_stm32_isr+0x2c>
 80194b0:	6854      	ldr	r4, [r2, #4]
					struct device *port,
					u32_t pins)
{
	struct gpio_callback *cb;

	SYS_SLIST_FOR_EACH_CONTAINER(list, cb, node) {
 80194b2:	b164      	cbz	r4, 80194ce <gpio_stm32_isr+0x2c>
		_gpio_fire_callbacks(&data->cb, dev, BIT(line));
 80194b4:	2501      	movs	r5, #1
 80194b6:	4085      	lsls	r5, r0
		if (cb->pin_mask & pins) {
 80194b8:	68a3      	ldr	r3, [r4, #8]
 80194ba:	421d      	tst	r5, r3
 80194bc:	d004      	beq.n	80194c8 <gpio_stm32_isr+0x26>
			__ASSERT(cb->handler, "No callback handler!");
			cb->handler(port, cb, pins);
 80194be:	6863      	ldr	r3, [r4, #4]
 80194c0:	462a      	mov	r2, r5
 80194c2:	4621      	mov	r1, r4
 80194c4:	4630      	mov	r0, r6
 80194c6:	4798      	blx	r3
 *
 * @return a pointer on the next node (or NULL if none)
 */
static inline sys_snode_t *sys_slist_peek_next_no_check(sys_snode_t *node)
{
	return node->next;
 80194c8:	6824      	ldr	r4, [r4, #0]
	SYS_SLIST_FOR_EACH_CONTAINER(list, cb, node) {
 80194ca:	2c00      	cmp	r4, #0
 80194cc:	d1f4      	bne.n	80194b8 <gpio_stm32_isr+0x16>
	}
}
 80194ce:	bd70      	pop	{r4, r5, r6, pc}

080194d0 <gpio_stm32_manage_callback>:

static int gpio_stm32_manage_callback(struct device *dev,
				      struct gpio_callback *callback,
				      bool set)
{
	struct gpio_stm32_data *data = dev->driver_data;
 80194d0:	6883      	ldr	r3, [r0, #8]
{
 80194d2:	b510      	push	{r4, lr}
 80194d4:	6858      	ldr	r0, [r3, #4]
	if (set) {
 80194d6:	b16a      	cbz	r2, 80194f4 <gpio_stm32_manage_callback+0x24>
				     sys_snode_t *node)
{
	node->next = list->head;
	list->head = node;

	if (!list->tail) {
 80194d8:	689a      	ldr	r2, [r3, #8]
	node->next = list->head;
 80194da:	6008      	str	r0, [r1, #0]
	list->head = node;
 80194dc:	6059      	str	r1, [r3, #4]
	if (!list->tail) {
 80194de:	b902      	cbnz	r2, 80194e2 <gpio_stm32_manage_callback+0x12>
		list->tail = list->head;
 80194e0:	6099      	str	r1, [r3, #8]

	_gpio_manage_callback(&data->cb, callback, set);

	return 0;
}
 80194e2:	2000      	movs	r0, #0
 80194e4:	bd10      	pop	{r4, pc}
		}
	} else {
		prev_node->next = node->next;

		/* Was node the tail? */
		if (list->tail == node) {
 80194e6:	42a1      	cmp	r1, r4
		prev_node->next = node->next;
 80194e8:	6010      	str	r0, [r2, #0]
			list->tail = prev_node;
 80194ea:	bf08      	it	eq
 80194ec:	609a      	streq	r2, [r3, #8]
 80194ee:	e00d      	b.n	801950c <gpio_stm32_manage_callback+0x3c>
					     sys_snode_t *node)
{
	sys_snode_t *prev = NULL;
	sys_snode_t *test;

	SYS_SLIST_FOR_EACH_NODE(list, test) {
 80194f0:	4602      	mov	r2, r0
 80194f2:	6800      	ldr	r0, [r0, #0]
 80194f4:	2800      	cmp	r0, #0
 80194f6:	d0f4      	beq.n	80194e2 <gpio_stm32_manage_callback+0x12>
		if (test == node) {
 80194f8:	4288      	cmp	r0, r1
 80194fa:	d1f9      	bne.n	80194f0 <gpio_stm32_manage_callback+0x20>
 80194fc:	6808      	ldr	r0, [r1, #0]
 80194fe:	689c      	ldr	r4, [r3, #8]
	if (!prev_node) {
 8019500:	2a00      	cmp	r2, #0
 8019502:	d1f0      	bne.n	80194e6 <gpio_stm32_manage_callback+0x16>
		if (list->tail == node) {
 8019504:	42a1      	cmp	r1, r4
		list->head = node->next;
 8019506:	6058      	str	r0, [r3, #4]
		if (list->tail == node) {
 8019508:	d100      	bne.n	801950c <gpio_stm32_manage_callback+0x3c>
			list->tail = list->head;
 801950a:	6098      	str	r0, [r3, #8]
	node->next = NULL;
 801950c:	2300      	movs	r3, #0
 801950e:	600b      	str	r3, [r1, #0]
 8019510:	e7e7      	b.n	80194e2 <gpio_stm32_manage_callback+0x12>

08019512 <gpio_stm32_enable_callback>:

static int gpio_stm32_enable_callback(struct device *dev,
				      int access_op, u32_t pin)
{
	struct gpio_stm32_data *data = dev->driver_data;
 8019512:	6880      	ldr	r0, [r0, #8]

	if (access_op != GPIO_ACCESS_BY_PIN) {
 8019514:	b939      	cbnz	r1, 8019526 <gpio_stm32_enable_callback+0x14>
		return -ENOTSUP;
	}

	data->cb_pins |= BIT(pin);
 8019516:	2301      	movs	r3, #1
 8019518:	fa03 f202 	lsl.w	r2, r3, r2
 801951c:	6803      	ldr	r3, [r0, #0]
 801951e:	4313      	orrs	r3, r2
 8019520:	6003      	str	r3, [r0, #0]

	return 0;
}
 8019522:	4608      	mov	r0, r1
 8019524:	4770      	bx	lr
		return -ENOTSUP;
 8019526:	f06f 0185 	mvn.w	r1, #133	; 0x85
 801952a:	e7fa      	b.n	8019522 <gpio_stm32_enable_callback+0x10>

0801952c <gpio_stm32_disable_callback>:

static int gpio_stm32_disable_callback(struct device *dev,
				       int access_op, u32_t pin)
{
	struct gpio_stm32_data *data = dev->driver_data;
 801952c:	6880      	ldr	r0, [r0, #8]

	if (access_op != GPIO_ACCESS_BY_PIN) {
 801952e:	b941      	cbnz	r1, 8019542 <gpio_stm32_disable_callback+0x16>
		return -ENOTSUP;
	}

	data->cb_pins &= ~BIT(pin);
 8019530:	2301      	movs	r3, #1
 8019532:	fa03 f202 	lsl.w	r2, r3, r2
 8019536:	6803      	ldr	r3, [r0, #0]
 8019538:	ea23 0302 	bic.w	r3, r3, r2
 801953c:	6003      	str	r3, [r0, #0]

	return 0;
}
 801953e:	4608      	mov	r0, r1
 8019540:	4770      	bx	lr
		return -ENOTSUP;
 8019542:	f06f 0185 	mvn.w	r1, #133	; 0x85
 8019546:	e7fa      	b.n	801953e <gpio_stm32_disable_callback+0x12>

08019548 <gpio_stm32_init>:
 *
 * @return 0
 */
static int gpio_stm32_init(struct device *device)
{
	const struct gpio_stm32_config *cfg = device->config->config_info;
 8019548:	6803      	ldr	r3, [r0, #0]

	/* enable clock for subsystem */
	struct device *clk =
 801954a:	4806      	ldr	r0, [pc, #24]	; (8019564 <gpio_stm32_init+0x1c>)
{
 801954c:	b510      	push	{r4, lr}
	const struct gpio_stm32_config *cfg = device->config->config_info;
 801954e:	689c      	ldr	r4, [r3, #8]
	struct device *clk =
 8019550:	f000 fa5e 	bl	8019a10 <device_get_binding>
 8019554:	6843      	ldr	r3, [r0, #4]
 8019556:	f104 0108 	add.w	r1, r4, #8
 801955a:	681b      	ldr	r3, [r3, #0]
 801955c:	4798      	blx	r3
		device_get_binding(STM32_CLOCK_CONTROL_NAME);

	clock_control_on(clk, (clock_control_subsys_t *) &cfg->pclken);

	return 0;
}
 801955e:	2000      	movs	r0, #0
 8019560:	bd10      	pop	{r4, pc}
 8019562:	bf00      	nop
 8019564:	08026558 	.word	0x08026558

08019568 <gpio_stm32_read>:
{
 8019568:	b538      	push	{r3, r4, r5, lr}
 801956a:	461d      	mov	r5, r3
	const struct gpio_stm32_config *cfg = dev->config->config_info;
 801956c:	6803      	ldr	r3, [r0, #0]
	if (access_op != GPIO_ACCESS_BY_PIN) {
 801956e:	460c      	mov	r4, r1
	const struct gpio_stm32_config *cfg = dev->config->config_info;
 8019570:	689b      	ldr	r3, [r3, #8]
	if (access_op != GPIO_ACCESS_BY_PIN) {
 8019572:	b931      	cbnz	r1, 8019582 <gpio_stm32_read+0x1a>
	*value = stm32_gpio_get(cfg->base, pin);
 8019574:	4611      	mov	r1, r2
 8019576:	6818      	ldr	r0, [r3, #0]
 8019578:	f7fe fdef 	bl	801815a <stm32_gpio_get>
 801957c:	6028      	str	r0, [r5, #0]
}
 801957e:	4620      	mov	r0, r4
 8019580:	bd38      	pop	{r3, r4, r5, pc}
		return -ENOTSUP;
 8019582:	f06f 0485 	mvn.w	r4, #133	; 0x85
 8019586:	e7fa      	b.n	801957e <gpio_stm32_read+0x16>

08019588 <gpio_stm32_write>:
{
 8019588:	b410      	push	{r4}
 801958a:	4614      	mov	r4, r2
	const struct gpio_stm32_config *cfg = dev->config->config_info;
 801958c:	6802      	ldr	r2, [r0, #0]
 801958e:	6890      	ldr	r0, [r2, #8]
	if (access_op != GPIO_ACCESS_BY_PIN) {
 8019590:	b929      	cbnz	r1, 801959e <gpio_stm32_write+0x16>
	return stm32_gpio_set(cfg->base, pin, value);
 8019592:	4621      	mov	r1, r4
 8019594:	461a      	mov	r2, r3
 8019596:	6800      	ldr	r0, [r0, #0]
}
 8019598:	bc10      	pop	{r4}
	return stm32_gpio_set(cfg->base, pin, value);
 801959a:	f7fe bdd4 	b.w	8018146 <stm32_gpio_set>
}
 801959e:	f06f 0085 	mvn.w	r0, #133	; 0x85
 80195a2:	bc10      	pop	{r4}
 80195a4:	4770      	bx	lr
	...

080195a8 <gpio_stm32_config>:
{
 80195a8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80195aa:	461c      	mov	r4, r3
	const struct gpio_stm32_config *cfg = dev->config->config_info;
 80195ac:	6803      	ldr	r3, [r0, #0]
{
 80195ae:	4607      	mov	r7, r0
 80195b0:	4615      	mov	r5, r2
	const struct gpio_stm32_config *cfg = dev->config->config_info;
 80195b2:	689e      	ldr	r6, [r3, #8]
	if (access_op != GPIO_ACCESS_BY_PIN) {
 80195b4:	bb59      	cbnz	r1, 801960e <gpio_stm32_config+0x66>
	map_res = stm32_gpio_flags_to_conf(flags, &pincfg);
 80195b6:	a901      	add	r1, sp, #4
 80195b8:	4620      	mov	r0, r4
 80195ba:	f7fe fd61 	bl	8018080 <stm32_gpio_flags_to_conf>
	if (map_res) {
 80195be:	bb10      	cbnz	r0, 8019606 <gpio_stm32_config+0x5e>
	if (stm32_gpio_configure(cfg->base, pin, pincfg, 0)) {
 80195c0:	4603      	mov	r3, r0
 80195c2:	9a01      	ldr	r2, [sp, #4]
 80195c4:	6830      	ldr	r0, [r6, #0]
 80195c6:	4629      	mov	r1, r5
 80195c8:	f7fe fd77 	bl	80180ba <stm32_gpio_configure>
 80195cc:	bb10      	cbnz	r0, 8019614 <gpio_stm32_config+0x6c>
	if (flags & GPIO_INT) {
 80195ce:	f014 0002 	ands.w	r0, r4, #2
 80195d2:	d018      	beq.n	8019606 <gpio_stm32_config+0x5e>
		stm32_exti_set_callback(pin, gpio_stm32_isr, dev);
 80195d4:	463a      	mov	r2, r7
 80195d6:	4911      	ldr	r1, [pc, #68]	; (801961c <gpio_stm32_config+0x74>)
 80195d8:	4628      	mov	r0, r5
 80195da:	f7ff fe85 	bl	80192e8 <stm32_exti_set_callback>
		stm32_gpio_enable_int(cfg->port, pin);
 80195de:	4629      	mov	r1, r5
 80195e0:	6870      	ldr	r0, [r6, #4]
 80195e2:	f7fe fdbf 	bl	8018164 <stm32_gpio_enable_int>
		if (flags & GPIO_INT_EDGE) {
 80195e6:	06a2      	lsls	r2, r4, #26
 80195e8:	d509      	bpl.n	80195fe <gpio_stm32_config+0x56>
			if (flags & GPIO_INT_DOUBLE_EDGE) {
 80195ea:	0663      	lsls	r3, r4, #25
 80195ec:	d40d      	bmi.n	801960a <gpio_stm32_config+0x62>
				edge = STM32_EXTI_TRIG_FALLING;
 80195ee:	f014 0f04 	tst.w	r4, #4
 80195f2:	bf14      	ite	ne
 80195f4:	2101      	movne	r1, #1
 80195f6:	2102      	moveq	r1, #2
			stm32_exti_trigger(pin, edge);
 80195f8:	4628      	mov	r0, r5
 80195fa:	f7ff fe5f 	bl	80192bc <stm32_exti_trigger>
		stm32_exti_enable(pin);
 80195fe:	4628      	mov	r0, r5
 8019600:	f7ff fe3a 	bl	8019278 <stm32_exti_enable>
	return 0;
 8019604:	2000      	movs	r0, #0
}
 8019606:	b003      	add	sp, #12
 8019608:	bdf0      	pop	{r4, r5, r6, r7, pc}
				edge = STM32_EXTI_TRIG_RISING |
 801960a:	2103      	movs	r1, #3
 801960c:	e7f4      	b.n	80195f8 <gpio_stm32_config+0x50>
		return -ENOTSUP;
 801960e:	f06f 0085 	mvn.w	r0, #133	; 0x85
 8019612:	e7f8      	b.n	8019606 <gpio_stm32_config+0x5e>
		return -EIO;
 8019614:	f06f 0004 	mvn.w	r0, #4
 8019618:	e7f5      	b.n	8019606 <gpio_stm32_config+0x5e>
 801961a:	bf00      	nop
 801961c:	080194a3 	.word	0x080194a3

08019620 <_pinmux_stm32_set>:
 *
 * @return 0 on success, error otherwise
 */
int _pinmux_stm32_set(u32_t pin, u32_t func,
				struct device *clk)
{
 8019620:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8019622:	4604      	mov	r4, r0
	/* make sure to enable port clock first */
	if (enable_port(STM32_PORT(pin), clk)) {
 8019624:	0906      	lsrs	r6, r0, #4
{
 8019626:	460d      	mov	r5, r1
	if (!clk) {
 8019628:	4610      	mov	r0, r2
 801962a:	b912      	cbnz	r2, 8019632 <_pinmux_stm32_set+0x12>
		clk = device_get_binding(STM32_CLOCK_CONTROL_NAME);
 801962c:	480f      	ldr	r0, [pc, #60]	; (801966c <_pinmux_stm32_set+0x4c>)
 801962e:	f000 f9ef 	bl	8019a10 <device_get_binding>
	pclken.bus = STM32_CLOCK_BUS_GPIO;
 8019632:	2300      	movs	r3, #0
 8019634:	9300      	str	r3, [sp, #0]
	pclken.enr = ports_enable[port];
 8019636:	4b0e      	ldr	r3, [pc, #56]	; (8019670 <_pinmux_stm32_set+0x50>)
 8019638:	f853 3026 	ldr.w	r3, [r3, r6, lsl #2]
 801963c:	9301      	str	r3, [sp, #4]
 801963e:	6843      	ldr	r3, [r0, #4]
 8019640:	4669      	mov	r1, sp
 8019642:	681b      	ldr	r3, [r3, #0]
 8019644:	4798      	blx	r3
	if (enable_port(STM32_PORT(pin), clk)) {
 8019646:	b970      	cbnz	r0, 8019666 <_pinmux_stm32_set+0x46>
	u32_t offset = STM32_PORT(pin) * GPIO_REG_SIZE;
 8019648:	1120      	asrs	r0, r4, #4
 801964a:	0280      	lsls	r0, r0, #10
	return stm32_gpio_configure((u32_t *)port_base,
 801964c:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
 8019650:	f005 030f 	and.w	r3, r5, #15
 8019654:	462a      	mov	r2, r5
 8019656:	f004 010f 	and.w	r1, r4, #15
 801965a:	f500 3000 	add.w	r0, r0, #131072	; 0x20000
 801965e:	f7fe fd2c 	bl	80180ba <stm32_gpio_configure>
		return -EIO;
	}

	return stm32_pin_configure(pin, func, func & STM32_AFR_MASK);
}
 8019662:	b002      	add	sp, #8
 8019664:	bd70      	pop	{r4, r5, r6, pc}
		return -EIO;
 8019666:	f06f 0004 	mvn.w	r0, #4
 801966a:	e7fa      	b.n	8019662 <_pinmux_stm32_set+0x42>
 801966c:	08026558 	.word	0x08026558
 8019670:	08026a88 	.word	0x08026a88

08019674 <stm32_setup_pins>:
 * @param pinconf  board pin configuration array
 * @param pins     array size
 */
void stm32_setup_pins(const struct pin_config *pinconf,
		      size_t pins)
{
 8019674:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8019676:	4605      	mov	r5, r0
	struct device *clk;
	int i;

	clk = device_get_binding(STM32_CLOCK_CONTROL_NAME);
 8019678:	4809      	ldr	r0, [pc, #36]	; (80196a0 <stm32_setup_pins+0x2c>)
{
 801967a:	460e      	mov	r6, r1
	clk = device_get_binding(STM32_CLOCK_CONTROL_NAME);
 801967c:	f000 f9c8 	bl	8019a10 <device_get_binding>

	for (i = 0; i < pins; i++) {
 8019680:	2400      	movs	r4, #0
	clk = device_get_binding(STM32_CLOCK_CONTROL_NAME);
 8019682:	4607      	mov	r7, r0
	for (i = 0; i < pins; i++) {
 8019684:	42b4      	cmp	r4, r6
 8019686:	d100      	bne.n	801968a <stm32_setup_pins+0x16>
		_pinmux_stm32_set(pinconf[i].pin_num,
				  pinconf[i].mode,
				  clk);
	}
}
 8019688:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		_pinmux_stm32_set(pinconf[i].pin_num,
 801968a:	eb05 03c4 	add.w	r3, r5, r4, lsl #3
 801968e:	f815 0034 	ldrb.w	r0, [r5, r4, lsl #3]
 8019692:	6859      	ldr	r1, [r3, #4]
 8019694:	463a      	mov	r2, r7
 8019696:	f7ff ffc3 	bl	8019620 <_pinmux_stm32_set>
	for (i = 0; i < pins; i++) {
 801969a:	3401      	adds	r4, #1
 801969c:	e7f2      	b.n	8019684 <stm32_setup_pins+0x10>
 801969e:	bf00      	nop
 80196a0:	08026558 	.word	0x08026558

080196a4 <pwm_stm32_get_cycles_per_sec>:
 * return 0, or negative errno code
 */
static int pwm_stm32_get_cycles_per_sec(struct device *dev, u32_t pwm,
					u64_t *cycles)
{
	const struct pwm_stm32_config *cfg = DEV_CFG(dev);
 80196a4:	6803      	ldr	r3, [r0, #0]
{
 80196a6:	b537      	push	{r0, r1, r2, r4, r5, lr}
	const struct pwm_stm32_config *cfg = DEV_CFG(dev);
 80196a8:	6899      	ldr	r1, [r3, #8]
	struct pwm_stm32_data *data = DEV_DATA(dev);
 80196aa:	6885      	ldr	r5, [r0, #8]
	u32_t bus_clk, tim_clk;

	if (cycles == NULL) {
 80196ac:	4614      	mov	r4, r2
 80196ae:	b182      	cbz	r2, 80196d2 <pwm_stm32_get_cycles_per_sec+0x2e>
		return -EINVAL;
	}

	/* Timer clock depends on APB prescaler */
	clock_control_get_rate(data->clock,
 80196b0:	6c28      	ldr	r0, [r5, #64]	; 0x40
	const struct clock_control_driver_api *api = dev->driver_api;

	__ASSERT(api->get_rate, "%s not implemented for device %s",
		__func__, dev->config->name);

	return api->get_rate(dev, sys, rate);
 80196b2:	6843      	ldr	r3, [r0, #4]
 80196b4:	aa01      	add	r2, sp, #4
 80196b6:	689b      	ldr	r3, [r3, #8]
 80196b8:	3104      	adds	r1, #4
 80196ba:	4798      	blx	r3
			(clock_control_subsys_t *)&cfg->pclken, &bus_clk);

	tim_clk = __get_tim_clk(bus_clk,
			(clock_control_subsys_t *)&cfg->pclken);

	*cycles = (u64_t)(tim_clk / (data->pwm_prescaler + 1));
 80196bc:	6bea      	ldr	r2, [r5, #60]	; 0x3c
		tim_clk = 2 * bus_clk;
 80196be:	9b01      	ldr	r3, [sp, #4]
	*cycles = (u64_t)(tim_clk / (data->pwm_prescaler + 1));
 80196c0:	2000      	movs	r0, #0
		tim_clk = 2 * bus_clk;
 80196c2:	005b      	lsls	r3, r3, #1
	*cycles = (u64_t)(tim_clk / (data->pwm_prescaler + 1));
 80196c4:	3201      	adds	r2, #1
 80196c6:	fbb3 f3f2 	udiv	r3, r3, r2
 80196ca:	e9c4 3000 	strd	r3, r0, [r4]

	return 0;
}
 80196ce:	b003      	add	sp, #12
 80196d0:	bd30      	pop	{r4, r5, pc}
		return -EINVAL;
 80196d2:	f06f 0015 	mvn.w	r0, #21
 80196d6:	e7fa      	b.n	80196ce <pwm_stm32_get_cycles_per_sec+0x2a>

080196d8 <pwm_stm32_pin_set>:
{
 80196d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80196da:	461f      	mov	r7, r3
 80196dc:	b089      	sub	sp, #36	; 0x24
	struct pwm_stm32_data *data = DEV_DATA(dev);
 80196de:	6886      	ldr	r6, [r0, #8]
	if (period_cycles == 0 || pulse_cycles > period_cycles) {
 80196e0:	b3a2      	cbz	r2, 801974c <pwm_stm32_pin_set+0x74>
 80196e2:	429a      	cmp	r2, r3
 80196e4:	d332      	bcc.n	801974c <pwm_stm32_pin_set+0x74>
	if (!IS_TIM_INSTANCE(PWM_STRUCT(dev)) ||
 80196e6:	6803      	ldr	r3, [r0, #0]
 80196e8:	689b      	ldr	r3, [r3, #8]
	channel = (pwm - 1)*CHANNEL_LENGTH;
 80196ea:	f101 4480 	add.w	r4, r1, #1073741824	; 0x40000000
	if (!IS_TIM_INSTANCE(PWM_STRUCT(dev)) ||
 80196ee:	6819      	ldr	r1, [r3, #0]
 80196f0:	4b33      	ldr	r3, [pc, #204]	; (80197c0 <pwm_stm32_pin_set+0xe8>)
	channel = (pwm - 1)*CHANNEL_LENGTH;
 80196f2:	3c01      	subs	r4, #1
	if (!IS_TIM_INSTANCE(PWM_STRUCT(dev)) ||
 80196f4:	4299      	cmp	r1, r3
	channel = (pwm - 1)*CHANNEL_LENGTH;
 80196f6:	ea4f 0484 	mov.w	r4, r4, lsl #2
	if (!IS_TIM_INSTANCE(PWM_STRUCT(dev)) ||
 80196fa:	d05d      	beq.n	80197b8 <pwm_stm32_pin_set+0xe0>
 80196fc:	f1b1 4f80 	cmp.w	r1, #1073741824	; 0x40000000
 8019700:	d027      	beq.n	8019752 <pwm_stm32_pin_set+0x7a>
 8019702:	4830      	ldr	r0, [pc, #192]	; (80197c4 <pwm_stm32_pin_set+0xec>)
 8019704:	f421 6300 	bic.w	r3, r1, #2048	; 0x800
 8019708:	4283      	cmp	r3, r0
 801970a:	d052      	beq.n	80197b2 <pwm_stm32_pin_set+0xda>
 801970c:	f421 5580 	bic.w	r5, r1, #4096	; 0x1000
 8019710:	f500 6080 	add.w	r0, r0, #1024	; 0x400
 8019714:	4285      	cmp	r5, r0
 8019716:	d04c      	beq.n	80197b2 <pwm_stm32_pin_set+0xda>
 8019718:	f421 6580 	bic.w	r5, r1, #1024	; 0x400
 801971c:	f500 6000 	add.w	r0, r0, #2048	; 0x800
 8019720:	4285      	cmp	r5, r0
 8019722:	d046      	beq.n	80197b2 <pwm_stm32_pin_set+0xda>
 8019724:	f421 4580 	bic.w	r5, r1, #16384	; 0x4000
 8019728:	f500 4074 	add.w	r0, r0, #62464	; 0xf400
 801972c:	4285      	cmp	r5, r0
 801972e:	d040      	beq.n	80197b2 <pwm_stm32_pin_set+0xda>
 8019730:	f500 5070 	add.w	r0, r0, #15360	; 0x3c00
 8019734:	4283      	cmp	r3, r0
 8019736:	d03c      	beq.n	80197b2 <pwm_stm32_pin_set+0xda>
 8019738:	4b23      	ldr	r3, [pc, #140]	; (80197c8 <pwm_stm32_pin_set+0xf0>)
 801973a:	4299      	cmp	r1, r3
 801973c:	d03c      	beq.n	80197b8 <pwm_stm32_pin_set+0xe0>
 801973e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8019742:	4299      	cmp	r1, r3
 8019744:	d038      	beq.n	80197b8 <pwm_stm32_pin_set+0xe0>
		return -ENOTSUP;
 8019746:	f06f 0085 	mvn.w	r0, #133	; 0x85
 801974a:	e030      	b.n	80197ae <pwm_stm32_pin_set+0xd6>
		return -EINVAL;
 801974c:	f06f 0015 	mvn.w	r0, #21
 8019750:	e02d      	b.n	80197ae <pwm_stm32_pin_set+0xd6>
	if (!IS_TIM_INSTANCE(PWM_STRUCT(dev)) ||
 8019752:	b184      	cbz	r4, 8019776 <pwm_stm32_pin_set+0x9e>
		!IS_TIM_CHANNELS(channel)) {
 8019754:	f024 0308 	bic.w	r3, r4, #8
 8019758:	2b04      	cmp	r3, #4
 801975a:	d003      	beq.n	8019764 <pwm_stm32_pin_set+0x8c>
 801975c:	f024 0310 	bic.w	r3, r4, #16
 8019760:	2b08      	cmp	r3, #8
 8019762:	d1f0      	bne.n	8019746 <pwm_stm32_pin_set+0x6e>
	counter_32b = IS_TIM_32B_COUNTER_INSTANCE(PWM_STRUCT(dev));
 8019764:	f1b1 4f80 	cmp.w	r1, #1073741824	; 0x40000000
 8019768:	d005      	beq.n	8019776 <pwm_stm32_pin_set+0x9e>
	if (!counter_32b && (period_cycles > 0xFFFF)) {
 801976a:	4b18      	ldr	r3, [pc, #96]	; (80197cc <pwm_stm32_pin_set+0xf4>)
 801976c:	4299      	cmp	r1, r3
 801976e:	d002      	beq.n	8019776 <pwm_stm32_pin_set+0x9e>
 8019770:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8019774:	d2e7      	bcs.n	8019746 <pwm_stm32_pin_set+0x6e>
	TimerHandle->Init.ClockDivision = 0;
 8019776:	2500      	movs	r5, #0
	TimerHandle->Init.Prescaler = data->pwm_prescaler;
 8019778:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
	TimerHandle->Instance = PWM_STRUCT(dev);
 801977a:	6031      	str	r1, [r6, #0]
	TimerHandle->Init.Prescaler = data->pwm_prescaler;
 801977c:	6073      	str	r3, [r6, #4]
	TimerHandle->Init.Period = period_cycles;
 801977e:	60f2      	str	r2, [r6, #12]
	TimerHandle->Init.ClockDivision = 0;
 8019780:	6135      	str	r5, [r6, #16]
	TimerHandle->Init.CounterMode = TIM_COUNTERMODE_UP;
 8019782:	60b5      	str	r5, [r6, #8]
	TimerHandle->Init.RepetitionCounter = 0;
 8019784:	6175      	str	r5, [r6, #20]
	HAL_TIM_PWM_Init(TimerHandle);
 8019786:	4630      	mov	r0, r6
 8019788:	f7ff faea 	bl	8018d60 <HAL_TIM_PWM_Init>
	sConfig.OCMode       = TIM_OCMODE_PWM1;
 801978c:	2360      	movs	r3, #96	; 0x60
	HAL_TIM_PWM_ConfigChannel(TimerHandle, &sConfig, channel);
 801978e:	a901      	add	r1, sp, #4
 8019790:	4622      	mov	r2, r4
 8019792:	4630      	mov	r0, r6
	sConfig.OCMode       = TIM_OCMODE_PWM1;
 8019794:	9301      	str	r3, [sp, #4]
	sConfig.OCPolarity   = TIM_OCPOLARITY_HIGH;
 8019796:	9503      	str	r5, [sp, #12]
	sConfig.OCNPolarity  = TIM_OCNPOLARITY_HIGH;
 8019798:	e9cd 5504 	strd	r5, r5, [sp, #16]
	sConfig.OCIdleState  = TIM_OCIDLESTATE_RESET;
 801979c:	e9cd 5506 	strd	r5, r5, [sp, #24]
	sConfig.Pulse = pulse_cycles;
 80197a0:	9702      	str	r7, [sp, #8]
	HAL_TIM_PWM_ConfigChannel(TimerHandle, &sConfig, channel);
 80197a2:	f7ff fb27 	bl	8018df4 <HAL_TIM_PWM_ConfigChannel>
	return HAL_TIM_PWM_Start(TimerHandle, channel);
 80197a6:	4621      	mov	r1, r4
 80197a8:	4630      	mov	r0, r6
 80197aa:	f7ff fbab 	bl	8018f04 <HAL_TIM_PWM_Start>
}
 80197ae:	b009      	add	sp, #36	; 0x24
 80197b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if (!IS_TIM_INSTANCE(PWM_STRUCT(dev)) ||
 80197b2:	2c00      	cmp	r4, #0
 80197b4:	d0d9      	beq.n	801976a <pwm_stm32_pin_set+0x92>
 80197b6:	e7cd      	b.n	8019754 <pwm_stm32_pin_set+0x7c>
 80197b8:	2c00      	cmp	r4, #0
 80197ba:	d0d9      	beq.n	8019770 <pwm_stm32_pin_set+0x98>
 80197bc:	e7ca      	b.n	8019754 <pwm_stm32_pin_set+0x7c>
 80197be:	bf00      	nop
 80197c0:	40010000 	.word	0x40010000
 80197c4:	40000400 	.word	0x40000400
 80197c8:	40001c00 	.word	0x40001c00
 80197cc:	40000c00 	.word	0x40000c00

080197d0 <pwm_stm32_init>:
	data->clock = clk;
}


static int pwm_stm32_init(struct device *dev)
{
 80197d0:	b538      	push	{r3, r4, r5, lr}
	const struct pwm_stm32_config *config = DEV_CFG(dev);
 80197d2:	6803      	ldr	r3, [r0, #0]
	struct pwm_stm32_data *data = DEV_DATA(dev);
 80197d4:	6885      	ldr	r5, [r0, #8]
	struct device *clk = device_get_binding(STM32_CLOCK_CONTROL_NAME);
 80197d6:	4805      	ldr	r0, [pc, #20]	; (80197ec <pwm_stm32_init+0x1c>)
	const struct pwm_stm32_config *config = DEV_CFG(dev);
 80197d8:	689c      	ldr	r4, [r3, #8]
	struct device *clk = device_get_binding(STM32_CLOCK_CONTROL_NAME);
 80197da:	f000 f919 	bl	8019a10 <device_get_binding>
	return api->on(dev, sys);
 80197de:	6843      	ldr	r3, [r0, #4]
	data->clock = clk;
 80197e0:	6428      	str	r0, [r5, #64]	; 0x40
 80197e2:	681b      	ldr	r3, [r3, #0]
 80197e4:	1d21      	adds	r1, r4, #4
 80197e6:	4798      	blx	r3
	/* enable clock */
	clock_control_on(data->clock,
			(clock_control_subsys_t *)&config->pclken);

	return 0;
}
 80197e8:	2000      	movs	r0, #0
 80197ea:	bd38      	pop	{r3, r4, r5, pc}
 80197ec:	08026558 	.word	0x08026558

080197f0 <uart_stm32_poll_in>:

#define TIMEOUT 1000

static int uart_stm32_poll_in(struct device *dev, unsigned char *c)
{
	USART_TypeDef *UartInstance = UART_STRUCT(dev);
 80197f0:	6803      	ldr	r3, [r0, #0]
 80197f2:	689b      	ldr	r3, [r3, #8]
 80197f4:	681b      	ldr	r3, [r3, #0]
  * @param  USARTx USART Instance
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RXNE(USART_TypeDef *USARTx)
{
  return (READ_BIT(USARTx->SR, USART_SR_RXNE) == (USART_SR_RXNE));
 80197f6:	681a      	ldr	r2, [r3, #0]

	if (!LL_USART_IsActiveFlag_RXNE(UartInstance)) {
 80197f8:	0692      	lsls	r2, r2, #26
  * @param  USARTx USART Instance
  * @retval Value between Min_Data=0x00 and Max_Data=0xFF
  */
__STATIC_INLINE uint8_t LL_USART_ReceiveData8(USART_TypeDef *USARTx)
{
  return (uint8_t)(READ_BIT(USARTx->DR, USART_DR_DR));
 80197fa:	bf43      	ittte	mi
 80197fc:	685b      	ldrmi	r3, [r3, #4]
 80197fe:	700b      	strbmi	r3, [r1, #0]
		return -1;
	}

	*c = (unsigned char)LL_USART_ReceiveData8(UartInstance);

	return 0;
 8019800:	2000      	movmi	r0, #0
		return -1;
 8019802:	f04f 30ff 	movpl.w	r0, #4294967295	; 0xffffffff
}
 8019806:	4770      	bx	lr

08019808 <uart_stm32_poll_out>:

static unsigned char uart_stm32_poll_out(struct device *dev,
					unsigned char c)
{
	USART_TypeDef *UartInstance = UART_STRUCT(dev);
 8019808:	6803      	ldr	r3, [r0, #0]
 801980a:	689b      	ldr	r3, [r3, #8]
 801980c:	681b      	ldr	r3, [r3, #0]
  return (READ_BIT(USARTx->SR, USART_SR_TXE) == (USART_SR_TXE));
 801980e:	681a      	ldr	r2, [r3, #0]

	/* Wait for TXE flag to be raised */
	while (!LL_USART_IsActiveFlag_TXE(UartInstance))
 8019810:	0612      	lsls	r2, r2, #24
 8019812:	d5fc      	bpl.n	801980e <uart_stm32_poll_out+0x6>
  WRITE_REG(USARTx->SR , ~(USART_SR_TC));
 8019814:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8019818:	601a      	str	r2, [r3, #0]
	LL_USART_ClearFlag_TC(UartInstance);

	LL_USART_TransmitData8(UartInstance, (u8_t)c);

	return c;
}
 801981a:	4608      	mov	r0, r1
  * @param  Value between Min_Data=0x00 and Max_Data=0xFF
  * @retval None
  */
__STATIC_INLINE void LL_USART_TransmitData8(USART_TypeDef *USARTx, uint8_t Value)
{
  USARTx->DR = Value;
 801981c:	6059      	str	r1, [r3, #4]
 801981e:	4770      	bx	lr

08019820 <uart_stm32_init>:
 *
 * @return 0
 */
static int uart_stm32_init(struct device *dev)
{
	const struct uart_stm32_config *config = DEV_CFG(dev);
 8019820:	6803      	ldr	r3, [r0, #0]
{
 8019822:	b573      	push	{r0, r1, r4, r5, r6, lr}
	struct uart_stm32_data *data = DEV_DATA(dev);
	USART_TypeDef *UartInstance = UART_STRUCT(dev);
 8019824:	689d      	ldr	r5, [r3, #8]
	struct uart_stm32_data *data = DEV_DATA(dev);
 8019826:	6886      	ldr	r6, [r0, #8]
	struct device *clk =
 8019828:	481d      	ldr	r0, [pc, #116]	; (80198a0 <uart_stm32_init+0x80>)
	USART_TypeDef *UartInstance = UART_STRUCT(dev);
 801982a:	f855 4b08 	ldr.w	r4, [r5], #8
	struct device *clk =
 801982e:	f000 f8ef 	bl	8019a10 <device_get_binding>
 8019832:	6843      	ldr	r3, [r0, #4]
	data->clock = clk;
 8019834:	6430      	str	r0, [r6, #64]	; 0x40
 8019836:	4629      	mov	r1, r5
 8019838:	681b      	ldr	r3, [r3, #0]
 801983a:	4798      	blx	r3
  CLEAR_BIT(USARTx->CR1, USART_CR1_UE);
 801983c:	68e3      	ldr	r3, [r4, #12]
				 LL_USART_DATAWIDTH_8B,
				 LL_USART_PARITY_NONE,
				 LL_USART_STOPBITS_1);

	/* Get clock rate */
	clock_control_get_rate(data->clock,
 801983e:	6c30      	ldr	r0, [r6, #64]	; 0x40
 8019840:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8019844:	60e3      	str	r3, [r4, #12]
  MODIFY_REG(USARTx->CR1, USART_CR1_RE | USART_CR1_TE, TransferDirection);
 8019846:	68e3      	ldr	r3, [r4, #12]
 8019848:	f043 030c 	orr.w	r3, r3, #12
 801984c:	60e3      	str	r3, [r4, #12]
  MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE | USART_CR1_M, Parity | DataWidth);
 801984e:	68e3      	ldr	r3, [r4, #12]
 8019850:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 8019854:	60e3      	str	r3, [r4, #12]
  MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
 8019856:	6923      	ldr	r3, [r4, #16]
 8019858:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 801985c:	6123      	str	r3, [r4, #16]
	return api->get_rate(dev, sys, rate);
 801985e:	6843      	ldr	r3, [r0, #4]
 8019860:	aa01      	add	r2, sp, #4
 8019862:	4629      	mov	r1, r5
 8019864:	689b      	ldr	r3, [r3, #8]
 8019866:	4798      	blx	r3
    USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING16(PeriphClk, BaudRate));
 8019868:	9a01      	ldr	r2, [sp, #4]
 801986a:	2319      	movs	r3, #25
 801986c:	4353      	muls	r3, r2
 801986e:	6872      	ldr	r2, [r6, #4]
 8019870:	0092      	lsls	r2, r2, #2
 8019872:	fbb3 f3f2 	udiv	r3, r3, r2
 8019876:	2264      	movs	r2, #100	; 0x64
 8019878:	fbb3 f1f2 	udiv	r1, r3, r2
 801987c:	fb02 3311 	mls	r3, r2, r1, r3
 8019880:	011b      	lsls	r3, r3, #4
 8019882:	3332      	adds	r3, #50	; 0x32
 8019884:	fbb3 f3f2 	udiv	r3, r3, r2
 8019888:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 801988c:	b29b      	uxth	r3, r3
 801988e:	60a3      	str	r3, [r4, #8]
  SET_BIT(USARTx->CR1, USART_CR1_UE);
 8019890:	68e3      	ldr	r3, [r4, #12]

#ifdef CONFIG_UART_INTERRUPT_DRIVEN
	config->uconf.irq_config_func(dev);
#endif
	return 0;
}
 8019892:	2000      	movs	r0, #0
 8019894:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8019898:	60e3      	str	r3, [r4, #12]
 801989a:	b002      	add	sp, #8
 801989c:	bd70      	pop	{r4, r5, r6, pc}
 801989e:	bf00      	nop
 80198a0:	08026558 	.word	0x08026558

080198a4 <_timer_int_handler>:
	__asm__(" cpsie i"); /* re-enable interrupts (PRIMASK = 0) */

#else /* !CONFIG_SYS_POWER_MANAGEMENT */

	/* accumulate total counter value */
	clock_accumulated_count += sys_clock_hw_cycles_per_tick;
 80198a4:	4a07      	ldr	r2, [pc, #28]	; (80198c4 <_timer_int_handler+0x20>)
 80198a6:	4908      	ldr	r1, [pc, #32]	; (80198c8 <_timer_int_handler+0x24>)
{
 80198a8:	b508      	push	{r3, lr}
	clock_accumulated_count += sys_clock_hw_cycles_per_tick;
 80198aa:	6809      	ldr	r1, [r1, #0]
 80198ac:	6813      	ldr	r3, [r2, #0]
 80198ae:	440b      	add	r3, r1
 80198b0:	6013      	str	r3, [r2, #0]

	/*
	 * one more tick has occurred -- don't need to do anything special since
	 * timer is already configured to interrupt on the following tick
	 */
	_sys_clock_tick_announce();
 80198b2:	4b06      	ldr	r3, [pc, #24]	; (80198cc <_timer_int_handler+0x28>)
 80198b4:	6818      	ldr	r0, [r3, #0]
 80198b6:	f000 fb11 	bl	8019edc <_nano_sys_clock_tick_announce>
	read_timer_end_of_tick_handler();
#endif

	extern void _ExcExit(void);
	_ExcExit();
}
 80198ba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	_ExcExit();
 80198be:	f7fe bc97 	b.w	80181f0 <_ExcExit>
 80198c2:	bf00      	nop
 80198c4:	20000688 	.word	0x20000688
 80198c8:	200033a8 	.word	0x200033a8
 80198cc:	200033a4 	.word	0x200033a4

080198d0 <_sys_clock_driver_init>:
	 */

	/* systick supports 24-bit H/W counter */
	__ASSERT(sys_clock_hw_cycles_per_tick <= (1 << 24),
		 "sys_clock_hw_cycles_per_tick too large");
	sysTickReloadSet(sys_clock_hw_cycles_per_tick - 1);
 80198d0:	4b07      	ldr	r3, [pc, #28]	; (80198f0 <_sys_clock_driver_init+0x20>)
 80198d2:	681a      	ldr	r2, [r3, #0]
	SysTick->LOAD = count;
 80198d4:	4b07      	ldr	r3, [pc, #28]	; (80198f4 <_sys_clock_driver_init+0x24>)
	sysTickReloadSet(sys_clock_hw_cycles_per_tick - 1);
 80198d6:	3a01      	subs	r2, #1
	SysTick->LOAD = count;
 80198d8:	605a      	str	r2, [r3, #4]
 80198da:	4a07      	ldr	r2, [pc, #28]	; (80198f8 <_sys_clock_driver_init+0x28>)
	SysTick->VAL = 0; /* also clears the countflag */
 80198dc:	2000      	movs	r0, #0
 80198de:	2110      	movs	r1, #16
 80198e0:	6098      	str	r0, [r3, #8]
 80198e2:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23

#endif /* CONFIG_TICKLESS_IDLE */

	NVIC_SetPriority(SysTick_IRQn, _IRQ_PRIO_OFFSET);

	SysTick->CTRL = ctrl;
 80198e6:	2207      	movs	r2, #7
 80198e8:	601a      	str	r2, [r3, #0]

	SysTick->VAL = 0; /* triggers immediate reload of count */
 80198ea:	6098      	str	r0, [r3, #8]

	return 0;
}
 80198ec:	4770      	bx	lr
 80198ee:	bf00      	nop
 80198f0:	200033a8 	.word	0x200033a8
 80198f4:	e000e010 	.word	0xe000e010
 80198f8:	e000ed00 	.word	0xe000ed00

080198fc <_stdout_hook_default>:
static int _stdout_hook_default(int c)
{
	(void)(c);  /* Prevent warning about unused argument */

	return EOF;
}
 80198fc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8019900:	4770      	bx	lr

08019902 <_stdin_hook_default>:
}

static unsigned char _stdin_hook_default(void)
{
	return 0;
}
 8019902:	2000      	movs	r0, #0
 8019904:	4770      	bx	lr
	...

08019908 <__stdout_hook_install>:
	_stdout_hook = hook;
 8019908:	4b01      	ldr	r3, [pc, #4]	; (8019910 <__stdout_hook_install+0x8>)
 801990a:	6018      	str	r0, [r3, #0]
}
 801990c:	4770      	bx	lr
 801990e:	bf00      	nop
 8019910:	200033a0 	.word	0x200033a0

08019914 <_read>:
{
	_stdin_hook = hook;
}

int _read(int fd, char *buf, int nbytes)
{
 8019914:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	int i = 0;

	for (i = 0; i < nbytes; i++) {
		*(buf + i) = _stdin_hook();
 8019916:	4f08      	ldr	r7, [pc, #32]	; (8019938 <_read+0x24>)
{
 8019918:	460e      	mov	r6, r1
 801991a:	4615      	mov	r5, r2
	for (i = 0; i < nbytes; i++) {
 801991c:	2400      	movs	r4, #0
 801991e:	42ac      	cmp	r4, r5
 8019920:	da08      	bge.n	8019934 <_read+0x20>
		*(buf + i) = _stdin_hook();
 8019922:	683b      	ldr	r3, [r7, #0]
 8019924:	4798      	blx	r3
		if ((*(buf + i) == '\n') || (*(buf + i) == '\r')) {
 8019926:	280a      	cmp	r0, #10
		*(buf + i) = _stdin_hook();
 8019928:	5530      	strb	r0, [r6, r4]
 801992a:	f104 0401 	add.w	r4, r4, #1
		if ((*(buf + i) == '\n') || (*(buf + i) == '\r')) {
 801992e:	d001      	beq.n	8019934 <_read+0x20>
 8019930:	280d      	cmp	r0, #13
 8019932:	d1f4      	bne.n	801991e <_read+0xa>
			i++;
			break;
		}
	}
	return i;
}
 8019934:	4620      	mov	r0, r4
 8019936:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8019938:	2000339c 	.word	0x2000339c

0801993c <_write>:
FUNC_ALIAS(_read, read, int);

int _write(int fd, char *buf, int nbytes)
{
 801993c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019940:	4f0b      	ldr	r7, [pc, #44]	; (8019970 <_write+0x34>)
 8019942:	460e      	mov	r6, r1
 8019944:	4615      	mov	r5, r2
	int i;

	for (i = 0; i < nbytes; i++) {
 8019946:	460c      	mov	r4, r1
 8019948:	1ba3      	subs	r3, r4, r6
 801994a:	429d      	cmp	r5, r3
 801994c:	dc02      	bgt.n	8019954 <_write+0x18>
			_stdout_hook('\r');
		}
		_stdout_hook(*(buf + i));
	}
	return nbytes;
}
 801994e:	4628      	mov	r0, r5
 8019950:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		if (*(buf + i) == '\n') {
 8019954:	7823      	ldrb	r3, [r4, #0]
 8019956:	2b0a      	cmp	r3, #10
 8019958:	46a0      	mov	r8, r4
 801995a:	d102      	bne.n	8019962 <_write+0x26>
			_stdout_hook('\r');
 801995c:	683b      	ldr	r3, [r7, #0]
 801995e:	200d      	movs	r0, #13
 8019960:	4798      	blx	r3
		_stdout_hook(*(buf + i));
 8019962:	683b      	ldr	r3, [r7, #0]
 8019964:	f898 0000 	ldrb.w	r0, [r8]
 8019968:	3401      	adds	r4, #1
 801996a:	4798      	blx	r3
 801996c:	e7ec      	b.n	8019948 <_write+0xc>
 801996e:	bf00      	nop
 8019970:	200033a0 	.word	0x200033a0

08019974 <_isatty>:
FUNC_ALIAS(_write, write, int);

int _isatty(int file)
{
	return 1;
}
 8019974:	2001      	movs	r0, #1
 8019976:	4770      	bx	lr

08019978 <_kill>:
FUNC_ALIAS(_isatty, isatty, int);

int _kill(int i, int j)
{
	return 0;
}
 8019978:	2000      	movs	r0, #0
 801997a:	4770      	bx	lr

0801997c <_getpid>:
FUNC_ALIAS(_kill, kill, int);

int _getpid(void)
{
	return 0;
}
 801997c:	2000      	movs	r0, #0
 801997e:	4770      	bx	lr

08019980 <_fstat>:
FUNC_ALIAS(_getpid, getpid, int);

int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8019980:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8019984:	604b      	str	r3, [r1, #4]
	return 0;
}
 8019986:	2000      	movs	r0, #0
 8019988:	4770      	bx	lr
	...

0801998c <_exit>:
FUNC_ALIAS(_fstat, fstat, int);

void _exit(int status)
{
 801998c:	b508      	push	{r3, lr}
	_write(1, "exit", 4);
 801998e:	2204      	movs	r2, #4
 8019990:	4902      	ldr	r1, [pc, #8]	; (801999c <_exit+0x10>)
 8019992:	2001      	movs	r0, #1
 8019994:	f7ff ffd2 	bl	801993c <_write>
 8019998:	e7fe      	b.n	8019998 <_exit+0xc>
 801999a:	bf00      	nop
 801999c:	08026af6 	.word	0x08026af6

080199a0 <_close>:
 80199a0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80199a4:	4770      	bx	lr

080199a6 <_lseek>:
FUNC_ALIAS(_close, close, int);

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80199a6:	2000      	movs	r0, #0
 80199a8:	4770      	bx	lr
	...

080199ac <_sbrk>:
FUNC_ALIAS(_lseek, lseek, int);

void *_sbrk(int count)
{
	void *ptr = heap_base + heap_sz;
 80199ac:	4907      	ldr	r1, [pc, #28]	; (80199cc <_sbrk+0x20>)
 80199ae:	680b      	ldr	r3, [r1, #0]
{
 80199b0:	b510      	push	{r4, lr}

	if ((heap_sz + count) < MAX_HEAP_SIZE) {
 80199b2:	18c4      	adds	r4, r0, r3
 80199b4:	4806      	ldr	r0, [pc, #24]	; (80199d0 <_sbrk+0x24>)
 80199b6:	f1c0 5200 	rsb	r2, r0, #536870912	; 0x20000000
 80199ba:	f502 3240 	add.w	r2, r2, #196608	; 0x30000
 80199be:	4294      	cmp	r4, r2
	void *ptr = heap_base + heap_sz;
 80199c0:	bf3a      	itte	cc
 80199c2:	18c0      	addcc	r0, r0, r3
		heap_sz += count;
 80199c4:	600c      	strcc	r4, [r1, #0]
		return ptr;
	} else {
		return (void *)-1;
 80199c6:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
	}
}
 80199ca:	bd10      	pop	{r4, pc}
 80199cc:	2000068c 	.word	0x2000068c
 80199d0:	20003e34 	.word	0x20003e34

080199d4 <pinmux_stm32_init>:
	{STM32_PIN_PA12, STM32F4_PINMUX_FUNC_PA12_OTG_FS_DP},
#endif	/* CONFIG_USB_DC_STM32 */
};

static int pinmux_stm32_init(struct device *port)
{
 80199d4:	b508      	push	{r3, lr}
	ARG_UNUSED(port);

	stm32_setup_pins(pinconf, ARRAY_SIZE(pinconf));
 80199d6:	2103      	movs	r1, #3
 80199d8:	4802      	ldr	r0, [pc, #8]	; (80199e4 <pinmux_stm32_init+0x10>)
 80199da:	f7ff fe4b 	bl	8019674 <stm32_setup_pins>

	return 0;
}
 80199de:	2000      	movs	r0, #0
 80199e0:	bd08      	pop	{r3, pc}
 80199e2:	bf00      	nop
 80199e4:	08026afc 	.word	0x08026afc

080199e8 <_sys_device_do_config_level>:
 * off and the next one begins.
 *
 * @param level init level to run.
 */
void _sys_device_do_config_level(int level)
{
 80199e8:	b538      	push	{r3, r4, r5, lr}
	struct device *info;

	for (info = config_levels[level]; info < config_levels[level+1];
 80199ea:	4b08      	ldr	r3, [pc, #32]	; (8019a0c <_sys_device_do_config_level+0x24>)
 80199ec:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 80199f0:	3001      	adds	r0, #1
 80199f2:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 80199f6:	4620      	mov	r0, r4
 80199f8:	4285      	cmp	r5, r0
 80199fa:	f104 040c 	add.w	r4, r4, #12
 80199fe:	d800      	bhi.n	8019a02 <_sys_device_do_config_level+0x1a>
		struct device_config *device = info->config;

		device->init(info);
		_k_object_init(info);
	}
}
 8019a00:	bd38      	pop	{r3, r4, r5, pc}
		device->init(info);
 8019a02:	f854 3c0c 	ldr.w	r3, [r4, #-12]
 8019a06:	685b      	ldr	r3, [r3, #4]
 8019a08:	4798      	blx	r3
 8019a0a:	e7f4      	b.n	80199f6 <_sys_device_do_config_level+0xe>
 8019a0c:	08026b14 	.word	0x08026b14

08019a10 <device_get_binding>:
	/* Split the search into two loops: in the common scenario, where
	 * device names are stored in ROM (and are referenced by the user
	 * with CONFIG_* macros), only cheap pointer comparisons will be
	 * performed.  Reserve string comparisons for a fallback.
	 */
	for (info = __device_init_start; info != __device_init_end; info++) {
 8019a10:	4b10      	ldr	r3, [pc, #64]	; (8019a54 <device_get_binding+0x44>)
{
 8019a12:	b570      	push	{r4, r5, r6, lr}
	for (info = __device_init_start; info != __device_init_end; info++) {
 8019a14:	4c10      	ldr	r4, [pc, #64]	; (8019a58 <device_get_binding+0x48>)
{
 8019a16:	4605      	mov	r5, r0
 8019a18:	461e      	mov	r6, r3
	for (info = __device_init_start; info != __device_init_end; info++) {
 8019a1a:	429c      	cmp	r4, r3
 8019a1c:	d104      	bne.n	8019a28 <device_get_binding+0x18>
		if (info->driver_api != NULL && info->config->name == name) {
			return info;
		}
	}

	for (info = __device_init_start; info != __device_init_end; info++) {
 8019a1e:	4c0e      	ldr	r4, [pc, #56]	; (8019a58 <device_get_binding+0x48>)
 8019a20:	42b4      	cmp	r4, r6
 8019a22:	d109      	bne.n	8019a38 <device_get_binding+0x28>
		if (!strcmp(name, info->config->name)) {
			return info;
		}
	}

	return NULL;
 8019a24:	2400      	movs	r4, #0
 8019a26:	e012      	b.n	8019a4e <device_get_binding+0x3e>
		if (info->driver_api != NULL && info->config->name == name) {
 8019a28:	6862      	ldr	r2, [r4, #4]
 8019a2a:	b11a      	cbz	r2, 8019a34 <device_get_binding+0x24>
 8019a2c:	6822      	ldr	r2, [r4, #0]
 8019a2e:	6812      	ldr	r2, [r2, #0]
 8019a30:	42aa      	cmp	r2, r5
 8019a32:	d00c      	beq.n	8019a4e <device_get_binding+0x3e>
	for (info = __device_init_start; info != __device_init_end; info++) {
 8019a34:	340c      	adds	r4, #12
 8019a36:	e7f0      	b.n	8019a1a <device_get_binding+0xa>
		if (!info->driver_api) {
 8019a38:	6863      	ldr	r3, [r4, #4]
 8019a3a:	b90b      	cbnz	r3, 8019a40 <device_get_binding+0x30>
	for (info = __device_init_start; info != __device_init_end; info++) {
 8019a3c:	340c      	adds	r4, #12
 8019a3e:	e7ef      	b.n	8019a20 <device_get_binding+0x10>
		if (!strcmp(name, info->config->name)) {
 8019a40:	6823      	ldr	r3, [r4, #0]
 8019a42:	4628      	mov	r0, r5
 8019a44:	6819      	ldr	r1, [r3, #0]
 8019a46:	f7ef fcdf 	bl	8009408 <strcmp>
 8019a4a:	2800      	cmp	r0, #0
 8019a4c:	d1f6      	bne.n	8019a3c <device_get_binding+0x2c>
}
 8019a4e:	4620      	mov	r0, r4
 8019a50:	bd70      	pop	{r4, r5, r6, pc}
 8019a52:	bf00      	nop
 8019a54:	20003e34 	.word	0x20003e34
 8019a58:	20003d5c 	.word	0x20003d5c

08019a5c <_bss_zero>:
 *
 * @return N/A
 */
void _bss_zero(void)
{
	memset(&__bss_start, 0,
 8019a5c:	4802      	ldr	r0, [pc, #8]	; (8019a68 <_bss_zero+0xc>)
 8019a5e:	4a03      	ldr	r2, [pc, #12]	; (8019a6c <_bss_zero+0x10>)
 8019a60:	2100      	movs	r1, #0
 8019a62:	1a12      	subs	r2, r2, r0
 8019a64:	f002 bb3c 	b.w	801c0e0 <memset>
 8019a68:	20000000 	.word	0x20000000
 8019a6c:	20000918 	.word	0x20000918

08019a70 <_data_copy>:
 *
 * @return N/A
 */
void _data_copy(void)
{
	memcpy(&__data_ram_start, &__data_rom_start,
 8019a70:	4802      	ldr	r0, [pc, #8]	; (8019a7c <_data_copy+0xc>)
 8019a72:	4a03      	ldr	r2, [pc, #12]	; (8019a80 <_data_copy+0x10>)
 8019a74:	4903      	ldr	r1, [pc, #12]	; (8019a84 <_data_copy+0x14>)
 8019a76:	1a12      	subs	r2, r2, r0
 8019a78:	f7ef bc1a 	b.w	80092b0 <memcpy>
 8019a7c:	20001660 	.word	0x20001660
 8019a80:	20003e34 	.word	0x20003e34
 8019a84:	08028a0c 	.word	0x08028a0c

08019a88 <_main>:
 * init functions, then invokes application's main() routine.
 *
 * @return N/A
 */
static void _main(void *unused1, void *unused2, void *unused3)
{
 8019a88:	b508      	push	{r3, lr}
	ARG_UNUSED(unused1);
	ARG_UNUSED(unused2);
	ARG_UNUSED(unused3);

	_sys_device_do_config_level(_SYS_INIT_LEVEL_POST_KERNEL);
 8019a8a:	2002      	movs	r0, #2
 8019a8c:	f7ff ffac 	bl	80199e8 <_sys_device_do_config_level>
	if (boot_delay > 0) {
		printk("***** delaying boot " STRINGIFY(CONFIG_BOOT_DELAY)
		       "ms (per build configuration) *****\n");
		k_busy_wait(CONFIG_BOOT_DELAY * USEC_PER_MSEC);
	}
	PRINT_BOOT_BANNER();
 8019a90:	4908      	ldr	r1, [pc, #32]	; (8019ab4 <_main+0x2c>)
 8019a92:	4809      	ldr	r0, [pc, #36]	; (8019ab8 <_main+0x30>)
 8019a94:	f7ff f872 	bl	8018b7c <printk>

	/* Final init level before app starts */
	_sys_device_do_config_level(_SYS_INIT_LEVEL_APPLICATION);
 8019a98:	2003      	movs	r0, #3
 8019a9a:	f7ff ffa5 	bl	80199e8 <_sys_device_do_config_level>
	extern void __do_init_array_aux(void);
	__do_global_ctors_aux();
	__do_init_array_aux();
#endif

	_init_static_threads();
 8019a9e:	f000 fbe1 	bl	801a264 <_init_static_threads>
	__main_time_stamp = (u64_t)k_cycle_get_32();
#endif

	extern void main(void);

	main();
 8019aa2:	f7ef fee0 	bl	8009866 <Konan_main>

	/* Terminate thread normally since it has no more work to do */
	_main_thread->base.user_options &= ~K_ESSENTIAL;
 8019aa6:	4a05      	ldr	r2, [pc, #20]	; (8019abc <_main+0x34>)
 8019aa8:	7a13      	ldrb	r3, [r2, #8]
 8019aaa:	f023 0301 	bic.w	r3, r3, #1
 8019aae:	7213      	strb	r3, [r2, #8]
}
 8019ab0:	bd08      	pop	{r3, pc}
 8019ab2:	bf00      	nop
 8019ab4:	08026b30 	.word	0x08026b30
 8019ab8:	08026b4c 	.word	0x08026b4c
 8019abc:	200006f8 	.word	0x200006f8

08019ac0 <_Cstart>:
 * cleared/zeroed.
 *
 * @return Does not return
 */
FUNC_NORETURN void _Cstart(void)
{
 8019ac0:	b580      	push	{r7, lr}
 8019ac2:	b086      	sub	sp, #24
 8019ac4:	4e30      	ldr	r6, [pc, #192]	; (8019b88 <_Cstart+0xc8>)
 8019ac6:	af06      	add	r7, sp, #24
	_IntLibInit();
 8019ac8:	f7fe fba8 	bl	801821c <_IntLibInit>
 8019acc:	2320      	movs	r3, #32
 8019ace:	199a      	adds	r2, r3, r6
 * @return N/A
 */

static inline void sys_dlist_init(sys_dlist_t *list)
{
	list->head = (sys_dnode_t *)list;
 8019ad0:	519a      	str	r2, [r3, r6]
 8019ad2:	3308      	adds	r3, #8
	for (int ii = 0; ii < K_NUM_PRIORITIES; ii++) {
 8019ad4:	f5b3 7f90 	cmp.w	r3, #288	; 0x120
	list->tail = (sys_dnode_t *)list;
 8019ad8:	6052      	str	r2, [r2, #4]
 8019ada:	d1f8      	bne.n	8019ace <_Cstart+0xe>
	_ready_q.cache = _main_thread;
 8019adc:	4d2b      	ldr	r5, [pc, #172]	; (8019b8c <_Cstart+0xcc>)
	_setup_new_thread(_main_thread, _main_stack,
 8019ade:	f8df 90d4 	ldr.w	r9, [pc, #212]	; 8019bb4 <_Cstart+0xf4>
	_ready_q.cache = _main_thread;
 8019ae2:	61b5      	str	r5, [r6, #24]
	_setup_new_thread(_main_thread, _main_stack,
 8019ae4:	2400      	movs	r4, #0
 8019ae6:	f04f 0801 	mov.w	r8, #1
 8019aea:	464b      	mov	r3, r9
 8019aec:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8019af0:	4927      	ldr	r1, [pc, #156]	; (8019b90 <_Cstart+0xd0>)
 8019af2:	9400      	str	r4, [sp, #0]
 8019af4:	4628      	mov	r0, r5
 8019af6:	e9cd 4803 	strd	r4, r8, [sp, #12]
 8019afa:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8019afe:	f000 fb89 	bl	801a214 <_setup_new_thread>
 *
 * This routine must be called with interrupts locked.
 */
static inline void _mark_thread_as_started(struct k_thread *thread)
{
	thread->base.thread_state &= ~_THREAD_PRESTART;
 8019b02:	7a6b      	ldrb	r3, [r5, #9]
	_add_thread_to_ready_q(_main_thread);
 8019b04:	4628      	mov	r0, r5
 8019b06:	f023 0304 	bic.w	r3, r3, #4
 8019b0a:	726b      	strb	r3, [r5, #9]
 8019b0c:	f000 f854 	bl	8019bb8 <_add_thread_to_ready_q>
	_setup_new_thread(thr, stack,
 8019b10:	230f      	movs	r3, #15
 8019b12:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8019b16:	491f      	ldr	r1, [pc, #124]	; (8019b94 <_Cstart+0xd4>)
 8019b18:	f8cd 8010 	str.w	r8, [sp, #16]
 8019b1c:	e9cd 4400 	strd	r4, r4, [sp]
 8019b20:	4b1d      	ldr	r3, [pc, #116]	; (8019b98 <_Cstart+0xd8>)
 8019b22:	481e      	ldr	r0, [pc, #120]	; (8019b9c <_Cstart+0xdc>)
 8019b24:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8019b28:	f000 fb74 	bl	801a214 <_setup_new_thread>
 8019b2c:	4a1b      	ldr	r2, [pc, #108]	; (8019b9c <_Cstart+0xdc>)
 8019b2e:	7a53      	ldrb	r3, [r2, #9]
 8019b30:	f023 0304 	bic.w	r3, r3, #4
 8019b34:	7253      	strb	r3, [r2, #9]
	_add_thread_to_ready_q(thr);
 8019b36:	4610      	mov	r0, r2
 8019b38:	f000 f83e 	bl	8019bb8 <_add_thread_to_ready_q>
	list->head = (sys_dnode_t *)list;
 8019b3c:	4b18      	ldr	r3, [pc, #96]	; (8019ba0 <_Cstart+0xe0>)
	list->tail = (sys_dnode_t *)list;
 8019b3e:	e9c6 3304 	strd	r3, r3, [r6, #16]
 * @return N/A
 */
static ALWAYS_INLINE void _InterruptStackSetup(void)
{
#ifdef CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT
	u32_t msp = (u32_t)(K_THREAD_STACK_BUFFER(_interrupt_stack) +
 8019b42:	4b18      	ldr	r3, [pc, #96]	; (8019ba4 <_Cstart+0xe4>)
 * @return N/A
 */
static ALWAYS_INLINE void _MspSet(u32_t msp /* value to store in MSP */
				  )
{
	__asm__ volatile("msr MSP, %0\n\t" :  : "r"(msp));
 8019b44:	f383 8808 	msr	MSP, r3
 8019b48:	4b17      	ldr	r3, [pc, #92]	; (8019ba8 <_Cstart+0xe8>)
 8019b4a:	22f0      	movs	r2, #240	; 0xf0
 8019b4c:	f883 2022 	strb.w	r2, [r3, #34]	; 0x22
 8019b50:	77dc      	strb	r4, [r3, #31]
 8019b52:	761c      	strb	r4, [r3, #24]
 8019b54:	765c      	strb	r4, [r3, #25]
 8019b56:	769c      	strb	r4, [r3, #26]
	SCB->SHCSR |= SCB_SHCSR_USGFAULTENA_Msk | SCB_SHCSR_MEMFAULTENA_Msk |
 8019b58:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8019b5a:	f442 22e0 	orr.w	r2, r2, #458752	; 0x70000
 8019b5e:	625a      	str	r2, [r3, #36]	; 0x24
extern void _CpuIdleInit(void);
static ALWAYS_INLINE void kernel_arch_init(void)
{
	_InterruptStackSetup();
	_ExcSetup();
	_FaultInit();
 8019b60:	f7fe fcfa 	bl	8018558 <_FaultInit>
	_CpuIdleInit();
 8019b64:	f7fe fd52 	bl	801860c <_CpuIdleInit>
	 */

	prepare_multithreading(dummy_thread);

	/* perform basic hardware initialization */
	_sys_device_do_config_level(_SYS_INIT_LEVEL_PRE_KERNEL_1);
 8019b68:	4620      	mov	r0, r4
 8019b6a:	f7ff ff3d 	bl	80199e8 <_sys_device_do_config_level>
	_sys_device_do_config_level(_SYS_INIT_LEVEL_PRE_KERNEL_2);
 8019b6e:	4640      	mov	r0, r8
 8019b70:	f7ff ff3a 	bl	80199e8 <_sys_device_do_config_level>
	start_of_main_stack =
		K_THREAD_STACK_BUFFER(main_stack) + main_stack_size;
#endif
	start_of_main_stack = (void *)STACK_ROUND_DOWN(start_of_main_stack);

	_current = main_thread;
 8019b74:	60b5      	str	r5, [r6, #8]

	/* the ready queue cache already contains the main thread */

	__asm__ __volatile__(
 8019b76:	4b0d      	ldr	r3, [pc, #52]	; (8019bac <_Cstart+0xec>)
 8019b78:	4a0d      	ldr	r2, [pc, #52]	; (8019bb0 <_Cstart+0xf0>)
 8019b7a:	f383 8809 	msr	PSP, r3
 8019b7e:	2100      	movs	r1, #0
 8019b80:	f381 8811 	msr	BASEPRI, r1
 8019b84:	4648      	mov	r0, r9
 8019b86:	4710      	bx	r2
 8019b88:	20000760 	.word	0x20000760
 8019b8c:	200006f8 	.word	0x200006f8
 8019b90:	20000918 	.word	0x20000918
 8019b94:	20000d18 	.word	0x20000d18
 8019b98:	0801a311 	.word	0x0801a311
 8019b9c:	20000690 	.word	0x20000690
 8019ba0:	20000770 	.word	0x20000770
 8019ba4:	20001658 	.word	0x20001658
 8019ba8:	e000ed00 	.word	0xe000ed00
 8019bac:	20000d18 	.word	0x20000d18
 8019bb0:	0801a1ad 	.word	0x0801a1ad
 8019bb4:	08019a89 	.word	0x08019a89

08019bb8 <_add_thread_to_ready_q>:
 *
 * Interrupts must be locked when calling this function.
 */

void _add_thread_to_ready_q(struct k_thread *thread)
{
 8019bb8:	b530      	push	{r4, r5, lr}
#ifdef CONFIG_MULTITHREADING
	int q_index = _get_ready_q_q_index(thread->base.prio);
 8019bba:	f990 500a 	ldrsb.w	r5, [r0, #10]
	*bmap |= _get_ready_q_prio_bit(prio);
 8019bbe:	4910      	ldr	r1, [pc, #64]	; (8019c00 <_add_thread_to_ready_q+0x48>)
	return prio + _NUM_COOP_PRIO;
 8019bc0:	f105 0210 	add.w	r2, r5, #16
	return (prio + _NUM_COOP_PRIO) >> 5;
 8019bc4:	1153      	asrs	r3, r2, #5
 8019bc6:	3306      	adds	r3, #6
 8019bc8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
	return (1 << ((prio + _NUM_COOP_PRIO) & 0x1f));
 8019bcc:	f002 041f 	and.w	r4, r2, #31
 8019bd0:	2201      	movs	r2, #1
 8019bd2:	40a2      	lsls	r2, r4
 8019bd4:	685c      	ldr	r4, [r3, #4]
 8019bd6:	4322      	orrs	r2, r4
 8019bd8:	605a      	str	r2, [r3, #4]
	sys_dlist_t *q = &_ready_q.q[q_index];
 8019bda:	f105 0314 	add.w	r3, r5, #20
 8019bde:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 * @return N/A
 */

static inline void sys_dlist_append(sys_dlist_t *list, sys_dnode_t *node)
{
	node->next = list;
 8019be2:	6003      	str	r3, [r0, #0]
	node->prev = list->tail;
 8019be4:	685a      	ldr	r2, [r3, #4]
 8019be6:	6042      	str	r2, [r0, #4]

	list->tail->next = node;
 8019be8:	685a      	ldr	r2, [r3, #4]
 8019bea:	6010      	str	r0, [r2, #0]
	list->tail = node;
 8019bec:	6058      	str	r0, [r3, #4]
	sys_dlist_append(q, &thread->base.k_q_node);

# ifndef CONFIG_SMP
	struct k_thread **cache = &_ready_q.cache;

	*cache = _is_t1_higher_prio_than_t2(thread, *cache) ? thread : *cache;
 8019bee:	698b      	ldr	r3, [r1, #24]
 8019bf0:	f993 200a 	ldrsb.w	r2, [r3, #10]
 8019bf4:	42aa      	cmp	r2, r5
 8019bf6:	bfd8      	it	le
 8019bf8:	4618      	movle	r0, r3
 8019bfa:	6188      	str	r0, [r1, #24]
	_ready_q.prio_bmap[0] = 1;
# ifndef CONFIG_SMP
	_ready_q.cache = thread;
# endif
#endif
}
 8019bfc:	bd30      	pop	{r4, r5, pc}
 8019bfe:	bf00      	nop
 8019c00:	20000760 	.word	0x20000760

08019c04 <_ready_thread>:
	thread->base.thread_state &= ~_THREAD_PRESTART;
 8019c04:	7a42      	ldrb	r2, [r0, #9]
 8019c06:	f022 0104 	bic.w	r1, r2, #4
	return !(_is_thread_prevented_from_running(thread) ||
 8019c0a:	f012 0f1b 	tst.w	r2, #27
	thread->base.thread_state &= ~_THREAD_PRESTART;
 8019c0e:	7241      	strb	r1, [r0, #9]
	return !(_is_thread_prevented_from_running(thread) ||
 8019c10:	d104      	bne.n	8019c1c <_ready_thread+0x18>
 8019c12:	6a03      	ldr	r3, [r0, #32]
 8019c14:	3301      	adds	r3, #1
 8019c16:	d101      	bne.n	8019c1c <_ready_thread+0x18>

	/* needed to handle the start-with-delay case */
	_mark_thread_as_started(thread);

	if (_is_thread_ready(thread)) {
		_add_thread_to_ready_q(thread);
 8019c18:	f7ff bfce 	b.w	8019bb8 <_add_thread_to_ready_q>
	}

#ifdef CONFIG_KERNEL_EVENT_LOGGER_THREAD
	_sys_k_event_logger_thread_ready(thread);
#endif
}
 8019c1c:	4770      	bx	lr
	...

08019c20 <_add_timeout>:

static inline void _add_timeout(struct k_thread *thread,
				struct _timeout *timeout,
				_wait_q_t *wait_q,
				s32_t timeout_in_ticks)
{
 8019c20:	b570      	push	{r4, r5, r6, lr}
	__ASSERT(timeout_in_ticks >= 0, "");

	timeout->delta_ticks_from_prev = timeout_in_ticks;
 8019c22:	610b      	str	r3, [r1, #16]
	timeout->thread = thread;
	timeout->wait_q = (sys_dlist_t *)wait_q;
 8019c24:	e9c1 0202 	strd	r0, r2, [r1, #8]
	/* If timer is submitted to expire ASAP with
	 * timeout_in_ticks (duration) as zero value,
	 * then handle timeout immedately without going
	 * through timeout queue.
	 */
	if (!timeout_in_ticks) {
 8019c28:	bb1b      	cbnz	r3, 8019c72 <_add_timeout+0x52>
 8019c2a:	f04f 0210 	mov.w	r2, #16
 8019c2e:	f3ef 8411 	mrs	r4, BASEPRI
 8019c32:	f382 8811 	msr	BASEPRI, r2
	timeout->delta_ticks_from_prev = _INACTIVE;
 8019c36:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8019c3a:	610a      	str	r2, [r1, #16]
	if (thread) {
 8019c3c:	b180      	cbz	r0, 8019c60 <_add_timeout+0x40>
	if (timeout_obj->wait_q) {
 8019c3e:	68ca      	ldr	r2, [r1, #12]
 8019c40:	b14a      	cbz	r2, 8019c56 <_add_timeout+0x36>
 * @return N/A
 */

static inline void sys_dlist_remove(sys_dnode_t *node)
{
	node->prev->next = node->next;
 8019c42:	e9d0 1200 	ldrd	r1, r2, [r0]
 8019c46:	6011      	str	r1, [r2, #0]
	node->next->prev = node->prev;
 8019c48:	6801      	ldr	r1, [r0, #0]
 8019c4a:	604a      	str	r2, [r1, #4]
	thread->base.thread_state &= ~_THREAD_PENDING;
 8019c4c:	7a42      	ldrb	r2, [r0, #9]
		thread->base.timeout.wait_q = NULL;
 8019c4e:	61c3      	str	r3, [r0, #28]
 8019c50:	f022 0202 	bic.w	r2, r2, #2
 8019c54:	7242      	strb	r2, [r0, #9]
		_ready_thread(thread);
 8019c56:	f7ff ffd5 	bl	8019c04 <_ready_thread>
	__asm__ volatile("msr BASEPRI, %0" :  : "r"(key) : "memory");
 8019c5a:	f384 8811 	msr	BASEPRI, r4
#ifdef CONFIG_TICKLESS_KERNEL
	if (!program_time || (adjusted_timeout < program_time)) {
		_set_time(adjusted_timeout);
	}
#endif
}
 8019c5e:	bd70      	pop	{r4, r5, r6, pc}
 8019c60:	f384 8811 	msr	BASEPRI, r4
		if (timeout->func) {
 8019c64:	694b      	ldr	r3, [r1, #20]
 8019c66:	2b00      	cmp	r3, #0
 8019c68:	d0f9      	beq.n	8019c5e <_add_timeout+0x3e>
			timeout->func(timeout);
 8019c6a:	4608      	mov	r0, r1
}
 8019c6c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			timeout->func(timeout);
 8019c70:	4718      	bx	r3
	return list->head == list;
 8019c72:	4a11      	ldr	r2, [pc, #68]	; (8019cb8 <_add_timeout+0x98>)
 8019c74:	e9d2 3604 	ldrd	r3, r6, [r2, #16]
	return sys_dlist_is_empty(list) ? NULL : list->head;
 8019c78:	f102 0010 	add.w	r0, r2, #16
 8019c7c:	4283      	cmp	r3, r0
 8019c7e:	4605      	mov	r5, r0
 8019c80:	d013      	beq.n	8019caa <_add_timeout+0x8a>
	SYS_DLIST_FOR_EACH_CONTAINER(&_timeout_q, in_q, node) {
 8019c82:	b193      	cbz	r3, 8019caa <_add_timeout+0x8a>
		if (*delta <= in_q->delta_ticks_from_prev) {
 8019c84:	6908      	ldr	r0, [r1, #16]
 8019c86:	691c      	ldr	r4, [r3, #16]
 8019c88:	42a0      	cmp	r0, r4
 8019c8a:	dc08      	bgt.n	8019c9e <_add_timeout+0x7e>
		node->prev = insert_point->prev;
 8019c8c:	685a      	ldr	r2, [r3, #4]
			in_q->delta_ticks_from_prev -= *delta;
 8019c8e:	1a20      	subs	r0, r4, r0
 8019c90:	6118      	str	r0, [r3, #16]
		node->next = insert_point;
 8019c92:	e9c1 3200 	strd	r3, r2, [r1]
		insert_point->prev->next = node;
 8019c96:	685a      	ldr	r2, [r3, #4]
 8019c98:	6011      	str	r1, [r2, #0]
		insert_point->prev = node;
 8019c9a:	6059      	str	r1, [r3, #4]
 8019c9c:	e7df      	b.n	8019c5e <_add_timeout+0x3e>
		*delta -= in_q->delta_ticks_from_prev;
 8019c9e:	1b00      	subs	r0, r0, r4
	return (node == list->tail) ? NULL : node->next;
 8019ca0:	429e      	cmp	r6, r3
 8019ca2:	6108      	str	r0, [r1, #16]
 8019ca4:	d001      	beq.n	8019caa <_add_timeout+0x8a>
 8019ca6:	681b      	ldr	r3, [r3, #0]
 8019ca8:	e7eb      	b.n	8019c82 <_add_timeout+0x62>
	node->prev = list->tail;
 8019caa:	e9c1 5600 	strd	r5, r6, [r1]
	list->tail->next = node;
 8019cae:	6953      	ldr	r3, [r2, #20]
 8019cb0:	6019      	str	r1, [r3, #0]
	list->tail = node;
 8019cb2:	6151      	str	r1, [r2, #20]
 8019cb4:	e7d3      	b.n	8019c5e <_add_timeout+0x3e>
 8019cb6:	bf00      	nop
 8019cb8:	20000760 	.word	0x20000760

08019cbc <_remove_thread_from_ready_q>:
 *
 * Interrupts must be locked when calling this function.
 */

void _remove_thread_from_ready_q(struct k_thread *thread)
{
 8019cbc:	b510      	push	{r4, lr}
	node->prev->next = node->next;
 8019cbe:	e9d0 4300 	ldrd	r4, r3, [r0]
#if defined(CONFIG_MULTITHREADING) && !defined(CONFIG_SMP)
	int q_index = _get_ready_q_q_index(thread->base.prio);
 8019cc2:	f990 200a 	ldrsb.w	r2, [r0, #10]
 8019cc6:	601c      	str	r4, [r3, #0]
	node->next->prev = node->prev;
 8019cc8:	6804      	ldr	r4, [r0, #0]
	return prio + _NUM_COOP_PRIO;
 8019cca:	f102 0110 	add.w	r1, r2, #16
 8019cce:	6063      	str	r3, [r4, #4]
	sys_dlist_t *q = &_ready_q.q[q_index];
 8019cd0:	3214      	adds	r2, #20
 8019cd2:	4b12      	ldr	r3, [pc, #72]	; (8019d1c <_remove_thread_from_ready_q+0x60>)
 8019cd4:	eb03 04c2 	add.w	r4, r3, r2, lsl #3

	sys_dlist_remove(&thread->base.k_q_node);
	if (sys_dlist_is_empty(q)) {
 8019cd8:	f853 2032 	ldr.w	r2, [r3, r2, lsl #3]
 8019cdc:	42a2      	cmp	r2, r4
 8019cde:	d10c      	bne.n	8019cfa <_remove_thread_from_ready_q+0x3e>
	return (prio + _NUM_COOP_PRIO) >> 5;
 8019ce0:	114a      	asrs	r2, r1, #5
	*bmap &= ~_get_ready_q_prio_bit(prio);
 8019ce2:	3206      	adds	r2, #6
 8019ce4:	eb03 0282 	add.w	r2, r3, r2, lsl #2
	return (1 << ((prio + _NUM_COOP_PRIO) & 0x1f));
 8019ce8:	2401      	movs	r4, #1
 8019cea:	f001 011f 	and.w	r1, r1, #31
 8019cee:	fa04 f101 	lsl.w	r1, r4, r1
 8019cf2:	6854      	ldr	r4, [r2, #4]
 8019cf4:	ea24 0401 	bic.w	r4, r4, r1
 8019cf8:	6054      	str	r4, [r2, #4]
		_clear_ready_q_prio_bit(thread->base.prio);
	}

	struct k_thread **cache = &_ready_q.cache;

	*cache = *cache == thread ? _get_ready_q_head() : *cache;
 8019cfa:	699a      	ldr	r2, [r3, #24]
 8019cfc:	4282      	cmp	r2, r0
 8019cfe:	d10b      	bne.n	8019d18 <_remove_thread_from_ready_q+0x5c>
	return __builtin_ffs(op);
 8019d00:	69d9      	ldr	r1, [r3, #28]
 8019d02:	fa91 f2a1 	rbit	r2, r1
 8019d06:	2900      	cmp	r1, #0
 8019d08:	fab2 f282 	clz	r2, r2
 8019d0c:	bf08      	it	eq
 8019d0e:	f04f 32ff 	moveq.w	r2, #4294967295	; 0xffffffff
	sys_dlist_t *list = &_ready_q.q[q_index];
 8019d12:	3204      	adds	r2, #4
 8019d14:	f853 2032 	ldr.w	r2, [r3, r2, lsl #3]
	*cache = *cache == thread ? _get_ready_q_head() : *cache;
 8019d18:	619a      	str	r2, [r3, #24]
	_ready_q.prio_bmap[0] = 0;
	_ready_q.cache = NULL;
# endif
	sys_dlist_remove(&thread->base.k_q_node);
#endif
}
 8019d1a:	bd10      	pop	{r4, pc}
 8019d1c:	20000760 	.word	0x20000760

08019d20 <__must_switch_threads>:
	ready_range = _ready_q.prio_bmap[0];
 8019d20:	4a09      	ldr	r2, [pc, #36]	; (8019d48 <__must_switch_threads+0x28>)
 8019d22:	69d1      	ldr	r1, [r2, #28]

#ifdef CONFIG_KERNEL_DEBUG
	_dump_ready_q();
#endif  /* CONFIG_KERNEL_DEBUG */

	return _is_prio_higher(_get_highest_ready_prio(), _current->base.prio);
 8019d24:	6892      	ldr	r2, [r2, #8]
 8019d26:	2900      	cmp	r1, #0
 8019d28:	fa91 f3a1 	rbit	r3, r1
 8019d2c:	f992 000a 	ldrsb.w	r0, [r2, #10]
 8019d30:	fab3 f383 	clz	r3, r3
 8019d34:	bf08      	it	eq
 8019d36:	f04f 33ff 	moveq.w	r3, #4294967295	; 0xffffffff
	return abs_prio - _NUM_COOP_PRIO;
 8019d3a:	3b10      	subs	r3, #16
#else
	return 0;
#endif
}
 8019d3c:	4298      	cmp	r0, r3
 8019d3e:	bfd4      	ite	le
 8019d40:	2000      	movle	r0, #0
 8019d42:	2001      	movgt	r0, #1
 8019d44:	4770      	bx	lr
 8019d46:	bf00      	nop
 8019d48:	20000760 	.word	0x20000760

08019d4c <_reschedule_threads>:
	return _is_preempt(_current) && __must_switch_threads();
 8019d4c:	4b0a      	ldr	r3, [pc, #40]	; (8019d78 <_reschedule_threads+0x2c>)
 8019d4e:	689b      	ldr	r3, [r3, #8]
 8019d50:	895b      	ldrh	r3, [r3, #10]
 8019d52:	2b7f      	cmp	r3, #127	; 0x7f
{
 8019d54:	b510      	push	{r4, lr}
 8019d56:	4604      	mov	r4, r0
 8019d58:	d80a      	bhi.n	8019d70 <_reschedule_threads+0x24>
 8019d5a:	f7ff ffe1 	bl	8019d20 <__must_switch_threads>
 8019d5e:	b138      	cbz	r0, 8019d70 <_reschedule_threads+0x24>
		_set_time(remaining);
	}

#endif
	/* Restart time slice count at new thread switch */
	_time_slice_elapsed = 0;
 8019d60:	4b06      	ldr	r3, [pc, #24]	; (8019d7c <_reschedule_threads+0x30>)
 8019d62:	2200      	movs	r2, #0
 8019d64:	4620      	mov	r0, r4
}
 8019d66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	_time_slice_elapsed = 0;
 8019d6a:	601a      	str	r2, [r3, #0]
 8019d6c:	f7fe baa2 	b.w	80182b4 <__swap>
	__asm__ volatile("msr BASEPRI, %0" :  : "r"(key) : "memory");
 8019d70:	f384 8811 	msr	BASEPRI, r4
}
 8019d74:	bd10      	pop	{r4, pc}
 8019d76:	bf00      	nop
 8019d78:	20000760 	.word	0x20000760
 8019d7c:	200008e4 	.word	0x200008e4

08019d80 <k_sched_unlock>:
	__asm__ volatile(
 8019d80:	f04f 0310 	mov.w	r3, #16
 8019d84:	f3ef 8011 	mrs	r0, BASEPRI
 8019d88:	f383 8811 	msr	BASEPRI, r3
	++_current->base.sched_locked;
 8019d8c:	4b03      	ldr	r3, [pc, #12]	; (8019d9c <k_sched_unlock+0x1c>)
 8019d8e:	689a      	ldr	r2, [r3, #8]
 8019d90:	7ad3      	ldrb	r3, [r2, #11]
 8019d92:	3301      	adds	r3, #1
 8019d94:	72d3      	strb	r3, [r2, #11]
	_reschedule_threads(key);
 8019d96:	f7ff bfd9 	b.w	8019d4c <_reschedule_threads>
 8019d9a:	bf00      	nop
 8019d9c:	20000760 	.word	0x20000760

08019da0 <_move_thread_to_end_of_prio_q>:
	int q_index = _get_ready_q_q_index(thread->base.prio);
 8019da0:	f990 300a 	ldrsb.w	r3, [r0, #10]
	sys_dlist_t *q = &_ready_q.q[q_index];
 8019da4:	4a11      	ldr	r2, [pc, #68]	; (8019dec <_move_thread_to_end_of_prio_q+0x4c>)
 8019da6:	3314      	adds	r3, #20
 8019da8:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
{
 8019dac:	b510      	push	{r4, lr}
	if (sys_dlist_is_tail(q, &thread->base.k_q_node)) {
 8019dae:	6859      	ldr	r1, [r3, #4]
 8019db0:	4288      	cmp	r0, r1
 8019db2:	d01a      	beq.n	8019dea <_move_thread_to_end_of_prio_q+0x4a>
	node->prev->next = node->next;
 8019db4:	e9d0 4100 	ldrd	r4, r1, [r0]
 8019db8:	600c      	str	r4, [r1, #0]
	node->next->prev = node->prev;
 8019dba:	6804      	ldr	r4, [r0, #0]
 8019dbc:	6061      	str	r1, [r4, #4]
	node->prev = list->tail;
 8019dbe:	6859      	ldr	r1, [r3, #4]
 8019dc0:	6041      	str	r1, [r0, #4]
	list->tail->next = node;
 8019dc2:	6859      	ldr	r1, [r3, #4]
	node->next = list;
 8019dc4:	6003      	str	r3, [r0, #0]
	list->tail->next = node;
 8019dc6:	6008      	str	r0, [r1, #0]
	list->tail = node;
 8019dc8:	6058      	str	r0, [r3, #4]
	*cache = *cache == thread ? _get_ready_q_head() : *cache;
 8019dca:	6993      	ldr	r3, [r2, #24]
 8019dcc:	4283      	cmp	r3, r0
 8019dce:	d10b      	bne.n	8019de8 <_move_thread_to_end_of_prio_q+0x48>
	return __builtin_ffs(op);
 8019dd0:	69d1      	ldr	r1, [r2, #28]
 8019dd2:	fa91 f3a1 	rbit	r3, r1
 8019dd6:	2900      	cmp	r1, #0
 8019dd8:	fab3 f383 	clz	r3, r3
 8019ddc:	bf08      	it	eq
 8019dde:	f04f 33ff 	moveq.w	r3, #4294967295	; 0xffffffff
	sys_dlist_t *list = &_ready_q.q[q_index];
 8019de2:	3304      	adds	r3, #4
 8019de4:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
	*cache = *cache == thread ? _get_ready_q_head() : *cache;
 8019de8:	6193      	str	r3, [r2, #24]
}
 8019dea:	bd10      	pop	{r4, pc}
 8019dec:	20000760 	.word	0x20000760

08019df0 <_impl_k_yield>:
{
 8019df0:	b538      	push	{r3, r4, r5, lr}
	__asm__ volatile(
 8019df2:	f04f 0310 	mov.w	r3, #16
 8019df6:	f3ef 8511 	mrs	r5, BASEPRI
 8019dfa:	f383 8811 	msr	BASEPRI, r3
	_move_thread_to_end_of_prio_q(_current);
 8019dfe:	4c09      	ldr	r4, [pc, #36]	; (8019e24 <_impl_k_yield+0x34>)
 8019e00:	68a0      	ldr	r0, [r4, #8]
 8019e02:	f7ff ffcd 	bl	8019da0 <_move_thread_to_end_of_prio_q>
	if (_current == _get_next_ready_thread()) {
 8019e06:	68a2      	ldr	r2, [r4, #8]
 8019e08:	69a3      	ldr	r3, [r4, #24]
 8019e0a:	429a      	cmp	r2, r3
 8019e0c:	d102      	bne.n	8019e14 <_impl_k_yield+0x24>
	__asm__ volatile("msr BASEPRI, %0" :  : "r"(key) : "memory");
 8019e0e:	f385 8811 	msr	BASEPRI, r5
}
 8019e12:	bd38      	pop	{r3, r4, r5, pc}
	_time_slice_elapsed = 0;
 8019e14:	4b04      	ldr	r3, [pc, #16]	; (8019e28 <_impl_k_yield+0x38>)
 8019e16:	2200      	movs	r2, #0
 8019e18:	601a      	str	r2, [r3, #0]
 8019e1a:	4628      	mov	r0, r5
}
 8019e1c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8019e20:	f7fe ba48 	b.w	80182b4 <__swap>
 8019e24:	20000760 	.word	0x20000760
 8019e28:	200008e4 	.word	0x200008e4

08019e2c <_impl_k_sleep>:
{
 8019e2c:	b537      	push	{r0, r1, r2, r4, r5, lr}
	if (duration == 0) {
 8019e2e:	b920      	cbnz	r0, 8019e3a <_impl_k_sleep+0xe>
}
 8019e30:	b003      	add	sp, #12
 8019e32:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
K_SYSCALL_DECLARE0_VOID(K_SYSCALL_K_YIELD, k_yield);
 8019e36:	f7ff bfdb 	b.w	8019df0 <_impl_k_yield>
	ticks = _TICK_ALIGN + _ms_to_ticks(duration);
 8019e3a:	3001      	adds	r0, #1
 8019e3c:	9001      	str	r0, [sp, #4]
	__asm__ volatile(
 8019e3e:	f04f 0310 	mov.w	r3, #16
 8019e42:	f3ef 8511 	mrs	r5, BASEPRI
 8019e46:	f383 8811 	msr	BASEPRI, r3
	_remove_thread_from_ready_q(_current);
 8019e4a:	4c0a      	ldr	r4, [pc, #40]	; (8019e74 <_impl_k_sleep+0x48>)
 8019e4c:	68a0      	ldr	r0, [r4, #8]
 8019e4e:	f7ff ff35 	bl	8019cbc <_remove_thread_from_ready_q>
	_add_thread_timeout(_current, NULL, ticks);
 8019e52:	68a0      	ldr	r0, [r4, #8]
 8019e54:	9b01      	ldr	r3, [sp, #4]

static inline void _add_thread_timeout(struct k_thread *thread,
				       _wait_q_t *wait_q,
				       s32_t timeout_in_ticks)
{
	_add_timeout(thread, &thread->base.timeout, wait_q, timeout_in_ticks);
 8019e56:	f100 0110 	add.w	r1, r0, #16
 8019e5a:	2200      	movs	r2, #0
 8019e5c:	f7ff fee0 	bl	8019c20 <_add_timeout>
	_time_slice_elapsed = 0;
 8019e60:	4b05      	ldr	r3, [pc, #20]	; (8019e78 <_impl_k_sleep+0x4c>)
 8019e62:	2200      	movs	r2, #0
 8019e64:	4628      	mov	r0, r5
 8019e66:	601a      	str	r2, [r3, #0]
}
 8019e68:	b003      	add	sp, #12
 8019e6a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8019e6e:	f7fe ba21 	b.w	80182b4 <__swap>
 8019e72:	bf00      	nop
 8019e74:	20000760 	.word	0x20000760
 8019e78:	200008e4 	.word	0x200008e4

08019e7c <_impl_k_current_get>:
}
 8019e7c:	4b01      	ldr	r3, [pc, #4]	; (8019e84 <_impl_k_current_get+0x8>)
 8019e7e:	6898      	ldr	r0, [r3, #8]
 8019e80:	4770      	bx	lr
 8019e82:	bf00      	nop
 8019e84:	20000760 	.word	0x20000760

08019e88 <_is_thread_time_slicing>:
	if (!(_time_slice_duration > 0) || (_is_idle_thread_ptr(thread))
 8019e88:	4b0d      	ldr	r3, [pc, #52]	; (8019ec0 <_is_thread_time_slicing+0x38>)
 8019e8a:	681b      	ldr	r3, [r3, #0]
 8019e8c:	2b00      	cmp	r3, #0
 8019e8e:	dd14      	ble.n	8019eba <_is_thread_time_slicing+0x32>
	return thread == _idle_thread;
 8019e90:	4b0c      	ldr	r3, [pc, #48]	; (8019ec4 <_is_thread_time_slicing+0x3c>)
 8019e92:	681b      	ldr	r3, [r3, #0]
 8019e94:	4298      	cmp	r0, r3
 8019e96:	d010      	beq.n	8019eba <_is_thread_time_slicing+0x32>
	    || _is_prio_higher(thread->base.prio, _time_slice_prio_ceiling)) {
 8019e98:	4a0b      	ldr	r2, [pc, #44]	; (8019ec8 <_is_thread_time_slicing+0x40>)
 8019e9a:	f990 300a 	ldrsb.w	r3, [r0, #10]
 8019e9e:	6812      	ldr	r2, [r2, #0]
 8019ea0:	4293      	cmp	r3, r2
 8019ea2:	db0a      	blt.n	8019eba <_is_thread_time_slicing+0x32>
	return list->head != list->tail;
 8019ea4:	4a09      	ldr	r2, [pc, #36]	; (8019ecc <_is_thread_time_slicing+0x44>)
 8019ea6:	3314      	adds	r3, #20
 8019ea8:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8019eac:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
 8019eb0:	684b      	ldr	r3, [r1, #4]
 8019eb2:	1ac0      	subs	r0, r0, r3
 8019eb4:	bf18      	it	ne
 8019eb6:	2001      	movne	r0, #1
	return sys_dlist_has_multiple_nodes(q);
 8019eb8:	4770      	bx	lr
		return 0;
 8019eba:	2000      	movs	r0, #0
}
 8019ebc:	4770      	bx	lr
 8019ebe:	bf00      	nop
 8019ec0:	20000880 	.word	0x20000880
 8019ec4:	08026b2c 	.word	0x08026b2c
 8019ec8:	20000884 	.word	0x20000884
 8019ecc:	20000760 	.word	0x20000760

08019ed0 <_update_time_slice_before_swap>:
	_time_slice_elapsed = 0;
 8019ed0:	4b01      	ldr	r3, [pc, #4]	; (8019ed8 <_update_time_slice_before_swap+0x8>)
 8019ed2:	2200      	movs	r2, #0
 8019ed4:	601a      	str	r2, [r3, #0]
}
 8019ed6:	4770      	bx	lr
 8019ed8:	200008e4 	.word	0x200008e4

08019edc <_nano_sys_clock_tick_announce>:
 * timers that have expired and wake up the threads pending on them.
 *
 * @return N/A
 */
void _nano_sys_clock_tick_announce(s32_t ticks)
{
 8019edc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019ee0:	4607      	mov	r7, r0
 8019ee2:	f04f 0310 	mov.w	r3, #16
 8019ee6:	f3ef 8011 	mrs	r0, BASEPRI
 8019eea:	f383 8811 	msr	BASEPRI, r3

	K_DEBUG("ticks: %d\n", ticks);

	/* 64-bit value, ensure atomic access with irq lock */
	key = irq_lock();
	_sys_clock_tick_count += ticks;
 8019eee:	4960      	ldr	r1, [pc, #384]	; (801a070 <_nano_sys_clock_tick_announce+0x194>)
 8019ef0:	e9d1 4500 	ldrd	r4, r5, [r1]
 8019ef4:	19e2      	adds	r2, r4, r7
 8019ef6:	eb45 73e7 	adc.w	r3, r5, r7, asr #31
 8019efa:	e9c1 2300 	strd	r2, r3, [r1]
	__asm__ volatile("msr BASEPRI, %0" :  : "r"(key) : "memory");
 8019efe:	f380 8811 	msr	BASEPRI, r0
	list->head = (sys_dnode_t *)list;
 8019f02:	466e      	mov	r6, sp
	list->tail = (sys_dnode_t *)list;
 8019f04:	e9cd 6600 	strd	r6, r6, [sp]
	__asm__ volatile(
 8019f08:	f04f 0310 	mov.w	r3, #16
 8019f0c:	f3ef 8011 	mrs	r0, BASEPRI
 8019f10:	f383 8811 	msr	BASEPRI, r3
	return list->head == list;
 8019f14:	4c57      	ldr	r4, [pc, #348]	; (801a074 <_nano_sys_clock_tick_announce+0x198>)
 8019f16:	4621      	mov	r1, r4
 8019f18:	4602      	mov	r2, r0
 8019f1a:	f851 3f10 	ldr.w	r3, [r1, #16]!
	return sys_dlist_is_empty(list) ? NULL : list->head;
 8019f1e:	428b      	cmp	r3, r1
 8019f20:	d000      	beq.n	8019f24 <_nano_sys_clock_tick_announce+0x48>
	if (!next) {
 8019f22:	b9eb      	cbnz	r3, 8019f60 <_nano_sys_clock_tick_announce+0x84>
	__asm__ volatile("msr BASEPRI, %0" :  : "r"(key) : "memory");
 8019f24:	f380 8811 	msr	BASEPRI, r0
	if (!_is_thread_time_slicing(_current)) {
 8019f28:	68a0      	ldr	r0, [r4, #8]
 8019f2a:	f7ff ffad 	bl	8019e88 <_is_thread_time_slicing>
 8019f2e:	b1a0      	cbz	r0, 8019f5a <_nano_sys_clock_tick_announce+0x7e>
	_time_slice_elapsed += __ticks_to_ms(ticks);
 8019f30:	4a51      	ldr	r2, [pc, #324]	; (801a078 <_nano_sys_clock_tick_announce+0x19c>)
 8019f32:	6813      	ldr	r3, [r2, #0]
 8019f34:	441f      	add	r7, r3
	if (_time_slice_elapsed >= _time_slice_duration) {
 8019f36:	4b51      	ldr	r3, [pc, #324]	; (801a07c <_nano_sys_clock_tick_announce+0x1a0>)
	_time_slice_elapsed += __ticks_to_ms(ticks);
 8019f38:	6017      	str	r7, [r2, #0]
	if (_time_slice_elapsed >= _time_slice_duration) {
 8019f3a:	681b      	ldr	r3, [r3, #0]
 8019f3c:	429f      	cmp	r7, r3
 8019f3e:	db0c      	blt.n	8019f5a <_nano_sys_clock_tick_announce+0x7e>
		_time_slice_elapsed = 0;
 8019f40:	2300      	movs	r3, #0
 8019f42:	6013      	str	r3, [r2, #0]
	__asm__ volatile(
 8019f44:	f04f 0310 	mov.w	r3, #16
 8019f48:	f3ef 8511 	mrs	r5, BASEPRI
 8019f4c:	f383 8811 	msr	BASEPRI, r3
		_move_thread_to_end_of_prio_q(_current);
 8019f50:	68a0      	ldr	r0, [r4, #8]
 8019f52:	f7ff ff25 	bl	8019da0 <_move_thread_to_end_of_prio_q>
	__asm__ volatile("msr BASEPRI, %0" :  : "r"(key) : "memory");
 8019f56:	f385 8811 	msr	BASEPRI, r5
	if ((!remaining && next_to) || (next_to < remaining)) {
		/* Clears current program if next_to = 0 and remaining > 0 */
		_set_time(next_to);
	}
#endif
}
 8019f5a:	b003      	add	sp, #12
 8019f5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	_handling_timeouts = 1;
 8019f60:	4d47      	ldr	r5, [pc, #284]	; (801a080 <_nano_sys_clock_tick_announce+0x1a4>)
 8019f62:	2101      	movs	r1, #1
 8019f64:	6029      	str	r1, [r5, #0]
 8019f66:	46ab      	mov	fp, r5
 8019f68:	4639      	mov	r1, r7
			timeout->delta_ticks_from_prev = 0;
 8019f6a:	f04f 0c00 	mov.w	ip, #0
			timeout->delta_ticks_from_prev = _EXPIRED;
 8019f6e:	f06f 0e01 	mvn.w	lr, #1
		s32_t tmp = timeout->delta_ticks_from_prev;
 8019f72:	6918      	ldr	r0, [r3, #16]
		if (timeout->delta_ticks_from_prev < ticks) {
 8019f74:	4288      	cmp	r0, r1
			timeout->delta_ticks_from_prev -= ticks;
 8019f76:	bfaa      	itet	ge
 8019f78:	eba0 0801 	subge.w	r8, r0, r1
			timeout->delta_ticks_from_prev = 0;
 8019f7c:	f8c3 c010 	strlt.w	ip, [r3, #16]
			timeout->delta_ticks_from_prev -= ticks;
 8019f80:	f8c3 8010 	strge.w	r8, [r3, #16]
		ticks -= tmp;
 8019f84:	1a09      	subs	r1, r1, r0
	return (node == list->tail) ? NULL : node->next;
 8019f86:	6960      	ldr	r0, [r4, #20]
		if (timeout->delta_ticks_from_prev == 0) {
 8019f88:	691d      	ldr	r5, [r3, #16]
 8019f8a:	4298      	cmp	r0, r3
 8019f8c:	bf14      	ite	ne
 8019f8e:	6818      	ldrne	r0, [r3, #0]
 8019f90:	2000      	moveq	r0, #0
 8019f92:	b9d5      	cbnz	r5, 8019fca <_nano_sys_clock_tick_announce+0xee>
	node->prev->next = node->next;
 8019f94:	e9d3 5900 	ldrd	r5, r9, [r3]
 8019f98:	f8c9 5000 	str.w	r5, [r9]
	node->next->prev = node->prev;
 8019f9c:	681d      	ldr	r5, [r3, #0]
 8019f9e:	f8c5 9004 	str.w	r9, [r5, #4]
	node->next = list->head;
 8019fa2:	9d00      	ldr	r5, [sp, #0]
	node->prev = list;
 8019fa4:	e9c3 5600 	strd	r5, r6, [r3]
	list->head->prev = node;
 8019fa8:	9d00      	ldr	r5, [sp, #0]
	list->head = node;
 8019faa:	9300      	str	r3, [sp, #0]
	list->head->prev = node;
 8019fac:	606b      	str	r3, [r5, #4]
			timeout->delta_ticks_from_prev = _EXPIRED;
 8019fae:	f8c3 e010 	str.w	lr, [r3, #16]
 8019fb2:	f382 8811 	msr	BASEPRI, r2
	__asm__ volatile(
 8019fb6:	f04f 0310 	mov.w	r3, #16
 8019fba:	f3ef 8211 	mrs	r2, BASEPRI
 8019fbe:	f383 8811 	msr	BASEPRI, r3
	while (next) {
 8019fc2:	4603      	mov	r3, r0
 8019fc4:	2800      	cmp	r0, #0
 8019fc6:	d1d4      	bne.n	8019f72 <_nano_sys_clock_tick_announce+0x96>
 8019fc8:	e001      	b.n	8019fce <_nano_sys_clock_tick_announce+0xf2>
		} else if (ticks <= 0) {
 8019fca:	2900      	cmp	r1, #0
 8019fcc:	dcf1      	bgt.n	8019fb2 <_nano_sys_clock_tick_announce+0xd6>
	__asm__ volatile("msr BASEPRI, %0" :  : "r"(key) : "memory");
 8019fce:	f382 8811 	msr	BASEPRI, r2
	return list->head == list;
 8019fd2:	9b00      	ldr	r3, [sp, #0]
	return sys_dlist_is_empty(list) ? NULL : list->head;
 8019fd4:	42b3      	cmp	r3, r6
 8019fd6:	d103      	bne.n	8019fe0 <_nano_sys_clock_tick_announce+0x104>
	_handling_timeouts = 0;
 8019fd8:	2300      	movs	r3, #0
 8019fda:	f8cb 3000 	str.w	r3, [fp]
 8019fde:	e7a3      	b.n	8019f28 <_nano_sys_clock_tick_announce+0x4c>
	SYS_DLIST_FOR_EACH_CONTAINER_SAFE(expired, timeout, next, node) {
 8019fe0:	2b00      	cmp	r3, #0
 8019fe2:	d0f9      	beq.n	8019fd8 <_nano_sys_clock_tick_announce+0xfc>
 8019fe4:	681e      	ldr	r6, [r3, #0]
 8019fe6:	9a01      	ldr	r2, [sp, #4]
	timeout->delta_ticks_from_prev = _INACTIVE;
 8019fe8:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
	SYS_DLIST_FOR_EACH_CONTAINER_SAFE(expired, timeout, next, node) {
 8019fec:	4293      	cmp	r3, r2
 8019fee:	bf08      	it	eq
 8019ff0:	2600      	moveq	r6, #0
		thread->base.timeout.wait_q = NULL;
 8019ff2:	f04f 0900 	mov.w	r9, #0
	node->prev->next = node->next;
 8019ff6:	e9d3 1200 	ldrd	r1, r2, [r3]
 8019ffa:	6011      	str	r1, [r2, #0]
	node->next->prev = node->prev;
 8019ffc:	6819      	ldr	r1, [r3, #0]
	struct k_thread *thread = timeout->thread;
 8019ffe:	6898      	ldr	r0, [r3, #8]
 801a000:	604a      	str	r2, [r1, #4]
	__asm__ volatile(
 801a002:	f04f 0210 	mov.w	r2, #16
 801a006:	f3ef 8a11 	mrs	sl, BASEPRI
 801a00a:	f382 8811 	msr	BASEPRI, r2
	timeout->delta_ticks_from_prev = _INACTIVE;
 801a00e:	f8c3 8010 	str.w	r8, [r3, #16]
	if (thread) {
 801a012:	b308      	cbz	r0, 801a058 <_nano_sys_clock_tick_announce+0x17c>
	if (timeout_obj->wait_q) {
 801a014:	68db      	ldr	r3, [r3, #12]
 801a016:	b153      	cbz	r3, 801a02e <_nano_sys_clock_tick_announce+0x152>
	node->prev->next = node->next;
 801a018:	e9d0 3200 	ldrd	r3, r2, [r0]
 801a01c:	6013      	str	r3, [r2, #0]
	node->next->prev = node->prev;
 801a01e:	6803      	ldr	r3, [r0, #0]
 801a020:	605a      	str	r2, [r3, #4]
	thread->base.thread_state &= ~_THREAD_PENDING;
 801a022:	7a43      	ldrb	r3, [r0, #9]
		thread->base.timeout.wait_q = NULL;
 801a024:	f8c0 901c 	str.w	r9, [r0, #28]
 801a028:	f023 0302 	bic.w	r3, r3, #2
 801a02c:	7243      	strb	r3, [r0, #9]
	thread->base.thread_state &= ~_THREAD_PRESTART;
 801a02e:	7a43      	ldrb	r3, [r0, #9]
 801a030:	f023 0204 	bic.w	r2, r3, #4
	return !(_is_thread_prevented_from_running(thread) ||
 801a034:	f013 0f1b 	tst.w	r3, #27
	thread->base.thread_state &= ~_THREAD_PRESTART;
 801a038:	7242      	strb	r2, [r0, #9]
	return !(_is_thread_prevented_from_running(thread) ||
 801a03a:	d104      	bne.n	801a046 <_nano_sys_clock_tick_announce+0x16a>
 801a03c:	6a03      	ldr	r3, [r0, #32]
 801a03e:	3301      	adds	r3, #1
 801a040:	d101      	bne.n	801a046 <_nano_sys_clock_tick_announce+0x16a>
		_add_thread_to_ready_q(thread);
 801a042:	f7ff fdb9 	bl	8019bb8 <_add_thread_to_ready_q>
	__asm__ volatile("msr BASEPRI, %0" :  : "r"(key) : "memory");
 801a046:	f38a 8811 	msr	BASEPRI, sl
	SYS_DLIST_FOR_EACH_CONTAINER_SAFE(expired, timeout, next, node) {
 801a04a:	2e00      	cmp	r6, #0
 801a04c:	d0c4      	beq.n	8019fd8 <_nano_sys_clock_tick_announce+0xfc>
	return (node == list->tail) ? NULL : node->next;
 801a04e:	9b01      	ldr	r3, [sp, #4]
 801a050:	42b3      	cmp	r3, r6
 801a052:	d109      	bne.n	801a068 <_nano_sys_clock_tick_announce+0x18c>
 801a054:	2200      	movs	r2, #0
 801a056:	e008      	b.n	801a06a <_nano_sys_clock_tick_announce+0x18e>
 801a058:	f38a 8811 	msr	BASEPRI, sl
		if (timeout->func) {
 801a05c:	695a      	ldr	r2, [r3, #20]
 801a05e:	2a00      	cmp	r2, #0
 801a060:	d0f3      	beq.n	801a04a <_nano_sys_clock_tick_announce+0x16e>
			timeout->func(timeout);
 801a062:	4618      	mov	r0, r3
 801a064:	4790      	blx	r2
 801a066:	e7f0      	b.n	801a04a <_nano_sys_clock_tick_announce+0x16e>
 801a068:	6832      	ldr	r2, [r6, #0]
 801a06a:	4633      	mov	r3, r6
 801a06c:	4616      	mov	r6, r2
 801a06e:	e7c2      	b.n	8019ff6 <_nano_sys_clock_tick_announce+0x11a>
 801a070:	200008e8 	.word	0x200008e8
 801a074:	20000760 	.word	0x20000760
 801a078:	200008e4 	.word	0x200008e4
 801a07c:	20000880 	.word	0x20000880
 801a080:	200008e0 	.word	0x200008e0

0801a084 <_is_thread_ready>:
	return !(_is_thread_prevented_from_running(thread) ||
 801a084:	7a43      	ldrb	r3, [r0, #9]
 801a086:	06da      	lsls	r2, r3, #27
 801a088:	d104      	bne.n	801a094 <_is_thread_ready+0x10>
 801a08a:	6a00      	ldr	r0, [r0, #32]
 801a08c:	1c43      	adds	r3, r0, #1
 801a08e:	4258      	negs	r0, r3
 801a090:	4158      	adcs	r0, r3
 801a092:	4770      	bx	lr
 801a094:	2000      	movs	r0, #0
}
 801a096:	4770      	bx	lr

0801a098 <_abort_timeout>:
	if (timeout->delta_ticks_from_prev == _INACTIVE) {
 801a098:	6903      	ldr	r3, [r0, #16]
 801a09a:	1c5a      	adds	r2, r3, #1
 801a09c:	d010      	beq.n	801a0c0 <_abort_timeout+0x28>
	if (!sys_dlist_is_tail(&_timeout_q, &timeout->node)) {
 801a09e:	4909      	ldr	r1, [pc, #36]	; (801a0c4 <_abort_timeout+0x2c>)
 801a0a0:	6802      	ldr	r2, [r0, #0]
 801a0a2:	6949      	ldr	r1, [r1, #20]
 801a0a4:	4288      	cmp	r0, r1
		next->delta_ticks_from_prev += timeout->delta_ticks_from_prev;
 801a0a6:	bf1e      	ittt	ne
 801a0a8:	6911      	ldrne	r1, [r2, #16]
 801a0aa:	185b      	addne	r3, r3, r1
 801a0ac:	6113      	strne	r3, [r2, #16]
	node->prev->next = node->next;
 801a0ae:	6843      	ldr	r3, [r0, #4]
 801a0b0:	601a      	str	r2, [r3, #0]
	node->next->prev = node->prev;
 801a0b2:	6802      	ldr	r2, [r0, #0]
 801a0b4:	6053      	str	r3, [r2, #4]
	timeout->delta_ticks_from_prev = _INACTIVE;
 801a0b6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801a0ba:	6103      	str	r3, [r0, #16]
	return 0;
 801a0bc:	2000      	movs	r0, #0
 801a0be:	4770      	bx	lr
		return _INACTIVE;
 801a0c0:	4618      	mov	r0, r3
}
 801a0c2:	4770      	bx	lr
 801a0c4:	20000760 	.word	0x20000760

0801a0c8 <schedule_new_thread.part.13>:
_SYSCALL_HANDLER1_SIMPLE_VOID(k_thread_start, K_OBJ_THREAD, struct k_thread *);
#endif
#endif

#ifdef CONFIG_MULTITHREADING
static void schedule_new_thread(struct k_thread *thread, s32_t delay)
 801a0c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
{
#ifdef CONFIG_SYS_CLOCK_EXISTS
	if (delay == 0) {
		k_thread_start(thread);
	} else {
		s32_t ticks = _TICK_ALIGN + _ms_to_ticks(delay);
 801a0ca:	3101      	adds	r1, #1
static void schedule_new_thread(struct k_thread *thread, s32_t delay)
 801a0cc:	4604      	mov	r4, r0
	__asm__ volatile(
 801a0ce:	f04f 0310 	mov.w	r3, #16
 801a0d2:	f3ef 8511 	mrs	r5, BASEPRI
 801a0d6:	f383 8811 	msr	BASEPRI, r3
	timeout->wait_q = (sys_dlist_t *)wait_q;
 801a0da:	2300      	movs	r3, #0
	timeout->delta_ticks_from_prev = timeout_in_ticks;
 801a0dc:	6201      	str	r1, [r0, #32]
	timeout->thread = thread;
 801a0de:	61a0      	str	r0, [r4, #24]
	timeout->wait_q = (sys_dlist_t *)wait_q;
 801a0e0:	61c3      	str	r3, [r0, #28]
	if (!timeout_in_ticks) {
 801a0e2:	bb21      	cbnz	r1, 801a12e <schedule_new_thread.part.13+0x66>
 801a0e4:	f04f 0310 	mov.w	r3, #16
 801a0e8:	f3ef 8611 	mrs	r6, BASEPRI
 801a0ec:	f383 8811 	msr	BASEPRI, r3
	timeout->delta_ticks_from_prev = _INACTIVE;
 801a0f0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801a0f4:	6203      	str	r3, [r0, #32]
	if (timeout_obj->wait_q) {
 801a0f6:	69c3      	ldr	r3, [r0, #28]
 801a0f8:	b14b      	cbz	r3, 801a10e <schedule_new_thread.part.13+0x46>
	node->prev->next = node->next;
 801a0fa:	e9d0 2300 	ldrd	r2, r3, [r0]
 801a0fe:	601a      	str	r2, [r3, #0]
	node->next->prev = node->prev;
 801a100:	6802      	ldr	r2, [r0, #0]
 801a102:	6053      	str	r3, [r2, #4]
	thread->base.thread_state &= ~_THREAD_PENDING;
 801a104:	7a43      	ldrb	r3, [r0, #9]
		thread->base.timeout.wait_q = NULL;
 801a106:	61c1      	str	r1, [r0, #28]
 801a108:	f023 0302 	bic.w	r3, r3, #2
 801a10c:	7243      	strb	r3, [r0, #9]
	thread->base.thread_state &= ~_THREAD_PRESTART;
 801a10e:	7a63      	ldrb	r3, [r4, #9]
 801a110:	f023 0304 	bic.w	r3, r3, #4
 801a114:	7263      	strb	r3, [r4, #9]
	if (_is_thread_ready(thread)) {
 801a116:	4620      	mov	r0, r4
 801a118:	f7ff ffb4 	bl	801a084 <_is_thread_ready>
 801a11c:	b110      	cbz	r0, 801a124 <schedule_new_thread.part.13+0x5c>
		_add_thread_to_ready_q(thread);
 801a11e:	4620      	mov	r0, r4
 801a120:	f7ff fd4a 	bl	8019bb8 <_add_thread_to_ready_q>
	__asm__ volatile("msr BASEPRI, %0" :  : "r"(key) : "memory");
 801a124:	f386 8811 	msr	BASEPRI, r6
 801a128:	f385 8811 	msr	BASEPRI, r5
	}
#else
	ARG_UNUSED(delay);
	k_thread_start(thread);
#endif
}
 801a12c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	return list->head == list;
 801a12e:	4a12      	ldr	r2, [pc, #72]	; (801a178 <schedule_new_thread.part.13+0xb0>)
 801a130:	e9d2 3c04 	ldrd	r3, ip, [r2, #16]
	return sys_dlist_is_empty(list) ? NULL : list->head;
 801a134:	f102 0110 	add.w	r1, r2, #16
 801a138:	428b      	cmp	r3, r1
	_add_timeout(thread, &thread->base.timeout, wait_q, timeout_in_ticks);
 801a13a:	f100 0610 	add.w	r6, r0, #16
 801a13e:	460f      	mov	r7, r1
 801a140:	d013      	beq.n	801a16a <schedule_new_thread.part.13+0xa2>
	SYS_DLIST_FOR_EACH_CONTAINER(&_timeout_q, in_q, node) {
 801a142:	b193      	cbz	r3, 801a16a <schedule_new_thread.part.13+0xa2>
		if (*delta <= in_q->delta_ticks_from_prev) {
 801a144:	6a21      	ldr	r1, [r4, #32]
 801a146:	6918      	ldr	r0, [r3, #16]
 801a148:	4281      	cmp	r1, r0
 801a14a:	dc08      	bgt.n	801a15e <schedule_new_thread.part.13+0x96>
		node->prev = insert_point->prev;
 801a14c:	685a      	ldr	r2, [r3, #4]
			in_q->delta_ticks_from_prev -= *delta;
 801a14e:	1a41      	subs	r1, r0, r1
 801a150:	6119      	str	r1, [r3, #16]
		node->next = insert_point;
 801a152:	e9c4 3204 	strd	r3, r2, [r4, #16]
		insert_point->prev->next = node;
 801a156:	685a      	ldr	r2, [r3, #4]
 801a158:	6016      	str	r6, [r2, #0]
		insert_point->prev = node;
 801a15a:	605e      	str	r6, [r3, #4]
 801a15c:	e7e4      	b.n	801a128 <schedule_new_thread.part.13+0x60>
		*delta -= in_q->delta_ticks_from_prev;
 801a15e:	1a09      	subs	r1, r1, r0
	return (node == list->tail) ? NULL : node->next;
 801a160:	459c      	cmp	ip, r3
 801a162:	6221      	str	r1, [r4, #32]
 801a164:	d001      	beq.n	801a16a <schedule_new_thread.part.13+0xa2>
 801a166:	681b      	ldr	r3, [r3, #0]
 801a168:	e7eb      	b.n	801a142 <schedule_new_thread.part.13+0x7a>
	node->prev = list->tail;
 801a16a:	e9c4 7c04 	strd	r7, ip, [r4, #16]
	list->tail->next = node;
 801a16e:	6953      	ldr	r3, [r2, #20]
 801a170:	601e      	str	r6, [r3, #0]
	list->tail = node;
 801a172:	6156      	str	r6, [r2, #20]
 801a174:	e7d8      	b.n	801a128 <schedule_new_thread.part.13+0x60>
 801a176:	bf00      	nop
 801a178:	20000760 	.word	0x20000760

0801a17c <k_is_in_isr>:
	__asm__ volatile("mrs %0, IPSR\n\t" : "=r"(vector));
 801a17c:	f3ef 8005 	mrs	r0, IPSR
		|| (vector && !(SCB->ICSR & SCB_ICSR_RETTOBASE_Msk))
 801a180:	280d      	cmp	r0, #13
 801a182:	d807      	bhi.n	801a194 <k_is_in_isr+0x18>
 801a184:	b138      	cbz	r0, 801a196 <k_is_in_isr+0x1a>
 801a186:	4b04      	ldr	r3, [pc, #16]	; (801a198 <k_is_in_isr+0x1c>)
 801a188:	6858      	ldr	r0, [r3, #4]
 801a18a:	f480 6000 	eor.w	r0, r0, #2048	; 0x800
 801a18e:	f3c0 20c0 	ubfx	r0, r0, #11, #1
 801a192:	4770      	bx	lr
 801a194:	2001      	movs	r0, #1
}
 801a196:	4770      	bx	lr
 801a198:	e000ed00 	.word	0xe000ed00

0801a19c <_is_thread_essential>:
	return _current->base.user_options & K_ESSENTIAL;
 801a19c:	4b02      	ldr	r3, [pc, #8]	; (801a1a8 <_is_thread_essential+0xc>)
 801a19e:	689b      	ldr	r3, [r3, #8]
 801a1a0:	7a18      	ldrb	r0, [r3, #8]
}
 801a1a2:	f000 0001 	and.w	r0, r0, #1
 801a1a6:	4770      	bx	lr
 801a1a8:	20000760 	.word	0x20000760

0801a1ac <_thread_entry>:
{
 801a1ac:	b508      	push	{r3, lr}
 801a1ae:	4604      	mov	r4, r0
 801a1b0:	4608      	mov	r0, r1
 801a1b2:	4611      	mov	r1, r2
	entry(p1, p2, p3);
 801a1b4:	461a      	mov	r2, r3
 801a1b6:	47a0      	blx	r4
K_SYSCALL_DECLARE0(K_SYSCALL_K_CURRENT_GET, k_current_get, k_tid_t);
 801a1b8:	f7ff fe60 	bl	8019e7c <_impl_k_current_get>
K_SYSCALL_DECLARE1_VOID(K_SYSCALL_K_THREAD_ABORT, k_thread_abort, k_tid_t, thread);
 801a1bc:	f7fe faa2 	bl	8018704 <_impl_k_thread_abort>

0801a1c0 <_impl_k_thread_start>:
{
 801a1c0:	b510      	push	{r4, lr}
 801a1c2:	4601      	mov	r1, r0
	__asm__ volatile(
 801a1c4:	f04f 0310 	mov.w	r3, #16
 801a1c8:	f3ef 8411 	mrs	r4, BASEPRI
 801a1cc:	f383 8811 	msr	BASEPRI, r3
 801a1d0:	7a43      	ldrb	r3, [r0, #9]
	if (_has_thread_started(thread)) {
 801a1d2:	075a      	lsls	r2, r3, #29
 801a1d4:	d402      	bmi.n	801a1dc <_impl_k_thread_start+0x1c>
	__asm__ volatile("msr BASEPRI, %0" :  : "r"(key) : "memory");
 801a1d6:	f384 8811 	msr	BASEPRI, r4
}
 801a1da:	bd10      	pop	{r4, pc}
	thread->base.thread_state &= ~_THREAD_PRESTART;
 801a1dc:	f023 0304 	bic.w	r3, r3, #4
 801a1e0:	7243      	strb	r3, [r0, #9]
	if (_is_thread_ready(thread)) {
 801a1e2:	f7ff ff4f 	bl	801a084 <_is_thread_ready>
 801a1e6:	2800      	cmp	r0, #0
 801a1e8:	d0f5      	beq.n	801a1d6 <_impl_k_thread_start+0x16>
		_add_thread_to_ready_q(thread);
 801a1ea:	4608      	mov	r0, r1
 801a1ec:	f7ff fce4 	bl	8019bb8 <_add_thread_to_ready_q>
	return _is_preempt(_current) && __must_switch_threads();
 801a1f0:	4b07      	ldr	r3, [pc, #28]	; (801a210 <_impl_k_thread_start+0x50>)
 801a1f2:	689b      	ldr	r3, [r3, #8]
 801a1f4:	895b      	ldrh	r3, [r3, #10]
 801a1f6:	2b7f      	cmp	r3, #127	; 0x7f
 801a1f8:	d8ed      	bhi.n	801a1d6 <_impl_k_thread_start+0x16>
 801a1fa:	f7ff fd91 	bl	8019d20 <__must_switch_threads>
 801a1fe:	2800      	cmp	r0, #0
 801a200:	d0e9      	beq.n	801a1d6 <_impl_k_thread_start+0x16>
	_update_time_slice_before_swap();
 801a202:	f7ff fe65 	bl	8019ed0 <_update_time_slice_before_swap>
	return __swap(key);
 801a206:	4620      	mov	r0, r4
}
 801a208:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a20c:	f7fe b852 	b.w	80182b4 <__swap>
 801a210:	20000760 	.word	0x20000760

0801a214 <_setup_new_thread>:
		       k_thread_stack_t *stack, size_t stack_size,
		       k_thread_entry_t entry,
		       void *p1, void *p2, void *p3,
		       int prio, u32_t options)
{
	_new_thread(new_thread, stack, stack_size, entry, p1, p2, p3,
 801a214:	f7fe b9d2 	b.w	80185bc <_new_thread>

0801a218 <_k_thread_single_abort>:
_SYSCALL_HANDLER1_SIMPLE_VOID(k_thread_resume, K_OBJ_THREAD, k_tid_t);
#endif

void _k_thread_single_abort(struct k_thread *thread)
{
	if (thread->fn_abort != NULL) {
 801a218:	6d03      	ldr	r3, [r0, #80]	; 0x50
{
 801a21a:	b510      	push	{r4, lr}
 801a21c:	4604      	mov	r4, r0
	if (thread->fn_abort != NULL) {
 801a21e:	b103      	cbz	r3, 801a222 <_k_thread_single_abort+0xa>
		thread->fn_abort();
 801a220:	4798      	blx	r3
	}

	if (_is_thread_ready(thread)) {
 801a222:	4620      	mov	r0, r4
 801a224:	f7ff ff2e 	bl	801a084 <_is_thread_ready>
 801a228:	b138      	cbz	r0, 801a23a <_k_thread_single_abort+0x22>
		_remove_thread_from_ready_q(thread);
 801a22a:	4620      	mov	r0, r4
 801a22c:	f7ff fd46 	bl	8019cbc <_remove_thread_from_ready_q>
		if (_is_thread_timeout_active(thread)) {
			_abort_thread_timeout(thread);
		}
	}

	thread->base.thread_state |= _THREAD_DEAD;
 801a230:	7a63      	ldrb	r3, [r4, #9]
 801a232:	f043 0308 	orr.w	r3, r3, #8
 801a236:	7263      	strb	r3, [r4, #9]
	_k_object_uninit(thread);

	/* Revoke permissions on thread's ID so that it may be recycled */
	_thread_perms_all_clear(thread);
#endif
}
 801a238:	bd10      	pop	{r4, pc}
		if (_is_thread_pending(thread)) {
 801a23a:	7a63      	ldrb	r3, [r4, #9]
 801a23c:	079b      	lsls	r3, r3, #30
 801a23e:	d508      	bpl.n	801a252 <_k_thread_single_abort+0x3a>
	node->prev->next = node->next;
 801a240:	e9d4 2300 	ldrd	r2, r3, [r4]
 801a244:	601a      	str	r2, [r3, #0]
	node->next->prev = node->prev;
 801a246:	6822      	ldr	r2, [r4, #0]
 801a248:	6053      	str	r3, [r2, #4]
	thread->base.thread_state &= ~_THREAD_PENDING;
 801a24a:	7a63      	ldrb	r3, [r4, #9]
 801a24c:	f023 0302 	bic.w	r3, r3, #2
 801a250:	7263      	strb	r3, [r4, #9]
		if (_is_thread_timeout_active(thread)) {
 801a252:	6a23      	ldr	r3, [r4, #32]
 801a254:	3301      	adds	r3, #1
 801a256:	d0eb      	beq.n	801a230 <_k_thread_single_abort+0x18>
	return _abort_timeout(&thread->base.timeout);
 801a258:	f104 0010 	add.w	r0, r4, #16
 801a25c:	f7ff ff1c 	bl	801a098 <_abort_timeout>
 801a260:	e7e6      	b.n	801a230 <_k_thread_single_abort+0x18>
	...

0801a264 <_init_static_threads>:
	}
}
#endif /* CONFIG_USERSPACE */

void _init_static_threads(void)
{
 801a264:	b5f0      	push	{r4, r5, r6, r7, lr}
	unsigned int  key;

	_FOREACH_STATIC_THREAD(thread_data) {
 801a266:	4f21      	ldr	r7, [pc, #132]	; (801a2ec <_init_static_threads+0x88>)
 801a268:	4d21      	ldr	r5, [pc, #132]	; (801a2f0 <_init_static_threads+0x8c>)
{
 801a26a:	b087      	sub	sp, #28
 801a26c:	463e      	mov	r6, r7
	_FOREACH_STATIC_THREAD(thread_data) {
 801a26e:	42bd      	cmp	r5, r7
 801a270:	f105 042c 	add.w	r4, r5, #44	; 0x2c
 801a274:	d314      	bcc.n	801a2a0 <_init_static_threads+0x3c>
	--_current->base.sched_locked;
 801a276:	4b1f      	ldr	r3, [pc, #124]	; (801a2f4 <_init_static_threads+0x90>)
 801a278:	689a      	ldr	r2, [r3, #8]
 801a27a:	7ad3      	ldrb	r3, [r2, #11]
 801a27c:	3b01      	subs	r3, #1
 801a27e:	72d3      	strb	r3, [r2, #11]
	__asm__ volatile(
 801a280:	f04f 0310 	mov.w	r3, #16
 801a284:	f3ef 8511 	mrs	r5, BASEPRI
 801a288:	f383 8811 	msr	BASEPRI, r3
	 *
	 * Note that static threads defined using the legacy API have a
	 * delay of K_FOREVER.
	 */
	key = irq_lock();
	_FOREACH_STATIC_THREAD(thread_data) {
 801a28c:	4c18      	ldr	r4, [pc, #96]	; (801a2f0 <_init_static_threads+0x8c>)
 801a28e:	42b4      	cmp	r4, r6
 801a290:	d320      	bcc.n	801a2d4 <_init_static_threads+0x70>
	__asm__ volatile("msr BASEPRI, %0" :  : "r"(key) : "memory");
 801a292:	f385 8811 	msr	BASEPRI, r5
					    thread_data->init_delay);
		}
	}
	irq_unlock(key);
	k_sched_unlock();
}
 801a296:	b007      	add	sp, #28
 801a298:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	k_sched_unlock();
 801a29c:	f7ff bd70 	b.w	8019d80 <k_sched_unlock>
	_new_thread(new_thread, stack, stack_size, entry, p1, p2, p3,
 801a2a0:	f854 3c0c 	ldr.w	r3, [r4, #-12]
 801a2a4:	9304      	str	r3, [sp, #16]
 801a2a6:	f854 3c10 	ldr.w	r3, [r4, #-16]
 801a2aa:	9303      	str	r3, [sp, #12]
 801a2ac:	f854 3c14 	ldr.w	r3, [r4, #-20]
 801a2b0:	9302      	str	r3, [sp, #8]
 801a2b2:	f854 3c18 	ldr.w	r3, [r4, #-24]
 801a2b6:	9301      	str	r3, [sp, #4]
 801a2b8:	f854 3c1c 	ldr.w	r3, [r4, #-28]
 801a2bc:	9300      	str	r3, [sp, #0]
 801a2be:	e954 2309 	ldrd	r2, r3, [r4, #-36]	; 0x24
 801a2c2:	e954 010b 	ldrd	r0, r1, [r4, #-44]	; 0x2c
 801a2c6:	f7fe f979 	bl	80185bc <_new_thread>
		thread_data->init_thread->init_data = thread_data;
 801a2ca:	f854 3c2c 	ldr.w	r3, [r4, #-44]
 801a2ce:	64dd      	str	r5, [r3, #76]	; 0x4c
 801a2d0:	4625      	mov	r5, r4
 801a2d2:	e7cc      	b.n	801a26e <_init_static_threads+0xa>
		if (thread_data->init_delay != K_FOREVER) {
 801a2d4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801a2d6:	1c4b      	adds	r3, r1, #1
 801a2d8:	d003      	beq.n	801a2e2 <_init_static_threads+0x7e>
			schedule_new_thread(thread_data->init_thread,
 801a2da:	6820      	ldr	r0, [r4, #0]
	if (delay == 0) {
 801a2dc:	b919      	cbnz	r1, 801a2e6 <_init_static_threads+0x82>

K_SYSCALL_DECLARE1_VOID(K_SYSCALL_K_THREAD_START, k_thread_start, k_tid_t, thread);
 801a2de:	f7ff ff6f 	bl	801a1c0 <_impl_k_thread_start>
	_FOREACH_STATIC_THREAD(thread_data) {
 801a2e2:	342c      	adds	r4, #44	; 0x2c
 801a2e4:	e7d3      	b.n	801a28e <_init_static_threads+0x2a>
 801a2e6:	f7ff feef 	bl	801a0c8 <schedule_new_thread.part.13>
 801a2ea:	e7fa      	b.n	801a2e2 <_init_static_threads+0x7e>
 801a2ec:	20003e34 	.word	0x20003e34
 801a2f0:	20003e34 	.word	0x20003e34
 801a2f4:	20000760 	.word	0x20000760

0801a2f8 <_init_thread_base>:
void _init_thread_base(struct _thread_base *thread_base, int priority,
		       u32_t initial_state, unsigned int options)
{
	/* k_q_node is initialized upon first insertion in a list */

	thread_base->user_options = (u8_t)options;
 801a2f8:	7203      	strb	r3, [r0, #8]
	thread_base->thread_state = (u8_t)initial_state;
 801a2fa:	7242      	strb	r2, [r0, #9]

	thread_base->prio = priority;

	thread_base->sched_locked = 0;
 801a2fc:	2300      	movs	r3, #0
	t->delta_ticks_from_prev = _INACTIVE;
 801a2fe:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
	thread_base->prio = priority;
 801a302:	7281      	strb	r1, [r0, #10]
	thread_base->sched_locked = 0;
 801a304:	72c3      	strb	r3, [r0, #11]
	t->wait_q = NULL;
 801a306:	e9c0 3207 	strd	r3, r2, [r0, #28]
	t->thread = NULL;
 801a30a:	6183      	str	r3, [r0, #24]
	t->func = func;
 801a30c:	6243      	str	r3, [r0, #36]	; 0x24

	/* swap_data does not need to be initialized */

	_init_thread_timeout(thread_base);
}
 801a30e:	4770      	bx	lr

0801a310 <idle>:
#else
#define IDLE_YIELD_IF_COOP() do { } while ((0))
#endif

void idle(void *unused1, void *unused2, void *unused3)
{
 801a310:	b508      	push	{r3, lr}
	__asm__ volatile(
 801a312:	f04f 0210 	mov.w	r2, #16
 801a316:	f3ef 8311 	mrs	r3, BASEPRI
 801a31a:	f382 8811 	msr	BASEPRI, r2
	k_cpu_idle();
 801a31e:	f7fe f97b 	bl	8018618 <k_cpu_idle>
 801a322:	e7f6      	b.n	801a312 <idle+0x2>

0801a324 <_OffsetAbsSyms>:
					    sizeof(struct _preempt_float));
#else
GEN_ABSOLUTE_SYM(_K_THREAD_NO_FLOAT_SIZEOF, sizeof(struct k_thread));
#endif

GEN_ABS_SYM_END
 801a324:	4770      	bx	lr
	...

0801a328 <__cxa_begin_catch>:
 801a328:	b570      	push	{r4, r5, r6, lr}
 801a32a:	0004      	movs	r4, r0
 801a32c:	f000 f886 	bl	801a43c <__cxa_get_globals>
 801a330:	0023      	movs	r3, r4
 801a332:	7821      	ldrb	r1, [r4, #0]
 801a334:	6802      	ldr	r2, [r0, #0]
 801a336:	3b20      	subs	r3, #32
 801a338:	2947      	cmp	r1, #71	; 0x47
 801a33a:	d007      	beq.n	801a34c <__cxa_begin_catch+0x24>
 801a33c:	2a00      	cmp	r2, #0
 801a33e:	d12e      	bne.n	801a39e <__cxa_begin_catch+0x76>
 801a340:	2500      	movs	r5, #0
 801a342:	6003      	str	r3, [r0, #0]
 801a344:	0028      	movs	r0, r5
 801a346:	bc70      	pop	{r4, r5, r6}
 801a348:	bc02      	pop	{r1}
 801a34a:	4708      	bx	r1
 801a34c:	7861      	ldrb	r1, [r4, #1]
 801a34e:	294e      	cmp	r1, #78	; 0x4e
 801a350:	d1f4      	bne.n	801a33c <__cxa_begin_catch+0x14>
 801a352:	78a1      	ldrb	r1, [r4, #2]
 801a354:	2955      	cmp	r1, #85	; 0x55
 801a356:	d1f1      	bne.n	801a33c <__cxa_begin_catch+0x14>
 801a358:	78e1      	ldrb	r1, [r4, #3]
 801a35a:	2943      	cmp	r1, #67	; 0x43
 801a35c:	d1ee      	bne.n	801a33c <__cxa_begin_catch+0x14>
 801a35e:	7921      	ldrb	r1, [r4, #4]
 801a360:	2943      	cmp	r1, #67	; 0x43
 801a362:	d1eb      	bne.n	801a33c <__cxa_begin_catch+0x14>
 801a364:	7961      	ldrb	r1, [r4, #5]
 801a366:	292b      	cmp	r1, #43	; 0x2b
 801a368:	d1e8      	bne.n	801a33c <__cxa_begin_catch+0x14>
 801a36a:	79a1      	ldrb	r1, [r4, #6]
 801a36c:	292b      	cmp	r1, #43	; 0x2b
 801a36e:	d1e5      	bne.n	801a33c <__cxa_begin_catch+0x14>
 801a370:	79e1      	ldrb	r1, [r4, #7]
 801a372:	2901      	cmp	r1, #1
 801a374:	d8e2      	bhi.n	801a33c <__cxa_begin_catch+0x14>
 801a376:	6959      	ldr	r1, [r3, #20]
 801a378:	2900      	cmp	r1, #0
 801a37a:	db0d      	blt.n	801a398 <__cxa_begin_catch+0x70>
 801a37c:	3101      	adds	r1, #1
 801a37e:	6159      	str	r1, [r3, #20]
 801a380:	6841      	ldr	r1, [r0, #4]
 801a382:	3901      	subs	r1, #1
 801a384:	6041      	str	r1, [r0, #4]
 801a386:	429a      	cmp	r2, r3
 801a388:	d001      	beq.n	801a38e <__cxa_begin_catch+0x66>
 801a38a:	611a      	str	r2, [r3, #16]
 801a38c:	6003      	str	r3, [r0, #0]
 801a38e:	0020      	movs	r0, r4
 801a390:	6a65      	ldr	r5, [r4, #36]	; 0x24
 801a392:	f7e7 f955 	bl	8001640 <_Unwind_Complete>
 801a396:	e7d5      	b.n	801a344 <__cxa_begin_catch+0x1c>
 801a398:	2501      	movs	r5, #1
 801a39a:	1a69      	subs	r1, r5, r1
 801a39c:	e7ef      	b.n	801a37e <__cxa_begin_catch+0x56>
 801a39e:	f000 fbb5 	bl	801ab0c <_ZSt9terminatev>
 801a3a2:	46c0      	nop			; (mov r8, r8)

0801a3a4 <__cxa_end_catch>:
 801a3a4:	b510      	push	{r4, lr}
 801a3a6:	f000 f845 	bl	801a434 <__cxa_get_globals_fast>
 801a3aa:	6803      	ldr	r3, [r0, #0]
 801a3ac:	2b00      	cmp	r3, #0
 801a3ae:	d009      	beq.n	801a3c4 <__cxa_end_catch+0x20>
 801a3b0:	2220      	movs	r2, #32
 801a3b2:	5c9a      	ldrb	r2, [r3, r2]
 801a3b4:	2a47      	cmp	r2, #71	; 0x47
 801a3b6:	d008      	beq.n	801a3ca <__cxa_end_catch+0x26>
 801a3b8:	2200      	movs	r2, #0
 801a3ba:	3320      	adds	r3, #32
 801a3bc:	6002      	str	r2, [r0, #0]
 801a3be:	0018      	movs	r0, r3
 801a3c0:	f7e7 f940 	bl	8001644 <_Unwind_DeleteException>
 801a3c4:	bc10      	pop	{r4}
 801a3c6:	bc01      	pop	{r0}
 801a3c8:	4700      	bx	r0
 801a3ca:	3a26      	subs	r2, #38	; 0x26
 801a3cc:	5c9a      	ldrb	r2, [r3, r2]
 801a3ce:	2a4e      	cmp	r2, #78	; 0x4e
 801a3d0:	d1f2      	bne.n	801a3b8 <__cxa_end_catch+0x14>
 801a3d2:	3a2c      	subs	r2, #44	; 0x2c
 801a3d4:	5c9a      	ldrb	r2, [r3, r2]
 801a3d6:	2a55      	cmp	r2, #85	; 0x55
 801a3d8:	d1ee      	bne.n	801a3b8 <__cxa_end_catch+0x14>
 801a3da:	3a32      	subs	r2, #50	; 0x32
 801a3dc:	5c9a      	ldrb	r2, [r3, r2]
 801a3de:	2a43      	cmp	r2, #67	; 0x43
 801a3e0:	d1ea      	bne.n	801a3b8 <__cxa_end_catch+0x14>
 801a3e2:	3a1f      	subs	r2, #31
 801a3e4:	5c9a      	ldrb	r2, [r3, r2]
 801a3e6:	2a43      	cmp	r2, #67	; 0x43
 801a3e8:	d1e6      	bne.n	801a3b8 <__cxa_end_catch+0x14>
 801a3ea:	3a1e      	subs	r2, #30
 801a3ec:	5c9a      	ldrb	r2, [r3, r2]
 801a3ee:	2a2b      	cmp	r2, #43	; 0x2b
 801a3f0:	d1e2      	bne.n	801a3b8 <__cxa_end_catch+0x14>
 801a3f2:	3a05      	subs	r2, #5
 801a3f4:	5c9a      	ldrb	r2, [r3, r2]
 801a3f6:	2a2b      	cmp	r2, #43	; 0x2b
 801a3f8:	d1de      	bne.n	801a3b8 <__cxa_end_catch+0x14>
 801a3fa:	3a04      	subs	r2, #4
 801a3fc:	5c9a      	ldrb	r2, [r3, r2]
 801a3fe:	2a01      	cmp	r2, #1
 801a400:	d8da      	bhi.n	801a3b8 <__cxa_end_catch+0x14>
 801a402:	695a      	ldr	r2, [r3, #20]
 801a404:	2a00      	cmp	r2, #0
 801a406:	db07      	blt.n	801a418 <__cxa_end_catch+0x74>
 801a408:	3a01      	subs	r2, #1
 801a40a:	2a00      	cmp	r2, #0
 801a40c:	d00b      	beq.n	801a426 <__cxa_end_catch+0x82>
 801a40e:	db01      	blt.n	801a414 <__cxa_end_catch+0x70>
 801a410:	615a      	str	r2, [r3, #20]
 801a412:	e7d7      	b.n	801a3c4 <__cxa_end_catch+0x20>
 801a414:	f000 fb7a 	bl	801ab0c <_ZSt9terminatev>
 801a418:	3201      	adds	r2, #1
 801a41a:	2a00      	cmp	r2, #0
 801a41c:	d1f8      	bne.n	801a410 <__cxa_end_catch+0x6c>
 801a41e:	6919      	ldr	r1, [r3, #16]
 801a420:	6001      	str	r1, [r0, #0]
 801a422:	615a      	str	r2, [r3, #20]
 801a424:	e7ce      	b.n	801a3c4 <__cxa_end_catch+0x20>
 801a426:	691a      	ldr	r2, [r3, #16]
 801a428:	3320      	adds	r3, #32
 801a42a:	6002      	str	r2, [r0, #0]
 801a42c:	0018      	movs	r0, r3
 801a42e:	f7e7 f909 	bl	8001644 <_Unwind_DeleteException>
 801a432:	e7c7      	b.n	801a3c4 <__cxa_end_catch+0x20>

0801a434 <__cxa_get_globals_fast>:
 801a434:	4800      	ldr	r0, [pc, #0]	; (801a438 <__cxa_get_globals_fast+0x4>)
 801a436:	4770      	bx	lr
 801a438:	20000888 	.word	0x20000888

0801a43c <__cxa_get_globals>:
 801a43c:	4800      	ldr	r0, [pc, #0]	; (801a440 <__cxa_get_globals+0x4>)
 801a43e:	4770      	bx	lr
 801a440:	20000888 	.word	0x20000888

0801a444 <_ZL28read_encoded_value_with_basehjPKhPj>:
 801a444:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a446:	46d6      	mov	lr, sl
 801a448:	464f      	mov	r7, r9
 801a44a:	4646      	mov	r6, r8
 801a44c:	468a      	mov	sl, r1
 801a44e:	b5c0      	push	{r6, r7, lr}
 801a450:	2850      	cmp	r0, #80	; 0x50
 801a452:	d027      	beq.n	801a4a4 <_ZL28read_encoded_value_with_basehjPKhPj+0x60>
 801a454:	240f      	movs	r4, #15
 801a456:	4004      	ands	r4, r0
 801a458:	2c0c      	cmp	r4, #12
 801a45a:	d900      	bls.n	801a45e <_ZL28read_encoded_value_with_basehjPKhPj+0x1a>
 801a45c:	e071      	b.n	801a542 <_ZL28read_encoded_value_with_basehjPKhPj+0xfe>
 801a45e:	4d3a      	ldr	r5, [pc, #232]	; (801a548 <_ZL28read_encoded_value_with_basehjPKhPj+0x104>)
 801a460:	00a4      	lsls	r4, r4, #2
 801a462:	592c      	ldr	r4, [r5, r4]
 801a464:	46a7      	mov	pc, r4
 801a466:	7855      	ldrb	r5, [r2, #1]
 801a468:	7814      	ldrb	r4, [r2, #0]
 801a46a:	022d      	lsls	r5, r5, #8
 801a46c:	4325      	orrs	r5, r4
 801a46e:	7894      	ldrb	r4, [r2, #2]
 801a470:	0424      	lsls	r4, r4, #16
 801a472:	4325      	orrs	r5, r4
 801a474:	78d4      	ldrb	r4, [r2, #3]
 801a476:	0624      	lsls	r4, r4, #24
 801a478:	432c      	orrs	r4, r5
 801a47a:	1d15      	adds	r5, r2, #4
 801a47c:	2c00      	cmp	r4, #0
 801a47e:	d008      	beq.n	801a492 <_ZL28read_encoded_value_with_basehjPKhPj+0x4e>
 801a480:	2670      	movs	r6, #112	; 0x70
 801a482:	4006      	ands	r6, r0
 801a484:	2e10      	cmp	r6, #16
 801a486:	d100      	bne.n	801a48a <_ZL28read_encoded_value_with_basehjPKhPj+0x46>
 801a488:	4692      	mov	sl, r2
 801a48a:	4454      	add	r4, sl
 801a48c:	0600      	lsls	r0, r0, #24
 801a48e:	d500      	bpl.n	801a492 <_ZL28read_encoded_value_with_basehjPKhPj+0x4e>
 801a490:	6824      	ldr	r4, [r4, #0]
 801a492:	0028      	movs	r0, r5
 801a494:	601c      	str	r4, [r3, #0]
 801a496:	bc1c      	pop	{r2, r3, r4}
 801a498:	4690      	mov	r8, r2
 801a49a:	4699      	mov	r9, r3
 801a49c:	46a2      	mov	sl, r4
 801a49e:	bcf0      	pop	{r4, r5, r6, r7}
 801a4a0:	bc02      	pop	{r1}
 801a4a2:	4708      	bx	r1
 801a4a4:	2103      	movs	r1, #3
 801a4a6:	3203      	adds	r2, #3
 801a4a8:	438a      	bics	r2, r1
 801a4aa:	0015      	movs	r5, r2
 801a4ac:	cd10      	ldmia	r5!, {r4}
 801a4ae:	e7f0      	b.n	801a492 <_ZL28read_encoded_value_with_basehjPKhPj+0x4e>
 801a4b0:	7855      	ldrb	r5, [r2, #1]
 801a4b2:	7814      	ldrb	r4, [r2, #0]
 801a4b4:	022d      	lsls	r5, r5, #8
 801a4b6:	4325      	orrs	r5, r4
 801a4b8:	7894      	ldrb	r4, [r2, #2]
 801a4ba:	0424      	lsls	r4, r4, #16
 801a4bc:	4325      	orrs	r5, r4
 801a4be:	78d4      	ldrb	r4, [r2, #3]
 801a4c0:	0624      	lsls	r4, r4, #24
 801a4c2:	432c      	orrs	r4, r5
 801a4c4:	0015      	movs	r5, r2
 801a4c6:	3508      	adds	r5, #8
 801a4c8:	e7d8      	b.n	801a47c <_ZL28read_encoded_value_with_basehjPKhPj+0x38>
 801a4ca:	7854      	ldrb	r4, [r2, #1]
 801a4cc:	7815      	ldrb	r5, [r2, #0]
 801a4ce:	0224      	lsls	r4, r4, #8
 801a4d0:	432c      	orrs	r4, r5
 801a4d2:	0424      	lsls	r4, r4, #16
 801a4d4:	1424      	asrs	r4, r4, #16
 801a4d6:	1c95      	adds	r5, r2, #2
 801a4d8:	e7d0      	b.n	801a47c <_ZL28read_encoded_value_with_basehjPKhPj+0x38>
 801a4da:	217f      	movs	r1, #127	; 0x7f
 801a4dc:	0016      	movs	r6, r2
 801a4de:	2400      	movs	r4, #0
 801a4e0:	2700      	movs	r7, #0
 801a4e2:	4689      	mov	r9, r1
 801a4e4:	7831      	ldrb	r1, [r6, #0]
 801a4e6:	1c75      	adds	r5, r6, #1
 801a4e8:	464e      	mov	r6, r9
 801a4ea:	400e      	ands	r6, r1
 801a4ec:	40be      	lsls	r6, r7
 801a4ee:	468c      	mov	ip, r1
 801a4f0:	4334      	orrs	r4, r6
 801a4f2:	3707      	adds	r7, #7
 801a4f4:	002e      	movs	r6, r5
 801a4f6:	0609      	lsls	r1, r1, #24
 801a4f8:	d4f4      	bmi.n	801a4e4 <_ZL28read_encoded_value_with_basehjPKhPj+0xa0>
 801a4fa:	2f1f      	cmp	r7, #31
 801a4fc:	d8be      	bhi.n	801a47c <_ZL28read_encoded_value_with_basehjPKhPj+0x38>
 801a4fe:	4661      	mov	r1, ip
 801a500:	0649      	lsls	r1, r1, #25
 801a502:	d5bb      	bpl.n	801a47c <_ZL28read_encoded_value_with_basehjPKhPj+0x38>
 801a504:	2601      	movs	r6, #1
 801a506:	40be      	lsls	r6, r7
 801a508:	4276      	negs	r6, r6
 801a50a:	4334      	orrs	r4, r6
 801a50c:	e7b8      	b.n	801a480 <_ZL28read_encoded_value_with_basehjPKhPj+0x3c>
 801a50e:	2100      	movs	r1, #0
 801a510:	468c      	mov	ip, r1
 801a512:	317f      	adds	r1, #127	; 0x7f
 801a514:	0017      	movs	r7, r2
 801a516:	2400      	movs	r4, #0
 801a518:	4688      	mov	r8, r1
 801a51a:	783e      	ldrb	r6, [r7, #0]
 801a51c:	1c7d      	adds	r5, r7, #1
 801a51e:	4647      	mov	r7, r8
 801a520:	4661      	mov	r1, ip
 801a522:	4037      	ands	r7, r6
 801a524:	408f      	lsls	r7, r1
 801a526:	2107      	movs	r1, #7
 801a528:	4689      	mov	r9, r1
 801a52a:	433c      	orrs	r4, r7
 801a52c:	44cc      	add	ip, r9
 801a52e:	002f      	movs	r7, r5
 801a530:	0636      	lsls	r6, r6, #24
 801a532:	d4f2      	bmi.n	801a51a <_ZL28read_encoded_value_with_basehjPKhPj+0xd6>
 801a534:	e7a2      	b.n	801a47c <_ZL28read_encoded_value_with_basehjPKhPj+0x38>
 801a536:	7854      	ldrb	r4, [r2, #1]
 801a538:	7815      	ldrb	r5, [r2, #0]
 801a53a:	0224      	lsls	r4, r4, #8
 801a53c:	432c      	orrs	r4, r5
 801a53e:	1c95      	adds	r5, r2, #2
 801a540:	e79c      	b.n	801a47c <_ZL28read_encoded_value_with_basehjPKhPj+0x38>
 801a542:	f000 ffd1 	bl	801b4e8 <abort>
 801a546:	46c0      	nop			; (mov r8, r8)
 801a548:	08026b7c 	.word	0x08026b7c

0801a54c <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3>:
 801a54c:	2370      	movs	r3, #112	; 0x70
 801a54e:	b510      	push	{r4, lr}
 801a550:	4003      	ands	r3, r0
 801a552:	2b20      	cmp	r3, #32
 801a554:	d016      	beq.n	801a584 <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3+0x38>
 801a556:	d90f      	bls.n	801a578 <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3+0x2c>
 801a558:	2b40      	cmp	r3, #64	; 0x40
 801a55a:	d007      	beq.n	801a56c <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3+0x20>
 801a55c:	2b50      	cmp	r3, #80	; 0x50
 801a55e:	d00f      	beq.n	801a580 <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3+0x34>
 801a560:	2b30      	cmp	r3, #48	; 0x30
 801a562:	d113      	bne.n	801a58c <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3+0x40>
 801a564:	0008      	movs	r0, r1
 801a566:	f7e7 fd53 	bl	8002010 <_Unwind_GetDataRelBase>
 801a56a:	e002      	b.n	801a572 <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3+0x26>
 801a56c:	0008      	movs	r0, r1
 801a56e:	f7e7 fd3f 	bl	8001ff0 <_Unwind_GetRegionStart>
 801a572:	bc10      	pop	{r4}
 801a574:	bc02      	pop	{r1}
 801a576:	4708      	bx	r1
 801a578:	2b00      	cmp	r3, #0
 801a57a:	d001      	beq.n	801a580 <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3+0x34>
 801a57c:	2b10      	cmp	r3, #16
 801a57e:	d105      	bne.n	801a58c <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3+0x40>
 801a580:	2000      	movs	r0, #0
 801a582:	e7f6      	b.n	801a572 <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3+0x26>
 801a584:	0008      	movs	r0, r1
 801a586:	f7e7 fd47 	bl	8002018 <_Unwind_GetTextRelBase>
 801a58a:	e7f2      	b.n	801a572 <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3+0x26>
 801a58c:	f000 ffac 	bl	801b4e8 <abort>

0801a590 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>:
 801a590:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a592:	0006      	movs	r6, r0
 801a594:	000f      	movs	r7, r1
 801a596:	0014      	movs	r4, r2
 801a598:	2000      	movs	r0, #0
 801a59a:	2e00      	cmp	r6, #0
 801a59c:	d002      	beq.n	801a5a4 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x14>
 801a59e:	0030      	movs	r0, r6
 801a5a0:	f7e7 fd26 	bl	8001ff0 <_Unwind_GetRegionStart>
 801a5a4:	6020      	str	r0, [r4, #0]
 801a5a6:	1c7d      	adds	r5, r7, #1
 801a5a8:	783f      	ldrb	r7, [r7, #0]
 801a5aa:	2fff      	cmp	r7, #255	; 0xff
 801a5ac:	d12b      	bne.n	801a606 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x76>
 801a5ae:	6060      	str	r0, [r4, #4]
 801a5b0:	782b      	ldrb	r3, [r5, #0]
 801a5b2:	1c6a      	adds	r2, r5, #1
 801a5b4:	7523      	strb	r3, [r4, #20]
 801a5b6:	2bff      	cmp	r3, #255	; 0xff
 801a5b8:	d035      	beq.n	801a626 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x96>
 801a5ba:	2310      	movs	r3, #16
 801a5bc:	2000      	movs	r0, #0
 801a5be:	2100      	movs	r1, #0
 801a5c0:	267f      	movs	r6, #127	; 0x7f
 801a5c2:	7523      	strb	r3, [r4, #20]
 801a5c4:	7813      	ldrb	r3, [r2, #0]
 801a5c6:	1c55      	adds	r5, r2, #1
 801a5c8:	0032      	movs	r2, r6
 801a5ca:	401a      	ands	r2, r3
 801a5cc:	408a      	lsls	r2, r1
 801a5ce:	061b      	lsls	r3, r3, #24
 801a5d0:	4310      	orrs	r0, r2
 801a5d2:	3107      	adds	r1, #7
 801a5d4:	002a      	movs	r2, r5
 801a5d6:	2b00      	cmp	r3, #0
 801a5d8:	dbf4      	blt.n	801a5c4 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x34>
 801a5da:	182a      	adds	r2, r5, r0
 801a5dc:	60e2      	str	r2, [r4, #12]
 801a5de:	782b      	ldrb	r3, [r5, #0]
 801a5e0:	1c68      	adds	r0, r5, #1
 801a5e2:	2100      	movs	r1, #0
 801a5e4:	2500      	movs	r5, #0
 801a5e6:	267f      	movs	r6, #127	; 0x7f
 801a5e8:	7563      	strb	r3, [r4, #21]
 801a5ea:	0032      	movs	r2, r6
 801a5ec:	7803      	ldrb	r3, [r0, #0]
 801a5ee:	401a      	ands	r2, r3
 801a5f0:	408a      	lsls	r2, r1
 801a5f2:	3001      	adds	r0, #1
 801a5f4:	4315      	orrs	r5, r2
 801a5f6:	3107      	adds	r1, #7
 801a5f8:	061b      	lsls	r3, r3, #24
 801a5fa:	d4f6      	bmi.n	801a5ea <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x5a>
 801a5fc:	1945      	adds	r5, r0, r5
 801a5fe:	6125      	str	r5, [r4, #16]
 801a600:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801a602:	bc02      	pop	{r1}
 801a604:	4708      	bx	r1
 801a606:	0031      	movs	r1, r6
 801a608:	0038      	movs	r0, r7
 801a60a:	f7ff ff9f 	bl	801a54c <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3>
 801a60e:	002a      	movs	r2, r5
 801a610:	0001      	movs	r1, r0
 801a612:	1d23      	adds	r3, r4, #4
 801a614:	0038      	movs	r0, r7
 801a616:	f7ff ff15 	bl	801a444 <_ZL28read_encoded_value_with_basehjPKhPj>
 801a61a:	0005      	movs	r5, r0
 801a61c:	782b      	ldrb	r3, [r5, #0]
 801a61e:	1c6a      	adds	r2, r5, #1
 801a620:	7523      	strb	r3, [r4, #20]
 801a622:	2bff      	cmp	r3, #255	; 0xff
 801a624:	d1c9      	bne.n	801a5ba <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x2a>
 801a626:	2300      	movs	r3, #0
 801a628:	0015      	movs	r5, r2
 801a62a:	60e3      	str	r3, [r4, #12]
 801a62c:	e7d7      	b.n	801a5de <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x4e>
 801a62e:	46c0      	nop			; (mov r8, r8)

0801a630 <__gxx_personality_v0>:
 801a630:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a632:	4657      	mov	r7, sl
 801a634:	4645      	mov	r5, r8
 801a636:	46de      	mov	lr, fp
 801a638:	464e      	mov	r6, r9
 801a63a:	2300      	movs	r3, #0
 801a63c:	b5e0      	push	{r5, r6, r7, lr}
 801a63e:	b097      	sub	sp, #92	; 0x5c
 801a640:	930a      	str	r3, [sp, #40]	; 0x28
 801a642:	3303      	adds	r3, #3
 801a644:	4688      	mov	r8, r1
 801a646:	0017      	movs	r7, r2
 801a648:	4003      	ands	r3, r0
 801a64a:	2b01      	cmp	r3, #1
 801a64c:	d100      	bne.n	801a650 <__gxx_personality_v0+0x20>
 801a64e:	e0a0      	b.n	801a792 <__gxx_personality_v0+0x162>
 801a650:	2b00      	cmp	r3, #0
 801a652:	d014      	beq.n	801a67e <__gxx_personality_v0+0x4e>
 801a654:	2b02      	cmp	r3, #2
 801a656:	d000      	beq.n	801a65a <__gxx_personality_v0+0x2a>
 801a658:	e23b      	b.n	801aad2 <__gxx_personality_v0+0x4a2>
 801a65a:	0039      	movs	r1, r7
 801a65c:	4640      	mov	r0, r8
 801a65e:	f7e7 fcb3 	bl	8001fc8 <__gnu_unwind_frame>
 801a662:	2509      	movs	r5, #9
 801a664:	2800      	cmp	r0, #0
 801a666:	d100      	bne.n	801a66a <__gxx_personality_v0+0x3a>
 801a668:	2508      	movs	r5, #8
 801a66a:	0028      	movs	r0, r5
 801a66c:	b017      	add	sp, #92	; 0x5c
 801a66e:	bc3c      	pop	{r2, r3, r4, r5}
 801a670:	4690      	mov	r8, r2
 801a672:	4699      	mov	r9, r3
 801a674:	46a2      	mov	sl, r4
 801a676:	46ab      	mov	fp, r5
 801a678:	bcf0      	pop	{r4, r5, r6, r7}
 801a67a:	bc02      	pop	{r1}
 801a67c:	4708      	bx	r1
 801a67e:	2301      	movs	r3, #1
 801a680:	9304      	str	r3, [sp, #16]
 801a682:	0703      	lsls	r3, r0, #28
 801a684:	d4e9      	bmi.n	801a65a <__gxx_personality_v0+0x2a>
 801a686:	4643      	mov	r3, r8
 801a688:	930b      	str	r3, [sp, #44]	; 0x2c
 801a68a:	ab0b      	add	r3, sp, #44	; 0x2c
 801a68c:	9300      	str	r3, [sp, #0]
 801a68e:	220c      	movs	r2, #12
 801a690:	2300      	movs	r3, #0
 801a692:	2100      	movs	r1, #0
 801a694:	0038      	movs	r0, r7
 801a696:	f7e6 fffd 	bl	8001694 <_Unwind_VRS_Set>
 801a69a:	0038      	movs	r0, r7
 801a69c:	f7e7 fcae 	bl	8001ffc <_Unwind_GetLanguageSpecificData>
 801a6a0:	9005      	str	r0, [sp, #20]
 801a6a2:	2800      	cmp	r0, #0
 801a6a4:	d0d9      	beq.n	801a65a <__gxx_personality_v0+0x2a>
 801a6a6:	ae10      	add	r6, sp, #64	; 0x40
 801a6a8:	0032      	movs	r2, r6
 801a6aa:	9905      	ldr	r1, [sp, #20]
 801a6ac:	0038      	movs	r0, r7
 801a6ae:	f7ff ff6f 	bl	801a590 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 801a6b2:	0004      	movs	r4, r0
 801a6b4:	7d30      	ldrb	r0, [r6, #20]
 801a6b6:	2300      	movs	r3, #0
 801a6b8:	28ff      	cmp	r0, #255	; 0xff
 801a6ba:	d171      	bne.n	801a7a0 <__gxx_personality_v0+0x170>
 801a6bc:	60b3      	str	r3, [r6, #8]
 801a6be:	ab0f      	add	r3, sp, #60	; 0x3c
 801a6c0:	9300      	str	r3, [sp, #0]
 801a6c2:	220f      	movs	r2, #15
 801a6c4:	2300      	movs	r3, #0
 801a6c6:	2100      	movs	r1, #0
 801a6c8:	0038      	movs	r0, r7
 801a6ca:	f7e6 ffc1 	bl	8001650 <_Unwind_VRS_Get>
 801a6ce:	2201      	movs	r2, #1
 801a6d0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a6d2:	4393      	bics	r3, r2
 801a6d4:	3b01      	subs	r3, #1
 801a6d6:	469a      	mov	sl, r3
 801a6d8:	6933      	ldr	r3, [r6, #16]
 801a6da:	429c      	cmp	r4, r3
 801a6dc:	d300      	bcc.n	801a6e0 <__gxx_personality_v0+0xb0>
 801a6de:	e0c6      	b.n	801a86e <__gxx_personality_v0+0x23e>
 801a6e0:	ab0d      	add	r3, sp, #52	; 0x34
 801a6e2:	9302      	str	r3, [sp, #8]
 801a6e4:	ab0e      	add	r3, sp, #56	; 0x38
 801a6e6:	4699      	mov	r9, r3
 801a6e8:	4653      	mov	r3, sl
 801a6ea:	257f      	movs	r5, #127	; 0x7f
 801a6ec:	46ba      	mov	sl, r7
 801a6ee:	9303      	str	r3, [sp, #12]
 801a6f0:	7d77      	ldrb	r7, [r6, #21]
 801a6f2:	2100      	movs	r1, #0
 801a6f4:	2fff      	cmp	r7, #255	; 0xff
 801a6f6:	d003      	beq.n	801a700 <__gxx_personality_v0+0xd0>
 801a6f8:	0038      	movs	r0, r7
 801a6fa:	f7ff ff27 	bl	801a54c <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3>
 801a6fe:	0001      	movs	r1, r0
 801a700:	0022      	movs	r2, r4
 801a702:	9b02      	ldr	r3, [sp, #8]
 801a704:	0038      	movs	r0, r7
 801a706:	f7ff fe9d 	bl	801a444 <_ZL28read_encoded_value_with_basehjPKhPj>
 801a70a:	7d74      	ldrb	r4, [r6, #21]
 801a70c:	4683      	mov	fp, r0
 801a70e:	2100      	movs	r1, #0
 801a710:	2cff      	cmp	r4, #255	; 0xff
 801a712:	d003      	beq.n	801a71c <__gxx_personality_v0+0xec>
 801a714:	0020      	movs	r0, r4
 801a716:	f7ff ff19 	bl	801a54c <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3>
 801a71a:	0001      	movs	r1, r0
 801a71c:	465a      	mov	r2, fp
 801a71e:	0020      	movs	r0, r4
 801a720:	464b      	mov	r3, r9
 801a722:	f7ff fe8f 	bl	801a444 <_ZL28read_encoded_value_with_basehjPKhPj>
 801a726:	7d74      	ldrb	r4, [r6, #21]
 801a728:	4683      	mov	fp, r0
 801a72a:	2100      	movs	r1, #0
 801a72c:	2cff      	cmp	r4, #255	; 0xff
 801a72e:	d003      	beq.n	801a738 <__gxx_personality_v0+0x108>
 801a730:	0020      	movs	r0, r4
 801a732:	f7ff ff0b 	bl	801a54c <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3>
 801a736:	0001      	movs	r1, r0
 801a738:	465a      	mov	r2, fp
 801a73a:	ab0f      	add	r3, sp, #60	; 0x3c
 801a73c:	0020      	movs	r0, r4
 801a73e:	f7ff fe81 	bl	801a444 <_ZL28read_encoded_value_with_basehjPKhPj>
 801a742:	2100      	movs	r1, #0
 801a744:	0002      	movs	r2, r0
 801a746:	2000      	movs	r0, #0
 801a748:	7813      	ldrb	r3, [r2, #0]
 801a74a:	1c54      	adds	r4, r2, #1
 801a74c:	002a      	movs	r2, r5
 801a74e:	401a      	ands	r2, r3
 801a750:	408a      	lsls	r2, r1
 801a752:	061b      	lsls	r3, r3, #24
 801a754:	4310      	orrs	r0, r2
 801a756:	3107      	adds	r1, #7
 801a758:	0022      	movs	r2, r4
 801a75a:	2b00      	cmp	r3, #0
 801a75c:	dbf4      	blt.n	801a748 <__gxx_personality_v0+0x118>
 801a75e:	990d      	ldr	r1, [sp, #52]	; 0x34
 801a760:	468c      	mov	ip, r1
 801a762:	6833      	ldr	r3, [r6, #0]
 801a764:	9903      	ldr	r1, [sp, #12]
 801a766:	4463      	add	r3, ip
 801a768:	428b      	cmp	r3, r1
 801a76a:	d808      	bhi.n	801a77e <__gxx_personality_v0+0x14e>
 801a76c:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801a76e:	46bc      	mov	ip, r7
 801a770:	4463      	add	r3, ip
 801a772:	428b      	cmp	r3, r1
 801a774:	d900      	bls.n	801a778 <__gxx_personality_v0+0x148>
 801a776:	e096      	b.n	801a8a6 <__gxx_personality_v0+0x276>
 801a778:	6933      	ldr	r3, [r6, #16]
 801a77a:	42a3      	cmp	r3, r4
 801a77c:	d8b8      	bhi.n	801a6f0 <__gxx_personality_v0+0xc0>
 801a77e:	9b04      	ldr	r3, [sp, #16]
 801a780:	4657      	mov	r7, sl
 801a782:	07db      	lsls	r3, r3, #31
 801a784:	d478      	bmi.n	801a878 <__gxx_personality_v0+0x248>
 801a786:	2308      	movs	r3, #8
 801a788:	9a04      	ldr	r2, [sp, #16]
 801a78a:	4213      	tst	r3, r2
 801a78c:	d00d      	beq.n	801a7aa <__gxx_personality_v0+0x17a>
 801a78e:	f000 f9bd 	bl	801ab0c <_ZSt9terminatev>
 801a792:	2308      	movs	r3, #8
 801a794:	4018      	ands	r0, r3
 801a796:	d00b      	beq.n	801a7b0 <__gxx_personality_v0+0x180>
 801a798:	2302      	movs	r3, #2
 801a79a:	4318      	orrs	r0, r3
 801a79c:	9004      	str	r0, [sp, #16]
 801a79e:	e772      	b.n	801a686 <__gxx_personality_v0+0x56>
 801a7a0:	0039      	movs	r1, r7
 801a7a2:	f7ff fed3 	bl	801a54c <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3>
 801a7a6:	0003      	movs	r3, r0
 801a7a8:	e788      	b.n	801a6bc <__gxx_personality_v0+0x8c>
 801a7aa:	4640      	mov	r0, r8
 801a7ac:	f000 fac6 	bl	801ad3c <__cxa_call_terminate>
 801a7b0:	ae10      	add	r6, sp, #64	; 0x40
 801a7b2:	6a0c      	ldr	r4, [r1, #32]
 801a7b4:	2300      	movs	r3, #0
 801a7b6:	9600      	str	r6, [sp, #0]
 801a7b8:	220d      	movs	r2, #13
 801a7ba:	2100      	movs	r1, #0
 801a7bc:	0038      	movs	r0, r7
 801a7be:	f7e6 ff47 	bl	8001650 <_Unwind_VRS_Get>
 801a7c2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a7c4:	429c      	cmp	r4, r3
 801a7c6:	d002      	beq.n	801a7ce <__gxx_personality_v0+0x19e>
 801a7c8:	2302      	movs	r3, #2
 801a7ca:	9304      	str	r3, [sp, #16]
 801a7cc:	e75b      	b.n	801a686 <__gxx_personality_v0+0x56>
 801a7ce:	4643      	mov	r3, r8
 801a7d0:	930b      	str	r3, [sp, #44]	; 0x2c
 801a7d2:	ab0b      	add	r3, sp, #44	; 0x2c
 801a7d4:	9300      	str	r3, [sp, #0]
 801a7d6:	220c      	movs	r2, #12
 801a7d8:	2300      	movs	r3, #0
 801a7da:	2100      	movs	r1, #0
 801a7dc:	0038      	movs	r0, r7
 801a7de:	f7e6 ff59 	bl	8001694 <_Unwind_VRS_Set>
 801a7e2:	4643      	mov	r3, r8
 801a7e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801a7e6:	9303      	str	r3, [sp, #12]
 801a7e8:	2b00      	cmp	r3, #0
 801a7ea:	d0de      	beq.n	801a7aa <__gxx_personality_v0+0x17a>
 801a7ec:	4643      	mov	r3, r8
 801a7ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a7f0:	469a      	mov	sl, r3
 801a7f2:	4643      	mov	r3, r8
 801a7f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a7f6:	9305      	str	r3, [sp, #20]
 801a7f8:	ab0d      	add	r3, sp, #52	; 0x34
 801a7fa:	9302      	str	r3, [sp, #8]
 801a7fc:	ab0e      	add	r3, sp, #56	; 0x38
 801a7fe:	4699      	mov	r9, r3
 801a800:	4653      	mov	r3, sl
 801a802:	4655      	mov	r5, sl
 801a804:	2403      	movs	r4, #3
 801a806:	2b00      	cmp	r3, #0
 801a808:	da00      	bge.n	801a80c <__gxx_personality_v0+0x1dc>
 801a80a:	e0fa      	b.n	801aa02 <__gxx_personality_v0+0x3d2>
 801a80c:	4643      	mov	r3, r8
 801a80e:	930c      	str	r3, [sp, #48]	; 0x30
 801a810:	ab0c      	add	r3, sp, #48	; 0x30
 801a812:	9300      	str	r3, [sp, #0]
 801a814:	2200      	movs	r2, #0
 801a816:	2300      	movs	r3, #0
 801a818:	2100      	movs	r1, #0
 801a81a:	0038      	movs	r0, r7
 801a81c:	f7e6 ff3a 	bl	8001694 <_Unwind_VRS_Set>
 801a820:	9b02      	ldr	r3, [sp, #8]
 801a822:	2201      	movs	r2, #1
 801a824:	9300      	str	r3, [sp, #0]
 801a826:	2100      	movs	r1, #0
 801a828:	2300      	movs	r3, #0
 801a82a:	0038      	movs	r0, r7
 801a82c:	950d      	str	r5, [sp, #52]	; 0x34
 801a82e:	f7e6 ff31 	bl	8001694 <_Unwind_VRS_Set>
 801a832:	464b      	mov	r3, r9
 801a834:	220f      	movs	r2, #15
 801a836:	9300      	str	r3, [sp, #0]
 801a838:	2100      	movs	r1, #0
 801a83a:	2300      	movs	r3, #0
 801a83c:	0038      	movs	r0, r7
 801a83e:	f7e6 ff07 	bl	8001650 <_Unwind_VRS_Get>
 801a842:	2301      	movs	r3, #1
 801a844:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801a846:	4013      	ands	r3, r2
 801a848:	9a03      	ldr	r2, [sp, #12]
 801a84a:	4313      	orrs	r3, r2
 801a84c:	930e      	str	r3, [sp, #56]	; 0x38
 801a84e:	464b      	mov	r3, r9
 801a850:	220f      	movs	r2, #15
 801a852:	9300      	str	r3, [sp, #0]
 801a854:	2100      	movs	r1, #0
 801a856:	2300      	movs	r3, #0
 801a858:	0038      	movs	r0, r7
 801a85a:	f7e6 ff1b 	bl	8001694 <_Unwind_VRS_Set>
 801a85e:	2507      	movs	r5, #7
 801a860:	2c02      	cmp	r4, #2
 801a862:	d000      	beq.n	801a866 <__gxx_personality_v0+0x236>
 801a864:	e701      	b.n	801a66a <__gxx_personality_v0+0x3a>
 801a866:	4640      	mov	r0, r8
 801a868:	f000 f9de 	bl	801ac28 <__cxa_begin_cleanup>
 801a86c:	e6fd      	b.n	801a66a <__gxx_personality_v0+0x3a>
 801a86e:	9b04      	ldr	r3, [sp, #16]
 801a870:	421a      	tst	r2, r3
 801a872:	d088      	beq.n	801a786 <__gxx_personality_v0+0x156>
 801a874:	ab0e      	add	r3, sp, #56	; 0x38
 801a876:	4699      	mov	r9, r3
 801a878:	2300      	movs	r3, #0
 801a87a:	2500      	movs	r5, #0
 801a87c:	9303      	str	r3, [sp, #12]
 801a87e:	464b      	mov	r3, r9
 801a880:	220d      	movs	r2, #13
 801a882:	9300      	str	r3, [sp, #0]
 801a884:	2100      	movs	r1, #0
 801a886:	2300      	movs	r3, #0
 801a888:	0038      	movs	r0, r7
 801a88a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801a88c:	f7e6 fee0 	bl	8001650 <_Unwind_VRS_Get>
 801a890:	4643      	mov	r3, r8
 801a892:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801a894:	621a      	str	r2, [r3, #32]
 801a896:	9a05      	ldr	r2, [sp, #20]
 801a898:	62da      	str	r2, [r3, #44]	; 0x2c
 801a89a:	9a03      	ldr	r2, [sp, #12]
 801a89c:	629d      	str	r5, [r3, #40]	; 0x28
 801a89e:	625c      	str	r4, [r3, #36]	; 0x24
 801a8a0:	631a      	str	r2, [r3, #48]	; 0x30
 801a8a2:	2506      	movs	r5, #6
 801a8a4:	e6e1      	b.n	801a66a <__gxx_personality_v0+0x3a>
 801a8a6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a8a8:	4657      	mov	r7, sl
 801a8aa:	2b00      	cmp	r3, #0
 801a8ac:	d100      	bne.n	801a8b0 <__gxx_personality_v0+0x280>
 801a8ae:	e6d4      	b.n	801a65a <__gxx_personality_v0+0x2a>
 801a8b0:	6872      	ldr	r2, [r6, #4]
 801a8b2:	4694      	mov	ip, r2
 801a8b4:	4463      	add	r3, ip
 801a8b6:	9303      	str	r3, [sp, #12]
 801a8b8:	2800      	cmp	r0, #0
 801a8ba:	d100      	bne.n	801a8be <__gxx_personality_v0+0x28e>
 801a8bc:	e0ca      	b.n	801aa54 <__gxx_personality_v0+0x424>
 801a8be:	6932      	ldr	r2, [r6, #16]
 801a8c0:	3801      	subs	r0, #1
 801a8c2:	1814      	adds	r4, r2, r0
 801a8c4:	2b00      	cmp	r3, #0
 801a8c6:	d100      	bne.n	801a8ca <__gxx_personality_v0+0x29a>
 801a8c8:	e6c7      	b.n	801a65a <__gxx_personality_v0+0x2a>
 801a8ca:	2c00      	cmp	r4, #0
 801a8cc:	d100      	bne.n	801a8d0 <__gxx_personality_v0+0x2a0>
 801a8ce:	e0c5      	b.n	801aa5c <__gxx_personality_v0+0x42c>
 801a8d0:	2308      	movs	r3, #8
 801a8d2:	9a04      	ldr	r2, [sp, #16]
 801a8d4:	401a      	ands	r2, r3
 801a8d6:	9209      	str	r2, [sp, #36]	; 0x24
 801a8d8:	d100      	bne.n	801a8dc <__gxx_personality_v0+0x2ac>
 801a8da:	e0e9      	b.n	801aab0 <__gxx_personality_v0+0x480>
 801a8dc:	4642      	mov	r2, r8
 801a8de:	333f      	adds	r3, #63	; 0x3f
 801a8e0:	7013      	strb	r3, [r2, #0]
 801a8e2:	3307      	adds	r3, #7
 801a8e4:	7053      	strb	r3, [r2, #1]
 801a8e6:	3307      	adds	r3, #7
 801a8e8:	7093      	strb	r3, [r2, #2]
 801a8ea:	3b12      	subs	r3, #18
 801a8ec:	70d3      	strb	r3, [r2, #3]
 801a8ee:	3303      	adds	r3, #3
 801a8f0:	7113      	strb	r3, [r2, #4]
 801a8f2:	3309      	adds	r3, #9
 801a8f4:	7153      	strb	r3, [r2, #5]
 801a8f6:	3303      	adds	r3, #3
 801a8f8:	7193      	strb	r3, [r2, #6]
 801a8fa:	2300      	movs	r3, #0
 801a8fc:	71d3      	strb	r3, [r2, #7]
 801a8fe:	2300      	movs	r3, #0
 801a900:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a902:	9306      	str	r3, [sp, #24]
 801a904:	4253      	negs	r3, r2
 801a906:	415a      	adcs	r2, r3
 801a908:	46b3      	mov	fp, r6
 801a90a:	9207      	str	r2, [sp, #28]
 801a90c:	9708      	str	r7, [sp, #32]
 801a90e:	2500      	movs	r5, #0
 801a910:	2200      	movs	r2, #0
 801a912:	207f      	movs	r0, #127	; 0x7f
 801a914:	0003      	movs	r3, r0
 801a916:	7821      	ldrb	r1, [r4, #0]
 801a918:	400b      	ands	r3, r1
 801a91a:	4093      	lsls	r3, r2
 801a91c:	1c67      	adds	r7, r4, #1
 801a91e:	431d      	orrs	r5, r3
 801a920:	3207      	adds	r2, #7
 801a922:	003c      	movs	r4, r7
 801a924:	060b      	lsls	r3, r1, #24
 801a926:	d4f5      	bmi.n	801a914 <__gxx_personality_v0+0x2e4>
 801a928:	2a1f      	cmp	r2, #31
 801a92a:	d805      	bhi.n	801a938 <__gxx_personality_v0+0x308>
 801a92c:	064b      	lsls	r3, r1, #25
 801a92e:	d503      	bpl.n	801a938 <__gxx_personality_v0+0x308>
 801a930:	2301      	movs	r3, #1
 801a932:	4093      	lsls	r3, r2
 801a934:	425b      	negs	r3, r3
 801a936:	431d      	orrs	r5, r3
 801a938:	46aa      	mov	sl, r5
 801a93a:	0039      	movs	r1, r7
 801a93c:	2400      	movs	r4, #0
 801a93e:	2200      	movs	r2, #0
 801a940:	267f      	movs	r6, #127	; 0x7f
 801a942:	0033      	movs	r3, r6
 801a944:	7808      	ldrb	r0, [r1, #0]
 801a946:	4003      	ands	r3, r0
 801a948:	4093      	lsls	r3, r2
 801a94a:	3101      	adds	r1, #1
 801a94c:	431c      	orrs	r4, r3
 801a94e:	3207      	adds	r2, #7
 801a950:	0603      	lsls	r3, r0, #24
 801a952:	d4f6      	bmi.n	801a942 <__gxx_personality_v0+0x312>
 801a954:	2a1f      	cmp	r2, #31
 801a956:	d805      	bhi.n	801a964 <__gxx_personality_v0+0x334>
 801a958:	0643      	lsls	r3, r0, #25
 801a95a:	d503      	bpl.n	801a964 <__gxx_personality_v0+0x334>
 801a95c:	2301      	movs	r3, #1
 801a95e:	4093      	lsls	r3, r2
 801a960:	425b      	negs	r3, r3
 801a962:	431c      	orrs	r4, r3
 801a964:	2d00      	cmp	r5, #0
 801a966:	d012      	beq.n	801a98e <__gxx_personality_v0+0x35e>
 801a968:	dc14      	bgt.n	801a994 <__gxx_personality_v0+0x364>
 801a96a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801a96c:	1c6e      	adds	r6, r5, #1
 801a96e:	00b6      	lsls	r6, r6, #2
 801a970:	1b9e      	subs	r6, r3, r6
 801a972:	9b07      	ldr	r3, [sp, #28]
 801a974:	6831      	ldr	r1, [r6, #0]
 801a976:	2b00      	cmp	r3, #0
 801a978:	d002      	beq.n	801a980 <__gxx_personality_v0+0x350>
 801a97a:	4643      	mov	r3, r8
 801a97c:	2b00      	cmp	r3, #0
 801a97e:	d174      	bne.n	801aa6a <__gxx_personality_v0+0x43a>
 801a980:	2900      	cmp	r1, #0
 801a982:	d02e      	beq.n	801a9e2 <__gxx_personality_v0+0x3b2>
 801a984:	2c00      	cmp	r4, #0
 801a986:	d100      	bne.n	801a98a <__gxx_personality_v0+0x35a>
 801a988:	e08d      	b.n	801aaa6 <__gxx_personality_v0+0x476>
 801a98a:	193c      	adds	r4, r7, r4
 801a98c:	e7bf      	b.n	801a90e <__gxx_personality_v0+0x2de>
 801a98e:	2301      	movs	r3, #1
 801a990:	9306      	str	r3, [sp, #24]
 801a992:	e7f7      	b.n	801a984 <__gxx_personality_v0+0x354>
 801a994:	465b      	mov	r3, fp
 801a996:	7d18      	ldrb	r0, [r3, #20]
 801a998:	28ff      	cmp	r0, #255	; 0xff
 801a99a:	d059      	beq.n	801aa50 <__gxx_personality_v0+0x420>
 801a99c:	2307      	movs	r3, #7
 801a99e:	4003      	ands	r3, r0
 801a9a0:	2b02      	cmp	r3, #2
 801a9a2:	d07d      	beq.n	801aaa0 <__gxx_personality_v0+0x470>
 801a9a4:	d800      	bhi.n	801a9a8 <__gxx_personality_v0+0x378>
 801a9a6:	e092      	b.n	801aace <__gxx_personality_v0+0x49e>
 801a9a8:	2b03      	cmp	r3, #3
 801a9aa:	d076      	beq.n	801aa9a <__gxx_personality_v0+0x46a>
 801a9ac:	2b04      	cmp	r3, #4
 801a9ae:	d000      	beq.n	801a9b2 <__gxx_personality_v0+0x382>
 801a9b0:	e08f      	b.n	801aad2 <__gxx_personality_v0+0x4a2>
 801a9b2:	00ea      	lsls	r2, r5, #3
 801a9b4:	4252      	negs	r2, r2
 801a9b6:	465b      	mov	r3, fp
 801a9b8:	68db      	ldr	r3, [r3, #12]
 801a9ba:	4659      	mov	r1, fp
 801a9bc:	469c      	mov	ip, r3
 801a9be:	6889      	ldr	r1, [r1, #8]
 801a9c0:	4462      	add	r2, ip
 801a9c2:	464b      	mov	r3, r9
 801a9c4:	f7ff fd3e 	bl	801a444 <_ZL28read_encoded_value_with_basehjPKhPj>
 801a9c8:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a9ca:	2900      	cmp	r1, #0
 801a9cc:	d009      	beq.n	801a9e2 <__gxx_personality_v0+0x3b2>
 801a9ce:	4643      	mov	r3, r8
 801a9d0:	2b00      	cmp	r3, #0
 801a9d2:	d0d7      	beq.n	801a984 <__gxx_personality_v0+0x354>
 801a9d4:	ab0a      	add	r3, sp, #40	; 0x28
 801a9d6:	2200      	movs	r2, #0
 801a9d8:	4640      	mov	r0, r8
 801a9da:	f000 f8bf 	bl	801ab5c <__cxa_type_match>
 801a9de:	2800      	cmp	r0, #0
 801a9e0:	d0d0      	beq.n	801a984 <__gxx_personality_v0+0x354>
 801a9e2:	465e      	mov	r6, fp
 801a9e4:	9f08      	ldr	r7, [sp, #32]
 801a9e6:	9b04      	ldr	r3, [sp, #16]
 801a9e8:	07db      	lsls	r3, r3, #31
 801a9ea:	d500      	bpl.n	801a9ee <__gxx_personality_v0+0x3be>
 801a9ec:	e747      	b.n	801a87e <__gxx_personality_v0+0x24e>
 801a9ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a9f0:	2b00      	cmp	r3, #0
 801a9f2:	d100      	bne.n	801a9f6 <__gxx_personality_v0+0x3c6>
 801a9f4:	e704      	b.n	801a800 <__gxx_personality_v0+0x1d0>
 801a9f6:	2403      	movs	r4, #3
 801a9f8:	2d00      	cmp	r5, #0
 801a9fa:	db00      	blt.n	801a9fe <__gxx_personality_v0+0x3ce>
 801a9fc:	e706      	b.n	801a80c <__gxx_personality_v0+0x1dc>
 801a9fe:	f000 f893 	bl	801ab28 <_ZSt10unexpectedv>
 801aa02:	0032      	movs	r2, r6
 801aa04:	9905      	ldr	r1, [sp, #20]
 801aa06:	0038      	movs	r0, r7
 801aa08:	f7ff fdc2 	bl	801a590 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 801aa0c:	7d33      	ldrb	r3, [r6, #20]
 801aa0e:	2000      	movs	r0, #0
 801aa10:	2bff      	cmp	r3, #255	; 0xff
 801aa12:	d003      	beq.n	801aa1c <__gxx_personality_v0+0x3ec>
 801aa14:	0039      	movs	r1, r7
 801aa16:	0018      	movs	r0, r3
 801aa18:	f7ff fd98 	bl	801a54c <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3>
 801aa1c:	4653      	mov	r3, sl
 801aa1e:	68f4      	ldr	r4, [r6, #12]
 801aa20:	3301      	adds	r3, #1
 801aa22:	009b      	lsls	r3, r3, #2
 801aa24:	60b0      	str	r0, [r6, #8]
 801aa26:	1ae4      	subs	r4, r4, r3
 801aa28:	6823      	ldr	r3, [r4, #0]
 801aa2a:	2b00      	cmp	r3, #0
 801aa2c:	d053      	beq.n	801aad6 <__gxx_personality_v0+0x4a6>
 801aa2e:	2200      	movs	r2, #0
 801aa30:	1d23      	adds	r3, r4, #4
 801aa32:	3304      	adds	r3, #4
 801aa34:	1f19      	subs	r1, r3, #4
 801aa36:	6809      	ldr	r1, [r1, #0]
 801aa38:	3201      	adds	r2, #1
 801aa3a:	2900      	cmp	r1, #0
 801aa3c:	d1f9      	bne.n	801aa32 <__gxx_personality_v0+0x402>
 801aa3e:	4643      	mov	r3, r8
 801aa40:	629a      	str	r2, [r3, #40]	; 0x28
 801aa42:	62d8      	str	r0, [r3, #44]	; 0x2c
 801aa44:	4642      	mov	r2, r8
 801aa46:	2304      	movs	r3, #4
 801aa48:	6354      	str	r4, [r2, #52]	; 0x34
 801aa4a:	6313      	str	r3, [r2, #48]	; 0x30
 801aa4c:	2403      	movs	r4, #3
 801aa4e:	e6dd      	b.n	801a80c <__gxx_personality_v0+0x1dc>
 801aa50:	2200      	movs	r2, #0
 801aa52:	e7b0      	b.n	801a9b6 <__gxx_personality_v0+0x386>
 801aa54:	9b03      	ldr	r3, [sp, #12]
 801aa56:	2b00      	cmp	r3, #0
 801aa58:	d100      	bne.n	801aa5c <__gxx_personality_v0+0x42c>
 801aa5a:	e5fe      	b.n	801a65a <__gxx_personality_v0+0x2a>
 801aa5c:	9b04      	ldr	r3, [sp, #16]
 801aa5e:	07db      	lsls	r3, r3, #31
 801aa60:	d500      	bpl.n	801aa64 <__gxx_personality_v0+0x434>
 801aa62:	e5fa      	b.n	801a65a <__gxx_personality_v0+0x2a>
 801aa64:	2500      	movs	r5, #0
 801aa66:	2402      	movs	r4, #2
 801aa68:	e6d0      	b.n	801a80c <__gxx_personality_v0+0x1dc>
 801aa6a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801aa6c:	930f      	str	r3, [sp, #60]	; 0x3c
 801aa6e:	2900      	cmp	r1, #0
 801aa70:	d0b7      	beq.n	801a9e2 <__gxx_personality_v0+0x3b2>
 801aa72:	4643      	mov	r3, r8
 801aa74:	46a0      	mov	r8, r4
 801aa76:	001c      	movs	r4, r3
 801aa78:	e003      	b.n	801aa82 <__gxx_personality_v0+0x452>
 801aa7a:	3604      	adds	r6, #4
 801aa7c:	6831      	ldr	r1, [r6, #0]
 801aa7e:	2900      	cmp	r1, #0
 801aa80:	d021      	beq.n	801aac6 <__gxx_personality_v0+0x496>
 801aa82:	1871      	adds	r1, r6, r1
 801aa84:	ab0f      	add	r3, sp, #60	; 0x3c
 801aa86:	2200      	movs	r2, #0
 801aa88:	0020      	movs	r0, r4
 801aa8a:	f000 f867 	bl	801ab5c <__cxa_type_match>
 801aa8e:	2800      	cmp	r0, #0
 801aa90:	d0f3      	beq.n	801aa7a <__gxx_personality_v0+0x44a>
 801aa92:	0023      	movs	r3, r4
 801aa94:	4644      	mov	r4, r8
 801aa96:	4698      	mov	r8, r3
 801aa98:	e774      	b.n	801a984 <__gxx_personality_v0+0x354>
 801aa9a:	00aa      	lsls	r2, r5, #2
 801aa9c:	4252      	negs	r2, r2
 801aa9e:	e78a      	b.n	801a9b6 <__gxx_personality_v0+0x386>
 801aaa0:	006a      	lsls	r2, r5, #1
 801aaa2:	4252      	negs	r2, r2
 801aaa4:	e787      	b.n	801a9b6 <__gxx_personality_v0+0x386>
 801aaa6:	9b06      	ldr	r3, [sp, #24]
 801aaa8:	9f08      	ldr	r7, [sp, #32]
 801aaaa:	2b00      	cmp	r3, #0
 801aaac:	d1d6      	bne.n	801aa5c <__gxx_personality_v0+0x42c>
 801aaae:	e5d4      	b.n	801a65a <__gxx_personality_v0+0x2a>
 801aab0:	4643      	mov	r3, r8
 801aab2:	79da      	ldrb	r2, [r3, #7]
 801aab4:	3358      	adds	r3, #88	; 0x58
 801aab6:	2a01      	cmp	r2, #1
 801aab8:	d001      	beq.n	801aabe <__gxx_personality_v0+0x48e>
 801aaba:	930a      	str	r3, [sp, #40]	; 0x28
 801aabc:	e71f      	b.n	801a8fe <__gxx_personality_v0+0x2ce>
 801aabe:	3b78      	subs	r3, #120	; 0x78
 801aac0:	681b      	ldr	r3, [r3, #0]
 801aac2:	930a      	str	r3, [sp, #40]	; 0x28
 801aac4:	e71b      	b.n	801a8fe <__gxx_personality_v0+0x2ce>
 801aac6:	46a0      	mov	r8, r4
 801aac8:	9f08      	ldr	r7, [sp, #32]
 801aaca:	465e      	mov	r6, fp
 801aacc:	e78b      	b.n	801a9e6 <__gxx_personality_v0+0x3b6>
 801aace:	2b00      	cmp	r3, #0
 801aad0:	d0e3      	beq.n	801aa9a <__gxx_personality_v0+0x46a>
 801aad2:	f000 fd09 	bl	801b4e8 <abort>
 801aad6:	2200      	movs	r2, #0
 801aad8:	e7b1      	b.n	801aa3e <__gxx_personality_v0+0x40e>
 801aada:	f7ff fc25 	bl	801a328 <__cxa_begin_catch>
 801aade:	e656      	b.n	801a78e <__gxx_personality_v0+0x15e>

0801aae0 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801aae0:	b570      	push	{r4, r5, r6, lr}
 801aae2:	f000 f811 	bl	801ab08 <_ZN10__cxxabiv111__terminateEPFvvE+0x28>
 801aae6:	f000 fcff 	bl	801b4e8 <abort>
 801aaea:	f7ff fc1d 	bl	801a328 <__cxa_begin_catch>
 801aaee:	f000 fcfb 	bl	801b4e8 <abort>
 801aaf2:	000d      	movs	r5, r1
 801aaf4:	0004      	movs	r4, r0
 801aaf6:	f7ff fc55 	bl	801a3a4 <__cxa_end_catch>
 801aafa:	1c6b      	adds	r3, r5, #1
 801aafc:	d001      	beq.n	801ab02 <_ZN10__cxxabiv111__terminateEPFvvE+0x22>
 801aafe:	f000 f827 	bl	801ab50 <__cxa_end_cleanup>
 801ab02:	0020      	movs	r0, r4
 801ab04:	f000 f92a 	bl	801ad5c <__cxa_call_unexpected>
 801ab08:	4700      	bx	r0
 801ab0a:	46c0      	nop			; (mov r8, r8)

0801ab0c <_ZSt9terminatev>:
 801ab0c:	4b02      	ldr	r3, [pc, #8]	; (801ab18 <_ZSt9terminatev+0xc>)
 801ab0e:	b510      	push	{r4, lr}
 801ab10:	6818      	ldr	r0, [r3, #0]
 801ab12:	f7ff ffe5 	bl	801aae0 <_ZN10__cxxabiv111__terminateEPFvvE>
 801ab16:	46c0      	nop			; (mov r8, r8)
 801ab18:	200033b0 	.word	0x200033b0

0801ab1c <_ZN10__cxxabiv112__unexpectedEPFvvE>:
 801ab1c:	b510      	push	{r4, lr}
 801ab1e:	f000 f802 	bl	801ab26 <_ZN10__cxxabiv112__unexpectedEPFvvE+0xa>
 801ab22:	f7ff fff3 	bl	801ab0c <_ZSt9terminatev>
 801ab26:	4700      	bx	r0

0801ab28 <_ZSt10unexpectedv>:
 801ab28:	4b02      	ldr	r3, [pc, #8]	; (801ab34 <_ZSt10unexpectedv+0xc>)
 801ab2a:	b510      	push	{r4, lr}
 801ab2c:	6818      	ldr	r0, [r3, #0]
 801ab2e:	f7ff fff5 	bl	801ab1c <_ZN10__cxxabiv112__unexpectedEPFvvE>
 801ab32:	46c0      	nop			; (mov r8, r8)
 801ab34:	200033ac 	.word	0x200033ac

0801ab38 <_ZSt13get_terminatev>:
 801ab38:	4b01      	ldr	r3, [pc, #4]	; (801ab40 <_ZSt13get_terminatev+0x8>)
 801ab3a:	6818      	ldr	r0, [r3, #0]
 801ab3c:	4770      	bx	lr
 801ab3e:	46c0      	nop			; (mov r8, r8)
 801ab40:	200033b0 	.word	0x200033b0

0801ab44 <_ZSt14get_unexpectedv>:
 801ab44:	4b01      	ldr	r3, [pc, #4]	; (801ab4c <_ZSt14get_unexpectedv+0x8>)
 801ab46:	6818      	ldr	r0, [r3, #0]
 801ab48:	4770      	bx	lr
 801ab4a:	46c0      	nop			; (mov r8, r8)
 801ab4c:	200033ac 	.word	0x200033ac

0801ab50 <__cxa_end_cleanup>:
 801ab50:	b41e      	push	{r1, r2, r3, r4}
 801ab52:	f000 f89b 	bl	801ac8c <__gnu_end_cleanup>
 801ab56:	bc1e      	pop	{r1, r2, r3, r4}
 801ab58:	f7e6 fb48 	bl	80011ec <_Unwind_Resume>

0801ab5c <__cxa_type_match>:
 801ab5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801ab5e:	46c6      	mov	lr, r8
 801ab60:	b500      	push	{lr}
 801ab62:	4698      	mov	r8, r3
 801ab64:	7803      	ldrb	r3, [r0, #0]
 801ab66:	b082      	sub	sp, #8
 801ab68:	000d      	movs	r5, r1
 801ab6a:	2b47      	cmp	r3, #71	; 0x47
 801ab6c:	d024      	beq.n	801abb8 <__cxa_type_match+0x5c>
 801ab6e:	2300      	movs	r3, #0
 801ab70:	4c2a      	ldr	r4, [pc, #168]	; (801ac1c <__cxa_type_match+0xc0>)
 801ab72:	9301      	str	r3, [sp, #4]
 801ab74:	6823      	ldr	r3, [r4, #0]
 801ab76:	0020      	movs	r0, r4
 801ab78:	689b      	ldr	r3, [r3, #8]
 801ab7a:	f000 f853 	bl	801ac24 <__cxa_type_match+0xc8>
 801ab7e:	2601      	movs	r6, #1
 801ab80:	2800      	cmp	r0, #0
 801ab82:	d003      	beq.n	801ab8c <__cxa_type_match+0x30>
 801ab84:	9b01      	ldr	r3, [sp, #4]
 801ab86:	681b      	ldr	r3, [r3, #0]
 801ab88:	9301      	str	r3, [sp, #4]
 801ab8a:	3601      	adds	r6, #1
 801ab8c:	682b      	ldr	r3, [r5, #0]
 801ab8e:	aa01      	add	r2, sp, #4
 801ab90:	691f      	ldr	r7, [r3, #16]
 801ab92:	0021      	movs	r1, r4
 801ab94:	2301      	movs	r3, #1
 801ab96:	0028      	movs	r0, r5
 801ab98:	f000 f845 	bl	801ac26 <__cxa_type_match+0xca>
 801ab9c:	2800      	cmp	r0, #0
 801ab9e:	d009      	beq.n	801abb4 <__cxa_type_match+0x58>
 801aba0:	4643      	mov	r3, r8
 801aba2:	9a01      	ldr	r2, [sp, #4]
 801aba4:	601a      	str	r2, [r3, #0]
 801aba6:	0030      	movs	r0, r6
 801aba8:	b002      	add	sp, #8
 801abaa:	bc04      	pop	{r2}
 801abac:	4690      	mov	r8, r2
 801abae:	bcf0      	pop	{r4, r5, r6, r7}
 801abb0:	bc02      	pop	{r1}
 801abb2:	4708      	bx	r1
 801abb4:	2600      	movs	r6, #0
 801abb6:	e7f6      	b.n	801aba6 <__cxa_type_match+0x4a>
 801abb8:	7843      	ldrb	r3, [r0, #1]
 801abba:	2b4e      	cmp	r3, #78	; 0x4e
 801abbc:	d1d7      	bne.n	801ab6e <__cxa_type_match+0x12>
 801abbe:	7883      	ldrb	r3, [r0, #2]
 801abc0:	2b55      	cmp	r3, #85	; 0x55
 801abc2:	d1d4      	bne.n	801ab6e <__cxa_type_match+0x12>
 801abc4:	78c3      	ldrb	r3, [r0, #3]
 801abc6:	2b43      	cmp	r3, #67	; 0x43
 801abc8:	d1d1      	bne.n	801ab6e <__cxa_type_match+0x12>
 801abca:	7903      	ldrb	r3, [r0, #4]
 801abcc:	2b46      	cmp	r3, #70	; 0x46
 801abce:	d019      	beq.n	801ac04 <__cxa_type_match+0xa8>
 801abd0:	7903      	ldrb	r3, [r0, #4]
 801abd2:	2b43      	cmp	r3, #67	; 0x43
 801abd4:	d1cb      	bne.n	801ab6e <__cxa_type_match+0x12>
 801abd6:	7943      	ldrb	r3, [r0, #5]
 801abd8:	2b2b      	cmp	r3, #43	; 0x2b
 801abda:	d1c8      	bne.n	801ab6e <__cxa_type_match+0x12>
 801abdc:	7983      	ldrb	r3, [r0, #6]
 801abde:	2b2b      	cmp	r3, #43	; 0x2b
 801abe0:	d1c5      	bne.n	801ab6e <__cxa_type_match+0x12>
 801abe2:	79c2      	ldrb	r2, [r0, #7]
 801abe4:	2a01      	cmp	r2, #1
 801abe6:	d8c2      	bhi.n	801ab6e <__cxa_type_match+0x12>
 801abe8:	0003      	movs	r3, r0
 801abea:	3b20      	subs	r3, #32
 801abec:	681c      	ldr	r4, [r3, #0]
 801abee:	3058      	adds	r0, #88	; 0x58
 801abf0:	2a01      	cmp	r2, #1
 801abf2:	d001      	beq.n	801abf8 <__cxa_type_match+0x9c>
 801abf4:	9001      	str	r0, [sp, #4]
 801abf6:	e7bd      	b.n	801ab74 <__cxa_type_match+0x18>
 801abf8:	0023      	movs	r3, r4
 801abfa:	0020      	movs	r0, r4
 801abfc:	3b78      	subs	r3, #120	; 0x78
 801abfe:	681c      	ldr	r4, [r3, #0]
 801ac00:	9001      	str	r0, [sp, #4]
 801ac02:	e7b7      	b.n	801ab74 <__cxa_type_match+0x18>
 801ac04:	7943      	ldrb	r3, [r0, #5]
 801ac06:	2b4f      	cmp	r3, #79	; 0x4f
 801ac08:	d1e2      	bne.n	801abd0 <__cxa_type_match+0x74>
 801ac0a:	7983      	ldrb	r3, [r0, #6]
 801ac0c:	2b52      	cmp	r3, #82	; 0x52
 801ac0e:	d1df      	bne.n	801abd0 <__cxa_type_match+0x74>
 801ac10:	79c3      	ldrb	r3, [r0, #7]
 801ac12:	2b00      	cmp	r3, #0
 801ac14:	d1dc      	bne.n	801abd0 <__cxa_type_match+0x74>
 801ac16:	9301      	str	r3, [sp, #4]
 801ac18:	4c01      	ldr	r4, [pc, #4]	; (801ac20 <__cxa_type_match+0xc4>)
 801ac1a:	e7ab      	b.n	801ab74 <__cxa_type_match+0x18>
 801ac1c:	08026bcc 	.word	0x08026bcc
 801ac20:	08026bc4 	.word	0x08026bc4
 801ac24:	4718      	bx	r3
 801ac26:	4738      	bx	r7

0801ac28 <__cxa_begin_cleanup>:
 801ac28:	b510      	push	{r4, lr}
 801ac2a:	0004      	movs	r4, r0
 801ac2c:	f7ff fc06 	bl	801a43c <__cxa_get_globals>
 801ac30:	0023      	movs	r3, r4
 801ac32:	7822      	ldrb	r2, [r4, #0]
 801ac34:	3b20      	subs	r3, #32
 801ac36:	2a47      	cmp	r2, #71	; 0x47
 801ac38:	d007      	beq.n	801ac4a <__cxa_begin_cleanup+0x22>
 801ac3a:	6882      	ldr	r2, [r0, #8]
 801ac3c:	2a00      	cmp	r2, #0
 801ac3e:	d122      	bne.n	801ac86 <__cxa_begin_cleanup+0x5e>
 801ac40:	6083      	str	r3, [r0, #8]
 801ac42:	2001      	movs	r0, #1
 801ac44:	bc10      	pop	{r4}
 801ac46:	bc02      	pop	{r1}
 801ac48:	4708      	bx	r1
 801ac4a:	7862      	ldrb	r2, [r4, #1]
 801ac4c:	2a4e      	cmp	r2, #78	; 0x4e
 801ac4e:	d1f4      	bne.n	801ac3a <__cxa_begin_cleanup+0x12>
 801ac50:	78a2      	ldrb	r2, [r4, #2]
 801ac52:	2a55      	cmp	r2, #85	; 0x55
 801ac54:	d1f1      	bne.n	801ac3a <__cxa_begin_cleanup+0x12>
 801ac56:	78e2      	ldrb	r2, [r4, #3]
 801ac58:	2a43      	cmp	r2, #67	; 0x43
 801ac5a:	d1ee      	bne.n	801ac3a <__cxa_begin_cleanup+0x12>
 801ac5c:	7922      	ldrb	r2, [r4, #4]
 801ac5e:	2a43      	cmp	r2, #67	; 0x43
 801ac60:	d1eb      	bne.n	801ac3a <__cxa_begin_cleanup+0x12>
 801ac62:	7962      	ldrb	r2, [r4, #5]
 801ac64:	2a2b      	cmp	r2, #43	; 0x2b
 801ac66:	d1e8      	bne.n	801ac3a <__cxa_begin_cleanup+0x12>
 801ac68:	79a2      	ldrb	r2, [r4, #6]
 801ac6a:	2a2b      	cmp	r2, #43	; 0x2b
 801ac6c:	d1e5      	bne.n	801ac3a <__cxa_begin_cleanup+0x12>
 801ac6e:	79e2      	ldrb	r2, [r4, #7]
 801ac70:	2a01      	cmp	r2, #1
 801ac72:	d8e2      	bhi.n	801ac3a <__cxa_begin_cleanup+0x12>
 801ac74:	69da      	ldr	r2, [r3, #28]
 801ac76:	3201      	adds	r2, #1
 801ac78:	61da      	str	r2, [r3, #28]
 801ac7a:	2a01      	cmp	r2, #1
 801ac7c:	d1e1      	bne.n	801ac42 <__cxa_begin_cleanup+0x1a>
 801ac7e:	6882      	ldr	r2, [r0, #8]
 801ac80:	619a      	str	r2, [r3, #24]
 801ac82:	6083      	str	r3, [r0, #8]
 801ac84:	e7dd      	b.n	801ac42 <__cxa_begin_cleanup+0x1a>
 801ac86:	f7ff ff41 	bl	801ab0c <_ZSt9terminatev>
 801ac8a:	46c0      	nop			; (mov r8, r8)

0801ac8c <__gnu_end_cleanup>:
 801ac8c:	b510      	push	{r4, lr}
 801ac8e:	f7ff fbd5 	bl	801a43c <__cxa_get_globals>
 801ac92:	6883      	ldr	r3, [r0, #8]
 801ac94:	2b00      	cmp	r3, #0
 801ac96:	d030      	beq.n	801acfa <__gnu_end_cleanup+0x6e>
 801ac98:	2220      	movs	r2, #32
 801ac9a:	5c9a      	ldrb	r2, [r3, r2]
 801ac9c:	2a47      	cmp	r2, #71	; 0x47
 801ac9e:	d006      	beq.n	801acae <__gnu_end_cleanup+0x22>
 801aca0:	2200      	movs	r2, #0
 801aca2:	6082      	str	r2, [r0, #8]
 801aca4:	3320      	adds	r3, #32
 801aca6:	0018      	movs	r0, r3
 801aca8:	bc10      	pop	{r4}
 801acaa:	bc02      	pop	{r1}
 801acac:	4708      	bx	r1
 801acae:	3a26      	subs	r2, #38	; 0x26
 801acb0:	5c9a      	ldrb	r2, [r3, r2]
 801acb2:	2a4e      	cmp	r2, #78	; 0x4e
 801acb4:	d1f4      	bne.n	801aca0 <__gnu_end_cleanup+0x14>
 801acb6:	3a2c      	subs	r2, #44	; 0x2c
 801acb8:	5c9a      	ldrb	r2, [r3, r2]
 801acba:	2a55      	cmp	r2, #85	; 0x55
 801acbc:	d1f0      	bne.n	801aca0 <__gnu_end_cleanup+0x14>
 801acbe:	3a32      	subs	r2, #50	; 0x32
 801acc0:	5c9a      	ldrb	r2, [r3, r2]
 801acc2:	2a43      	cmp	r2, #67	; 0x43
 801acc4:	d1ec      	bne.n	801aca0 <__gnu_end_cleanup+0x14>
 801acc6:	3a1f      	subs	r2, #31
 801acc8:	5c9a      	ldrb	r2, [r3, r2]
 801acca:	2a43      	cmp	r2, #67	; 0x43
 801accc:	d1e8      	bne.n	801aca0 <__gnu_end_cleanup+0x14>
 801acce:	3a1e      	subs	r2, #30
 801acd0:	5c9a      	ldrb	r2, [r3, r2]
 801acd2:	2a2b      	cmp	r2, #43	; 0x2b
 801acd4:	d1e4      	bne.n	801aca0 <__gnu_end_cleanup+0x14>
 801acd6:	3a05      	subs	r2, #5
 801acd8:	5c9a      	ldrb	r2, [r3, r2]
 801acda:	2a2b      	cmp	r2, #43	; 0x2b
 801acdc:	d1e0      	bne.n	801aca0 <__gnu_end_cleanup+0x14>
 801acde:	3a04      	subs	r2, #4
 801ace0:	5c9a      	ldrb	r2, [r3, r2]
 801ace2:	2a01      	cmp	r2, #1
 801ace4:	d8dc      	bhi.n	801aca0 <__gnu_end_cleanup+0x14>
 801ace6:	69da      	ldr	r2, [r3, #28]
 801ace8:	3a01      	subs	r2, #1
 801acea:	61da      	str	r2, [r3, #28]
 801acec:	2a00      	cmp	r2, #0
 801acee:	d1d9      	bne.n	801aca4 <__gnu_end_cleanup+0x18>
 801acf0:	699a      	ldr	r2, [r3, #24]
 801acf2:	6082      	str	r2, [r0, #8]
 801acf4:	2200      	movs	r2, #0
 801acf6:	619a      	str	r2, [r3, #24]
 801acf8:	e7d4      	b.n	801aca4 <__gnu_end_cleanup+0x18>
 801acfa:	f7ff ff07 	bl	801ab0c <_ZSt9terminatev>
 801acfe:	46c0      	nop			; (mov r8, r8)

0801ad00 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>:
 801ad00:	7802      	ldrb	r2, [r0, #0]
 801ad02:	0003      	movs	r3, r0
 801ad04:	2000      	movs	r0, #0
 801ad06:	2a47      	cmp	r2, #71	; 0x47
 801ad08:	d000      	beq.n	801ad0c <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0xc>
 801ad0a:	4770      	bx	lr
 801ad0c:	785a      	ldrb	r2, [r3, #1]
 801ad0e:	2a4e      	cmp	r2, #78	; 0x4e
 801ad10:	d1fb      	bne.n	801ad0a <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0xa>
 801ad12:	789a      	ldrb	r2, [r3, #2]
 801ad14:	2a55      	cmp	r2, #85	; 0x55
 801ad16:	d1f8      	bne.n	801ad0a <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0xa>
 801ad18:	78da      	ldrb	r2, [r3, #3]
 801ad1a:	2a43      	cmp	r2, #67	; 0x43
 801ad1c:	d1f5      	bne.n	801ad0a <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0xa>
 801ad1e:	791a      	ldrb	r2, [r3, #4]
 801ad20:	2a43      	cmp	r2, #67	; 0x43
 801ad22:	d1f2      	bne.n	801ad0a <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0xa>
 801ad24:	795a      	ldrb	r2, [r3, #5]
 801ad26:	2a2b      	cmp	r2, #43	; 0x2b
 801ad28:	d1ef      	bne.n	801ad0a <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0xa>
 801ad2a:	799a      	ldrb	r2, [r3, #6]
 801ad2c:	2a2b      	cmp	r2, #43	; 0x2b
 801ad2e:	d1ec      	bne.n	801ad0a <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0xa>
 801ad30:	79db      	ldrb	r3, [r3, #7]
 801ad32:	3a2a      	subs	r2, #42	; 0x2a
 801ad34:	429a      	cmp	r2, r3
 801ad36:	4140      	adcs	r0, r0
 801ad38:	e7e7      	b.n	801ad0a <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0xa>
 801ad3a:	46c0      	nop			; (mov r8, r8)

0801ad3c <__cxa_call_terminate>:
 801ad3c:	b510      	push	{r4, lr}
 801ad3e:	1e04      	subs	r4, r0, #0
 801ad40:	d006      	beq.n	801ad50 <__cxa_call_terminate+0x14>
 801ad42:	f7ff faf1 	bl	801a328 <__cxa_begin_catch>
 801ad46:	0020      	movs	r0, r4
 801ad48:	f7ff ffda 	bl	801ad00 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>
 801ad4c:	2800      	cmp	r0, #0
 801ad4e:	d101      	bne.n	801ad54 <__cxa_call_terminate+0x18>
 801ad50:	f7ff fedc 	bl	801ab0c <_ZSt9terminatev>
 801ad54:	3c20      	subs	r4, #32
 801ad56:	68e0      	ldr	r0, [r4, #12]
 801ad58:	f7ff fec2 	bl	801aae0 <_ZN10__cxxabiv111__terminateEPFvvE>

0801ad5c <__cxa_call_unexpected>:
 801ad5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801ad5e:	4657      	mov	r7, sl
 801ad60:	46de      	mov	lr, fp
 801ad62:	464e      	mov	r6, r9
 801ad64:	4645      	mov	r5, r8
 801ad66:	b5e0      	push	{r5, r6, r7, lr}
 801ad68:	b085      	sub	sp, #20
 801ad6a:	0007      	movs	r7, r0
 801ad6c:	f7ff ffc8 	bl	801ad00 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>
 801ad70:	2800      	cmp	r0, #0
 801ad72:	d00e      	beq.n	801ad92 <__cxa_call_unexpected+0x36>
 801ad74:	003b      	movs	r3, r7
 801ad76:	3b20      	subs	r3, #32
 801ad78:	689a      	ldr	r2, [r3, #8]
 801ad7a:	4690      	mov	r8, r2
 801ad7c:	68dd      	ldr	r5, [r3, #12]
 801ad7e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801ad80:	0038      	movs	r0, r7
 801ad82:	6abe      	ldr	r6, [r7, #40]	; 0x28
 801ad84:	4699      	mov	r9, r3
 801ad86:	6b7c      	ldr	r4, [r7, #52]	; 0x34
 801ad88:	f7ff face 	bl	801a328 <__cxa_begin_catch>
 801ad8c:	4640      	mov	r0, r8
 801ad8e:	f7ff fec5 	bl	801ab1c <_ZN10__cxxabiv112__unexpectedEPFvvE>
 801ad92:	0038      	movs	r0, r7
 801ad94:	f7ff fac8 	bl	801a328 <__cxa_begin_catch>
 801ad98:	f7ff fec6 	bl	801ab28 <_ZSt10unexpectedv>
 801ad9c:	f7ff fac4 	bl	801a328 <__cxa_begin_catch>
 801ada0:	f7ff feb4 	bl	801ab0c <_ZSt9terminatev>
 801ada4:	f7ff fac0 	bl	801a328 <__cxa_begin_catch>
 801ada8:	f7ff fb44 	bl	801a434 <__cxa_get_globals_fast>
 801adac:	2327      	movs	r3, #39	; 0x27
 801adae:	6807      	ldr	r7, [r0, #0]
 801adb0:	5cfa      	ldrb	r2, [r7, r3]
 801adb2:	003b      	movs	r3, r7
 801adb4:	3378      	adds	r3, #120	; 0x78
 801adb6:	2a01      	cmp	r2, #1
 801adb8:	d100      	bne.n	801adbc <__cxa_call_unexpected+0x60>
 801adba:	683b      	ldr	r3, [r7, #0]
 801adbc:	9302      	str	r3, [sp, #8]
 801adbe:	464b      	mov	r3, r9
 801adc0:	089b      	lsrs	r3, r3, #2
 801adc2:	009b      	lsls	r3, r3, #2
 801adc4:	9301      	str	r3, [sp, #4]
 801adc6:	2300      	movs	r3, #0
 801adc8:	4699      	mov	r9, r3
 801adca:	469a      	mov	sl, r3
 801adcc:	3320      	adds	r3, #32
 801adce:	4698      	mov	r8, r3
 801add0:	44b8      	add	r8, r7
 801add2:	45b2      	cmp	sl, r6
 801add4:	da27      	bge.n	801ae26 <__cxa_call_unexpected+0xca>
 801add6:	6827      	ldr	r7, [r4, #0]
 801add8:	2f00      	cmp	r7, #0
 801adda:	d000      	beq.n	801adde <__cxa_call_unexpected+0x82>
 801addc:	193f      	adds	r7, r7, r4
 801adde:	ab02      	add	r3, sp, #8
 801ade0:	2200      	movs	r2, #0
 801ade2:	0039      	movs	r1, r7
 801ade4:	4640      	mov	r0, r8
 801ade6:	f7ff feb9 	bl	801ab5c <__cxa_type_match>
 801adea:	2800      	cmp	r0, #0
 801adec:	d113      	bne.n	801ae16 <__cxa_call_unexpected+0xba>
 801adee:	683b      	ldr	r3, [r7, #0]
 801adf0:	691b      	ldr	r3, [r3, #16]
 801adf2:	9003      	str	r0, [sp, #12]
 801adf4:	469b      	mov	fp, r3
 801adf6:	aa03      	add	r2, sp, #12
 801adf8:	2301      	movs	r3, #1
 801adfa:	4912      	ldr	r1, [pc, #72]	; (801ae44 <__cxa_call_unexpected+0xe8>)
 801adfc:	0038      	movs	r0, r7
 801adfe:	f000 f827 	bl	801ae50 <__cxa_call_unexpected+0xf4>
 801ae02:	2800      	cmp	r0, #0
 801ae04:	d000      	beq.n	801ae08 <__cxa_call_unexpected+0xac>
 801ae06:	4681      	mov	r9, r0
 801ae08:	2301      	movs	r3, #1
 801ae0a:	469c      	mov	ip, r3
 801ae0c:	9b01      	ldr	r3, [sp, #4]
 801ae0e:	44e2      	add	sl, ip
 801ae10:	469c      	mov	ip, r3
 801ae12:	4464      	add	r4, ip
 801ae14:	e7dd      	b.n	801add2 <__cxa_call_unexpected+0x76>
 801ae16:	f000 f88d 	bl	801af34 <__cxa_rethrow>
 801ae1a:	f7ff fac3 	bl	801a3a4 <__cxa_end_catch>
 801ae1e:	f7ff fac1 	bl	801a3a4 <__cxa_end_catch>
 801ae22:	f7ff fe95 	bl	801ab50 <__cxa_end_cleanup>
 801ae26:	464b      	mov	r3, r9
 801ae28:	2b00      	cmp	r3, #0
 801ae2a:	d008      	beq.n	801ae3e <__cxa_call_unexpected+0xe2>
 801ae2c:	2004      	movs	r0, #4
 801ae2e:	f000 fb17 	bl	801b460 <__cxa_allocate_exception>
 801ae32:	4b05      	ldr	r3, [pc, #20]	; (801ae48 <__cxa_call_unexpected+0xec>)
 801ae34:	4a05      	ldr	r2, [pc, #20]	; (801ae4c <__cxa_call_unexpected+0xf0>)
 801ae36:	6003      	str	r3, [r0, #0]
 801ae38:	4902      	ldr	r1, [pc, #8]	; (801ae44 <__cxa_call_unexpected+0xe8>)
 801ae3a:	f000 f861 	bl	801af00 <__cxa_throw>
 801ae3e:	0028      	movs	r0, r5
 801ae40:	f7ff fe4e 	bl	801aae0 <_ZN10__cxxabiv111__terminateEPFvvE>
 801ae44:	08026bd4 	.word	0x08026bd4
 801ae48:	08026c58 	.word	0x08026c58
 801ae4c:	0801ae55 	.word	0x0801ae55
 801ae50:	4758      	bx	fp
 801ae52:	46c0      	nop			; (mov r8, r8)

0801ae54 <_ZNSt13bad_exceptionD1Ev>:
 801ae54:	4770      	bx	lr
 801ae56:	46c0      	nop			; (mov r8, r8)

0801ae58 <_ZGTtNKSt13bad_exception4whatEv>:
 801ae58:	4800      	ldr	r0, [pc, #0]	; (801ae5c <_ZGTtNKSt13bad_exception4whatEv+0x4>)
 801ae5a:	4770      	bx	lr
 801ae5c:	08026bb0 	.word	0x08026bb0

0801ae60 <_ZNSt13bad_exceptionD0Ev>:
 801ae60:	b510      	push	{r4, lr}
 801ae62:	0004      	movs	r4, r0
 801ae64:	2104      	movs	r1, #4
 801ae66:	f000 fa7f 	bl	801b368 <_ZdlPvj>
 801ae6a:	0020      	movs	r0, r4
 801ae6c:	bc10      	pop	{r4}
 801ae6e:	bc02      	pop	{r1}
 801ae70:	4708      	bx	r1
 801ae72:	46c0      	nop			; (mov r8, r8)

0801ae74 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block>:
 801ae74:	b510      	push	{r4, lr}
 801ae76:	2801      	cmp	r0, #1
 801ae78:	d815      	bhi.n	801aea6 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x32>
 801ae7a:	000b      	movs	r3, r1
 801ae7c:	3b28      	subs	r3, #40	; 0x28
 801ae7e:	681a      	ldr	r2, [r3, #0]
 801ae80:	1e50      	subs	r0, r2, #1
 801ae82:	6018      	str	r0, [r3, #0]
 801ae84:	2a01      	cmp	r2, #1
 801ae86:	d002      	beq.n	801ae8e <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x1a>
 801ae88:	bc10      	pop	{r4}
 801ae8a:	bc01      	pop	{r0}
 801ae8c:	4700      	bx	r0
 801ae8e:	68db      	ldr	r3, [r3, #12]
 801ae90:	3158      	adds	r1, #88	; 0x58
 801ae92:	000c      	movs	r4, r1
 801ae94:	2b00      	cmp	r3, #0
 801ae96:	d002      	beq.n	801ae9e <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x2a>
 801ae98:	0008      	movs	r0, r1
 801ae9a:	f000 f808 	bl	801aeae <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x3a>
 801ae9e:	0020      	movs	r0, r4
 801aea0:	f000 faf6 	bl	801b490 <__cxa_free_exception>
 801aea4:	e7f0      	b.n	801ae88 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x14>
 801aea6:	3928      	subs	r1, #40	; 0x28
 801aea8:	6948      	ldr	r0, [r1, #20]
 801aeaa:	f7ff fe19 	bl	801aae0 <_ZN10__cxxabiv111__terminateEPFvvE>
 801aeae:	4718      	bx	r3

0801aeb0 <__cxa_init_primary_exception>:
 801aeb0:	b570      	push	{r4, r5, r6, lr}
 801aeb2:	0005      	movs	r5, r0
 801aeb4:	2600      	movs	r6, #0
 801aeb6:	3d80      	subs	r5, #128	; 0x80
 801aeb8:	60ea      	str	r2, [r5, #12]
 801aeba:	602e      	str	r6, [r5, #0]
 801aebc:	60a9      	str	r1, [r5, #8]
 801aebe:	0004      	movs	r4, r0
 801aec0:	f7ff fe40 	bl	801ab44 <_ZSt14get_unexpectedv>
 801aec4:	6128      	str	r0, [r5, #16]
 801aec6:	f7ff fe37 	bl	801ab38 <_ZSt13get_terminatev>
 801aeca:	0023      	movs	r3, r4
 801aecc:	2247      	movs	r2, #71	; 0x47
 801aece:	3b58      	subs	r3, #88	; 0x58
 801aed0:	6168      	str	r0, [r5, #20]
 801aed2:	701a      	strb	r2, [r3, #0]
 801aed4:	3207      	adds	r2, #7
 801aed6:	705a      	strb	r2, [r3, #1]
 801aed8:	3207      	adds	r2, #7
 801aeda:	709a      	strb	r2, [r3, #2]
 801aedc:	0022      	movs	r2, r4
 801aede:	2343      	movs	r3, #67	; 0x43
 801aee0:	3a55      	subs	r2, #85	; 0x55
 801aee2:	7013      	strb	r3, [r2, #0]
 801aee4:	7053      	strb	r3, [r2, #1]
 801aee6:	3b18      	subs	r3, #24
 801aee8:	7093      	strb	r3, [r2, #2]
 801aeea:	70d3      	strb	r3, [r2, #3]
 801aeec:	4b03      	ldr	r3, [pc, #12]	; (801aefc <__cxa_init_primary_exception+0x4c>)
 801aeee:	3c51      	subs	r4, #81	; 0x51
 801aef0:	7026      	strb	r6, [r4, #0]
 801aef2:	0028      	movs	r0, r5
 801aef4:	632b      	str	r3, [r5, #48]	; 0x30
 801aef6:	bc70      	pop	{r4, r5, r6}
 801aef8:	bc02      	pop	{r1}
 801aefa:	4708      	bx	r1
 801aefc:	0801ae75 	.word	0x0801ae75

0801af00 <__cxa_throw>:
 801af00:	b570      	push	{r4, r5, r6, lr}
 801af02:	0004      	movs	r4, r0
 801af04:	000d      	movs	r5, r1
 801af06:	0016      	movs	r6, r2
 801af08:	f7ff fa98 	bl	801a43c <__cxa_get_globals>
 801af0c:	6843      	ldr	r3, [r0, #4]
 801af0e:	3301      	adds	r3, #1
 801af10:	6043      	str	r3, [r0, #4]
 801af12:	0032      	movs	r2, r6
 801af14:	0029      	movs	r1, r5
 801af16:	0020      	movs	r0, r4
 801af18:	f7ff ffca 	bl	801aeb0 <__cxa_init_primary_exception>
 801af1c:	2301      	movs	r3, #1
 801af1e:	6003      	str	r3, [r0, #0]
 801af20:	3028      	adds	r0, #40	; 0x28
 801af22:	0004      	movs	r4, r0
 801af24:	f7e6 f950 	bl	80011c8 <_Unwind_RaiseException>
 801af28:	0020      	movs	r0, r4
 801af2a:	f7ff f9fd 	bl	801a328 <__cxa_begin_catch>
 801af2e:	f7ff fded 	bl	801ab0c <_ZSt9terminatev>
 801af32:	46c0      	nop			; (mov r8, r8)

0801af34 <__cxa_rethrow>:
 801af34:	b510      	push	{r4, lr}
 801af36:	f7ff fa81 	bl	801a43c <__cxa_get_globals>
 801af3a:	6843      	ldr	r3, [r0, #4]
 801af3c:	6804      	ldr	r4, [r0, #0]
 801af3e:	1c5a      	adds	r2, r3, #1
 801af40:	6042      	str	r2, [r0, #4]
 801af42:	2c00      	cmp	r4, #0
 801af44:	d00c      	beq.n	801af60 <__cxa_rethrow+0x2c>
 801af46:	2220      	movs	r2, #32
 801af48:	5ca2      	ldrb	r2, [r4, r2]
 801af4a:	2a47      	cmp	r2, #71	; 0x47
 801af4c:	d00a      	beq.n	801af64 <__cxa_rethrow+0x30>
 801af4e:	2200      	movs	r2, #0
 801af50:	6002      	str	r2, [r0, #0]
 801af52:	3420      	adds	r4, #32
 801af54:	0020      	movs	r0, r4
 801af56:	f7e6 f95b 	bl	8001210 <_Unwind_Resume_or_Rethrow>
 801af5a:	0020      	movs	r0, r4
 801af5c:	f7ff f9e4 	bl	801a328 <__cxa_begin_catch>
 801af60:	f7ff fdd4 	bl	801ab0c <_ZSt9terminatev>
 801af64:	3a26      	subs	r2, #38	; 0x26
 801af66:	5ca2      	ldrb	r2, [r4, r2]
 801af68:	2a4e      	cmp	r2, #78	; 0x4e
 801af6a:	d1f0      	bne.n	801af4e <__cxa_rethrow+0x1a>
 801af6c:	3a2c      	subs	r2, #44	; 0x2c
 801af6e:	5ca2      	ldrb	r2, [r4, r2]
 801af70:	2a55      	cmp	r2, #85	; 0x55
 801af72:	d1ec      	bne.n	801af4e <__cxa_rethrow+0x1a>
 801af74:	3a32      	subs	r2, #50	; 0x32
 801af76:	5ca2      	ldrb	r2, [r4, r2]
 801af78:	2a43      	cmp	r2, #67	; 0x43
 801af7a:	d1e8      	bne.n	801af4e <__cxa_rethrow+0x1a>
 801af7c:	3a1f      	subs	r2, #31
 801af7e:	5ca2      	ldrb	r2, [r4, r2]
 801af80:	2a43      	cmp	r2, #67	; 0x43
 801af82:	d1e4      	bne.n	801af4e <__cxa_rethrow+0x1a>
 801af84:	3a1e      	subs	r2, #30
 801af86:	5ca2      	ldrb	r2, [r4, r2]
 801af88:	2a2b      	cmp	r2, #43	; 0x2b
 801af8a:	d1e0      	bne.n	801af4e <__cxa_rethrow+0x1a>
 801af8c:	3a05      	subs	r2, #5
 801af8e:	5ca2      	ldrb	r2, [r4, r2]
 801af90:	2a2b      	cmp	r2, #43	; 0x2b
 801af92:	d1dc      	bne.n	801af4e <__cxa_rethrow+0x1a>
 801af94:	3a04      	subs	r2, #4
 801af96:	5ca2      	ldrb	r2, [r4, r2]
 801af98:	2a01      	cmp	r2, #1
 801af9a:	d8d8      	bhi.n	801af4e <__cxa_rethrow+0x1a>
 801af9c:	6963      	ldr	r3, [r4, #20]
 801af9e:	425a      	negs	r2, r3
 801afa0:	6162      	str	r2, [r4, #20]
 801afa2:	e7d6      	b.n	801af52 <__cxa_rethrow+0x1e>

0801afa4 <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
 801afa4:	b510      	push	{r4, lr}
 801afa6:	0004      	movs	r4, r0
 801afa8:	4b04      	ldr	r3, [pc, #16]	; (801afbc <_ZN10__cxxabiv120__si_class_type_infoD1Ev+0x18>)
 801afaa:	3308      	adds	r3, #8
 801afac:	6003      	str	r3, [r0, #0]
 801afae:	f000 f971 	bl	801b294 <_ZN10__cxxabiv117__class_type_infoD1Ev>
 801afb2:	0020      	movs	r0, r4
 801afb4:	bc10      	pop	{r4}
 801afb6:	bc02      	pop	{r1}
 801afb8:	4708      	bx	r1
 801afba:	46c0      	nop			; (mov r8, r8)
 801afbc:	08026c98 	.word	0x08026c98

0801afc0 <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
 801afc0:	b510      	push	{r4, lr}
 801afc2:	0004      	movs	r4, r0
 801afc4:	4b06      	ldr	r3, [pc, #24]	; (801afe0 <_ZN10__cxxabiv120__si_class_type_infoD0Ev+0x20>)
 801afc6:	3308      	adds	r3, #8
 801afc8:	6003      	str	r3, [r0, #0]
 801afca:	f000 f963 	bl	801b294 <_ZN10__cxxabiv117__class_type_infoD1Ev>
 801afce:	0020      	movs	r0, r4
 801afd0:	210c      	movs	r1, #12
 801afd2:	f000 f9c9 	bl	801b368 <_ZdlPvj>
 801afd6:	0020      	movs	r0, r4
 801afd8:	bc10      	pop	{r4}
 801afda:	bc02      	pop	{r1}
 801afdc:	4708      	bx	r1
 801afde:	46c0      	nop			; (mov r8, r8)
 801afe0:	08026c98 	.word	0x08026c98

0801afe4 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
 801afe4:	b5f0      	push	{r4, r5, r6, r7, lr}
 801afe6:	b083      	sub	sp, #12
 801afe8:	001e      	movs	r6, r3
 801afea:	9b08      	ldr	r3, [sp, #32]
 801afec:	0005      	movs	r5, r0
 801afee:	000f      	movs	r7, r1
 801aff0:	0014      	movs	r4, r2
 801aff2:	4293      	cmp	r3, r2
 801aff4:	d00d      	beq.n	801b012 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x2e>
 801aff6:	68a8      	ldr	r0, [r5, #8]
 801aff8:	9a08      	ldr	r2, [sp, #32]
 801affa:	6803      	ldr	r3, [r0, #0]
 801affc:	9200      	str	r2, [sp, #0]
 801affe:	0039      	movs	r1, r7
 801b000:	6a1d      	ldr	r5, [r3, #32]
 801b002:	0022      	movs	r2, r4
 801b004:	0033      	movs	r3, r6
 801b006:	f000 f80b 	bl	801b020 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x3c>
 801b00a:	b003      	add	sp, #12
 801b00c:	bcf0      	pop	{r4, r5, r6, r7}
 801b00e:	bc02      	pop	{r1}
 801b010:	4708      	bx	r1
 801b012:	0031      	movs	r1, r6
 801b014:	f000 f86e 	bl	801b0f4 <_ZNKSt9type_infoeqERKS_>
 801b018:	2800      	cmp	r0, #0
 801b01a:	d0ec      	beq.n	801aff6 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x12>
 801b01c:	2006      	movs	r0, #6
 801b01e:	e7f4      	b.n	801b00a <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x26>
 801b020:	4728      	bx	r5
 801b022:	46c0      	nop			; (mov r8, r8)

0801b024 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
 801b024:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b026:	46c6      	mov	lr, r8
 801b028:	b500      	push	{lr}
 801b02a:	000c      	movs	r4, r1
 801b02c:	b084      	sub	sp, #16
 801b02e:	0019      	movs	r1, r3
 801b030:	0007      	movs	r7, r0
 801b032:	0016      	movs	r6, r2
 801b034:	4698      	mov	r8, r3
 801b036:	f000 f85d 	bl	801b0f4 <_ZNKSt9type_infoeqERKS_>
 801b03a:	1e05      	subs	r5, r0, #0
 801b03c:	d013      	beq.n	801b066 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x42>
 801b03e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b040:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b042:	711e      	strb	r6, [r3, #4]
 801b044:	601a      	str	r2, [r3, #0]
 801b046:	2c00      	cmp	r4, #0
 801b048:	db29      	blt.n	801b09e <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x7a>
 801b04a:	4694      	mov	ip, r2
 801b04c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b04e:	4464      	add	r4, ip
 801b050:	1b1c      	subs	r4, r3, r4
 801b052:	4263      	negs	r3, r4
 801b054:	415c      	adcs	r4, r3
 801b056:	2305      	movs	r3, #5
 801b058:	4264      	negs	r4, r4
 801b05a:	401c      	ands	r4, r3
 801b05c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b05e:	3401      	adds	r4, #1
 801b060:	719c      	strb	r4, [r3, #6]
 801b062:	2500      	movs	r5, #0
 801b064:	e014      	b.n	801b090 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x6c>
 801b066:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b068:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b06a:	4293      	cmp	r3, r2
 801b06c:	d01e      	beq.n	801b0ac <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x88>
 801b06e:	68b8      	ldr	r0, [r7, #8]
 801b070:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801b072:	6803      	ldr	r3, [r0, #0]
 801b074:	9203      	str	r2, [sp, #12]
 801b076:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b078:	9202      	str	r2, [sp, #8]
 801b07a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b07c:	9201      	str	r2, [sp, #4]
 801b07e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b080:	9200      	str	r2, [sp, #0]
 801b082:	0021      	movs	r1, r4
 801b084:	69dd      	ldr	r5, [r3, #28]
 801b086:	0032      	movs	r2, r6
 801b088:	4643      	mov	r3, r8
 801b08a:	f000 f818 	bl	801b0be <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x9a>
 801b08e:	0005      	movs	r5, r0
 801b090:	0028      	movs	r0, r5
 801b092:	b004      	add	sp, #16
 801b094:	bc04      	pop	{r2}
 801b096:	4690      	mov	r8, r2
 801b098:	bcf0      	pop	{r4, r5, r6, r7}
 801b09a:	bc02      	pop	{r1}
 801b09c:	4708      	bx	r1
 801b09e:	2500      	movs	r5, #0
 801b0a0:	1ca3      	adds	r3, r4, #2
 801b0a2:	d1f5      	bne.n	801b090 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x6c>
 801b0a4:	2301      	movs	r3, #1
 801b0a6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801b0a8:	7193      	strb	r3, [r2, #6]
 801b0aa:	e7f1      	b.n	801b090 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x6c>
 801b0ac:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b0ae:	0038      	movs	r0, r7
 801b0b0:	f000 f820 	bl	801b0f4 <_ZNKSt9type_infoeqERKS_>
 801b0b4:	2800      	cmp	r0, #0
 801b0b6:	d0da      	beq.n	801b06e <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x4a>
 801b0b8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b0ba:	715e      	strb	r6, [r3, #5]
 801b0bc:	e7e8      	b.n	801b090 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x6c>
 801b0be:	4728      	bx	r5

0801b0c0 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
 801b0c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b0c2:	0007      	movs	r7, r0
 801b0c4:	000c      	movs	r4, r1
 801b0c6:	0015      	movs	r5, r2
 801b0c8:	001e      	movs	r6, r3
 801b0ca:	f000 f925 	bl	801b318 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
 801b0ce:	2800      	cmp	r0, #0
 801b0d0:	d107      	bne.n	801b0e2 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x22>
 801b0d2:	68b8      	ldr	r0, [r7, #8]
 801b0d4:	6803      	ldr	r3, [r0, #0]
 801b0d6:	002a      	movs	r2, r5
 801b0d8:	699f      	ldr	r7, [r3, #24]
 801b0da:	0021      	movs	r1, r4
 801b0dc:	0033      	movs	r3, r6
 801b0de:	f000 f803 	bl	801b0e8 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x28>
 801b0e2:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801b0e4:	bc02      	pop	{r1}
 801b0e6:	4708      	bx	r1
 801b0e8:	4738      	bx	r7
 801b0ea:	46c0      	nop			; (mov r8, r8)

0801b0ec <_ZNSt9type_infoD1Ev>:
 801b0ec:	4770      	bx	lr
 801b0ee:	46c0      	nop			; (mov r8, r8)

0801b0f0 <_ZNKSt9type_info14__is_pointer_pEv>:
 801b0f0:	2000      	movs	r0, #0
 801b0f2:	4770      	bx	lr

0801b0f4 <_ZNKSt9type_infoeqERKS_>:
 801b0f4:	b510      	push	{r4, lr}
 801b0f6:	4281      	cmp	r1, r0
 801b0f8:	d010      	beq.n	801b11c <_ZNKSt9type_infoeqERKS_+0x28>
 801b0fa:	6840      	ldr	r0, [r0, #4]
 801b0fc:	7803      	ldrb	r3, [r0, #0]
 801b0fe:	2b2a      	cmp	r3, #42	; 0x2a
 801b100:	d00e      	beq.n	801b120 <_ZNKSt9type_infoeqERKS_+0x2c>
 801b102:	6849      	ldr	r1, [r1, #4]
 801b104:	780b      	ldrb	r3, [r1, #0]
 801b106:	3b2a      	subs	r3, #42	; 0x2a
 801b108:	425a      	negs	r2, r3
 801b10a:	4153      	adcs	r3, r2
 801b10c:	18c9      	adds	r1, r1, r3
 801b10e:	f7ee f97b 	bl	8009408 <strcmp>
 801b112:	4243      	negs	r3, r0
 801b114:	4158      	adcs	r0, r3
 801b116:	bc10      	pop	{r4}
 801b118:	bc02      	pop	{r1}
 801b11a:	4708      	bx	r1
 801b11c:	2001      	movs	r0, #1
 801b11e:	e7fa      	b.n	801b116 <_ZNKSt9type_infoeqERKS_+0x22>
 801b120:	2000      	movs	r0, #0
 801b122:	e7f8      	b.n	801b116 <_ZNKSt9type_infoeqERKS_+0x22>

0801b124 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv>:
 801b124:	b570      	push	{r4, r5, r6, lr}
 801b126:	4b3e      	ldr	r3, [pc, #248]	; (801b220 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xfc>)
 801b128:	781a      	ldrb	r2, [r3, #0]
 801b12a:	b082      	sub	sp, #8
 801b12c:	2a00      	cmp	r2, #0
 801b12e:	d137      	bne.n	801b1a0 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x7c>
 801b130:	2201      	movs	r2, #1
 801b132:	701a      	strb	r2, [r3, #0]
 801b134:	f000 f9c0 	bl	801b4b8 <__cxa_current_exception_type>
 801b138:	2800      	cmp	r0, #0
 801b13a:	d03f      	beq.n	801b1bc <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x98>
 801b13c:	6844      	ldr	r4, [r0, #4]
 801b13e:	7823      	ldrb	r3, [r4, #0]
 801b140:	3b2a      	subs	r3, #42	; 0x2a
 801b142:	425a      	negs	r2, r3
 801b144:	4153      	adcs	r3, r2
 801b146:	18e4      	adds	r4, r4, r3
 801b148:	2301      	movs	r3, #1
 801b14a:	2200      	movs	r2, #0
 801b14c:	425b      	negs	r3, r3
 801b14e:	0011      	movs	r1, r2
 801b150:	9301      	str	r3, [sp, #4]
 801b152:	0020      	movs	r0, r4
 801b154:	ab01      	add	r3, sp, #4
 801b156:	f7ed ffd7 	bl	8009108 <__cxa_demangle>
 801b15a:	4d32      	ldr	r5, [pc, #200]	; (801b224 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x100>)
 801b15c:	682b      	ldr	r3, [r5, #0]
 801b15e:	0006      	movs	r6, r0
 801b160:	68db      	ldr	r3, [r3, #12]
 801b162:	2230      	movs	r2, #48	; 0x30
 801b164:	2101      	movs	r1, #1
 801b166:	4830      	ldr	r0, [pc, #192]	; (801b228 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x104>)
 801b168:	f000 fc58 	bl	801ba1c <fwrite>
 801b16c:	9b01      	ldr	r3, [sp, #4]
 801b16e:	2b00      	cmp	r3, #0
 801b170:	d010      	beq.n	801b194 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x70>
 801b172:	682b      	ldr	r3, [r5, #0]
 801b174:	0020      	movs	r0, r4
 801b176:	68d9      	ldr	r1, [r3, #12]
 801b178:	f000 fa76 	bl	801b668 <fputs>
 801b17c:	682b      	ldr	r3, [r5, #0]
 801b17e:	2202      	movs	r2, #2
 801b180:	68db      	ldr	r3, [r3, #12]
 801b182:	2101      	movs	r1, #1
 801b184:	4829      	ldr	r0, [pc, #164]	; (801b22c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x108>)
 801b186:	f000 fc49 	bl	801ba1c <fwrite>
 801b18a:	9b01      	ldr	r3, [sp, #4]
 801b18c:	2b00      	cmp	r3, #0
 801b18e:	d011      	beq.n	801b1b4 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x90>
 801b190:	f7ff fed0 	bl	801af34 <__cxa_rethrow>
 801b194:	682b      	ldr	r3, [r5, #0]
 801b196:	0030      	movs	r0, r6
 801b198:	68d9      	ldr	r1, [r3, #12]
 801b19a:	f000 fa65 	bl	801b668 <fputs>
 801b19e:	e7ed      	b.n	801b17c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x58>
 801b1a0:	4b20      	ldr	r3, [pc, #128]	; (801b224 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x100>)
 801b1a2:	681b      	ldr	r3, [r3, #0]
 801b1a4:	221d      	movs	r2, #29
 801b1a6:	68db      	ldr	r3, [r3, #12]
 801b1a8:	2101      	movs	r1, #1
 801b1aa:	4821      	ldr	r0, [pc, #132]	; (801b230 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x10c>)
 801b1ac:	f000 fc36 	bl	801ba1c <fwrite>
 801b1b0:	f000 f99a 	bl	801b4e8 <abort>
 801b1b4:	0030      	movs	r0, r6
 801b1b6:	f000 fc51 	bl	801ba5c <free>
 801b1ba:	e7e9      	b.n	801b190 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x6c>
 801b1bc:	4b19      	ldr	r3, [pc, #100]	; (801b224 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x100>)
 801b1be:	681b      	ldr	r3, [r3, #0]
 801b1c0:	222d      	movs	r2, #45	; 0x2d
 801b1c2:	68db      	ldr	r3, [r3, #12]
 801b1c4:	2101      	movs	r1, #1
 801b1c6:	481b      	ldr	r0, [pc, #108]	; (801b234 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x110>)
 801b1c8:	f000 fc28 	bl	801ba1c <fwrite>
 801b1cc:	f000 f98c 	bl	801b4e8 <abort>
 801b1d0:	000c      	movs	r4, r1
 801b1d2:	2901      	cmp	r1, #1
 801b1d4:	d11a      	bne.n	801b20c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xe8>
 801b1d6:	f7ff f8a7 	bl	801a328 <__cxa_begin_catch>
 801b1da:	6803      	ldr	r3, [r0, #0]
 801b1dc:	689b      	ldr	r3, [r3, #8]
 801b1de:	f000 f82d 	bl	801b23c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x118>
 801b1e2:	682b      	ldr	r3, [r5, #0]
 801b1e4:	0006      	movs	r6, r0
 801b1e6:	68db      	ldr	r3, [r3, #12]
 801b1e8:	220b      	movs	r2, #11
 801b1ea:	0021      	movs	r1, r4
 801b1ec:	4812      	ldr	r0, [pc, #72]	; (801b238 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x114>)
 801b1ee:	f000 fc15 	bl	801ba1c <fwrite>
 801b1f2:	682b      	ldr	r3, [r5, #0]
 801b1f4:	0030      	movs	r0, r6
 801b1f6:	68d9      	ldr	r1, [r3, #12]
 801b1f8:	f000 fa36 	bl	801b668 <fputs>
 801b1fc:	682b      	ldr	r3, [r5, #0]
 801b1fe:	200a      	movs	r0, #10
 801b200:	68d9      	ldr	r1, [r3, #12]
 801b202:	f000 f9c3 	bl	801b58c <fputc>
 801b206:	f7ff f8cd 	bl	801a3a4 <__cxa_end_catch>
 801b20a:	e7df      	b.n	801b1cc <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xa8>
 801b20c:	f7ff f88c 	bl	801a328 <__cxa_begin_catch>
 801b210:	f7ff f8c8 	bl	801a3a4 <__cxa_end_catch>
 801b214:	e7da      	b.n	801b1cc <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xa8>
 801b216:	f7ff f8c5 	bl	801a3a4 <__cxa_end_catch>
 801b21a:	f7ff fc99 	bl	801ab50 <__cxa_end_cleanup>
 801b21e:	46c0      	nop			; (mov r8, r8)
 801b220:	20000894 	.word	0x20000894
 801b224:	200033b4 	.word	0x200033b4
 801b228:	08026cfc 	.word	0x08026cfc
 801b22c:	08026d30 	.word	0x08026d30
 801b230:	08026cdc 	.word	0x08026cdc
 801b234:	08026d34 	.word	0x08026d34
 801b238:	08026d64 	.word	0x08026d64
 801b23c:	4718      	bx	r3
 801b23e:	46c0      	nop			; (mov r8, r8)

0801b240 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
 801b240:	b530      	push	{r4, r5, lr}
 801b242:	b085      	sub	sp, #20
 801b244:	2300      	movs	r3, #0
 801b246:	0014      	movs	r4, r2
 801b248:	466a      	mov	r2, sp
 801b24a:	7113      	strb	r3, [r2, #4]
 801b24c:	2210      	movs	r2, #16
 801b24e:	9300      	str	r3, [sp, #0]
 801b250:	9303      	str	r3, [sp, #12]
 801b252:	6803      	ldr	r3, [r0, #0]
 801b254:	9202      	str	r2, [sp, #8]
 801b256:	699d      	ldr	r5, [r3, #24]
 801b258:	6822      	ldr	r2, [r4, #0]
 801b25a:	466b      	mov	r3, sp
 801b25c:	f000 f80e 	bl	801b27c <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv+0x3c>
 801b260:	466b      	mov	r3, sp
 801b262:	791a      	ldrb	r2, [r3, #4]
 801b264:	2306      	movs	r3, #6
 801b266:	2000      	movs	r0, #0
 801b268:	4013      	ands	r3, r2
 801b26a:	2b06      	cmp	r3, #6
 801b26c:	d102      	bne.n	801b274 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv+0x34>
 801b26e:	9b00      	ldr	r3, [sp, #0]
 801b270:	6023      	str	r3, [r4, #0]
 801b272:	3001      	adds	r0, #1
 801b274:	b005      	add	sp, #20
 801b276:	bc30      	pop	{r4, r5}
 801b278:	bc02      	pop	{r1}
 801b27a:	4708      	bx	r1
 801b27c:	4728      	bx	r5
 801b27e:	46c0      	nop			; (mov r8, r8)

0801b280 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_>:
 801b280:	9b00      	ldr	r3, [sp, #0]
 801b282:	1a9a      	subs	r2, r3, r2
 801b284:	4250      	negs	r0, r2
 801b286:	4150      	adcs	r0, r2
 801b288:	2205      	movs	r2, #5
 801b28a:	4240      	negs	r0, r0
 801b28c:	4010      	ands	r0, r2
 801b28e:	3001      	adds	r0, #1
 801b290:	4770      	bx	lr
 801b292:	46c0      	nop			; (mov r8, r8)

0801b294 <_ZN10__cxxabiv117__class_type_infoD1Ev>:
 801b294:	b510      	push	{r4, lr}
 801b296:	0004      	movs	r4, r0
 801b298:	4b04      	ldr	r3, [pc, #16]	; (801b2ac <_ZN10__cxxabiv117__class_type_infoD1Ev+0x18>)
 801b29a:	3308      	adds	r3, #8
 801b29c:	6003      	str	r3, [r0, #0]
 801b29e:	f7ff ff25 	bl	801b0ec <_ZNSt9type_infoD1Ev>
 801b2a2:	0020      	movs	r0, r4
 801b2a4:	bc10      	pop	{r4}
 801b2a6:	bc02      	pop	{r1}
 801b2a8:	4708      	bx	r1
 801b2aa:	46c0      	nop			; (mov r8, r8)
 801b2ac:	08027604 	.word	0x08027604

0801b2b0 <_ZN10__cxxabiv117__class_type_infoD0Ev>:
 801b2b0:	b510      	push	{r4, lr}
 801b2b2:	0004      	movs	r4, r0
 801b2b4:	4b06      	ldr	r3, [pc, #24]	; (801b2d0 <_ZN10__cxxabiv117__class_type_infoD0Ev+0x20>)
 801b2b6:	3308      	adds	r3, #8
 801b2b8:	6003      	str	r3, [r0, #0]
 801b2ba:	f7ff ff17 	bl	801b0ec <_ZNSt9type_infoD1Ev>
 801b2be:	0020      	movs	r0, r4
 801b2c0:	2108      	movs	r1, #8
 801b2c2:	f000 f851 	bl	801b368 <_ZdlPvj>
 801b2c6:	0020      	movs	r0, r4
 801b2c8:	bc10      	pop	{r4}
 801b2ca:	bc02      	pop	{r1}
 801b2cc:	4708      	bx	r1
 801b2ce:	46c0      	nop			; (mov r8, r8)
 801b2d0:	08027604 	.word	0x08027604

0801b2d4 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE>:
 801b2d4:	b570      	push	{r4, r5, r6, lr}
 801b2d6:	0016      	movs	r6, r2
 801b2d8:	001d      	movs	r5, r3
 801b2da:	9a06      	ldr	r2, [sp, #24]
 801b2dc:	9b04      	ldr	r3, [sp, #16]
 801b2de:	0004      	movs	r4, r0
 801b2e0:	4293      	cmp	r3, r2
 801b2e2:	d010      	beq.n	801b306 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x32>
 801b2e4:	0029      	movs	r1, r5
 801b2e6:	0020      	movs	r0, r4
 801b2e8:	f7ff ff04 	bl	801b0f4 <_ZNKSt9type_infoeqERKS_>
 801b2ec:	2800      	cmp	r0, #0
 801b2ee:	d006      	beq.n	801b2fe <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x2a>
 801b2f0:	9b07      	ldr	r3, [sp, #28]
 801b2f2:	9a04      	ldr	r2, [sp, #16]
 801b2f4:	711e      	strb	r6, [r3, #4]
 801b2f6:	601a      	str	r2, [r3, #0]
 801b2f8:	2301      	movs	r3, #1
 801b2fa:	9a07      	ldr	r2, [sp, #28]
 801b2fc:	7193      	strb	r3, [r2, #6]
 801b2fe:	2000      	movs	r0, #0
 801b300:	bc70      	pop	{r4, r5, r6}
 801b302:	bc02      	pop	{r1}
 801b304:	4708      	bx	r1
 801b306:	9905      	ldr	r1, [sp, #20]
 801b308:	f7ff fef4 	bl	801b0f4 <_ZNKSt9type_infoeqERKS_>
 801b30c:	2800      	cmp	r0, #0
 801b30e:	d0e9      	beq.n	801b2e4 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x10>
 801b310:	9b07      	ldr	r3, [sp, #28]
 801b312:	715e      	strb	r6, [r3, #5]
 801b314:	e7f3      	b.n	801b2fe <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x2a>
 801b316:	46c0      	nop			; (mov r8, r8)

0801b318 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>:
 801b318:	b570      	push	{r4, r5, r6, lr}
 801b31a:	0015      	movs	r5, r2
 801b31c:	001c      	movs	r4, r3
 801b31e:	f7ff fee9 	bl	801b0f4 <_ZNKSt9type_infoeqERKS_>
 801b322:	2800      	cmp	r0, #0
 801b324:	d004      	beq.n	801b330 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x18>
 801b326:	2308      	movs	r3, #8
 801b328:	60e3      	str	r3, [r4, #12]
 801b32a:	3b02      	subs	r3, #2
 801b32c:	6025      	str	r5, [r4, #0]
 801b32e:	7123      	strb	r3, [r4, #4]
 801b330:	bc70      	pop	{r4, r5, r6}
 801b332:	bc02      	pop	{r1}
 801b334:	4708      	bx	r1
 801b336:	46c0      	nop			; (mov r8, r8)

0801b338 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj>:
 801b338:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b33a:	0005      	movs	r5, r0
 801b33c:	000c      	movs	r4, r1
 801b33e:	0017      	movs	r7, r2
 801b340:	001e      	movs	r6, r3
 801b342:	f7ff fed7 	bl	801b0f4 <_ZNKSt9type_infoeqERKS_>
 801b346:	2800      	cmp	r0, #0
 801b348:	d101      	bne.n	801b34e <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x16>
 801b34a:	2e03      	cmp	r6, #3
 801b34c:	d902      	bls.n	801b354 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x1c>
 801b34e:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801b350:	bc02      	pop	{r1}
 801b352:	4708      	bx	r1
 801b354:	6823      	ldr	r3, [r4, #0]
 801b356:	003a      	movs	r2, r7
 801b358:	695b      	ldr	r3, [r3, #20]
 801b35a:	0029      	movs	r1, r5
 801b35c:	0020      	movs	r0, r4
 801b35e:	f000 f801 	bl	801b364 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x2c>
 801b362:	e7f4      	b.n	801b34e <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x16>
 801b364:	4718      	bx	r3
 801b366:	46c0      	nop			; (mov r8, r8)

0801b368 <_ZdlPvj>:
 801b368:	b510      	push	{r4, lr}
 801b36a:	f000 f8b7 	bl	801b4dc <_ZdlPv>
 801b36e:	bc10      	pop	{r4}
 801b370:	bc01      	pop	{r0}
 801b372:	4700      	bx	r0

0801b374 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>:
 801b374:	b570      	push	{r4, r5, r6, lr}
 801b376:	4c20      	ldr	r4, [pc, #128]	; (801b3f8 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x84>)
 801b378:	6863      	ldr	r3, [r4, #4]
 801b37a:	3808      	subs	r0, #8
 801b37c:	2b00      	cmp	r3, #0
 801b37e:	d024      	beq.n	801b3ca <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x56>
 801b380:	6806      	ldr	r6, [r0, #0]
 801b382:	1985      	adds	r5, r0, r6
 801b384:	42ab      	cmp	r3, r5
 801b386:	d820      	bhi.n	801b3ca <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x56>
 801b388:	d01a      	beq.n	801b3c0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x4c>
 801b38a:	6859      	ldr	r1, [r3, #4]
 801b38c:	2900      	cmp	r1, #0
 801b38e:	d02a      	beq.n	801b3e6 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x72>
 801b390:	428d      	cmp	r5, r1
 801b392:	d304      	bcc.n	801b39e <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x2a>
 801b394:	e02b      	b.n	801b3ee <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x7a>
 801b396:	000b      	movs	r3, r1
 801b398:	4295      	cmp	r5, r2
 801b39a:	d204      	bcs.n	801b3a6 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x32>
 801b39c:	0011      	movs	r1, r2
 801b39e:	684a      	ldr	r2, [r1, #4]
 801b3a0:	1d1c      	adds	r4, r3, #4
 801b3a2:	2a00      	cmp	r2, #0
 801b3a4:	d1f7      	bne.n	801b396 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x22>
 801b3a6:	4295      	cmp	r5, r2
 801b3a8:	d014      	beq.n	801b3d4 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x60>
 801b3aa:	6823      	ldr	r3, [r4, #0]
 801b3ac:	681a      	ldr	r2, [r3, #0]
 801b3ae:	1899      	adds	r1, r3, r2
 801b3b0:	4288      	cmp	r0, r1
 801b3b2:	d015      	beq.n	801b3e0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x6c>
 801b3b4:	685b      	ldr	r3, [r3, #4]
 801b3b6:	6043      	str	r3, [r0, #4]
 801b3b8:	6823      	ldr	r3, [r4, #0]
 801b3ba:	6006      	str	r6, [r0, #0]
 801b3bc:	6058      	str	r0, [r3, #4]
 801b3be:	e006      	b.n	801b3ce <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x5a>
 801b3c0:	681a      	ldr	r2, [r3, #0]
 801b3c2:	4694      	mov	ip, r2
 801b3c4:	4466      	add	r6, ip
 801b3c6:	6006      	str	r6, [r0, #0]
 801b3c8:	685b      	ldr	r3, [r3, #4]
 801b3ca:	6043      	str	r3, [r0, #4]
 801b3cc:	6060      	str	r0, [r4, #4]
 801b3ce:	bc70      	pop	{r4, r5, r6}
 801b3d0:	bc01      	pop	{r0}
 801b3d2:	4700      	bx	r0
 801b3d4:	682b      	ldr	r3, [r5, #0]
 801b3d6:	469c      	mov	ip, r3
 801b3d8:	686b      	ldr	r3, [r5, #4]
 801b3da:	4466      	add	r6, ip
 801b3dc:	604b      	str	r3, [r1, #4]
 801b3de:	e7e4      	b.n	801b3aa <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x36>
 801b3e0:	1996      	adds	r6, r2, r6
 801b3e2:	601e      	str	r6, [r3, #0]
 801b3e4:	e7f3      	b.n	801b3ce <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x5a>
 801b3e6:	2200      	movs	r2, #0
 801b3e8:	0019      	movs	r1, r3
 801b3ea:	3404      	adds	r4, #4
 801b3ec:	e7db      	b.n	801b3a6 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x32>
 801b3ee:	000a      	movs	r2, r1
 801b3f0:	3404      	adds	r4, #4
 801b3f2:	0019      	movs	r1, r3
 801b3f4:	e7d7      	b.n	801b3a6 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x32>
 801b3f6:	46c0      	nop			; (mov r8, r8)
 801b3f8:	20000898 	.word	0x20000898

0801b3fc <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>:
 801b3fc:	0003      	movs	r3, r0
 801b3fe:	3308      	adds	r3, #8
 801b400:	b530      	push	{r4, r5, lr}
 801b402:	2b08      	cmp	r3, #8
 801b404:	d200      	bcs.n	801b408 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0xc>
 801b406:	2308      	movs	r3, #8
 801b408:	2207      	movs	r2, #7
 801b40a:	4c14      	ldr	r4, [pc, #80]	; (801b45c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x60>)
 801b40c:	3307      	adds	r3, #7
 801b40e:	4393      	bics	r3, r2
 801b410:	6862      	ldr	r2, [r4, #4]
 801b412:	2a00      	cmp	r2, #0
 801b414:	d00a      	beq.n	801b42c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x30>
 801b416:	6811      	ldr	r1, [r2, #0]
 801b418:	428b      	cmp	r3, r1
 801b41a:	d804      	bhi.n	801b426 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x2a>
 801b41c:	e01b      	b.n	801b456 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x5a>
 801b41e:	6801      	ldr	r1, [r0, #0]
 801b420:	428b      	cmp	r3, r1
 801b422:	d907      	bls.n	801b434 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x38>
 801b424:	0002      	movs	r2, r0
 801b426:	6850      	ldr	r0, [r2, #4]
 801b428:	2800      	cmp	r0, #0
 801b42a:	d1f8      	bne.n	801b41e <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x22>
 801b42c:	2000      	movs	r0, #0
 801b42e:	bc30      	pop	{r4, r5}
 801b430:	bc02      	pop	{r1}
 801b432:	4708      	bx	r1
 801b434:	3204      	adds	r2, #4
 801b436:	1acc      	subs	r4, r1, r3
 801b438:	6845      	ldr	r5, [r0, #4]
 801b43a:	2c07      	cmp	r4, #7
 801b43c:	d907      	bls.n	801b44e <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x52>
 801b43e:	18c1      	adds	r1, r0, r3
 801b440:	604d      	str	r5, [r1, #4]
 801b442:	6810      	ldr	r0, [r2, #0]
 801b444:	600c      	str	r4, [r1, #0]
 801b446:	6003      	str	r3, [r0, #0]
 801b448:	6011      	str	r1, [r2, #0]
 801b44a:	3008      	adds	r0, #8
 801b44c:	e7ef      	b.n	801b42e <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x32>
 801b44e:	6001      	str	r1, [r0, #0]
 801b450:	6015      	str	r5, [r2, #0]
 801b452:	3008      	adds	r0, #8
 801b454:	e7eb      	b.n	801b42e <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x32>
 801b456:	0010      	movs	r0, r2
 801b458:	1d22      	adds	r2, r4, #4
 801b45a:	e7ec      	b.n	801b436 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x3a>
 801b45c:	20000898 	.word	0x20000898

0801b460 <__cxa_allocate_exception>:
 801b460:	b570      	push	{r4, r5, r6, lr}
 801b462:	3080      	adds	r0, #128	; 0x80
 801b464:	0005      	movs	r5, r0
 801b466:	f000 faf1 	bl	801ba4c <malloc>
 801b46a:	1e04      	subs	r4, r0, #0
 801b46c:	d009      	beq.n	801b482 <__cxa_allocate_exception+0x22>
 801b46e:	2280      	movs	r2, #128	; 0x80
 801b470:	2100      	movs	r1, #0
 801b472:	0020      	movs	r0, r4
 801b474:	f000 fe34 	bl	801c0e0 <memset>
 801b478:	0020      	movs	r0, r4
 801b47a:	3080      	adds	r0, #128	; 0x80
 801b47c:	bc70      	pop	{r4, r5, r6}
 801b47e:	bc02      	pop	{r1}
 801b480:	4708      	bx	r1
 801b482:	0028      	movs	r0, r5
 801b484:	f7ff ffba 	bl	801b3fc <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>
 801b488:	1e04      	subs	r4, r0, #0
 801b48a:	d1f0      	bne.n	801b46e <__cxa_allocate_exception+0xe>
 801b48c:	f7ff fb3e 	bl	801ab0c <_ZSt9terminatev>

0801b490 <__cxa_free_exception>:
 801b490:	4a08      	ldr	r2, [pc, #32]	; (801b4b4 <__cxa_free_exception+0x24>)
 801b492:	6893      	ldr	r3, [r2, #8]
 801b494:	3880      	subs	r0, #128	; 0x80
 801b496:	b510      	push	{r4, lr}
 801b498:	4298      	cmp	r0, r3
 801b49a:	d903      	bls.n	801b4a4 <__cxa_free_exception+0x14>
 801b49c:	68d2      	ldr	r2, [r2, #12]
 801b49e:	189b      	adds	r3, r3, r2
 801b4a0:	4298      	cmp	r0, r3
 801b4a2:	d304      	bcc.n	801b4ae <__cxa_free_exception+0x1e>
 801b4a4:	f000 fada 	bl	801ba5c <free>
 801b4a8:	bc10      	pop	{r4}
 801b4aa:	bc01      	pop	{r0}
 801b4ac:	4700      	bx	r0
 801b4ae:	f7ff ff61 	bl	801b374 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>
 801b4b2:	e7f9      	b.n	801b4a8 <__cxa_free_exception+0x18>
 801b4b4:	20000898 	.word	0x20000898

0801b4b8 <__cxa_current_exception_type>:
 801b4b8:	b510      	push	{r4, lr}
 801b4ba:	f7fe ffbf 	bl	801a43c <__cxa_get_globals>
 801b4be:	6803      	ldr	r3, [r0, #0]
 801b4c0:	2b00      	cmp	r3, #0
 801b4c2:	d009      	beq.n	801b4d8 <__cxa_current_exception_type+0x20>
 801b4c4:	2227      	movs	r2, #39	; 0x27
 801b4c6:	6818      	ldr	r0, [r3, #0]
 801b4c8:	5c9b      	ldrb	r3, [r3, r2]
 801b4ca:	2b01      	cmp	r3, #1
 801b4cc:	d101      	bne.n	801b4d2 <__cxa_current_exception_type+0x1a>
 801b4ce:	3878      	subs	r0, #120	; 0x78
 801b4d0:	6800      	ldr	r0, [r0, #0]
 801b4d2:	bc10      	pop	{r4}
 801b4d4:	bc02      	pop	{r1}
 801b4d6:	4708      	bx	r1
 801b4d8:	2000      	movs	r0, #0
 801b4da:	e7fa      	b.n	801b4d2 <__cxa_current_exception_type+0x1a>

0801b4dc <_ZdlPv>:
 801b4dc:	b510      	push	{r4, lr}
 801b4de:	f000 fabd 	bl	801ba5c <free>
 801b4e2:	bc10      	pop	{r4}
 801b4e4:	bc01      	pop	{r0}
 801b4e6:	4700      	bx	r0

0801b4e8 <abort>:
 801b4e8:	b508      	push	{r3, lr}
 801b4ea:	2006      	movs	r0, #6
 801b4ec:	f001 f87a 	bl	801c5e4 <raise>
 801b4f0:	2001      	movs	r0, #1
 801b4f2:	f7fe fa4b 	bl	801998c <_exit>
 801b4f6:	bf00      	nop

0801b4f8 <__aeabi_memclr>:
 801b4f8:	2200      	movs	r2, #0
 801b4fa:	f000 b805 	b.w	801b508 <__aeabi_memset>
 801b4fe:	bf00      	nop

0801b500 <__aeabi_memcpy>:
 801b500:	f7ed bed6 	b.w	80092b0 <memcpy>

0801b504 <__aeabi_memmove>:
 801b504:	f000 bd88 	b.w	801c018 <memmove>

0801b508 <__aeabi_memset>:
 801b508:	4613      	mov	r3, r2
 801b50a:	460a      	mov	r2, r1
 801b50c:	4619      	mov	r1, r3
 801b50e:	f000 bde7 	b.w	801c0e0 <memset>
 801b512:	bf00      	nop

0801b514 <calloc>:
 801b514:	4b02      	ldr	r3, [pc, #8]	; (801b520 <calloc+0xc>)
 801b516:	460a      	mov	r2, r1
 801b518:	4601      	mov	r1, r0
 801b51a:	6818      	ldr	r0, [r3, #0]
 801b51c:	f000 b802 	b.w	801b524 <_calloc_r>
 801b520:	200033b4 	.word	0x200033b4

0801b524 <_calloc_r>:
 801b524:	b510      	push	{r4, lr}
 801b526:	fb02 f101 	mul.w	r1, r2, r1
 801b52a:	f000 fa9f 	bl	801ba6c <_malloc_r>
 801b52e:	4604      	mov	r4, r0
 801b530:	b1d8      	cbz	r0, 801b56a <_calloc_r+0x46>
 801b532:	f850 2c04 	ldr.w	r2, [r0, #-4]
 801b536:	f022 0203 	bic.w	r2, r2, #3
 801b53a:	3a04      	subs	r2, #4
 801b53c:	2a24      	cmp	r2, #36	; 0x24
 801b53e:	d81d      	bhi.n	801b57c <_calloc_r+0x58>
 801b540:	2a13      	cmp	r2, #19
 801b542:	d914      	bls.n	801b56e <_calloc_r+0x4a>
 801b544:	2300      	movs	r3, #0
 801b546:	2a1b      	cmp	r2, #27
 801b548:	e9c0 3300 	strd	r3, r3, [r0]
 801b54c:	d91b      	bls.n	801b586 <_calloc_r+0x62>
 801b54e:	2a24      	cmp	r2, #36	; 0x24
 801b550:	e9c0 3302 	strd	r3, r3, [r0, #8]
 801b554:	bf0a      	itet	eq
 801b556:	e9c0 3304 	strdeq	r3, r3, [r0, #16]
 801b55a:	f100 0210 	addne.w	r2, r0, #16
 801b55e:	f100 0218 	addeq.w	r2, r0, #24
 801b562:	2300      	movs	r3, #0
 801b564:	e9c2 3300 	strd	r3, r3, [r2]
 801b568:	6093      	str	r3, [r2, #8]
 801b56a:	4620      	mov	r0, r4
 801b56c:	bd10      	pop	{r4, pc}
 801b56e:	4602      	mov	r2, r0
 801b570:	2300      	movs	r3, #0
 801b572:	e9c2 3300 	strd	r3, r3, [r2]
 801b576:	6093      	str	r3, [r2, #8]
 801b578:	4620      	mov	r0, r4
 801b57a:	bd10      	pop	{r4, pc}
 801b57c:	2100      	movs	r1, #0
 801b57e:	f000 fdaf 	bl	801c0e0 <memset>
 801b582:	4620      	mov	r0, r4
 801b584:	bd10      	pop	{r4, pc}
 801b586:	f100 0208 	add.w	r2, r0, #8
 801b58a:	e7f1      	b.n	801b570 <_calloc_r+0x4c>

0801b58c <fputc>:
 801b58c:	4b14      	ldr	r3, [pc, #80]	; (801b5e0 <fputc+0x54>)
 801b58e:	b570      	push	{r4, r5, r6, lr}
 801b590:	681d      	ldr	r5, [r3, #0]
 801b592:	4606      	mov	r6, r0
 801b594:	460c      	mov	r4, r1
 801b596:	b10d      	cbz	r5, 801b59c <fputc+0x10>
 801b598:	6bab      	ldr	r3, [r5, #56]	; 0x38
 801b59a:	b19b      	cbz	r3, 801b5c4 <fputc+0x38>
 801b59c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801b59e:	07d8      	lsls	r0, r3, #31
 801b5a0:	d402      	bmi.n	801b5a8 <fputc+0x1c>
 801b5a2:	89a3      	ldrh	r3, [r4, #12]
 801b5a4:	0599      	lsls	r1, r3, #22
 801b5a6:	d516      	bpl.n	801b5d6 <fputc+0x4a>
 801b5a8:	4628      	mov	r0, r5
 801b5aa:	4622      	mov	r2, r4
 801b5ac:	4631      	mov	r1, r6
 801b5ae:	f000 fded 	bl	801c18c <_putc_r>
 801b5b2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801b5b4:	07da      	lsls	r2, r3, #31
 801b5b6:	4605      	mov	r5, r0
 801b5b8:	d402      	bmi.n	801b5c0 <fputc+0x34>
 801b5ba:	89a3      	ldrh	r3, [r4, #12]
 801b5bc:	059b      	lsls	r3, r3, #22
 801b5be:	d505      	bpl.n	801b5cc <fputc+0x40>
 801b5c0:	4628      	mov	r0, r5
 801b5c2:	bd70      	pop	{r4, r5, r6, pc}
 801b5c4:	4628      	mov	r0, r5
 801b5c6:	f003 fc57 	bl	801ee78 <__sinit>
 801b5ca:	e7e7      	b.n	801b59c <fputc+0x10>
 801b5cc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801b5ce:	f000 fa3b 	bl	801ba48 <__retarget_lock_release_recursive>
 801b5d2:	4628      	mov	r0, r5
 801b5d4:	bd70      	pop	{r4, r5, r6, pc}
 801b5d6:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801b5d8:	f000 fa34 	bl	801ba44 <__retarget_lock_acquire_recursive>
 801b5dc:	e7e4      	b.n	801b5a8 <fputc+0x1c>
 801b5de:	bf00      	nop
 801b5e0:	200033b4 	.word	0x200033b4

0801b5e4 <_fputs_r>:
 801b5e4:	b530      	push	{r4, r5, lr}
 801b5e6:	b087      	sub	sp, #28
 801b5e8:	4605      	mov	r5, r0
 801b5ea:	4608      	mov	r0, r1
 801b5ec:	4614      	mov	r4, r2
 801b5ee:	9101      	str	r1, [sp, #4]
 801b5f0:	f7ee f886 	bl	8009700 <strlen>
 801b5f4:	aa01      	add	r2, sp, #4
 801b5f6:	2301      	movs	r3, #1
 801b5f8:	9005      	str	r0, [sp, #20]
 801b5fa:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801b5fe:	9304      	str	r3, [sp, #16]
 801b600:	b10d      	cbz	r5, 801b606 <_fputs_r+0x22>
 801b602:	6bab      	ldr	r3, [r5, #56]	; 0x38
 801b604:	b1fb      	cbz	r3, 801b646 <_fputs_r+0x62>
 801b606:	6e61      	ldr	r1, [r4, #100]	; 0x64
 801b608:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801b60c:	07c9      	lsls	r1, r1, #31
 801b60e:	b29a      	uxth	r2, r3
 801b610:	d401      	bmi.n	801b616 <_fputs_r+0x32>
 801b612:	0590      	lsls	r0, r2, #22
 801b614:	d521      	bpl.n	801b65a <_fputs_r+0x76>
 801b616:	0491      	lsls	r1, r2, #18
 801b618:	d406      	bmi.n	801b628 <_fputs_r+0x44>
 801b61a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801b61c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 801b620:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 801b624:	81a3      	strh	r3, [r4, #12]
 801b626:	6662      	str	r2, [r4, #100]	; 0x64
 801b628:	4628      	mov	r0, r5
 801b62a:	aa03      	add	r2, sp, #12
 801b62c:	4621      	mov	r1, r4
 801b62e:	f000 f823 	bl	801b678 <__sfvwrite_r>
 801b632:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801b634:	07da      	lsls	r2, r3, #31
 801b636:	4605      	mov	r5, r0
 801b638:	d402      	bmi.n	801b640 <_fputs_r+0x5c>
 801b63a:	89a3      	ldrh	r3, [r4, #12]
 801b63c:	059b      	lsls	r3, r3, #22
 801b63e:	d506      	bpl.n	801b64e <_fputs_r+0x6a>
 801b640:	4628      	mov	r0, r5
 801b642:	b007      	add	sp, #28
 801b644:	bd30      	pop	{r4, r5, pc}
 801b646:	4628      	mov	r0, r5
 801b648:	f003 fc16 	bl	801ee78 <__sinit>
 801b64c:	e7db      	b.n	801b606 <_fputs_r+0x22>
 801b64e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801b650:	f000 f9fa 	bl	801ba48 <__retarget_lock_release_recursive>
 801b654:	4628      	mov	r0, r5
 801b656:	b007      	add	sp, #28
 801b658:	bd30      	pop	{r4, r5, pc}
 801b65a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801b65c:	f000 f9f2 	bl	801ba44 <__retarget_lock_acquire_recursive>
 801b660:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801b664:	b29a      	uxth	r2, r3
 801b666:	e7d6      	b.n	801b616 <_fputs_r+0x32>

0801b668 <fputs>:
 801b668:	4b02      	ldr	r3, [pc, #8]	; (801b674 <fputs+0xc>)
 801b66a:	460a      	mov	r2, r1
 801b66c:	4601      	mov	r1, r0
 801b66e:	6818      	ldr	r0, [r3, #0]
 801b670:	f7ff bfb8 	b.w	801b5e4 <_fputs_r>
 801b674:	200033b4 	.word	0x200033b4

0801b678 <__sfvwrite_r>:
 801b678:	6893      	ldr	r3, [r2, #8]
 801b67a:	2b00      	cmp	r3, #0
 801b67c:	f000 80e4 	beq.w	801b848 <__sfvwrite_r+0x1d0>
 801b680:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b684:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
 801b688:	b29b      	uxth	r3, r3
 801b68a:	460c      	mov	r4, r1
 801b68c:	0719      	lsls	r1, r3, #28
 801b68e:	b083      	sub	sp, #12
 801b690:	4682      	mov	sl, r0
 801b692:	4690      	mov	r8, r2
 801b694:	d535      	bpl.n	801b702 <__sfvwrite_r+0x8a>
 801b696:	6922      	ldr	r2, [r4, #16]
 801b698:	b39a      	cbz	r2, 801b702 <__sfvwrite_r+0x8a>
 801b69a:	f013 0202 	ands.w	r2, r3, #2
 801b69e:	f8d8 6000 	ldr.w	r6, [r8]
 801b6a2:	d03d      	beq.n	801b720 <__sfvwrite_r+0xa8>
 801b6a4:	2700      	movs	r7, #0
 801b6a6:	f8d4 b024 	ldr.w	fp, [r4, #36]	; 0x24
 801b6aa:	f8d4 c01c 	ldr.w	ip, [r4, #28]
 801b6ae:	f8df 92c0 	ldr.w	r9, [pc, #704]	; 801b970 <__sfvwrite_r+0x2f8>
 801b6b2:	463d      	mov	r5, r7
 801b6b4:	454d      	cmp	r5, r9
 801b6b6:	462b      	mov	r3, r5
 801b6b8:	463a      	mov	r2, r7
 801b6ba:	bf28      	it	cs
 801b6bc:	464b      	movcs	r3, r9
 801b6be:	4661      	mov	r1, ip
 801b6c0:	4650      	mov	r0, sl
 801b6c2:	b1d5      	cbz	r5, 801b6fa <__sfvwrite_r+0x82>
 801b6c4:	47d8      	blx	fp
 801b6c6:	2800      	cmp	r0, #0
 801b6c8:	f340 80c6 	ble.w	801b858 <__sfvwrite_r+0x1e0>
 801b6cc:	f8d8 3008 	ldr.w	r3, [r8, #8]
 801b6d0:	1a1b      	subs	r3, r3, r0
 801b6d2:	4407      	add	r7, r0
 801b6d4:	1a2d      	subs	r5, r5, r0
 801b6d6:	f8c8 3008 	str.w	r3, [r8, #8]
 801b6da:	2b00      	cmp	r3, #0
 801b6dc:	f000 80b0 	beq.w	801b840 <__sfvwrite_r+0x1c8>
 801b6e0:	f8d4 c01c 	ldr.w	ip, [r4, #28]
 801b6e4:	f8d4 b024 	ldr.w	fp, [r4, #36]	; 0x24
 801b6e8:	454d      	cmp	r5, r9
 801b6ea:	462b      	mov	r3, r5
 801b6ec:	463a      	mov	r2, r7
 801b6ee:	bf28      	it	cs
 801b6f0:	464b      	movcs	r3, r9
 801b6f2:	4661      	mov	r1, ip
 801b6f4:	4650      	mov	r0, sl
 801b6f6:	2d00      	cmp	r5, #0
 801b6f8:	d1e4      	bne.n	801b6c4 <__sfvwrite_r+0x4c>
 801b6fa:	e9d6 7500 	ldrd	r7, r5, [r6]
 801b6fe:	3608      	adds	r6, #8
 801b700:	e7d8      	b.n	801b6b4 <__sfvwrite_r+0x3c>
 801b702:	4621      	mov	r1, r4
 801b704:	4650      	mov	r0, sl
 801b706:	f002 fabf 	bl	801dc88 <__swsetup_r>
 801b70a:	2800      	cmp	r0, #0
 801b70c:	f040 812a 	bne.w	801b964 <__sfvwrite_r+0x2ec>
 801b710:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801b714:	f8d8 6000 	ldr.w	r6, [r8]
 801b718:	b29b      	uxth	r3, r3
 801b71a:	f013 0202 	ands.w	r2, r3, #2
 801b71e:	d1c1      	bne.n	801b6a4 <__sfvwrite_r+0x2c>
 801b720:	f013 0901 	ands.w	r9, r3, #1
 801b724:	d15d      	bne.n	801b7e2 <__sfvwrite_r+0x16a>
 801b726:	68a7      	ldr	r7, [r4, #8]
 801b728:	6820      	ldr	r0, [r4, #0]
 801b72a:	464d      	mov	r5, r9
 801b72c:	2d00      	cmp	r5, #0
 801b72e:	d054      	beq.n	801b7da <__sfvwrite_r+0x162>
 801b730:	059a      	lsls	r2, r3, #22
 801b732:	f140 809b 	bpl.w	801b86c <__sfvwrite_r+0x1f4>
 801b736:	42af      	cmp	r7, r5
 801b738:	46bb      	mov	fp, r7
 801b73a:	f200 80d8 	bhi.w	801b8ee <__sfvwrite_r+0x276>
 801b73e:	f413 6f90 	tst.w	r3, #1152	; 0x480
 801b742:	d02f      	beq.n	801b7a4 <__sfvwrite_r+0x12c>
 801b744:	e9d4 1704 	ldrd	r1, r7, [r4, #16]
 801b748:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801b74c:	eba0 0b01 	sub.w	fp, r0, r1
 801b750:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
 801b754:	1c68      	adds	r0, r5, #1
 801b756:	107f      	asrs	r7, r7, #1
 801b758:	4458      	add	r0, fp
 801b75a:	42b8      	cmp	r0, r7
 801b75c:	463a      	mov	r2, r7
 801b75e:	bf84      	itt	hi
 801b760:	4607      	movhi	r7, r0
 801b762:	463a      	movhi	r2, r7
 801b764:	055b      	lsls	r3, r3, #21
 801b766:	f140 80d3 	bpl.w	801b910 <__sfvwrite_r+0x298>
 801b76a:	4611      	mov	r1, r2
 801b76c:	4650      	mov	r0, sl
 801b76e:	f000 f97d 	bl	801ba6c <_malloc_r>
 801b772:	2800      	cmp	r0, #0
 801b774:	f000 80f0 	beq.w	801b958 <__sfvwrite_r+0x2e0>
 801b778:	465a      	mov	r2, fp
 801b77a:	6921      	ldr	r1, [r4, #16]
 801b77c:	9001      	str	r0, [sp, #4]
 801b77e:	f7ed fd97 	bl	80092b0 <memcpy>
 801b782:	89a2      	ldrh	r2, [r4, #12]
 801b784:	9b01      	ldr	r3, [sp, #4]
 801b786:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 801b78a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 801b78e:	81a2      	strh	r2, [r4, #12]
 801b790:	eba7 020b 	sub.w	r2, r7, fp
 801b794:	eb03 000b 	add.w	r0, r3, fp
 801b798:	6167      	str	r7, [r4, #20]
 801b79a:	6123      	str	r3, [r4, #16]
 801b79c:	6020      	str	r0, [r4, #0]
 801b79e:	60a2      	str	r2, [r4, #8]
 801b7a0:	462f      	mov	r7, r5
 801b7a2:	46ab      	mov	fp, r5
 801b7a4:	465a      	mov	r2, fp
 801b7a6:	4649      	mov	r1, r9
 801b7a8:	f000 fc36 	bl	801c018 <memmove>
 801b7ac:	68a2      	ldr	r2, [r4, #8]
 801b7ae:	6823      	ldr	r3, [r4, #0]
 801b7b0:	1bd2      	subs	r2, r2, r7
 801b7b2:	445b      	add	r3, fp
 801b7b4:	462f      	mov	r7, r5
 801b7b6:	60a2      	str	r2, [r4, #8]
 801b7b8:	6023      	str	r3, [r4, #0]
 801b7ba:	2500      	movs	r5, #0
 801b7bc:	f8d8 3008 	ldr.w	r3, [r8, #8]
 801b7c0:	1bdb      	subs	r3, r3, r7
 801b7c2:	44b9      	add	r9, r7
 801b7c4:	f8c8 3008 	str.w	r3, [r8, #8]
 801b7c8:	2b00      	cmp	r3, #0
 801b7ca:	d039      	beq.n	801b840 <__sfvwrite_r+0x1c8>
 801b7cc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801b7d0:	68a7      	ldr	r7, [r4, #8]
 801b7d2:	6820      	ldr	r0, [r4, #0]
 801b7d4:	b29b      	uxth	r3, r3
 801b7d6:	2d00      	cmp	r5, #0
 801b7d8:	d1aa      	bne.n	801b730 <__sfvwrite_r+0xb8>
 801b7da:	e9d6 9500 	ldrd	r9, r5, [r6]
 801b7de:	3608      	adds	r6, #8
 801b7e0:	e7a4      	b.n	801b72c <__sfvwrite_r+0xb4>
 801b7e2:	4633      	mov	r3, r6
 801b7e4:	4691      	mov	r9, r2
 801b7e6:	4610      	mov	r0, r2
 801b7e8:	4617      	mov	r7, r2
 801b7ea:	464e      	mov	r6, r9
 801b7ec:	469b      	mov	fp, r3
 801b7ee:	2f00      	cmp	r7, #0
 801b7f0:	d06b      	beq.n	801b8ca <__sfvwrite_r+0x252>
 801b7f2:	2800      	cmp	r0, #0
 801b7f4:	d071      	beq.n	801b8da <__sfvwrite_r+0x262>
 801b7f6:	e9d4 1204 	ldrd	r1, r2, [r4, #16]
 801b7fa:	6820      	ldr	r0, [r4, #0]
 801b7fc:	45b9      	cmp	r9, r7
 801b7fe:	464b      	mov	r3, r9
 801b800:	bf28      	it	cs
 801b802:	463b      	movcs	r3, r7
 801b804:	4288      	cmp	r0, r1
 801b806:	d903      	bls.n	801b810 <__sfvwrite_r+0x198>
 801b808:	68a5      	ldr	r5, [r4, #8]
 801b80a:	4415      	add	r5, r2
 801b80c:	42ab      	cmp	r3, r5
 801b80e:	dc71      	bgt.n	801b8f4 <__sfvwrite_r+0x27c>
 801b810:	429a      	cmp	r2, r3
 801b812:	f300 8093 	bgt.w	801b93c <__sfvwrite_r+0x2c4>
 801b816:	4613      	mov	r3, r2
 801b818:	6a65      	ldr	r5, [r4, #36]	; 0x24
 801b81a:	69e1      	ldr	r1, [r4, #28]
 801b81c:	4632      	mov	r2, r6
 801b81e:	4650      	mov	r0, sl
 801b820:	47a8      	blx	r5
 801b822:	1e05      	subs	r5, r0, #0
 801b824:	dd18      	ble.n	801b858 <__sfvwrite_r+0x1e0>
 801b826:	ebb9 0905 	subs.w	r9, r9, r5
 801b82a:	d00f      	beq.n	801b84c <__sfvwrite_r+0x1d4>
 801b82c:	2001      	movs	r0, #1
 801b82e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 801b832:	1b5b      	subs	r3, r3, r5
 801b834:	442e      	add	r6, r5
 801b836:	1b7f      	subs	r7, r7, r5
 801b838:	f8c8 3008 	str.w	r3, [r8, #8]
 801b83c:	2b00      	cmp	r3, #0
 801b83e:	d1d6      	bne.n	801b7ee <__sfvwrite_r+0x176>
 801b840:	2000      	movs	r0, #0
 801b842:	b003      	add	sp, #12
 801b844:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b848:	2000      	movs	r0, #0
 801b84a:	4770      	bx	lr
 801b84c:	4621      	mov	r1, r4
 801b84e:	4650      	mov	r0, sl
 801b850:	f003 fab6 	bl	801edc0 <_fflush_r>
 801b854:	2800      	cmp	r0, #0
 801b856:	d0ea      	beq.n	801b82e <__sfvwrite_r+0x1b6>
 801b858:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801b85c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801b860:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801b864:	81a3      	strh	r3, [r4, #12]
 801b866:	b003      	add	sp, #12
 801b868:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b86c:	6923      	ldr	r3, [r4, #16]
 801b86e:	4283      	cmp	r3, r0
 801b870:	d315      	bcc.n	801b89e <__sfvwrite_r+0x226>
 801b872:	6961      	ldr	r1, [r4, #20]
 801b874:	42a9      	cmp	r1, r5
 801b876:	d812      	bhi.n	801b89e <__sfvwrite_r+0x226>
 801b878:	4b3c      	ldr	r3, [pc, #240]	; (801b96c <__sfvwrite_r+0x2f4>)
 801b87a:	6a67      	ldr	r7, [r4, #36]	; 0x24
 801b87c:	429d      	cmp	r5, r3
 801b87e:	bf94      	ite	ls
 801b880:	462b      	movls	r3, r5
 801b882:	f06f 4300 	mvnhi.w	r3, #2147483648	; 0x80000000
 801b886:	464a      	mov	r2, r9
 801b888:	fb93 f3f1 	sdiv	r3, r3, r1
 801b88c:	4650      	mov	r0, sl
 801b88e:	fb01 f303 	mul.w	r3, r1, r3
 801b892:	69e1      	ldr	r1, [r4, #28]
 801b894:	47b8      	blx	r7
 801b896:	1e07      	subs	r7, r0, #0
 801b898:	ddde      	ble.n	801b858 <__sfvwrite_r+0x1e0>
 801b89a:	1bed      	subs	r5, r5, r7
 801b89c:	e78e      	b.n	801b7bc <__sfvwrite_r+0x144>
 801b89e:	42af      	cmp	r7, r5
 801b8a0:	bf28      	it	cs
 801b8a2:	462f      	movcs	r7, r5
 801b8a4:	463a      	mov	r2, r7
 801b8a6:	4649      	mov	r1, r9
 801b8a8:	f000 fbb6 	bl	801c018 <memmove>
 801b8ac:	68a3      	ldr	r3, [r4, #8]
 801b8ae:	6822      	ldr	r2, [r4, #0]
 801b8b0:	1bdb      	subs	r3, r3, r7
 801b8b2:	443a      	add	r2, r7
 801b8b4:	60a3      	str	r3, [r4, #8]
 801b8b6:	6022      	str	r2, [r4, #0]
 801b8b8:	2b00      	cmp	r3, #0
 801b8ba:	d1ee      	bne.n	801b89a <__sfvwrite_r+0x222>
 801b8bc:	4621      	mov	r1, r4
 801b8be:	4650      	mov	r0, sl
 801b8c0:	f003 fa7e 	bl	801edc0 <_fflush_r>
 801b8c4:	2800      	cmp	r0, #0
 801b8c6:	d0e8      	beq.n	801b89a <__sfvwrite_r+0x222>
 801b8c8:	e7c6      	b.n	801b858 <__sfvwrite_r+0x1e0>
 801b8ca:	f10b 0308 	add.w	r3, fp, #8
 801b8ce:	e953 6702 	ldrd	r6, r7, [r3, #-8]
 801b8d2:	469b      	mov	fp, r3
 801b8d4:	3308      	adds	r3, #8
 801b8d6:	2f00      	cmp	r7, #0
 801b8d8:	d0f9      	beq.n	801b8ce <__sfvwrite_r+0x256>
 801b8da:	463a      	mov	r2, r7
 801b8dc:	210a      	movs	r1, #10
 801b8de:	4630      	mov	r0, r6
 801b8e0:	f7ed fc96 	bl	8009210 <memchr>
 801b8e4:	b338      	cbz	r0, 801b936 <__sfvwrite_r+0x2be>
 801b8e6:	3001      	adds	r0, #1
 801b8e8:	eba0 0906 	sub.w	r9, r0, r6
 801b8ec:	e783      	b.n	801b7f6 <__sfvwrite_r+0x17e>
 801b8ee:	462f      	mov	r7, r5
 801b8f0:	46ab      	mov	fp, r5
 801b8f2:	e757      	b.n	801b7a4 <__sfvwrite_r+0x12c>
 801b8f4:	4631      	mov	r1, r6
 801b8f6:	462a      	mov	r2, r5
 801b8f8:	f000 fb8e 	bl	801c018 <memmove>
 801b8fc:	6823      	ldr	r3, [r4, #0]
 801b8fe:	442b      	add	r3, r5
 801b900:	6023      	str	r3, [r4, #0]
 801b902:	4621      	mov	r1, r4
 801b904:	4650      	mov	r0, sl
 801b906:	f003 fa5b 	bl	801edc0 <_fflush_r>
 801b90a:	2800      	cmp	r0, #0
 801b90c:	d08b      	beq.n	801b826 <__sfvwrite_r+0x1ae>
 801b90e:	e7a3      	b.n	801b858 <__sfvwrite_r+0x1e0>
 801b910:	4650      	mov	r0, sl
 801b912:	f000 fc7b 	bl	801c20c <_realloc_r>
 801b916:	4603      	mov	r3, r0
 801b918:	2800      	cmp	r0, #0
 801b91a:	f47f af39 	bne.w	801b790 <__sfvwrite_r+0x118>
 801b91e:	6921      	ldr	r1, [r4, #16]
 801b920:	4650      	mov	r0, sl
 801b922:	f003 fb31 	bl	801ef88 <_free_r>
 801b926:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801b92a:	220c      	movs	r2, #12
 801b92c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 801b930:	f8ca 2000 	str.w	r2, [sl]
 801b934:	e792      	b.n	801b85c <__sfvwrite_r+0x1e4>
 801b936:	f107 0901 	add.w	r9, r7, #1
 801b93a:	e75c      	b.n	801b7f6 <__sfvwrite_r+0x17e>
 801b93c:	461a      	mov	r2, r3
 801b93e:	4631      	mov	r1, r6
 801b940:	9301      	str	r3, [sp, #4]
 801b942:	f000 fb69 	bl	801c018 <memmove>
 801b946:	9b01      	ldr	r3, [sp, #4]
 801b948:	68a1      	ldr	r1, [r4, #8]
 801b94a:	6822      	ldr	r2, [r4, #0]
 801b94c:	1ac9      	subs	r1, r1, r3
 801b94e:	441a      	add	r2, r3
 801b950:	60a1      	str	r1, [r4, #8]
 801b952:	6022      	str	r2, [r4, #0]
 801b954:	461d      	mov	r5, r3
 801b956:	e766      	b.n	801b826 <__sfvwrite_r+0x1ae>
 801b958:	230c      	movs	r3, #12
 801b95a:	f8ca 3000 	str.w	r3, [sl]
 801b95e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801b962:	e77b      	b.n	801b85c <__sfvwrite_r+0x1e4>
 801b964:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801b968:	e76b      	b.n	801b842 <__sfvwrite_r+0x1ca>
 801b96a:	bf00      	nop
 801b96c:	7ffffffe 	.word	0x7ffffffe
 801b970:	7ffffc00 	.word	0x7ffffc00

0801b974 <_fwrite_r>:
 801b974:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b978:	b086      	sub	sp, #24
 801b97a:	fb02 f503 	mul.w	r5, r2, r3
 801b97e:	4690      	mov	r8, r2
 801b980:	461e      	mov	r6, r3
 801b982:	aa01      	add	r2, sp, #4
 801b984:	2301      	movs	r3, #1
 801b986:	e9cd 1501 	strd	r1, r5, [sp, #4]
 801b98a:	9505      	str	r5, [sp, #20]
 801b98c:	e9cd 2303 	strd	r2, r3, [sp, #12]
 801b990:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b992:	4607      	mov	r7, r0
 801b994:	b110      	cbz	r0, 801b99c <_fwrite_r+0x28>
 801b996:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801b998:	2b00      	cmp	r3, #0
 801b99a:	d030      	beq.n	801b9fe <_fwrite_r+0x8a>
 801b99c:	6e61      	ldr	r1, [r4, #100]	; 0x64
 801b99e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801b9a2:	07c8      	lsls	r0, r1, #31
 801b9a4:	b29a      	uxth	r2, r3
 801b9a6:	d401      	bmi.n	801b9ac <_fwrite_r+0x38>
 801b9a8:	0591      	lsls	r1, r2, #22
 801b9aa:	d52b      	bpl.n	801ba04 <_fwrite_r+0x90>
 801b9ac:	0492      	lsls	r2, r2, #18
 801b9ae:	d406      	bmi.n	801b9be <_fwrite_r+0x4a>
 801b9b0:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801b9b2:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 801b9b6:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 801b9ba:	81a3      	strh	r3, [r4, #12]
 801b9bc:	6662      	str	r2, [r4, #100]	; 0x64
 801b9be:	4638      	mov	r0, r7
 801b9c0:	aa03      	add	r2, sp, #12
 801b9c2:	4621      	mov	r1, r4
 801b9c4:	f7ff fe58 	bl	801b678 <__sfvwrite_r>
 801b9c8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801b9ca:	b940      	cbnz	r0, 801b9de <_fwrite_r+0x6a>
 801b9cc:	07d8      	lsls	r0, r3, #31
 801b9ce:	d402      	bmi.n	801b9d6 <_fwrite_r+0x62>
 801b9d0:	89a3      	ldrh	r3, [r4, #12]
 801b9d2:	0599      	lsls	r1, r3, #22
 801b9d4:	d51d      	bpl.n	801ba12 <_fwrite_r+0x9e>
 801b9d6:	4630      	mov	r0, r6
 801b9d8:	b006      	add	sp, #24
 801b9da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b9de:	07da      	lsls	r2, r3, #31
 801b9e0:	d506      	bpl.n	801b9f0 <_fwrite_r+0x7c>
 801b9e2:	9805      	ldr	r0, [sp, #20]
 801b9e4:	1a2d      	subs	r5, r5, r0
 801b9e6:	fbb5 f0f8 	udiv	r0, r5, r8
 801b9ea:	b006      	add	sp, #24
 801b9ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b9f0:	89a3      	ldrh	r3, [r4, #12]
 801b9f2:	059b      	lsls	r3, r3, #22
 801b9f4:	d4f5      	bmi.n	801b9e2 <_fwrite_r+0x6e>
 801b9f6:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801b9f8:	f000 f826 	bl	801ba48 <__retarget_lock_release_recursive>
 801b9fc:	e7f1      	b.n	801b9e2 <_fwrite_r+0x6e>
 801b9fe:	f003 fa3b 	bl	801ee78 <__sinit>
 801ba02:	e7cb      	b.n	801b99c <_fwrite_r+0x28>
 801ba04:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801ba06:	f000 f81d 	bl	801ba44 <__retarget_lock_acquire_recursive>
 801ba0a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801ba0e:	b29a      	uxth	r2, r3
 801ba10:	e7cc      	b.n	801b9ac <_fwrite_r+0x38>
 801ba12:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801ba14:	f000 f818 	bl	801ba48 <__retarget_lock_release_recursive>
 801ba18:	4630      	mov	r0, r6
 801ba1a:	e7e6      	b.n	801b9ea <_fwrite_r+0x76>

0801ba1c <fwrite>:
 801ba1c:	b510      	push	{r4, lr}
 801ba1e:	b082      	sub	sp, #8
 801ba20:	4c05      	ldr	r4, [pc, #20]	; (801ba38 <fwrite+0x1c>)
 801ba22:	9300      	str	r3, [sp, #0]
 801ba24:	6824      	ldr	r4, [r4, #0]
 801ba26:	4613      	mov	r3, r2
 801ba28:	460a      	mov	r2, r1
 801ba2a:	4601      	mov	r1, r0
 801ba2c:	4620      	mov	r0, r4
 801ba2e:	f7ff ffa1 	bl	801b974 <_fwrite_r>
 801ba32:	b002      	add	sp, #8
 801ba34:	bd10      	pop	{r4, pc}
 801ba36:	bf00      	nop
 801ba38:	200033b4 	.word	0x200033b4

0801ba3c <__retarget_lock_init_recursive>:
 801ba3c:	4770      	bx	lr
 801ba3e:	bf00      	nop

0801ba40 <__retarget_lock_close_recursive>:
 801ba40:	4770      	bx	lr
 801ba42:	bf00      	nop

0801ba44 <__retarget_lock_acquire_recursive>:
 801ba44:	4770      	bx	lr
 801ba46:	bf00      	nop

0801ba48 <__retarget_lock_release_recursive>:
 801ba48:	4770      	bx	lr
 801ba4a:	bf00      	nop

0801ba4c <malloc>:
 801ba4c:	4b02      	ldr	r3, [pc, #8]	; (801ba58 <malloc+0xc>)
 801ba4e:	4601      	mov	r1, r0
 801ba50:	6818      	ldr	r0, [r3, #0]
 801ba52:	f000 b80b 	b.w	801ba6c <_malloc_r>
 801ba56:	bf00      	nop
 801ba58:	200033b4 	.word	0x200033b4

0801ba5c <free>:
 801ba5c:	4b02      	ldr	r3, [pc, #8]	; (801ba68 <free+0xc>)
 801ba5e:	4601      	mov	r1, r0
 801ba60:	6818      	ldr	r0, [r3, #0]
 801ba62:	f003 ba91 	b.w	801ef88 <_free_r>
 801ba66:	bf00      	nop
 801ba68:	200033b4 	.word	0x200033b4

0801ba6c <_malloc_r>:
 801ba6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ba70:	f101 050b 	add.w	r5, r1, #11
 801ba74:	2d16      	cmp	r5, #22
 801ba76:	b083      	sub	sp, #12
 801ba78:	4606      	mov	r6, r0
 801ba7a:	d823      	bhi.n	801bac4 <_malloc_r+0x58>
 801ba7c:	2910      	cmp	r1, #16
 801ba7e:	f200 80b9 	bhi.w	801bbf4 <_malloc_r+0x188>
 801ba82:	f000 fb77 	bl	801c174 <__malloc_lock>
 801ba86:	2510      	movs	r5, #16
 801ba88:	2318      	movs	r3, #24
 801ba8a:	2002      	movs	r0, #2
 801ba8c:	4fc5      	ldr	r7, [pc, #788]	; (801bda4 <_malloc_r+0x338>)
 801ba8e:	443b      	add	r3, r7
 801ba90:	f1a3 0208 	sub.w	r2, r3, #8
 801ba94:	685c      	ldr	r4, [r3, #4]
 801ba96:	4294      	cmp	r4, r2
 801ba98:	f000 8166 	beq.w	801bd68 <_malloc_r+0x2fc>
 801ba9c:	6863      	ldr	r3, [r4, #4]
 801ba9e:	f023 0303 	bic.w	r3, r3, #3
 801baa2:	4423      	add	r3, r4
 801baa4:	e9d4 5102 	ldrd	r5, r1, [r4, #8]
 801baa8:	685a      	ldr	r2, [r3, #4]
 801baaa:	60e9      	str	r1, [r5, #12]
 801baac:	f042 0201 	orr.w	r2, r2, #1
 801bab0:	608d      	str	r5, [r1, #8]
 801bab2:	4630      	mov	r0, r6
 801bab4:	605a      	str	r2, [r3, #4]
 801bab6:	f000 fb63 	bl	801c180 <__malloc_unlock>
 801baba:	3408      	adds	r4, #8
 801babc:	4620      	mov	r0, r4
 801babe:	b003      	add	sp, #12
 801bac0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bac4:	f035 0507 	bics.w	r5, r5, #7
 801bac8:	f100 8094 	bmi.w	801bbf4 <_malloc_r+0x188>
 801bacc:	42a9      	cmp	r1, r5
 801bace:	f200 8091 	bhi.w	801bbf4 <_malloc_r+0x188>
 801bad2:	f000 fb4f 	bl	801c174 <__malloc_lock>
 801bad6:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
 801bada:	f0c0 8183 	bcc.w	801bde4 <_malloc_r+0x378>
 801bade:	0a6b      	lsrs	r3, r5, #9
 801bae0:	f000 808f 	beq.w	801bc02 <_malloc_r+0x196>
 801bae4:	2b04      	cmp	r3, #4
 801bae6:	f200 8146 	bhi.w	801bd76 <_malloc_r+0x30a>
 801baea:	09ab      	lsrs	r3, r5, #6
 801baec:	f103 0039 	add.w	r0, r3, #57	; 0x39
 801baf0:	f103 0c38 	add.w	ip, r3, #56	; 0x38
 801baf4:	00c3      	lsls	r3, r0, #3
 801baf6:	4fab      	ldr	r7, [pc, #684]	; (801bda4 <_malloc_r+0x338>)
 801baf8:	443b      	add	r3, r7
 801bafa:	f1a3 0108 	sub.w	r1, r3, #8
 801bafe:	685c      	ldr	r4, [r3, #4]
 801bb00:	42a1      	cmp	r1, r4
 801bb02:	d106      	bne.n	801bb12 <_malloc_r+0xa6>
 801bb04:	e00c      	b.n	801bb20 <_malloc_r+0xb4>
 801bb06:	2a00      	cmp	r2, #0
 801bb08:	f280 811d 	bge.w	801bd46 <_malloc_r+0x2da>
 801bb0c:	68e4      	ldr	r4, [r4, #12]
 801bb0e:	42a1      	cmp	r1, r4
 801bb10:	d006      	beq.n	801bb20 <_malloc_r+0xb4>
 801bb12:	6863      	ldr	r3, [r4, #4]
 801bb14:	f023 0303 	bic.w	r3, r3, #3
 801bb18:	1b5a      	subs	r2, r3, r5
 801bb1a:	2a0f      	cmp	r2, #15
 801bb1c:	ddf3      	ble.n	801bb06 <_malloc_r+0x9a>
 801bb1e:	4660      	mov	r0, ip
 801bb20:	693c      	ldr	r4, [r7, #16]
 801bb22:	f8df c294 	ldr.w	ip, [pc, #660]	; 801bdb8 <_malloc_r+0x34c>
 801bb26:	4564      	cmp	r4, ip
 801bb28:	d071      	beq.n	801bc0e <_malloc_r+0x1a2>
 801bb2a:	6863      	ldr	r3, [r4, #4]
 801bb2c:	f023 0303 	bic.w	r3, r3, #3
 801bb30:	1b5a      	subs	r2, r3, r5
 801bb32:	2a0f      	cmp	r2, #15
 801bb34:	f300 8144 	bgt.w	801bdc0 <_malloc_r+0x354>
 801bb38:	2a00      	cmp	r2, #0
 801bb3a:	e9c7 cc04 	strd	ip, ip, [r7, #16]
 801bb3e:	f280 8126 	bge.w	801bd8e <_malloc_r+0x322>
 801bb42:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801bb46:	f080 8169 	bcs.w	801be1c <_malloc_r+0x3b0>
 801bb4a:	08db      	lsrs	r3, r3, #3
 801bb4c:	1c59      	adds	r1, r3, #1
 801bb4e:	687a      	ldr	r2, [r7, #4]
 801bb50:	f857 8031 	ldr.w	r8, [r7, r1, lsl #3]
 801bb54:	f8c4 8008 	str.w	r8, [r4, #8]
 801bb58:	f04f 0e01 	mov.w	lr, #1
 801bb5c:	109b      	asrs	r3, r3, #2
 801bb5e:	fa0e f303 	lsl.w	r3, lr, r3
 801bb62:	eb07 0ec1 	add.w	lr, r7, r1, lsl #3
 801bb66:	4313      	orrs	r3, r2
 801bb68:	f1ae 0208 	sub.w	r2, lr, #8
 801bb6c:	60e2      	str	r2, [r4, #12]
 801bb6e:	607b      	str	r3, [r7, #4]
 801bb70:	f847 4031 	str.w	r4, [r7, r1, lsl #3]
 801bb74:	f8c8 400c 	str.w	r4, [r8, #12]
 801bb78:	1082      	asrs	r2, r0, #2
 801bb7a:	2401      	movs	r4, #1
 801bb7c:	4094      	lsls	r4, r2
 801bb7e:	429c      	cmp	r4, r3
 801bb80:	d84b      	bhi.n	801bc1a <_malloc_r+0x1ae>
 801bb82:	421c      	tst	r4, r3
 801bb84:	d106      	bne.n	801bb94 <_malloc_r+0x128>
 801bb86:	f020 0003 	bic.w	r0, r0, #3
 801bb8a:	0064      	lsls	r4, r4, #1
 801bb8c:	421c      	tst	r4, r3
 801bb8e:	f100 0004 	add.w	r0, r0, #4
 801bb92:	d0fa      	beq.n	801bb8a <_malloc_r+0x11e>
 801bb94:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
 801bb98:	46ce      	mov	lr, r9
 801bb9a:	4680      	mov	r8, r0
 801bb9c:	f8de 300c 	ldr.w	r3, [lr, #12]
 801bba0:	459e      	cmp	lr, r3
 801bba2:	d107      	bne.n	801bbb4 <_malloc_r+0x148>
 801bba4:	e122      	b.n	801bdec <_malloc_r+0x380>
 801bba6:	2a00      	cmp	r2, #0
 801bba8:	f280 8129 	bge.w	801bdfe <_malloc_r+0x392>
 801bbac:	68db      	ldr	r3, [r3, #12]
 801bbae:	459e      	cmp	lr, r3
 801bbb0:	f000 811c 	beq.w	801bdec <_malloc_r+0x380>
 801bbb4:	6859      	ldr	r1, [r3, #4]
 801bbb6:	f021 0103 	bic.w	r1, r1, #3
 801bbba:	1b4a      	subs	r2, r1, r5
 801bbbc:	2a0f      	cmp	r2, #15
 801bbbe:	ddf2      	ble.n	801bba6 <_malloc_r+0x13a>
 801bbc0:	e9d3 8e02 	ldrd	r8, lr, [r3, #8]
 801bbc4:	195c      	adds	r4, r3, r5
 801bbc6:	f045 0501 	orr.w	r5, r5, #1
 801bbca:	605d      	str	r5, [r3, #4]
 801bbcc:	f042 0501 	orr.w	r5, r2, #1
 801bbd0:	f8c8 e00c 	str.w	lr, [r8, #12]
 801bbd4:	4630      	mov	r0, r6
 801bbd6:	f8ce 8008 	str.w	r8, [lr, #8]
 801bbda:	e9c7 4404 	strd	r4, r4, [r7, #16]
 801bbde:	e9c4 cc02 	strd	ip, ip, [r4, #8]
 801bbe2:	6065      	str	r5, [r4, #4]
 801bbe4:	505a      	str	r2, [r3, r1]
 801bbe6:	9301      	str	r3, [sp, #4]
 801bbe8:	f000 faca 	bl	801c180 <__malloc_unlock>
 801bbec:	9b01      	ldr	r3, [sp, #4]
 801bbee:	f103 0408 	add.w	r4, r3, #8
 801bbf2:	e763      	b.n	801babc <_malloc_r+0x50>
 801bbf4:	2400      	movs	r4, #0
 801bbf6:	230c      	movs	r3, #12
 801bbf8:	4620      	mov	r0, r4
 801bbfa:	6033      	str	r3, [r6, #0]
 801bbfc:	b003      	add	sp, #12
 801bbfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bc02:	f44f 7300 	mov.w	r3, #512	; 0x200
 801bc06:	2040      	movs	r0, #64	; 0x40
 801bc08:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
 801bc0c:	e773      	b.n	801baf6 <_malloc_r+0x8a>
 801bc0e:	687b      	ldr	r3, [r7, #4]
 801bc10:	1082      	asrs	r2, r0, #2
 801bc12:	2401      	movs	r4, #1
 801bc14:	4094      	lsls	r4, r2
 801bc16:	429c      	cmp	r4, r3
 801bc18:	d9b3      	bls.n	801bb82 <_malloc_r+0x116>
 801bc1a:	68bc      	ldr	r4, [r7, #8]
 801bc1c:	6863      	ldr	r3, [r4, #4]
 801bc1e:	f023 0903 	bic.w	r9, r3, #3
 801bc22:	45a9      	cmp	r9, r5
 801bc24:	d303      	bcc.n	801bc2e <_malloc_r+0x1c2>
 801bc26:	eba9 0305 	sub.w	r3, r9, r5
 801bc2a:	2b0f      	cmp	r3, #15
 801bc2c:	dc7b      	bgt.n	801bd26 <_malloc_r+0x2ba>
 801bc2e:	4b5e      	ldr	r3, [pc, #376]	; (801bda8 <_malloc_r+0x33c>)
 801bc30:	f8df a188 	ldr.w	sl, [pc, #392]	; 801bdbc <_malloc_r+0x350>
 801bc34:	681a      	ldr	r2, [r3, #0]
 801bc36:	f8da 3000 	ldr.w	r3, [sl]
 801bc3a:	3301      	adds	r3, #1
 801bc3c:	eb05 0802 	add.w	r8, r5, r2
 801bc40:	f000 8148 	beq.w	801bed4 <_malloc_r+0x468>
 801bc44:	f508 5880 	add.w	r8, r8, #4096	; 0x1000
 801bc48:	f108 080f 	add.w	r8, r8, #15
 801bc4c:	f428 687f 	bic.w	r8, r8, #4080	; 0xff0
 801bc50:	f028 080f 	bic.w	r8, r8, #15
 801bc54:	4641      	mov	r1, r8
 801bc56:	4630      	mov	r0, r6
 801bc58:	f000 fc86 	bl	801c568 <_sbrk_r>
 801bc5c:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 801bc60:	4683      	mov	fp, r0
 801bc62:	f000 8104 	beq.w	801be6e <_malloc_r+0x402>
 801bc66:	eb04 0009 	add.w	r0, r4, r9
 801bc6a:	4558      	cmp	r0, fp
 801bc6c:	f200 80fd 	bhi.w	801be6a <_malloc_r+0x3fe>
 801bc70:	4a4e      	ldr	r2, [pc, #312]	; (801bdac <_malloc_r+0x340>)
 801bc72:	6813      	ldr	r3, [r2, #0]
 801bc74:	4443      	add	r3, r8
 801bc76:	6013      	str	r3, [r2, #0]
 801bc78:	f000 814d 	beq.w	801bf16 <_malloc_r+0x4aa>
 801bc7c:	f8da 1000 	ldr.w	r1, [sl]
 801bc80:	3101      	adds	r1, #1
 801bc82:	bf1b      	ittet	ne
 801bc84:	ebab 0000 	subne.w	r0, fp, r0
 801bc88:	181b      	addne	r3, r3, r0
 801bc8a:	f8ca b000 	streq.w	fp, [sl]
 801bc8e:	6013      	strne	r3, [r2, #0]
 801bc90:	f01b 0307 	ands.w	r3, fp, #7
 801bc94:	f000 8134 	beq.w	801bf00 <_malloc_r+0x494>
 801bc98:	f1c3 0108 	rsb	r1, r3, #8
 801bc9c:	f5c3 5380 	rsb	r3, r3, #4096	; 0x1000
 801bca0:	448b      	add	fp, r1
 801bca2:	3308      	adds	r3, #8
 801bca4:	44d8      	add	r8, fp
 801bca6:	f3c8 080b 	ubfx	r8, r8, #0, #12
 801bcaa:	eba3 0808 	sub.w	r8, r3, r8
 801bcae:	4641      	mov	r1, r8
 801bcb0:	4630      	mov	r0, r6
 801bcb2:	9201      	str	r2, [sp, #4]
 801bcb4:	f000 fc58 	bl	801c568 <_sbrk_r>
 801bcb8:	1c43      	adds	r3, r0, #1
 801bcba:	9a01      	ldr	r2, [sp, #4]
 801bcbc:	f000 8146 	beq.w	801bf4c <_malloc_r+0x4e0>
 801bcc0:	eba0 010b 	sub.w	r1, r0, fp
 801bcc4:	4441      	add	r1, r8
 801bcc6:	f041 0101 	orr.w	r1, r1, #1
 801bcca:	6813      	ldr	r3, [r2, #0]
 801bccc:	f8c7 b008 	str.w	fp, [r7, #8]
 801bcd0:	4443      	add	r3, r8
 801bcd2:	42bc      	cmp	r4, r7
 801bcd4:	f8cb 1004 	str.w	r1, [fp, #4]
 801bcd8:	6013      	str	r3, [r2, #0]
 801bcda:	d015      	beq.n	801bd08 <_malloc_r+0x29c>
 801bcdc:	f1b9 0f0f 	cmp.w	r9, #15
 801bce0:	f240 8130 	bls.w	801bf44 <_malloc_r+0x4d8>
 801bce4:	6860      	ldr	r0, [r4, #4]
 801bce6:	f1a9 010c 	sub.w	r1, r9, #12
 801bcea:	f021 0107 	bic.w	r1, r1, #7
 801bcee:	f000 0001 	and.w	r0, r0, #1
 801bcf2:	eb04 0c01 	add.w	ip, r4, r1
 801bcf6:	4308      	orrs	r0, r1
 801bcf8:	f04f 0e05 	mov.w	lr, #5
 801bcfc:	290f      	cmp	r1, #15
 801bcfe:	6060      	str	r0, [r4, #4]
 801bd00:	e9cc ee01 	strd	lr, lr, [ip, #4]
 801bd04:	f200 813a 	bhi.w	801bf7c <_malloc_r+0x510>
 801bd08:	4a29      	ldr	r2, [pc, #164]	; (801bdb0 <_malloc_r+0x344>)
 801bd0a:	482a      	ldr	r0, [pc, #168]	; (801bdb4 <_malloc_r+0x348>)
 801bd0c:	6811      	ldr	r1, [r2, #0]
 801bd0e:	68bc      	ldr	r4, [r7, #8]
 801bd10:	428b      	cmp	r3, r1
 801bd12:	6801      	ldr	r1, [r0, #0]
 801bd14:	bf88      	it	hi
 801bd16:	6013      	strhi	r3, [r2, #0]
 801bd18:	6862      	ldr	r2, [r4, #4]
 801bd1a:	428b      	cmp	r3, r1
 801bd1c:	f022 0203 	bic.w	r2, r2, #3
 801bd20:	bf88      	it	hi
 801bd22:	6003      	strhi	r3, [r0, #0]
 801bd24:	e0a7      	b.n	801be76 <_malloc_r+0x40a>
 801bd26:	1962      	adds	r2, r4, r5
 801bd28:	f043 0301 	orr.w	r3, r3, #1
 801bd2c:	f045 0501 	orr.w	r5, r5, #1
 801bd30:	6065      	str	r5, [r4, #4]
 801bd32:	4630      	mov	r0, r6
 801bd34:	60ba      	str	r2, [r7, #8]
 801bd36:	6053      	str	r3, [r2, #4]
 801bd38:	f000 fa22 	bl	801c180 <__malloc_unlock>
 801bd3c:	3408      	adds	r4, #8
 801bd3e:	4620      	mov	r0, r4
 801bd40:	b003      	add	sp, #12
 801bd42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd46:	4423      	add	r3, r4
 801bd48:	68e1      	ldr	r1, [r4, #12]
 801bd4a:	685a      	ldr	r2, [r3, #4]
 801bd4c:	68a5      	ldr	r5, [r4, #8]
 801bd4e:	f042 0201 	orr.w	r2, r2, #1
 801bd52:	60e9      	str	r1, [r5, #12]
 801bd54:	4630      	mov	r0, r6
 801bd56:	608d      	str	r5, [r1, #8]
 801bd58:	605a      	str	r2, [r3, #4]
 801bd5a:	f000 fa11 	bl	801c180 <__malloc_unlock>
 801bd5e:	3408      	adds	r4, #8
 801bd60:	4620      	mov	r0, r4
 801bd62:	b003      	add	sp, #12
 801bd64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd68:	68dc      	ldr	r4, [r3, #12]
 801bd6a:	42a3      	cmp	r3, r4
 801bd6c:	bf08      	it	eq
 801bd6e:	3002      	addeq	r0, #2
 801bd70:	f43f aed6 	beq.w	801bb20 <_malloc_r+0xb4>
 801bd74:	e692      	b.n	801ba9c <_malloc_r+0x30>
 801bd76:	2b14      	cmp	r3, #20
 801bd78:	d971      	bls.n	801be5e <_malloc_r+0x3f2>
 801bd7a:	2b54      	cmp	r3, #84	; 0x54
 801bd7c:	f200 80ad 	bhi.w	801beda <_malloc_r+0x46e>
 801bd80:	0b2b      	lsrs	r3, r5, #12
 801bd82:	f103 006f 	add.w	r0, r3, #111	; 0x6f
 801bd86:	f103 0c6e 	add.w	ip, r3, #110	; 0x6e
 801bd8a:	00c3      	lsls	r3, r0, #3
 801bd8c:	e6b3      	b.n	801baf6 <_malloc_r+0x8a>
 801bd8e:	4423      	add	r3, r4
 801bd90:	4630      	mov	r0, r6
 801bd92:	685a      	ldr	r2, [r3, #4]
 801bd94:	f042 0201 	orr.w	r2, r2, #1
 801bd98:	605a      	str	r2, [r3, #4]
 801bd9a:	3408      	adds	r4, #8
 801bd9c:	f000 f9f0 	bl	801c180 <__malloc_unlock>
 801bda0:	e68c      	b.n	801babc <_malloc_r+0x50>
 801bda2:	bf00      	nop
 801bda4:	200037e0 	.word	0x200037e0
 801bda8:	200008d8 	.word	0x200008d8
 801bdac:	200008a8 	.word	0x200008a8
 801bdb0:	200008d0 	.word	0x200008d0
 801bdb4:	200008d4 	.word	0x200008d4
 801bdb8:	200037e8 	.word	0x200037e8
 801bdbc:	20003be8 	.word	0x20003be8
 801bdc0:	1961      	adds	r1, r4, r5
 801bdc2:	f045 0e01 	orr.w	lr, r5, #1
 801bdc6:	f042 0501 	orr.w	r5, r2, #1
 801bdca:	f8c4 e004 	str.w	lr, [r4, #4]
 801bdce:	4630      	mov	r0, r6
 801bdd0:	e9c7 1104 	strd	r1, r1, [r7, #16]
 801bdd4:	e9c1 cc02 	strd	ip, ip, [r1, #8]
 801bdd8:	604d      	str	r5, [r1, #4]
 801bdda:	50e2      	str	r2, [r4, r3]
 801bddc:	f000 f9d0 	bl	801c180 <__malloc_unlock>
 801bde0:	3408      	adds	r4, #8
 801bde2:	e66b      	b.n	801babc <_malloc_r+0x50>
 801bde4:	08e8      	lsrs	r0, r5, #3
 801bde6:	f105 0308 	add.w	r3, r5, #8
 801bdea:	e64f      	b.n	801ba8c <_malloc_r+0x20>
 801bdec:	f108 0801 	add.w	r8, r8, #1
 801bdf0:	f018 0f03 	tst.w	r8, #3
 801bdf4:	f10e 0e08 	add.w	lr, lr, #8
 801bdf8:	f47f aed0 	bne.w	801bb9c <_malloc_r+0x130>
 801bdfc:	e052      	b.n	801bea4 <_malloc_r+0x438>
 801bdfe:	4419      	add	r1, r3
 801be00:	461c      	mov	r4, r3
 801be02:	684a      	ldr	r2, [r1, #4]
 801be04:	68db      	ldr	r3, [r3, #12]
 801be06:	f854 5f08 	ldr.w	r5, [r4, #8]!
 801be0a:	f042 0201 	orr.w	r2, r2, #1
 801be0e:	604a      	str	r2, [r1, #4]
 801be10:	4630      	mov	r0, r6
 801be12:	60eb      	str	r3, [r5, #12]
 801be14:	609d      	str	r5, [r3, #8]
 801be16:	f000 f9b3 	bl	801c180 <__malloc_unlock>
 801be1a:	e64f      	b.n	801babc <_malloc_r+0x50>
 801be1c:	0a5a      	lsrs	r2, r3, #9
 801be1e:	2a04      	cmp	r2, #4
 801be20:	d935      	bls.n	801be8e <_malloc_r+0x422>
 801be22:	2a14      	cmp	r2, #20
 801be24:	d86f      	bhi.n	801bf06 <_malloc_r+0x49a>
 801be26:	f102 015c 	add.w	r1, r2, #92	; 0x5c
 801be2a:	00c9      	lsls	r1, r1, #3
 801be2c:	325b      	adds	r2, #91	; 0x5b
 801be2e:	eb07 0e01 	add.w	lr, r7, r1
 801be32:	5879      	ldr	r1, [r7, r1]
 801be34:	f1ae 0e08 	sub.w	lr, lr, #8
 801be38:	458e      	cmp	lr, r1
 801be3a:	d058      	beq.n	801beee <_malloc_r+0x482>
 801be3c:	684a      	ldr	r2, [r1, #4]
 801be3e:	f022 0203 	bic.w	r2, r2, #3
 801be42:	429a      	cmp	r2, r3
 801be44:	d902      	bls.n	801be4c <_malloc_r+0x3e0>
 801be46:	6889      	ldr	r1, [r1, #8]
 801be48:	458e      	cmp	lr, r1
 801be4a:	d1f7      	bne.n	801be3c <_malloc_r+0x3d0>
 801be4c:	f8d1 e00c 	ldr.w	lr, [r1, #12]
 801be50:	687b      	ldr	r3, [r7, #4]
 801be52:	e9c4 1e02 	strd	r1, lr, [r4, #8]
 801be56:	f8ce 4008 	str.w	r4, [lr, #8]
 801be5a:	60cc      	str	r4, [r1, #12]
 801be5c:	e68c      	b.n	801bb78 <_malloc_r+0x10c>
 801be5e:	f103 005c 	add.w	r0, r3, #92	; 0x5c
 801be62:	f103 0c5b 	add.w	ip, r3, #91	; 0x5b
 801be66:	00c3      	lsls	r3, r0, #3
 801be68:	e645      	b.n	801baf6 <_malloc_r+0x8a>
 801be6a:	42bc      	cmp	r4, r7
 801be6c:	d072      	beq.n	801bf54 <_malloc_r+0x4e8>
 801be6e:	68bc      	ldr	r4, [r7, #8]
 801be70:	6862      	ldr	r2, [r4, #4]
 801be72:	f022 0203 	bic.w	r2, r2, #3
 801be76:	4295      	cmp	r5, r2
 801be78:	eba2 0305 	sub.w	r3, r2, r5
 801be7c:	d802      	bhi.n	801be84 <_malloc_r+0x418>
 801be7e:	2b0f      	cmp	r3, #15
 801be80:	f73f af51 	bgt.w	801bd26 <_malloc_r+0x2ba>
 801be84:	4630      	mov	r0, r6
 801be86:	f000 f97b 	bl	801c180 <__malloc_unlock>
 801be8a:	2400      	movs	r4, #0
 801be8c:	e616      	b.n	801babc <_malloc_r+0x50>
 801be8e:	099a      	lsrs	r2, r3, #6
 801be90:	f102 0139 	add.w	r1, r2, #57	; 0x39
 801be94:	00c9      	lsls	r1, r1, #3
 801be96:	3238      	adds	r2, #56	; 0x38
 801be98:	e7c9      	b.n	801be2e <_malloc_r+0x3c2>
 801be9a:	f8d9 9000 	ldr.w	r9, [r9]
 801be9e:	4599      	cmp	r9, r3
 801bea0:	f040 8083 	bne.w	801bfaa <_malloc_r+0x53e>
 801bea4:	f010 0f03 	tst.w	r0, #3
 801bea8:	f1a9 0308 	sub.w	r3, r9, #8
 801beac:	f100 30ff 	add.w	r0, r0, #4294967295	; 0xffffffff
 801beb0:	d1f3      	bne.n	801be9a <_malloc_r+0x42e>
 801beb2:	687b      	ldr	r3, [r7, #4]
 801beb4:	ea23 0304 	bic.w	r3, r3, r4
 801beb8:	607b      	str	r3, [r7, #4]
 801beba:	0064      	lsls	r4, r4, #1
 801bebc:	429c      	cmp	r4, r3
 801bebe:	f63f aeac 	bhi.w	801bc1a <_malloc_r+0x1ae>
 801bec2:	b91c      	cbnz	r4, 801becc <_malloc_r+0x460>
 801bec4:	e6a9      	b.n	801bc1a <_malloc_r+0x1ae>
 801bec6:	0064      	lsls	r4, r4, #1
 801bec8:	f108 0804 	add.w	r8, r8, #4
 801becc:	421c      	tst	r4, r3
 801bece:	d0fa      	beq.n	801bec6 <_malloc_r+0x45a>
 801bed0:	4640      	mov	r0, r8
 801bed2:	e65f      	b.n	801bb94 <_malloc_r+0x128>
 801bed4:	f108 0810 	add.w	r8, r8, #16
 801bed8:	e6bc      	b.n	801bc54 <_malloc_r+0x1e8>
 801beda:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
 801bede:	d826      	bhi.n	801bf2e <_malloc_r+0x4c2>
 801bee0:	0beb      	lsrs	r3, r5, #15
 801bee2:	f103 0078 	add.w	r0, r3, #120	; 0x78
 801bee6:	f103 0c77 	add.w	ip, r3, #119	; 0x77
 801beea:	00c3      	lsls	r3, r0, #3
 801beec:	e603      	b.n	801baf6 <_malloc_r+0x8a>
 801beee:	687b      	ldr	r3, [r7, #4]
 801bef0:	1092      	asrs	r2, r2, #2
 801bef2:	f04f 0801 	mov.w	r8, #1
 801bef6:	fa08 f202 	lsl.w	r2, r8, r2
 801befa:	4313      	orrs	r3, r2
 801befc:	607b      	str	r3, [r7, #4]
 801befe:	e7a8      	b.n	801be52 <_malloc_r+0x3e6>
 801bf00:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 801bf04:	e6ce      	b.n	801bca4 <_malloc_r+0x238>
 801bf06:	2a54      	cmp	r2, #84	; 0x54
 801bf08:	d829      	bhi.n	801bf5e <_malloc_r+0x4f2>
 801bf0a:	0b1a      	lsrs	r2, r3, #12
 801bf0c:	f102 016f 	add.w	r1, r2, #111	; 0x6f
 801bf10:	00c9      	lsls	r1, r1, #3
 801bf12:	326e      	adds	r2, #110	; 0x6e
 801bf14:	e78b      	b.n	801be2e <_malloc_r+0x3c2>
 801bf16:	f3c0 010b 	ubfx	r1, r0, #0, #12
 801bf1a:	2900      	cmp	r1, #0
 801bf1c:	f47f aeae 	bne.w	801bc7c <_malloc_r+0x210>
 801bf20:	eb09 0208 	add.w	r2, r9, r8
 801bf24:	68b9      	ldr	r1, [r7, #8]
 801bf26:	f042 0201 	orr.w	r2, r2, #1
 801bf2a:	604a      	str	r2, [r1, #4]
 801bf2c:	e6ec      	b.n	801bd08 <_malloc_r+0x29c>
 801bf2e:	f240 5254 	movw	r2, #1364	; 0x554
 801bf32:	4293      	cmp	r3, r2
 801bf34:	d81c      	bhi.n	801bf70 <_malloc_r+0x504>
 801bf36:	0cab      	lsrs	r3, r5, #18
 801bf38:	f103 007d 	add.w	r0, r3, #125	; 0x7d
 801bf3c:	f103 0c7c 	add.w	ip, r3, #124	; 0x7c
 801bf40:	00c3      	lsls	r3, r0, #3
 801bf42:	e5d8      	b.n	801baf6 <_malloc_r+0x8a>
 801bf44:	2301      	movs	r3, #1
 801bf46:	f8cb 3004 	str.w	r3, [fp, #4]
 801bf4a:	e79b      	b.n	801be84 <_malloc_r+0x418>
 801bf4c:	2101      	movs	r1, #1
 801bf4e:	f04f 0800 	mov.w	r8, #0
 801bf52:	e6ba      	b.n	801bcca <_malloc_r+0x25e>
 801bf54:	4a16      	ldr	r2, [pc, #88]	; (801bfb0 <_malloc_r+0x544>)
 801bf56:	6813      	ldr	r3, [r2, #0]
 801bf58:	4443      	add	r3, r8
 801bf5a:	6013      	str	r3, [r2, #0]
 801bf5c:	e68e      	b.n	801bc7c <_malloc_r+0x210>
 801bf5e:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 801bf62:	d814      	bhi.n	801bf8e <_malloc_r+0x522>
 801bf64:	0bda      	lsrs	r2, r3, #15
 801bf66:	f102 0178 	add.w	r1, r2, #120	; 0x78
 801bf6a:	00c9      	lsls	r1, r1, #3
 801bf6c:	3277      	adds	r2, #119	; 0x77
 801bf6e:	e75e      	b.n	801be2e <_malloc_r+0x3c2>
 801bf70:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
 801bf74:	207f      	movs	r0, #127	; 0x7f
 801bf76:	f04f 0c7e 	mov.w	ip, #126	; 0x7e
 801bf7a:	e5bc      	b.n	801baf6 <_malloc_r+0x8a>
 801bf7c:	f104 0108 	add.w	r1, r4, #8
 801bf80:	4630      	mov	r0, r6
 801bf82:	9201      	str	r2, [sp, #4]
 801bf84:	f003 f800 	bl	801ef88 <_free_r>
 801bf88:	9a01      	ldr	r2, [sp, #4]
 801bf8a:	6813      	ldr	r3, [r2, #0]
 801bf8c:	e6bc      	b.n	801bd08 <_malloc_r+0x29c>
 801bf8e:	f240 5154 	movw	r1, #1364	; 0x554
 801bf92:	428a      	cmp	r2, r1
 801bf94:	d805      	bhi.n	801bfa2 <_malloc_r+0x536>
 801bf96:	0c9a      	lsrs	r2, r3, #18
 801bf98:	f102 017d 	add.w	r1, r2, #125	; 0x7d
 801bf9c:	00c9      	lsls	r1, r1, #3
 801bf9e:	327c      	adds	r2, #124	; 0x7c
 801bfa0:	e745      	b.n	801be2e <_malloc_r+0x3c2>
 801bfa2:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 801bfa6:	227e      	movs	r2, #126	; 0x7e
 801bfa8:	e741      	b.n	801be2e <_malloc_r+0x3c2>
 801bfaa:	687b      	ldr	r3, [r7, #4]
 801bfac:	e785      	b.n	801beba <_malloc_r+0x44e>
 801bfae:	bf00      	nop
 801bfb0:	200008a8 	.word	0x200008a8

0801bfb4 <memcmp>:
 801bfb4:	2a03      	cmp	r2, #3
 801bfb6:	b470      	push	{r4, r5, r6}
 801bfb8:	d914      	bls.n	801bfe4 <memcmp+0x30>
 801bfba:	ea40 0501 	orr.w	r5, r0, r1
 801bfbe:	07ad      	lsls	r5, r5, #30
 801bfc0:	4604      	mov	r4, r0
 801bfc2:	460b      	mov	r3, r1
 801bfc4:	d122      	bne.n	801c00c <memcmp+0x58>
 801bfc6:	681d      	ldr	r5, [r3, #0]
 801bfc8:	6826      	ldr	r6, [r4, #0]
 801bfca:	42ae      	cmp	r6, r5
 801bfcc:	4619      	mov	r1, r3
 801bfce:	4620      	mov	r0, r4
 801bfd0:	f103 0304 	add.w	r3, r3, #4
 801bfd4:	f104 0404 	add.w	r4, r4, #4
 801bfd8:	d118      	bne.n	801c00c <memcmp+0x58>
 801bfda:	3a04      	subs	r2, #4
 801bfdc:	2a03      	cmp	r2, #3
 801bfde:	4620      	mov	r0, r4
 801bfe0:	4619      	mov	r1, r3
 801bfe2:	d8f0      	bhi.n	801bfc6 <memcmp+0x12>
 801bfe4:	1e54      	subs	r4, r2, #1
 801bfe6:	b172      	cbz	r2, 801c006 <memcmp+0x52>
 801bfe8:	7802      	ldrb	r2, [r0, #0]
 801bfea:	780b      	ldrb	r3, [r1, #0]
 801bfec:	429a      	cmp	r2, r3
 801bfee:	bf08      	it	eq
 801bff0:	1864      	addeq	r4, r4, r1
 801bff2:	d006      	beq.n	801c002 <memcmp+0x4e>
 801bff4:	e00c      	b.n	801c010 <memcmp+0x5c>
 801bff6:	f810 2f01 	ldrb.w	r2, [r0, #1]!
 801bffa:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 801bffe:	429a      	cmp	r2, r3
 801c000:	d106      	bne.n	801c010 <memcmp+0x5c>
 801c002:	42a1      	cmp	r1, r4
 801c004:	d1f7      	bne.n	801bff6 <memcmp+0x42>
 801c006:	2000      	movs	r0, #0
 801c008:	bc70      	pop	{r4, r5, r6}
 801c00a:	4770      	bx	lr
 801c00c:	1e54      	subs	r4, r2, #1
 801c00e:	e7eb      	b.n	801bfe8 <memcmp+0x34>
 801c010:	1ad0      	subs	r0, r2, r3
 801c012:	bc70      	pop	{r4, r5, r6}
 801c014:	4770      	bx	lr
 801c016:	bf00      	nop

0801c018 <memmove>:
 801c018:	4288      	cmp	r0, r1
 801c01a:	b4f0      	push	{r4, r5, r6, r7}
 801c01c:	d90d      	bls.n	801c03a <memmove+0x22>
 801c01e:	188b      	adds	r3, r1, r2
 801c020:	4283      	cmp	r3, r0
 801c022:	d90a      	bls.n	801c03a <memmove+0x22>
 801c024:	1884      	adds	r4, r0, r2
 801c026:	b132      	cbz	r2, 801c036 <memmove+0x1e>
 801c028:	4622      	mov	r2, r4
 801c02a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 801c02e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 801c032:	4299      	cmp	r1, r3
 801c034:	d1f9      	bne.n	801c02a <memmove+0x12>
 801c036:	bcf0      	pop	{r4, r5, r6, r7}
 801c038:	4770      	bx	lr
 801c03a:	2a0f      	cmp	r2, #15
 801c03c:	d949      	bls.n	801c0d2 <memmove+0xba>
 801c03e:	ea40 0301 	orr.w	r3, r0, r1
 801c042:	079b      	lsls	r3, r3, #30
 801c044:	d147      	bne.n	801c0d6 <memmove+0xbe>
 801c046:	f1a2 0310 	sub.w	r3, r2, #16
 801c04a:	091b      	lsrs	r3, r3, #4
 801c04c:	f101 0720 	add.w	r7, r1, #32
 801c050:	eb07 1703 	add.w	r7, r7, r3, lsl #4
 801c054:	f101 0410 	add.w	r4, r1, #16
 801c058:	f100 0510 	add.w	r5, r0, #16
 801c05c:	f854 6c10 	ldr.w	r6, [r4, #-16]
 801c060:	f845 6c10 	str.w	r6, [r5, #-16]
 801c064:	f854 6c0c 	ldr.w	r6, [r4, #-12]
 801c068:	f845 6c0c 	str.w	r6, [r5, #-12]
 801c06c:	f854 6c08 	ldr.w	r6, [r4, #-8]
 801c070:	f845 6c08 	str.w	r6, [r5, #-8]
 801c074:	f854 6c04 	ldr.w	r6, [r4, #-4]
 801c078:	f845 6c04 	str.w	r6, [r5, #-4]
 801c07c:	3410      	adds	r4, #16
 801c07e:	42bc      	cmp	r4, r7
 801c080:	f105 0510 	add.w	r5, r5, #16
 801c084:	d1ea      	bne.n	801c05c <memmove+0x44>
 801c086:	3301      	adds	r3, #1
 801c088:	f002 050f 	and.w	r5, r2, #15
 801c08c:	011b      	lsls	r3, r3, #4
 801c08e:	2d03      	cmp	r5, #3
 801c090:	4419      	add	r1, r3
 801c092:	4403      	add	r3, r0
 801c094:	d921      	bls.n	801c0da <memmove+0xc2>
 801c096:	1f1f      	subs	r7, r3, #4
 801c098:	460e      	mov	r6, r1
 801c09a:	462c      	mov	r4, r5
 801c09c:	3c04      	subs	r4, #4
 801c09e:	f856 cb04 	ldr.w	ip, [r6], #4
 801c0a2:	f847 cf04 	str.w	ip, [r7, #4]!
 801c0a6:	2c03      	cmp	r4, #3
 801c0a8:	d8f8      	bhi.n	801c09c <memmove+0x84>
 801c0aa:	1f2c      	subs	r4, r5, #4
 801c0ac:	f024 0403 	bic.w	r4, r4, #3
 801c0b0:	3404      	adds	r4, #4
 801c0b2:	4423      	add	r3, r4
 801c0b4:	4421      	add	r1, r4
 801c0b6:	f002 0203 	and.w	r2, r2, #3
 801c0ba:	2a00      	cmp	r2, #0
 801c0bc:	d0bb      	beq.n	801c036 <memmove+0x1e>
 801c0be:	3b01      	subs	r3, #1
 801c0c0:	440a      	add	r2, r1
 801c0c2:	f811 4b01 	ldrb.w	r4, [r1], #1
 801c0c6:	f803 4f01 	strb.w	r4, [r3, #1]!
 801c0ca:	4291      	cmp	r1, r2
 801c0cc:	d1f9      	bne.n	801c0c2 <memmove+0xaa>
 801c0ce:	bcf0      	pop	{r4, r5, r6, r7}
 801c0d0:	4770      	bx	lr
 801c0d2:	4603      	mov	r3, r0
 801c0d4:	e7f1      	b.n	801c0ba <memmove+0xa2>
 801c0d6:	4603      	mov	r3, r0
 801c0d8:	e7f1      	b.n	801c0be <memmove+0xa6>
 801c0da:	462a      	mov	r2, r5
 801c0dc:	e7ed      	b.n	801c0ba <memmove+0xa2>
 801c0de:	bf00      	nop

0801c0e0 <memset>:
 801c0e0:	b4f0      	push	{r4, r5, r6, r7}
 801c0e2:	0786      	lsls	r6, r0, #30
 801c0e4:	d043      	beq.n	801c16e <memset+0x8e>
 801c0e6:	1e54      	subs	r4, r2, #1
 801c0e8:	2a00      	cmp	r2, #0
 801c0ea:	d03e      	beq.n	801c16a <memset+0x8a>
 801c0ec:	b2ca      	uxtb	r2, r1
 801c0ee:	4603      	mov	r3, r0
 801c0f0:	e002      	b.n	801c0f8 <memset+0x18>
 801c0f2:	f114 34ff 	adds.w	r4, r4, #4294967295	; 0xffffffff
 801c0f6:	d338      	bcc.n	801c16a <memset+0x8a>
 801c0f8:	f803 2b01 	strb.w	r2, [r3], #1
 801c0fc:	079d      	lsls	r5, r3, #30
 801c0fe:	d1f8      	bne.n	801c0f2 <memset+0x12>
 801c100:	2c03      	cmp	r4, #3
 801c102:	d92b      	bls.n	801c15c <memset+0x7c>
 801c104:	b2cd      	uxtb	r5, r1
 801c106:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
 801c10a:	2c0f      	cmp	r4, #15
 801c10c:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
 801c110:	d916      	bls.n	801c140 <memset+0x60>
 801c112:	f1a4 0710 	sub.w	r7, r4, #16
 801c116:	093f      	lsrs	r7, r7, #4
 801c118:	f103 0620 	add.w	r6, r3, #32
 801c11c:	eb06 1607 	add.w	r6, r6, r7, lsl #4
 801c120:	f103 0210 	add.w	r2, r3, #16
 801c124:	e942 5504 	strd	r5, r5, [r2, #-16]
 801c128:	e942 5502 	strd	r5, r5, [r2, #-8]
 801c12c:	3210      	adds	r2, #16
 801c12e:	42b2      	cmp	r2, r6
 801c130:	d1f8      	bne.n	801c124 <memset+0x44>
 801c132:	f004 040f 	and.w	r4, r4, #15
 801c136:	3701      	adds	r7, #1
 801c138:	2c03      	cmp	r4, #3
 801c13a:	eb03 1307 	add.w	r3, r3, r7, lsl #4
 801c13e:	d90d      	bls.n	801c15c <memset+0x7c>
 801c140:	461e      	mov	r6, r3
 801c142:	4622      	mov	r2, r4
 801c144:	3a04      	subs	r2, #4
 801c146:	2a03      	cmp	r2, #3
 801c148:	f846 5b04 	str.w	r5, [r6], #4
 801c14c:	d8fa      	bhi.n	801c144 <memset+0x64>
 801c14e:	1f22      	subs	r2, r4, #4
 801c150:	f022 0203 	bic.w	r2, r2, #3
 801c154:	3204      	adds	r2, #4
 801c156:	4413      	add	r3, r2
 801c158:	f004 0403 	and.w	r4, r4, #3
 801c15c:	b12c      	cbz	r4, 801c16a <memset+0x8a>
 801c15e:	b2c9      	uxtb	r1, r1
 801c160:	441c      	add	r4, r3
 801c162:	f803 1b01 	strb.w	r1, [r3], #1
 801c166:	429c      	cmp	r4, r3
 801c168:	d1fb      	bne.n	801c162 <memset+0x82>
 801c16a:	bcf0      	pop	{r4, r5, r6, r7}
 801c16c:	4770      	bx	lr
 801c16e:	4614      	mov	r4, r2
 801c170:	4603      	mov	r3, r0
 801c172:	e7c5      	b.n	801c100 <memset+0x20>

0801c174 <__malloc_lock>:
 801c174:	4801      	ldr	r0, [pc, #4]	; (801c17c <__malloc_lock+0x8>)
 801c176:	f7ff bc65 	b.w	801ba44 <__retarget_lock_acquire_recursive>
 801c17a:	bf00      	nop
 801c17c:	20000900 	.word	0x20000900

0801c180 <__malloc_unlock>:
 801c180:	4801      	ldr	r0, [pc, #4]	; (801c188 <__malloc_unlock+0x8>)
 801c182:	f7ff bc61 	b.w	801ba48 <__retarget_lock_release_recursive>
 801c186:	bf00      	nop
 801c188:	20000900 	.word	0x20000900

0801c18c <_putc_r>:
 801c18c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c18e:	460e      	mov	r6, r1
 801c190:	4614      	mov	r4, r2
 801c192:	4607      	mov	r7, r0
 801c194:	b108      	cbz	r0, 801c19a <_putc_r+0xe>
 801c196:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801c198:	b1bb      	cbz	r3, 801c1ca <_putc_r+0x3e>
 801c19a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801c19c:	07d8      	lsls	r0, r3, #31
 801c19e:	d402      	bmi.n	801c1a6 <_putc_r+0x1a>
 801c1a0:	89a3      	ldrh	r3, [r4, #12]
 801c1a2:	0599      	lsls	r1, r3, #22
 801c1a4:	d526      	bpl.n	801c1f4 <_putc_r+0x68>
 801c1a6:	68a3      	ldr	r3, [r4, #8]
 801c1a8:	3b01      	subs	r3, #1
 801c1aa:	2b00      	cmp	r3, #0
 801c1ac:	60a3      	str	r3, [r4, #8]
 801c1ae:	db0f      	blt.n	801c1d0 <_putc_r+0x44>
 801c1b0:	b2f5      	uxtb	r5, r6
 801c1b2:	6823      	ldr	r3, [r4, #0]
 801c1b4:	1c5a      	adds	r2, r3, #1
 801c1b6:	6022      	str	r2, [r4, #0]
 801c1b8:	701e      	strb	r6, [r3, #0]
 801c1ba:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801c1bc:	07da      	lsls	r2, r3, #31
 801c1be:	d402      	bmi.n	801c1c6 <_putc_r+0x3a>
 801c1c0:	89a3      	ldrh	r3, [r4, #12]
 801c1c2:	059b      	lsls	r3, r3, #22
 801c1c4:	d511      	bpl.n	801c1ea <_putc_r+0x5e>
 801c1c6:	4628      	mov	r0, r5
 801c1c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801c1ca:	f002 fe55 	bl	801ee78 <__sinit>
 801c1ce:	e7e4      	b.n	801c19a <_putc_r+0xe>
 801c1d0:	69a2      	ldr	r2, [r4, #24]
 801c1d2:	4293      	cmp	r3, r2
 801c1d4:	db02      	blt.n	801c1dc <_putc_r+0x50>
 801c1d6:	b2f5      	uxtb	r5, r6
 801c1d8:	2d0a      	cmp	r5, #10
 801c1da:	d1ea      	bne.n	801c1b2 <_putc_r+0x26>
 801c1dc:	4631      	mov	r1, r6
 801c1de:	4638      	mov	r0, r7
 801c1e0:	4622      	mov	r2, r4
 801c1e2:	f001 fcf9 	bl	801dbd8 <__swbuf_r>
 801c1e6:	4605      	mov	r5, r0
 801c1e8:	e7e7      	b.n	801c1ba <_putc_r+0x2e>
 801c1ea:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801c1ec:	f7ff fc2c 	bl	801ba48 <__retarget_lock_release_recursive>
 801c1f0:	4628      	mov	r0, r5
 801c1f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801c1f4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801c1f6:	f7ff fc25 	bl	801ba44 <__retarget_lock_acquire_recursive>
 801c1fa:	e7d4      	b.n	801c1a6 <_putc_r+0x1a>

0801c1fc <realloc>:
 801c1fc:	4b02      	ldr	r3, [pc, #8]	; (801c208 <realloc+0xc>)
 801c1fe:	460a      	mov	r2, r1
 801c200:	4601      	mov	r1, r0
 801c202:	6818      	ldr	r0, [r3, #0]
 801c204:	f000 b802 	b.w	801c20c <_realloc_r>
 801c208:	200033b4 	.word	0x200033b4

0801c20c <_realloc_r>:
 801c20c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c210:	4692      	mov	sl, r2
 801c212:	b083      	sub	sp, #12
 801c214:	2900      	cmp	r1, #0
 801c216:	f000 80a1 	beq.w	801c35c <_realloc_r+0x150>
 801c21a:	460d      	mov	r5, r1
 801c21c:	4680      	mov	r8, r0
 801c21e:	f10a 040b 	add.w	r4, sl, #11
 801c222:	f7ff ffa7 	bl	801c174 <__malloc_lock>
 801c226:	f855 2c04 	ldr.w	r2, [r5, #-4]
 801c22a:	2c16      	cmp	r4, #22
 801c22c:	f022 0603 	bic.w	r6, r2, #3
 801c230:	f1a5 0708 	sub.w	r7, r5, #8
 801c234:	d83e      	bhi.n	801c2b4 <_realloc_r+0xa8>
 801c236:	2410      	movs	r4, #16
 801c238:	4621      	mov	r1, r4
 801c23a:	45a2      	cmp	sl, r4
 801c23c:	d83f      	bhi.n	801c2be <_realloc_r+0xb2>
 801c23e:	428e      	cmp	r6, r1
 801c240:	eb07 0906 	add.w	r9, r7, r6
 801c244:	da74      	bge.n	801c330 <_realloc_r+0x124>
 801c246:	4bc7      	ldr	r3, [pc, #796]	; (801c564 <_realloc_r+0x358>)
 801c248:	6898      	ldr	r0, [r3, #8]
 801c24a:	4548      	cmp	r0, r9
 801c24c:	f000 80aa 	beq.w	801c3a4 <_realloc_r+0x198>
 801c250:	f8d9 0004 	ldr.w	r0, [r9, #4]
 801c254:	f020 0301 	bic.w	r3, r0, #1
 801c258:	444b      	add	r3, r9
 801c25a:	685b      	ldr	r3, [r3, #4]
 801c25c:	07db      	lsls	r3, r3, #31
 801c25e:	f140 8083 	bpl.w	801c368 <_realloc_r+0x15c>
 801c262:	07d2      	lsls	r2, r2, #31
 801c264:	d534      	bpl.n	801c2d0 <_realloc_r+0xc4>
 801c266:	4651      	mov	r1, sl
 801c268:	4640      	mov	r0, r8
 801c26a:	f7ff fbff 	bl	801ba6c <_malloc_r>
 801c26e:	4682      	mov	sl, r0
 801c270:	b1e0      	cbz	r0, 801c2ac <_realloc_r+0xa0>
 801c272:	f855 3c04 	ldr.w	r3, [r5, #-4]
 801c276:	f023 0301 	bic.w	r3, r3, #1
 801c27a:	443b      	add	r3, r7
 801c27c:	f1a0 0208 	sub.w	r2, r0, #8
 801c280:	4293      	cmp	r3, r2
 801c282:	f000 80f9 	beq.w	801c478 <_realloc_r+0x26c>
 801c286:	1f32      	subs	r2, r6, #4
 801c288:	2a24      	cmp	r2, #36	; 0x24
 801c28a:	f200 8107 	bhi.w	801c49c <_realloc_r+0x290>
 801c28e:	2a13      	cmp	r2, #19
 801c290:	6829      	ldr	r1, [r5, #0]
 801c292:	f200 80e6 	bhi.w	801c462 <_realloc_r+0x256>
 801c296:	4603      	mov	r3, r0
 801c298:	462a      	mov	r2, r5
 801c29a:	6019      	str	r1, [r3, #0]
 801c29c:	6851      	ldr	r1, [r2, #4]
 801c29e:	6059      	str	r1, [r3, #4]
 801c2a0:	6892      	ldr	r2, [r2, #8]
 801c2a2:	609a      	str	r2, [r3, #8]
 801c2a4:	4629      	mov	r1, r5
 801c2a6:	4640      	mov	r0, r8
 801c2a8:	f002 fe6e 	bl	801ef88 <_free_r>
 801c2ac:	4640      	mov	r0, r8
 801c2ae:	f7ff ff67 	bl	801c180 <__malloc_unlock>
 801c2b2:	e04f      	b.n	801c354 <_realloc_r+0x148>
 801c2b4:	f024 0407 	bic.w	r4, r4, #7
 801c2b8:	2c00      	cmp	r4, #0
 801c2ba:	4621      	mov	r1, r4
 801c2bc:	dabd      	bge.n	801c23a <_realloc_r+0x2e>
 801c2be:	f04f 0a00 	mov.w	sl, #0
 801c2c2:	230c      	movs	r3, #12
 801c2c4:	4650      	mov	r0, sl
 801c2c6:	f8c8 3000 	str.w	r3, [r8]
 801c2ca:	b003      	add	sp, #12
 801c2cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c2d0:	f855 3c08 	ldr.w	r3, [r5, #-8]
 801c2d4:	eba7 0b03 	sub.w	fp, r7, r3
 801c2d8:	f8db 2004 	ldr.w	r2, [fp, #4]
 801c2dc:	f022 0203 	bic.w	r2, r2, #3
 801c2e0:	18b3      	adds	r3, r6, r2
 801c2e2:	428b      	cmp	r3, r1
 801c2e4:	dbbf      	blt.n	801c266 <_realloc_r+0x5a>
 801c2e6:	46da      	mov	sl, fp
 801c2e8:	f8db 100c 	ldr.w	r1, [fp, #12]
 801c2ec:	f85a 0f08 	ldr.w	r0, [sl, #8]!
 801c2f0:	1f32      	subs	r2, r6, #4
 801c2f2:	2a24      	cmp	r2, #36	; 0x24
 801c2f4:	60c1      	str	r1, [r0, #12]
 801c2f6:	eb0b 0903 	add.w	r9, fp, r3
 801c2fa:	6088      	str	r0, [r1, #8]
 801c2fc:	f200 80c6 	bhi.w	801c48c <_realloc_r+0x280>
 801c300:	2a13      	cmp	r2, #19
 801c302:	6829      	ldr	r1, [r5, #0]
 801c304:	f240 80c0 	bls.w	801c488 <_realloc_r+0x27c>
 801c308:	f8cb 1008 	str.w	r1, [fp, #8]
 801c30c:	6869      	ldr	r1, [r5, #4]
 801c30e:	f8cb 100c 	str.w	r1, [fp, #12]
 801c312:	2a1b      	cmp	r2, #27
 801c314:	68a9      	ldr	r1, [r5, #8]
 801c316:	f200 80d8 	bhi.w	801c4ca <_realloc_r+0x2be>
 801c31a:	f10b 0210 	add.w	r2, fp, #16
 801c31e:	3508      	adds	r5, #8
 801c320:	6011      	str	r1, [r2, #0]
 801c322:	6869      	ldr	r1, [r5, #4]
 801c324:	6051      	str	r1, [r2, #4]
 801c326:	68a9      	ldr	r1, [r5, #8]
 801c328:	6091      	str	r1, [r2, #8]
 801c32a:	461e      	mov	r6, r3
 801c32c:	465f      	mov	r7, fp
 801c32e:	4655      	mov	r5, sl
 801c330:	687b      	ldr	r3, [r7, #4]
 801c332:	1b32      	subs	r2, r6, r4
 801c334:	2a0f      	cmp	r2, #15
 801c336:	f003 0301 	and.w	r3, r3, #1
 801c33a:	d822      	bhi.n	801c382 <_realloc_r+0x176>
 801c33c:	4333      	orrs	r3, r6
 801c33e:	607b      	str	r3, [r7, #4]
 801c340:	f8d9 3004 	ldr.w	r3, [r9, #4]
 801c344:	f043 0301 	orr.w	r3, r3, #1
 801c348:	f8c9 3004 	str.w	r3, [r9, #4]
 801c34c:	4640      	mov	r0, r8
 801c34e:	f7ff ff17 	bl	801c180 <__malloc_unlock>
 801c352:	46aa      	mov	sl, r5
 801c354:	4650      	mov	r0, sl
 801c356:	b003      	add	sp, #12
 801c358:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c35c:	4611      	mov	r1, r2
 801c35e:	b003      	add	sp, #12
 801c360:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c364:	f7ff bb82 	b.w	801ba6c <_malloc_r>
 801c368:	f020 0003 	bic.w	r0, r0, #3
 801c36c:	1833      	adds	r3, r6, r0
 801c36e:	428b      	cmp	r3, r1
 801c370:	db61      	blt.n	801c436 <_realloc_r+0x22a>
 801c372:	e9d9 1202 	ldrd	r1, r2, [r9, #8]
 801c376:	461e      	mov	r6, r3
 801c378:	60ca      	str	r2, [r1, #12]
 801c37a:	eb07 0903 	add.w	r9, r7, r3
 801c37e:	6091      	str	r1, [r2, #8]
 801c380:	e7d6      	b.n	801c330 <_realloc_r+0x124>
 801c382:	1939      	adds	r1, r7, r4
 801c384:	4323      	orrs	r3, r4
 801c386:	f042 0201 	orr.w	r2, r2, #1
 801c38a:	607b      	str	r3, [r7, #4]
 801c38c:	604a      	str	r2, [r1, #4]
 801c38e:	f8d9 3004 	ldr.w	r3, [r9, #4]
 801c392:	f043 0301 	orr.w	r3, r3, #1
 801c396:	3108      	adds	r1, #8
 801c398:	f8c9 3004 	str.w	r3, [r9, #4]
 801c39c:	4640      	mov	r0, r8
 801c39e:	f002 fdf3 	bl	801ef88 <_free_r>
 801c3a2:	e7d3      	b.n	801c34c <_realloc_r+0x140>
 801c3a4:	6840      	ldr	r0, [r0, #4]
 801c3a6:	f020 0903 	bic.w	r9, r0, #3
 801c3aa:	44b1      	add	r9, r6
 801c3ac:	f104 0010 	add.w	r0, r4, #16
 801c3b0:	4581      	cmp	r9, r0
 801c3b2:	da77      	bge.n	801c4a4 <_realloc_r+0x298>
 801c3b4:	07d2      	lsls	r2, r2, #31
 801c3b6:	f53f af56 	bmi.w	801c266 <_realloc_r+0x5a>
 801c3ba:	f855 2c08 	ldr.w	r2, [r5, #-8]
 801c3be:	eba7 0b02 	sub.w	fp, r7, r2
 801c3c2:	f8db 2004 	ldr.w	r2, [fp, #4]
 801c3c6:	f022 0203 	bic.w	r2, r2, #3
 801c3ca:	4491      	add	r9, r2
 801c3cc:	4548      	cmp	r0, r9
 801c3ce:	dc87      	bgt.n	801c2e0 <_realloc_r+0xd4>
 801c3d0:	46da      	mov	sl, fp
 801c3d2:	f8db 100c 	ldr.w	r1, [fp, #12]
 801c3d6:	f85a 0f08 	ldr.w	r0, [sl, #8]!
 801c3da:	1f32      	subs	r2, r6, #4
 801c3dc:	2a24      	cmp	r2, #36	; 0x24
 801c3de:	60c1      	str	r1, [r0, #12]
 801c3e0:	6088      	str	r0, [r1, #8]
 801c3e2:	f200 80a1 	bhi.w	801c528 <_realloc_r+0x31c>
 801c3e6:	2a13      	cmp	r2, #19
 801c3e8:	6829      	ldr	r1, [r5, #0]
 801c3ea:	f240 809b 	bls.w	801c524 <_realloc_r+0x318>
 801c3ee:	f8cb 1008 	str.w	r1, [fp, #8]
 801c3f2:	6869      	ldr	r1, [r5, #4]
 801c3f4:	f8cb 100c 	str.w	r1, [fp, #12]
 801c3f8:	2a1b      	cmp	r2, #27
 801c3fa:	68a9      	ldr	r1, [r5, #8]
 801c3fc:	f200 809b 	bhi.w	801c536 <_realloc_r+0x32a>
 801c400:	f10b 0210 	add.w	r2, fp, #16
 801c404:	3508      	adds	r5, #8
 801c406:	6011      	str	r1, [r2, #0]
 801c408:	6869      	ldr	r1, [r5, #4]
 801c40a:	6051      	str	r1, [r2, #4]
 801c40c:	68a9      	ldr	r1, [r5, #8]
 801c40e:	6091      	str	r1, [r2, #8]
 801c410:	eb0b 0104 	add.w	r1, fp, r4
 801c414:	eba9 0204 	sub.w	r2, r9, r4
 801c418:	f042 0201 	orr.w	r2, r2, #1
 801c41c:	6099      	str	r1, [r3, #8]
 801c41e:	604a      	str	r2, [r1, #4]
 801c420:	f8db 3004 	ldr.w	r3, [fp, #4]
 801c424:	f003 0301 	and.w	r3, r3, #1
 801c428:	431c      	orrs	r4, r3
 801c42a:	4640      	mov	r0, r8
 801c42c:	f8cb 4004 	str.w	r4, [fp, #4]
 801c430:	f7ff fea6 	bl	801c180 <__malloc_unlock>
 801c434:	e78e      	b.n	801c354 <_realloc_r+0x148>
 801c436:	07d3      	lsls	r3, r2, #31
 801c438:	f53f af15 	bmi.w	801c266 <_realloc_r+0x5a>
 801c43c:	f855 3c08 	ldr.w	r3, [r5, #-8]
 801c440:	eba7 0b03 	sub.w	fp, r7, r3
 801c444:	f8db 2004 	ldr.w	r2, [fp, #4]
 801c448:	f022 0203 	bic.w	r2, r2, #3
 801c44c:	4410      	add	r0, r2
 801c44e:	1983      	adds	r3, r0, r6
 801c450:	428b      	cmp	r3, r1
 801c452:	f6ff af45 	blt.w	801c2e0 <_realloc_r+0xd4>
 801c456:	e9d9 1202 	ldrd	r1, r2, [r9, #8]
 801c45a:	46da      	mov	sl, fp
 801c45c:	60ca      	str	r2, [r1, #12]
 801c45e:	6091      	str	r1, [r2, #8]
 801c460:	e742      	b.n	801c2e8 <_realloc_r+0xdc>
 801c462:	6001      	str	r1, [r0, #0]
 801c464:	686b      	ldr	r3, [r5, #4]
 801c466:	6043      	str	r3, [r0, #4]
 801c468:	2a1b      	cmp	r2, #27
 801c46a:	d83a      	bhi.n	801c4e2 <_realloc_r+0x2d6>
 801c46c:	f105 0208 	add.w	r2, r5, #8
 801c470:	f100 0308 	add.w	r3, r0, #8
 801c474:	68a9      	ldr	r1, [r5, #8]
 801c476:	e710      	b.n	801c29a <_realloc_r+0x8e>
 801c478:	f850 3c04 	ldr.w	r3, [r0, #-4]
 801c47c:	f023 0303 	bic.w	r3, r3, #3
 801c480:	441e      	add	r6, r3
 801c482:	eb07 0906 	add.w	r9, r7, r6
 801c486:	e753      	b.n	801c330 <_realloc_r+0x124>
 801c488:	4652      	mov	r2, sl
 801c48a:	e749      	b.n	801c320 <_realloc_r+0x114>
 801c48c:	4629      	mov	r1, r5
 801c48e:	4650      	mov	r0, sl
 801c490:	461e      	mov	r6, r3
 801c492:	465f      	mov	r7, fp
 801c494:	f7ff fdc0 	bl	801c018 <memmove>
 801c498:	4655      	mov	r5, sl
 801c49a:	e749      	b.n	801c330 <_realloc_r+0x124>
 801c49c:	4629      	mov	r1, r5
 801c49e:	f7ff fdbb 	bl	801c018 <memmove>
 801c4a2:	e6ff      	b.n	801c2a4 <_realloc_r+0x98>
 801c4a4:	4427      	add	r7, r4
 801c4a6:	eba9 0904 	sub.w	r9, r9, r4
 801c4aa:	f049 0201 	orr.w	r2, r9, #1
 801c4ae:	609f      	str	r7, [r3, #8]
 801c4b0:	607a      	str	r2, [r7, #4]
 801c4b2:	f855 3c04 	ldr.w	r3, [r5, #-4]
 801c4b6:	f003 0301 	and.w	r3, r3, #1
 801c4ba:	431c      	orrs	r4, r3
 801c4bc:	4640      	mov	r0, r8
 801c4be:	f845 4c04 	str.w	r4, [r5, #-4]
 801c4c2:	f7ff fe5d 	bl	801c180 <__malloc_unlock>
 801c4c6:	46aa      	mov	sl, r5
 801c4c8:	e744      	b.n	801c354 <_realloc_r+0x148>
 801c4ca:	f8cb 1010 	str.w	r1, [fp, #16]
 801c4ce:	68e9      	ldr	r1, [r5, #12]
 801c4d0:	f8cb 1014 	str.w	r1, [fp, #20]
 801c4d4:	2a24      	cmp	r2, #36	; 0x24
 801c4d6:	d010      	beq.n	801c4fa <_realloc_r+0x2ee>
 801c4d8:	6929      	ldr	r1, [r5, #16]
 801c4da:	f10b 0218 	add.w	r2, fp, #24
 801c4de:	3510      	adds	r5, #16
 801c4e0:	e71e      	b.n	801c320 <_realloc_r+0x114>
 801c4e2:	68ab      	ldr	r3, [r5, #8]
 801c4e4:	6083      	str	r3, [r0, #8]
 801c4e6:	68eb      	ldr	r3, [r5, #12]
 801c4e8:	60c3      	str	r3, [r0, #12]
 801c4ea:	2a24      	cmp	r2, #36	; 0x24
 801c4ec:	d010      	beq.n	801c510 <_realloc_r+0x304>
 801c4ee:	f105 0210 	add.w	r2, r5, #16
 801c4f2:	f100 0310 	add.w	r3, r0, #16
 801c4f6:	6929      	ldr	r1, [r5, #16]
 801c4f8:	e6cf      	b.n	801c29a <_realloc_r+0x8e>
 801c4fa:	692a      	ldr	r2, [r5, #16]
 801c4fc:	f8cb 2018 	str.w	r2, [fp, #24]
 801c500:	696a      	ldr	r2, [r5, #20]
 801c502:	f8cb 201c 	str.w	r2, [fp, #28]
 801c506:	69a9      	ldr	r1, [r5, #24]
 801c508:	f10b 0220 	add.w	r2, fp, #32
 801c50c:	3518      	adds	r5, #24
 801c50e:	e707      	b.n	801c320 <_realloc_r+0x114>
 801c510:	692b      	ldr	r3, [r5, #16]
 801c512:	6103      	str	r3, [r0, #16]
 801c514:	696b      	ldr	r3, [r5, #20]
 801c516:	6143      	str	r3, [r0, #20]
 801c518:	69a9      	ldr	r1, [r5, #24]
 801c51a:	f105 0218 	add.w	r2, r5, #24
 801c51e:	f100 0318 	add.w	r3, r0, #24
 801c522:	e6ba      	b.n	801c29a <_realloc_r+0x8e>
 801c524:	4652      	mov	r2, sl
 801c526:	e76e      	b.n	801c406 <_realloc_r+0x1fa>
 801c528:	4629      	mov	r1, r5
 801c52a:	4650      	mov	r0, sl
 801c52c:	9301      	str	r3, [sp, #4]
 801c52e:	f7ff fd73 	bl	801c018 <memmove>
 801c532:	9b01      	ldr	r3, [sp, #4]
 801c534:	e76c      	b.n	801c410 <_realloc_r+0x204>
 801c536:	f8cb 1010 	str.w	r1, [fp, #16]
 801c53a:	68e9      	ldr	r1, [r5, #12]
 801c53c:	f8cb 1014 	str.w	r1, [fp, #20]
 801c540:	2a24      	cmp	r2, #36	; 0x24
 801c542:	d004      	beq.n	801c54e <_realloc_r+0x342>
 801c544:	6929      	ldr	r1, [r5, #16]
 801c546:	f10b 0218 	add.w	r2, fp, #24
 801c54a:	3510      	adds	r5, #16
 801c54c:	e75b      	b.n	801c406 <_realloc_r+0x1fa>
 801c54e:	692a      	ldr	r2, [r5, #16]
 801c550:	f8cb 2018 	str.w	r2, [fp, #24]
 801c554:	696a      	ldr	r2, [r5, #20]
 801c556:	f8cb 201c 	str.w	r2, [fp, #28]
 801c55a:	69a9      	ldr	r1, [r5, #24]
 801c55c:	f10b 0220 	add.w	r2, fp, #32
 801c560:	3518      	adds	r5, #24
 801c562:	e750      	b.n	801c406 <_realloc_r+0x1fa>
 801c564:	200037e0 	.word	0x200037e0

0801c568 <_sbrk_r>:
 801c568:	b538      	push	{r3, r4, r5, lr}
 801c56a:	4c07      	ldr	r4, [pc, #28]	; (801c588 <_sbrk_r+0x20>)
 801c56c:	2300      	movs	r3, #0
 801c56e:	4605      	mov	r5, r0
 801c570:	4608      	mov	r0, r1
 801c572:	6023      	str	r3, [r4, #0]
 801c574:	f7fd fa1a 	bl	80199ac <_sbrk>
 801c578:	1c43      	adds	r3, r0, #1
 801c57a:	d000      	beq.n	801c57e <_sbrk_r+0x16>
 801c57c:	bd38      	pop	{r3, r4, r5, pc}
 801c57e:	6823      	ldr	r3, [r4, #0]
 801c580:	2b00      	cmp	r3, #0
 801c582:	d0fb      	beq.n	801c57c <_sbrk_r+0x14>
 801c584:	602b      	str	r3, [r5, #0]
 801c586:	bd38      	pop	{r3, r4, r5, pc}
 801c588:	20000914 	.word	0x20000914

0801c58c <_raise_r>:
 801c58c:	291f      	cmp	r1, #31
 801c58e:	b538      	push	{r3, r4, r5, lr}
 801c590:	d822      	bhi.n	801c5d8 <_raise_r+0x4c>
 801c592:	f8d0 32dc 	ldr.w	r3, [r0, #732]	; 0x2dc
 801c596:	4605      	mov	r5, r0
 801c598:	460c      	mov	r4, r1
 801c59a:	b16b      	cbz	r3, 801c5b8 <_raise_r+0x2c>
 801c59c:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
 801c5a0:	b152      	cbz	r2, 801c5b8 <_raise_r+0x2c>
 801c5a2:	2a01      	cmp	r2, #1
 801c5a4:	d012      	beq.n	801c5cc <_raise_r+0x40>
 801c5a6:	1c51      	adds	r1, r2, #1
 801c5a8:	d012      	beq.n	801c5d0 <_raise_r+0x44>
 801c5aa:	2500      	movs	r5, #0
 801c5ac:	4620      	mov	r0, r4
 801c5ae:	f843 5024 	str.w	r5, [r3, r4, lsl #2]
 801c5b2:	4790      	blx	r2
 801c5b4:	4628      	mov	r0, r5
 801c5b6:	bd38      	pop	{r3, r4, r5, pc}
 801c5b8:	4628      	mov	r0, r5
 801c5ba:	f000 f82f 	bl	801c61c <_getpid_r>
 801c5be:	4622      	mov	r2, r4
 801c5c0:	4601      	mov	r1, r0
 801c5c2:	4628      	mov	r0, r5
 801c5c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801c5c8:	f000 b814 	b.w	801c5f4 <_kill_r>
 801c5cc:	2000      	movs	r0, #0
 801c5ce:	bd38      	pop	{r3, r4, r5, pc}
 801c5d0:	2316      	movs	r3, #22
 801c5d2:	6003      	str	r3, [r0, #0]
 801c5d4:	2001      	movs	r0, #1
 801c5d6:	bd38      	pop	{r3, r4, r5, pc}
 801c5d8:	2316      	movs	r3, #22
 801c5da:	6003      	str	r3, [r0, #0]
 801c5dc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801c5e0:	bd38      	pop	{r3, r4, r5, pc}
 801c5e2:	bf00      	nop

0801c5e4 <raise>:
 801c5e4:	4b02      	ldr	r3, [pc, #8]	; (801c5f0 <raise+0xc>)
 801c5e6:	4601      	mov	r1, r0
 801c5e8:	6818      	ldr	r0, [r3, #0]
 801c5ea:	f7ff bfcf 	b.w	801c58c <_raise_r>
 801c5ee:	bf00      	nop
 801c5f0:	200033b4 	.word	0x200033b4

0801c5f4 <_kill_r>:
 801c5f4:	b538      	push	{r3, r4, r5, lr}
 801c5f6:	460b      	mov	r3, r1
 801c5f8:	4c07      	ldr	r4, [pc, #28]	; (801c618 <_kill_r+0x24>)
 801c5fa:	4605      	mov	r5, r0
 801c5fc:	4611      	mov	r1, r2
 801c5fe:	4618      	mov	r0, r3
 801c600:	2300      	movs	r3, #0
 801c602:	6023      	str	r3, [r4, #0]
 801c604:	f7fd f9b8 	bl	8019978 <_kill>
 801c608:	1c43      	adds	r3, r0, #1
 801c60a:	d000      	beq.n	801c60e <_kill_r+0x1a>
 801c60c:	bd38      	pop	{r3, r4, r5, pc}
 801c60e:	6823      	ldr	r3, [r4, #0]
 801c610:	2b00      	cmp	r3, #0
 801c612:	d0fb      	beq.n	801c60c <_kill_r+0x18>
 801c614:	602b      	str	r3, [r5, #0]
 801c616:	bd38      	pop	{r3, r4, r5, pc}
 801c618:	20000914 	.word	0x20000914

0801c61c <_getpid_r>:
 801c61c:	f7fd b9ae 	b.w	801997c <_getpid>

0801c620 <sprintf>:
 801c620:	b40e      	push	{r1, r2, r3}
 801c622:	b530      	push	{r4, r5, lr}
 801c624:	b09c      	sub	sp, #112	; 0x70
 801c626:	ab1f      	add	r3, sp, #124	; 0x7c
 801c628:	4c0c      	ldr	r4, [pc, #48]	; (801c65c <sprintf+0x3c>)
 801c62a:	4d0d      	ldr	r5, [pc, #52]	; (801c660 <sprintf+0x40>)
 801c62c:	f853 2b04 	ldr.w	r2, [r3], #4
 801c630:	9301      	str	r3, [sp, #4]
 801c632:	4601      	mov	r1, r0
 801c634:	9102      	str	r1, [sp, #8]
 801c636:	9106      	str	r1, [sp, #24]
 801c638:	6820      	ldr	r0, [r4, #0]
 801c63a:	a902      	add	r1, sp, #8
 801c63c:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
 801c640:	9407      	str	r4, [sp, #28]
 801c642:	e9cd 4504 	strd	r4, r5, [sp, #16]
 801c646:	f000 f877 	bl	801c738 <_svfprintf_r>
 801c64a:	9b02      	ldr	r3, [sp, #8]
 801c64c:	2200      	movs	r2, #0
 801c64e:	701a      	strb	r2, [r3, #0]
 801c650:	b01c      	add	sp, #112	; 0x70
 801c652:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801c656:	b003      	add	sp, #12
 801c658:	4770      	bx	lr
 801c65a:	bf00      	nop
 801c65c:	200033b4 	.word	0x200033b4
 801c660:	ffff0208 	.word	0xffff0208

0801c664 <strncmp>:
 801c664:	2a00      	cmp	r2, #0
 801c666:	d041      	beq.n	801c6ec <strncmp+0x88>
 801c668:	ea40 0301 	orr.w	r3, r0, r1
 801c66c:	f013 0303 	ands.w	r3, r3, #3
 801c670:	b4f0      	push	{r4, r5, r6, r7}
 801c672:	d125      	bne.n	801c6c0 <strncmp+0x5c>
 801c674:	2a03      	cmp	r2, #3
 801c676:	d923      	bls.n	801c6c0 <strncmp+0x5c>
 801c678:	6804      	ldr	r4, [r0, #0]
 801c67a:	680d      	ldr	r5, [r1, #0]
 801c67c:	42ac      	cmp	r4, r5
 801c67e:	d11f      	bne.n	801c6c0 <strncmp+0x5c>
 801c680:	3a04      	subs	r2, #4
 801c682:	d035      	beq.n	801c6f0 <strncmp+0x8c>
 801c684:	f1a4 3501 	sub.w	r5, r4, #16843009	; 0x1010101
 801c688:	ea25 0404 	bic.w	r4, r5, r4
 801c68c:	f014 3f80 	tst.w	r4, #2155905152	; 0x80808080
 801c690:	d131      	bne.n	801c6f6 <strncmp+0x92>
 801c692:	1d07      	adds	r7, r0, #4
 801c694:	1d0d      	adds	r5, r1, #4
 801c696:	e00d      	b.n	801c6b4 <strncmp+0x50>
 801c698:	f857 3b04 	ldr.w	r3, [r7], #4
 801c69c:	680e      	ldr	r6, [r1, #0]
 801c69e:	f1a3 3401 	sub.w	r4, r3, #16843009	; 0x1010101
 801c6a2:	42b3      	cmp	r3, r6
 801c6a4:	ea24 0403 	bic.w	r4, r4, r3
 801c6a8:	d10a      	bne.n	801c6c0 <strncmp+0x5c>
 801c6aa:	3a04      	subs	r2, #4
 801c6ac:	d020      	beq.n	801c6f0 <strncmp+0x8c>
 801c6ae:	f014 3f80 	tst.w	r4, #2155905152	; 0x80808080
 801c6b2:	d11d      	bne.n	801c6f0 <strncmp+0x8c>
 801c6b4:	2a03      	cmp	r2, #3
 801c6b6:	4629      	mov	r1, r5
 801c6b8:	4638      	mov	r0, r7
 801c6ba:	f105 0504 	add.w	r5, r5, #4
 801c6be:	d8eb      	bhi.n	801c698 <strncmp+0x34>
 801c6c0:	7803      	ldrb	r3, [r0, #0]
 801c6c2:	780c      	ldrb	r4, [r1, #0]
 801c6c4:	429c      	cmp	r4, r3
 801c6c6:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 801c6ca:	d10c      	bne.n	801c6e6 <strncmp+0x82>
 801c6cc:	b182      	cbz	r2, 801c6f0 <strncmp+0x8c>
 801c6ce:	b914      	cbnz	r4, 801c6d6 <strncmp+0x72>
 801c6d0:	e00e      	b.n	801c6f0 <strncmp+0x8c>
 801c6d2:	b16a      	cbz	r2, 801c6f0 <strncmp+0x8c>
 801c6d4:	b17b      	cbz	r3, 801c6f6 <strncmp+0x92>
 801c6d6:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 801c6da:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 801c6de:	42a3      	cmp	r3, r4
 801c6e0:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 801c6e4:	d0f5      	beq.n	801c6d2 <strncmp+0x6e>
 801c6e6:	1b18      	subs	r0, r3, r4
 801c6e8:	bcf0      	pop	{r4, r5, r6, r7}
 801c6ea:	4770      	bx	lr
 801c6ec:	4610      	mov	r0, r2
 801c6ee:	4770      	bx	lr
 801c6f0:	2000      	movs	r0, #0
 801c6f2:	bcf0      	pop	{r4, r5, r6, r7}
 801c6f4:	4770      	bx	lr
 801c6f6:	4618      	mov	r0, r3
 801c6f8:	e7f6      	b.n	801c6e8 <strncmp+0x84>
 801c6fa:	bf00      	nop

0801c6fc <strnlen>:
 801c6fc:	b1b1      	cbz	r1, 801c72c <strnlen+0x30>
 801c6fe:	7803      	ldrb	r3, [r0, #0]
 801c700:	b1b3      	cbz	r3, 801c730 <strnlen+0x34>
 801c702:	4401      	add	r1, r0
 801c704:	1c43      	adds	r3, r0, #1
 801c706:	4299      	cmp	r1, r3
 801c708:	d014      	beq.n	801c734 <strnlen+0x38>
 801c70a:	b410      	push	{r4}
 801c70c:	781a      	ldrb	r2, [r3, #0]
 801c70e:	1c5c      	adds	r4, r3, #1
 801c710:	b132      	cbz	r2, 801c720 <strnlen+0x24>
 801c712:	42a1      	cmp	r1, r4
 801c714:	4623      	mov	r3, r4
 801c716:	d006      	beq.n	801c726 <strnlen+0x2a>
 801c718:	781a      	ldrb	r2, [r3, #0]
 801c71a:	1c5c      	adds	r4, r3, #1
 801c71c:	2a00      	cmp	r2, #0
 801c71e:	d1f8      	bne.n	801c712 <strnlen+0x16>
 801c720:	1a18      	subs	r0, r3, r0
 801c722:	bc10      	pop	{r4}
 801c724:	4770      	bx	lr
 801c726:	1a08      	subs	r0, r1, r0
 801c728:	bc10      	pop	{r4}
 801c72a:	4770      	bx	lr
 801c72c:	4608      	mov	r0, r1
 801c72e:	4770      	bx	lr
 801c730:	4618      	mov	r0, r3
 801c732:	4770      	bx	lr
 801c734:	1a08      	subs	r0, r1, r0
 801c736:	4770      	bx	lr

0801c738 <_svfprintf_r>:
 801c738:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c73c:	b0c3      	sub	sp, #268	; 0x10c
 801c73e:	460c      	mov	r4, r1
 801c740:	910c      	str	r1, [sp, #48]	; 0x30
 801c742:	4691      	mov	r9, r2
 801c744:	930f      	str	r3, [sp, #60]	; 0x3c
 801c746:	900d      	str	r0, [sp, #52]	; 0x34
 801c748:	f002 fd3c 	bl	801f1c4 <_localeconv_r>
 801c74c:	6803      	ldr	r3, [r0, #0]
 801c74e:	931a      	str	r3, [sp, #104]	; 0x68
 801c750:	4618      	mov	r0, r3
 801c752:	f7ec ffd5 	bl	8009700 <strlen>
 801c756:	89a3      	ldrh	r3, [r4, #12]
 801c758:	9019      	str	r0, [sp, #100]	; 0x64
 801c75a:	061d      	lsls	r5, r3, #24
 801c75c:	d503      	bpl.n	801c766 <_svfprintf_r+0x2e>
 801c75e:	6923      	ldr	r3, [r4, #16]
 801c760:	2b00      	cmp	r3, #0
 801c762:	f000 8739 	beq.w	801d5d8 <_svfprintf_r+0xea0>
 801c766:	2300      	movs	r3, #0
 801c768:	e9cd 3326 	strd	r3, r3, [sp, #152]	; 0x98
 801c76c:	e9cd 3316 	strd	r3, r3, [sp, #88]	; 0x58
 801c770:	f10d 08c8 	add.w	r8, sp, #200	; 0xc8
 801c774:	9313      	str	r3, [sp, #76]	; 0x4c
 801c776:	9315      	str	r3, [sp, #84]	; 0x54
 801c778:	9314      	str	r3, [sp, #80]	; 0x50
 801c77a:	9318      	str	r3, [sp, #96]	; 0x60
 801c77c:	931b      	str	r3, [sp, #108]	; 0x6c
 801c77e:	930a      	str	r3, [sp, #40]	; 0x28
 801c780:	f8cd 8094 	str.w	r8, [sp, #148]	; 0x94
 801c784:	46c2      	mov	sl, r8
 801c786:	46cb      	mov	fp, r9
 801c788:	f89b 3000 	ldrb.w	r3, [fp]
 801c78c:	2b00      	cmp	r3, #0
 801c78e:	f000 8099 	beq.w	801c8c4 <_svfprintf_r+0x18c>
 801c792:	2b25      	cmp	r3, #37	; 0x25
 801c794:	465c      	mov	r4, fp
 801c796:	d102      	bne.n	801c79e <_svfprintf_r+0x66>
 801c798:	e01c      	b.n	801c7d4 <_svfprintf_r+0x9c>
 801c79a:	2b25      	cmp	r3, #37	; 0x25
 801c79c:	d003      	beq.n	801c7a6 <_svfprintf_r+0x6e>
 801c79e:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 801c7a2:	2b00      	cmp	r3, #0
 801c7a4:	d1f9      	bne.n	801c79a <_svfprintf_r+0x62>
 801c7a6:	eba4 050b 	sub.w	r5, r4, fp
 801c7aa:	b185      	cbz	r5, 801c7ce <_svfprintf_r+0x96>
 801c7ac:	e9dd 3226 	ldrd	r3, r2, [sp, #152]	; 0x98
 801c7b0:	3301      	adds	r3, #1
 801c7b2:	442a      	add	r2, r5
 801c7b4:	2b07      	cmp	r3, #7
 801c7b6:	f8ca b000 	str.w	fp, [sl]
 801c7ba:	f8ca 5004 	str.w	r5, [sl, #4]
 801c7be:	e9cd 3226 	strd	r3, r2, [sp, #152]	; 0x98
 801c7c2:	dc77      	bgt.n	801c8b4 <_svfprintf_r+0x17c>
 801c7c4:	f10a 0a08 	add.w	sl, sl, #8
 801c7c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c7ca:	442b      	add	r3, r5
 801c7cc:	930a      	str	r3, [sp, #40]	; 0x28
 801c7ce:	7823      	ldrb	r3, [r4, #0]
 801c7d0:	2b00      	cmp	r3, #0
 801c7d2:	d077      	beq.n	801c8c4 <_svfprintf_r+0x18c>
 801c7d4:	2300      	movs	r3, #0
 801c7d6:	461a      	mov	r2, r3
 801c7d8:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
 801c7dc:	4619      	mov	r1, r3
 801c7de:	930b      	str	r3, [sp, #44]	; 0x2c
 801c7e0:	4699      	mov	r9, r3
 801c7e2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801c7e6:	7863      	ldrb	r3, [r4, #1]
 801c7e8:	9009      	str	r0, [sp, #36]	; 0x24
 801c7ea:	f104 0b01 	add.w	fp, r4, #1
 801c7ee:	f10b 0b01 	add.w	fp, fp, #1
 801c7f2:	461f      	mov	r7, r3
 801c7f4:	f1a7 0320 	sub.w	r3, r7, #32
 801c7f8:	2b58      	cmp	r3, #88	; 0x58
 801c7fa:	f200 8374 	bhi.w	801cee6 <_svfprintf_r+0x7ae>
 801c7fe:	e8df f013 	tbh	[pc, r3, lsl #1]
 801c802:	02d2      	.short	0x02d2
 801c804:	03720372 	.word	0x03720372
 801c808:	037202cd 	.word	0x037202cd
 801c80c:	03720372 	.word	0x03720372
 801c810:	03720372 	.word	0x03720372
 801c814:	02c10372 	.word	0x02c10372
 801c818:	037202bc 	.word	0x037202bc
 801c81c:	034c0366 	.word	0x034c0366
 801c820:	036b0372 	.word	0x036b0372
 801c824:	00b700b7 	.word	0x00b700b7
 801c828:	00b700b7 	.word	0x00b700b7
 801c82c:	00b700b7 	.word	0x00b700b7
 801c830:	00b700b7 	.word	0x00b700b7
 801c834:	037200b7 	.word	0x037200b7
 801c838:	03720372 	.word	0x03720372
 801c83c:	03720372 	.word	0x03720372
 801c840:	03720372 	.word	0x03720372
 801c844:	03720372 	.word	0x03720372
 801c848:	03340372 	.word	0x03340372
 801c84c:	037202f6 	.word	0x037202f6
 801c850:	037202f6 	.word	0x037202f6
 801c854:	03720372 	.word	0x03720372
 801c858:	02f10372 	.word	0x02f10372
 801c85c:	03720372 	.word	0x03720372
 801c860:	037200a6 	.word	0x037200a6
 801c864:	03720372 	.word	0x03720372
 801c868:	03720372 	.word	0x03720372
 801c86c:	03720075 	.word	0x03720075
 801c870:	029a0372 	.word	0x029a0372
 801c874:	03720372 	.word	0x03720372
 801c878:	03720372 	.word	0x03720372
 801c87c:	03720372 	.word	0x03720372
 801c880:	03720372 	.word	0x03720372
 801c884:	03720372 	.word	0x03720372
 801c888:	012d017b 	.word	0x012d017b
 801c88c:	02f602f6 	.word	0x02f602f6
 801c890:	012802f6 	.word	0x012802f6
 801c894:	0372012d 	.word	0x0372012d
 801c898:	011b0372 	.word	0x011b0372
 801c89c:	01040372 	.word	0x01040372
 801c8a0:	00cb00a8 	.word	0x00cb00a8
 801c8a4:	037200c6 	.word	0x037200c6
 801c8a8:	037200db 	.word	0x037200db
 801c8ac:	03720077 	.word	0x03720077
 801c8b0:	02da0372 	.word	0x02da0372
 801c8b4:	aa25      	add	r2, sp, #148	; 0x94
 801c8b6:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
 801c8ba:	f003 f84d 	bl	801f958 <__ssprint_r>
 801c8be:	b940      	cbnz	r0, 801c8d2 <_svfprintf_r+0x19a>
 801c8c0:	46c2      	mov	sl, r8
 801c8c2:	e781      	b.n	801c7c8 <_svfprintf_r+0x90>
 801c8c4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801c8c6:	b123      	cbz	r3, 801c8d2 <_svfprintf_r+0x19a>
 801c8c8:	980d      	ldr	r0, [sp, #52]	; 0x34
 801c8ca:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c8cc:	aa25      	add	r2, sp, #148	; 0x94
 801c8ce:	f003 f843 	bl	801f958 <__ssprint_r>
 801c8d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c8d4:	899b      	ldrh	r3, [r3, #12]
 801c8d6:	f013 0f40 	tst.w	r3, #64	; 0x40
 801c8da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c8dc:	bf18      	it	ne
 801c8de:	f04f 33ff 	movne.w	r3, #4294967295	; 0xffffffff
 801c8e2:	930a      	str	r3, [sp, #40]	; 0x28
 801c8e4:	980a      	ldr	r0, [sp, #40]	; 0x28
 801c8e6:	b043      	add	sp, #268	; 0x10c
 801c8e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c8ec:	f049 0910 	orr.w	r9, r9, #16
 801c8f0:	f019 0f20 	tst.w	r9, #32
 801c8f4:	f000 853b 	beq.w	801d36e <_svfprintf_r+0xc36>
 801c8f8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801c8fa:	3507      	adds	r5, #7
 801c8fc:	f025 0307 	bic.w	r3, r5, #7
 801c900:	f103 0208 	add.w	r2, r3, #8
 801c904:	e9d3 4500 	ldrd	r4, r5, [r3]
 801c908:	920f      	str	r2, [sp, #60]	; 0x3c
 801c90a:	2301      	movs	r3, #1
 801c90c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c90e:	2600      	movs	r6, #0
 801c910:	3201      	adds	r2, #1
 801c912:	f88d 6077 	strb.w	r6, [sp, #119]	; 0x77
 801c916:	f000 843c 	beq.w	801d192 <_svfprintf_r+0xa5a>
 801c91a:	f029 0280 	bic.w	r2, r9, #128	; 0x80
 801c91e:	9207      	str	r2, [sp, #28]
 801c920:	ea54 0205 	orrs.w	r2, r4, r5
 801c924:	f040 80be 	bne.w	801caa4 <_svfprintf_r+0x36c>
 801c928:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c92a:	2a00      	cmp	r2, #0
 801c92c:	f040 86cf 	bne.w	801d6ce <_svfprintf_r+0xf96>
 801c930:	2b00      	cmp	r3, #0
 801c932:	f040 84eb 	bne.w	801d30c <_svfprintf_r+0xbd4>
 801c936:	f019 0301 	ands.w	r3, r9, #1
 801c93a:	930e      	str	r3, [sp, #56]	; 0x38
 801c93c:	f000 855d 	beq.w	801d3fa <_svfprintf_r+0xcc2>
 801c940:	ab42      	add	r3, sp, #264	; 0x108
 801c942:	461a      	mov	r2, r3
 801c944:	2330      	movs	r3, #48	; 0x30
 801c946:	f802 3d41 	strb.w	r3, [r2, #-65]!
 801c94a:	9211      	str	r2, [sp, #68]	; 0x44
 801c94c:	e0cb      	b.n	801cae6 <_svfprintf_r+0x3ae>
 801c94e:	f049 0910 	orr.w	r9, r9, #16
 801c952:	f019 0320 	ands.w	r3, r9, #32
 801c956:	f000 8515 	beq.w	801d384 <_svfprintf_r+0xc4c>
 801c95a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801c95c:	3507      	adds	r5, #7
 801c95e:	f025 0307 	bic.w	r3, r5, #7
 801c962:	f103 0208 	add.w	r2, r3, #8
 801c966:	e9d3 4500 	ldrd	r4, r5, [r3]
 801c96a:	920f      	str	r2, [sp, #60]	; 0x3c
 801c96c:	2300      	movs	r3, #0
 801c96e:	e7cd      	b.n	801c90c <_svfprintf_r+0x1d4>
 801c970:	f1a7 0330 	sub.w	r3, r7, #48	; 0x30
 801c974:	2000      	movs	r0, #0
 801c976:	f81b 7b01 	ldrb.w	r7, [fp], #1
 801c97a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801c97e:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 801c982:	f1a7 0330 	sub.w	r3, r7, #48	; 0x30
 801c986:	2b09      	cmp	r3, #9
 801c988:	d9f5      	bls.n	801c976 <_svfprintf_r+0x23e>
 801c98a:	900b      	str	r0, [sp, #44]	; 0x2c
 801c98c:	e732      	b.n	801c7f4 <_svfprintf_r+0xbc>
 801c98e:	f049 0920 	orr.w	r9, r9, #32
 801c992:	f89b 3000 	ldrb.w	r3, [fp]
 801c996:	e72a      	b.n	801c7ee <_svfprintf_r+0xb6>
 801c998:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c99a:	4ba2      	ldr	r3, [pc, #648]	; (801cc24 <_svfprintf_r+0x4ec>)
 801c99c:	6814      	ldr	r4, [r2, #0]
 801c99e:	9318      	str	r3, [sp, #96]	; 0x60
 801c9a0:	3204      	adds	r2, #4
 801c9a2:	f647 0330 	movw	r3, #30768	; 0x7830
 801c9a6:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
 801c9aa:	f049 0902 	orr.w	r9, r9, #2
 801c9ae:	920f      	str	r2, [sp, #60]	; 0x3c
 801c9b0:	2500      	movs	r5, #0
 801c9b2:	2302      	movs	r3, #2
 801c9b4:	2778      	movs	r7, #120	; 0x78
 801c9b6:	e7a9      	b.n	801c90c <_svfprintf_r+0x1d4>
 801c9b8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c9ba:	6813      	ldr	r3, [r2, #0]
 801c9bc:	9311      	str	r3, [sp, #68]	; 0x44
 801c9be:	2400      	movs	r4, #0
 801c9c0:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
 801c9c4:	1d15      	adds	r5, r2, #4
 801c9c6:	2b00      	cmp	r3, #0
 801c9c8:	f000 8630 	beq.w	801d62c <_svfprintf_r+0xef4>
 801c9cc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c9ce:	1c53      	adds	r3, r2, #1
 801c9d0:	f000 86d8 	beq.w	801d784 <_svfprintf_r+0x104c>
 801c9d4:	4621      	mov	r1, r4
 801c9d6:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c9d8:	f7ec fc1a 	bl	8009210 <memchr>
 801c9dc:	2800      	cmp	r0, #0
 801c9de:	f000 87b9 	beq.w	801d954 <_svfprintf_r+0x121c>
 801c9e2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c9e4:	9409      	str	r4, [sp, #36]	; 0x24
 801c9e6:	1ac3      	subs	r3, r0, r3
 801c9e8:	930e      	str	r3, [sp, #56]	; 0x38
 801c9ea:	950f      	str	r5, [sp, #60]	; 0x3c
 801c9ec:	f8cd 901c 	str.w	r9, [sp, #28]
 801c9f0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c9f4:	f89d 6077 	ldrb.w	r6, [sp, #119]	; 0x77
 801c9f8:	9308      	str	r3, [sp, #32]
 801c9fa:	9412      	str	r4, [sp, #72]	; 0x48
 801c9fc:	2e00      	cmp	r6, #0
 801c9fe:	f000 808d 	beq.w	801cb1c <_svfprintf_r+0x3e4>
 801ca02:	9b08      	ldr	r3, [sp, #32]
 801ca04:	3301      	adds	r3, #1
 801ca06:	9308      	str	r3, [sp, #32]
 801ca08:	e088      	b.n	801cb1c <_svfprintf_r+0x3e4>
 801ca0a:	2a00      	cmp	r2, #0
 801ca0c:	f041 80d7 	bne.w	801dbbe <_svfprintf_r+0x1486>
 801ca10:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ca12:	f019 0f20 	tst.w	r9, #32
 801ca16:	f852 3b04 	ldr.w	r3, [r2], #4
 801ca1a:	920f      	str	r2, [sp, #60]	; 0x3c
 801ca1c:	f040 852f 	bne.w	801d47e <_svfprintf_r+0xd46>
 801ca20:	f019 0f10 	tst.w	r9, #16
 801ca24:	f040 8629 	bne.w	801d67a <_svfprintf_r+0xf42>
 801ca28:	f019 0f40 	tst.w	r9, #64	; 0x40
 801ca2c:	f000 8625 	beq.w	801d67a <_svfprintf_r+0xf42>
 801ca30:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801ca34:	801a      	strh	r2, [r3, #0]
 801ca36:	e6a7      	b.n	801c788 <_svfprintf_r+0x50>
 801ca38:	f89b 3000 	ldrb.w	r3, [fp]
 801ca3c:	2b6c      	cmp	r3, #108	; 0x6c
 801ca3e:	bf03      	ittte	eq
 801ca40:	f89b 3001 	ldrbeq.w	r3, [fp, #1]
 801ca44:	f049 0920 	orreq.w	r9, r9, #32
 801ca48:	f10b 0b01 	addeq.w	fp, fp, #1
 801ca4c:	f049 0910 	orrne.w	r9, r9, #16
 801ca50:	e6cd      	b.n	801c7ee <_svfprintf_r+0xb6>
 801ca52:	f049 0940 	orr.w	r9, r9, #64	; 0x40
 801ca56:	f89b 3000 	ldrb.w	r3, [fp]
 801ca5a:	e6c8      	b.n	801c7ee <_svfprintf_r+0xb6>
 801ca5c:	2a00      	cmp	r2, #0
 801ca5e:	f041 809a 	bne.w	801db96 <_svfprintf_r+0x145e>
 801ca62:	f019 0f20 	tst.w	r9, #32
 801ca66:	f000 8209 	beq.w	801ce7c <_svfprintf_r+0x744>
 801ca6a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801ca6c:	3507      	adds	r5, #7
 801ca6e:	f025 0307 	bic.w	r3, r5, #7
 801ca72:	e9d3 4500 	ldrd	r4, r5, [r3]
 801ca76:	f103 0208 	add.w	r2, r3, #8
 801ca7a:	920f      	str	r2, [sp, #60]	; 0x3c
 801ca7c:	2c00      	cmp	r4, #0
 801ca7e:	f175 0300 	sbcs.w	r3, r5, #0
 801ca82:	f2c0 84c6 	blt.w	801d412 <_svfprintf_r+0xcda>
 801ca86:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ca88:	f89d 6077 	ldrb.w	r6, [sp, #119]	; 0x77
 801ca8c:	3301      	adds	r3, #1
 801ca8e:	f000 84cb 	beq.w	801d428 <_svfprintf_r+0xcf0>
 801ca92:	f029 0280 	bic.w	r2, r9, #128	; 0x80
 801ca96:	9207      	str	r2, [sp, #28]
 801ca98:	ea54 0205 	orrs.w	r2, r4, r5
 801ca9c:	f04f 0301 	mov.w	r3, #1
 801caa0:	f43f af42 	beq.w	801c928 <_svfprintf_r+0x1f0>
 801caa4:	2b01      	cmp	r3, #1
 801caa6:	f000 8379 	beq.w	801d19c <_svfprintf_r+0xa64>
 801caaa:	2b02      	cmp	r3, #2
 801caac:	f000 8399 	beq.w	801d1e2 <_svfprintf_r+0xaaa>
 801cab0:	4641      	mov	r1, r8
 801cab2:	e000      	b.n	801cab6 <_svfprintf_r+0x37e>
 801cab4:	4611      	mov	r1, r2
 801cab6:	08e2      	lsrs	r2, r4, #3
 801cab8:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
 801cabc:	08e8      	lsrs	r0, r5, #3
 801cabe:	f004 0307 	and.w	r3, r4, #7
 801cac2:	4605      	mov	r5, r0
 801cac4:	4614      	mov	r4, r2
 801cac6:	3330      	adds	r3, #48	; 0x30
 801cac8:	ea54 0005 	orrs.w	r0, r4, r5
 801cacc:	f801 3c01 	strb.w	r3, [r1, #-1]
 801cad0:	f101 32ff 	add.w	r2, r1, #4294967295	; 0xffffffff
 801cad4:	d1ee      	bne.n	801cab4 <_svfprintf_r+0x37c>
 801cad6:	9807      	ldr	r0, [sp, #28]
 801cad8:	9211      	str	r2, [sp, #68]	; 0x44
 801cada:	07c0      	lsls	r0, r0, #31
 801cadc:	f100 8470 	bmi.w	801d3c0 <_svfprintf_r+0xc88>
 801cae0:	eba8 0302 	sub.w	r3, r8, r2
 801cae4:	930e      	str	r3, [sp, #56]	; 0x38
 801cae6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cae8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801caea:	4293      	cmp	r3, r2
 801caec:	bfb8      	it	lt
 801caee:	4613      	movlt	r3, r2
 801caf0:	9308      	str	r3, [sp, #32]
 801caf2:	2300      	movs	r3, #0
 801caf4:	9312      	str	r3, [sp, #72]	; 0x48
 801caf6:	e781      	b.n	801c9fc <_svfprintf_r+0x2c4>
 801caf8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801cafa:	2300      	movs	r3, #0
 801cafc:	680a      	ldr	r2, [r1, #0]
 801cafe:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
 801cb02:	461e      	mov	r6, r3
 801cb04:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
 801cb08:	2301      	movs	r3, #1
 801cb0a:	1d0a      	adds	r2, r1, #4
 801cb0c:	e9cd 9307 	strd	r9, r3, [sp, #28]
 801cb10:	e9cd 320e 	strd	r3, r2, [sp, #56]	; 0x38
 801cb14:	ab28      	add	r3, sp, #160	; 0xa0
 801cb16:	9609      	str	r6, [sp, #36]	; 0x24
 801cb18:	9612      	str	r6, [sp, #72]	; 0x48
 801cb1a:	9311      	str	r3, [sp, #68]	; 0x44
 801cb1c:	9b07      	ldr	r3, [sp, #28]
 801cb1e:	f013 0302 	ands.w	r3, r3, #2
 801cb22:	9310      	str	r3, [sp, #64]	; 0x40
 801cb24:	d002      	beq.n	801cb2c <_svfprintf_r+0x3f4>
 801cb26:	9b08      	ldr	r3, [sp, #32]
 801cb28:	3302      	adds	r3, #2
 801cb2a:	9308      	str	r3, [sp, #32]
 801cb2c:	9b07      	ldr	r3, [sp, #28]
 801cb2e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 801cb30:	f013 0984 	ands.w	r9, r3, #132	; 0x84
 801cb34:	d13f      	bne.n	801cbb6 <_svfprintf_r+0x47e>
 801cb36:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801cb38:	9a08      	ldr	r2, [sp, #32]
 801cb3a:	1a9d      	subs	r5, r3, r2
 801cb3c:	2d00      	cmp	r5, #0
 801cb3e:	dd3a      	ble.n	801cbb6 <_svfprintf_r+0x47e>
 801cb40:	2d10      	cmp	r5, #16
 801cb42:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801cb44:	dd29      	ble.n	801cb9a <_svfprintf_r+0x462>
 801cb46:	4652      	mov	r2, sl
 801cb48:	4621      	mov	r1, r4
 801cb4a:	46aa      	mov	sl, r5
 801cb4c:	2610      	movs	r6, #16
 801cb4e:	e9dd 540c 	ldrd	r5, r4, [sp, #48]	; 0x30
 801cb52:	e006      	b.n	801cb62 <_svfprintf_r+0x42a>
 801cb54:	f1aa 0a10 	sub.w	sl, sl, #16
 801cb58:	f1ba 0f10 	cmp.w	sl, #16
 801cb5c:	f102 0208 	add.w	r2, r2, #8
 801cb60:	dd18      	ble.n	801cb94 <_svfprintf_r+0x45c>
 801cb62:	3301      	adds	r3, #1
 801cb64:	4830      	ldr	r0, [pc, #192]	; (801cc28 <_svfprintf_r+0x4f0>)
 801cb66:	3110      	adds	r1, #16
 801cb68:	2b07      	cmp	r3, #7
 801cb6a:	e9cd 3126 	strd	r3, r1, [sp, #152]	; 0x98
 801cb6e:	e9c2 0600 	strd	r0, r6, [r2]
 801cb72:	ddef      	ble.n	801cb54 <_svfprintf_r+0x41c>
 801cb74:	aa25      	add	r2, sp, #148	; 0x94
 801cb76:	4629      	mov	r1, r5
 801cb78:	4620      	mov	r0, r4
 801cb7a:	f002 feed 	bl	801f958 <__ssprint_r>
 801cb7e:	2800      	cmp	r0, #0
 801cb80:	f47f aea7 	bne.w	801c8d2 <_svfprintf_r+0x19a>
 801cb84:	f1aa 0a10 	sub.w	sl, sl, #16
 801cb88:	f1ba 0f10 	cmp.w	sl, #16
 801cb8c:	e9dd 3126 	ldrd	r3, r1, [sp, #152]	; 0x98
 801cb90:	4642      	mov	r2, r8
 801cb92:	dce6      	bgt.n	801cb62 <_svfprintf_r+0x42a>
 801cb94:	4655      	mov	r5, sl
 801cb96:	460c      	mov	r4, r1
 801cb98:	4692      	mov	sl, r2
 801cb9a:	3301      	adds	r3, #1
 801cb9c:	4a22      	ldr	r2, [pc, #136]	; (801cc28 <_svfprintf_r+0x4f0>)
 801cb9e:	442c      	add	r4, r5
 801cba0:	2b07      	cmp	r3, #7
 801cba2:	e9cd 3426 	strd	r3, r4, [sp, #152]	; 0x98
 801cba6:	e9ca 2500 	strd	r2, r5, [sl]
 801cbaa:	f300 856a 	bgt.w	801d682 <_svfprintf_r+0xf4a>
 801cbae:	f89d 6077 	ldrb.w	r6, [sp, #119]	; 0x77
 801cbb2:	f10a 0a08 	add.w	sl, sl, #8
 801cbb6:	b176      	cbz	r6, 801cbd6 <_svfprintf_r+0x49e>
 801cbb8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801cbba:	3301      	adds	r3, #1
 801cbbc:	3401      	adds	r4, #1
 801cbbe:	f10d 0177 	add.w	r1, sp, #119	; 0x77
 801cbc2:	2201      	movs	r2, #1
 801cbc4:	2b07      	cmp	r3, #7
 801cbc6:	e9cd 3426 	strd	r3, r4, [sp, #152]	; 0x98
 801cbca:	e9ca 1200 	strd	r1, r2, [sl]
 801cbce:	f300 82f2 	bgt.w	801d1b6 <_svfprintf_r+0xa7e>
 801cbd2:	f10a 0a08 	add.w	sl, sl, #8
 801cbd6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cbd8:	b16b      	cbz	r3, 801cbf6 <_svfprintf_r+0x4be>
 801cbda:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801cbdc:	3301      	adds	r3, #1
 801cbde:	3402      	adds	r4, #2
 801cbe0:	a91e      	add	r1, sp, #120	; 0x78
 801cbe2:	2202      	movs	r2, #2
 801cbe4:	2b07      	cmp	r3, #7
 801cbe6:	e9cd 3426 	strd	r3, r4, [sp, #152]	; 0x98
 801cbea:	e9ca 1200 	strd	r1, r2, [sl]
 801cbee:	f300 82ed 	bgt.w	801d1cc <_svfprintf_r+0xa94>
 801cbf2:	f10a 0a08 	add.w	sl, sl, #8
 801cbf6:	f1b9 0f80 	cmp.w	r9, #128	; 0x80
 801cbfa:	f000 81e8 	beq.w	801cfce <_svfprintf_r+0x896>
 801cbfe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cc00:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801cc02:	1a9d      	subs	r5, r3, r2
 801cc04:	2d00      	cmp	r5, #0
 801cc06:	dd3e      	ble.n	801cc86 <_svfprintf_r+0x54e>
 801cc08:	2d10      	cmp	r5, #16
 801cc0a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801cc0c:	f8df 901c 	ldr.w	r9, [pc, #28]	; 801cc2c <_svfprintf_r+0x4f4>
 801cc10:	dd2e      	ble.n	801cc70 <_svfprintf_r+0x538>
 801cc12:	4648      	mov	r0, r9
 801cc14:	4653      	mov	r3, sl
 801cc16:	4621      	mov	r1, r4
 801cc18:	46b9      	mov	r9, r7
 801cc1a:	2610      	movs	r6, #16
 801cc1c:	e9dd a40c 	ldrd	sl, r4, [sp, #48]	; 0x30
 801cc20:	4607      	mov	r7, r0
 801cc22:	e00a      	b.n	801cc3a <_svfprintf_r+0x502>
 801cc24:	08027654 	.word	0x08027654
 801cc28:	08027674 	.word	0x08027674
 801cc2c:	08027684 	.word	0x08027684
 801cc30:	3d10      	subs	r5, #16
 801cc32:	2d10      	cmp	r5, #16
 801cc34:	f103 0308 	add.w	r3, r3, #8
 801cc38:	dd15      	ble.n	801cc66 <_svfprintf_r+0x52e>
 801cc3a:	3201      	adds	r2, #1
 801cc3c:	3110      	adds	r1, #16
 801cc3e:	2a07      	cmp	r2, #7
 801cc40:	e9cd 2126 	strd	r2, r1, [sp, #152]	; 0x98
 801cc44:	e9c3 7600 	strd	r7, r6, [r3]
 801cc48:	ddf2      	ble.n	801cc30 <_svfprintf_r+0x4f8>
 801cc4a:	aa25      	add	r2, sp, #148	; 0x94
 801cc4c:	4651      	mov	r1, sl
 801cc4e:	4620      	mov	r0, r4
 801cc50:	f002 fe82 	bl	801f958 <__ssprint_r>
 801cc54:	2800      	cmp	r0, #0
 801cc56:	f47f ae3c 	bne.w	801c8d2 <_svfprintf_r+0x19a>
 801cc5a:	3d10      	subs	r5, #16
 801cc5c:	2d10      	cmp	r5, #16
 801cc5e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801cc62:	4643      	mov	r3, r8
 801cc64:	dce9      	bgt.n	801cc3a <_svfprintf_r+0x502>
 801cc66:	469a      	mov	sl, r3
 801cc68:	463b      	mov	r3, r7
 801cc6a:	460c      	mov	r4, r1
 801cc6c:	464f      	mov	r7, r9
 801cc6e:	4699      	mov	r9, r3
 801cc70:	3201      	adds	r2, #1
 801cc72:	442c      	add	r4, r5
 801cc74:	2a07      	cmp	r2, #7
 801cc76:	e9cd 2426 	strd	r2, r4, [sp, #152]	; 0x98
 801cc7a:	e9ca 9500 	strd	r9, r5, [sl]
 801cc7e:	f300 82c7 	bgt.w	801d210 <_svfprintf_r+0xad8>
 801cc82:	f10a 0a08 	add.w	sl, sl, #8
 801cc86:	9b07      	ldr	r3, [sp, #28]
 801cc88:	05de      	lsls	r6, r3, #23
 801cc8a:	f100 8142 	bmi.w	801cf12 <_svfprintf_r+0x7da>
 801cc8e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801cc90:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801cc92:	f8ca 2000 	str.w	r2, [sl]
 801cc96:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801cc98:	f8ca 2004 	str.w	r2, [sl, #4]
 801cc9c:	3301      	adds	r3, #1
 801cc9e:	4414      	add	r4, r2
 801cca0:	2b07      	cmp	r3, #7
 801cca2:	9427      	str	r4, [sp, #156]	; 0x9c
 801cca4:	9326      	str	r3, [sp, #152]	; 0x98
 801cca6:	f300 821a 	bgt.w	801d0de <_svfprintf_r+0x9a6>
 801ccaa:	f10a 0a08 	add.w	sl, sl, #8
 801ccae:	9b07      	ldr	r3, [sp, #28]
 801ccb0:	075b      	lsls	r3, r3, #29
 801ccb2:	d531      	bpl.n	801cd18 <_svfprintf_r+0x5e0>
 801ccb4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ccb6:	9a08      	ldr	r2, [sp, #32]
 801ccb8:	1a9d      	subs	r5, r3, r2
 801ccba:	2d00      	cmp	r5, #0
 801ccbc:	dd2c      	ble.n	801cd18 <_svfprintf_r+0x5e0>
 801ccbe:	2d10      	cmp	r5, #16
 801ccc0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ccc2:	dd1f      	ble.n	801cd04 <_svfprintf_r+0x5cc>
 801ccc4:	2610      	movs	r6, #16
 801ccc6:	e9dd 970c 	ldrd	r9, r7, [sp, #48]	; 0x30
 801ccca:	e004      	b.n	801ccd6 <_svfprintf_r+0x59e>
 801cccc:	3d10      	subs	r5, #16
 801ccce:	2d10      	cmp	r5, #16
 801ccd0:	f10a 0a08 	add.w	sl, sl, #8
 801ccd4:	dd16      	ble.n	801cd04 <_svfprintf_r+0x5cc>
 801ccd6:	3301      	adds	r3, #1
 801ccd8:	4ac7      	ldr	r2, [pc, #796]	; (801cff8 <_svfprintf_r+0x8c0>)
 801ccda:	3410      	adds	r4, #16
 801ccdc:	2b07      	cmp	r3, #7
 801ccde:	e9cd 3426 	strd	r3, r4, [sp, #152]	; 0x98
 801cce2:	e9ca 2600 	strd	r2, r6, [sl]
 801cce6:	ddf1      	ble.n	801cccc <_svfprintf_r+0x594>
 801cce8:	aa25      	add	r2, sp, #148	; 0x94
 801ccea:	4649      	mov	r1, r9
 801ccec:	4638      	mov	r0, r7
 801ccee:	f002 fe33 	bl	801f958 <__ssprint_r>
 801ccf2:	2800      	cmp	r0, #0
 801ccf4:	f47f aded 	bne.w	801c8d2 <_svfprintf_r+0x19a>
 801ccf8:	3d10      	subs	r5, #16
 801ccfa:	2d10      	cmp	r5, #16
 801ccfc:	e9dd 3426 	ldrd	r3, r4, [sp, #152]	; 0x98
 801cd00:	46c2      	mov	sl, r8
 801cd02:	dce8      	bgt.n	801ccd6 <_svfprintf_r+0x59e>
 801cd04:	3301      	adds	r3, #1
 801cd06:	4abc      	ldr	r2, [pc, #752]	; (801cff8 <_svfprintf_r+0x8c0>)
 801cd08:	442c      	add	r4, r5
 801cd0a:	2b07      	cmp	r3, #7
 801cd0c:	e9cd 3426 	strd	r3, r4, [sp, #152]	; 0x98
 801cd10:	e9ca 2500 	strd	r2, r5, [sl]
 801cd14:	f300 8367 	bgt.w	801d3e6 <_svfprintf_r+0xcae>
 801cd18:	e9dd 320a 	ldrd	r3, r2, [sp, #40]	; 0x28
 801cd1c:	9908      	ldr	r1, [sp, #32]
 801cd1e:	428a      	cmp	r2, r1
 801cd20:	bfac      	ite	ge
 801cd22:	189b      	addge	r3, r3, r2
 801cd24:	185b      	addlt	r3, r3, r1
 801cd26:	930a      	str	r3, [sp, #40]	; 0x28
 801cd28:	2c00      	cmp	r4, #0
 801cd2a:	f040 81a1 	bne.w	801d070 <_svfprintf_r+0x938>
 801cd2e:	2300      	movs	r3, #0
 801cd30:	9326      	str	r3, [sp, #152]	; 0x98
 801cd32:	46c2      	mov	sl, r8
 801cd34:	e528      	b.n	801c788 <_svfprintf_r+0x50>
 801cd36:	2a00      	cmp	r2, #0
 801cd38:	f040 8731 	bne.w	801db9e <_svfprintf_r+0x1466>
 801cd3c:	4baf      	ldr	r3, [pc, #700]	; (801cffc <_svfprintf_r+0x8c4>)
 801cd3e:	9318      	str	r3, [sp, #96]	; 0x60
 801cd40:	f019 0f20 	tst.w	r9, #32
 801cd44:	d03f      	beq.n	801cdc6 <_svfprintf_r+0x68e>
 801cd46:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801cd48:	3507      	adds	r5, #7
 801cd4a:	f025 0307 	bic.w	r3, r5, #7
 801cd4e:	e9d3 4500 	ldrd	r4, r5, [r3]
 801cd52:	f103 0208 	add.w	r2, r3, #8
 801cd56:	920f      	str	r2, [sp, #60]	; 0x3c
 801cd58:	f019 0f01 	tst.w	r9, #1
 801cd5c:	f000 80c1 	beq.w	801cee2 <_svfprintf_r+0x7aa>
 801cd60:	ea54 0305 	orrs.w	r3, r4, r5
 801cd64:	f000 80bd 	beq.w	801cee2 <_svfprintf_r+0x7aa>
 801cd68:	2330      	movs	r3, #48	; 0x30
 801cd6a:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
 801cd6e:	f88d 7079 	strb.w	r7, [sp, #121]	; 0x79
 801cd72:	f049 0902 	orr.w	r9, r9, #2
 801cd76:	2302      	movs	r3, #2
 801cd78:	e5c8      	b.n	801c90c <_svfprintf_r+0x1d4>
 801cd7a:	f89b 3000 	ldrb.w	r3, [fp]
 801cd7e:	2201      	movs	r2, #1
 801cd80:	212b      	movs	r1, #43	; 0x2b
 801cd82:	e534      	b.n	801c7ee <_svfprintf_r+0xb6>
 801cd84:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801cd86:	f89b 3000 	ldrb.w	r3, [fp]
 801cd8a:	6804      	ldr	r4, [r0, #0]
 801cd8c:	940b      	str	r4, [sp, #44]	; 0x2c
 801cd8e:	2c00      	cmp	r4, #0
 801cd90:	f100 0004 	add.w	r0, r0, #4
 801cd94:	f2c0 841c 	blt.w	801d5d0 <_svfprintf_r+0xe98>
 801cd98:	900f      	str	r0, [sp, #60]	; 0x3c
 801cd9a:	e528      	b.n	801c7ee <_svfprintf_r+0xb6>
 801cd9c:	f049 0901 	orr.w	r9, r9, #1
 801cda0:	f89b 3000 	ldrb.w	r3, [fp]
 801cda4:	e523      	b.n	801c7ee <_svfprintf_r+0xb6>
 801cda6:	f89b 3000 	ldrb.w	r3, [fp]
 801cdaa:	2900      	cmp	r1, #0
 801cdac:	f47f ad1f 	bne.w	801c7ee <_svfprintf_r+0xb6>
 801cdb0:	2201      	movs	r2, #1
 801cdb2:	2120      	movs	r1, #32
 801cdb4:	e51b      	b.n	801c7ee <_svfprintf_r+0xb6>
 801cdb6:	2a00      	cmp	r2, #0
 801cdb8:	f040 86e1 	bne.w	801db7e <_svfprintf_r+0x1446>
 801cdbc:	4b90      	ldr	r3, [pc, #576]	; (801d000 <_svfprintf_r+0x8c8>)
 801cdbe:	9318      	str	r3, [sp, #96]	; 0x60
 801cdc0:	f019 0f20 	tst.w	r9, #32
 801cdc4:	d1bf      	bne.n	801cd46 <_svfprintf_r+0x60e>
 801cdc6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801cdc8:	f019 0f10 	tst.w	r9, #16
 801cdcc:	f853 4b04 	ldr.w	r4, [r3], #4
 801cdd0:	930f      	str	r3, [sp, #60]	; 0x3c
 801cdd2:	f040 8316 	bne.w	801d402 <_svfprintf_r+0xcca>
 801cdd6:	f019 0f40 	tst.w	r9, #64	; 0x40
 801cdda:	f000 8312 	beq.w	801d402 <_svfprintf_r+0xcca>
 801cdde:	b2a4      	uxth	r4, r4
 801cde0:	2500      	movs	r5, #0
 801cde2:	e7b9      	b.n	801cd58 <_svfprintf_r+0x620>
 801cde4:	f049 0908 	orr.w	r9, r9, #8
 801cde8:	f89b 3000 	ldrb.w	r3, [fp]
 801cdec:	e4ff      	b.n	801c7ee <_svfprintf_r+0xb6>
 801cdee:	2a00      	cmp	r2, #0
 801cdf0:	f040 86d9 	bne.w	801dba6 <_svfprintf_r+0x146e>
 801cdf4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801cdf6:	4b83      	ldr	r3, [pc, #524]	; (801d004 <_svfprintf_r+0x8cc>)
 801cdf8:	3507      	adds	r5, #7
 801cdfa:	f025 0607 	bic.w	r6, r5, #7
 801cdfe:	e9d6 0100 	ldrd	r0, r1, [r6]
 801ce02:	f021 4400 	bic.w	r4, r1, #2147483648	; 0x80000000
 801ce06:	9114      	str	r1, [sp, #80]	; 0x50
 801ce08:	3608      	adds	r6, #8
 801ce0a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801ce0e:	4621      	mov	r1, r4
 801ce10:	9015      	str	r0, [sp, #84]	; 0x54
 801ce12:	4605      	mov	r5, r0
 801ce14:	960f      	str	r6, [sp, #60]	; 0x3c
 801ce16:	f7e3 ff55 	bl	8000cc4 <__aeabi_dcmpun>
 801ce1a:	2800      	cmp	r0, #0
 801ce1c:	f040 833e 	bne.w	801d49c <_svfprintf_r+0xd64>
 801ce20:	4628      	mov	r0, r5
 801ce22:	4621      	mov	r1, r4
 801ce24:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801ce28:	4b76      	ldr	r3, [pc, #472]	; (801d004 <_svfprintf_r+0x8cc>)
 801ce2a:	f7e3 ff2d 	bl	8000c88 <__aeabi_dcmple>
 801ce2e:	2800      	cmp	r0, #0
 801ce30:	f040 8334 	bne.w	801d49c <_svfprintf_r+0xd64>
 801ce34:	e9dd 0215 	ldrd	r0, r2, [sp, #84]	; 0x54
 801ce38:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801ce3a:	9914      	ldr	r1, [sp, #80]	; 0x50
 801ce3c:	f7e3 ff1a 	bl	8000c74 <__aeabi_dcmplt>
 801ce40:	2800      	cmp	r0, #0
 801ce42:	f040 853a 	bne.w	801d8ba <_svfprintf_r+0x1182>
 801ce46:	f89d 6077 	ldrb.w	r6, [sp, #119]	; 0x77
 801ce4a:	4a6f      	ldr	r2, [pc, #444]	; (801d008 <_svfprintf_r+0x8d0>)
 801ce4c:	4b6f      	ldr	r3, [pc, #444]	; (801d00c <_svfprintf_r+0x8d4>)
 801ce4e:	2103      	movs	r1, #3
 801ce50:	2000      	movs	r0, #0
 801ce52:	f029 0480 	bic.w	r4, r9, #128	; 0x80
 801ce56:	2f47      	cmp	r7, #71	; 0x47
 801ce58:	bfd8      	it	le
 801ce5a:	461a      	movle	r2, r3
 801ce5c:	e9cd 1008 	strd	r1, r0, [sp, #32]
 801ce60:	9407      	str	r4, [sp, #28]
 801ce62:	9211      	str	r2, [sp, #68]	; 0x44
 801ce64:	910e      	str	r1, [sp, #56]	; 0x38
 801ce66:	9012      	str	r0, [sp, #72]	; 0x48
 801ce68:	e5c8      	b.n	801c9fc <_svfprintf_r+0x2c4>
 801ce6a:	2a00      	cmp	r2, #0
 801ce6c:	f040 869f 	bne.w	801dbae <_svfprintf_r+0x1476>
 801ce70:	f049 0910 	orr.w	r9, r9, #16
 801ce74:	f019 0f20 	tst.w	r9, #32
 801ce78:	f47f adf7 	bne.w	801ca6a <_svfprintf_r+0x332>
 801ce7c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ce7e:	f019 0f10 	tst.w	r9, #16
 801ce82:	f853 4b04 	ldr.w	r4, [r3], #4
 801ce86:	930f      	str	r3, [sp, #60]	; 0x3c
 801ce88:	f040 82bd 	bne.w	801d406 <_svfprintf_r+0xcce>
 801ce8c:	f019 0f40 	tst.w	r9, #64	; 0x40
 801ce90:	f000 82b9 	beq.w	801d406 <_svfprintf_r+0xcce>
 801ce94:	b224      	sxth	r4, r4
 801ce96:	17e5      	asrs	r5, r4, #31
 801ce98:	e5f0      	b.n	801ca7c <_svfprintf_r+0x344>
 801ce9a:	f89b 7000 	ldrb.w	r7, [fp]
 801ce9e:	2f2a      	cmp	r7, #42	; 0x2a
 801cea0:	f10b 0001 	add.w	r0, fp, #1
 801cea4:	f000 8640 	beq.w	801db28 <_svfprintf_r+0x13f0>
 801cea8:	f1a7 0330 	sub.w	r3, r7, #48	; 0x30
 801ceac:	2b09      	cmp	r3, #9
 801ceae:	4683      	mov	fp, r0
 801ceb0:	f200 854c 	bhi.w	801d94c <_svfprintf_r+0x1214>
 801ceb4:	2000      	movs	r0, #0
 801ceb6:	f81b 7b01 	ldrb.w	r7, [fp], #1
 801ceba:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801cebe:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 801cec2:	f1a7 0330 	sub.w	r3, r7, #48	; 0x30
 801cec6:	2b09      	cmp	r3, #9
 801cec8:	d9f5      	bls.n	801ceb6 <_svfprintf_r+0x77e>
 801ceca:	9009      	str	r0, [sp, #36]	; 0x24
 801cecc:	e492      	b.n	801c7f4 <_svfprintf_r+0xbc>
 801cece:	f89b 3000 	ldrb.w	r3, [fp]
 801ced2:	f049 0904 	orr.w	r9, r9, #4
 801ced6:	e48a      	b.n	801c7ee <_svfprintf_r+0xb6>
 801ced8:	f049 0980 	orr.w	r9, r9, #128	; 0x80
 801cedc:	f89b 3000 	ldrb.w	r3, [fp]
 801cee0:	e485      	b.n	801c7ee <_svfprintf_r+0xb6>
 801cee2:	2302      	movs	r3, #2
 801cee4:	e512      	b.n	801c90c <_svfprintf_r+0x1d4>
 801cee6:	2a00      	cmp	r2, #0
 801cee8:	f040 8665 	bne.w	801dbb6 <_svfprintf_r+0x147e>
 801ceec:	2f00      	cmp	r7, #0
 801ceee:	f43f ace9 	beq.w	801c8c4 <_svfprintf_r+0x18c>
 801cef2:	2300      	movs	r3, #0
 801cef4:	2201      	movs	r2, #1
 801cef6:	461e      	mov	r6, r3
 801cef8:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
 801cefc:	9309      	str	r3, [sp, #36]	; 0x24
 801cefe:	9312      	str	r3, [sp, #72]	; 0x48
 801cf00:	ab28      	add	r3, sp, #160	; 0xa0
 801cf02:	9208      	str	r2, [sp, #32]
 801cf04:	f88d 70a0 	strb.w	r7, [sp, #160]	; 0xa0
 801cf08:	f8cd 901c 	str.w	r9, [sp, #28]
 801cf0c:	920e      	str	r2, [sp, #56]	; 0x38
 801cf0e:	9311      	str	r3, [sp, #68]	; 0x44
 801cf10:	e604      	b.n	801cb1c <_svfprintf_r+0x3e4>
 801cf12:	2f65      	cmp	r7, #101	; 0x65
 801cf14:	f340 80ee 	ble.w	801d0f4 <_svfprintf_r+0x9bc>
 801cf18:	e9dd 0215 	ldrd	r0, r2, [sp, #84]	; 0x54
 801cf1c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801cf1e:	9914      	ldr	r1, [sp, #80]	; 0x50
 801cf20:	f7e3 fe9e 	bl	8000c60 <__aeabi_dcmpeq>
 801cf24:	2800      	cmp	r0, #0
 801cf26:	f000 817e 	beq.w	801d226 <_svfprintf_r+0xaee>
 801cf2a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801cf2c:	4a38      	ldr	r2, [pc, #224]	; (801d010 <_svfprintf_r+0x8d8>)
 801cf2e:	f8ca 2000 	str.w	r2, [sl]
 801cf32:	3301      	adds	r3, #1
 801cf34:	3401      	adds	r4, #1
 801cf36:	2201      	movs	r2, #1
 801cf38:	2b07      	cmp	r3, #7
 801cf3a:	e9cd 3426 	strd	r3, r4, [sp, #152]	; 0x98
 801cf3e:	f8ca 2004 	str.w	r2, [sl, #4]
 801cf42:	f300 83f1 	bgt.w	801d728 <_svfprintf_r+0xff0>
 801cf46:	f10a 0a08 	add.w	sl, sl, #8
 801cf4a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801cf4c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801cf4e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 801cf50:	4293      	cmp	r3, r2
 801cf52:	f280 8243 	bge.w	801d3dc <_svfprintf_r+0xca4>
 801cf56:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801cf58:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 801cf5a:	f8ca 2000 	str.w	r2, [sl]
 801cf5e:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801cf60:	f8ca 2004 	str.w	r2, [sl, #4]
 801cf64:	3301      	adds	r3, #1
 801cf66:	4414      	add	r4, r2
 801cf68:	2b07      	cmp	r3, #7
 801cf6a:	e9cd 3426 	strd	r3, r4, [sp, #152]	; 0x98
 801cf6e:	f300 8352 	bgt.w	801d616 <_svfprintf_r+0xede>
 801cf72:	f10a 0a08 	add.w	sl, sl, #8
 801cf76:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801cf78:	1e5d      	subs	r5, r3, #1
 801cf7a:	2d00      	cmp	r5, #0
 801cf7c:	f77f ae97 	ble.w	801ccae <_svfprintf_r+0x576>
 801cf80:	2d10      	cmp	r5, #16
 801cf82:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801cf84:	f8df 908c 	ldr.w	r9, [pc, #140]	; 801d014 <_svfprintf_r+0x8dc>
 801cf88:	f340 83a7 	ble.w	801d6da <_svfprintf_r+0xfa2>
 801cf8c:	4623      	mov	r3, r4
 801cf8e:	2610      	movs	r6, #16
 801cf90:	464c      	mov	r4, r9
 801cf92:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 801cf94:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801cf98:	e005      	b.n	801cfa6 <_svfprintf_r+0x86e>
 801cf9a:	f10a 0a08 	add.w	sl, sl, #8
 801cf9e:	3d10      	subs	r5, #16
 801cfa0:	2d10      	cmp	r5, #16
 801cfa2:	f340 8398 	ble.w	801d6d6 <_svfprintf_r+0xf9e>
 801cfa6:	3201      	adds	r2, #1
 801cfa8:	3310      	adds	r3, #16
 801cfaa:	2a07      	cmp	r2, #7
 801cfac:	e9cd 2326 	strd	r2, r3, [sp, #152]	; 0x98
 801cfb0:	e9ca 4600 	strd	r4, r6, [sl]
 801cfb4:	ddf1      	ble.n	801cf9a <_svfprintf_r+0x862>
 801cfb6:	aa25      	add	r2, sp, #148	; 0x94
 801cfb8:	4649      	mov	r1, r9
 801cfba:	4638      	mov	r0, r7
 801cfbc:	f002 fccc 	bl	801f958 <__ssprint_r>
 801cfc0:	2800      	cmp	r0, #0
 801cfc2:	f47f ac86 	bne.w	801c8d2 <_svfprintf_r+0x19a>
 801cfc6:	e9dd 2326 	ldrd	r2, r3, [sp, #152]	; 0x98
 801cfca:	46c2      	mov	sl, r8
 801cfcc:	e7e7      	b.n	801cf9e <_svfprintf_r+0x866>
 801cfce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801cfd0:	9a08      	ldr	r2, [sp, #32]
 801cfd2:	1a9d      	subs	r5, r3, r2
 801cfd4:	2d00      	cmp	r5, #0
 801cfd6:	f77f ae12 	ble.w	801cbfe <_svfprintf_r+0x4c6>
 801cfda:	2d10      	cmp	r5, #16
 801cfdc:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801cfde:	f8df 9034 	ldr.w	r9, [pc, #52]	; 801d014 <_svfprintf_r+0x8dc>
 801cfe2:	dd39      	ble.n	801d058 <_svfprintf_r+0x920>
 801cfe4:	4648      	mov	r0, r9
 801cfe6:	4653      	mov	r3, sl
 801cfe8:	4621      	mov	r1, r4
 801cfea:	46b9      	mov	r9, r7
 801cfec:	2610      	movs	r6, #16
 801cfee:	e9dd a40c 	ldrd	sl, r4, [sp, #48]	; 0x30
 801cff2:	4607      	mov	r7, r0
 801cff4:	e015      	b.n	801d022 <_svfprintf_r+0x8ea>
 801cff6:	bf00      	nop
 801cff8:	08027674 	.word	0x08027674
 801cffc:	08027640 	.word	0x08027640
 801d000:	08027654 	.word	0x08027654
 801d004:	7fefffff 	.word	0x7fefffff
 801d008:	08027634 	.word	0x08027634
 801d00c:	08027630 	.word	0x08027630
 801d010:	08027670 	.word	0x08027670
 801d014:	08027684 	.word	0x08027684
 801d018:	3d10      	subs	r5, #16
 801d01a:	2d10      	cmp	r5, #16
 801d01c:	f103 0308 	add.w	r3, r3, #8
 801d020:	dd15      	ble.n	801d04e <_svfprintf_r+0x916>
 801d022:	3201      	adds	r2, #1
 801d024:	3110      	adds	r1, #16
 801d026:	2a07      	cmp	r2, #7
 801d028:	e9cd 2126 	strd	r2, r1, [sp, #152]	; 0x98
 801d02c:	e9c3 7600 	strd	r7, r6, [r3]
 801d030:	ddf2      	ble.n	801d018 <_svfprintf_r+0x8e0>
 801d032:	aa25      	add	r2, sp, #148	; 0x94
 801d034:	4651      	mov	r1, sl
 801d036:	4620      	mov	r0, r4
 801d038:	f002 fc8e 	bl	801f958 <__ssprint_r>
 801d03c:	2800      	cmp	r0, #0
 801d03e:	f47f ac48 	bne.w	801c8d2 <_svfprintf_r+0x19a>
 801d042:	3d10      	subs	r5, #16
 801d044:	2d10      	cmp	r5, #16
 801d046:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801d04a:	4643      	mov	r3, r8
 801d04c:	dce9      	bgt.n	801d022 <_svfprintf_r+0x8ea>
 801d04e:	469a      	mov	sl, r3
 801d050:	463b      	mov	r3, r7
 801d052:	460c      	mov	r4, r1
 801d054:	464f      	mov	r7, r9
 801d056:	4699      	mov	r9, r3
 801d058:	3201      	adds	r2, #1
 801d05a:	442c      	add	r4, r5
 801d05c:	2a07      	cmp	r2, #7
 801d05e:	e9cd 2426 	strd	r2, r4, [sp, #152]	; 0x98
 801d062:	e9ca 9500 	strd	r9, r5, [sl]
 801d066:	f300 8342 	bgt.w	801d6ee <_svfprintf_r+0xfb6>
 801d06a:	f10a 0a08 	add.w	sl, sl, #8
 801d06e:	e5c6      	b.n	801cbfe <_svfprintf_r+0x4c6>
 801d070:	aa25      	add	r2, sp, #148	; 0x94
 801d072:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
 801d076:	f002 fc6f 	bl	801f958 <__ssprint_r>
 801d07a:	2800      	cmp	r0, #0
 801d07c:	f43f ae57 	beq.w	801cd2e <_svfprintf_r+0x5f6>
 801d080:	e427      	b.n	801c8d2 <_svfprintf_r+0x19a>
 801d082:	aa25      	add	r2, sp, #148	; 0x94
 801d084:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
 801d088:	f002 fc66 	bl	801f958 <__ssprint_r>
 801d08c:	2800      	cmp	r0, #0
 801d08e:	f47f ac20 	bne.w	801c8d2 <_svfprintf_r+0x19a>
 801d092:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d094:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 801d096:	46c2      	mov	sl, r8
 801d098:	b91b      	cbnz	r3, 801d0a2 <_svfprintf_r+0x96a>
 801d09a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d09c:	2a00      	cmp	r2, #0
 801d09e:	f000 837c 	beq.w	801d79a <_svfprintf_r+0x1062>
 801d0a2:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801d0a4:	991a      	ldr	r1, [sp, #104]	; 0x68
 801d0a6:	f8ca 1000 	str.w	r1, [sl]
 801d0aa:	9919      	ldr	r1, [sp, #100]	; 0x64
 801d0ac:	f8ca 1004 	str.w	r1, [sl, #4]
 801d0b0:	3201      	adds	r2, #1
 801d0b2:	440c      	add	r4, r1
 801d0b4:	2a07      	cmp	r2, #7
 801d0b6:	9427      	str	r4, [sp, #156]	; 0x9c
 801d0b8:	9226      	str	r2, [sp, #152]	; 0x98
 801d0ba:	f300 8457 	bgt.w	801d96c <_svfprintf_r+0x1234>
 801d0be:	f10a 0a08 	add.w	sl, sl, #8
 801d0c2:	2b00      	cmp	r3, #0
 801d0c4:	f2c0 8490 	blt.w	801d9e8 <_svfprintf_r+0x12b0>
 801d0c8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801d0ca:	9911      	ldr	r1, [sp, #68]	; 0x44
 801d0cc:	3201      	adds	r2, #1
 801d0ce:	441c      	add	r4, r3
 801d0d0:	2a07      	cmp	r2, #7
 801d0d2:	e9cd 2426 	strd	r2, r4, [sp, #152]	; 0x98
 801d0d6:	e9ca 1300 	strd	r1, r3, [sl]
 801d0da:	f77f ade6 	ble.w	801ccaa <_svfprintf_r+0x572>
 801d0de:	aa25      	add	r2, sp, #148	; 0x94
 801d0e0:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
 801d0e4:	f002 fc38 	bl	801f958 <__ssprint_r>
 801d0e8:	2800      	cmp	r0, #0
 801d0ea:	f47f abf2 	bne.w	801c8d2 <_svfprintf_r+0x19a>
 801d0ee:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 801d0f0:	46c2      	mov	sl, r8
 801d0f2:	e5dc      	b.n	801ccae <_svfprintf_r+0x576>
 801d0f4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d0f6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801d0f8:	2a01      	cmp	r2, #1
 801d0fa:	f104 0401 	add.w	r4, r4, #1
 801d0fe:	f103 0501 	add.w	r5, r3, #1
 801d102:	f10a 0608 	add.w	r6, sl, #8
 801d106:	f340 8147 	ble.w	801d398 <_svfprintf_r+0xc60>
 801d10a:	2301      	movs	r3, #1
 801d10c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d10e:	f8ca 2000 	str.w	r2, [sl]
 801d112:	2d07      	cmp	r5, #7
 801d114:	e9cd 5426 	strd	r5, r4, [sp, #152]	; 0x98
 801d118:	f8ca 3004 	str.w	r3, [sl, #4]
 801d11c:	f300 82bf 	bgt.w	801d69e <_svfprintf_r+0xf66>
 801d120:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801d122:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 801d124:	3501      	adds	r5, #1
 801d126:	441c      	add	r4, r3
 801d128:	2d07      	cmp	r5, #7
 801d12a:	e9cd 5426 	strd	r5, r4, [sp, #152]	; 0x98
 801d12e:	e9c6 2300 	strd	r2, r3, [r6]
 801d132:	f300 82c0 	bgt.w	801d6b6 <_svfprintf_r+0xf7e>
 801d136:	3608      	adds	r6, #8
 801d138:	1c6f      	adds	r7, r5, #1
 801d13a:	970e      	str	r7, [sp, #56]	; 0x38
 801d13c:	9709      	str	r7, [sp, #36]	; 0x24
 801d13e:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 801d140:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801d142:	9914      	ldr	r1, [sp, #80]	; 0x50
 801d144:	e9dd 0215 	ldrd	r0, r2, [sp, #84]	; 0x54
 801d148:	3f01      	subs	r7, #1
 801d14a:	f106 0a08 	add.w	sl, r6, #8
 801d14e:	f7e3 fd87 	bl	8000c60 <__aeabi_dcmpeq>
 801d152:	2800      	cmp	r0, #0
 801d154:	f040 80e0 	bne.w	801d318 <_svfprintf_r+0xbe0>
 801d158:	443c      	add	r4, r7
 801d15a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801d15c:	6077      	str	r7, [r6, #4]
 801d15e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801d160:	9427      	str	r4, [sp, #156]	; 0x9c
 801d162:	3301      	adds	r3, #1
 801d164:	2f07      	cmp	r7, #7
 801d166:	6033      	str	r3, [r6, #0]
 801d168:	9726      	str	r7, [sp, #152]	; 0x98
 801d16a:	f300 8244 	bgt.w	801d5f6 <_svfprintf_r+0xebe>
 801d16e:	f106 0310 	add.w	r3, r6, #16
 801d172:	1caa      	adds	r2, r5, #2
 801d174:	4656      	mov	r6, sl
 801d176:	9209      	str	r2, [sp, #36]	; 0x24
 801d178:	469a      	mov	sl, r3
 801d17a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801d17c:	6072      	str	r2, [r6, #4]
 801d17e:	4414      	add	r4, r2
 801d180:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d182:	9427      	str	r4, [sp, #156]	; 0x9c
 801d184:	ab21      	add	r3, sp, #132	; 0x84
 801d186:	2a07      	cmp	r2, #7
 801d188:	9226      	str	r2, [sp, #152]	; 0x98
 801d18a:	6033      	str	r3, [r6, #0]
 801d18c:	f77f ad8f 	ble.w	801ccae <_svfprintf_r+0x576>
 801d190:	e7a5      	b.n	801d0de <_svfprintf_r+0x9a6>
 801d192:	2b01      	cmp	r3, #1
 801d194:	f8cd 901c 	str.w	r9, [sp, #28]
 801d198:	f47f ac87 	bne.w	801caaa <_svfprintf_r+0x372>
 801d19c:	2d00      	cmp	r5, #0
 801d19e:	bf08      	it	eq
 801d1a0:	2c0a      	cmpeq	r4, #10
 801d1a2:	f080 8148 	bcs.w	801d436 <_svfprintf_r+0xcfe>
 801d1a6:	ab42      	add	r3, sp, #264	; 0x108
 801d1a8:	3430      	adds	r4, #48	; 0x30
 801d1aa:	f803 4d41 	strb.w	r4, [r3, #-65]!
 801d1ae:	9311      	str	r3, [sp, #68]	; 0x44
 801d1b0:	2301      	movs	r3, #1
 801d1b2:	930e      	str	r3, [sp, #56]	; 0x38
 801d1b4:	e497      	b.n	801cae6 <_svfprintf_r+0x3ae>
 801d1b6:	aa25      	add	r2, sp, #148	; 0x94
 801d1b8:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
 801d1bc:	f002 fbcc 	bl	801f958 <__ssprint_r>
 801d1c0:	2800      	cmp	r0, #0
 801d1c2:	f47f ab86 	bne.w	801c8d2 <_svfprintf_r+0x19a>
 801d1c6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 801d1c8:	46c2      	mov	sl, r8
 801d1ca:	e504      	b.n	801cbd6 <_svfprintf_r+0x49e>
 801d1cc:	aa25      	add	r2, sp, #148	; 0x94
 801d1ce:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
 801d1d2:	f002 fbc1 	bl	801f958 <__ssprint_r>
 801d1d6:	2800      	cmp	r0, #0
 801d1d8:	f47f ab7b 	bne.w	801c8d2 <_svfprintf_r+0x19a>
 801d1dc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 801d1de:	46c2      	mov	sl, r8
 801d1e0:	e509      	b.n	801cbf6 <_svfprintf_r+0x4be>
 801d1e2:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801d1e6:	4642      	mov	r2, r8
 801d1e8:	0923      	lsrs	r3, r4, #4
 801d1ea:	f004 000f 	and.w	r0, r4, #15
 801d1ee:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
 801d1f2:	0929      	lsrs	r1, r5, #4
 801d1f4:	461c      	mov	r4, r3
 801d1f6:	460d      	mov	r5, r1
 801d1f8:	f81c 3000 	ldrb.w	r3, [ip, r0]
 801d1fc:	f802 3d01 	strb.w	r3, [r2, #-1]!
 801d200:	ea54 0305 	orrs.w	r3, r4, r5
 801d204:	d1f0      	bne.n	801d1e8 <_svfprintf_r+0xab0>
 801d206:	eba8 0302 	sub.w	r3, r8, r2
 801d20a:	9211      	str	r2, [sp, #68]	; 0x44
 801d20c:	930e      	str	r3, [sp, #56]	; 0x38
 801d20e:	e46a      	b.n	801cae6 <_svfprintf_r+0x3ae>
 801d210:	aa25      	add	r2, sp, #148	; 0x94
 801d212:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
 801d216:	f002 fb9f 	bl	801f958 <__ssprint_r>
 801d21a:	2800      	cmp	r0, #0
 801d21c:	f47f ab59 	bne.w	801c8d2 <_svfprintf_r+0x19a>
 801d220:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 801d222:	46c2      	mov	sl, r8
 801d224:	e52f      	b.n	801cc86 <_svfprintf_r+0x54e>
 801d226:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d228:	2b00      	cmp	r3, #0
 801d22a:	f340 826c 	ble.w	801d706 <_svfprintf_r+0xfce>
 801d22e:	e9dd 3212 	ldrd	r3, r2, [sp, #72]	; 0x48
 801d232:	4293      	cmp	r3, r2
 801d234:	bfa8      	it	ge
 801d236:	4613      	movge	r3, r2
 801d238:	2b00      	cmp	r3, #0
 801d23a:	461d      	mov	r5, r3
 801d23c:	dd0e      	ble.n	801d25c <_svfprintf_r+0xb24>
 801d23e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801d240:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d242:	f8ca 2000 	str.w	r2, [sl]
 801d246:	3301      	adds	r3, #1
 801d248:	442c      	add	r4, r5
 801d24a:	2b07      	cmp	r3, #7
 801d24c:	9427      	str	r4, [sp, #156]	; 0x9c
 801d24e:	f8ca 5004 	str.w	r5, [sl, #4]
 801d252:	9326      	str	r3, [sp, #152]	; 0x98
 801d254:	f300 8326 	bgt.w	801d8a4 <_svfprintf_r+0x116c>
 801d258:	f10a 0a08 	add.w	sl, sl, #8
 801d25c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801d25e:	2d00      	cmp	r5, #0
 801d260:	bfa8      	it	ge
 801d262:	1b5b      	subge	r3, r3, r5
 801d264:	2b00      	cmp	r3, #0
 801d266:	461d      	mov	r5, r3
 801d268:	f300 818b 	bgt.w	801d582 <_svfprintf_r+0xe4a>
 801d26c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d26e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d270:	4293      	cmp	r3, r2
 801d272:	f2c0 81f1 	blt.w	801d658 <_svfprintf_r+0xf20>
 801d276:	9a07      	ldr	r2, [sp, #28]
 801d278:	07d1      	lsls	r1, r2, #31
 801d27a:	f100 81ed 	bmi.w	801d658 <_svfprintf_r+0xf20>
 801d27e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d280:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d282:	1ad3      	subs	r3, r2, r3
 801d284:	1a15      	subs	r5, r2, r0
 801d286:	429d      	cmp	r5, r3
 801d288:	bfa8      	it	ge
 801d28a:	461d      	movge	r5, r3
 801d28c:	2d00      	cmp	r5, #0
 801d28e:	dd0f      	ble.n	801d2b0 <_svfprintf_r+0xb78>
 801d290:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801d292:	9911      	ldr	r1, [sp, #68]	; 0x44
 801d294:	f8ca 5004 	str.w	r5, [sl, #4]
 801d298:	3201      	adds	r2, #1
 801d29a:	4401      	add	r1, r0
 801d29c:	442c      	add	r4, r5
 801d29e:	2a07      	cmp	r2, #7
 801d2a0:	f8ca 1000 	str.w	r1, [sl]
 801d2a4:	e9cd 2426 	strd	r2, r4, [sp, #152]	; 0x98
 801d2a8:	f300 8342 	bgt.w	801d930 <_svfprintf_r+0x11f8>
 801d2ac:	f10a 0a08 	add.w	sl, sl, #8
 801d2b0:	2d00      	cmp	r5, #0
 801d2b2:	bfac      	ite	ge
 801d2b4:	1b5d      	subge	r5, r3, r5
 801d2b6:	461d      	movlt	r5, r3
 801d2b8:	2d00      	cmp	r5, #0
 801d2ba:	f77f acf8 	ble.w	801ccae <_svfprintf_r+0x576>
 801d2be:	2d10      	cmp	r5, #16
 801d2c0:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801d2c2:	f8df 9668 	ldr.w	r9, [pc, #1640]	; 801d92c <_svfprintf_r+0x11f4>
 801d2c6:	f340 8208 	ble.w	801d6da <_svfprintf_r+0xfa2>
 801d2ca:	4623      	mov	r3, r4
 801d2cc:	2610      	movs	r6, #16
 801d2ce:	464c      	mov	r4, r9
 801d2d0:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 801d2d2:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801d2d6:	e005      	b.n	801d2e4 <_svfprintf_r+0xbac>
 801d2d8:	f10a 0a08 	add.w	sl, sl, #8
 801d2dc:	3d10      	subs	r5, #16
 801d2de:	2d10      	cmp	r5, #16
 801d2e0:	f340 81f9 	ble.w	801d6d6 <_svfprintf_r+0xf9e>
 801d2e4:	3201      	adds	r2, #1
 801d2e6:	3310      	adds	r3, #16
 801d2e8:	2a07      	cmp	r2, #7
 801d2ea:	e9cd 2326 	strd	r2, r3, [sp, #152]	; 0x98
 801d2ee:	e9ca 4600 	strd	r4, r6, [sl]
 801d2f2:	ddf1      	ble.n	801d2d8 <_svfprintf_r+0xba0>
 801d2f4:	aa25      	add	r2, sp, #148	; 0x94
 801d2f6:	4649      	mov	r1, r9
 801d2f8:	4638      	mov	r0, r7
 801d2fa:	f002 fb2d 	bl	801f958 <__ssprint_r>
 801d2fe:	2800      	cmp	r0, #0
 801d300:	f47f aae7 	bne.w	801c8d2 <_svfprintf_r+0x19a>
 801d304:	e9dd 2326 	ldrd	r2, r3, [sp, #152]	; 0x98
 801d308:	46c2      	mov	sl, r8
 801d30a:	e7e7      	b.n	801d2dc <_svfprintf_r+0xba4>
 801d30c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d30e:	930e      	str	r3, [sp, #56]	; 0x38
 801d310:	f8cd 8044 	str.w	r8, [sp, #68]	; 0x44
 801d314:	f7ff bbe7 	b.w	801cae6 <_svfprintf_r+0x3ae>
 801d318:	2f00      	cmp	r7, #0
 801d31a:	f77f af2e 	ble.w	801d17a <_svfprintf_r+0xa42>
 801d31e:	2f10      	cmp	r7, #16
 801d320:	f8df 9608 	ldr.w	r9, [pc, #1544]	; 801d92c <_svfprintf_r+0x11f4>
 801d324:	f340 83fb 	ble.w	801db1e <_svfprintf_r+0x13e6>
 801d328:	4633      	mov	r3, r6
 801d32a:	4622      	mov	r2, r4
 801d32c:	464e      	mov	r6, r9
 801d32e:	f04f 0a10 	mov.w	sl, #16
 801d332:	e9dd 450d 	ldrd	r4, r5, [sp, #52]	; 0x34
 801d336:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801d33a:	e005      	b.n	801d348 <_svfprintf_r+0xc10>
 801d33c:	3308      	adds	r3, #8
 801d33e:	3f10      	subs	r7, #16
 801d340:	2f10      	cmp	r7, #16
 801d342:	f340 81fb 	ble.w	801d73c <_svfprintf_r+0x1004>
 801d346:	3501      	adds	r5, #1
 801d348:	3210      	adds	r2, #16
 801d34a:	2d07      	cmp	r5, #7
 801d34c:	e9cd 5226 	strd	r5, r2, [sp, #152]	; 0x98
 801d350:	e9c3 6a00 	strd	r6, sl, [r3]
 801d354:	ddf2      	ble.n	801d33c <_svfprintf_r+0xc04>
 801d356:	aa25      	add	r2, sp, #148	; 0x94
 801d358:	4649      	mov	r1, r9
 801d35a:	4620      	mov	r0, r4
 801d35c:	f002 fafc 	bl	801f958 <__ssprint_r>
 801d360:	2800      	cmp	r0, #0
 801d362:	f47f aab6 	bne.w	801c8d2 <_svfprintf_r+0x19a>
 801d366:	e9dd 5226 	ldrd	r5, r2, [sp, #152]	; 0x98
 801d36a:	4643      	mov	r3, r8
 801d36c:	e7e7      	b.n	801d33e <_svfprintf_r+0xc06>
 801d36e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d370:	f019 0f10 	tst.w	r9, #16
 801d374:	f853 4b04 	ldr.w	r4, [r3], #4
 801d378:	930f      	str	r3, [sp, #60]	; 0x3c
 801d37a:	d078      	beq.n	801d46e <_svfprintf_r+0xd36>
 801d37c:	2500      	movs	r5, #0
 801d37e:	2301      	movs	r3, #1
 801d380:	f7ff bac4 	b.w	801c90c <_svfprintf_r+0x1d4>
 801d384:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d386:	f852 4b04 	ldr.w	r4, [r2], #4
 801d38a:	920f      	str	r2, [sp, #60]	; 0x3c
 801d38c:	f019 0210 	ands.w	r2, r9, #16
 801d390:	d07c      	beq.n	801d48c <_svfprintf_r+0xd54>
 801d392:	2500      	movs	r5, #0
 801d394:	f7ff baba 	b.w	801c90c <_svfprintf_r+0x1d4>
 801d398:	9a07      	ldr	r2, [sp, #28]
 801d39a:	07d2      	lsls	r2, r2, #31
 801d39c:	f53f aeb5 	bmi.w	801d10a <_svfprintf_r+0x9d2>
 801d3a0:	2201      	movs	r2, #1
 801d3a2:	9911      	ldr	r1, [sp, #68]	; 0x44
 801d3a4:	f8ca 1000 	str.w	r1, [sl]
 801d3a8:	2d07      	cmp	r5, #7
 801d3aa:	e9cd 5426 	strd	r5, r4, [sp, #152]	; 0x98
 801d3ae:	f8ca 2004 	str.w	r2, [sl, #4]
 801d3b2:	f300 8120 	bgt.w	801d5f6 <_svfprintf_r+0xebe>
 801d3b6:	3302      	adds	r3, #2
 801d3b8:	9309      	str	r3, [sp, #36]	; 0x24
 801d3ba:	f10a 0a10 	add.w	sl, sl, #16
 801d3be:	e6dc      	b.n	801d17a <_svfprintf_r+0xa42>
 801d3c0:	2b30      	cmp	r3, #48	; 0x30
 801d3c2:	f000 8143 	beq.w	801d64c <_svfprintf_r+0xf14>
 801d3c6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d3c8:	3902      	subs	r1, #2
 801d3ca:	2330      	movs	r3, #48	; 0x30
 801d3cc:	f802 3c01 	strb.w	r3, [r2, #-1]
 801d3d0:	eba8 0301 	sub.w	r3, r8, r1
 801d3d4:	930e      	str	r3, [sp, #56]	; 0x38
 801d3d6:	9111      	str	r1, [sp, #68]	; 0x44
 801d3d8:	f7ff bb85 	b.w	801cae6 <_svfprintf_r+0x3ae>
 801d3dc:	9b07      	ldr	r3, [sp, #28]
 801d3de:	07dd      	lsls	r5, r3, #31
 801d3e0:	f53f adb9 	bmi.w	801cf56 <_svfprintf_r+0x81e>
 801d3e4:	e463      	b.n	801ccae <_svfprintf_r+0x576>
 801d3e6:	aa25      	add	r2, sp, #148	; 0x94
 801d3e8:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
 801d3ec:	f002 fab4 	bl	801f958 <__ssprint_r>
 801d3f0:	2800      	cmp	r0, #0
 801d3f2:	f47f aa6e 	bne.w	801c8d2 <_svfprintf_r+0x19a>
 801d3f6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 801d3f8:	e48e      	b.n	801cd18 <_svfprintf_r+0x5e0>
 801d3fa:	f8cd 8044 	str.w	r8, [sp, #68]	; 0x44
 801d3fe:	f7ff bb72 	b.w	801cae6 <_svfprintf_r+0x3ae>
 801d402:	2500      	movs	r5, #0
 801d404:	e4a8      	b.n	801cd58 <_svfprintf_r+0x620>
 801d406:	17e5      	asrs	r5, r4, #31
 801d408:	2c00      	cmp	r4, #0
 801d40a:	f175 0300 	sbcs.w	r3, r5, #0
 801d40e:	f6bf ab3a 	bge.w	801ca86 <_svfprintf_r+0x34e>
 801d412:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d414:	4264      	negs	r4, r4
 801d416:	f04f 062d 	mov.w	r6, #45	; 0x2d
 801d41a:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
 801d41e:	3301      	adds	r3, #1
 801d420:	f88d 6077 	strb.w	r6, [sp, #119]	; 0x77
 801d424:	f47f ab35 	bne.w	801ca92 <_svfprintf_r+0x35a>
 801d428:	2d00      	cmp	r5, #0
 801d42a:	bf08      	it	eq
 801d42c:	2c0a      	cmpeq	r4, #10
 801d42e:	f8cd 901c 	str.w	r9, [sp, #28]
 801d432:	f4ff aeb8 	bcc.w	801d1a6 <_svfprintf_r+0xa6e>
 801d436:	46c1      	mov	r9, r8
 801d438:	4620      	mov	r0, r4
 801d43a:	4629      	mov	r1, r5
 801d43c:	220a      	movs	r2, #10
 801d43e:	2300      	movs	r3, #0
 801d440:	f7e3 fca6 	bl	8000d90 <__aeabi_uldivmod>
 801d444:	3230      	adds	r2, #48	; 0x30
 801d446:	f809 2d01 	strb.w	r2, [r9, #-1]!
 801d44a:	4620      	mov	r0, r4
 801d44c:	4629      	mov	r1, r5
 801d44e:	2300      	movs	r3, #0
 801d450:	220a      	movs	r2, #10
 801d452:	f7e3 fc9d 	bl	8000d90 <__aeabi_uldivmod>
 801d456:	4604      	mov	r4, r0
 801d458:	460d      	mov	r5, r1
 801d45a:	ea54 0305 	orrs.w	r3, r4, r5
 801d45e:	d1eb      	bne.n	801d438 <_svfprintf_r+0xd00>
 801d460:	eba8 0309 	sub.w	r3, r8, r9
 801d464:	f8cd 9044 	str.w	r9, [sp, #68]	; 0x44
 801d468:	930e      	str	r3, [sp, #56]	; 0x38
 801d46a:	f7ff bb3c 	b.w	801cae6 <_svfprintf_r+0x3ae>
 801d46e:	f019 0f40 	tst.w	r9, #64	; 0x40
 801d472:	bf18      	it	ne
 801d474:	b2a4      	uxthne	r4, r4
 801d476:	2500      	movs	r5, #0
 801d478:	2301      	movs	r3, #1
 801d47a:	f7ff ba47 	b.w	801c90c <_svfprintf_r+0x1d4>
 801d47e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d480:	4610      	mov	r0, r2
 801d482:	17d1      	asrs	r1, r2, #31
 801d484:	e9c3 0100 	strd	r0, r1, [r3]
 801d488:	f7ff b97e 	b.w	801c788 <_svfprintf_r+0x50>
 801d48c:	f019 0340 	ands.w	r3, r9, #64	; 0x40
 801d490:	bf1c      	itt	ne
 801d492:	4613      	movne	r3, r2
 801d494:	b2a4      	uxthne	r4, r4
 801d496:	2500      	movs	r5, #0
 801d498:	f7ff ba38 	b.w	801c90c <_svfprintf_r+0x1d4>
 801d49c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801d49e:	4622      	mov	r2, r4
 801d4a0:	4620      	mov	r0, r4
 801d4a2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d4a4:	4623      	mov	r3, r4
 801d4a6:	4621      	mov	r1, r4
 801d4a8:	f7e3 fc0c 	bl	8000cc4 <__aeabi_dcmpun>
 801d4ac:	2800      	cmp	r0, #0
 801d4ae:	f040 8322 	bne.w	801daf6 <_svfprintf_r+0x13be>
 801d4b2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d4b4:	f027 0320 	bic.w	r3, r7, #32
 801d4b8:	1c54      	adds	r4, r2, #1
 801d4ba:	9308      	str	r3, [sp, #32]
 801d4bc:	f000 821a 	beq.w	801d8f4 <_svfprintf_r+0x11bc>
 801d4c0:	2b47      	cmp	r3, #71	; 0x47
 801d4c2:	f000 816f 	beq.w	801d7a4 <_svfprintf_r+0x106c>
 801d4c6:	f449 7380 	orr.w	r3, r9, #256	; 0x100
 801d4ca:	9307      	str	r3, [sp, #28]
 801d4cc:	e9dd 3614 	ldrd	r3, r6, [sp, #80]	; 0x50
 801d4d0:	1e1d      	subs	r5, r3, #0
 801d4d2:	bfb6      	itet	lt
 801d4d4:	f103 4500 	addlt.w	r5, r3, #2147483648	; 0x80000000
 801d4d8:	2300      	movge	r3, #0
 801d4da:	232d      	movlt	r3, #45	; 0x2d
 801d4dc:	2f66      	cmp	r7, #102	; 0x66
 801d4de:	9310      	str	r3, [sp, #64]	; 0x40
 801d4e0:	f000 820b 	beq.w	801d8fa <_svfprintf_r+0x11c2>
 801d4e4:	2f46      	cmp	r7, #70	; 0x46
 801d4e6:	f000 8262 	beq.w	801d9ae <_svfprintf_r+0x1276>
 801d4ea:	9b08      	ldr	r3, [sp, #32]
 801d4ec:	2b45      	cmp	r3, #69	; 0x45
 801d4ee:	4632      	mov	r2, r6
 801d4f0:	462b      	mov	r3, r5
 801d4f2:	f000 815d 	beq.w	801d7b0 <_svfprintf_r+0x1078>
 801d4f6:	a823      	add	r0, sp, #140	; 0x8c
 801d4f8:	a920      	add	r1, sp, #128	; 0x80
 801d4fa:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801d4fc:	9004      	str	r0, [sp, #16]
 801d4fe:	9103      	str	r1, [sp, #12]
 801d500:	a81f      	add	r0, sp, #124	; 0x7c
 801d502:	2102      	movs	r1, #2
 801d504:	9002      	str	r0, [sp, #8]
 801d506:	9401      	str	r4, [sp, #4]
 801d508:	9100      	str	r1, [sp, #0]
 801d50a:	980d      	ldr	r0, [sp, #52]	; 0x34
 801d50c:	f000 fcb4 	bl	801de78 <_dtoa_r>
 801d510:	2f67      	cmp	r7, #103	; 0x67
 801d512:	9011      	str	r0, [sp, #68]	; 0x44
 801d514:	f040 8330 	bne.w	801db78 <_svfprintf_r+0x1440>
 801d518:	f019 0f01 	tst.w	r9, #1
 801d51c:	f000 816f 	beq.w	801d7fe <_svfprintf_r+0x10c6>
 801d520:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801d522:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d524:	189c      	adds	r4, r3, r2
 801d526:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801d528:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801d52a:	4630      	mov	r0, r6
 801d52c:	4629      	mov	r1, r5
 801d52e:	f7e3 fb97 	bl	8000c60 <__aeabi_dcmpeq>
 801d532:	2800      	cmp	r0, #0
 801d534:	f000 81d2 	beq.w	801d8dc <_svfprintf_r+0x11a4>
 801d538:	4623      	mov	r3, r4
 801d53a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d53c:	1a9b      	subs	r3, r3, r2
 801d53e:	9313      	str	r3, [sp, #76]	; 0x4c
 801d540:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d542:	9312      	str	r3, [sp, #72]	; 0x48
 801d544:	9b08      	ldr	r3, [sp, #32]
 801d546:	2b47      	cmp	r3, #71	; 0x47
 801d548:	f000 8162 	beq.w	801d810 <_svfprintf_r+0x10d8>
 801d54c:	2f66      	cmp	r7, #102	; 0x66
 801d54e:	f040 8166 	bne.w	801d81e <_svfprintf_r+0x10e6>
 801d552:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801d554:	2b00      	cmp	r3, #0
 801d556:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d558:	f340 82d9 	ble.w	801db0e <_svfprintf_r+0x13d6>
 801d55c:	2b00      	cmp	r3, #0
 801d55e:	f040 82c0 	bne.w	801dae2 <_svfprintf_r+0x13aa>
 801d562:	f019 0f01 	tst.w	r9, #1
 801d566:	f040 82bc 	bne.w	801dae2 <_svfprintf_r+0x13aa>
 801d56a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801d56c:	9308      	str	r3, [sp, #32]
 801d56e:	930e      	str	r3, [sp, #56]	; 0x38
 801d570:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d572:	2b00      	cmp	r3, #0
 801d574:	f040 817e 	bne.w	801d874 <_svfprintf_r+0x113c>
 801d578:	9309      	str	r3, [sp, #36]	; 0x24
 801d57a:	f89d 6077 	ldrb.w	r6, [sp, #119]	; 0x77
 801d57e:	f7ff ba3d 	b.w	801c9fc <_svfprintf_r+0x2c4>
 801d582:	2b10      	cmp	r3, #16
 801d584:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801d586:	f8df 93a4 	ldr.w	r9, [pc, #932]	; 801d92c <_svfprintf_r+0x11f4>
 801d58a:	f340 80ef 	ble.w	801d76c <_svfprintf_r+0x1034>
 801d58e:	4623      	mov	r3, r4
 801d590:	2610      	movs	r6, #16
 801d592:	464c      	mov	r4, r9
 801d594:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 801d596:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801d59a:	e005      	b.n	801d5a8 <_svfprintf_r+0xe70>
 801d59c:	f10a 0a08 	add.w	sl, sl, #8
 801d5a0:	3d10      	subs	r5, #16
 801d5a2:	2d10      	cmp	r5, #16
 801d5a4:	f340 80e0 	ble.w	801d768 <_svfprintf_r+0x1030>
 801d5a8:	3201      	adds	r2, #1
 801d5aa:	3310      	adds	r3, #16
 801d5ac:	2a07      	cmp	r2, #7
 801d5ae:	e9cd 2326 	strd	r2, r3, [sp, #152]	; 0x98
 801d5b2:	e9ca 4600 	strd	r4, r6, [sl]
 801d5b6:	ddf1      	ble.n	801d59c <_svfprintf_r+0xe64>
 801d5b8:	aa25      	add	r2, sp, #148	; 0x94
 801d5ba:	4649      	mov	r1, r9
 801d5bc:	4638      	mov	r0, r7
 801d5be:	f002 f9cb 	bl	801f958 <__ssprint_r>
 801d5c2:	2800      	cmp	r0, #0
 801d5c4:	f47f a985 	bne.w	801c8d2 <_svfprintf_r+0x19a>
 801d5c8:	e9dd 2326 	ldrd	r2, r3, [sp, #152]	; 0x98
 801d5cc:	46c2      	mov	sl, r8
 801d5ce:	e7e7      	b.n	801d5a0 <_svfprintf_r+0xe68>
 801d5d0:	4264      	negs	r4, r4
 801d5d2:	940b      	str	r4, [sp, #44]	; 0x2c
 801d5d4:	900f      	str	r0, [sp, #60]	; 0x3c
 801d5d6:	e47c      	b.n	801ced2 <_svfprintf_r+0x79a>
 801d5d8:	2140      	movs	r1, #64	; 0x40
 801d5da:	980d      	ldr	r0, [sp, #52]	; 0x34
 801d5dc:	f7fe fa46 	bl	801ba6c <_malloc_r>
 801d5e0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d5e2:	6018      	str	r0, [r3, #0]
 801d5e4:	6118      	str	r0, [r3, #16]
 801d5e6:	2800      	cmp	r0, #0
 801d5e8:	f000 82cd 	beq.w	801db86 <_svfprintf_r+0x144e>
 801d5ec:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d5ee:	2340      	movs	r3, #64	; 0x40
 801d5f0:	6153      	str	r3, [r2, #20]
 801d5f2:	f7ff b8b8 	b.w	801c766 <_svfprintf_r+0x2e>
 801d5f6:	aa25      	add	r2, sp, #148	; 0x94
 801d5f8:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
 801d5fc:	f002 f9ac 	bl	801f958 <__ssprint_r>
 801d600:	2800      	cmp	r0, #0
 801d602:	f47f a966 	bne.w	801c8d2 <_svfprintf_r+0x19a>
 801d606:	e9dd 3426 	ldrd	r3, r4, [sp, #152]	; 0x98
 801d60a:	3301      	adds	r3, #1
 801d60c:	9309      	str	r3, [sp, #36]	; 0x24
 801d60e:	f10d 0ad0 	add.w	sl, sp, #208	; 0xd0
 801d612:	4646      	mov	r6, r8
 801d614:	e5b1      	b.n	801d17a <_svfprintf_r+0xa42>
 801d616:	aa25      	add	r2, sp, #148	; 0x94
 801d618:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
 801d61c:	f002 f99c 	bl	801f958 <__ssprint_r>
 801d620:	2800      	cmp	r0, #0
 801d622:	f47f a956 	bne.w	801c8d2 <_svfprintf_r+0x19a>
 801d626:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 801d628:	46c2      	mov	sl, r8
 801d62a:	e4a4      	b.n	801cf76 <_svfprintf_r+0x83e>
 801d62c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d62e:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801d630:	9609      	str	r6, [sp, #36]	; 0x24
 801d632:	2b06      	cmp	r3, #6
 801d634:	bf28      	it	cs
 801d636:	2306      	movcs	r3, #6
 801d638:	9308      	str	r3, [sp, #32]
 801d63a:	930e      	str	r3, [sp, #56]	; 0x38
 801d63c:	4bb9      	ldr	r3, [pc, #740]	; (801d924 <_svfprintf_r+0x11ec>)
 801d63e:	950f      	str	r5, [sp, #60]	; 0x3c
 801d640:	f8cd 901c 	str.w	r9, [sp, #28]
 801d644:	9612      	str	r6, [sp, #72]	; 0x48
 801d646:	9311      	str	r3, [sp, #68]	; 0x44
 801d648:	f7ff b9d8 	b.w	801c9fc <_svfprintf_r+0x2c4>
 801d64c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801d64e:	eba8 0303 	sub.w	r3, r8, r3
 801d652:	930e      	str	r3, [sp, #56]	; 0x38
 801d654:	f7ff ba47 	b.w	801cae6 <_svfprintf_r+0x3ae>
 801d658:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801d65a:	991a      	ldr	r1, [sp, #104]	; 0x68
 801d65c:	f8ca 1000 	str.w	r1, [sl]
 801d660:	9919      	ldr	r1, [sp, #100]	; 0x64
 801d662:	f8ca 1004 	str.w	r1, [sl, #4]
 801d666:	3201      	adds	r2, #1
 801d668:	440c      	add	r4, r1
 801d66a:	2a07      	cmp	r2, #7
 801d66c:	9427      	str	r4, [sp, #156]	; 0x9c
 801d66e:	9226      	str	r2, [sp, #152]	; 0x98
 801d670:	f300 8128 	bgt.w	801d8c4 <_svfprintf_r+0x118c>
 801d674:	f10a 0a08 	add.w	sl, sl, #8
 801d678:	e601      	b.n	801d27e <_svfprintf_r+0xb46>
 801d67a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d67c:	601a      	str	r2, [r3, #0]
 801d67e:	f7ff b883 	b.w	801c788 <_svfprintf_r+0x50>
 801d682:	aa25      	add	r2, sp, #148	; 0x94
 801d684:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
 801d688:	f002 f966 	bl	801f958 <__ssprint_r>
 801d68c:	2800      	cmp	r0, #0
 801d68e:	f47f a920 	bne.w	801c8d2 <_svfprintf_r+0x19a>
 801d692:	f89d 6077 	ldrb.w	r6, [sp, #119]	; 0x77
 801d696:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 801d698:	46c2      	mov	sl, r8
 801d69a:	f7ff ba8c 	b.w	801cbb6 <_svfprintf_r+0x47e>
 801d69e:	aa25      	add	r2, sp, #148	; 0x94
 801d6a0:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
 801d6a4:	f002 f958 	bl	801f958 <__ssprint_r>
 801d6a8:	2800      	cmp	r0, #0
 801d6aa:	f47f a912 	bne.w	801c8d2 <_svfprintf_r+0x19a>
 801d6ae:	e9dd 5426 	ldrd	r5, r4, [sp, #152]	; 0x98
 801d6b2:	4646      	mov	r6, r8
 801d6b4:	e534      	b.n	801d120 <_svfprintf_r+0x9e8>
 801d6b6:	aa25      	add	r2, sp, #148	; 0x94
 801d6b8:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
 801d6bc:	f002 f94c 	bl	801f958 <__ssprint_r>
 801d6c0:	2800      	cmp	r0, #0
 801d6c2:	f47f a906 	bne.w	801c8d2 <_svfprintf_r+0x19a>
 801d6c6:	e9dd 5426 	ldrd	r5, r4, [sp, #152]	; 0x98
 801d6ca:	4646      	mov	r6, r8
 801d6cc:	e534      	b.n	801d138 <_svfprintf_r+0xa00>
 801d6ce:	2b01      	cmp	r3, #1
 801d6d0:	f47f a9eb 	bne.w	801caaa <_svfprintf_r+0x372>
 801d6d4:	e567      	b.n	801d1a6 <_svfprintf_r+0xa6e>
 801d6d6:	46a1      	mov	r9, r4
 801d6d8:	461c      	mov	r4, r3
 801d6da:	3201      	adds	r2, #1
 801d6dc:	442c      	add	r4, r5
 801d6de:	2a07      	cmp	r2, #7
 801d6e0:	e9cd 2426 	strd	r2, r4, [sp, #152]	; 0x98
 801d6e4:	e9ca 9500 	strd	r9, r5, [sl]
 801d6e8:	f77f aadf 	ble.w	801ccaa <_svfprintf_r+0x572>
 801d6ec:	e4f7      	b.n	801d0de <_svfprintf_r+0x9a6>
 801d6ee:	aa25      	add	r2, sp, #148	; 0x94
 801d6f0:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
 801d6f4:	f002 f930 	bl	801f958 <__ssprint_r>
 801d6f8:	2800      	cmp	r0, #0
 801d6fa:	f47f a8ea 	bne.w	801c8d2 <_svfprintf_r+0x19a>
 801d6fe:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 801d700:	46c2      	mov	sl, r8
 801d702:	f7ff ba7c 	b.w	801cbfe <_svfprintf_r+0x4c6>
 801d706:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801d708:	4987      	ldr	r1, [pc, #540]	; (801d928 <_svfprintf_r+0x11f0>)
 801d70a:	f8ca 1000 	str.w	r1, [sl]
 801d70e:	3201      	adds	r2, #1
 801d710:	3401      	adds	r4, #1
 801d712:	2101      	movs	r1, #1
 801d714:	2a07      	cmp	r2, #7
 801d716:	e9cd 2426 	strd	r2, r4, [sp, #152]	; 0x98
 801d71a:	f8ca 1004 	str.w	r1, [sl, #4]
 801d71e:	f73f acb0 	bgt.w	801d082 <_svfprintf_r+0x94a>
 801d722:	f10a 0a08 	add.w	sl, sl, #8
 801d726:	e4b7      	b.n	801d098 <_svfprintf_r+0x960>
 801d728:	aa25      	add	r2, sp, #148	; 0x94
 801d72a:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
 801d72e:	f002 f913 	bl	801f958 <__ssprint_r>
 801d732:	2800      	cmp	r0, #0
 801d734:	f47f a8cd 	bne.w	801c8d2 <_svfprintf_r+0x19a>
 801d738:	46c2      	mov	sl, r8
 801d73a:	e406      	b.n	801cf4a <_svfprintf_r+0x812>
 801d73c:	46b1      	mov	r9, r6
 801d73e:	461e      	mov	r6, r3
 801d740:	1c6b      	adds	r3, r5, #1
 801d742:	4614      	mov	r4, r2
 801d744:	9309      	str	r3, [sp, #36]	; 0x24
 801d746:	f106 0208 	add.w	r2, r6, #8
 801d74a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d74c:	9326      	str	r3, [sp, #152]	; 0x98
 801d74e:	443c      	add	r4, r7
 801d750:	2b07      	cmp	r3, #7
 801d752:	9427      	str	r4, [sp, #156]	; 0x9c
 801d754:	e9c6 9700 	strd	r9, r7, [r6]
 801d758:	f73f af4d 	bgt.w	801d5f6 <_svfprintf_r+0xebe>
 801d75c:	3301      	adds	r3, #1
 801d75e:	9309      	str	r3, [sp, #36]	; 0x24
 801d760:	f102 0a08 	add.w	sl, r2, #8
 801d764:	4616      	mov	r6, r2
 801d766:	e508      	b.n	801d17a <_svfprintf_r+0xa42>
 801d768:	46a1      	mov	r9, r4
 801d76a:	461c      	mov	r4, r3
 801d76c:	3201      	adds	r2, #1
 801d76e:	442c      	add	r4, r5
 801d770:	2a07      	cmp	r2, #7
 801d772:	e9cd 2426 	strd	r2, r4, [sp, #152]	; 0x98
 801d776:	e9ca 9500 	strd	r9, r5, [sl]
 801d77a:	f300 812a 	bgt.w	801d9d2 <_svfprintf_r+0x129a>
 801d77e:	f10a 0a08 	add.w	sl, sl, #8
 801d782:	e573      	b.n	801d26c <_svfprintf_r+0xb34>
 801d784:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d786:	9409      	str	r4, [sp, #36]	; 0x24
 801d788:	f7eb ffba 	bl	8009700 <strlen>
 801d78c:	f8cd 901c 	str.w	r9, [sp, #28]
 801d790:	e9cd 050e 	strd	r0, r5, [sp, #56]	; 0x38
 801d794:	4603      	mov	r3, r0
 801d796:	f7ff b92b 	b.w	801c9f0 <_svfprintf_r+0x2b8>
 801d79a:	9a07      	ldr	r2, [sp, #28]
 801d79c:	07d0      	lsls	r0, r2, #31
 801d79e:	f57f aa86 	bpl.w	801ccae <_svfprintf_r+0x576>
 801d7a2:	e47e      	b.n	801d0a2 <_svfprintf_r+0x96a>
 801d7a4:	2a00      	cmp	r2, #0
 801d7a6:	4613      	mov	r3, r2
 801d7a8:	bf08      	it	eq
 801d7aa:	2301      	moveq	r3, #1
 801d7ac:	9309      	str	r3, [sp, #36]	; 0x24
 801d7ae:	e68a      	b.n	801d4c6 <_svfprintf_r+0xd8e>
 801d7b0:	9909      	ldr	r1, [sp, #36]	; 0x24
 801d7b2:	3101      	adds	r1, #1
 801d7b4:	460c      	mov	r4, r1
 801d7b6:	910e      	str	r1, [sp, #56]	; 0x38
 801d7b8:	a823      	add	r0, sp, #140	; 0x8c
 801d7ba:	a920      	add	r1, sp, #128	; 0x80
 801d7bc:	9004      	str	r0, [sp, #16]
 801d7be:	9103      	str	r1, [sp, #12]
 801d7c0:	a81f      	add	r0, sp, #124	; 0x7c
 801d7c2:	2102      	movs	r1, #2
 801d7c4:	9002      	str	r0, [sp, #8]
 801d7c6:	9401      	str	r4, [sp, #4]
 801d7c8:	9100      	str	r1, [sp, #0]
 801d7ca:	980d      	ldr	r0, [sp, #52]	; 0x34
 801d7cc:	f000 fb54 	bl	801de78 <_dtoa_r>
 801d7d0:	9011      	str	r0, [sp, #68]	; 0x44
 801d7d2:	2f47      	cmp	r7, #71	; 0x47
 801d7d4:	f040 81c8 	bne.w	801db68 <_svfprintf_r+0x1430>
 801d7d8:	f019 0f01 	tst.w	r9, #1
 801d7dc:	f000 81bd 	beq.w	801db5a <_svfprintf_r+0x1422>
 801d7e0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801d7e2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d7e4:	2f46      	cmp	r7, #70	; 0x46
 801d7e6:	eb03 0402 	add.w	r4, r3, r2
 801d7ea:	f47f ae9c 	bne.w	801d526 <_svfprintf_r+0xdee>
 801d7ee:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801d7f0:	781b      	ldrb	r3, [r3, #0]
 801d7f2:	2b30      	cmp	r3, #48	; 0x30
 801d7f4:	f000 815c 	beq.w	801dab0 <_svfprintf_r+0x1378>
 801d7f8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d7fa:	441c      	add	r4, r3
 801d7fc:	e693      	b.n	801d526 <_svfprintf_r+0xdee>
 801d7fe:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801d800:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801d802:	9212      	str	r2, [sp, #72]	; 0x48
 801d804:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d806:	1a9b      	subs	r3, r3, r2
 801d808:	9313      	str	r3, [sp, #76]	; 0x4c
 801d80a:	9b08      	ldr	r3, [sp, #32]
 801d80c:	2b47      	cmp	r3, #71	; 0x47
 801d80e:	d106      	bne.n	801d81e <_svfprintf_r+0x10e6>
 801d810:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801d812:	1cda      	adds	r2, r3, #3
 801d814:	db02      	blt.n	801d81c <_svfprintf_r+0x10e4>
 801d816:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d818:	429a      	cmp	r2, r3
 801d81a:	da32      	bge.n	801d882 <_svfprintf_r+0x114a>
 801d81c:	3f02      	subs	r7, #2
 801d81e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801d820:	f88d 7084 	strb.w	r7, [sp, #132]	; 0x84
 801d824:	3b01      	subs	r3, #1
 801d826:	2b00      	cmp	r3, #0
 801d828:	931f      	str	r3, [sp, #124]	; 0x7c
 801d82a:	bfbd      	ittte	lt
 801d82c:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
 801d82e:	f1c3 0301 	rsblt	r3, r3, #1
 801d832:	222d      	movlt	r2, #45	; 0x2d
 801d834:	222b      	movge	r2, #43	; 0x2b
 801d836:	2b09      	cmp	r3, #9
 801d838:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
 801d83c:	f300 8105 	bgt.w	801da4a <_svfprintf_r+0x1312>
 801d840:	3330      	adds	r3, #48	; 0x30
 801d842:	2230      	movs	r2, #48	; 0x30
 801d844:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
 801d848:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
 801d84c:	ab22      	add	r3, sp, #136	; 0x88
 801d84e:	aa21      	add	r2, sp, #132	; 0x84
 801d850:	1a9b      	subs	r3, r3, r2
 801d852:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d854:	931b      	str	r3, [sp, #108]	; 0x6c
 801d856:	2a01      	cmp	r2, #1
 801d858:	4413      	add	r3, r2
 801d85a:	930e      	str	r3, [sp, #56]	; 0x38
 801d85c:	f340 8137 	ble.w	801dace <_svfprintf_r+0x1396>
 801d860:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d862:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801d864:	4413      	add	r3, r2
 801d866:	930e      	str	r3, [sp, #56]	; 0x38
 801d868:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d86c:	9308      	str	r3, [sp, #32]
 801d86e:	2300      	movs	r3, #0
 801d870:	9312      	str	r3, [sp, #72]	; 0x48
 801d872:	e67d      	b.n	801d570 <_svfprintf_r+0xe38>
 801d874:	262d      	movs	r6, #45	; 0x2d
 801d876:	2300      	movs	r3, #0
 801d878:	f88d 6077 	strb.w	r6, [sp, #119]	; 0x77
 801d87c:	9309      	str	r3, [sp, #36]	; 0x24
 801d87e:	f7ff b8c0 	b.w	801ca02 <_svfprintf_r+0x2ca>
 801d882:	e9dd 3112 	ldrd	r3, r1, [sp, #72]	; 0x48
 801d886:	428b      	cmp	r3, r1
 801d888:	db7e      	blt.n	801d988 <_svfprintf_r+0x1250>
 801d88a:	f019 0f01 	tst.w	r9, #1
 801d88e:	f000 8109 	beq.w	801daa4 <_svfprintf_r+0x136c>
 801d892:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801d894:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801d896:	4413      	add	r3, r2
 801d898:	930e      	str	r3, [sp, #56]	; 0x38
 801d89a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d89e:	9308      	str	r3, [sp, #32]
 801d8a0:	2767      	movs	r7, #103	; 0x67
 801d8a2:	e665      	b.n	801d570 <_svfprintf_r+0xe38>
 801d8a4:	aa25      	add	r2, sp, #148	; 0x94
 801d8a6:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
 801d8aa:	f002 f855 	bl	801f958 <__ssprint_r>
 801d8ae:	2800      	cmp	r0, #0
 801d8b0:	f47f a80f 	bne.w	801c8d2 <_svfprintf_r+0x19a>
 801d8b4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 801d8b6:	46c2      	mov	sl, r8
 801d8b8:	e4d0      	b.n	801d25c <_svfprintf_r+0xb24>
 801d8ba:	262d      	movs	r6, #45	; 0x2d
 801d8bc:	f88d 6077 	strb.w	r6, [sp, #119]	; 0x77
 801d8c0:	f7ff bac3 	b.w	801ce4a <_svfprintf_r+0x712>
 801d8c4:	aa25      	add	r2, sp, #148	; 0x94
 801d8c6:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
 801d8ca:	f002 f845 	bl	801f958 <__ssprint_r>
 801d8ce:	2800      	cmp	r0, #0
 801d8d0:	f47e afff 	bne.w	801c8d2 <_svfprintf_r+0x19a>
 801d8d4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d8d6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 801d8d8:	46c2      	mov	sl, r8
 801d8da:	e4d0      	b.n	801d27e <_svfprintf_r+0xb46>
 801d8dc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801d8de:	42a3      	cmp	r3, r4
 801d8e0:	f4bf ae2b 	bcs.w	801d53a <_svfprintf_r+0xe02>
 801d8e4:	2130      	movs	r1, #48	; 0x30
 801d8e6:	1c5a      	adds	r2, r3, #1
 801d8e8:	9223      	str	r2, [sp, #140]	; 0x8c
 801d8ea:	7019      	strb	r1, [r3, #0]
 801d8ec:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801d8ee:	429c      	cmp	r4, r3
 801d8f0:	d8f9      	bhi.n	801d8e6 <_svfprintf_r+0x11ae>
 801d8f2:	e622      	b.n	801d53a <_svfprintf_r+0xe02>
 801d8f4:	2306      	movs	r3, #6
 801d8f6:	9309      	str	r3, [sp, #36]	; 0x24
 801d8f8:	e5e5      	b.n	801d4c6 <_svfprintf_r+0xd8e>
 801d8fa:	a823      	add	r0, sp, #140	; 0x8c
 801d8fc:	a920      	add	r1, sp, #128	; 0x80
 801d8fe:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801d900:	9004      	str	r0, [sp, #16]
 801d902:	9103      	str	r1, [sp, #12]
 801d904:	a81f      	add	r0, sp, #124	; 0x7c
 801d906:	2103      	movs	r1, #3
 801d908:	462b      	mov	r3, r5
 801d90a:	9401      	str	r4, [sp, #4]
 801d90c:	9002      	str	r0, [sp, #8]
 801d90e:	4632      	mov	r2, r6
 801d910:	9100      	str	r1, [sp, #0]
 801d912:	980d      	ldr	r0, [sp, #52]	; 0x34
 801d914:	f000 fab0 	bl	801de78 <_dtoa_r>
 801d918:	4623      	mov	r3, r4
 801d91a:	9011      	str	r0, [sp, #68]	; 0x44
 801d91c:	1904      	adds	r4, r0, r4
 801d91e:	930e      	str	r3, [sp, #56]	; 0x38
 801d920:	e765      	b.n	801d7ee <_svfprintf_r+0x10b6>
 801d922:	bf00      	nop
 801d924:	08027668 	.word	0x08027668
 801d928:	08027670 	.word	0x08027670
 801d92c:	08027684 	.word	0x08027684
 801d930:	aa25      	add	r2, sp, #148	; 0x94
 801d932:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
 801d936:	f002 f80f 	bl	801f958 <__ssprint_r>
 801d93a:	2800      	cmp	r0, #0
 801d93c:	f47e afc9 	bne.w	801c8d2 <_svfprintf_r+0x19a>
 801d940:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d942:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d944:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 801d946:	1ad3      	subs	r3, r2, r3
 801d948:	46c2      	mov	sl, r8
 801d94a:	e4b1      	b.n	801d2b0 <_svfprintf_r+0xb78>
 801d94c:	2300      	movs	r3, #0
 801d94e:	9309      	str	r3, [sp, #36]	; 0x24
 801d950:	f7fe bf50 	b.w	801c7f4 <_svfprintf_r+0xbc>
 801d954:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d956:	9308      	str	r3, [sp, #32]
 801d958:	930e      	str	r3, [sp, #56]	; 0x38
 801d95a:	9009      	str	r0, [sp, #36]	; 0x24
 801d95c:	950f      	str	r5, [sp, #60]	; 0x3c
 801d95e:	f8cd 901c 	str.w	r9, [sp, #28]
 801d962:	9012      	str	r0, [sp, #72]	; 0x48
 801d964:	f89d 6077 	ldrb.w	r6, [sp, #119]	; 0x77
 801d968:	f7ff b848 	b.w	801c9fc <_svfprintf_r+0x2c4>
 801d96c:	aa25      	add	r2, sp, #148	; 0x94
 801d96e:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
 801d972:	f001 fff1 	bl	801f958 <__ssprint_r>
 801d976:	2800      	cmp	r0, #0
 801d978:	f47e afab 	bne.w	801c8d2 <_svfprintf_r+0x19a>
 801d97c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d97e:	e9dd 2426 	ldrd	r2, r4, [sp, #152]	; 0x98
 801d982:	46c2      	mov	sl, r8
 801d984:	f7ff bb9d 	b.w	801d0c2 <_svfprintf_r+0x98a>
 801d988:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801d98a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801d98c:	4413      	add	r3, r2
 801d98e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d990:	930e      	str	r3, [sp, #56]	; 0x38
 801d992:	2a00      	cmp	r2, #0
 801d994:	dc06      	bgt.n	801d9a4 <_svfprintf_r+0x126c>
 801d996:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801d998:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d99a:	f1c3 0301 	rsb	r3, r3, #1
 801d99e:	441a      	add	r2, r3
 801d9a0:	4613      	mov	r3, r2
 801d9a2:	920e      	str	r2, [sp, #56]	; 0x38
 801d9a4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d9a8:	9308      	str	r3, [sp, #32]
 801d9aa:	2767      	movs	r7, #103	; 0x67
 801d9ac:	e5e0      	b.n	801d570 <_svfprintf_r+0xe38>
 801d9ae:	a823      	add	r0, sp, #140	; 0x8c
 801d9b0:	a920      	add	r1, sp, #128	; 0x80
 801d9b2:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801d9b4:	9004      	str	r0, [sp, #16]
 801d9b6:	9103      	str	r1, [sp, #12]
 801d9b8:	a81f      	add	r0, sp, #124	; 0x7c
 801d9ba:	2103      	movs	r1, #3
 801d9bc:	9002      	str	r0, [sp, #8]
 801d9be:	4632      	mov	r2, r6
 801d9c0:	462b      	mov	r3, r5
 801d9c2:	9401      	str	r4, [sp, #4]
 801d9c4:	9100      	str	r1, [sp, #0]
 801d9c6:	980d      	ldr	r0, [sp, #52]	; 0x34
 801d9c8:	f000 fa56 	bl	801de78 <_dtoa_r>
 801d9cc:	940e      	str	r4, [sp, #56]	; 0x38
 801d9ce:	9011      	str	r0, [sp, #68]	; 0x44
 801d9d0:	e706      	b.n	801d7e0 <_svfprintf_r+0x10a8>
 801d9d2:	aa25      	add	r2, sp, #148	; 0x94
 801d9d4:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
 801d9d8:	f001 ffbe 	bl	801f958 <__ssprint_r>
 801d9dc:	2800      	cmp	r0, #0
 801d9de:	f47e af78 	bne.w	801c8d2 <_svfprintf_r+0x19a>
 801d9e2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 801d9e4:	46c2      	mov	sl, r8
 801d9e6:	e441      	b.n	801d26c <_svfprintf_r+0xb34>
 801d9e8:	425d      	negs	r5, r3
 801d9ea:	3310      	adds	r3, #16
 801d9ec:	f8df 91e4 	ldr.w	r9, [pc, #484]	; 801dbd4 <_svfprintf_r+0x149c>
 801d9f0:	da1f      	bge.n	801da32 <_svfprintf_r+0x12fa>
 801d9f2:	4623      	mov	r3, r4
 801d9f4:	2610      	movs	r6, #16
 801d9f6:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 801d9f8:	464c      	mov	r4, r9
 801d9fa:	e004      	b.n	801da06 <_svfprintf_r+0x12ce>
 801d9fc:	f10a 0a08 	add.w	sl, sl, #8
 801da00:	3d10      	subs	r5, #16
 801da02:	2d10      	cmp	r5, #16
 801da04:	dd13      	ble.n	801da2e <_svfprintf_r+0x12f6>
 801da06:	3201      	adds	r2, #1
 801da08:	3310      	adds	r3, #16
 801da0a:	2a07      	cmp	r2, #7
 801da0c:	e9cd 2326 	strd	r2, r3, [sp, #152]	; 0x98
 801da10:	e9ca 4600 	strd	r4, r6, [sl]
 801da14:	ddf2      	ble.n	801d9fc <_svfprintf_r+0x12c4>
 801da16:	aa25      	add	r2, sp, #148	; 0x94
 801da18:	990c      	ldr	r1, [sp, #48]	; 0x30
 801da1a:	4638      	mov	r0, r7
 801da1c:	f001 ff9c 	bl	801f958 <__ssprint_r>
 801da20:	2800      	cmp	r0, #0
 801da22:	f47e af56 	bne.w	801c8d2 <_svfprintf_r+0x19a>
 801da26:	e9dd 2326 	ldrd	r2, r3, [sp, #152]	; 0x98
 801da2a:	46c2      	mov	sl, r8
 801da2c:	e7e8      	b.n	801da00 <_svfprintf_r+0x12c8>
 801da2e:	46a1      	mov	r9, r4
 801da30:	461c      	mov	r4, r3
 801da32:	3201      	adds	r2, #1
 801da34:	442c      	add	r4, r5
 801da36:	2a07      	cmp	r2, #7
 801da38:	e9cd 2426 	strd	r2, r4, [sp, #152]	; 0x98
 801da3c:	e9ca 9500 	strd	r9, r5, [sl]
 801da40:	dc7e      	bgt.n	801db40 <_svfprintf_r+0x1408>
 801da42:	f10a 0a08 	add.w	sl, sl, #8
 801da46:	f7ff bb3f 	b.w	801d0c8 <_svfprintf_r+0x990>
 801da4a:	f10d 0493 	add.w	r4, sp, #147	; 0x93
 801da4e:	4620      	mov	r0, r4
 801da50:	4d5d      	ldr	r5, [pc, #372]	; (801dbc8 <_svfprintf_r+0x1490>)
 801da52:	e000      	b.n	801da56 <_svfprintf_r+0x131e>
 801da54:	4610      	mov	r0, r2
 801da56:	fba5 1203 	umull	r1, r2, r5, r3
 801da5a:	08d2      	lsrs	r2, r2, #3
 801da5c:	eb02 0182 	add.w	r1, r2, r2, lsl #2
 801da60:	eba3 0341 	sub.w	r3, r3, r1, lsl #1
 801da64:	f103 0130 	add.w	r1, r3, #48	; 0x30
 801da68:	4613      	mov	r3, r2
 801da6a:	2b09      	cmp	r3, #9
 801da6c:	f800 1c01 	strb.w	r1, [r0, #-1]
 801da70:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 801da74:	dcee      	bgt.n	801da54 <_svfprintf_r+0x131c>
 801da76:	3330      	adds	r3, #48	; 0x30
 801da78:	3802      	subs	r0, #2
 801da7a:	b2d9      	uxtb	r1, r3
 801da7c:	4284      	cmp	r4, r0
 801da7e:	f802 1c01 	strb.w	r1, [r2, #-1]
 801da82:	d976      	bls.n	801db72 <_svfprintf_r+0x143a>
 801da84:	f10d 0086 	add.w	r0, sp, #134	; 0x86
 801da88:	4613      	mov	r3, r2
 801da8a:	e001      	b.n	801da90 <_svfprintf_r+0x1358>
 801da8c:	f813 1b01 	ldrb.w	r1, [r3], #1
 801da90:	f800 1b01 	strb.w	r1, [r0], #1
 801da94:	429c      	cmp	r4, r3
 801da96:	d1f9      	bne.n	801da8c <_svfprintf_r+0x1354>
 801da98:	ab25      	add	r3, sp, #148	; 0x94
 801da9a:	1a9b      	subs	r3, r3, r2
 801da9c:	f10d 0286 	add.w	r2, sp, #134	; 0x86
 801daa0:	4413      	add	r3, r2
 801daa2:	e6d4      	b.n	801d84e <_svfprintf_r+0x1116>
 801daa4:	ea23 72e3 	bic.w	r2, r3, r3, asr #31
 801daa8:	9208      	str	r2, [sp, #32]
 801daaa:	930e      	str	r3, [sp, #56]	; 0x38
 801daac:	2767      	movs	r7, #103	; 0x67
 801daae:	e55f      	b.n	801d570 <_svfprintf_r+0xe38>
 801dab0:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801dab2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801dab4:	4630      	mov	r0, r6
 801dab6:	4629      	mov	r1, r5
 801dab8:	f7e3 f8d2 	bl	8000c60 <__aeabi_dcmpeq>
 801dabc:	2800      	cmp	r0, #0
 801dabe:	f47f ae9b 	bne.w	801d7f8 <_svfprintf_r+0x10c0>
 801dac2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dac4:	f1c3 0301 	rsb	r3, r3, #1
 801dac8:	931f      	str	r3, [sp, #124]	; 0x7c
 801daca:	441c      	add	r4, r3
 801dacc:	e52b      	b.n	801d526 <_svfprintf_r+0xdee>
 801dace:	f019 0301 	ands.w	r3, r9, #1
 801dad2:	9312      	str	r3, [sp, #72]	; 0x48
 801dad4:	f47f aec4 	bne.w	801d860 <_svfprintf_r+0x1128>
 801dad8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dada:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801dade:	9308      	str	r3, [sp, #32]
 801dae0:	e546      	b.n	801d570 <_svfprintf_r+0xe38>
 801dae2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801dae4:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801dae6:	4413      	add	r3, r2
 801dae8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801daea:	441a      	add	r2, r3
 801daec:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 801daf0:	920e      	str	r2, [sp, #56]	; 0x38
 801daf2:	9308      	str	r3, [sp, #32]
 801daf4:	e53c      	b.n	801d570 <_svfprintf_r+0xe38>
 801daf6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801daf8:	4a34      	ldr	r2, [pc, #208]	; (801dbcc <_svfprintf_r+0x1494>)
 801dafa:	2b00      	cmp	r3, #0
 801dafc:	bfb6      	itet	lt
 801dafe:	262d      	movlt	r6, #45	; 0x2d
 801db00:	f89d 6077 	ldrbge.w	r6, [sp, #119]	; 0x77
 801db04:	f88d 6077 	strblt.w	r6, [sp, #119]	; 0x77
 801db08:	4b31      	ldr	r3, [pc, #196]	; (801dbd0 <_svfprintf_r+0x1498>)
 801db0a:	f7ff b9a0 	b.w	801ce4e <_svfprintf_r+0x716>
 801db0e:	b943      	cbnz	r3, 801db22 <_svfprintf_r+0x13ea>
 801db10:	f019 0f01 	tst.w	r9, #1
 801db14:	d105      	bne.n	801db22 <_svfprintf_r+0x13ea>
 801db16:	2301      	movs	r3, #1
 801db18:	9308      	str	r3, [sp, #32]
 801db1a:	930e      	str	r3, [sp, #56]	; 0x38
 801db1c:	e528      	b.n	801d570 <_svfprintf_r+0xe38>
 801db1e:	4652      	mov	r2, sl
 801db20:	e613      	b.n	801d74a <_svfprintf_r+0x1012>
 801db22:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801db24:	3301      	adds	r3, #1
 801db26:	e7df      	b.n	801dae8 <_svfprintf_r+0x13b0>
 801db28:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801db2a:	f89b 3001 	ldrb.w	r3, [fp, #1]
 801db2e:	682c      	ldr	r4, [r5, #0]
 801db30:	4683      	mov	fp, r0
 801db32:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
 801db36:	1d28      	adds	r0, r5, #4
 801db38:	9409      	str	r4, [sp, #36]	; 0x24
 801db3a:	900f      	str	r0, [sp, #60]	; 0x3c
 801db3c:	f7fe be57 	b.w	801c7ee <_svfprintf_r+0xb6>
 801db40:	aa25      	add	r2, sp, #148	; 0x94
 801db42:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
 801db46:	f001 ff07 	bl	801f958 <__ssprint_r>
 801db4a:	2800      	cmp	r0, #0
 801db4c:	f47e aec1 	bne.w	801c8d2 <_svfprintf_r+0x19a>
 801db50:	e9dd 2426 	ldrd	r2, r4, [sp, #152]	; 0x98
 801db54:	46c2      	mov	sl, r8
 801db56:	f7ff bab7 	b.w	801d0c8 <_svfprintf_r+0x990>
 801db5a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801db5c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801db5e:	9212      	str	r2, [sp, #72]	; 0x48
 801db60:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801db62:	1a9b      	subs	r3, r3, r2
 801db64:	9313      	str	r3, [sp, #76]	; 0x4c
 801db66:	e653      	b.n	801d810 <_svfprintf_r+0x10d8>
 801db68:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801db6a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801db6c:	4413      	add	r3, r2
 801db6e:	461c      	mov	r4, r3
 801db70:	e4d9      	b.n	801d526 <_svfprintf_r+0xdee>
 801db72:	f10d 0386 	add.w	r3, sp, #134	; 0x86
 801db76:	e66a      	b.n	801d84e <_svfprintf_r+0x1116>
 801db78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801db7a:	930e      	str	r3, [sp, #56]	; 0x38
 801db7c:	e629      	b.n	801d7d2 <_svfprintf_r+0x109a>
 801db7e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
 801db82:	f7ff b91b 	b.w	801cdbc <_svfprintf_r+0x684>
 801db86:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801db88:	230c      	movs	r3, #12
 801db8a:	6013      	str	r3, [r2, #0]
 801db8c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801db90:	930a      	str	r3, [sp, #40]	; 0x28
 801db92:	f7fe bea7 	b.w	801c8e4 <_svfprintf_r+0x1ac>
 801db96:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
 801db9a:	f7fe bf62 	b.w	801ca62 <_svfprintf_r+0x32a>
 801db9e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
 801dba2:	f7ff b8cb 	b.w	801cd3c <_svfprintf_r+0x604>
 801dba6:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
 801dbaa:	f7ff b923 	b.w	801cdf4 <_svfprintf_r+0x6bc>
 801dbae:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
 801dbb2:	f7ff b95d 	b.w	801ce70 <_svfprintf_r+0x738>
 801dbb6:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
 801dbba:	f7ff b997 	b.w	801ceec <_svfprintf_r+0x7b4>
 801dbbe:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
 801dbc2:	f7fe bf25 	b.w	801ca10 <_svfprintf_r+0x2d8>
 801dbc6:	bf00      	nop
 801dbc8:	cccccccd 	.word	0xcccccccd
 801dbcc:	0802763c 	.word	0x0802763c
 801dbd0:	08027638 	.word	0x08027638
 801dbd4:	08027684 	.word	0x08027684

0801dbd8 <__swbuf_r>:
 801dbd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801dbda:	460d      	mov	r5, r1
 801dbdc:	4614      	mov	r4, r2
 801dbde:	4606      	mov	r6, r0
 801dbe0:	b110      	cbz	r0, 801dbe8 <__swbuf_r+0x10>
 801dbe2:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801dbe4:	2b00      	cmp	r3, #0
 801dbe6:	d043      	beq.n	801dc70 <__swbuf_r+0x98>
 801dbe8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801dbec:	69a3      	ldr	r3, [r4, #24]
 801dbee:	60a3      	str	r3, [r4, #8]
 801dbf0:	b291      	uxth	r1, r2
 801dbf2:	0708      	lsls	r0, r1, #28
 801dbf4:	d51b      	bpl.n	801dc2e <__swbuf_r+0x56>
 801dbf6:	6923      	ldr	r3, [r4, #16]
 801dbf8:	b1cb      	cbz	r3, 801dc2e <__swbuf_r+0x56>
 801dbfa:	b2ed      	uxtb	r5, r5
 801dbfc:	0489      	lsls	r1, r1, #18
 801dbfe:	462f      	mov	r7, r5
 801dc00:	d522      	bpl.n	801dc48 <__swbuf_r+0x70>
 801dc02:	6822      	ldr	r2, [r4, #0]
 801dc04:	6961      	ldr	r1, [r4, #20]
 801dc06:	1ad3      	subs	r3, r2, r3
 801dc08:	4299      	cmp	r1, r3
 801dc0a:	dd29      	ble.n	801dc60 <__swbuf_r+0x88>
 801dc0c:	3301      	adds	r3, #1
 801dc0e:	68a1      	ldr	r1, [r4, #8]
 801dc10:	1c50      	adds	r0, r2, #1
 801dc12:	3901      	subs	r1, #1
 801dc14:	60a1      	str	r1, [r4, #8]
 801dc16:	6020      	str	r0, [r4, #0]
 801dc18:	7015      	strb	r5, [r2, #0]
 801dc1a:	6962      	ldr	r2, [r4, #20]
 801dc1c:	429a      	cmp	r2, r3
 801dc1e:	d02a      	beq.n	801dc76 <__swbuf_r+0x9e>
 801dc20:	89a3      	ldrh	r3, [r4, #12]
 801dc22:	07db      	lsls	r3, r3, #31
 801dc24:	d501      	bpl.n	801dc2a <__swbuf_r+0x52>
 801dc26:	2d0a      	cmp	r5, #10
 801dc28:	d025      	beq.n	801dc76 <__swbuf_r+0x9e>
 801dc2a:	4638      	mov	r0, r7
 801dc2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801dc2e:	4621      	mov	r1, r4
 801dc30:	4630      	mov	r0, r6
 801dc32:	f000 f829 	bl	801dc88 <__swsetup_r>
 801dc36:	bb20      	cbnz	r0, 801dc82 <__swbuf_r+0xaa>
 801dc38:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801dc3c:	6923      	ldr	r3, [r4, #16]
 801dc3e:	b291      	uxth	r1, r2
 801dc40:	b2ed      	uxtb	r5, r5
 801dc42:	0489      	lsls	r1, r1, #18
 801dc44:	462f      	mov	r7, r5
 801dc46:	d4dc      	bmi.n	801dc02 <__swbuf_r+0x2a>
 801dc48:	6e61      	ldr	r1, [r4, #100]	; 0x64
 801dc4a:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 801dc4e:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
 801dc52:	81a2      	strh	r2, [r4, #12]
 801dc54:	6822      	ldr	r2, [r4, #0]
 801dc56:	6661      	str	r1, [r4, #100]	; 0x64
 801dc58:	6961      	ldr	r1, [r4, #20]
 801dc5a:	1ad3      	subs	r3, r2, r3
 801dc5c:	4299      	cmp	r1, r3
 801dc5e:	dcd5      	bgt.n	801dc0c <__swbuf_r+0x34>
 801dc60:	4621      	mov	r1, r4
 801dc62:	4630      	mov	r0, r6
 801dc64:	f001 f8ac 	bl	801edc0 <_fflush_r>
 801dc68:	b958      	cbnz	r0, 801dc82 <__swbuf_r+0xaa>
 801dc6a:	6822      	ldr	r2, [r4, #0]
 801dc6c:	2301      	movs	r3, #1
 801dc6e:	e7ce      	b.n	801dc0e <__swbuf_r+0x36>
 801dc70:	f001 f902 	bl	801ee78 <__sinit>
 801dc74:	e7b8      	b.n	801dbe8 <__swbuf_r+0x10>
 801dc76:	4621      	mov	r1, r4
 801dc78:	4630      	mov	r0, r6
 801dc7a:	f001 f8a1 	bl	801edc0 <_fflush_r>
 801dc7e:	2800      	cmp	r0, #0
 801dc80:	d0d3      	beq.n	801dc2a <__swbuf_r+0x52>
 801dc82:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 801dc86:	e7d0      	b.n	801dc2a <__swbuf_r+0x52>

0801dc88 <__swsetup_r>:
 801dc88:	b538      	push	{r3, r4, r5, lr}
 801dc8a:	4b31      	ldr	r3, [pc, #196]	; (801dd50 <__swsetup_r+0xc8>)
 801dc8c:	681b      	ldr	r3, [r3, #0]
 801dc8e:	4605      	mov	r5, r0
 801dc90:	460c      	mov	r4, r1
 801dc92:	b113      	cbz	r3, 801dc9a <__swsetup_r+0x12>
 801dc94:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 801dc96:	2a00      	cmp	r2, #0
 801dc98:	d03a      	beq.n	801dd10 <__swsetup_r+0x88>
 801dc9a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801dc9e:	b293      	uxth	r3, r2
 801dca0:	0718      	lsls	r0, r3, #28
 801dca2:	d50c      	bpl.n	801dcbe <__swsetup_r+0x36>
 801dca4:	6920      	ldr	r0, [r4, #16]
 801dca6:	b1a8      	cbz	r0, 801dcd4 <__swsetup_r+0x4c>
 801dca8:	f013 0201 	ands.w	r2, r3, #1
 801dcac:	d020      	beq.n	801dcf0 <__swsetup_r+0x68>
 801dcae:	6963      	ldr	r3, [r4, #20]
 801dcb0:	2200      	movs	r2, #0
 801dcb2:	425b      	negs	r3, r3
 801dcb4:	61a3      	str	r3, [r4, #24]
 801dcb6:	60a2      	str	r2, [r4, #8]
 801dcb8:	b300      	cbz	r0, 801dcfc <__swsetup_r+0x74>
 801dcba:	2000      	movs	r0, #0
 801dcbc:	bd38      	pop	{r3, r4, r5, pc}
 801dcbe:	06d9      	lsls	r1, r3, #27
 801dcc0:	d53e      	bpl.n	801dd40 <__swsetup_r+0xb8>
 801dcc2:	0758      	lsls	r0, r3, #29
 801dcc4:	d428      	bmi.n	801dd18 <__swsetup_r+0x90>
 801dcc6:	6920      	ldr	r0, [r4, #16]
 801dcc8:	f042 0308 	orr.w	r3, r2, #8
 801dccc:	81a3      	strh	r3, [r4, #12]
 801dcce:	b29b      	uxth	r3, r3
 801dcd0:	2800      	cmp	r0, #0
 801dcd2:	d1e9      	bne.n	801dca8 <__swsetup_r+0x20>
 801dcd4:	f403 7220 	and.w	r2, r3, #640	; 0x280
 801dcd8:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801dcdc:	d0e4      	beq.n	801dca8 <__swsetup_r+0x20>
 801dcde:	4628      	mov	r0, r5
 801dce0:	4621      	mov	r1, r4
 801dce2:	f001 faab 	bl	801f23c <__smakebuf_r>
 801dce6:	89a3      	ldrh	r3, [r4, #12]
 801dce8:	6920      	ldr	r0, [r4, #16]
 801dcea:	f013 0201 	ands.w	r2, r3, #1
 801dcee:	d1de      	bne.n	801dcae <__swsetup_r+0x26>
 801dcf0:	0799      	lsls	r1, r3, #30
 801dcf2:	bf58      	it	pl
 801dcf4:	6962      	ldrpl	r2, [r4, #20]
 801dcf6:	60a2      	str	r2, [r4, #8]
 801dcf8:	2800      	cmp	r0, #0
 801dcfa:	d1de      	bne.n	801dcba <__swsetup_r+0x32>
 801dcfc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801dd00:	061a      	lsls	r2, r3, #24
 801dd02:	d5db      	bpl.n	801dcbc <__swsetup_r+0x34>
 801dd04:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801dd08:	81a3      	strh	r3, [r4, #12]
 801dd0a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801dd0e:	bd38      	pop	{r3, r4, r5, pc}
 801dd10:	4618      	mov	r0, r3
 801dd12:	f001 f8b1 	bl	801ee78 <__sinit>
 801dd16:	e7c0      	b.n	801dc9a <__swsetup_r+0x12>
 801dd18:	6b21      	ldr	r1, [r4, #48]	; 0x30
 801dd1a:	b151      	cbz	r1, 801dd32 <__swsetup_r+0xaa>
 801dd1c:	f104 0340 	add.w	r3, r4, #64	; 0x40
 801dd20:	4299      	cmp	r1, r3
 801dd22:	d004      	beq.n	801dd2e <__swsetup_r+0xa6>
 801dd24:	4628      	mov	r0, r5
 801dd26:	f001 f92f 	bl	801ef88 <_free_r>
 801dd2a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801dd2e:	2300      	movs	r3, #0
 801dd30:	6323      	str	r3, [r4, #48]	; 0x30
 801dd32:	2300      	movs	r3, #0
 801dd34:	6920      	ldr	r0, [r4, #16]
 801dd36:	6063      	str	r3, [r4, #4]
 801dd38:	f022 0224 	bic.w	r2, r2, #36	; 0x24
 801dd3c:	6020      	str	r0, [r4, #0]
 801dd3e:	e7c3      	b.n	801dcc8 <__swsetup_r+0x40>
 801dd40:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 801dd44:	2309      	movs	r3, #9
 801dd46:	602b      	str	r3, [r5, #0]
 801dd48:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801dd4c:	81a2      	strh	r2, [r4, #12]
 801dd4e:	bd38      	pop	{r3, r4, r5, pc}
 801dd50:	200033b4 	.word	0x200033b4

0801dd54 <quorem>:
 801dd54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd58:	6903      	ldr	r3, [r0, #16]
 801dd5a:	690f      	ldr	r7, [r1, #16]
 801dd5c:	42bb      	cmp	r3, r7
 801dd5e:	b083      	sub	sp, #12
 801dd60:	f2c0 8086 	blt.w	801de70 <quorem+0x11c>
 801dd64:	3f01      	subs	r7, #1
 801dd66:	f101 0914 	add.w	r9, r1, #20
 801dd6a:	f100 0a14 	add.w	sl, r0, #20
 801dd6e:	f859 2027 	ldr.w	r2, [r9, r7, lsl #2]
 801dd72:	f85a 3027 	ldr.w	r3, [sl, r7, lsl #2]
 801dd76:	00bc      	lsls	r4, r7, #2
 801dd78:	3201      	adds	r2, #1
 801dd7a:	fbb3 f8f2 	udiv	r8, r3, r2
 801dd7e:	eb0a 0304 	add.w	r3, sl, r4
 801dd82:	9400      	str	r4, [sp, #0]
 801dd84:	eb09 0b04 	add.w	fp, r9, r4
 801dd88:	9301      	str	r3, [sp, #4]
 801dd8a:	f1b8 0f00 	cmp.w	r8, #0
 801dd8e:	d038      	beq.n	801de02 <quorem+0xae>
 801dd90:	2500      	movs	r5, #0
 801dd92:	462e      	mov	r6, r5
 801dd94:	46ce      	mov	lr, r9
 801dd96:	46d4      	mov	ip, sl
 801dd98:	f85e 4b04 	ldr.w	r4, [lr], #4
 801dd9c:	f8dc 3000 	ldr.w	r3, [ip]
 801dda0:	b2a2      	uxth	r2, r4
 801dda2:	fb08 5502 	mla	r5, r8, r2, r5
 801dda6:	0c22      	lsrs	r2, r4, #16
 801dda8:	0c2c      	lsrs	r4, r5, #16
 801ddaa:	fb08 4202 	mla	r2, r8, r2, r4
 801ddae:	b2ad      	uxth	r5, r5
 801ddb0:	1b75      	subs	r5, r6, r5
 801ddb2:	b296      	uxth	r6, r2
 801ddb4:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
 801ddb8:	fa15 f383 	uxtah	r3, r5, r3
 801ddbc:	eb06 4623 	add.w	r6, r6, r3, asr #16
 801ddc0:	b29b      	uxth	r3, r3
 801ddc2:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 801ddc6:	45f3      	cmp	fp, lr
 801ddc8:	ea4f 4512 	mov.w	r5, r2, lsr #16
 801ddcc:	f84c 3b04 	str.w	r3, [ip], #4
 801ddd0:	ea4f 4626 	mov.w	r6, r6, asr #16
 801ddd4:	d2e0      	bcs.n	801dd98 <quorem+0x44>
 801ddd6:	9b00      	ldr	r3, [sp, #0]
 801ddd8:	f85a 3003 	ldr.w	r3, [sl, r3]
 801dddc:	b98b      	cbnz	r3, 801de02 <quorem+0xae>
 801ddde:	9a01      	ldr	r2, [sp, #4]
 801dde0:	1f13      	subs	r3, r2, #4
 801dde2:	459a      	cmp	sl, r3
 801dde4:	d20c      	bcs.n	801de00 <quorem+0xac>
 801dde6:	f852 3c04 	ldr.w	r3, [r2, #-4]
 801ddea:	b94b      	cbnz	r3, 801de00 <quorem+0xac>
 801ddec:	f1a2 0308 	sub.w	r3, r2, #8
 801ddf0:	e002      	b.n	801ddf8 <quorem+0xa4>
 801ddf2:	681a      	ldr	r2, [r3, #0]
 801ddf4:	3b04      	subs	r3, #4
 801ddf6:	b91a      	cbnz	r2, 801de00 <quorem+0xac>
 801ddf8:	459a      	cmp	sl, r3
 801ddfa:	f107 37ff 	add.w	r7, r7, #4294967295	; 0xffffffff
 801ddfe:	d3f8      	bcc.n	801ddf2 <quorem+0x9e>
 801de00:	6107      	str	r7, [r0, #16]
 801de02:	4604      	mov	r4, r0
 801de04:	f001 fc7a 	bl	801f6fc <__mcmp>
 801de08:	2800      	cmp	r0, #0
 801de0a:	db2d      	blt.n	801de68 <quorem+0x114>
 801de0c:	f108 0801 	add.w	r8, r8, #1
 801de10:	4655      	mov	r5, sl
 801de12:	2300      	movs	r3, #0
 801de14:	f859 1b04 	ldr.w	r1, [r9], #4
 801de18:	6828      	ldr	r0, [r5, #0]
 801de1a:	b28a      	uxth	r2, r1
 801de1c:	1a9a      	subs	r2, r3, r2
 801de1e:	0c0b      	lsrs	r3, r1, #16
 801de20:	fa12 f280 	uxtah	r2, r2, r0
 801de24:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
 801de28:	eb03 4322 	add.w	r3, r3, r2, asr #16
 801de2c:	b292      	uxth	r2, r2
 801de2e:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 801de32:	45cb      	cmp	fp, r9
 801de34:	f845 2b04 	str.w	r2, [r5], #4
 801de38:	ea4f 4323 	mov.w	r3, r3, asr #16
 801de3c:	d2ea      	bcs.n	801de14 <quorem+0xc0>
 801de3e:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
 801de42:	eb0a 0387 	add.w	r3, sl, r7, lsl #2
 801de46:	b97a      	cbnz	r2, 801de68 <quorem+0x114>
 801de48:	1f1a      	subs	r2, r3, #4
 801de4a:	4592      	cmp	sl, r2
 801de4c:	d20b      	bcs.n	801de66 <quorem+0x112>
 801de4e:	f853 2c04 	ldr.w	r2, [r3, #-4]
 801de52:	b942      	cbnz	r2, 801de66 <quorem+0x112>
 801de54:	3b08      	subs	r3, #8
 801de56:	e002      	b.n	801de5e <quorem+0x10a>
 801de58:	681a      	ldr	r2, [r3, #0]
 801de5a:	3b04      	subs	r3, #4
 801de5c:	b91a      	cbnz	r2, 801de66 <quorem+0x112>
 801de5e:	459a      	cmp	sl, r3
 801de60:	f107 37ff 	add.w	r7, r7, #4294967295	; 0xffffffff
 801de64:	d3f8      	bcc.n	801de58 <quorem+0x104>
 801de66:	6127      	str	r7, [r4, #16]
 801de68:	4640      	mov	r0, r8
 801de6a:	b003      	add	sp, #12
 801de6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801de70:	2000      	movs	r0, #0
 801de72:	b003      	add	sp, #12
 801de74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801de78 <_dtoa_r>:
 801de78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801de7c:	6c01      	ldr	r1, [r0, #64]	; 0x40
 801de7e:	b097      	sub	sp, #92	; 0x5c
 801de80:	4614      	mov	r4, r2
 801de82:	461d      	mov	r5, r3
 801de84:	4683      	mov	fp, r0
 801de86:	e9cd 4502 	strd	r4, r5, [sp, #8]
 801de8a:	b149      	cbz	r1, 801dea0 <_dtoa_r+0x28>
 801de8c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801de8e:	604a      	str	r2, [r1, #4]
 801de90:	2301      	movs	r3, #1
 801de92:	4093      	lsls	r3, r2
 801de94:	608b      	str	r3, [r1, #8]
 801de96:	f001 fa41 	bl	801f31c <_Bfree>
 801de9a:	2300      	movs	r3, #0
 801de9c:	f8cb 3040 	str.w	r3, [fp, #64]	; 0x40
 801dea0:	1e2e      	subs	r6, r5, #0
 801dea2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801dea4:	bfb4      	ite	lt
 801dea6:	2301      	movlt	r3, #1
 801dea8:	2300      	movge	r3, #0
 801deaa:	6013      	str	r3, [r2, #0]
 801deac:	4b78      	ldr	r3, [pc, #480]	; (801e090 <_dtoa_r+0x218>)
 801deae:	bfbc      	itt	lt
 801deb0:	f026 4600 	biclt.w	r6, r6, #2147483648	; 0x80000000
 801deb4:	9603      	strlt	r6, [sp, #12]
 801deb6:	43b3      	bics	r3, r6
 801deb8:	f000 80a8 	beq.w	801e00c <_dtoa_r+0x194>
 801debc:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 801dec0:	2200      	movs	r2, #0
 801dec2:	4640      	mov	r0, r8
 801dec4:	4649      	mov	r1, r9
 801dec6:	2300      	movs	r3, #0
 801dec8:	f7e2 feca 	bl	8000c60 <__aeabi_dcmpeq>
 801decc:	4605      	mov	r5, r0
 801dece:	b178      	cbz	r0, 801def0 <_dtoa_r+0x78>
 801ded0:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801ded2:	2301      	movs	r3, #1
 801ded4:	6013      	str	r3, [r2, #0]
 801ded6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ded8:	2b00      	cmp	r3, #0
 801deda:	f000 80c4 	beq.w	801e066 <_dtoa_r+0x1ee>
 801dede:	4b6d      	ldr	r3, [pc, #436]	; (801e094 <_dtoa_r+0x21c>)
 801dee0:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801dee2:	6013      	str	r3, [r2, #0]
 801dee4:	3b01      	subs	r3, #1
 801dee6:	9304      	str	r3, [sp, #16]
 801dee8:	9804      	ldr	r0, [sp, #16]
 801deea:	b017      	add	sp, #92	; 0x5c
 801deec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801def0:	aa14      	add	r2, sp, #80	; 0x50
 801def2:	ab15      	add	r3, sp, #84	; 0x54
 801def4:	e9cd 3200 	strd	r3, r2, [sp]
 801def8:	4658      	mov	r0, fp
 801defa:	4642      	mov	r2, r8
 801defc:	464b      	mov	r3, r9
 801defe:	f001 fc8f 	bl	801f820 <__d2b>
 801df02:	0d34      	lsrs	r4, r6, #20
 801df04:	4682      	mov	sl, r0
 801df06:	f040 80a3 	bne.w	801e050 <_dtoa_r+0x1d8>
 801df0a:	e9dd 5414 	ldrd	r5, r4, [sp, #80]	; 0x50
 801df0e:	442c      	add	r4, r5
 801df10:	f204 4332 	addw	r3, r4, #1074	; 0x432
 801df14:	2b20      	cmp	r3, #32
 801df16:	f340 8417 	ble.w	801e748 <_dtoa_r+0x8d0>
 801df1a:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 801df1e:	409e      	lsls	r6, r3
 801df20:	9b02      	ldr	r3, [sp, #8]
 801df22:	f204 4012 	addw	r0, r4, #1042	; 0x412
 801df26:	fa23 f000 	lsr.w	r0, r3, r0
 801df2a:	4330      	orrs	r0, r6
 801df2c:	f7e2 fbb6 	bl	800069c <__aeabi_ui2d>
 801df30:	2301      	movs	r3, #1
 801df32:	4680      	mov	r8, r0
 801df34:	3c01      	subs	r4, #1
 801df36:	f1a1 79f8 	sub.w	r9, r1, #32505856	; 0x1f00000
 801df3a:	9312      	str	r3, [sp, #72]	; 0x48
 801df3c:	2200      	movs	r2, #0
 801df3e:	4b56      	ldr	r3, [pc, #344]	; (801e098 <_dtoa_r+0x220>)
 801df40:	4640      	mov	r0, r8
 801df42:	4649      	mov	r1, r9
 801df44:	f7e2 fa6c 	bl	8000420 <__aeabi_dsub>
 801df48:	a34b      	add	r3, pc, #300	; (adr r3, 801e078 <_dtoa_r+0x200>)
 801df4a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801df4e:	f7e2 fc1f 	bl	8000790 <__aeabi_dmul>
 801df52:	a34b      	add	r3, pc, #300	; (adr r3, 801e080 <_dtoa_r+0x208>)
 801df54:	e9d3 2300 	ldrd	r2, r3, [r3]
 801df58:	f7e2 fa64 	bl	8000424 <__adddf3>
 801df5c:	4606      	mov	r6, r0
 801df5e:	4620      	mov	r0, r4
 801df60:	460f      	mov	r7, r1
 801df62:	f7e2 fbab 	bl	80006bc <__aeabi_i2d>
 801df66:	a348      	add	r3, pc, #288	; (adr r3, 801e088 <_dtoa_r+0x210>)
 801df68:	e9d3 2300 	ldrd	r2, r3, [r3]
 801df6c:	f7e2 fc10 	bl	8000790 <__aeabi_dmul>
 801df70:	4602      	mov	r2, r0
 801df72:	460b      	mov	r3, r1
 801df74:	4630      	mov	r0, r6
 801df76:	4639      	mov	r1, r7
 801df78:	f7e2 fa54 	bl	8000424 <__adddf3>
 801df7c:	4606      	mov	r6, r0
 801df7e:	460f      	mov	r7, r1
 801df80:	f7eb fc2c 	bl	80097dc <__aeabi_d2iz>
 801df84:	2200      	movs	r2, #0
 801df86:	9005      	str	r0, [sp, #20]
 801df88:	2300      	movs	r3, #0
 801df8a:	4630      	mov	r0, r6
 801df8c:	4639      	mov	r1, r7
 801df8e:	f7e2 fe71 	bl	8000c74 <__aeabi_dcmplt>
 801df92:	2800      	cmp	r0, #0
 801df94:	f040 826e 	bne.w	801e474 <_dtoa_r+0x5fc>
 801df98:	9e05      	ldr	r6, [sp, #20]
 801df9a:	2e16      	cmp	r6, #22
 801df9c:	f200 825f 	bhi.w	801e45e <_dtoa_r+0x5e6>
 801dfa0:	4b3e      	ldr	r3, [pc, #248]	; (801e09c <_dtoa_r+0x224>)
 801dfa2:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 801dfa6:	e9d3 0100 	ldrd	r0, r1, [r3]
 801dfaa:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801dfae:	f7e2 fe7f 	bl	8000cb0 <__aeabi_dcmpgt>
 801dfb2:	2800      	cmp	r0, #0
 801dfb4:	f000 83c4 	beq.w	801e740 <_dtoa_r+0x8c8>
 801dfb8:	1e73      	subs	r3, r6, #1
 801dfba:	9305      	str	r3, [sp, #20]
 801dfbc:	2300      	movs	r3, #0
 801dfbe:	930a      	str	r3, [sp, #40]	; 0x28
 801dfc0:	1b2c      	subs	r4, r5, r4
 801dfc2:	9b05      	ldr	r3, [sp, #20]
 801dfc4:	f1b4 0801 	subs.w	r8, r4, #1
 801dfc8:	bf46      	itte	mi
 801dfca:	f1c4 0901 	rsbmi	r9, r4, #1
 801dfce:	f04f 0800 	movmi.w	r8, #0
 801dfd2:	f04f 0900 	movpl.w	r9, #0
 801dfd6:	2b00      	cmp	r3, #0
 801dfd8:	f2c0 8244 	blt.w	801e464 <_dtoa_r+0x5ec>
 801dfdc:	4498      	add	r8, r3
 801dfde:	9309      	str	r3, [sp, #36]	; 0x24
 801dfe0:	2300      	movs	r3, #0
 801dfe2:	9308      	str	r3, [sp, #32]
 801dfe4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dfe6:	2b09      	cmp	r3, #9
 801dfe8:	d860      	bhi.n	801e0ac <_dtoa_r+0x234>
 801dfea:	2b05      	cmp	r3, #5
 801dfec:	f340 83aa 	ble.w	801e744 <_dtoa_r+0x8cc>
 801dff0:	3b04      	subs	r3, #4
 801dff2:	9320      	str	r3, [sp, #128]	; 0x80
 801dff4:	2500      	movs	r5, #0
 801dff6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dff8:	3b02      	subs	r3, #2
 801dffa:	2b03      	cmp	r3, #3
 801dffc:	f200 848d 	bhi.w	801e91a <_dtoa_r+0xaa2>
 801e000:	e8df f013 	tbh	[pc, r3, lsl #1]
 801e004:	03a903c9 	.word	0x03a903c9
 801e008:	04ea03d3 	.word	0x04ea03d3
 801e00c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801e00e:	f242 730f 	movw	r3, #9999	; 0x270f
 801e012:	6013      	str	r3, [r2, #0]
 801e014:	9b02      	ldr	r3, [sp, #8]
 801e016:	b97b      	cbnz	r3, 801e038 <_dtoa_r+0x1c0>
 801e018:	f3c6 0613 	ubfx	r6, r6, #0, #20
 801e01c:	b966      	cbnz	r6, 801e038 <_dtoa_r+0x1c0>
 801e01e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e020:	2b00      	cmp	r3, #0
 801e022:	f000 8612 	beq.w	801ec4a <_dtoa_r+0xdd2>
 801e026:	4b1e      	ldr	r3, [pc, #120]	; (801e0a0 <_dtoa_r+0x228>)
 801e028:	9304      	str	r3, [sp, #16]
 801e02a:	3308      	adds	r3, #8
 801e02c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801e02e:	9804      	ldr	r0, [sp, #16]
 801e030:	6013      	str	r3, [r2, #0]
 801e032:	b017      	add	sp, #92	; 0x5c
 801e034:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e038:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e03a:	b92b      	cbnz	r3, 801e048 <_dtoa_r+0x1d0>
 801e03c:	4b19      	ldr	r3, [pc, #100]	; (801e0a4 <_dtoa_r+0x22c>)
 801e03e:	9304      	str	r3, [sp, #16]
 801e040:	9804      	ldr	r0, [sp, #16]
 801e042:	b017      	add	sp, #92	; 0x5c
 801e044:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e048:	4b16      	ldr	r3, [pc, #88]	; (801e0a4 <_dtoa_r+0x22c>)
 801e04a:	9304      	str	r3, [sp, #16]
 801e04c:	3303      	adds	r3, #3
 801e04e:	e7ed      	b.n	801e02c <_dtoa_r+0x1b4>
 801e050:	f3c9 0313 	ubfx	r3, r9, #0, #20
 801e054:	f043 597f 	orr.w	r9, r3, #1069547520	; 0x3fc00000
 801e058:	9512      	str	r5, [sp, #72]	; 0x48
 801e05a:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 801e05e:	f449 1940 	orr.w	r9, r9, #3145728	; 0x300000
 801e062:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e064:	e76a      	b.n	801df3c <_dtoa_r+0xc4>
 801e066:	4b10      	ldr	r3, [pc, #64]	; (801e0a8 <_dtoa_r+0x230>)
 801e068:	9304      	str	r3, [sp, #16]
 801e06a:	9804      	ldr	r0, [sp, #16]
 801e06c:	b017      	add	sp, #92	; 0x5c
 801e06e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e072:	bf00      	nop
 801e074:	f3af 8000 	nop.w
 801e078:	636f4361 	.word	0x636f4361
 801e07c:	3fd287a7 	.word	0x3fd287a7
 801e080:	8b60c8b3 	.word	0x8b60c8b3
 801e084:	3fc68a28 	.word	0x3fc68a28
 801e088:	509f79fb 	.word	0x509f79fb
 801e08c:	3fd34413 	.word	0x3fd34413
 801e090:	7ff00000 	.word	0x7ff00000
 801e094:	08027671 	.word	0x08027671
 801e098:	3ff80000 	.word	0x3ff80000
 801e09c:	080276d0 	.word	0x080276d0
 801e0a0:	08027694 	.word	0x08027694
 801e0a4:	080276a0 	.word	0x080276a0
 801e0a8:	08027670 	.word	0x08027670
 801e0ac:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 801e0b0:	2501      	movs	r5, #1
 801e0b2:	e9cd 4506 	strd	r4, r5, [sp, #24]
 801e0b6:	2300      	movs	r3, #0
 801e0b8:	9320      	str	r3, [sp, #128]	; 0x80
 801e0ba:	9321      	str	r3, [sp, #132]	; 0x84
 801e0bc:	2100      	movs	r1, #0
 801e0be:	f8cb 1044 	str.w	r1, [fp, #68]	; 0x44
 801e0c2:	940b      	str	r4, [sp, #44]	; 0x2c
 801e0c4:	4658      	mov	r0, fp
 801e0c6:	f001 f903 	bl	801f2d0 <_Balloc>
 801e0ca:	2c0e      	cmp	r4, #14
 801e0cc:	9004      	str	r0, [sp, #16]
 801e0ce:	f8cb 0040 	str.w	r0, [fp, #64]	; 0x40
 801e0d2:	f200 80f9 	bhi.w	801e2c8 <_dtoa_r+0x450>
 801e0d6:	2d00      	cmp	r5, #0
 801e0d8:	f000 80f6 	beq.w	801e2c8 <_dtoa_r+0x450>
 801e0dc:	e9dd 3402 	ldrd	r3, r4, [sp, #8]
 801e0e0:	9905      	ldr	r1, [sp, #20]
 801e0e2:	461d      	mov	r5, r3
 801e0e4:	4626      	mov	r6, r4
 801e0e6:	2900      	cmp	r1, #0
 801e0e8:	e9cd 560c 	strd	r5, r6, [sp, #48]	; 0x30
 801e0ec:	f340 83d3 	ble.w	801e896 <_dtoa_r+0xa1e>
 801e0f0:	4b9a      	ldr	r3, [pc, #616]	; (801e35c <_dtoa_r+0x4e4>)
 801e0f2:	f001 020f 	and.w	r2, r1, #15
 801e0f6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801e0fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 801e0fe:	110c      	asrs	r4, r1, #4
 801e100:	e9cd 2302 	strd	r2, r3, [sp, #8]
 801e104:	06e3      	lsls	r3, r4, #27
 801e106:	f140 8488 	bpl.w	801ea1a <_dtoa_r+0xba2>
 801e10a:	4b95      	ldr	r3, [pc, #596]	; (801e360 <_dtoa_r+0x4e8>)
 801e10c:	4631      	mov	r1, r6
 801e10e:	4628      	mov	r0, r5
 801e110:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 801e114:	f7e2 fc66 	bl	80009e4 <__aeabi_ddiv>
 801e118:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
 801e11c:	f004 040f 	and.w	r4, r4, #15
 801e120:	2603      	movs	r6, #3
 801e122:	b17c      	cbz	r4, 801e144 <_dtoa_r+0x2cc>
 801e124:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801e128:	4d8d      	ldr	r5, [pc, #564]	; (801e360 <_dtoa_r+0x4e8>)
 801e12a:	07e7      	lsls	r7, r4, #31
 801e12c:	d504      	bpl.n	801e138 <_dtoa_r+0x2c0>
 801e12e:	e9d5 2300 	ldrd	r2, r3, [r5]
 801e132:	3601      	adds	r6, #1
 801e134:	f7e2 fb2c 	bl	8000790 <__aeabi_dmul>
 801e138:	1064      	asrs	r4, r4, #1
 801e13a:	f105 0508 	add.w	r5, r5, #8
 801e13e:	d1f4      	bne.n	801e12a <_dtoa_r+0x2b2>
 801e140:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801e144:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801e148:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 801e14c:	f7e2 fc4a 	bl	80009e4 <__aeabi_ddiv>
 801e150:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801e154:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e156:	b143      	cbz	r3, 801e16a <_dtoa_r+0x2f2>
 801e158:	2200      	movs	r2, #0
 801e15a:	4b82      	ldr	r3, [pc, #520]	; (801e364 <_dtoa_r+0x4ec>)
 801e15c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801e160:	f7e2 fd88 	bl	8000c74 <__aeabi_dcmplt>
 801e164:	2800      	cmp	r0, #0
 801e166:	f040 84eb 	bne.w	801eb40 <_dtoa_r+0xcc8>
 801e16a:	4630      	mov	r0, r6
 801e16c:	f7e2 faa6 	bl	80006bc <__aeabi_i2d>
 801e170:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801e174:	f7e2 fb0c 	bl	8000790 <__aeabi_dmul>
 801e178:	4b7b      	ldr	r3, [pc, #492]	; (801e368 <_dtoa_r+0x4f0>)
 801e17a:	2200      	movs	r2, #0
 801e17c:	f7e2 f952 	bl	8000424 <__adddf3>
 801e180:	9b06      	ldr	r3, [sp, #24]
 801e182:	4606      	mov	r6, r0
 801e184:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
 801e188:	2b00      	cmp	r3, #0
 801e18a:	f000 840a 	beq.w	801e9a2 <_dtoa_r+0xb2a>
 801e18e:	9b05      	ldr	r3, [sp, #20]
 801e190:	9313      	str	r3, [sp, #76]	; 0x4c
 801e192:	9b06      	ldr	r3, [sp, #24]
 801e194:	930e      	str	r3, [sp, #56]	; 0x38
 801e196:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801e19a:	f7eb fb1f 	bl	80097dc <__aeabi_d2iz>
 801e19e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801e1a0:	4b6e      	ldr	r3, [pc, #440]	; (801e35c <_dtoa_r+0x4e4>)
 801e1a2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801e1a6:	e953 3402 	ldrd	r3, r4, [r3, #-8]
 801e1aa:	f100 0530 	add.w	r5, r0, #48	; 0x30
 801e1ae:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 801e1b2:	f7e2 fa83 	bl	80006bc <__aeabi_i2d>
 801e1b6:	4602      	mov	r2, r0
 801e1b8:	460b      	mov	r3, r1
 801e1ba:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801e1be:	e9cd 6702 	strd	r6, r7, [sp, #8]
 801e1c2:	f7e2 f92d 	bl	8000420 <__aeabi_dsub>
 801e1c6:	9b04      	ldr	r3, [sp, #16]
 801e1c8:	4606      	mov	r6, r0
 801e1ca:	9807      	ldr	r0, [sp, #28]
 801e1cc:	1c5c      	adds	r4, r3, #1
 801e1ce:	b2ed      	uxtb	r5, r5
 801e1d0:	460f      	mov	r7, r1
 801e1d2:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 801e1d6:	2800      	cmp	r0, #0
 801e1d8:	f000 8445 	beq.w	801ea66 <_dtoa_r+0xbee>
 801e1dc:	2000      	movs	r0, #0
 801e1de:	4963      	ldr	r1, [pc, #396]	; (801e36c <_dtoa_r+0x4f4>)
 801e1e0:	f7e2 fc00 	bl	80009e4 <__aeabi_ddiv>
 801e1e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801e1e8:	f7e2 f91a 	bl	8000420 <__aeabi_dsub>
 801e1ec:	9a04      	ldr	r2, [sp, #16]
 801e1ee:	463b      	mov	r3, r7
 801e1f0:	7015      	strb	r5, [r2, #0]
 801e1f2:	4632      	mov	r2, r6
 801e1f4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801e1f8:	f7e2 fd5a 	bl	8000cb0 <__aeabi_dcmpgt>
 801e1fc:	2800      	cmp	r0, #0
 801e1fe:	f040 84ef 	bne.w	801ebe0 <_dtoa_r+0xd68>
 801e202:	4632      	mov	r2, r6
 801e204:	463b      	mov	r3, r7
 801e206:	2000      	movs	r0, #0
 801e208:	4956      	ldr	r1, [pc, #344]	; (801e364 <_dtoa_r+0x4ec>)
 801e20a:	f7e2 f909 	bl	8000420 <__aeabi_dsub>
 801e20e:	4602      	mov	r2, r0
 801e210:	460b      	mov	r3, r1
 801e212:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801e216:	f7e2 fd4b 	bl	8000cb0 <__aeabi_dcmpgt>
 801e21a:	2800      	cmp	r0, #0
 801e21c:	f040 84e5 	bne.w	801ebea <_dtoa_r+0xd72>
 801e220:	990e      	ldr	r1, [sp, #56]	; 0x38
 801e222:	2901      	cmp	r1, #1
 801e224:	d04c      	beq.n	801e2c0 <_dtoa_r+0x448>
 801e226:	9a04      	ldr	r2, [sp, #16]
 801e228:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 801e22c:	4411      	add	r1, r2
 801e22e:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 801e232:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 801e236:	f8cd a008 	str.w	sl, [sp, #8]
 801e23a:	468a      	mov	sl, r1
 801e23c:	e00c      	b.n	801e258 <_dtoa_r+0x3e0>
 801e23e:	2000      	movs	r0, #0
 801e240:	4948      	ldr	r1, [pc, #288]	; (801e364 <_dtoa_r+0x4ec>)
 801e242:	f7e2 f8ed 	bl	8000420 <__aeabi_dsub>
 801e246:	4642      	mov	r2, r8
 801e248:	464b      	mov	r3, r9
 801e24a:	f7e2 fd13 	bl	8000c74 <__aeabi_dcmplt>
 801e24e:	2800      	cmp	r0, #0
 801e250:	f040 84c9 	bne.w	801ebe6 <_dtoa_r+0xd6e>
 801e254:	4554      	cmp	r4, sl
 801e256:	d02d      	beq.n	801e2b4 <_dtoa_r+0x43c>
 801e258:	4640      	mov	r0, r8
 801e25a:	4649      	mov	r1, r9
 801e25c:	2200      	movs	r2, #0
 801e25e:	4b44      	ldr	r3, [pc, #272]	; (801e370 <_dtoa_r+0x4f8>)
 801e260:	f7e2 fa96 	bl	8000790 <__aeabi_dmul>
 801e264:	2200      	movs	r2, #0
 801e266:	4b42      	ldr	r3, [pc, #264]	; (801e370 <_dtoa_r+0x4f8>)
 801e268:	4680      	mov	r8, r0
 801e26a:	4689      	mov	r9, r1
 801e26c:	4630      	mov	r0, r6
 801e26e:	4639      	mov	r1, r7
 801e270:	f7e2 fa8e 	bl	8000790 <__aeabi_dmul>
 801e274:	460f      	mov	r7, r1
 801e276:	4606      	mov	r6, r0
 801e278:	f7eb fab0 	bl	80097dc <__aeabi_d2iz>
 801e27c:	4605      	mov	r5, r0
 801e27e:	f7e2 fa1d 	bl	80006bc <__aeabi_i2d>
 801e282:	4602      	mov	r2, r0
 801e284:	460b      	mov	r3, r1
 801e286:	4630      	mov	r0, r6
 801e288:	4639      	mov	r1, r7
 801e28a:	f7e2 f8c9 	bl	8000420 <__aeabi_dsub>
 801e28e:	3530      	adds	r5, #48	; 0x30
 801e290:	b2ed      	uxtb	r5, r5
 801e292:	4642      	mov	r2, r8
 801e294:	464b      	mov	r3, r9
 801e296:	f804 5b01 	strb.w	r5, [r4], #1
 801e29a:	4606      	mov	r6, r0
 801e29c:	460f      	mov	r7, r1
 801e29e:	f7e2 fce9 	bl	8000c74 <__aeabi_dcmplt>
 801e2a2:	4632      	mov	r2, r6
 801e2a4:	463b      	mov	r3, r7
 801e2a6:	2800      	cmp	r0, #0
 801e2a8:	d0c9      	beq.n	801e23e <_dtoa_r+0x3c6>
 801e2aa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801e2ac:	f8dd a008 	ldr.w	sl, [sp, #8]
 801e2b0:	9305      	str	r3, [sp, #20]
 801e2b2:	e219      	b.n	801e6e8 <_dtoa_r+0x870>
 801e2b4:	f8dd 9038 	ldr.w	r9, [sp, #56]	; 0x38
 801e2b8:	f8dd 8040 	ldr.w	r8, [sp, #64]	; 0x40
 801e2bc:	f8dd a008 	ldr.w	sl, [sp, #8]
 801e2c0:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
 801e2c4:	e9cd 3402 	strd	r3, r4, [sp, #8]
 801e2c8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801e2ca:	2b00      	cmp	r3, #0
 801e2cc:	f2c0 80ad 	blt.w	801e42a <_dtoa_r+0x5b2>
 801e2d0:	9a05      	ldr	r2, [sp, #20]
 801e2d2:	2a0e      	cmp	r2, #14
 801e2d4:	f300 80a9 	bgt.w	801e42a <_dtoa_r+0x5b2>
 801e2d8:	4b20      	ldr	r3, [pc, #128]	; (801e35c <_dtoa_r+0x4e4>)
 801e2da:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801e2de:	e9d3 8900 	ldrd	r8, r9, [r3]
 801e2e2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801e2e4:	2b00      	cmp	r3, #0
 801e2e6:	f2c0 82b3 	blt.w	801e850 <_dtoa_r+0x9d8>
 801e2ea:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 801e2ee:	4642      	mov	r2, r8
 801e2f0:	464b      	mov	r3, r9
 801e2f2:	4630      	mov	r0, r6
 801e2f4:	4639      	mov	r1, r7
 801e2f6:	f7e2 fb75 	bl	80009e4 <__aeabi_ddiv>
 801e2fa:	f7eb fa6f 	bl	80097dc <__aeabi_d2iz>
 801e2fe:	4605      	mov	r5, r0
 801e300:	f7e2 f9dc 	bl	80006bc <__aeabi_i2d>
 801e304:	4642      	mov	r2, r8
 801e306:	464b      	mov	r3, r9
 801e308:	f7e2 fa42 	bl	8000790 <__aeabi_dmul>
 801e30c:	4602      	mov	r2, r0
 801e30e:	460b      	mov	r3, r1
 801e310:	4630      	mov	r0, r6
 801e312:	4639      	mov	r1, r7
 801e314:	f7e2 f884 	bl	8000420 <__aeabi_dsub>
 801e318:	9a04      	ldr	r2, [sp, #16]
 801e31a:	f105 0330 	add.w	r3, r5, #48	; 0x30
 801e31e:	7013      	strb	r3, [r2, #0]
 801e320:	9b06      	ldr	r3, [sp, #24]
 801e322:	2b01      	cmp	r3, #1
 801e324:	4606      	mov	r6, r0
 801e326:	460f      	mov	r7, r1
 801e328:	f102 0401 	add.w	r4, r2, #1
 801e32c:	d053      	beq.n	801e3d6 <_dtoa_r+0x55e>
 801e32e:	2200      	movs	r2, #0
 801e330:	4b0f      	ldr	r3, [pc, #60]	; (801e370 <_dtoa_r+0x4f8>)
 801e332:	f7e2 fa2d 	bl	8000790 <__aeabi_dmul>
 801e336:	2200      	movs	r2, #0
 801e338:	2300      	movs	r3, #0
 801e33a:	4606      	mov	r6, r0
 801e33c:	460f      	mov	r7, r1
 801e33e:	f7e2 fc8f 	bl	8000c60 <__aeabi_dcmpeq>
 801e342:	2800      	cmp	r0, #0
 801e344:	f040 81d0 	bne.w	801e6e8 <_dtoa_r+0x870>
 801e348:	f8cd a008 	str.w	sl, [sp, #8]
 801e34c:	f8dd a018 	ldr.w	sl, [sp, #24]
 801e350:	f8cd b018 	str.w	fp, [sp, #24]
 801e354:	f8dd b010 	ldr.w	fp, [sp, #16]
 801e358:	e017      	b.n	801e38a <_dtoa_r+0x512>
 801e35a:	bf00      	nop
 801e35c:	080276d0 	.word	0x080276d0
 801e360:	080276a8 	.word	0x080276a8
 801e364:	3ff00000 	.word	0x3ff00000
 801e368:	401c0000 	.word	0x401c0000
 801e36c:	3fe00000 	.word	0x3fe00000
 801e370:	40240000 	.word	0x40240000
 801e374:	f7e2 fa0c 	bl	8000790 <__aeabi_dmul>
 801e378:	2200      	movs	r2, #0
 801e37a:	2300      	movs	r3, #0
 801e37c:	4606      	mov	r6, r0
 801e37e:	460f      	mov	r7, r1
 801e380:	f7e2 fc6e 	bl	8000c60 <__aeabi_dcmpeq>
 801e384:	2800      	cmp	r0, #0
 801e386:	f040 8331 	bne.w	801e9ec <_dtoa_r+0xb74>
 801e38a:	4642      	mov	r2, r8
 801e38c:	464b      	mov	r3, r9
 801e38e:	4630      	mov	r0, r6
 801e390:	4639      	mov	r1, r7
 801e392:	f7e2 fb27 	bl	80009e4 <__aeabi_ddiv>
 801e396:	f7eb fa21 	bl	80097dc <__aeabi_d2iz>
 801e39a:	4605      	mov	r5, r0
 801e39c:	f7e2 f98e 	bl	80006bc <__aeabi_i2d>
 801e3a0:	4642      	mov	r2, r8
 801e3a2:	464b      	mov	r3, r9
 801e3a4:	f7e2 f9f4 	bl	8000790 <__aeabi_dmul>
 801e3a8:	4602      	mov	r2, r0
 801e3aa:	460b      	mov	r3, r1
 801e3ac:	4630      	mov	r0, r6
 801e3ae:	4639      	mov	r1, r7
 801e3b0:	f7e2 f836 	bl	8000420 <__aeabi_dsub>
 801e3b4:	f105 0c30 	add.w	ip, r5, #48	; 0x30
 801e3b8:	f804 cb01 	strb.w	ip, [r4], #1
 801e3bc:	eba4 0c0b 	sub.w	ip, r4, fp
 801e3c0:	45e2      	cmp	sl, ip
 801e3c2:	4606      	mov	r6, r0
 801e3c4:	460f      	mov	r7, r1
 801e3c6:	f04f 0200 	mov.w	r2, #0
 801e3ca:	4bb8      	ldr	r3, [pc, #736]	; (801e6ac <_dtoa_r+0x834>)
 801e3cc:	d1d2      	bne.n	801e374 <_dtoa_r+0x4fc>
 801e3ce:	f8dd a008 	ldr.w	sl, [sp, #8]
 801e3d2:	f8dd b018 	ldr.w	fp, [sp, #24]
 801e3d6:	4632      	mov	r2, r6
 801e3d8:	463b      	mov	r3, r7
 801e3da:	4630      	mov	r0, r6
 801e3dc:	4639      	mov	r1, r7
 801e3de:	f7e2 f821 	bl	8000424 <__adddf3>
 801e3e2:	4642      	mov	r2, r8
 801e3e4:	464b      	mov	r3, r9
 801e3e6:	4606      	mov	r6, r0
 801e3e8:	460f      	mov	r7, r1
 801e3ea:	f7e2 fc61 	bl	8000cb0 <__aeabi_dcmpgt>
 801e3ee:	b958      	cbnz	r0, 801e408 <_dtoa_r+0x590>
 801e3f0:	4642      	mov	r2, r8
 801e3f2:	464b      	mov	r3, r9
 801e3f4:	4630      	mov	r0, r6
 801e3f6:	4639      	mov	r1, r7
 801e3f8:	f7e2 fc32 	bl	8000c60 <__aeabi_dcmpeq>
 801e3fc:	2800      	cmp	r0, #0
 801e3fe:	f000 8173 	beq.w	801e6e8 <_dtoa_r+0x870>
 801e402:	07eb      	lsls	r3, r5, #31
 801e404:	f140 8170 	bpl.w	801e6e8 <_dtoa_r+0x870>
 801e408:	f814 5c01 	ldrb.w	r5, [r4, #-1]
 801e40c:	9a04      	ldr	r2, [sp, #16]
 801e40e:	e005      	b.n	801e41c <_dtoa_r+0x5a4>
 801e410:	429a      	cmp	r2, r3
 801e412:	f000 831e 	beq.w	801ea52 <_dtoa_r+0xbda>
 801e416:	f813 5c01 	ldrb.w	r5, [r3, #-1]
 801e41a:	461c      	mov	r4, r3
 801e41c:	2d39      	cmp	r5, #57	; 0x39
 801e41e:	f104 33ff 	add.w	r3, r4, #4294967295	; 0xffffffff
 801e422:	d0f5      	beq.n	801e410 <_dtoa_r+0x598>
 801e424:	3501      	adds	r5, #1
 801e426:	701d      	strb	r5, [r3, #0]
 801e428:	e15e      	b.n	801e6e8 <_dtoa_r+0x870>
 801e42a:	9a07      	ldr	r2, [sp, #28]
 801e42c:	b392      	cbz	r2, 801e494 <_dtoa_r+0x61c>
 801e42e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801e430:	2a01      	cmp	r2, #1
 801e432:	f340 8202 	ble.w	801e83a <_dtoa_r+0x9c2>
 801e436:	9b06      	ldr	r3, [sp, #24]
 801e438:	1e5f      	subs	r7, r3, #1
 801e43a:	9b08      	ldr	r3, [sp, #32]
 801e43c:	42bb      	cmp	r3, r7
 801e43e:	f2c0 82da 	blt.w	801e9f6 <_dtoa_r+0xb7e>
 801e442:	1bdf      	subs	r7, r3, r7
 801e444:	9b06      	ldr	r3, [sp, #24]
 801e446:	2b00      	cmp	r3, #0
 801e448:	f2c0 82f9 	blt.w	801ea3e <_dtoa_r+0xbc6>
 801e44c:	464c      	mov	r4, r9
 801e44e:	4498      	add	r8, r3
 801e450:	4499      	add	r9, r3
 801e452:	2101      	movs	r1, #1
 801e454:	4658      	mov	r0, fp
 801e456:	f000 fffb 	bl	801f450 <__i2b>
 801e45a:	4605      	mov	r5, r0
 801e45c:	e01d      	b.n	801e49a <_dtoa_r+0x622>
 801e45e:	2301      	movs	r3, #1
 801e460:	930a      	str	r3, [sp, #40]	; 0x28
 801e462:	e5ad      	b.n	801dfc0 <_dtoa_r+0x148>
 801e464:	9b05      	ldr	r3, [sp, #20]
 801e466:	eba9 0903 	sub.w	r9, r9, r3
 801e46a:	425b      	negs	r3, r3
 801e46c:	9308      	str	r3, [sp, #32]
 801e46e:	2300      	movs	r3, #0
 801e470:	9309      	str	r3, [sp, #36]	; 0x24
 801e472:	e5b7      	b.n	801dfe4 <_dtoa_r+0x16c>
 801e474:	f8dd 8014 	ldr.w	r8, [sp, #20]
 801e478:	4640      	mov	r0, r8
 801e47a:	f7e2 f91f 	bl	80006bc <__aeabi_i2d>
 801e47e:	4632      	mov	r2, r6
 801e480:	463b      	mov	r3, r7
 801e482:	f7e2 fbed 	bl	8000c60 <__aeabi_dcmpeq>
 801e486:	2800      	cmp	r0, #0
 801e488:	f47f ad86 	bne.w	801df98 <_dtoa_r+0x120>
 801e48c:	f108 33ff 	add.w	r3, r8, #4294967295	; 0xffffffff
 801e490:	9305      	str	r3, [sp, #20]
 801e492:	e581      	b.n	801df98 <_dtoa_r+0x120>
 801e494:	9f08      	ldr	r7, [sp, #32]
 801e496:	9d07      	ldr	r5, [sp, #28]
 801e498:	464c      	mov	r4, r9
 801e49a:	2c00      	cmp	r4, #0
 801e49c:	dd0b      	ble.n	801e4b6 <_dtoa_r+0x63e>
 801e49e:	f1b8 0f00 	cmp.w	r8, #0
 801e4a2:	dd08      	ble.n	801e4b6 <_dtoa_r+0x63e>
 801e4a4:	4544      	cmp	r4, r8
 801e4a6:	4623      	mov	r3, r4
 801e4a8:	bfa8      	it	ge
 801e4aa:	4643      	movge	r3, r8
 801e4ac:	eba9 0903 	sub.w	r9, r9, r3
 801e4b0:	1ae4      	subs	r4, r4, r3
 801e4b2:	eba8 0803 	sub.w	r8, r8, r3
 801e4b6:	9b08      	ldr	r3, [sp, #32]
 801e4b8:	b16b      	cbz	r3, 801e4d6 <_dtoa_r+0x65e>
 801e4ba:	9a07      	ldr	r2, [sp, #28]
 801e4bc:	2a00      	cmp	r2, #0
 801e4be:	f000 828e 	beq.w	801e9de <_dtoa_r+0xb66>
 801e4c2:	1bde      	subs	r6, r3, r7
 801e4c4:	2f00      	cmp	r7, #0
 801e4c6:	f040 818e 	bne.w	801e7e6 <_dtoa_r+0x96e>
 801e4ca:	4651      	mov	r1, sl
 801e4cc:	4632      	mov	r2, r6
 801e4ce:	4658      	mov	r0, fp
 801e4d0:	f001 f86e 	bl	801f5b0 <__pow5mult>
 801e4d4:	4682      	mov	sl, r0
 801e4d6:	2101      	movs	r1, #1
 801e4d8:	4658      	mov	r0, fp
 801e4da:	f000 ffb9 	bl	801f450 <__i2b>
 801e4de:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e4e0:	4606      	mov	r6, r0
 801e4e2:	2a00      	cmp	r2, #0
 801e4e4:	f040 8118 	bne.w	801e718 <_dtoa_r+0x8a0>
 801e4e8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e4ea:	2b01      	cmp	r3, #1
 801e4ec:	f340 8160 	ble.w	801e7b0 <_dtoa_r+0x938>
 801e4f0:	2001      	movs	r0, #1
 801e4f2:	4440      	add	r0, r8
 801e4f4:	f010 001f 	ands.w	r0, r0, #31
 801e4f8:	f000 8109 	beq.w	801e70e <_dtoa_r+0x896>
 801e4fc:	f1c0 0320 	rsb	r3, r0, #32
 801e500:	2b04      	cmp	r3, #4
 801e502:	f340 83a6 	ble.w	801ec52 <_dtoa_r+0xdda>
 801e506:	f1c0 001c 	rsb	r0, r0, #28
 801e50a:	4481      	add	r9, r0
 801e50c:	4404      	add	r4, r0
 801e50e:	4480      	add	r8, r0
 801e510:	f1b9 0f00 	cmp.w	r9, #0
 801e514:	dd05      	ble.n	801e522 <_dtoa_r+0x6aa>
 801e516:	4651      	mov	r1, sl
 801e518:	464a      	mov	r2, r9
 801e51a:	4658      	mov	r0, fp
 801e51c:	f001 f898 	bl	801f650 <__lshift>
 801e520:	4682      	mov	sl, r0
 801e522:	f1b8 0f00 	cmp.w	r8, #0
 801e526:	dd05      	ble.n	801e534 <_dtoa_r+0x6bc>
 801e528:	4631      	mov	r1, r6
 801e52a:	4642      	mov	r2, r8
 801e52c:	4658      	mov	r0, fp
 801e52e:	f001 f88f 	bl	801f650 <__lshift>
 801e532:	4606      	mov	r6, r0
 801e534:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e536:	2b00      	cmp	r3, #0
 801e538:	d173      	bne.n	801e622 <_dtoa_r+0x7aa>
 801e53a:	9b06      	ldr	r3, [sp, #24]
 801e53c:	2b00      	cmp	r3, #0
 801e53e:	f340 8209 	ble.w	801e954 <_dtoa_r+0xadc>
 801e542:	9b07      	ldr	r3, [sp, #28]
 801e544:	2b00      	cmp	r3, #0
 801e546:	f000 8085 	beq.w	801e654 <_dtoa_r+0x7dc>
 801e54a:	2c00      	cmp	r4, #0
 801e54c:	f300 8160 	bgt.w	801e810 <_dtoa_r+0x998>
 801e550:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e552:	2b00      	cmp	r3, #0
 801e554:	f040 81c8 	bne.w	801e8e8 <_dtoa_r+0xa70>
 801e558:	46a8      	mov	r8, r5
 801e55a:	9a02      	ldr	r2, [sp, #8]
 801e55c:	9f04      	ldr	r7, [sp, #16]
 801e55e:	f002 0201 	and.w	r2, r2, #1
 801e562:	9209      	str	r2, [sp, #36]	; 0x24
 801e564:	9a06      	ldr	r2, [sp, #24]
 801e566:	1e7b      	subs	r3, r7, #1
 801e568:	441a      	add	r2, r3
 801e56a:	9207      	str	r2, [sp, #28]
 801e56c:	4631      	mov	r1, r6
 801e56e:	4650      	mov	r0, sl
 801e570:	f7ff fbf0 	bl	801dd54 <quorem>
 801e574:	4629      	mov	r1, r5
 801e576:	4681      	mov	r9, r0
 801e578:	9008      	str	r0, [sp, #32]
 801e57a:	4650      	mov	r0, sl
 801e57c:	f001 f8be 	bl	801f6fc <__mcmp>
 801e580:	4631      	mov	r1, r6
 801e582:	9002      	str	r0, [sp, #8]
 801e584:	4642      	mov	r2, r8
 801e586:	4658      	mov	r0, fp
 801e588:	f001 f8d4 	bl	801f734 <__mdiff>
 801e58c:	68c3      	ldr	r3, [r0, #12]
 801e58e:	4604      	mov	r4, r0
 801e590:	f109 0930 	add.w	r9, r9, #48	; 0x30
 801e594:	4601      	mov	r1, r0
 801e596:	2b00      	cmp	r3, #0
 801e598:	f040 81d7 	bne.w	801e94a <_dtoa_r+0xad2>
 801e59c:	4650      	mov	r0, sl
 801e59e:	f001 f8ad 	bl	801f6fc <__mcmp>
 801e5a2:	4621      	mov	r1, r4
 801e5a4:	9006      	str	r0, [sp, #24]
 801e5a6:	4658      	mov	r0, fp
 801e5a8:	f000 feb8 	bl	801f31c <_Bfree>
 801e5ac:	9b06      	ldr	r3, [sp, #24]
 801e5ae:	b933      	cbnz	r3, 801e5be <_dtoa_r+0x746>
 801e5b0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801e5b2:	b922      	cbnz	r2, 801e5be <_dtoa_r+0x746>
 801e5b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e5b6:	2b00      	cmp	r3, #0
 801e5b8:	f000 831b 	beq.w	801ebf2 <_dtoa_r+0xd7a>
 801e5bc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e5be:	9a02      	ldr	r2, [sp, #8]
 801e5c0:	2a00      	cmp	r2, #0
 801e5c2:	f2c0 8220 	blt.w	801ea06 <_dtoa_r+0xb8e>
 801e5c6:	d105      	bne.n	801e5d4 <_dtoa_r+0x75c>
 801e5c8:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801e5ca:	b91a      	cbnz	r2, 801e5d4 <_dtoa_r+0x75c>
 801e5cc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e5ce:	2a00      	cmp	r2, #0
 801e5d0:	f000 8219 	beq.w	801ea06 <_dtoa_r+0xb8e>
 801e5d4:	2b00      	cmp	r3, #0
 801e5d6:	f107 0401 	add.w	r4, r7, #1
 801e5da:	f300 8225 	bgt.w	801ea28 <_dtoa_r+0xbb0>
 801e5de:	9b07      	ldr	r3, [sp, #28]
 801e5e0:	f887 9000 	strb.w	r9, [r7]
 801e5e4:	42bb      	cmp	r3, r7
 801e5e6:	f000 822e 	beq.w	801ea46 <_dtoa_r+0xbce>
 801e5ea:	4651      	mov	r1, sl
 801e5ec:	2300      	movs	r3, #0
 801e5ee:	220a      	movs	r2, #10
 801e5f0:	4658      	mov	r0, fp
 801e5f2:	f000 fe9d 	bl	801f330 <__multadd>
 801e5f6:	4545      	cmp	r5, r8
 801e5f8:	4682      	mov	sl, r0
 801e5fa:	4629      	mov	r1, r5
 801e5fc:	f04f 0300 	mov.w	r3, #0
 801e600:	f04f 020a 	mov.w	r2, #10
 801e604:	4658      	mov	r0, fp
 801e606:	f000 819a 	beq.w	801e93e <_dtoa_r+0xac6>
 801e60a:	f000 fe91 	bl	801f330 <__multadd>
 801e60e:	4641      	mov	r1, r8
 801e610:	4605      	mov	r5, r0
 801e612:	2300      	movs	r3, #0
 801e614:	220a      	movs	r2, #10
 801e616:	4658      	mov	r0, fp
 801e618:	f000 fe8a 	bl	801f330 <__multadd>
 801e61c:	4627      	mov	r7, r4
 801e61e:	4680      	mov	r8, r0
 801e620:	e7a4      	b.n	801e56c <_dtoa_r+0x6f4>
 801e622:	4631      	mov	r1, r6
 801e624:	4650      	mov	r0, sl
 801e626:	f001 f869 	bl	801f6fc <__mcmp>
 801e62a:	2800      	cmp	r0, #0
 801e62c:	da85      	bge.n	801e53a <_dtoa_r+0x6c2>
 801e62e:	9f05      	ldr	r7, [sp, #20]
 801e630:	4651      	mov	r1, sl
 801e632:	2300      	movs	r3, #0
 801e634:	220a      	movs	r2, #10
 801e636:	4658      	mov	r0, fp
 801e638:	3f01      	subs	r7, #1
 801e63a:	9705      	str	r7, [sp, #20]
 801e63c:	f000 fe78 	bl	801f330 <__multadd>
 801e640:	9b07      	ldr	r3, [sp, #28]
 801e642:	4682      	mov	sl, r0
 801e644:	2b00      	cmp	r3, #0
 801e646:	f040 82e4 	bne.w	801ec12 <_dtoa_r+0xd9a>
 801e64a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e64c:	2b00      	cmp	r3, #0
 801e64e:	f340 82ec 	ble.w	801ec2a <_dtoa_r+0xdb2>
 801e652:	9306      	str	r3, [sp, #24]
 801e654:	f8dd 8010 	ldr.w	r8, [sp, #16]
 801e658:	9f06      	ldr	r7, [sp, #24]
 801e65a:	4644      	mov	r4, r8
 801e65c:	e002      	b.n	801e664 <_dtoa_r+0x7ec>
 801e65e:	f000 fe67 	bl	801f330 <__multadd>
 801e662:	4682      	mov	sl, r0
 801e664:	4631      	mov	r1, r6
 801e666:	4650      	mov	r0, sl
 801e668:	f7ff fb74 	bl	801dd54 <quorem>
 801e66c:	f100 0930 	add.w	r9, r0, #48	; 0x30
 801e670:	f804 9b01 	strb.w	r9, [r4], #1
 801e674:	eba4 0308 	sub.w	r3, r4, r8
 801e678:	429f      	cmp	r7, r3
 801e67a:	f04f 020a 	mov.w	r2, #10
 801e67e:	f04f 0300 	mov.w	r3, #0
 801e682:	4651      	mov	r1, sl
 801e684:	4658      	mov	r0, fp
 801e686:	dcea      	bgt.n	801e65e <_dtoa_r+0x7e6>
 801e688:	2300      	movs	r3, #0
 801e68a:	9302      	str	r3, [sp, #8]
 801e68c:	4651      	mov	r1, sl
 801e68e:	2201      	movs	r2, #1
 801e690:	4658      	mov	r0, fp
 801e692:	f000 ffdd 	bl	801f650 <__lshift>
 801e696:	4631      	mov	r1, r6
 801e698:	4682      	mov	sl, r0
 801e69a:	f001 f82f 	bl	801f6fc <__mcmp>
 801e69e:	2800      	cmp	r0, #0
 801e6a0:	f814 2c01 	ldrb.w	r2, [r4, #-1]
 801e6a4:	f340 80bb 	ble.w	801e81e <_dtoa_r+0x9a6>
 801e6a8:	9904      	ldr	r1, [sp, #16]
 801e6aa:	e007      	b.n	801e6bc <_dtoa_r+0x844>
 801e6ac:	40240000 	.word	0x40240000
 801e6b0:	4299      	cmp	r1, r3
 801e6b2:	f000 815c 	beq.w	801e96e <_dtoa_r+0xaf6>
 801e6b6:	f813 2c01 	ldrb.w	r2, [r3, #-1]
 801e6ba:	461c      	mov	r4, r3
 801e6bc:	2a39      	cmp	r2, #57	; 0x39
 801e6be:	f104 33ff 	add.w	r3, r4, #4294967295	; 0xffffffff
 801e6c2:	d0f5      	beq.n	801e6b0 <_dtoa_r+0x838>
 801e6c4:	3201      	adds	r2, #1
 801e6c6:	701a      	strb	r2, [r3, #0]
 801e6c8:	4631      	mov	r1, r6
 801e6ca:	4658      	mov	r0, fp
 801e6cc:	f000 fe26 	bl	801f31c <_Bfree>
 801e6d0:	b155      	cbz	r5, 801e6e8 <_dtoa_r+0x870>
 801e6d2:	9902      	ldr	r1, [sp, #8]
 801e6d4:	b121      	cbz	r1, 801e6e0 <_dtoa_r+0x868>
 801e6d6:	42a9      	cmp	r1, r5
 801e6d8:	d002      	beq.n	801e6e0 <_dtoa_r+0x868>
 801e6da:	4658      	mov	r0, fp
 801e6dc:	f000 fe1e 	bl	801f31c <_Bfree>
 801e6e0:	4629      	mov	r1, r5
 801e6e2:	4658      	mov	r0, fp
 801e6e4:	f000 fe1a 	bl	801f31c <_Bfree>
 801e6e8:	4651      	mov	r1, sl
 801e6ea:	4658      	mov	r0, fp
 801e6ec:	f000 fe16 	bl	801f31c <_Bfree>
 801e6f0:	2200      	movs	r2, #0
 801e6f2:	9b05      	ldr	r3, [sp, #20]
 801e6f4:	7022      	strb	r2, [r4, #0]
 801e6f6:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801e6f8:	3301      	adds	r3, #1
 801e6fa:	6013      	str	r3, [r2, #0]
 801e6fc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e6fe:	2b00      	cmp	r3, #0
 801e700:	f43f abf2 	beq.w	801dee8 <_dtoa_r+0x70>
 801e704:	9804      	ldr	r0, [sp, #16]
 801e706:	601c      	str	r4, [r3, #0]
 801e708:	b017      	add	sp, #92	; 0x5c
 801e70a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e70e:	201c      	movs	r0, #28
 801e710:	4481      	add	r9, r0
 801e712:	4404      	add	r4, r0
 801e714:	4480      	add	r8, r0
 801e716:	e6fb      	b.n	801e510 <_dtoa_r+0x698>
 801e718:	4601      	mov	r1, r0
 801e71a:	4658      	mov	r0, fp
 801e71c:	f000 ff48 	bl	801f5b0 <__pow5mult>
 801e720:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e722:	2b01      	cmp	r3, #1
 801e724:	4606      	mov	r6, r0
 801e726:	f340 80f3 	ble.w	801e910 <_dtoa_r+0xa98>
 801e72a:	2300      	movs	r3, #0
 801e72c:	9309      	str	r3, [sp, #36]	; 0x24
 801e72e:	6933      	ldr	r3, [r6, #16]
 801e730:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 801e734:	6918      	ldr	r0, [r3, #16]
 801e736:	f000 fe3b 	bl	801f3b0 <__hi0bits>
 801e73a:	f1c0 0020 	rsb	r0, r0, #32
 801e73e:	e6d8      	b.n	801e4f2 <_dtoa_r+0x67a>
 801e740:	900a      	str	r0, [sp, #40]	; 0x28
 801e742:	e43d      	b.n	801dfc0 <_dtoa_r+0x148>
 801e744:	2501      	movs	r5, #1
 801e746:	e456      	b.n	801dff6 <_dtoa_r+0x17e>
 801e748:	f1c3 0620 	rsb	r6, r3, #32
 801e74c:	9b02      	ldr	r3, [sp, #8]
 801e74e:	fa03 f006 	lsl.w	r0, r3, r6
 801e752:	f7ff bbeb 	b.w	801df2c <_dtoa_r+0xb4>
 801e756:	2300      	movs	r3, #0
 801e758:	9307      	str	r3, [sp, #28]
 801e75a:	9b05      	ldr	r3, [sp, #20]
 801e75c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801e75e:	4413      	add	r3, r2
 801e760:	930b      	str	r3, [sp, #44]	; 0x2c
 801e762:	3301      	adds	r3, #1
 801e764:	2b01      	cmp	r3, #1
 801e766:	461e      	mov	r6, r3
 801e768:	9306      	str	r3, [sp, #24]
 801e76a:	bfb8      	it	lt
 801e76c:	2601      	movlt	r6, #1
 801e76e:	2100      	movs	r1, #0
 801e770:	2e17      	cmp	r6, #23
 801e772:	f8cb 1044 	str.w	r1, [fp, #68]	; 0x44
 801e776:	9c06      	ldr	r4, [sp, #24]
 801e778:	f77f aca4 	ble.w	801e0c4 <_dtoa_r+0x24c>
 801e77c:	2201      	movs	r2, #1
 801e77e:	2304      	movs	r3, #4
 801e780:	005b      	lsls	r3, r3, #1
 801e782:	f103 0014 	add.w	r0, r3, #20
 801e786:	42b0      	cmp	r0, r6
 801e788:	4611      	mov	r1, r2
 801e78a:	f102 0201 	add.w	r2, r2, #1
 801e78e:	d9f7      	bls.n	801e780 <_dtoa_r+0x908>
 801e790:	f8cb 1044 	str.w	r1, [fp, #68]	; 0x44
 801e794:	e496      	b.n	801e0c4 <_dtoa_r+0x24c>
 801e796:	2300      	movs	r3, #0
 801e798:	9307      	str	r3, [sp, #28]
 801e79a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801e79c:	2b00      	cmp	r3, #0
 801e79e:	f340 80ed 	ble.w	801e97c <_dtoa_r+0xb04>
 801e7a2:	930b      	str	r3, [sp, #44]	; 0x2c
 801e7a4:	9306      	str	r3, [sp, #24]
 801e7a6:	461e      	mov	r6, r3
 801e7a8:	e7e1      	b.n	801e76e <_dtoa_r+0x8f6>
 801e7aa:	2301      	movs	r3, #1
 801e7ac:	9307      	str	r3, [sp, #28]
 801e7ae:	e7f4      	b.n	801e79a <_dtoa_r+0x922>
 801e7b0:	9b02      	ldr	r3, [sp, #8]
 801e7b2:	2b00      	cmp	r3, #0
 801e7b4:	f47f ae9c 	bne.w	801e4f0 <_dtoa_r+0x678>
 801e7b8:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 801e7bc:	f3c2 0313 	ubfx	r3, r2, #0, #20
 801e7c0:	2b00      	cmp	r3, #0
 801e7c2:	f040 8199 	bne.w	801eaf8 <_dtoa_r+0xc80>
 801e7c6:	f022 4300 	bic.w	r3, r2, #2147483648	; 0x80000000
 801e7ca:	0d1b      	lsrs	r3, r3, #20
 801e7cc:	051b      	lsls	r3, r3, #20
 801e7ce:	b123      	cbz	r3, 801e7da <_dtoa_r+0x962>
 801e7d0:	f109 0901 	add.w	r9, r9, #1
 801e7d4:	f108 0801 	add.w	r8, r8, #1
 801e7d8:	2301      	movs	r3, #1
 801e7da:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e7dc:	9309      	str	r3, [sp, #36]	; 0x24
 801e7de:	2a00      	cmp	r2, #0
 801e7e0:	f43f ae86 	beq.w	801e4f0 <_dtoa_r+0x678>
 801e7e4:	e7a3      	b.n	801e72e <_dtoa_r+0x8b6>
 801e7e6:	463a      	mov	r2, r7
 801e7e8:	4629      	mov	r1, r5
 801e7ea:	4658      	mov	r0, fp
 801e7ec:	f000 fee0 	bl	801f5b0 <__pow5mult>
 801e7f0:	4652      	mov	r2, sl
 801e7f2:	4601      	mov	r1, r0
 801e7f4:	4605      	mov	r5, r0
 801e7f6:	4658      	mov	r0, fp
 801e7f8:	f000 fe34 	bl	801f464 <__multiply>
 801e7fc:	4651      	mov	r1, sl
 801e7fe:	4607      	mov	r7, r0
 801e800:	4658      	mov	r0, fp
 801e802:	f000 fd8b 	bl	801f31c <_Bfree>
 801e806:	46ba      	mov	sl, r7
 801e808:	2e00      	cmp	r6, #0
 801e80a:	f43f ae64 	beq.w	801e4d6 <_dtoa_r+0x65e>
 801e80e:	e65c      	b.n	801e4ca <_dtoa_r+0x652>
 801e810:	4629      	mov	r1, r5
 801e812:	4622      	mov	r2, r4
 801e814:	4658      	mov	r0, fp
 801e816:	f000 ff1b 	bl	801f650 <__lshift>
 801e81a:	4605      	mov	r5, r0
 801e81c:	e698      	b.n	801e550 <_dtoa_r+0x6d8>
 801e81e:	d107      	bne.n	801e830 <_dtoa_r+0x9b8>
 801e820:	f019 0f01 	tst.w	r9, #1
 801e824:	f47f af40 	bne.w	801e6a8 <_dtoa_r+0x830>
 801e828:	e002      	b.n	801e830 <_dtoa_r+0x9b8>
 801e82a:	f814 2c02 	ldrb.w	r2, [r4, #-2]
 801e82e:	461c      	mov	r4, r3
 801e830:	2a30      	cmp	r2, #48	; 0x30
 801e832:	f104 33ff 	add.w	r3, r4, #4294967295	; 0xffffffff
 801e836:	d0f8      	beq.n	801e82a <_dtoa_r+0x9b2>
 801e838:	e746      	b.n	801e6c8 <_dtoa_r+0x850>
 801e83a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e83c:	2a00      	cmp	r2, #0
 801e83e:	f000 8153 	beq.w	801eae8 <_dtoa_r+0xc70>
 801e842:	f203 4333 	addw	r3, r3, #1075	; 0x433
 801e846:	464c      	mov	r4, r9
 801e848:	4498      	add	r8, r3
 801e84a:	4499      	add	r9, r3
 801e84c:	9f08      	ldr	r7, [sp, #32]
 801e84e:	e600      	b.n	801e452 <_dtoa_r+0x5da>
 801e850:	9b06      	ldr	r3, [sp, #24]
 801e852:	2b00      	cmp	r3, #0
 801e854:	f73f ad49 	bgt.w	801e2ea <_dtoa_r+0x472>
 801e858:	f040 80bb 	bne.w	801e9d2 <_dtoa_r+0xb5a>
 801e85c:	2200      	movs	r2, #0
 801e85e:	4bb2      	ldr	r3, [pc, #712]	; (801eb28 <_dtoa_r+0xcb0>)
 801e860:	4640      	mov	r0, r8
 801e862:	4649      	mov	r1, r9
 801e864:	f7e1 ff94 	bl	8000790 <__aeabi_dmul>
 801e868:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801e86c:	f7e2 fa16 	bl	8000c9c <__aeabi_dcmpge>
 801e870:	9e06      	ldr	r6, [sp, #24]
 801e872:	4635      	mov	r5, r6
 801e874:	2800      	cmp	r0, #0
 801e876:	d175      	bne.n	801e964 <_dtoa_r+0xaec>
 801e878:	9a05      	ldr	r2, [sp, #20]
 801e87a:	3201      	adds	r2, #1
 801e87c:	9205      	str	r2, [sp, #20]
 801e87e:	9a04      	ldr	r2, [sp, #16]
 801e880:	2331      	movs	r3, #49	; 0x31
 801e882:	7013      	strb	r3, [r2, #0]
 801e884:	1c54      	adds	r4, r2, #1
 801e886:	4631      	mov	r1, r6
 801e888:	4658      	mov	r0, fp
 801e88a:	f000 fd47 	bl	801f31c <_Bfree>
 801e88e:	2d00      	cmp	r5, #0
 801e890:	f47f af26 	bne.w	801e6e0 <_dtoa_r+0x868>
 801e894:	e728      	b.n	801e6e8 <_dtoa_r+0x870>
 801e896:	f000 813f 	beq.w	801eb18 <_dtoa_r+0xca0>
 801e89a:	9b05      	ldr	r3, [sp, #20]
 801e89c:	425c      	negs	r4, r3
 801e89e:	4ba3      	ldr	r3, [pc, #652]	; (801eb2c <_dtoa_r+0xcb4>)
 801e8a0:	f004 020f 	and.w	r2, r4, #15
 801e8a4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801e8a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 801e8ac:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 801e8b0:	f7e1 ff6e 	bl	8000790 <__aeabi_dmul>
 801e8b4:	1124      	asrs	r4, r4, #4
 801e8b6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801e8ba:	f000 81bb 	beq.w	801ec34 <_dtoa_r+0xdbc>
 801e8be:	4d9c      	ldr	r5, [pc, #624]	; (801eb30 <_dtoa_r+0xcb8>)
 801e8c0:	2300      	movs	r3, #0
 801e8c2:	2602      	movs	r6, #2
 801e8c4:	07e2      	lsls	r2, r4, #31
 801e8c6:	d505      	bpl.n	801e8d4 <_dtoa_r+0xa5c>
 801e8c8:	e9d5 2300 	ldrd	r2, r3, [r5]
 801e8cc:	f7e1 ff60 	bl	8000790 <__aeabi_dmul>
 801e8d0:	3601      	adds	r6, #1
 801e8d2:	2301      	movs	r3, #1
 801e8d4:	1064      	asrs	r4, r4, #1
 801e8d6:	f105 0508 	add.w	r5, r5, #8
 801e8da:	d1f3      	bne.n	801e8c4 <_dtoa_r+0xa4c>
 801e8dc:	2b00      	cmp	r3, #0
 801e8de:	f43f ac39 	beq.w	801e154 <_dtoa_r+0x2dc>
 801e8e2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801e8e6:	e435      	b.n	801e154 <_dtoa_r+0x2dc>
 801e8e8:	6869      	ldr	r1, [r5, #4]
 801e8ea:	4658      	mov	r0, fp
 801e8ec:	f000 fcf0 	bl	801f2d0 <_Balloc>
 801e8f0:	692b      	ldr	r3, [r5, #16]
 801e8f2:	3302      	adds	r3, #2
 801e8f4:	009a      	lsls	r2, r3, #2
 801e8f6:	4604      	mov	r4, r0
 801e8f8:	f105 010c 	add.w	r1, r5, #12
 801e8fc:	300c      	adds	r0, #12
 801e8fe:	f7ea fcd7 	bl	80092b0 <memcpy>
 801e902:	4621      	mov	r1, r4
 801e904:	2201      	movs	r2, #1
 801e906:	4658      	mov	r0, fp
 801e908:	f000 fea2 	bl	801f650 <__lshift>
 801e90c:	4680      	mov	r8, r0
 801e90e:	e624      	b.n	801e55a <_dtoa_r+0x6e2>
 801e910:	9b02      	ldr	r3, [sp, #8]
 801e912:	2b00      	cmp	r3, #0
 801e914:	f43f af50 	beq.w	801e7b8 <_dtoa_r+0x940>
 801e918:	e707      	b.n	801e72a <_dtoa_r+0x8b2>
 801e91a:	2400      	movs	r4, #0
 801e91c:	f8cb 4044 	str.w	r4, [fp, #68]	; 0x44
 801e920:	4621      	mov	r1, r4
 801e922:	4658      	mov	r0, fp
 801e924:	f000 fcd4 	bl	801f2d0 <_Balloc>
 801e928:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801e92c:	930b      	str	r3, [sp, #44]	; 0x2c
 801e92e:	9306      	str	r3, [sp, #24]
 801e930:	2301      	movs	r3, #1
 801e932:	9004      	str	r0, [sp, #16]
 801e934:	9421      	str	r4, [sp, #132]	; 0x84
 801e936:	f8cb 0040 	str.w	r0, [fp, #64]	; 0x40
 801e93a:	9307      	str	r3, [sp, #28]
 801e93c:	e4c4      	b.n	801e2c8 <_dtoa_r+0x450>
 801e93e:	f000 fcf7 	bl	801f330 <__multadd>
 801e942:	4627      	mov	r7, r4
 801e944:	4605      	mov	r5, r0
 801e946:	4680      	mov	r8, r0
 801e948:	e610      	b.n	801e56c <_dtoa_r+0x6f4>
 801e94a:	4658      	mov	r0, fp
 801e94c:	f000 fce6 	bl	801f31c <_Bfree>
 801e950:	2301      	movs	r3, #1
 801e952:	e634      	b.n	801e5be <_dtoa_r+0x746>
 801e954:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e956:	2b02      	cmp	r3, #2
 801e958:	f77f adf3 	ble.w	801e542 <_dtoa_r+0x6ca>
 801e95c:	9b06      	ldr	r3, [sp, #24]
 801e95e:	2b00      	cmp	r3, #0
 801e960:	f000 80cc 	beq.w	801eafc <_dtoa_r+0xc84>
 801e964:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801e966:	9c04      	ldr	r4, [sp, #16]
 801e968:	43db      	mvns	r3, r3
 801e96a:	9305      	str	r3, [sp, #20]
 801e96c:	e78b      	b.n	801e886 <_dtoa_r+0xa0e>
 801e96e:	9a05      	ldr	r2, [sp, #20]
 801e970:	3201      	adds	r2, #1
 801e972:	9205      	str	r2, [sp, #20]
 801e974:	9a04      	ldr	r2, [sp, #16]
 801e976:	2331      	movs	r3, #49	; 0x31
 801e978:	7013      	strb	r3, [r2, #0]
 801e97a:	e6a5      	b.n	801e6c8 <_dtoa_r+0x850>
 801e97c:	2401      	movs	r4, #1
 801e97e:	9421      	str	r4, [sp, #132]	; 0x84
 801e980:	9406      	str	r4, [sp, #24]
 801e982:	f7ff bb9b 	b.w	801e0bc <_dtoa_r+0x244>
 801e986:	4630      	mov	r0, r6
 801e988:	f7e1 fe98 	bl	80006bc <__aeabi_i2d>
 801e98c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801e990:	f7e1 fefe 	bl	8000790 <__aeabi_dmul>
 801e994:	2200      	movs	r2, #0
 801e996:	4b67      	ldr	r3, [pc, #412]	; (801eb34 <_dtoa_r+0xcbc>)
 801e998:	f7e1 fd44 	bl	8000424 <__adddf3>
 801e99c:	4606      	mov	r6, r0
 801e99e:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
 801e9a2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801e9a6:	2200      	movs	r2, #0
 801e9a8:	4b5f      	ldr	r3, [pc, #380]	; (801eb28 <_dtoa_r+0xcb0>)
 801e9aa:	f7e1 fd39 	bl	8000420 <__aeabi_dsub>
 801e9ae:	4632      	mov	r2, r6
 801e9b0:	463b      	mov	r3, r7
 801e9b2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801e9b6:	f7e2 f97b 	bl	8000cb0 <__aeabi_dcmpgt>
 801e9ba:	2800      	cmp	r0, #0
 801e9bc:	d146      	bne.n	801ea4c <_dtoa_r+0xbd4>
 801e9be:	4632      	mov	r2, r6
 801e9c0:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
 801e9c4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801e9c8:	f7e2 f954 	bl	8000c74 <__aeabi_dcmplt>
 801e9cc:	2800      	cmp	r0, #0
 801e9ce:	f43f ac77 	beq.w	801e2c0 <_dtoa_r+0x448>
 801e9d2:	2600      	movs	r6, #0
 801e9d4:	4635      	mov	r5, r6
 801e9d6:	e7c5      	b.n	801e964 <_dtoa_r+0xaec>
 801e9d8:	2301      	movs	r3, #1
 801e9da:	9307      	str	r3, [sp, #28]
 801e9dc:	e6bd      	b.n	801e75a <_dtoa_r+0x8e2>
 801e9de:	4651      	mov	r1, sl
 801e9e0:	9a08      	ldr	r2, [sp, #32]
 801e9e2:	4658      	mov	r0, fp
 801e9e4:	f000 fde4 	bl	801f5b0 <__pow5mult>
 801e9e8:	4682      	mov	sl, r0
 801e9ea:	e574      	b.n	801e4d6 <_dtoa_r+0x65e>
 801e9ec:	f8dd a008 	ldr.w	sl, [sp, #8]
 801e9f0:	f8dd b018 	ldr.w	fp, [sp, #24]
 801e9f4:	e678      	b.n	801e6e8 <_dtoa_r+0x870>
 801e9f6:	9b08      	ldr	r3, [sp, #32]
 801e9f8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e9fa:	1afb      	subs	r3, r7, r3
 801e9fc:	441a      	add	r2, r3
 801e9fe:	e9cd 7208 	strd	r7, r2, [sp, #32]
 801ea02:	2700      	movs	r7, #0
 801ea04:	e51e      	b.n	801e444 <_dtoa_r+0x5cc>
 801ea06:	2b00      	cmp	r3, #0
 801ea08:	f107 0401 	add.w	r4, r7, #1
 801ea0c:	f300 80bc 	bgt.w	801eb88 <_dtoa_r+0xd10>
 801ea10:	9502      	str	r5, [sp, #8]
 801ea12:	f887 9000 	strb.w	r9, [r7]
 801ea16:	4645      	mov	r5, r8
 801ea18:	e656      	b.n	801e6c8 <_dtoa_r+0x850>
 801ea1a:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 801ea1e:	2602      	movs	r6, #2
 801ea20:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 801ea24:	f7ff bb7d 	b.w	801e122 <_dtoa_r+0x2aa>
 801ea28:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 801ea2c:	f000 80be 	beq.w	801ebac <_dtoa_r+0xd34>
 801ea30:	f109 0901 	add.w	r9, r9, #1
 801ea34:	9502      	str	r5, [sp, #8]
 801ea36:	f887 9000 	strb.w	r9, [r7]
 801ea3a:	4645      	mov	r5, r8
 801ea3c:	e644      	b.n	801e6c8 <_dtoa_r+0x850>
 801ea3e:	9b06      	ldr	r3, [sp, #24]
 801ea40:	eba9 0403 	sub.w	r4, r9, r3
 801ea44:	e505      	b.n	801e452 <_dtoa_r+0x5da>
 801ea46:	9502      	str	r5, [sp, #8]
 801ea48:	4645      	mov	r5, r8
 801ea4a:	e61f      	b.n	801e68c <_dtoa_r+0x814>
 801ea4c:	2600      	movs	r6, #0
 801ea4e:	4635      	mov	r5, r6
 801ea50:	e712      	b.n	801e878 <_dtoa_r+0xa00>
 801ea52:	9a04      	ldr	r2, [sp, #16]
 801ea54:	2330      	movs	r3, #48	; 0x30
 801ea56:	7013      	strb	r3, [r2, #0]
 801ea58:	9b05      	ldr	r3, [sp, #20]
 801ea5a:	f814 5c01 	ldrb.w	r5, [r4, #-1]
 801ea5e:	3301      	adds	r3, #1
 801ea60:	9305      	str	r3, [sp, #20]
 801ea62:	4613      	mov	r3, r2
 801ea64:	e4de      	b.n	801e424 <_dtoa_r+0x5ac>
 801ea66:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801ea6a:	f7e1 fe91 	bl	8000790 <__aeabi_dmul>
 801ea6e:	9b04      	ldr	r3, [sp, #16]
 801ea70:	701d      	strb	r5, [r3, #0]
 801ea72:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ea74:	2b01      	cmp	r3, #1
 801ea76:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801ea7a:	d023      	beq.n	801eac4 <_dtoa_r+0xc4c>
 801ea7c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ea7e:	9a04      	ldr	r2, [sp, #16]
 801ea80:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 801ea84:	4413      	add	r3, r2
 801ea86:	46c1      	mov	r9, r8
 801ea88:	4698      	mov	r8, r3
 801ea8a:	2200      	movs	r2, #0
 801ea8c:	4b2a      	ldr	r3, [pc, #168]	; (801eb38 <_dtoa_r+0xcc0>)
 801ea8e:	4630      	mov	r0, r6
 801ea90:	4639      	mov	r1, r7
 801ea92:	f7e1 fe7d 	bl	8000790 <__aeabi_dmul>
 801ea96:	460f      	mov	r7, r1
 801ea98:	4606      	mov	r6, r0
 801ea9a:	f7ea fe9f 	bl	80097dc <__aeabi_d2iz>
 801ea9e:	4605      	mov	r5, r0
 801eaa0:	f7e1 fe0c 	bl	80006bc <__aeabi_i2d>
 801eaa4:	3530      	adds	r5, #48	; 0x30
 801eaa6:	4602      	mov	r2, r0
 801eaa8:	460b      	mov	r3, r1
 801eaaa:	4630      	mov	r0, r6
 801eaac:	4639      	mov	r1, r7
 801eaae:	f7e1 fcb7 	bl	8000420 <__aeabi_dsub>
 801eab2:	f804 5b01 	strb.w	r5, [r4], #1
 801eab6:	4544      	cmp	r4, r8
 801eab8:	4606      	mov	r6, r0
 801eaba:	460f      	mov	r7, r1
 801eabc:	d1e5      	bne.n	801ea8a <_dtoa_r+0xc12>
 801eabe:	46c8      	mov	r8, r9
 801eac0:	f8dd 9038 	ldr.w	r9, [sp, #56]	; 0x38
 801eac4:	4b1d      	ldr	r3, [pc, #116]	; (801eb3c <_dtoa_r+0xcc4>)
 801eac6:	2200      	movs	r2, #0
 801eac8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801eacc:	f7e1 fcaa 	bl	8000424 <__adddf3>
 801ead0:	4632      	mov	r2, r6
 801ead2:	463b      	mov	r3, r7
 801ead4:	f7e2 f8ce 	bl	8000c74 <__aeabi_dcmplt>
 801ead8:	2800      	cmp	r0, #0
 801eada:	d06d      	beq.n	801ebb8 <_dtoa_r+0xd40>
 801eadc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801eade:	9305      	str	r3, [sp, #20]
 801eae0:	f814 5c01 	ldrb.w	r5, [r4, #-1]
 801eae4:	9a04      	ldr	r2, [sp, #16]
 801eae6:	e499      	b.n	801e41c <_dtoa_r+0x5a4>
 801eae8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801eaea:	9f08      	ldr	r7, [sp, #32]
 801eaec:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 801eaf0:	464c      	mov	r4, r9
 801eaf2:	4498      	add	r8, r3
 801eaf4:	4499      	add	r9, r3
 801eaf6:	e4ac      	b.n	801e452 <_dtoa_r+0x5da>
 801eaf8:	2300      	movs	r3, #0
 801eafa:	e66e      	b.n	801e7da <_dtoa_r+0x962>
 801eafc:	4631      	mov	r1, r6
 801eafe:	2205      	movs	r2, #5
 801eb00:	4658      	mov	r0, fp
 801eb02:	f000 fc15 	bl	801f330 <__multadd>
 801eb06:	4601      	mov	r1, r0
 801eb08:	4606      	mov	r6, r0
 801eb0a:	4650      	mov	r0, sl
 801eb0c:	f000 fdf6 	bl	801f6fc <__mcmp>
 801eb10:	2800      	cmp	r0, #0
 801eb12:	f73f aeb1 	bgt.w	801e878 <_dtoa_r+0xa00>
 801eb16:	e725      	b.n	801e964 <_dtoa_r+0xaec>
 801eb18:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
 801eb1c:	2602      	movs	r6, #2
 801eb1e:	e9cd 3402 	strd	r3, r4, [sp, #8]
 801eb22:	f7ff bb17 	b.w	801e154 <_dtoa_r+0x2dc>
 801eb26:	bf00      	nop
 801eb28:	40140000 	.word	0x40140000
 801eb2c:	080276d0 	.word	0x080276d0
 801eb30:	080276a8 	.word	0x080276a8
 801eb34:	401c0000 	.word	0x401c0000
 801eb38:	40240000 	.word	0x40240000
 801eb3c:	3fe00000 	.word	0x3fe00000
 801eb40:	9b06      	ldr	r3, [sp, #24]
 801eb42:	2b00      	cmp	r3, #0
 801eb44:	f43f af1f 	beq.w	801e986 <_dtoa_r+0xb0e>
 801eb48:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801eb4a:	2c00      	cmp	r4, #0
 801eb4c:	f77f abb8 	ble.w	801e2c0 <_dtoa_r+0x448>
 801eb50:	2200      	movs	r2, #0
 801eb52:	4b42      	ldr	r3, [pc, #264]	; (801ec5c <_dtoa_r+0xde4>)
 801eb54:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801eb58:	f7e1 fe1a 	bl	8000790 <__aeabi_dmul>
 801eb5c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801eb60:	1c70      	adds	r0, r6, #1
 801eb62:	f7e1 fdab 	bl	80006bc <__aeabi_i2d>
 801eb66:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801eb6a:	f7e1 fe11 	bl	8000790 <__aeabi_dmul>
 801eb6e:	4b3c      	ldr	r3, [pc, #240]	; (801ec60 <_dtoa_r+0xde8>)
 801eb70:	2200      	movs	r2, #0
 801eb72:	f7e1 fc57 	bl	8000424 <__adddf3>
 801eb76:	9b05      	ldr	r3, [sp, #20]
 801eb78:	940e      	str	r4, [sp, #56]	; 0x38
 801eb7a:	3b01      	subs	r3, #1
 801eb7c:	4606      	mov	r6, r0
 801eb7e:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
 801eb82:	9313      	str	r3, [sp, #76]	; 0x4c
 801eb84:	f7ff bb07 	b.w	801e196 <_dtoa_r+0x31e>
 801eb88:	4651      	mov	r1, sl
 801eb8a:	2201      	movs	r2, #1
 801eb8c:	4658      	mov	r0, fp
 801eb8e:	f000 fd5f 	bl	801f650 <__lshift>
 801eb92:	4631      	mov	r1, r6
 801eb94:	4682      	mov	sl, r0
 801eb96:	f000 fdb1 	bl	801f6fc <__mcmp>
 801eb9a:	2800      	cmp	r0, #0
 801eb9c:	dd32      	ble.n	801ec04 <_dtoa_r+0xd8c>
 801eb9e:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 801eba2:	d003      	beq.n	801ebac <_dtoa_r+0xd34>
 801eba4:	9b08      	ldr	r3, [sp, #32]
 801eba6:	f103 0931 	add.w	r9, r3, #49	; 0x31
 801ebaa:	e731      	b.n	801ea10 <_dtoa_r+0xb98>
 801ebac:	2239      	movs	r2, #57	; 0x39
 801ebae:	9502      	str	r5, [sp, #8]
 801ebb0:	703a      	strb	r2, [r7, #0]
 801ebb2:	4645      	mov	r5, r8
 801ebb4:	9904      	ldr	r1, [sp, #16]
 801ebb6:	e581      	b.n	801e6bc <_dtoa_r+0x844>
 801ebb8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801ebbc:	2000      	movs	r0, #0
 801ebbe:	4929      	ldr	r1, [pc, #164]	; (801ec64 <_dtoa_r+0xdec>)
 801ebc0:	f7e1 fc2e 	bl	8000420 <__aeabi_dsub>
 801ebc4:	4632      	mov	r2, r6
 801ebc6:	463b      	mov	r3, r7
 801ebc8:	f7e2 f872 	bl	8000cb0 <__aeabi_dcmpgt>
 801ebcc:	b910      	cbnz	r0, 801ebd4 <_dtoa_r+0xd5c>
 801ebce:	f7ff bb77 	b.w	801e2c0 <_dtoa_r+0x448>
 801ebd2:	4614      	mov	r4, r2
 801ebd4:	f814 3c01 	ldrb.w	r3, [r4, #-1]
 801ebd8:	2b30      	cmp	r3, #48	; 0x30
 801ebda:	f104 32ff 	add.w	r2, r4, #4294967295	; 0xffffffff
 801ebde:	d0f8      	beq.n	801ebd2 <_dtoa_r+0xd5a>
 801ebe0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ebe2:	9305      	str	r3, [sp, #20]
 801ebe4:	e580      	b.n	801e6e8 <_dtoa_r+0x870>
 801ebe6:	f8dd a008 	ldr.w	sl, [sp, #8]
 801ebea:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ebec:	9305      	str	r3, [sp, #20]
 801ebee:	9a04      	ldr	r2, [sp, #16]
 801ebf0:	e414      	b.n	801e41c <_dtoa_r+0x5a4>
 801ebf2:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 801ebf6:	f107 0401 	add.w	r4, r7, #1
 801ebfa:	d0d7      	beq.n	801ebac <_dtoa_r+0xd34>
 801ebfc:	9b02      	ldr	r3, [sp, #8]
 801ebfe:	2b00      	cmp	r3, #0
 801ec00:	dcd0      	bgt.n	801eba4 <_dtoa_r+0xd2c>
 801ec02:	e705      	b.n	801ea10 <_dtoa_r+0xb98>
 801ec04:	f47f af04 	bne.w	801ea10 <_dtoa_r+0xb98>
 801ec08:	f019 0f01 	tst.w	r9, #1
 801ec0c:	f43f af00 	beq.w	801ea10 <_dtoa_r+0xb98>
 801ec10:	e7c5      	b.n	801eb9e <_dtoa_r+0xd26>
 801ec12:	4629      	mov	r1, r5
 801ec14:	2300      	movs	r3, #0
 801ec16:	220a      	movs	r2, #10
 801ec18:	4658      	mov	r0, fp
 801ec1a:	f000 fb89 	bl	801f330 <__multadd>
 801ec1e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ec20:	2b00      	cmp	r3, #0
 801ec22:	4605      	mov	r5, r0
 801ec24:	dd09      	ble.n	801ec3a <_dtoa_r+0xdc2>
 801ec26:	9306      	str	r3, [sp, #24]
 801ec28:	e48f      	b.n	801e54a <_dtoa_r+0x6d2>
 801ec2a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ec2c:	2b02      	cmp	r3, #2
 801ec2e:	dc09      	bgt.n	801ec44 <_dtoa_r+0xdcc>
 801ec30:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ec32:	e50e      	b.n	801e652 <_dtoa_r+0x7da>
 801ec34:	2602      	movs	r6, #2
 801ec36:	f7ff ba8d 	b.w	801e154 <_dtoa_r+0x2dc>
 801ec3a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ec3c:	2b02      	cmp	r3, #2
 801ec3e:	dc01      	bgt.n	801ec44 <_dtoa_r+0xdcc>
 801ec40:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ec42:	e7f0      	b.n	801ec26 <_dtoa_r+0xdae>
 801ec44:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ec46:	9306      	str	r3, [sp, #24]
 801ec48:	e688      	b.n	801e95c <_dtoa_r+0xae4>
 801ec4a:	4b07      	ldr	r3, [pc, #28]	; (801ec68 <_dtoa_r+0xdf0>)
 801ec4c:	9304      	str	r3, [sp, #16]
 801ec4e:	f7ff b94b 	b.w	801dee8 <_dtoa_r+0x70>
 801ec52:	f43f ac5d 	beq.w	801e510 <_dtoa_r+0x698>
 801ec56:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
 801ec5a:	e559      	b.n	801e710 <_dtoa_r+0x898>
 801ec5c:	40240000 	.word	0x40240000
 801ec60:	401c0000 	.word	0x401c0000
 801ec64:	3fe00000 	.word	0x3fe00000
 801ec68:	08027694 	.word	0x08027694

0801ec6c <__sflush_r>:
 801ec6c:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
 801ec70:	b29a      	uxth	r2, r3
 801ec72:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801ec76:	460c      	mov	r4, r1
 801ec78:	0711      	lsls	r1, r2, #28
 801ec7a:	4680      	mov	r8, r0
 801ec7c:	d444      	bmi.n	801ed08 <__sflush_r+0x9c>
 801ec7e:	6862      	ldr	r2, [r4, #4]
 801ec80:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 801ec84:	2a00      	cmp	r2, #0
 801ec86:	81a3      	strh	r3, [r4, #12]
 801ec88:	dd59      	ble.n	801ed3e <__sflush_r+0xd2>
 801ec8a:	6aa5      	ldr	r5, [r4, #40]	; 0x28
 801ec8c:	2d00      	cmp	r5, #0
 801ec8e:	d053      	beq.n	801ed38 <__sflush_r+0xcc>
 801ec90:	2200      	movs	r2, #0
 801ec92:	b29b      	uxth	r3, r3
 801ec94:	f8d8 6000 	ldr.w	r6, [r8]
 801ec98:	69e1      	ldr	r1, [r4, #28]
 801ec9a:	f8c8 2000 	str.w	r2, [r8]
 801ec9e:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
 801eca2:	f040 8083 	bne.w	801edac <__sflush_r+0x140>
 801eca6:	2301      	movs	r3, #1
 801eca8:	4640      	mov	r0, r8
 801ecaa:	47a8      	blx	r5
 801ecac:	1c42      	adds	r2, r0, #1
 801ecae:	d04a      	beq.n	801ed46 <__sflush_r+0xda>
 801ecb0:	89a3      	ldrh	r3, [r4, #12]
 801ecb2:	6aa5      	ldr	r5, [r4, #40]	; 0x28
 801ecb4:	69e1      	ldr	r1, [r4, #28]
 801ecb6:	075b      	lsls	r3, r3, #29
 801ecb8:	d505      	bpl.n	801ecc6 <__sflush_r+0x5a>
 801ecba:	6862      	ldr	r2, [r4, #4]
 801ecbc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801ecbe:	1a80      	subs	r0, r0, r2
 801ecc0:	b10b      	cbz	r3, 801ecc6 <__sflush_r+0x5a>
 801ecc2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801ecc4:	1ac0      	subs	r0, r0, r3
 801ecc6:	4602      	mov	r2, r0
 801ecc8:	2300      	movs	r3, #0
 801ecca:	4640      	mov	r0, r8
 801eccc:	47a8      	blx	r5
 801ecce:	1c47      	adds	r7, r0, #1
 801ecd0:	d045      	beq.n	801ed5e <__sflush_r+0xf2>
 801ecd2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801ecd6:	6922      	ldr	r2, [r4, #16]
 801ecd8:	6022      	str	r2, [r4, #0]
 801ecda:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 801ecde:	2200      	movs	r2, #0
 801ece0:	81a3      	strh	r3, [r4, #12]
 801ece2:	04db      	lsls	r3, r3, #19
 801ece4:	6062      	str	r2, [r4, #4]
 801ece6:	d500      	bpl.n	801ecea <__sflush_r+0x7e>
 801ece8:	6520      	str	r0, [r4, #80]	; 0x50
 801ecea:	6b21      	ldr	r1, [r4, #48]	; 0x30
 801ecec:	f8c8 6000 	str.w	r6, [r8]
 801ecf0:	b311      	cbz	r1, 801ed38 <__sflush_r+0xcc>
 801ecf2:	f104 0340 	add.w	r3, r4, #64	; 0x40
 801ecf6:	4299      	cmp	r1, r3
 801ecf8:	d002      	beq.n	801ed00 <__sflush_r+0x94>
 801ecfa:	4640      	mov	r0, r8
 801ecfc:	f000 f944 	bl	801ef88 <_free_r>
 801ed00:	2000      	movs	r0, #0
 801ed02:	6320      	str	r0, [r4, #48]	; 0x30
 801ed04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ed08:	6926      	ldr	r6, [r4, #16]
 801ed0a:	b1ae      	cbz	r6, 801ed38 <__sflush_r+0xcc>
 801ed0c:	6825      	ldr	r5, [r4, #0]
 801ed0e:	6026      	str	r6, [r4, #0]
 801ed10:	0792      	lsls	r2, r2, #30
 801ed12:	bf0c      	ite	eq
 801ed14:	6963      	ldreq	r3, [r4, #20]
 801ed16:	2300      	movne	r3, #0
 801ed18:	1bad      	subs	r5, r5, r6
 801ed1a:	60a3      	str	r3, [r4, #8]
 801ed1c:	e00a      	b.n	801ed34 <__sflush_r+0xc8>
 801ed1e:	462b      	mov	r3, r5
 801ed20:	4632      	mov	r2, r6
 801ed22:	6a67      	ldr	r7, [r4, #36]	; 0x24
 801ed24:	69e1      	ldr	r1, [r4, #28]
 801ed26:	4640      	mov	r0, r8
 801ed28:	47b8      	blx	r7
 801ed2a:	2800      	cmp	r0, #0
 801ed2c:	eba5 0500 	sub.w	r5, r5, r0
 801ed30:	4406      	add	r6, r0
 801ed32:	dd2b      	ble.n	801ed8c <__sflush_r+0x120>
 801ed34:	2d00      	cmp	r5, #0
 801ed36:	dcf2      	bgt.n	801ed1e <__sflush_r+0xb2>
 801ed38:	2000      	movs	r0, #0
 801ed3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ed3e:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 801ed40:	2a00      	cmp	r2, #0
 801ed42:	dca2      	bgt.n	801ec8a <__sflush_r+0x1e>
 801ed44:	e7f8      	b.n	801ed38 <__sflush_r+0xcc>
 801ed46:	f8d8 3000 	ldr.w	r3, [r8]
 801ed4a:	2b00      	cmp	r3, #0
 801ed4c:	d0b0      	beq.n	801ecb0 <__sflush_r+0x44>
 801ed4e:	2b1d      	cmp	r3, #29
 801ed50:	d001      	beq.n	801ed56 <__sflush_r+0xea>
 801ed52:	2b16      	cmp	r3, #22
 801ed54:	d12c      	bne.n	801edb0 <__sflush_r+0x144>
 801ed56:	f8c8 6000 	str.w	r6, [r8]
 801ed5a:	2000      	movs	r0, #0
 801ed5c:	e7ed      	b.n	801ed3a <__sflush_r+0xce>
 801ed5e:	f8d8 1000 	ldr.w	r1, [r8]
 801ed62:	291d      	cmp	r1, #29
 801ed64:	d81a      	bhi.n	801ed9c <__sflush_r+0x130>
 801ed66:	4b15      	ldr	r3, [pc, #84]	; (801edbc <__sflush_r+0x150>)
 801ed68:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801ed6c:	40cb      	lsrs	r3, r1
 801ed6e:	43db      	mvns	r3, r3
 801ed70:	f013 0301 	ands.w	r3, r3, #1
 801ed74:	d114      	bne.n	801eda0 <__sflush_r+0x134>
 801ed76:	6925      	ldr	r5, [r4, #16]
 801ed78:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 801ed7c:	e9c4 5300 	strd	r5, r3, [r4]
 801ed80:	04d5      	lsls	r5, r2, #19
 801ed82:	81a2      	strh	r2, [r4, #12]
 801ed84:	d5b1      	bpl.n	801ecea <__sflush_r+0x7e>
 801ed86:	2900      	cmp	r1, #0
 801ed88:	d1af      	bne.n	801ecea <__sflush_r+0x7e>
 801ed8a:	e7ad      	b.n	801ece8 <__sflush_r+0x7c>
 801ed8c:	89a3      	ldrh	r3, [r4, #12]
 801ed8e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801ed92:	81a3      	strh	r3, [r4, #12]
 801ed94:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801ed98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ed9c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801eda0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 801eda4:	81a2      	strh	r2, [r4, #12]
 801eda6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801edaa:	e7c6      	b.n	801ed3a <__sflush_r+0xce>
 801edac:	6d20      	ldr	r0, [r4, #80]	; 0x50
 801edae:	e782      	b.n	801ecb6 <__sflush_r+0x4a>
 801edb0:	89a3      	ldrh	r3, [r4, #12]
 801edb2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801edb6:	81a3      	strh	r3, [r4, #12]
 801edb8:	e7bf      	b.n	801ed3a <__sflush_r+0xce>
 801edba:	bf00      	nop
 801edbc:	20400001 	.word	0x20400001

0801edc0 <_fflush_r>:
 801edc0:	b538      	push	{r3, r4, r5, lr}
 801edc2:	460d      	mov	r5, r1
 801edc4:	4604      	mov	r4, r0
 801edc6:	b108      	cbz	r0, 801edcc <_fflush_r+0xc>
 801edc8:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801edca:	b1a3      	cbz	r3, 801edf6 <_fflush_r+0x36>
 801edcc:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
 801edd0:	b1b8      	cbz	r0, 801ee02 <_fflush_r+0x42>
 801edd2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801edd4:	07db      	lsls	r3, r3, #31
 801edd6:	d401      	bmi.n	801eddc <_fflush_r+0x1c>
 801edd8:	0581      	lsls	r1, r0, #22
 801edda:	d51a      	bpl.n	801ee12 <_fflush_r+0x52>
 801eddc:	4620      	mov	r0, r4
 801edde:	4629      	mov	r1, r5
 801ede0:	f7ff ff44 	bl	801ec6c <__sflush_r>
 801ede4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801ede6:	07da      	lsls	r2, r3, #31
 801ede8:	4604      	mov	r4, r0
 801edea:	d402      	bmi.n	801edf2 <_fflush_r+0x32>
 801edec:	89ab      	ldrh	r3, [r5, #12]
 801edee:	059b      	lsls	r3, r3, #22
 801edf0:	d50a      	bpl.n	801ee08 <_fflush_r+0x48>
 801edf2:	4620      	mov	r0, r4
 801edf4:	bd38      	pop	{r3, r4, r5, pc}
 801edf6:	f000 f83f 	bl	801ee78 <__sinit>
 801edfa:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
 801edfe:	2800      	cmp	r0, #0
 801ee00:	d1e7      	bne.n	801edd2 <_fflush_r+0x12>
 801ee02:	4604      	mov	r4, r0
 801ee04:	4620      	mov	r0, r4
 801ee06:	bd38      	pop	{r3, r4, r5, pc}
 801ee08:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801ee0a:	f7fc fe1d 	bl	801ba48 <__retarget_lock_release_recursive>
 801ee0e:	4620      	mov	r0, r4
 801ee10:	bd38      	pop	{r3, r4, r5, pc}
 801ee12:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801ee14:	f7fc fe16 	bl	801ba44 <__retarget_lock_acquire_recursive>
 801ee18:	e7e0      	b.n	801eddc <_fflush_r+0x1c>
 801ee1a:	bf00      	nop

0801ee1c <std>:
 801ee1c:	b510      	push	{r4, lr}
 801ee1e:	2300      	movs	r3, #0
 801ee20:	4604      	mov	r4, r0
 801ee22:	8181      	strh	r1, [r0, #12]
 801ee24:	81c2      	strh	r2, [r0, #14]
 801ee26:	e9c0 3300 	strd	r3, r3, [r0]
 801ee2a:	6083      	str	r3, [r0, #8]
 801ee2c:	6643      	str	r3, [r0, #100]	; 0x64
 801ee2e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801ee32:	6183      	str	r3, [r0, #24]
 801ee34:	4619      	mov	r1, r3
 801ee36:	2208      	movs	r2, #8
 801ee38:	305c      	adds	r0, #92	; 0x5c
 801ee3a:	f7fd f951 	bl	801c0e0 <memset>
 801ee3e:	4807      	ldr	r0, [pc, #28]	; (801ee5c <std+0x40>)
 801ee40:	4907      	ldr	r1, [pc, #28]	; (801ee60 <std+0x44>)
 801ee42:	4a08      	ldr	r2, [pc, #32]	; (801ee64 <std+0x48>)
 801ee44:	4b08      	ldr	r3, [pc, #32]	; (801ee68 <std+0x4c>)
 801ee46:	62e3      	str	r3, [r4, #44]	; 0x2c
 801ee48:	e9c4 4007 	strd	r4, r0, [r4, #28]
 801ee4c:	e9c4 1209 	strd	r1, r2, [r4, #36]	; 0x24
 801ee50:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801ee54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ee58:	f7fc bdf0 	b.w	801ba3c <__retarget_lock_init_recursive>
 801ee5c:	0801f8d1 	.word	0x0801f8d1
 801ee60:	0801f8f5 	.word	0x0801f8f5
 801ee64:	0801f931 	.word	0x0801f931
 801ee68:	0801f951 	.word	0x0801f951

0801ee6c <_cleanup_r>:
 801ee6c:	4901      	ldr	r1, [pc, #4]	; (801ee74 <_cleanup_r+0x8>)
 801ee6e:	f000 b97f 	b.w	801f170 <_fwalk_reent>
 801ee72:	bf00      	nop
 801ee74:	0801fa9d 	.word	0x0801fa9d

0801ee78 <__sinit>:
 801ee78:	b510      	push	{r4, lr}
 801ee7a:	4604      	mov	r4, r0
 801ee7c:	4812      	ldr	r0, [pc, #72]	; (801eec8 <__sinit+0x50>)
 801ee7e:	f7fc fde1 	bl	801ba44 <__retarget_lock_acquire_recursive>
 801ee82:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 801ee84:	b9d2      	cbnz	r2, 801eebc <__sinit+0x44>
 801ee86:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
 801ee8a:	4810      	ldr	r0, [pc, #64]	; (801eecc <__sinit+0x54>)
 801ee8c:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
 801ee90:	2103      	movs	r1, #3
 801ee92:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
 801ee96:	63e0      	str	r0, [r4, #60]	; 0x3c
 801ee98:	f8c4 12e4 	str.w	r1, [r4, #740]	; 0x2e4
 801ee9c:	6860      	ldr	r0, [r4, #4]
 801ee9e:	2104      	movs	r1, #4
 801eea0:	f7ff ffbc 	bl	801ee1c <std>
 801eea4:	2201      	movs	r2, #1
 801eea6:	2109      	movs	r1, #9
 801eea8:	68a0      	ldr	r0, [r4, #8]
 801eeaa:	f7ff ffb7 	bl	801ee1c <std>
 801eeae:	2202      	movs	r2, #2
 801eeb0:	2112      	movs	r1, #18
 801eeb2:	68e0      	ldr	r0, [r4, #12]
 801eeb4:	f7ff ffb2 	bl	801ee1c <std>
 801eeb8:	2301      	movs	r3, #1
 801eeba:	63a3      	str	r3, [r4, #56]	; 0x38
 801eebc:	4802      	ldr	r0, [pc, #8]	; (801eec8 <__sinit+0x50>)
 801eebe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801eec2:	f7fc bdc1 	b.w	801ba48 <__retarget_lock_release_recursive>
 801eec6:	bf00      	nop
 801eec8:	200008fc 	.word	0x200008fc
 801eecc:	0801ee6d 	.word	0x0801ee6d

0801eed0 <__sfp_lock_acquire>:
 801eed0:	4801      	ldr	r0, [pc, #4]	; (801eed8 <__sfp_lock_acquire+0x8>)
 801eed2:	f7fc bdb7 	b.w	801ba44 <__retarget_lock_acquire_recursive>
 801eed6:	bf00      	nop
 801eed8:	20000910 	.word	0x20000910

0801eedc <__sfp_lock_release>:
 801eedc:	4801      	ldr	r0, [pc, #4]	; (801eee4 <__sfp_lock_release+0x8>)
 801eede:	f7fc bdb3 	b.w	801ba48 <__retarget_lock_release_recursive>
 801eee2:	bf00      	nop
 801eee4:	20000910 	.word	0x20000910

0801eee8 <_malloc_trim_r>:
 801eee8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801eeea:	4f24      	ldr	r7, [pc, #144]	; (801ef7c <_malloc_trim_r+0x94>)
 801eeec:	460c      	mov	r4, r1
 801eeee:	4606      	mov	r6, r0
 801eef0:	f7fd f940 	bl	801c174 <__malloc_lock>
 801eef4:	68bb      	ldr	r3, [r7, #8]
 801eef6:	685d      	ldr	r5, [r3, #4]
 801eef8:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
 801eefc:	310f      	adds	r1, #15
 801eefe:	f025 0503 	bic.w	r5, r5, #3
 801ef02:	4429      	add	r1, r5
 801ef04:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
 801ef08:	f021 010f 	bic.w	r1, r1, #15
 801ef0c:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
 801ef10:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
 801ef14:	db07      	blt.n	801ef26 <_malloc_trim_r+0x3e>
 801ef16:	2100      	movs	r1, #0
 801ef18:	4630      	mov	r0, r6
 801ef1a:	f7fd fb25 	bl	801c568 <_sbrk_r>
 801ef1e:	68bb      	ldr	r3, [r7, #8]
 801ef20:	442b      	add	r3, r5
 801ef22:	4298      	cmp	r0, r3
 801ef24:	d004      	beq.n	801ef30 <_malloc_trim_r+0x48>
 801ef26:	4630      	mov	r0, r6
 801ef28:	f7fd f92a 	bl	801c180 <__malloc_unlock>
 801ef2c:	2000      	movs	r0, #0
 801ef2e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801ef30:	4261      	negs	r1, r4
 801ef32:	4630      	mov	r0, r6
 801ef34:	f7fd fb18 	bl	801c568 <_sbrk_r>
 801ef38:	3001      	adds	r0, #1
 801ef3a:	d00d      	beq.n	801ef58 <_malloc_trim_r+0x70>
 801ef3c:	4b10      	ldr	r3, [pc, #64]	; (801ef80 <_malloc_trim_r+0x98>)
 801ef3e:	68ba      	ldr	r2, [r7, #8]
 801ef40:	6819      	ldr	r1, [r3, #0]
 801ef42:	1b2d      	subs	r5, r5, r4
 801ef44:	f045 0501 	orr.w	r5, r5, #1
 801ef48:	4630      	mov	r0, r6
 801ef4a:	1b09      	subs	r1, r1, r4
 801ef4c:	6055      	str	r5, [r2, #4]
 801ef4e:	6019      	str	r1, [r3, #0]
 801ef50:	f7fd f916 	bl	801c180 <__malloc_unlock>
 801ef54:	2001      	movs	r0, #1
 801ef56:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801ef58:	2100      	movs	r1, #0
 801ef5a:	4630      	mov	r0, r6
 801ef5c:	f7fd fb04 	bl	801c568 <_sbrk_r>
 801ef60:	68ba      	ldr	r2, [r7, #8]
 801ef62:	1a83      	subs	r3, r0, r2
 801ef64:	2b0f      	cmp	r3, #15
 801ef66:	ddde      	ble.n	801ef26 <_malloc_trim_r+0x3e>
 801ef68:	4c06      	ldr	r4, [pc, #24]	; (801ef84 <_malloc_trim_r+0x9c>)
 801ef6a:	4905      	ldr	r1, [pc, #20]	; (801ef80 <_malloc_trim_r+0x98>)
 801ef6c:	6824      	ldr	r4, [r4, #0]
 801ef6e:	f043 0301 	orr.w	r3, r3, #1
 801ef72:	1b00      	subs	r0, r0, r4
 801ef74:	6053      	str	r3, [r2, #4]
 801ef76:	6008      	str	r0, [r1, #0]
 801ef78:	e7d5      	b.n	801ef26 <_malloc_trim_r+0x3e>
 801ef7a:	bf00      	nop
 801ef7c:	200037e0 	.word	0x200037e0
 801ef80:	200008a8 	.word	0x200008a8
 801ef84:	20003be8 	.word	0x20003be8

0801ef88 <_free_r>:
 801ef88:	2900      	cmp	r1, #0
 801ef8a:	d053      	beq.n	801f034 <_free_r+0xac>
 801ef8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801ef8e:	460c      	mov	r4, r1
 801ef90:	4606      	mov	r6, r0
 801ef92:	f7fd f8ef 	bl	801c174 <__malloc_lock>
 801ef96:	f854 cc04 	ldr.w	ip, [r4, #-4]
 801ef9a:	4f71      	ldr	r7, [pc, #452]	; (801f160 <_free_r+0x1d8>)
 801ef9c:	f02c 0101 	bic.w	r1, ip, #1
 801efa0:	f1a4 0508 	sub.w	r5, r4, #8
 801efa4:	186b      	adds	r3, r5, r1
 801efa6:	68b8      	ldr	r0, [r7, #8]
 801efa8:	685a      	ldr	r2, [r3, #4]
 801efaa:	4298      	cmp	r0, r3
 801efac:	f022 0203 	bic.w	r2, r2, #3
 801efb0:	d053      	beq.n	801f05a <_free_r+0xd2>
 801efb2:	f01c 0f01 	tst.w	ip, #1
 801efb6:	605a      	str	r2, [r3, #4]
 801efb8:	eb03 0002 	add.w	r0, r3, r2
 801efbc:	d13b      	bne.n	801f036 <_free_r+0xae>
 801efbe:	f854 cc08 	ldr.w	ip, [r4, #-8]
 801efc2:	6840      	ldr	r0, [r0, #4]
 801efc4:	eba5 050c 	sub.w	r5, r5, ip
 801efc8:	f107 0e08 	add.w	lr, r7, #8
 801efcc:	68ac      	ldr	r4, [r5, #8]
 801efce:	4574      	cmp	r4, lr
 801efd0:	4461      	add	r1, ip
 801efd2:	f000 0001 	and.w	r0, r0, #1
 801efd6:	d075      	beq.n	801f0c4 <_free_r+0x13c>
 801efd8:	f8d5 c00c 	ldr.w	ip, [r5, #12]
 801efdc:	f8c4 c00c 	str.w	ip, [r4, #12]
 801efe0:	f8cc 4008 	str.w	r4, [ip, #8]
 801efe4:	b360      	cbz	r0, 801f040 <_free_r+0xb8>
 801efe6:	f041 0301 	orr.w	r3, r1, #1
 801efea:	606b      	str	r3, [r5, #4]
 801efec:	5069      	str	r1, [r5, r1]
 801efee:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801eff2:	d350      	bcc.n	801f096 <_free_r+0x10e>
 801eff4:	0a4b      	lsrs	r3, r1, #9
 801eff6:	2b04      	cmp	r3, #4
 801eff8:	d870      	bhi.n	801f0dc <_free_r+0x154>
 801effa:	098b      	lsrs	r3, r1, #6
 801effc:	f103 0439 	add.w	r4, r3, #57	; 0x39
 801f000:	00e4      	lsls	r4, r4, #3
 801f002:	f103 0238 	add.w	r2, r3, #56	; 0x38
 801f006:	1938      	adds	r0, r7, r4
 801f008:	593b      	ldr	r3, [r7, r4]
 801f00a:	3808      	subs	r0, #8
 801f00c:	4298      	cmp	r0, r3
 801f00e:	d078      	beq.n	801f102 <_free_r+0x17a>
 801f010:	685a      	ldr	r2, [r3, #4]
 801f012:	f022 0203 	bic.w	r2, r2, #3
 801f016:	428a      	cmp	r2, r1
 801f018:	d971      	bls.n	801f0fe <_free_r+0x176>
 801f01a:	689b      	ldr	r3, [r3, #8]
 801f01c:	4298      	cmp	r0, r3
 801f01e:	d1f7      	bne.n	801f010 <_free_r+0x88>
 801f020:	68c3      	ldr	r3, [r0, #12]
 801f022:	e9c5 0302 	strd	r0, r3, [r5, #8]
 801f026:	609d      	str	r5, [r3, #8]
 801f028:	60c5      	str	r5, [r0, #12]
 801f02a:	4630      	mov	r0, r6
 801f02c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 801f030:	f7fd b8a6 	b.w	801c180 <__malloc_unlock>
 801f034:	4770      	bx	lr
 801f036:	6840      	ldr	r0, [r0, #4]
 801f038:	f000 0001 	and.w	r0, r0, #1
 801f03c:	2800      	cmp	r0, #0
 801f03e:	d1d2      	bne.n	801efe6 <_free_r+0x5e>
 801f040:	6898      	ldr	r0, [r3, #8]
 801f042:	4c48      	ldr	r4, [pc, #288]	; (801f164 <_free_r+0x1dc>)
 801f044:	4411      	add	r1, r2
 801f046:	42a0      	cmp	r0, r4
 801f048:	f041 0201 	orr.w	r2, r1, #1
 801f04c:	d062      	beq.n	801f114 <_free_r+0x18c>
 801f04e:	68db      	ldr	r3, [r3, #12]
 801f050:	60c3      	str	r3, [r0, #12]
 801f052:	6098      	str	r0, [r3, #8]
 801f054:	606a      	str	r2, [r5, #4]
 801f056:	5069      	str	r1, [r5, r1]
 801f058:	e7c9      	b.n	801efee <_free_r+0x66>
 801f05a:	f01c 0f01 	tst.w	ip, #1
 801f05e:	440a      	add	r2, r1
 801f060:	d107      	bne.n	801f072 <_free_r+0xea>
 801f062:	f854 3c08 	ldr.w	r3, [r4, #-8]
 801f066:	1aed      	subs	r5, r5, r3
 801f068:	441a      	add	r2, r3
 801f06a:	e9d5 1302 	ldrd	r1, r3, [r5, #8]
 801f06e:	60cb      	str	r3, [r1, #12]
 801f070:	6099      	str	r1, [r3, #8]
 801f072:	4b3d      	ldr	r3, [pc, #244]	; (801f168 <_free_r+0x1e0>)
 801f074:	681b      	ldr	r3, [r3, #0]
 801f076:	f042 0101 	orr.w	r1, r2, #1
 801f07a:	4293      	cmp	r3, r2
 801f07c:	6069      	str	r1, [r5, #4]
 801f07e:	60bd      	str	r5, [r7, #8]
 801f080:	d804      	bhi.n	801f08c <_free_r+0x104>
 801f082:	4b3a      	ldr	r3, [pc, #232]	; (801f16c <_free_r+0x1e4>)
 801f084:	4630      	mov	r0, r6
 801f086:	6819      	ldr	r1, [r3, #0]
 801f088:	f7ff ff2e 	bl	801eee8 <_malloc_trim_r>
 801f08c:	4630      	mov	r0, r6
 801f08e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 801f092:	f7fd b875 	b.w	801c180 <__malloc_unlock>
 801f096:	08c9      	lsrs	r1, r1, #3
 801f098:	6878      	ldr	r0, [r7, #4]
 801f09a:	1c4a      	adds	r2, r1, #1
 801f09c:	2301      	movs	r3, #1
 801f09e:	1089      	asrs	r1, r1, #2
 801f0a0:	408b      	lsls	r3, r1
 801f0a2:	4303      	orrs	r3, r0
 801f0a4:	eb07 01c2 	add.w	r1, r7, r2, lsl #3
 801f0a8:	f857 0032 	ldr.w	r0, [r7, r2, lsl #3]
 801f0ac:	607b      	str	r3, [r7, #4]
 801f0ae:	3908      	subs	r1, #8
 801f0b0:	e9c5 0102 	strd	r0, r1, [r5, #8]
 801f0b4:	f847 5032 	str.w	r5, [r7, r2, lsl #3]
 801f0b8:	60c5      	str	r5, [r0, #12]
 801f0ba:	4630      	mov	r0, r6
 801f0bc:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 801f0c0:	f7fd b85e 	b.w	801c180 <__malloc_unlock>
 801f0c4:	2800      	cmp	r0, #0
 801f0c6:	d145      	bne.n	801f154 <_free_r+0x1cc>
 801f0c8:	440a      	add	r2, r1
 801f0ca:	e9d3 1302 	ldrd	r1, r3, [r3, #8]
 801f0ce:	f042 0001 	orr.w	r0, r2, #1
 801f0d2:	60cb      	str	r3, [r1, #12]
 801f0d4:	6099      	str	r1, [r3, #8]
 801f0d6:	6068      	str	r0, [r5, #4]
 801f0d8:	50aa      	str	r2, [r5, r2]
 801f0da:	e7d7      	b.n	801f08c <_free_r+0x104>
 801f0dc:	2b14      	cmp	r3, #20
 801f0de:	d908      	bls.n	801f0f2 <_free_r+0x16a>
 801f0e0:	2b54      	cmp	r3, #84	; 0x54
 801f0e2:	d81e      	bhi.n	801f122 <_free_r+0x19a>
 801f0e4:	0b0b      	lsrs	r3, r1, #12
 801f0e6:	f103 046f 	add.w	r4, r3, #111	; 0x6f
 801f0ea:	00e4      	lsls	r4, r4, #3
 801f0ec:	f103 026e 	add.w	r2, r3, #110	; 0x6e
 801f0f0:	e789      	b.n	801f006 <_free_r+0x7e>
 801f0f2:	f103 045c 	add.w	r4, r3, #92	; 0x5c
 801f0f6:	00e4      	lsls	r4, r4, #3
 801f0f8:	f103 025b 	add.w	r2, r3, #91	; 0x5b
 801f0fc:	e783      	b.n	801f006 <_free_r+0x7e>
 801f0fe:	4618      	mov	r0, r3
 801f100:	e78e      	b.n	801f020 <_free_r+0x98>
 801f102:	1093      	asrs	r3, r2, #2
 801f104:	6879      	ldr	r1, [r7, #4]
 801f106:	2201      	movs	r2, #1
 801f108:	fa02 f303 	lsl.w	r3, r2, r3
 801f10c:	430b      	orrs	r3, r1
 801f10e:	607b      	str	r3, [r7, #4]
 801f110:	4603      	mov	r3, r0
 801f112:	e786      	b.n	801f022 <_free_r+0x9a>
 801f114:	e9c7 5504 	strd	r5, r5, [r7, #16]
 801f118:	e9c5 0002 	strd	r0, r0, [r5, #8]
 801f11c:	606a      	str	r2, [r5, #4]
 801f11e:	5069      	str	r1, [r5, r1]
 801f120:	e7b4      	b.n	801f08c <_free_r+0x104>
 801f122:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
 801f126:	d806      	bhi.n	801f136 <_free_r+0x1ae>
 801f128:	0bcb      	lsrs	r3, r1, #15
 801f12a:	f103 0478 	add.w	r4, r3, #120	; 0x78
 801f12e:	00e4      	lsls	r4, r4, #3
 801f130:	f103 0277 	add.w	r2, r3, #119	; 0x77
 801f134:	e767      	b.n	801f006 <_free_r+0x7e>
 801f136:	f240 5254 	movw	r2, #1364	; 0x554
 801f13a:	4293      	cmp	r3, r2
 801f13c:	d806      	bhi.n	801f14c <_free_r+0x1c4>
 801f13e:	0c8b      	lsrs	r3, r1, #18
 801f140:	f103 047d 	add.w	r4, r3, #125	; 0x7d
 801f144:	00e4      	lsls	r4, r4, #3
 801f146:	f103 027c 	add.w	r2, r3, #124	; 0x7c
 801f14a:	e75c      	b.n	801f006 <_free_r+0x7e>
 801f14c:	f44f 747e 	mov.w	r4, #1016	; 0x3f8
 801f150:	227e      	movs	r2, #126	; 0x7e
 801f152:	e758      	b.n	801f006 <_free_r+0x7e>
 801f154:	f041 0201 	orr.w	r2, r1, #1
 801f158:	606a      	str	r2, [r5, #4]
 801f15a:	6019      	str	r1, [r3, #0]
 801f15c:	e796      	b.n	801f08c <_free_r+0x104>
 801f15e:	bf00      	nop
 801f160:	200037e0 	.word	0x200037e0
 801f164:	200037e8 	.word	0x200037e8
 801f168:	20003bec 	.word	0x20003bec
 801f16c:	200008d8 	.word	0x200008d8

0801f170 <_fwalk_reent>:
 801f170:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801f174:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
 801f178:	d01f      	beq.n	801f1ba <_fwalk_reent+0x4a>
 801f17a:	4688      	mov	r8, r1
 801f17c:	4606      	mov	r6, r0
 801f17e:	f04f 0900 	mov.w	r9, #0
 801f182:	e9d7 5401 	ldrd	r5, r4, [r7, #4]
 801f186:	3d01      	subs	r5, #1
 801f188:	d411      	bmi.n	801f1ae <_fwalk_reent+0x3e>
 801f18a:	89a3      	ldrh	r3, [r4, #12]
 801f18c:	2b01      	cmp	r3, #1
 801f18e:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
 801f192:	4621      	mov	r1, r4
 801f194:	4630      	mov	r0, r6
 801f196:	d906      	bls.n	801f1a6 <_fwalk_reent+0x36>
 801f198:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 801f19c:	3301      	adds	r3, #1
 801f19e:	d002      	beq.n	801f1a6 <_fwalk_reent+0x36>
 801f1a0:	47c0      	blx	r8
 801f1a2:	ea49 0900 	orr.w	r9, r9, r0
 801f1a6:	1c6b      	adds	r3, r5, #1
 801f1a8:	f104 0468 	add.w	r4, r4, #104	; 0x68
 801f1ac:	d1ed      	bne.n	801f18a <_fwalk_reent+0x1a>
 801f1ae:	683f      	ldr	r7, [r7, #0]
 801f1b0:	2f00      	cmp	r7, #0
 801f1b2:	d1e6      	bne.n	801f182 <_fwalk_reent+0x12>
 801f1b4:	4648      	mov	r0, r9
 801f1b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801f1ba:	46b9      	mov	r9, r7
 801f1bc:	4648      	mov	r0, r9
 801f1be:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801f1c2:	bf00      	nop

0801f1c4 <_localeconv_r>:
 801f1c4:	4a04      	ldr	r2, [pc, #16]	; (801f1d8 <_localeconv_r+0x14>)
 801f1c6:	4b05      	ldr	r3, [pc, #20]	; (801f1dc <_localeconv_r+0x18>)
 801f1c8:	6812      	ldr	r2, [r2, #0]
 801f1ca:	6b50      	ldr	r0, [r2, #52]	; 0x34
 801f1cc:	2800      	cmp	r0, #0
 801f1ce:	bf08      	it	eq
 801f1d0:	4618      	moveq	r0, r3
 801f1d2:	30f0      	adds	r0, #240	; 0xf0
 801f1d4:	4770      	bx	lr
 801f1d6:	bf00      	nop
 801f1d8:	200033b4 	.word	0x200033b4
 801f1dc:	20003bf0 	.word	0x20003bf0

0801f1e0 <__swhatbuf_r>:
 801f1e0:	b570      	push	{r4, r5, r6, lr}
 801f1e2:	460c      	mov	r4, r1
 801f1e4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801f1e8:	2900      	cmp	r1, #0
 801f1ea:	b096      	sub	sp, #88	; 0x58
 801f1ec:	4615      	mov	r5, r2
 801f1ee:	461e      	mov	r6, r3
 801f1f0:	da0f      	bge.n	801f212 <__swhatbuf_r+0x32>
 801f1f2:	89a2      	ldrh	r2, [r4, #12]
 801f1f4:	2300      	movs	r3, #0
 801f1f6:	f012 0080 	ands.w	r0, r2, #128	; 0x80
 801f1fa:	6033      	str	r3, [r6, #0]
 801f1fc:	d104      	bne.n	801f208 <__swhatbuf_r+0x28>
 801f1fe:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801f202:	602b      	str	r3, [r5, #0]
 801f204:	b016      	add	sp, #88	; 0x58
 801f206:	bd70      	pop	{r4, r5, r6, pc}
 801f208:	2240      	movs	r2, #64	; 0x40
 801f20a:	4618      	mov	r0, r3
 801f20c:	602a      	str	r2, [r5, #0]
 801f20e:	b016      	add	sp, #88	; 0x58
 801f210:	bd70      	pop	{r4, r5, r6, pc}
 801f212:	466a      	mov	r2, sp
 801f214:	f000 fcaa 	bl	801fb6c <_fstat_r>
 801f218:	2800      	cmp	r0, #0
 801f21a:	dbea      	blt.n	801f1f2 <__swhatbuf_r+0x12>
 801f21c:	9b01      	ldr	r3, [sp, #4]
 801f21e:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 801f222:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
 801f226:	fab3 f383 	clz	r3, r3
 801f22a:	095b      	lsrs	r3, r3, #5
 801f22c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 801f230:	f44f 6000 	mov.w	r0, #2048	; 0x800
 801f234:	6033      	str	r3, [r6, #0]
 801f236:	602a      	str	r2, [r5, #0]
 801f238:	b016      	add	sp, #88	; 0x58
 801f23a:	bd70      	pop	{r4, r5, r6, pc}

0801f23c <__smakebuf_r>:
 801f23c:	898a      	ldrh	r2, [r1, #12]
 801f23e:	0792      	lsls	r2, r2, #30
 801f240:	460b      	mov	r3, r1
 801f242:	d506      	bpl.n	801f252 <__smakebuf_r+0x16>
 801f244:	f101 0243 	add.w	r2, r1, #67	; 0x43
 801f248:	2101      	movs	r1, #1
 801f24a:	601a      	str	r2, [r3, #0]
 801f24c:	e9c3 2104 	strd	r2, r1, [r3, #16]
 801f250:	4770      	bx	lr
 801f252:	b570      	push	{r4, r5, r6, lr}
 801f254:	b082      	sub	sp, #8
 801f256:	ab01      	add	r3, sp, #4
 801f258:	466a      	mov	r2, sp
 801f25a:	460c      	mov	r4, r1
 801f25c:	4605      	mov	r5, r0
 801f25e:	f7ff ffbf 	bl	801f1e0 <__swhatbuf_r>
 801f262:	9900      	ldr	r1, [sp, #0]
 801f264:	4606      	mov	r6, r0
 801f266:	4628      	mov	r0, r5
 801f268:	f7fc fc00 	bl	801ba6c <_malloc_r>
 801f26c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f270:	b1d8      	cbz	r0, 801f2aa <__smakebuf_r+0x6e>
 801f272:	4916      	ldr	r1, [pc, #88]	; (801f2cc <__smakebuf_r+0x90>)
 801f274:	63e9      	str	r1, [r5, #60]	; 0x3c
 801f276:	9a01      	ldr	r2, [sp, #4]
 801f278:	9900      	ldr	r1, [sp, #0]
 801f27a:	6020      	str	r0, [r4, #0]
 801f27c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801f280:	81a3      	strh	r3, [r4, #12]
 801f282:	e9c4 0104 	strd	r0, r1, [r4, #16]
 801f286:	b91a      	cbnz	r2, 801f290 <__smakebuf_r+0x54>
 801f288:	4333      	orrs	r3, r6
 801f28a:	81a3      	strh	r3, [r4, #12]
 801f28c:	b002      	add	sp, #8
 801f28e:	bd70      	pop	{r4, r5, r6, pc}
 801f290:	4628      	mov	r0, r5
 801f292:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801f296:	f000 fc7d 	bl	801fb94 <_isatty_r>
 801f29a:	b1a0      	cbz	r0, 801f2c6 <__smakebuf_r+0x8a>
 801f29c:	89a3      	ldrh	r3, [r4, #12]
 801f29e:	f023 0303 	bic.w	r3, r3, #3
 801f2a2:	f043 0301 	orr.w	r3, r3, #1
 801f2a6:	b21b      	sxth	r3, r3
 801f2a8:	e7ee      	b.n	801f288 <__smakebuf_r+0x4c>
 801f2aa:	059a      	lsls	r2, r3, #22
 801f2ac:	d4ee      	bmi.n	801f28c <__smakebuf_r+0x50>
 801f2ae:	f023 0303 	bic.w	r3, r3, #3
 801f2b2:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801f2b6:	f043 0302 	orr.w	r3, r3, #2
 801f2ba:	2101      	movs	r1, #1
 801f2bc:	81a3      	strh	r3, [r4, #12]
 801f2be:	6022      	str	r2, [r4, #0]
 801f2c0:	e9c4 2104 	strd	r2, r1, [r4, #16]
 801f2c4:	e7e2      	b.n	801f28c <__smakebuf_r+0x50>
 801f2c6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f2ca:	e7dd      	b.n	801f288 <__smakebuf_r+0x4c>
 801f2cc:	0801ee6d 	.word	0x0801ee6d

0801f2d0 <_Balloc>:
 801f2d0:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 801f2d2:	b570      	push	{r4, r5, r6, lr}
 801f2d4:	4605      	mov	r5, r0
 801f2d6:	460c      	mov	r4, r1
 801f2d8:	b14b      	cbz	r3, 801f2ee <_Balloc+0x1e>
 801f2da:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 801f2de:	b180      	cbz	r0, 801f302 <_Balloc+0x32>
 801f2e0:	6802      	ldr	r2, [r0, #0]
 801f2e2:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 801f2e6:	2300      	movs	r3, #0
 801f2e8:	e9c0 3303 	strd	r3, r3, [r0, #12]
 801f2ec:	bd70      	pop	{r4, r5, r6, pc}
 801f2ee:	2221      	movs	r2, #33	; 0x21
 801f2f0:	2104      	movs	r1, #4
 801f2f2:	f7fc f917 	bl	801b524 <_calloc_r>
 801f2f6:	4603      	mov	r3, r0
 801f2f8:	64e8      	str	r0, [r5, #76]	; 0x4c
 801f2fa:	2800      	cmp	r0, #0
 801f2fc:	d1ed      	bne.n	801f2da <_Balloc+0xa>
 801f2fe:	2000      	movs	r0, #0
 801f300:	bd70      	pop	{r4, r5, r6, pc}
 801f302:	2101      	movs	r1, #1
 801f304:	fa01 f604 	lsl.w	r6, r1, r4
 801f308:	1d72      	adds	r2, r6, #5
 801f30a:	4628      	mov	r0, r5
 801f30c:	0092      	lsls	r2, r2, #2
 801f30e:	f7fc f909 	bl	801b524 <_calloc_r>
 801f312:	2800      	cmp	r0, #0
 801f314:	d0f3      	beq.n	801f2fe <_Balloc+0x2e>
 801f316:	e9c0 4601 	strd	r4, r6, [r0, #4]
 801f31a:	e7e4      	b.n	801f2e6 <_Balloc+0x16>

0801f31c <_Bfree>:
 801f31c:	b131      	cbz	r1, 801f32c <_Bfree+0x10>
 801f31e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 801f320:	684a      	ldr	r2, [r1, #4]
 801f322:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801f326:	6008      	str	r0, [r1, #0]
 801f328:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 801f32c:	4770      	bx	lr
 801f32e:	bf00      	nop

0801f330 <__multadd>:
 801f330:	b5f0      	push	{r4, r5, r6, r7, lr}
 801f332:	690c      	ldr	r4, [r1, #16]
 801f334:	b083      	sub	sp, #12
 801f336:	460d      	mov	r5, r1
 801f338:	4606      	mov	r6, r0
 801f33a:	f101 0c14 	add.w	ip, r1, #20
 801f33e:	2700      	movs	r7, #0
 801f340:	f8dc 0000 	ldr.w	r0, [ip]
 801f344:	b281      	uxth	r1, r0
 801f346:	fb02 3301 	mla	r3, r2, r1, r3
 801f34a:	0c01      	lsrs	r1, r0, #16
 801f34c:	0c18      	lsrs	r0, r3, #16
 801f34e:	fb02 0101 	mla	r1, r2, r1, r0
 801f352:	b29b      	uxth	r3, r3
 801f354:	3701      	adds	r7, #1
 801f356:	eb03 4301 	add.w	r3, r3, r1, lsl #16
 801f35a:	42bc      	cmp	r4, r7
 801f35c:	f84c 3b04 	str.w	r3, [ip], #4
 801f360:	ea4f 4311 	mov.w	r3, r1, lsr #16
 801f364:	dcec      	bgt.n	801f340 <__multadd+0x10>
 801f366:	b13b      	cbz	r3, 801f378 <__multadd+0x48>
 801f368:	68aa      	ldr	r2, [r5, #8]
 801f36a:	42a2      	cmp	r2, r4
 801f36c:	dd07      	ble.n	801f37e <__multadd+0x4e>
 801f36e:	eb05 0284 	add.w	r2, r5, r4, lsl #2
 801f372:	3401      	adds	r4, #1
 801f374:	6153      	str	r3, [r2, #20]
 801f376:	612c      	str	r4, [r5, #16]
 801f378:	4628      	mov	r0, r5
 801f37a:	b003      	add	sp, #12
 801f37c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801f37e:	6869      	ldr	r1, [r5, #4]
 801f380:	9301      	str	r3, [sp, #4]
 801f382:	3101      	adds	r1, #1
 801f384:	4630      	mov	r0, r6
 801f386:	f7ff ffa3 	bl	801f2d0 <_Balloc>
 801f38a:	692a      	ldr	r2, [r5, #16]
 801f38c:	3202      	adds	r2, #2
 801f38e:	f105 010c 	add.w	r1, r5, #12
 801f392:	4607      	mov	r7, r0
 801f394:	0092      	lsls	r2, r2, #2
 801f396:	300c      	adds	r0, #12
 801f398:	f7e9 ff8a 	bl	80092b0 <memcpy>
 801f39c:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
 801f39e:	6869      	ldr	r1, [r5, #4]
 801f3a0:	9b01      	ldr	r3, [sp, #4]
 801f3a2:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 801f3a6:	6028      	str	r0, [r5, #0]
 801f3a8:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
 801f3ac:	463d      	mov	r5, r7
 801f3ae:	e7de      	b.n	801f36e <__multadd+0x3e>

0801f3b0 <__hi0bits>:
 801f3b0:	0c02      	lsrs	r2, r0, #16
 801f3b2:	0412      	lsls	r2, r2, #16
 801f3b4:	4603      	mov	r3, r0
 801f3b6:	b9c2      	cbnz	r2, 801f3ea <__hi0bits+0x3a>
 801f3b8:	0403      	lsls	r3, r0, #16
 801f3ba:	2010      	movs	r0, #16
 801f3bc:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 801f3c0:	bf04      	itt	eq
 801f3c2:	021b      	lsleq	r3, r3, #8
 801f3c4:	3008      	addeq	r0, #8
 801f3c6:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801f3ca:	bf04      	itt	eq
 801f3cc:	011b      	lsleq	r3, r3, #4
 801f3ce:	3004      	addeq	r0, #4
 801f3d0:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801f3d4:	bf04      	itt	eq
 801f3d6:	009b      	lsleq	r3, r3, #2
 801f3d8:	3002      	addeq	r0, #2
 801f3da:	2b00      	cmp	r3, #0
 801f3dc:	db04      	blt.n	801f3e8 <__hi0bits+0x38>
 801f3de:	005b      	lsls	r3, r3, #1
 801f3e0:	d501      	bpl.n	801f3e6 <__hi0bits+0x36>
 801f3e2:	3001      	adds	r0, #1
 801f3e4:	4770      	bx	lr
 801f3e6:	2020      	movs	r0, #32
 801f3e8:	4770      	bx	lr
 801f3ea:	2000      	movs	r0, #0
 801f3ec:	e7e6      	b.n	801f3bc <__hi0bits+0xc>
 801f3ee:	bf00      	nop

0801f3f0 <__lo0bits>:
 801f3f0:	6803      	ldr	r3, [r0, #0]
 801f3f2:	f013 0207 	ands.w	r2, r3, #7
 801f3f6:	4601      	mov	r1, r0
 801f3f8:	d007      	beq.n	801f40a <__lo0bits+0x1a>
 801f3fa:	07da      	lsls	r2, r3, #31
 801f3fc:	d41f      	bmi.n	801f43e <__lo0bits+0x4e>
 801f3fe:	0798      	lsls	r0, r3, #30
 801f400:	d51f      	bpl.n	801f442 <__lo0bits+0x52>
 801f402:	085b      	lsrs	r3, r3, #1
 801f404:	600b      	str	r3, [r1, #0]
 801f406:	2001      	movs	r0, #1
 801f408:	4770      	bx	lr
 801f40a:	b298      	uxth	r0, r3
 801f40c:	b1a0      	cbz	r0, 801f438 <__lo0bits+0x48>
 801f40e:	4610      	mov	r0, r2
 801f410:	f013 0fff 	tst.w	r3, #255	; 0xff
 801f414:	bf04      	itt	eq
 801f416:	0a1b      	lsreq	r3, r3, #8
 801f418:	3008      	addeq	r0, #8
 801f41a:	071a      	lsls	r2, r3, #28
 801f41c:	bf04      	itt	eq
 801f41e:	091b      	lsreq	r3, r3, #4
 801f420:	3004      	addeq	r0, #4
 801f422:	079a      	lsls	r2, r3, #30
 801f424:	bf04      	itt	eq
 801f426:	089b      	lsreq	r3, r3, #2
 801f428:	3002      	addeq	r0, #2
 801f42a:	07da      	lsls	r2, r3, #31
 801f42c:	d402      	bmi.n	801f434 <__lo0bits+0x44>
 801f42e:	085b      	lsrs	r3, r3, #1
 801f430:	d00b      	beq.n	801f44a <__lo0bits+0x5a>
 801f432:	3001      	adds	r0, #1
 801f434:	600b      	str	r3, [r1, #0]
 801f436:	4770      	bx	lr
 801f438:	0c1b      	lsrs	r3, r3, #16
 801f43a:	2010      	movs	r0, #16
 801f43c:	e7e8      	b.n	801f410 <__lo0bits+0x20>
 801f43e:	2000      	movs	r0, #0
 801f440:	4770      	bx	lr
 801f442:	089b      	lsrs	r3, r3, #2
 801f444:	600b      	str	r3, [r1, #0]
 801f446:	2002      	movs	r0, #2
 801f448:	4770      	bx	lr
 801f44a:	2020      	movs	r0, #32
 801f44c:	4770      	bx	lr
 801f44e:	bf00      	nop

0801f450 <__i2b>:
 801f450:	b510      	push	{r4, lr}
 801f452:	460c      	mov	r4, r1
 801f454:	2101      	movs	r1, #1
 801f456:	f7ff ff3b 	bl	801f2d0 <_Balloc>
 801f45a:	2201      	movs	r2, #1
 801f45c:	e9c0 2404 	strd	r2, r4, [r0, #16]
 801f460:	bd10      	pop	{r4, pc}
 801f462:	bf00      	nop

0801f464 <__multiply>:
 801f464:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f468:	690e      	ldr	r6, [r1, #16]
 801f46a:	6914      	ldr	r4, [r2, #16]
 801f46c:	42a6      	cmp	r6, r4
 801f46e:	b083      	sub	sp, #12
 801f470:	460f      	mov	r7, r1
 801f472:	4615      	mov	r5, r2
 801f474:	da04      	bge.n	801f480 <__multiply+0x1c>
 801f476:	4632      	mov	r2, r6
 801f478:	462f      	mov	r7, r5
 801f47a:	4626      	mov	r6, r4
 801f47c:	460d      	mov	r5, r1
 801f47e:	4614      	mov	r4, r2
 801f480:	e9d7 1301 	ldrd	r1, r3, [r7, #4]
 801f484:	eb06 0804 	add.w	r8, r6, r4
 801f488:	4543      	cmp	r3, r8
 801f48a:	bfb8      	it	lt
 801f48c:	3101      	addlt	r1, #1
 801f48e:	f7ff ff1f 	bl	801f2d0 <_Balloc>
 801f492:	f100 0914 	add.w	r9, r0, #20
 801f496:	eb09 0e88 	add.w	lr, r9, r8, lsl #2
 801f49a:	45f1      	cmp	r9, lr
 801f49c:	9000      	str	r0, [sp, #0]
 801f49e:	d205      	bcs.n	801f4ac <__multiply+0x48>
 801f4a0:	464b      	mov	r3, r9
 801f4a2:	2200      	movs	r2, #0
 801f4a4:	f843 2b04 	str.w	r2, [r3], #4
 801f4a8:	459e      	cmp	lr, r3
 801f4aa:	d8fb      	bhi.n	801f4a4 <__multiply+0x40>
 801f4ac:	f105 0a14 	add.w	sl, r5, #20
 801f4b0:	eb0a 0484 	add.w	r4, sl, r4, lsl #2
 801f4b4:	f107 0314 	add.w	r3, r7, #20
 801f4b8:	45a2      	cmp	sl, r4
 801f4ba:	eb03 0c86 	add.w	ip, r3, r6, lsl #2
 801f4be:	d261      	bcs.n	801f584 <__multiply+0x120>
 801f4c0:	1b64      	subs	r4, r4, r5
 801f4c2:	3c15      	subs	r4, #21
 801f4c4:	f024 0403 	bic.w	r4, r4, #3
 801f4c8:	f8cd e004 	str.w	lr, [sp, #4]
 801f4cc:	44a2      	add	sl, r4
 801f4ce:	f105 0210 	add.w	r2, r5, #16
 801f4d2:	469e      	mov	lr, r3
 801f4d4:	e005      	b.n	801f4e2 <__multiply+0x7e>
 801f4d6:	0c2d      	lsrs	r5, r5, #16
 801f4d8:	d12b      	bne.n	801f532 <__multiply+0xce>
 801f4da:	4592      	cmp	sl, r2
 801f4dc:	f109 0904 	add.w	r9, r9, #4
 801f4e0:	d04e      	beq.n	801f580 <__multiply+0x11c>
 801f4e2:	f852 5f04 	ldr.w	r5, [r2, #4]!
 801f4e6:	fa1f fb85 	uxth.w	fp, r5
 801f4ea:	f1bb 0f00 	cmp.w	fp, #0
 801f4ee:	d0f2      	beq.n	801f4d6 <__multiply+0x72>
 801f4f0:	4677      	mov	r7, lr
 801f4f2:	464e      	mov	r6, r9
 801f4f4:	2000      	movs	r0, #0
 801f4f6:	e000      	b.n	801f4fa <__multiply+0x96>
 801f4f8:	4626      	mov	r6, r4
 801f4fa:	f857 1b04 	ldr.w	r1, [r7], #4
 801f4fe:	6834      	ldr	r4, [r6, #0]
 801f500:	b28b      	uxth	r3, r1
 801f502:	b2a5      	uxth	r5, r4
 801f504:	0c09      	lsrs	r1, r1, #16
 801f506:	0c24      	lsrs	r4, r4, #16
 801f508:	fb0b 5303 	mla	r3, fp, r3, r5
 801f50c:	4403      	add	r3, r0
 801f50e:	fb0b 4001 	mla	r0, fp, r1, r4
 801f512:	eb00 4013 	add.w	r0, r0, r3, lsr #16
 801f516:	4634      	mov	r4, r6
 801f518:	b29b      	uxth	r3, r3
 801f51a:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 801f51e:	45bc      	cmp	ip, r7
 801f520:	ea4f 4010 	mov.w	r0, r0, lsr #16
 801f524:	f844 3b04 	str.w	r3, [r4], #4
 801f528:	d8e6      	bhi.n	801f4f8 <__multiply+0x94>
 801f52a:	6070      	str	r0, [r6, #4]
 801f52c:	6815      	ldr	r5, [r2, #0]
 801f52e:	0c2d      	lsrs	r5, r5, #16
 801f530:	d0d3      	beq.n	801f4da <__multiply+0x76>
 801f532:	f8d9 3000 	ldr.w	r3, [r9]
 801f536:	4676      	mov	r6, lr
 801f538:	4618      	mov	r0, r3
 801f53a:	46cb      	mov	fp, r9
 801f53c:	2100      	movs	r1, #0
 801f53e:	e000      	b.n	801f542 <__multiply+0xde>
 801f540:	46a3      	mov	fp, r4
 801f542:	8834      	ldrh	r4, [r6, #0]
 801f544:	0c00      	lsrs	r0, r0, #16
 801f546:	fb05 0004 	mla	r0, r5, r4, r0
 801f54a:	4401      	add	r1, r0
 801f54c:	b29b      	uxth	r3, r3
 801f54e:	465c      	mov	r4, fp
 801f550:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801f554:	f844 3b04 	str.w	r3, [r4], #4
 801f558:	f856 3b04 	ldr.w	r3, [r6], #4
 801f55c:	f8db 0004 	ldr.w	r0, [fp, #4]
 801f560:	0c1b      	lsrs	r3, r3, #16
 801f562:	b287      	uxth	r7, r0
 801f564:	fb05 7303 	mla	r3, r5, r3, r7
 801f568:	eb03 4311 	add.w	r3, r3, r1, lsr #16
 801f56c:	45b4      	cmp	ip, r6
 801f56e:	ea4f 4113 	mov.w	r1, r3, lsr #16
 801f572:	d8e5      	bhi.n	801f540 <__multiply+0xdc>
 801f574:	4592      	cmp	sl, r2
 801f576:	f8cb 3004 	str.w	r3, [fp, #4]
 801f57a:	f109 0904 	add.w	r9, r9, #4
 801f57e:	d1b0      	bne.n	801f4e2 <__multiply+0x7e>
 801f580:	f8dd e004 	ldr.w	lr, [sp, #4]
 801f584:	f1b8 0f00 	cmp.w	r8, #0
 801f588:	dd0b      	ble.n	801f5a2 <__multiply+0x13e>
 801f58a:	f85e 3c04 	ldr.w	r3, [lr, #-4]
 801f58e:	f1ae 0e04 	sub.w	lr, lr, #4
 801f592:	b11b      	cbz	r3, 801f59c <__multiply+0x138>
 801f594:	e005      	b.n	801f5a2 <__multiply+0x13e>
 801f596:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 801f59a:	b913      	cbnz	r3, 801f5a2 <__multiply+0x13e>
 801f59c:	f1b8 0801 	subs.w	r8, r8, #1
 801f5a0:	d1f9      	bne.n	801f596 <__multiply+0x132>
 801f5a2:	9800      	ldr	r0, [sp, #0]
 801f5a4:	f8c0 8010 	str.w	r8, [r0, #16]
 801f5a8:	b003      	add	sp, #12
 801f5aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f5ae:	bf00      	nop

0801f5b0 <__pow5mult>:
 801f5b0:	f012 0303 	ands.w	r3, r2, #3
 801f5b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801f5b8:	4614      	mov	r4, r2
 801f5ba:	4607      	mov	r7, r0
 801f5bc:	d12e      	bne.n	801f61c <__pow5mult+0x6c>
 801f5be:	460d      	mov	r5, r1
 801f5c0:	10a4      	asrs	r4, r4, #2
 801f5c2:	d01c      	beq.n	801f5fe <__pow5mult+0x4e>
 801f5c4:	6cbe      	ldr	r6, [r7, #72]	; 0x48
 801f5c6:	b396      	cbz	r6, 801f62e <__pow5mult+0x7e>
 801f5c8:	07e3      	lsls	r3, r4, #31
 801f5ca:	f04f 0800 	mov.w	r8, #0
 801f5ce:	d406      	bmi.n	801f5de <__pow5mult+0x2e>
 801f5d0:	1064      	asrs	r4, r4, #1
 801f5d2:	d014      	beq.n	801f5fe <__pow5mult+0x4e>
 801f5d4:	6830      	ldr	r0, [r6, #0]
 801f5d6:	b1a8      	cbz	r0, 801f604 <__pow5mult+0x54>
 801f5d8:	4606      	mov	r6, r0
 801f5da:	07e3      	lsls	r3, r4, #31
 801f5dc:	d5f8      	bpl.n	801f5d0 <__pow5mult+0x20>
 801f5de:	4632      	mov	r2, r6
 801f5e0:	4629      	mov	r1, r5
 801f5e2:	4638      	mov	r0, r7
 801f5e4:	f7ff ff3e 	bl	801f464 <__multiply>
 801f5e8:	b1b5      	cbz	r5, 801f618 <__pow5mult+0x68>
 801f5ea:	686a      	ldr	r2, [r5, #4]
 801f5ec:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 801f5ee:	1064      	asrs	r4, r4, #1
 801f5f0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801f5f4:	6029      	str	r1, [r5, #0]
 801f5f6:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 801f5fa:	4605      	mov	r5, r0
 801f5fc:	d1ea      	bne.n	801f5d4 <__pow5mult+0x24>
 801f5fe:	4628      	mov	r0, r5
 801f600:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801f604:	4632      	mov	r2, r6
 801f606:	4631      	mov	r1, r6
 801f608:	4638      	mov	r0, r7
 801f60a:	f7ff ff2b 	bl	801f464 <__multiply>
 801f60e:	6030      	str	r0, [r6, #0]
 801f610:	f8c0 8000 	str.w	r8, [r0]
 801f614:	4606      	mov	r6, r0
 801f616:	e7e0      	b.n	801f5da <__pow5mult+0x2a>
 801f618:	4605      	mov	r5, r0
 801f61a:	e7d9      	b.n	801f5d0 <__pow5mult+0x20>
 801f61c:	3b01      	subs	r3, #1
 801f61e:	4a0b      	ldr	r2, [pc, #44]	; (801f64c <__pow5mult+0x9c>)
 801f620:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 801f624:	2300      	movs	r3, #0
 801f626:	f7ff fe83 	bl	801f330 <__multadd>
 801f62a:	4605      	mov	r5, r0
 801f62c:	e7c8      	b.n	801f5c0 <__pow5mult+0x10>
 801f62e:	2101      	movs	r1, #1
 801f630:	4638      	mov	r0, r7
 801f632:	f7ff fe4d 	bl	801f2d0 <_Balloc>
 801f636:	f240 2371 	movw	r3, #625	; 0x271
 801f63a:	6143      	str	r3, [r0, #20]
 801f63c:	2201      	movs	r2, #1
 801f63e:	2300      	movs	r3, #0
 801f640:	6102      	str	r2, [r0, #16]
 801f642:	4606      	mov	r6, r0
 801f644:	64b8      	str	r0, [r7, #72]	; 0x48
 801f646:	6003      	str	r3, [r0, #0]
 801f648:	e7be      	b.n	801f5c8 <__pow5mult+0x18>
 801f64a:	bf00      	nop
 801f64c:	08027798 	.word	0x08027798

0801f650 <__lshift>:
 801f650:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f654:	4691      	mov	r9, r2
 801f656:	690a      	ldr	r2, [r1, #16]
 801f658:	460e      	mov	r6, r1
 801f65a:	ea4f 1469 	mov.w	r4, r9, asr #5
 801f65e:	e9d1 1301 	ldrd	r1, r3, [r1, #4]
 801f662:	eb04 0802 	add.w	r8, r4, r2
 801f666:	f108 0501 	add.w	r5, r8, #1
 801f66a:	429d      	cmp	r5, r3
 801f66c:	4607      	mov	r7, r0
 801f66e:	dd04      	ble.n	801f67a <__lshift+0x2a>
 801f670:	005b      	lsls	r3, r3, #1
 801f672:	429d      	cmp	r5, r3
 801f674:	f101 0101 	add.w	r1, r1, #1
 801f678:	dcfa      	bgt.n	801f670 <__lshift+0x20>
 801f67a:	4638      	mov	r0, r7
 801f67c:	f7ff fe28 	bl	801f2d0 <_Balloc>
 801f680:	2c00      	cmp	r4, #0
 801f682:	f100 0314 	add.w	r3, r0, #20
 801f686:	dd37      	ble.n	801f6f8 <__lshift+0xa8>
 801f688:	eb03 0184 	add.w	r1, r3, r4, lsl #2
 801f68c:	2200      	movs	r2, #0
 801f68e:	f843 2b04 	str.w	r2, [r3], #4
 801f692:	428b      	cmp	r3, r1
 801f694:	d1fb      	bne.n	801f68e <__lshift+0x3e>
 801f696:	6934      	ldr	r4, [r6, #16]
 801f698:	f106 0314 	add.w	r3, r6, #20
 801f69c:	f019 091f 	ands.w	r9, r9, #31
 801f6a0:	eb03 0c84 	add.w	ip, r3, r4, lsl #2
 801f6a4:	d020      	beq.n	801f6e8 <__lshift+0x98>
 801f6a6:	f1c9 0e20 	rsb	lr, r9, #32
 801f6aa:	2200      	movs	r2, #0
 801f6ac:	e000      	b.n	801f6b0 <__lshift+0x60>
 801f6ae:	4651      	mov	r1, sl
 801f6b0:	681c      	ldr	r4, [r3, #0]
 801f6b2:	468a      	mov	sl, r1
 801f6b4:	fa04 f409 	lsl.w	r4, r4, r9
 801f6b8:	4314      	orrs	r4, r2
 801f6ba:	f84a 4b04 	str.w	r4, [sl], #4
 801f6be:	f853 2b04 	ldr.w	r2, [r3], #4
 801f6c2:	4563      	cmp	r3, ip
 801f6c4:	fa22 f20e 	lsr.w	r2, r2, lr
 801f6c8:	d3f1      	bcc.n	801f6ae <__lshift+0x5e>
 801f6ca:	604a      	str	r2, [r1, #4]
 801f6cc:	b10a      	cbz	r2, 801f6d2 <__lshift+0x82>
 801f6ce:	f108 0502 	add.w	r5, r8, #2
 801f6d2:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 801f6d4:	6872      	ldr	r2, [r6, #4]
 801f6d6:	3d01      	subs	r5, #1
 801f6d8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801f6dc:	6105      	str	r5, [r0, #16]
 801f6de:	6031      	str	r1, [r6, #0]
 801f6e0:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
 801f6e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f6e8:	3904      	subs	r1, #4
 801f6ea:	f853 2b04 	ldr.w	r2, [r3], #4
 801f6ee:	f841 2f04 	str.w	r2, [r1, #4]!
 801f6f2:	459c      	cmp	ip, r3
 801f6f4:	d8f9      	bhi.n	801f6ea <__lshift+0x9a>
 801f6f6:	e7ec      	b.n	801f6d2 <__lshift+0x82>
 801f6f8:	4619      	mov	r1, r3
 801f6fa:	e7cc      	b.n	801f696 <__lshift+0x46>

0801f6fc <__mcmp>:
 801f6fc:	b430      	push	{r4, r5}
 801f6fe:	690b      	ldr	r3, [r1, #16]
 801f700:	4605      	mov	r5, r0
 801f702:	6900      	ldr	r0, [r0, #16]
 801f704:	1ac0      	subs	r0, r0, r3
 801f706:	d10f      	bne.n	801f728 <__mcmp+0x2c>
 801f708:	009b      	lsls	r3, r3, #2
 801f70a:	3514      	adds	r5, #20
 801f70c:	3114      	adds	r1, #20
 801f70e:	4419      	add	r1, r3
 801f710:	442b      	add	r3, r5
 801f712:	e001      	b.n	801f718 <__mcmp+0x1c>
 801f714:	429d      	cmp	r5, r3
 801f716:	d207      	bcs.n	801f728 <__mcmp+0x2c>
 801f718:	f853 4d04 	ldr.w	r4, [r3, #-4]!
 801f71c:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 801f720:	4294      	cmp	r4, r2
 801f722:	d0f7      	beq.n	801f714 <__mcmp+0x18>
 801f724:	d302      	bcc.n	801f72c <__mcmp+0x30>
 801f726:	2001      	movs	r0, #1
 801f728:	bc30      	pop	{r4, r5}
 801f72a:	4770      	bx	lr
 801f72c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801f730:	e7fa      	b.n	801f728 <__mcmp+0x2c>
 801f732:	bf00      	nop

0801f734 <__mdiff>:
 801f734:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801f738:	6913      	ldr	r3, [r2, #16]
 801f73a:	690d      	ldr	r5, [r1, #16]
 801f73c:	1aed      	subs	r5, r5, r3
 801f73e:	2d00      	cmp	r5, #0
 801f740:	460e      	mov	r6, r1
 801f742:	4690      	mov	r8, r2
 801f744:	f101 0414 	add.w	r4, r1, #20
 801f748:	f102 0714 	add.w	r7, r2, #20
 801f74c:	d114      	bne.n	801f778 <__mdiff+0x44>
 801f74e:	009b      	lsls	r3, r3, #2
 801f750:	18e2      	adds	r2, r4, r3
 801f752:	443b      	add	r3, r7
 801f754:	e001      	b.n	801f75a <__mdiff+0x26>
 801f756:	42a2      	cmp	r2, r4
 801f758:	d959      	bls.n	801f80e <__mdiff+0xda>
 801f75a:	f852 cd04 	ldr.w	ip, [r2, #-4]!
 801f75e:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 801f762:	458c      	cmp	ip, r1
 801f764:	d0f7      	beq.n	801f756 <__mdiff+0x22>
 801f766:	d209      	bcs.n	801f77c <__mdiff+0x48>
 801f768:	4622      	mov	r2, r4
 801f76a:	4633      	mov	r3, r6
 801f76c:	463c      	mov	r4, r7
 801f76e:	4646      	mov	r6, r8
 801f770:	4617      	mov	r7, r2
 801f772:	4698      	mov	r8, r3
 801f774:	2501      	movs	r5, #1
 801f776:	e001      	b.n	801f77c <__mdiff+0x48>
 801f778:	dbf6      	blt.n	801f768 <__mdiff+0x34>
 801f77a:	2500      	movs	r5, #0
 801f77c:	6871      	ldr	r1, [r6, #4]
 801f77e:	f7ff fda7 	bl	801f2d0 <_Balloc>
 801f782:	f8d8 3010 	ldr.w	r3, [r8, #16]
 801f786:	6936      	ldr	r6, [r6, #16]
 801f788:	60c5      	str	r5, [r0, #12]
 801f78a:	eb07 0e83 	add.w	lr, r7, r3, lsl #2
 801f78e:	46bc      	mov	ip, r7
 801f790:	f100 0514 	add.w	r5, r0, #20
 801f794:	eb04 0786 	add.w	r7, r4, r6, lsl #2
 801f798:	2300      	movs	r3, #0
 801f79a:	f85c 1b04 	ldr.w	r1, [ip], #4
 801f79e:	f854 8b04 	ldr.w	r8, [r4], #4
 801f7a2:	b28a      	uxth	r2, r1
 801f7a4:	fa13 f388 	uxtah	r3, r3, r8
 801f7a8:	0c09      	lsrs	r1, r1, #16
 801f7aa:	1a9a      	subs	r2, r3, r2
 801f7ac:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
 801f7b0:	eb03 4322 	add.w	r3, r3, r2, asr #16
 801f7b4:	b292      	uxth	r2, r2
 801f7b6:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 801f7ba:	45e6      	cmp	lr, ip
 801f7bc:	f845 2b04 	str.w	r2, [r5], #4
 801f7c0:	ea4f 4323 	mov.w	r3, r3, asr #16
 801f7c4:	d8e9      	bhi.n	801f79a <__mdiff+0x66>
 801f7c6:	42a7      	cmp	r7, r4
 801f7c8:	d917      	bls.n	801f7fa <__mdiff+0xc6>
 801f7ca:	46ae      	mov	lr, r5
 801f7cc:	46a4      	mov	ip, r4
 801f7ce:	f85c 2b04 	ldr.w	r2, [ip], #4
 801f7d2:	fa13 f382 	uxtah	r3, r3, r2
 801f7d6:	1419      	asrs	r1, r3, #16
 801f7d8:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 801f7dc:	b29b      	uxth	r3, r3
 801f7de:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
 801f7e2:	4567      	cmp	r7, ip
 801f7e4:	f84e 2b04 	str.w	r2, [lr], #4
 801f7e8:	ea4f 4321 	mov.w	r3, r1, asr #16
 801f7ec:	d8ef      	bhi.n	801f7ce <__mdiff+0x9a>
 801f7ee:	43e4      	mvns	r4, r4
 801f7f0:	4427      	add	r7, r4
 801f7f2:	f027 0703 	bic.w	r7, r7, #3
 801f7f6:	3704      	adds	r7, #4
 801f7f8:	443d      	add	r5, r7
 801f7fa:	3d04      	subs	r5, #4
 801f7fc:	b922      	cbnz	r2, 801f808 <__mdiff+0xd4>
 801f7fe:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 801f802:	3e01      	subs	r6, #1
 801f804:	2b00      	cmp	r3, #0
 801f806:	d0fa      	beq.n	801f7fe <__mdiff+0xca>
 801f808:	6106      	str	r6, [r0, #16]
 801f80a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801f80e:	2100      	movs	r1, #0
 801f810:	f7ff fd5e 	bl	801f2d0 <_Balloc>
 801f814:	2201      	movs	r2, #1
 801f816:	2300      	movs	r3, #0
 801f818:	e9c0 2304 	strd	r2, r3, [r0, #16]
 801f81c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801f820 <__d2b>:
 801f820:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801f824:	2101      	movs	r1, #1
 801f826:	b082      	sub	sp, #8
 801f828:	461c      	mov	r4, r3
 801f82a:	4690      	mov	r8, r2
 801f82c:	e9dd 6508 	ldrd	r6, r5, [sp, #32]
 801f830:	f7ff fd4e 	bl	801f2d0 <_Balloc>
 801f834:	4623      	mov	r3, r4
 801f836:	f3c4 540a 	ubfx	r4, r4, #20, #11
 801f83a:	4607      	mov	r7, r0
 801f83c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 801f840:	b10c      	cbz	r4, 801f846 <__d2b+0x26>
 801f842:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 801f846:	f1b8 0200 	subs.w	r2, r8, #0
 801f84a:	9301      	str	r3, [sp, #4]
 801f84c:	d01f      	beq.n	801f88e <__d2b+0x6e>
 801f84e:	a802      	add	r0, sp, #8
 801f850:	f840 2d08 	str.w	r2, [r0, #-8]!
 801f854:	f7ff fdcc 	bl	801f3f0 <__lo0bits>
 801f858:	2800      	cmp	r0, #0
 801f85a:	d12d      	bne.n	801f8b8 <__d2b+0x98>
 801f85c:	e9dd 2300 	ldrd	r2, r3, [sp]
 801f860:	617a      	str	r2, [r7, #20]
 801f862:	2b00      	cmp	r3, #0
 801f864:	bf0c      	ite	eq
 801f866:	2101      	moveq	r1, #1
 801f868:	2102      	movne	r1, #2
 801f86a:	61bb      	str	r3, [r7, #24]
 801f86c:	6139      	str	r1, [r7, #16]
 801f86e:	b9c4      	cbnz	r4, 801f8a2 <__d2b+0x82>
 801f870:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 801f874:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 801f878:	6030      	str	r0, [r6, #0]
 801f87a:	6918      	ldr	r0, [r3, #16]
 801f87c:	f7ff fd98 	bl	801f3b0 <__hi0bits>
 801f880:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 801f884:	6028      	str	r0, [r5, #0]
 801f886:	4638      	mov	r0, r7
 801f888:	b002      	add	sp, #8
 801f88a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801f88e:	a801      	add	r0, sp, #4
 801f890:	f7ff fdae 	bl	801f3f0 <__lo0bits>
 801f894:	9b01      	ldr	r3, [sp, #4]
 801f896:	617b      	str	r3, [r7, #20]
 801f898:	2101      	movs	r1, #1
 801f89a:	3020      	adds	r0, #32
 801f89c:	6139      	str	r1, [r7, #16]
 801f89e:	2c00      	cmp	r4, #0
 801f8a0:	d0e6      	beq.n	801f870 <__d2b+0x50>
 801f8a2:	f2a4 4333 	subw	r3, r4, #1075	; 0x433
 801f8a6:	4403      	add	r3, r0
 801f8a8:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 801f8ac:	6033      	str	r3, [r6, #0]
 801f8ae:	6028      	str	r0, [r5, #0]
 801f8b0:	4638      	mov	r0, r7
 801f8b2:	b002      	add	sp, #8
 801f8b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801f8b8:	e9dd 1300 	ldrd	r1, r3, [sp]
 801f8bc:	f1c0 0220 	rsb	r2, r0, #32
 801f8c0:	fa03 f202 	lsl.w	r2, r3, r2
 801f8c4:	430a      	orrs	r2, r1
 801f8c6:	40c3      	lsrs	r3, r0
 801f8c8:	9301      	str	r3, [sp, #4]
 801f8ca:	617a      	str	r2, [r7, #20]
 801f8cc:	e7c9      	b.n	801f862 <__d2b+0x42>
 801f8ce:	bf00      	nop

0801f8d0 <__sread>:
 801f8d0:	b510      	push	{r4, lr}
 801f8d2:	460c      	mov	r4, r1
 801f8d4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801f8d8:	f000 f99a 	bl	801fc10 <_read_r>
 801f8dc:	2800      	cmp	r0, #0
 801f8de:	db03      	blt.n	801f8e8 <__sread+0x18>
 801f8e0:	6d23      	ldr	r3, [r4, #80]	; 0x50
 801f8e2:	4403      	add	r3, r0
 801f8e4:	6523      	str	r3, [r4, #80]	; 0x50
 801f8e6:	bd10      	pop	{r4, pc}
 801f8e8:	89a3      	ldrh	r3, [r4, #12]
 801f8ea:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801f8ee:	81a3      	strh	r3, [r4, #12]
 801f8f0:	bd10      	pop	{r4, pc}
 801f8f2:	bf00      	nop

0801f8f4 <__swrite>:
 801f8f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801f8f8:	4616      	mov	r6, r2
 801f8fa:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 801f8fe:	461f      	mov	r7, r3
 801f900:	05d3      	lsls	r3, r2, #23
 801f902:	460c      	mov	r4, r1
 801f904:	4605      	mov	r5, r0
 801f906:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801f90a:	d507      	bpl.n	801f91c <__swrite+0x28>
 801f90c:	2200      	movs	r2, #0
 801f90e:	2302      	movs	r3, #2
 801f910:	f000 f952 	bl	801fbb8 <_lseek_r>
 801f914:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801f918:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801f91c:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 801f920:	81a2      	strh	r2, [r4, #12]
 801f922:	463b      	mov	r3, r7
 801f924:	4632      	mov	r2, r6
 801f926:	4628      	mov	r0, r5
 801f928:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801f92c:	f000 b88e 	b.w	801fa4c <_write_r>

0801f930 <__sseek>:
 801f930:	b510      	push	{r4, lr}
 801f932:	460c      	mov	r4, r1
 801f934:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801f938:	f000 f93e 	bl	801fbb8 <_lseek_r>
 801f93c:	89a3      	ldrh	r3, [r4, #12]
 801f93e:	1c42      	adds	r2, r0, #1
 801f940:	bf0e      	itee	eq
 801f942:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801f946:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801f94a:	6520      	strne	r0, [r4, #80]	; 0x50
 801f94c:	81a3      	strh	r3, [r4, #12]
 801f94e:	bd10      	pop	{r4, pc}

0801f950 <__sclose>:
 801f950:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801f954:	f000 b890 	b.w	801fa78 <_close_r>

0801f958 <__ssprint_r>:
 801f958:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f95c:	6893      	ldr	r3, [r2, #8]
 801f95e:	b083      	sub	sp, #12
 801f960:	4690      	mov	r8, r2
 801f962:	2b00      	cmp	r3, #0
 801f964:	d06c      	beq.n	801fa40 <__ssprint_r+0xe8>
 801f966:	6817      	ldr	r7, [r2, #0]
 801f968:	688d      	ldr	r5, [r1, #8]
 801f96a:	4682      	mov	sl, r0
 801f96c:	460c      	mov	r4, r1
 801f96e:	6808      	ldr	r0, [r1, #0]
 801f970:	3708      	adds	r7, #8
 801f972:	e042      	b.n	801f9fa <__ssprint_r+0xa2>
 801f974:	89a3      	ldrh	r3, [r4, #12]
 801f976:	f413 6f90 	tst.w	r3, #1152	; 0x480
 801f97a:	d02d      	beq.n	801f9d8 <__ssprint_r+0x80>
 801f97c:	e9d4 1504 	ldrd	r1, r5, [r4, #16]
 801f980:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f984:	eba0 0b01 	sub.w	fp, r0, r1
 801f988:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 801f98c:	1c70      	adds	r0, r6, #1
 801f98e:	106d      	asrs	r5, r5, #1
 801f990:	4458      	add	r0, fp
 801f992:	42a8      	cmp	r0, r5
 801f994:	462a      	mov	r2, r5
 801f996:	bf84      	itt	hi
 801f998:	4605      	movhi	r5, r0
 801f99a:	462a      	movhi	r2, r5
 801f99c:	055b      	lsls	r3, r3, #21
 801f99e:	d536      	bpl.n	801fa0e <__ssprint_r+0xb6>
 801f9a0:	4611      	mov	r1, r2
 801f9a2:	4650      	mov	r0, sl
 801f9a4:	f7fc f862 	bl	801ba6c <_malloc_r>
 801f9a8:	2800      	cmp	r0, #0
 801f9aa:	d03a      	beq.n	801fa22 <__ssprint_r+0xca>
 801f9ac:	465a      	mov	r2, fp
 801f9ae:	6921      	ldr	r1, [r4, #16]
 801f9b0:	9001      	str	r0, [sp, #4]
 801f9b2:	f7e9 fc7d 	bl	80092b0 <memcpy>
 801f9b6:	89a2      	ldrh	r2, [r4, #12]
 801f9b8:	9b01      	ldr	r3, [sp, #4]
 801f9ba:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 801f9be:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 801f9c2:	81a2      	strh	r2, [r4, #12]
 801f9c4:	eba5 020b 	sub.w	r2, r5, fp
 801f9c8:	eb03 000b 	add.w	r0, r3, fp
 801f9cc:	6165      	str	r5, [r4, #20]
 801f9ce:	6123      	str	r3, [r4, #16]
 801f9d0:	6020      	str	r0, [r4, #0]
 801f9d2:	60a2      	str	r2, [r4, #8]
 801f9d4:	4635      	mov	r5, r6
 801f9d6:	46b3      	mov	fp, r6
 801f9d8:	465a      	mov	r2, fp
 801f9da:	4649      	mov	r1, r9
 801f9dc:	f7fc fb1c 	bl	801c018 <memmove>
 801f9e0:	f8d8 3008 	ldr.w	r3, [r8, #8]
 801f9e4:	68a2      	ldr	r2, [r4, #8]
 801f9e6:	6820      	ldr	r0, [r4, #0]
 801f9e8:	1b55      	subs	r5, r2, r5
 801f9ea:	4458      	add	r0, fp
 801f9ec:	1b9e      	subs	r6, r3, r6
 801f9ee:	60a5      	str	r5, [r4, #8]
 801f9f0:	6020      	str	r0, [r4, #0]
 801f9f2:	f8c8 6008 	str.w	r6, [r8, #8]
 801f9f6:	b31e      	cbz	r6, 801fa40 <__ssprint_r+0xe8>
 801f9f8:	3708      	adds	r7, #8
 801f9fa:	e957 9602 	ldrd	r9, r6, [r7, #-8]
 801f9fe:	46ab      	mov	fp, r5
 801fa00:	2e00      	cmp	r6, #0
 801fa02:	d0f9      	beq.n	801f9f8 <__ssprint_r+0xa0>
 801fa04:	42ae      	cmp	r6, r5
 801fa06:	d2b5      	bcs.n	801f974 <__ssprint_r+0x1c>
 801fa08:	4635      	mov	r5, r6
 801fa0a:	46b3      	mov	fp, r6
 801fa0c:	e7e4      	b.n	801f9d8 <__ssprint_r+0x80>
 801fa0e:	4650      	mov	r0, sl
 801fa10:	f7fc fbfc 	bl	801c20c <_realloc_r>
 801fa14:	4603      	mov	r3, r0
 801fa16:	2800      	cmp	r0, #0
 801fa18:	d1d4      	bne.n	801f9c4 <__ssprint_r+0x6c>
 801fa1a:	6921      	ldr	r1, [r4, #16]
 801fa1c:	4650      	mov	r0, sl
 801fa1e:	f7ff fab3 	bl	801ef88 <_free_r>
 801fa22:	230c      	movs	r3, #12
 801fa24:	f8ca 3000 	str.w	r3, [sl]
 801fa28:	89a3      	ldrh	r3, [r4, #12]
 801fa2a:	2200      	movs	r2, #0
 801fa2c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801fa30:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801fa34:	81a3      	strh	r3, [r4, #12]
 801fa36:	e9c8 2201 	strd	r2, r2, [r8, #4]
 801fa3a:	b003      	add	sp, #12
 801fa3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fa40:	2000      	movs	r0, #0
 801fa42:	f8c8 0004 	str.w	r0, [r8, #4]
 801fa46:	b003      	add	sp, #12
 801fa48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fa4c <_write_r>:
 801fa4c:	b570      	push	{r4, r5, r6, lr}
 801fa4e:	460d      	mov	r5, r1
 801fa50:	4c08      	ldr	r4, [pc, #32]	; (801fa74 <_write_r+0x28>)
 801fa52:	4611      	mov	r1, r2
 801fa54:	4606      	mov	r6, r0
 801fa56:	461a      	mov	r2, r3
 801fa58:	4628      	mov	r0, r5
 801fa5a:	2300      	movs	r3, #0
 801fa5c:	6023      	str	r3, [r4, #0]
 801fa5e:	f7f9 ff6d 	bl	801993c <_write>
 801fa62:	1c43      	adds	r3, r0, #1
 801fa64:	d000      	beq.n	801fa68 <_write_r+0x1c>
 801fa66:	bd70      	pop	{r4, r5, r6, pc}
 801fa68:	6823      	ldr	r3, [r4, #0]
 801fa6a:	2b00      	cmp	r3, #0
 801fa6c:	d0fb      	beq.n	801fa66 <_write_r+0x1a>
 801fa6e:	6033      	str	r3, [r6, #0]
 801fa70:	bd70      	pop	{r4, r5, r6, pc}
 801fa72:	bf00      	nop
 801fa74:	20000914 	.word	0x20000914

0801fa78 <_close_r>:
 801fa78:	b538      	push	{r3, r4, r5, lr}
 801fa7a:	4c07      	ldr	r4, [pc, #28]	; (801fa98 <_close_r+0x20>)
 801fa7c:	2300      	movs	r3, #0
 801fa7e:	4605      	mov	r5, r0
 801fa80:	4608      	mov	r0, r1
 801fa82:	6023      	str	r3, [r4, #0]
 801fa84:	f7f9 ff8c 	bl	80199a0 <_close>
 801fa88:	1c43      	adds	r3, r0, #1
 801fa8a:	d000      	beq.n	801fa8e <_close_r+0x16>
 801fa8c:	bd38      	pop	{r3, r4, r5, pc}
 801fa8e:	6823      	ldr	r3, [r4, #0]
 801fa90:	2b00      	cmp	r3, #0
 801fa92:	d0fb      	beq.n	801fa8c <_close_r+0x14>
 801fa94:	602b      	str	r3, [r5, #0]
 801fa96:	bd38      	pop	{r3, r4, r5, pc}
 801fa98:	20000914 	.word	0x20000914

0801fa9c <_fclose_r>:
 801fa9c:	b570      	push	{r4, r5, r6, lr}
 801fa9e:	2900      	cmp	r1, #0
 801faa0:	d048      	beq.n	801fb34 <_fclose_r+0x98>
 801faa2:	4605      	mov	r5, r0
 801faa4:	460c      	mov	r4, r1
 801faa6:	b110      	cbz	r0, 801faae <_fclose_r+0x12>
 801faa8:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801faaa:	2b00      	cmp	r3, #0
 801faac:	d048      	beq.n	801fb40 <_fclose_r+0xa4>
 801faae:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801fab0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801fab4:	07d0      	lsls	r0, r2, #31
 801fab6:	d440      	bmi.n	801fb3a <_fclose_r+0x9e>
 801fab8:	0599      	lsls	r1, r3, #22
 801faba:	d530      	bpl.n	801fb1e <_fclose_r+0x82>
 801fabc:	4621      	mov	r1, r4
 801fabe:	4628      	mov	r0, r5
 801fac0:	f7ff f8d4 	bl	801ec6c <__sflush_r>
 801fac4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801fac6:	4606      	mov	r6, r0
 801fac8:	b133      	cbz	r3, 801fad8 <_fclose_r+0x3c>
 801faca:	69e1      	ldr	r1, [r4, #28]
 801facc:	4628      	mov	r0, r5
 801face:	4798      	blx	r3
 801fad0:	2800      	cmp	r0, #0
 801fad2:	bfb8      	it	lt
 801fad4:	f04f 36ff 	movlt.w	r6, #4294967295	; 0xffffffff
 801fad8:	89a3      	ldrh	r3, [r4, #12]
 801fada:	061a      	lsls	r2, r3, #24
 801fadc:	d43c      	bmi.n	801fb58 <_fclose_r+0xbc>
 801fade:	6b21      	ldr	r1, [r4, #48]	; 0x30
 801fae0:	b141      	cbz	r1, 801faf4 <_fclose_r+0x58>
 801fae2:	f104 0340 	add.w	r3, r4, #64	; 0x40
 801fae6:	4299      	cmp	r1, r3
 801fae8:	d002      	beq.n	801faf0 <_fclose_r+0x54>
 801faea:	4628      	mov	r0, r5
 801faec:	f7ff fa4c 	bl	801ef88 <_free_r>
 801faf0:	2300      	movs	r3, #0
 801faf2:	6323      	str	r3, [r4, #48]	; 0x30
 801faf4:	6c61      	ldr	r1, [r4, #68]	; 0x44
 801faf6:	b121      	cbz	r1, 801fb02 <_fclose_r+0x66>
 801faf8:	4628      	mov	r0, r5
 801fafa:	f7ff fa45 	bl	801ef88 <_free_r>
 801fafe:	2300      	movs	r3, #0
 801fb00:	6463      	str	r3, [r4, #68]	; 0x44
 801fb02:	f7ff f9e5 	bl	801eed0 <__sfp_lock_acquire>
 801fb06:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801fb08:	2200      	movs	r2, #0
 801fb0a:	07db      	lsls	r3, r3, #31
 801fb0c:	81a2      	strh	r2, [r4, #12]
 801fb0e:	d51f      	bpl.n	801fb50 <_fclose_r+0xb4>
 801fb10:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801fb12:	f7fb ff95 	bl	801ba40 <__retarget_lock_close_recursive>
 801fb16:	f7ff f9e1 	bl	801eedc <__sfp_lock_release>
 801fb1a:	4630      	mov	r0, r6
 801fb1c:	bd70      	pop	{r4, r5, r6, pc}
 801fb1e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801fb20:	f7fb ff90 	bl	801ba44 <__retarget_lock_acquire_recursive>
 801fb24:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801fb28:	2b00      	cmp	r3, #0
 801fb2a:	d1c7      	bne.n	801fabc <_fclose_r+0x20>
 801fb2c:	6e66      	ldr	r6, [r4, #100]	; 0x64
 801fb2e:	f016 0601 	ands.w	r6, r6, #1
 801fb32:	d016      	beq.n	801fb62 <_fclose_r+0xc6>
 801fb34:	2600      	movs	r6, #0
 801fb36:	4630      	mov	r0, r6
 801fb38:	bd70      	pop	{r4, r5, r6, pc}
 801fb3a:	2b00      	cmp	r3, #0
 801fb3c:	d0fa      	beq.n	801fb34 <_fclose_r+0x98>
 801fb3e:	e7bd      	b.n	801fabc <_fclose_r+0x20>
 801fb40:	f7ff f99a 	bl	801ee78 <__sinit>
 801fb44:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801fb46:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801fb4a:	07d0      	lsls	r0, r2, #31
 801fb4c:	d4f5      	bmi.n	801fb3a <_fclose_r+0x9e>
 801fb4e:	e7b3      	b.n	801fab8 <_fclose_r+0x1c>
 801fb50:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801fb52:	f7fb ff79 	bl	801ba48 <__retarget_lock_release_recursive>
 801fb56:	e7db      	b.n	801fb10 <_fclose_r+0x74>
 801fb58:	6921      	ldr	r1, [r4, #16]
 801fb5a:	4628      	mov	r0, r5
 801fb5c:	f7ff fa14 	bl	801ef88 <_free_r>
 801fb60:	e7bd      	b.n	801fade <_fclose_r+0x42>
 801fb62:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801fb64:	f7fb ff70 	bl	801ba48 <__retarget_lock_release_recursive>
 801fb68:	4630      	mov	r0, r6
 801fb6a:	bd70      	pop	{r4, r5, r6, pc}

0801fb6c <_fstat_r>:
 801fb6c:	b538      	push	{r3, r4, r5, lr}
 801fb6e:	460b      	mov	r3, r1
 801fb70:	4c07      	ldr	r4, [pc, #28]	; (801fb90 <_fstat_r+0x24>)
 801fb72:	4605      	mov	r5, r0
 801fb74:	4611      	mov	r1, r2
 801fb76:	4618      	mov	r0, r3
 801fb78:	2300      	movs	r3, #0
 801fb7a:	6023      	str	r3, [r4, #0]
 801fb7c:	f7f9 ff00 	bl	8019980 <_fstat>
 801fb80:	1c43      	adds	r3, r0, #1
 801fb82:	d000      	beq.n	801fb86 <_fstat_r+0x1a>
 801fb84:	bd38      	pop	{r3, r4, r5, pc}
 801fb86:	6823      	ldr	r3, [r4, #0]
 801fb88:	2b00      	cmp	r3, #0
 801fb8a:	d0fb      	beq.n	801fb84 <_fstat_r+0x18>
 801fb8c:	602b      	str	r3, [r5, #0]
 801fb8e:	bd38      	pop	{r3, r4, r5, pc}
 801fb90:	20000914 	.word	0x20000914

0801fb94 <_isatty_r>:
 801fb94:	b538      	push	{r3, r4, r5, lr}
 801fb96:	4c07      	ldr	r4, [pc, #28]	; (801fbb4 <_isatty_r+0x20>)
 801fb98:	2300      	movs	r3, #0
 801fb9a:	4605      	mov	r5, r0
 801fb9c:	4608      	mov	r0, r1
 801fb9e:	6023      	str	r3, [r4, #0]
 801fba0:	f7f9 fee8 	bl	8019974 <_isatty>
 801fba4:	1c43      	adds	r3, r0, #1
 801fba6:	d000      	beq.n	801fbaa <_isatty_r+0x16>
 801fba8:	bd38      	pop	{r3, r4, r5, pc}
 801fbaa:	6823      	ldr	r3, [r4, #0]
 801fbac:	2b00      	cmp	r3, #0
 801fbae:	d0fb      	beq.n	801fba8 <_isatty_r+0x14>
 801fbb0:	602b      	str	r3, [r5, #0]
 801fbb2:	bd38      	pop	{r3, r4, r5, pc}
 801fbb4:	20000914 	.word	0x20000914

0801fbb8 <_lseek_r>:
 801fbb8:	b570      	push	{r4, r5, r6, lr}
 801fbba:	460d      	mov	r5, r1
 801fbbc:	4c08      	ldr	r4, [pc, #32]	; (801fbe0 <_lseek_r+0x28>)
 801fbbe:	4611      	mov	r1, r2
 801fbc0:	4606      	mov	r6, r0
 801fbc2:	461a      	mov	r2, r3
 801fbc4:	4628      	mov	r0, r5
 801fbc6:	2300      	movs	r3, #0
 801fbc8:	6023      	str	r3, [r4, #0]
 801fbca:	f7f9 feec 	bl	80199a6 <_lseek>
 801fbce:	1c43      	adds	r3, r0, #1
 801fbd0:	d000      	beq.n	801fbd4 <_lseek_r+0x1c>
 801fbd2:	bd70      	pop	{r4, r5, r6, pc}
 801fbd4:	6823      	ldr	r3, [r4, #0]
 801fbd6:	2b00      	cmp	r3, #0
 801fbd8:	d0fb      	beq.n	801fbd2 <_lseek_r+0x1a>
 801fbda:	6033      	str	r3, [r6, #0]
 801fbdc:	bd70      	pop	{r4, r5, r6, pc}
 801fbde:	bf00      	nop
 801fbe0:	20000914 	.word	0x20000914

0801fbe4 <__ascii_mbtowc>:
 801fbe4:	b082      	sub	sp, #8
 801fbe6:	b149      	cbz	r1, 801fbfc <__ascii_mbtowc+0x18>
 801fbe8:	b15a      	cbz	r2, 801fc02 <__ascii_mbtowc+0x1e>
 801fbea:	b16b      	cbz	r3, 801fc08 <__ascii_mbtowc+0x24>
 801fbec:	7813      	ldrb	r3, [r2, #0]
 801fbee:	600b      	str	r3, [r1, #0]
 801fbf0:	7812      	ldrb	r2, [r2, #0]
 801fbf2:	1c10      	adds	r0, r2, #0
 801fbf4:	bf18      	it	ne
 801fbf6:	2001      	movne	r0, #1
 801fbf8:	b002      	add	sp, #8
 801fbfa:	4770      	bx	lr
 801fbfc:	a901      	add	r1, sp, #4
 801fbfe:	2a00      	cmp	r2, #0
 801fc00:	d1f3      	bne.n	801fbea <__ascii_mbtowc+0x6>
 801fc02:	4610      	mov	r0, r2
 801fc04:	b002      	add	sp, #8
 801fc06:	4770      	bx	lr
 801fc08:	f06f 0001 	mvn.w	r0, #1
 801fc0c:	e7f4      	b.n	801fbf8 <__ascii_mbtowc+0x14>
 801fc0e:	bf00      	nop

0801fc10 <_read_r>:
 801fc10:	b570      	push	{r4, r5, r6, lr}
 801fc12:	460d      	mov	r5, r1
 801fc14:	4c08      	ldr	r4, [pc, #32]	; (801fc38 <_read_r+0x28>)
 801fc16:	4611      	mov	r1, r2
 801fc18:	4606      	mov	r6, r0
 801fc1a:	461a      	mov	r2, r3
 801fc1c:	4628      	mov	r0, r5
 801fc1e:	2300      	movs	r3, #0
 801fc20:	6023      	str	r3, [r4, #0]
 801fc22:	f7f9 fe77 	bl	8019914 <_read>
 801fc26:	1c43      	adds	r3, r0, #1
 801fc28:	d000      	beq.n	801fc2c <_read_r+0x1c>
 801fc2a:	bd70      	pop	{r4, r5, r6, pc}
 801fc2c:	6823      	ldr	r3, [r4, #0]
 801fc2e:	2b00      	cmp	r3, #0
 801fc30:	d0fb      	beq.n	801fc2a <_read_r+0x1a>
 801fc32:	6033      	str	r3, [r6, #0]
 801fc34:	bd70      	pop	{r4, r5, r6, pc}
 801fc36:	bf00      	nop
 801fc38:	20000914 	.word	0x20000914

0801fc3c <__ascii_wctomb>:
 801fc3c:	b121      	cbz	r1, 801fc48 <__ascii_wctomb+0xc>
 801fc3e:	2aff      	cmp	r2, #255	; 0xff
 801fc40:	d804      	bhi.n	801fc4c <__ascii_wctomb+0x10>
 801fc42:	700a      	strb	r2, [r1, #0]
 801fc44:	2001      	movs	r0, #1
 801fc46:	4770      	bx	lr
 801fc48:	4608      	mov	r0, r1
 801fc4a:	4770      	bx	lr
 801fc4c:	238a      	movs	r3, #138	; 0x8a
 801fc4e:	6003      	str	r3, [r0, #0]
 801fc50:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801fc54:	4770      	bx	lr
 801fc56:	bf00      	nop
